401000: endbr64 
401004: sub rsp, 8
401008: mov rax, 0
40100f: test rax, rax
401012: je 0x401016
401014: call rax
401016: add rsp, 8
40101a: ret 
401020: endbr64 
401024: bnd jmp qword ptr [rip + 0xbefed]
40102b: nop dword ptr [rax + rax]
401030: endbr64 
401034: bnd jmp qword ptr [rip + 0xbefe5]
40103b: nop dword ptr [rax + rax]
401040: endbr64 
401044: bnd jmp qword ptr [rip + 0xbefdd]
40104b: nop dword ptr [rax + rax]
401050: endbr64 
401054: bnd jmp qword ptr [rip + 0xbefd5]
40105b: nop dword ptr [rax + rax]
401060: endbr64 
401064: bnd jmp qword ptr [rip + 0xbefcd]
40106b: nop dword ptr [rax + rax]
401070: endbr64 
401074: bnd jmp qword ptr [rip + 0xbefc5]
40107b: nop dword ptr [rax + rax]
401080: endbr64 
401084: bnd jmp qword ptr [rip + 0xbefbd]
40108b: nop dword ptr [rax + rax]
401090: endbr64 
401094: bnd jmp qword ptr [rip + 0xbefb5]
40109b: nop dword ptr [rax + rax]
4010a0: endbr64 
4010a4: bnd jmp qword ptr [rip + 0xbefad]
4010ab: nop dword ptr [rax + rax]
4010b0: endbr64 
4010b4: bnd jmp qword ptr [rip + 0xbefa5]
4010bb: nop dword ptr [rax + rax]
4010c0: endbr64 
4010c4: bnd jmp qword ptr [rip + 0xbef9d]
4010cb: nop dword ptr [rax + rax]
4010d0: endbr64 
4010d4: bnd jmp qword ptr [rip + 0xbef95]
4010db: nop dword ptr [rax + rax]
4010e0: endbr64 
4010e4: bnd jmp qword ptr [rip + 0xbef8d]
4010eb: nop dword ptr [rax + rax]
4010f0: endbr64 
4010f4: bnd jmp qword ptr [rip + 0xbef85]
4010fb: nop dword ptr [rax + rax]
401100: endbr64 
401104: bnd jmp qword ptr [rip + 0xbef7d]
40110b: nop dword ptr [rax + rax]
401110: endbr64 
401114: bnd jmp qword ptr [rip + 0xbef75]
40111b: nop dword ptr [rax + rax]
401120: endbr64 
401124: bnd jmp qword ptr [rip + 0xbef6d]
40112b: nop dword ptr [rax + rax]
401130: endbr64 
401134: bnd jmp qword ptr [rip + 0xbef65]
40113b: nop dword ptr [rax + rax]
401140: endbr64 
401144: bnd jmp qword ptr [rip + 0xbef5d]
40114b: nop dword ptr [rax + rax]
401150: endbr64 
401154: bnd jmp qword ptr [rip + 0xbef55]
40115b: nop dword ptr [rax + rax]
401160: endbr64 
401164: bnd jmp qword ptr [rip + 0xbef4d]
40116b: nop dword ptr [rax + rax]
401170: endbr64 
401174: bnd jmp qword ptr [rip + 0xbef45]
40117b: nop dword ptr [rax + rax]
401180: endbr64 
401184: bnd jmp qword ptr [rip + 0xbef3d]
40118b: nop dword ptr [rax + rax]
401190: endbr64 
401194: bnd jmp qword ptr [rip + 0xbef35]
40119b: nop dword ptr [rax + rax]
4011a0: mov rdi, qword ptr [rsp + 0x10]
4011a5: call 0x426a00
4011aa: call 0x4011b4
4011af: call 0x4011b4
4011b4: endbr64 
4011b8: push rbx
4011b9: mov rbx, qword ptr fs:[0x10]
4011c2: sub rsp, 0x120
4011c9: mov rax, qword ptr fs:[0x28]
4011d2: mov qword ptr [rsp + 0x118], rax
4011da: xor eax, eax
4011dc: cmp qword ptr [rip + 0xc15f5], rbx
4011e3: je 0x401223
4011e5: mov eax, dword ptr fs:[0x18]
4011ed: test eax, eax
4011ef: jne 0x4011ff
4011f1: mov edx, 1
4011f6: cmpxchg dword ptr [rip + 0xc15d3], edx
4011fd: jmp 0x40121c
4011ff: xor eax, eax
401201: mov edx, 1
401206: lock cmpxchg dword ptr [rip + 0xc15c2], edx
40120e: je 0x40121c
401210: lea rdi, [rip + 0xc15b9]
401217: call 0x421250
40121c: mov qword ptr [rip + 0xc15b5], rbx
401223: inc dword ptr [rip + 0xc15ab]
401229: cmp dword ptr [rip + 0xc15b0], 0
401230: jne 0x401268
401232: mov dword ptr [rip + 0xc15a4], 1
40123c: mov eax, 0x10
401241: dec rax
401244: mov rsi, rsp
401247: cmp rax, -1
40124b: je 0x401257
40124d: mov qword ptr [rsi + rax*8], 0
401255: jmp 0x401241
401257: xor edx, edx
401259: mov edi, 1
40125e: or qword ptr [rsp], 0x20
401263: call 0x465340
401268: mov eax, dword ptr [rip + 0xc1572]
40126e: cmp eax, 1
401271: jne 0x401337
401277: mov dword ptr [rip + 0xc155f], 0
401281: mov eax, dword ptr [rip + 0xc154d]
401287: dec eax
401289: mov dword ptr [rip + 0xc1545], eax
40128f: jne 0x4012d5
401291: mov qword ptr [rip + 0xc153c], 0
40129c: mov edx, dword ptr fs:[0x18]
4012a4: test edx, edx
4012a6: jne 0x4012b0
4012a8: dec dword ptr [rip + 0xc1522]
4012ae: jmp 0x4012d5
4012b0: xchg dword ptr [rip + 0xc151a], eax
4012b6: dec eax
4012b8: jle 0x4012d5
4012ba: xor r10d, r10d
4012bd: mov edx, 1
4012c2: mov esi, 0x81
4012c7: mov eax, 0xca
4012cc: lea rdi, [rip + 0xc14fd]
4012d3: syscall 
4012d5: mov edi, 6
4012da: call 0x40f500
4012df: mov rbx, qword ptr fs:[0x10]
4012e8: cmp qword ptr [rip + 0xc14e9], rbx
4012ef: je 0x40132f
4012f1: mov eax, dword ptr fs:[0x18]
4012f9: test eax, eax
4012fb: jne 0x40130b
4012fd: mov edx, 1
401302: cmpxchg dword ptr [rip + 0xc14c7], edx
401309: jmp 0x401328
40130b: xor eax, eax
40130d: mov edx, 1
401312: lock cmpxchg dword ptr [rip + 0xc14b6], edx
40131a: je 0x401328
40131c: lea rdi, [rip + 0xc14ad]
401323: call 0x421250
401328: mov qword ptr [rip + 0xc14a9], rbx
40132f: inc dword ptr [rip + 0xc149f]
401335: jmp 0x40133c
401337: cmp eax, 2
40133a: jne 0x401397
40133c: lea rdx, [rsp + 0x88]
401344: xor eax, eax
401346: mov ecx, 0x24
40134b: mov dword ptr [rip + 0xc148b], 3
401355: mov qword ptr [rsp + 0x80], 0
401361: mov rdi, rdx
401364: rep stosd dword ptr [rdi], eax
401366: mov eax, 0x10
40136b: lea rsi, [rsp + 0x80]
401373: mov qword ptr [rsi + rax*8], 0xffffffffffffffff
40137b: dec rax
40137e: jne 0x40136b
401380: xor edx, edx
401382: mov edi, 6
401387: mov dword ptr [rsp + 0x108], 0
401392: call 0x465300
401397: cmp dword ptr [rip + 0xc1442], 3
40139e: jne 0x4013b4
4013a0: mov dword ptr [rip + 0xc1436], 4
4013aa: mov edi, 6
4013af: call 0x40f500
4013b4: cmp dword ptr [rip + 0xc1425], 4
4013bb: jne 0x4013c8
4013bd: mov dword ptr [rip + 0xc1419], 5
4013c7: hlt 
4013c8: cmp dword ptr [rip + 0xc1411], 5
4013cf: jne 0x4013e5
4013d1: mov dword ptr [rip + 0xc1405], 6
4013db: mov edi, 0x7f
4013e0: call 0x4505c0
4013e5: hlt 
4013e6: jmp 0x4013e5
4013e8: test dword ptr [rbp], 0x8000
4013ef: jne 0x40141a
4013f1: mov rdi, qword ptr [rbp + 0x88]
4013f8: mov eax, dword ptr [rdi + 4]
4013fb: sub eax, 1
4013fe: mov dword ptr [rdi + 4], eax
401401: jne 0x40141a
401403: mov qword ptr [rdi + 8], 0
40140b: mov edx, dword ptr fs:[0x18]
401413: test edx, edx
401415: jne 0x401422
401417: sub dword ptr [rdi], 1
40141a: mov rdi, r8
40141d: call 0x490df0
401422: xchg dword ptr [rdi], eax
401424: sub eax, 1
401427: jle 0x40141a
401429: xor r10d, r10d
40142c: mov edx, 1
401431: mov esi, 0x81
401436: mov eax, 0xca
40143b: syscall 
40143d: jmp 0x40141a
40143f: test dword ptr [rbx], 0x8000
401445: jne 0x401470
401447: mov rdi, qword ptr [rbx + 0x88]
40144e: mov eax, dword ptr [rdi + 4]
401451: sub eax, 1
401454: mov dword ptr [rdi + 4], eax
401457: jne 0x401470
401459: mov qword ptr [rdi + 8], 0
401461: mov edx, dword ptr fs:[0x18]
401469: test edx, edx
40146b: jne 0x401478
40146d: sub dword ptr [rdi], 1
401470: mov rdi, r8
401473: call 0x490df0
401478: xchg dword ptr [rdi], eax
40147a: sub eax, 1
40147d: jle 0x401470
40147f: xor r10d, r10d
401482: mov edx, 1
401487: mov esi, 0x81
40148c: mov eax, 0xca
401491: syscall 
401493: jmp 0x401470
401495: test dword ptr [rbp], 0x8000
40149c: jne 0x4014c7
40149e: mov rdi, qword ptr [rbp + 0x88]
4014a5: mov eax, dword ptr [rdi + 4]
4014a8: sub eax, 1
4014ab: mov dword ptr [rdi + 4], eax
4014ae: jne 0x4014c7
4014b0: mov qword ptr [rdi + 8], 0
4014b8: mov edx, dword ptr fs:[0x18]
4014c0: test edx, edx
4014c2: jne 0x4014cf
4014c4: sub dword ptr [rdi], 1
4014c7: mov rdi, r8
4014ca: call 0x490df0
4014cf: xchg dword ptr [rdi], eax
4014d1: sub eax, 1
4014d4: jle 0x4014c7
4014d6: xor r10d, r10d
4014d9: mov edx, 1
4014de: mov esi, 0x81
4014e3: mov eax, 0xca
4014e8: syscall 
4014ea: jmp 0x4014c7
4014ec: test dword ptr [rbp], 0x8000
4014f3: jne 0x40151e
4014f5: mov rdi, qword ptr [rbp + 0x88]
4014fc: mov eax, dword ptr [rdi + 4]
4014ff: sub eax, 1
401502: mov dword ptr [rdi + 4], eax
401505: jne 0x40151e
401507: mov qword ptr [rdi + 8], 0
40150f: mov edx, dword ptr fs:[0x18]
401517: test edx, edx
401519: jne 0x401526
40151b: sub dword ptr [rdi], 1
40151e: mov rdi, r8
401521: call 0x490df0
401526: xchg dword ptr [rdi], eax
401528: sub eax, 1
40152b: jle 0x40151e
40152d: xor r10d, r10d
401530: mov edx, 1
401535: mov esi, 0x81
40153a: mov eax, 0xca
40153f: syscall 
401541: jmp 0x40151e
401543: test dword ptr [rbp], 0x8000
40154a: jne 0x401575
40154c: mov rdi, qword ptr [rbp + 0x88]
401553: mov eax, dword ptr [rdi + 4]
401556: sub eax, 1
401559: mov dword ptr [rdi + 4], eax
40155c: jne 0x401575
40155e: mov qword ptr [rdi + 8], 0
401566: mov edx, dword ptr fs:[0x18]
40156e: test edx, edx
401570: jne 0x40157d
401572: sub dword ptr [rdi], 1
401575: mov rdi, r8
401578: call 0x490df0
40157d: xchg dword ptr [rdi], eax
40157f: sub eax, 1
401582: jle 0x401575
401584: xor r10d, r10d
401587: mov edx, 1
40158c: mov esi, 0x81
401591: mov eax, 0xca
401596: syscall 
401598: jmp 0x401575
40159a: test dword ptr [r12], 0x8000
4015a2: jne 0x4015ce
4015a4: mov rdi, qword ptr [r12 + 0x88]
4015ac: mov eax, dword ptr [rdi + 4]
4015af: sub eax, 1
4015b2: mov dword ptr [rdi + 4], eax
4015b5: jne 0x4015ce
4015b7: mov qword ptr [rdi + 8], 0
4015bf: mov edx, dword ptr fs:[0x18]
4015c7: test edx, edx
4015c9: jne 0x4015d6
4015cb: sub dword ptr [rdi], 1
4015ce: mov rdi, r8
4015d1: call 0x490df0
4015d6: xchg dword ptr [rdi], eax
4015d8: sub eax, 1
4015db: jle 0x4015ce
4015dd: xor r10d, r10d
4015e0: mov edx, 1
4015e5: mov esi, 0x81
4015ea: mov eax, 0xca
4015ef: syscall 
4015f1: jmp 0x4015ce
4015f3: endbr64 
4015f7: push rax
4015f8: pop rax
4015f9: push rax
4015fa: call 0x4011b4
4015ff: call 0x4011b4
401604: call 0x4011b4
401609: test dword ptr [rbx], 0x8000
40160f: jne 0x40163a
401611: mov rdi, qword ptr [rbx + 0x88]
401618: mov eax, dword ptr [rdi + 4]
40161b: sub eax, 1
40161e: mov dword ptr [rdi + 4], eax
401621: jne 0x40163a
401623: mov qword ptr [rdi + 8], 0
40162b: mov edx, dword ptr fs:[0x18]
401633: test edx, edx
401635: jne 0x401642
401637: sub dword ptr [rdi], 1
40163a: mov rdi, r8
40163d: call 0x490df0
401642: xchg dword ptr [rdi], eax
401644: sub eax, 1
401647: jle 0x40163a
401649: xor r10d, r10d
40164c: mov edx, 1
401651: mov esi, 0x81
401656: mov eax, 0xca
40165b: syscall 
40165d: jmp 0x40163a
40165f: test dword ptr [rbx], 0x8000
401665: jne 0x401690
401667: mov rdi, qword ptr [rbx + 0x88]
40166e: mov eax, dword ptr [rdi + 4]
401671: sub eax, 1
401674: mov dword ptr [rdi + 4], eax
401677: jne 0x401690
401679: mov qword ptr [rdi + 8], 0
401681: mov edx, dword ptr fs:[0x18]
401689: test edx, edx
40168b: jne 0x401698
40168d: sub dword ptr [rdi], 1
401690: mov rdi, r8
401693: call 0x490df0
401698: xchg dword ptr [rdi], eax
40169a: sub eax, 1
40169d: jle 0x401690
40169f: xor r10d, r10d
4016a2: mov edx, 1
4016a7: mov esi, 0x81
4016ac: mov eax, 0xca
4016b1: syscall 
4016b3: jmp 0x401690
4016b5: test dword ptr [rbx], 0x8000
4016bb: jne 0x4016e6
4016bd: mov rdi, qword ptr [rbx + 0x88]
4016c4: mov eax, dword ptr [rdi + 4]
4016c7: sub eax, 1
4016ca: mov dword ptr [rdi + 4], eax
4016cd: jne 0x4016e6
4016cf: mov qword ptr [rdi + 8], 0
4016d7: mov edx, dword ptr fs:[0x18]
4016df: test edx, edx
4016e1: jne 0x4016ee
4016e3: sub dword ptr [rdi], 1
4016e6: mov rdi, r8
4016e9: call 0x490df0
4016ee: xchg dword ptr [rdi], eax
4016f0: sub eax, 1
4016f3: jle 0x4016e6
4016f5: xor r10d, r10d
4016f8: mov edx, 1
4016fd: mov esi, 0x81
401702: mov eax, 0xca
401707: syscall 
401709: jmp 0x4016e6
40170b: call 0x4011b4
401710: call 0x4011b4
401715: call 0x4011b4
40171a: call 0x4011b4
40171f: call 0x4011b4
401724: call 0x4011b4
401729: call 0x4011b4
40172e: call 0x4011b4
401733: call 0x4011b4
401738: call 0x4011b4
40173d: call 0x4011b4
401742: call 0x4011b4
401747: call 0x4011b4
40174c: call 0x4011b4
401751: call 0x4011b4
401756: call 0x4011b4
40175b: call 0x4011b4
401760: call 0x4011b4
401765: call 0x4011b4
40176a: call 0x4011b4
40176f: call 0x4011b4
401774: call 0x4011b4
401779: call 0x4011b4
40177e: call 0x4011b4
401783: nop word ptr cs:[rax + rax]
40178d: nop dword ptr [rax]
401790: endbr64 
401794: mov r8, qword ptr [rip + 0xc185d]
40179b: test r8, r8
40179e: je 0x4017ba
4017a0: mov ecx, 0xe
4017a5: lea rdi, [rip + 0xae6e4]
4017ac: mov rsi, r8
4017af: repe cmpsb byte ptr [rsi], byte ptr [rdi]
4017b1: seta al
4017b4: sbb al, 0
4017b6: test al, al
4017b8: jne 0x4017bb
4017ba: ret 
4017bb: push rax
4017bc: mov rdi, r8
4017bf: call 0x426a00
4017c4: mov qword ptr [rip + 0xc1829], 0
4017cf: pop rdx
4017d0: ret 
4017d1: nop word ptr cs:[rax + rax]
4017db: nop dword ptr [rax + rax]
4017e0: endbr64 
4017e4: push r15
4017e6: push r14
4017e8: push r13
4017ea: push r12
4017ec: push rbp
4017ed: push rbx
4017ee: sub rsp, 8
4017f2: mov eax, dword ptr [rip + 0xc1590]
4017f8: cmp eax, 1
4017fb: je 0x4018d2
401801: cmp eax, 2
401804: je 0x4019f3
40180a: mov rax, qword ptr [rip + 0xc159f]
401811: test rax, rax
401814: je 0x4018c4
40181a: or rbp, 0xffffffffffffffff
40181e: mov r12, rax
401821: test r12, r12
401824: jle 0x401851
401826: mov rax, r12
401829: mov qword ptr [rip + 0xbf830], r12
401830: xor r12b, r12b
401833: sar rax, 1
401836: mov qword ptr [rip + 0xbf833], r12
40183d: mov qword ptr [rip + 0xbf824], rax
401844: mov rax, r12
401847: sar rax, 1
40184a: mov qword ptr [rip + 0xbf827], rax
401851: mov rax, qword ptr [rip + 0xc1560]
401858: test rax, rax
40185b: je 0x401860
40185d: mov rbp, rax
401860: test rbp, rbp
401863: jle 0x401890
401865: mov rax, rbp
401868: mov qword ptr [rip + 0xbf7d1], rbp
40186f: xor bpl, bpl
401872: sar rax, 1
401875: mov qword ptr [rip + 0xbf7d4], rbp
40187c: mov qword ptr [rip + 0xbf7c5], rax
401883: mov rax, rbp
401886: sar rax, 1
401889: mov qword ptr [rip + 0xbf7c8], rax
401890: mov rax, qword ptr [rip + 0xc1529]
401897: test rax, rax
40189a: jne 0x4018ae
40189c: imul rax, qword ptr [rip + 0xbf7ac], 3
4018a4: mov ecx, 4
4018a9: cqo 
4018ab: idiv rcx
4018ae: mov qword ptr [rip + 0xc1eab], rax
4018b5: add rsp, 8
4018b9: pop rbx
4018ba: pop rbp
4018bb: pop r12
4018bd: pop r13
4018bf: pop r14
4018c1: pop r15
4018c3: ret 
4018c4: mov rax, qword ptr [rip + 0xc14ed]
4018cb: test rax, rax
4018ce: jne 0x40185d
4018d0: jmp 0x401890
4018d2: mov edi, 0xbc
4018d7: mov r13d, dword ptr [rip + 0xc14ae]
4018de: call 0x44ee30
4018e3: mov edi, 0xbf
4018e8: mov r12, rax
4018eb: call 0x44ee30
4018f0: mov edi, 0xc2
4018f5: mov r14, rax
4018f8: call 0x44ee30
4018fd: mov rbp, rax
401900: test rax, rax
401903: jle 0x40198e
401909: xor edi, edi
40190b: mov r15d, 3
401911: test byte ptr [rip + 0xc1417], 0x10
401918: je 0x4019de
40191e: cmp r13d, 3
401922: jle 0x40199f
401924: mov esi, 3
401929: test edi, edi
40192b: jne 0x401ac1
401931: xor ecx, ecx
401933: xor r9d, r9d
401936: mov r11d, 1
40193c: mov r10d, 4
401942: lea r8d, [rcx + 1]
401946: mov eax, r10d
401949: cpuid 
40194b: test al, 0x1f
40194d: je 0x4019a8
40194f: mov ecx, eax
401951: shr ecx, 5
401954: and ecx, 7
401957: cmp ecx, 2
40195a: je 0x401a73
401960: cmp ecx, 3
401963: jne 0x401989
401965: test sil, 2
401969: je 0x401989
40196b: shr eax, 0xe
40196e: shr edx, 1
401970: and esi, 0xfffffffd
401973: and eax, 0x3ff
401978: mov r11d, edx
40197b: mov edi, eax
40197d: and r11d, 1
401981: test esi, esi
401983: je 0x401ace
401989: mov ecx, r8d
40198c: jmp 0x401942
40198e: mov rbp, r14
401991: or edi, 0xffffffff
401994: mov r15d, 2
40199a: jmp 0x401911
40199f: xor r9d, r9d
4019a2: mov r11d, 1
4019a8: movzx edi, byte ptr [rip + 0xc1377]
4019af: test rbp, rbp
4019b2: jle 0x4019c3
4019b4: test edi, edi
4019b6: je 0x4019c3
4019b8: mov rax, rbp
4019bb: cqo 
4019bd: idiv rdi
4019c0: mov rbp, rax
4019c3: test r11b, r11b
4019c6: jne 0x4019de
4019c8: test r9d, r9d
4019cb: je 0x4019db
4019cd: mov rax, r14
4019d0: movsxd r9, r9d
4019d3: cqo 
4019d5: idiv r9
4019d8: mov r14, rax
4019db: add rbp, r14
4019de: mov rax, qword ptr [rip + 0xc13cb]
4019e5: test rax, rax
4019e8: je 0x401821
4019ee: jmp 0x40181e
4019f3: mov edi, 0xbc
4019f8: call 0x44e930
4019fd: mov edi, 0xbf
401a02: mov r12, rax
401a05: call 0x44e930
401a0a: mov edi, 0xc2
401a0f: mov rbp, rax
401a12: call 0x44e930
401a17: mov rdi, rax
401a1a: mov eax, 0x80000000
401a1f: cpuid 
401a21: mov esi, eax
401a23: test rdi, rdi
401a26: jle 0x401a50
401a28: cmp eax, 0x80000007
401a2d: ja 0x401a90
401a2f: mov eax, 1
401a34: cpuid 
401a36: and edx, 0x10000000
401a3c: mov esi, eax
401a3e: je 0x401a4d
401a40: shr ebx, 0x10
401a43: mov ecx, ebx
401a45: and ecx, 0xff
401a4b: jne 0x401aa8
401a4d: add rbp, rdi
401a50: cmp esi, 0x80000000
401a56: jbe 0x4019de
401a58: mov eax, 0x80000001
401a5d: cpuid 
401a5f: and ch, 1
401a62: je 0x401ab7
401a64: mov dword ptr [rip + 0xc1cfa], 0xffffffff
401a6e: jmp 0x4019de
401a73: test sil, 1
401a77: je 0x401989
401a7d: shr eax, 0xe
401a80: and esi, 0xfffffffe
401a83: and eax, 0x3ff
401a88: mov r9d, eax
401a8b: jmp 0x401981
401a90: mov eax, 0x80000008
401a95: cpuid 
401a97: shr ecx, 0xc
401a9a: mov ebx, 1
401a9f: mov esi, eax
401aa1: and ecx, 0xf
401aa4: shl ebx, cl
401aa6: mov ecx, ebx
401aa8: mov rax, rdi
401aab: mov ecx, ecx
401aad: cqo 
401aaf: idiv rcx
401ab2: mov rdi, rax
401ab5: jmp 0x401a4d
401ab7: test edx, edx
401ab9: jns 0x4019de
401abf: jmp 0x401a64
401ac1: mov esi, 1
401ac6: or edi, 0xffffffff
401ac9: jmp 0x401931
401ace: cmp r13d, 0xa
401ad2: jle 0x401b69
401ad8: test r9d, r9d
401adb: mov eax, 1
401ae0: setg cl
401ae3: xor r8d, r8d
401ae6: cmp r15d, 3
401aea: sete r8b
401aee: mov edx, r8d
401af1: and edx, ecx
401af3: test edi, edi
401af5: jg 0x401b02
401af7: xor eax, eax
401af9: cmp r15d, 2
401afd: sete al
401b00: and eax, ecx
401b02: lea r8d, [rax + rax]
401b06: mov r13d, 0xb
401b0c: or r8d, edx
401b0f: jmp 0x401b1c
401b11: cmp ecx, 0x200
401b17: je 0x401b83
401b19: mov esi, r10d
401b1c: test r8d, r8d
401b1f: je 0x401b69
401b21: lea r10d, [rsi + 1]
401b25: mov eax, r13d
401b28: mov ecx, esi
401b2a: cpuid 
401b2c: and ecx, 0xff00
401b32: and ebx, 0xff
401b38: je 0x401b69
401b3a: test ecx, ecx
401b3c: je 0x401b69
401b3e: cmp ecx, 0x100
401b44: jne 0x401b11
401b46: test r8b, 1
401b4a: je 0x401b19
401b4c: bsr ecx, r9d
401b50: or r9d, 0xffffffff
401b54: add ecx, 1
401b57: lea eax, [rbx - 1]
401b5a: and r8d, 0xfffffffe
401b5e: shl r9d, cl
401b61: not r9d
401b64: and r9d, eax
401b67: jmp 0x401b19
401b69: cmp r9d, 1
401b6d: sbb r9d, -1
401b71: test edi, edi
401b73: jle 0x401bae
401b75: cmp r15d, 2
401b79: je 0x401bc6
401b7b: add edi, 1
401b7e: jmp 0x4019af
401b83: test r8b, 2
401b87: je 0x401b19
401b89: sub ebx, 1
401b8c: cmp r15d, 2
401b90: je 0x401c22
401b96: bsr ecx, edi
401b99: or edi, 0xffffffff
401b9c: add ecx, 1
401b9f: shl edi, cl
401ba1: not edi
401ba3: and edi, ebx
401ba5: and r8d, 0xfffffffd
401ba9: jmp 0x401b19
401bae: cmp r15d, 2
401bb2: je 0x401bc6
401bb4: test edi, edi
401bb6: je 0x4019c3
401bbc: mov edi, 0xffffffff
401bc1: jmp 0x4019af
401bc6: mov edx, dword ptr [rip + 0xc11c4]
401bcc: mov eax, dword ptr [rip + 0xc11c2]
401bd2: test r9d, r9d
401bd5: je 0x401c14
401bd7: mov edi, r9d
401bda: cmp r9d, 2
401bde: jbe 0x4019af
401be4: cmp edx, 6
401be7: jne 0x4019af
401bed: sub eax, 0x37
401bf0: cmp eax, 0x26
401bf3: ja 0x4019af
401bf9: lea rdx, [rip + 0x96a04]
401c00: movsxd rax, dword ptr [rdx + rax*4]
401c04: add rax, rdx
401c07: notrack jmp rax
401c0a: mov edi, 2
401c0f: jmp 0x4019af
401c14: test r11b, r11b
401c17: je 0x4019db
401c1d: jmp 0x4019de
401c22: bsr ecx, r9d
401c26: or r9d, 0xffffffff
401c2a: add ecx, 1
401c2d: shl r9d, cl
401c30: not r9d
401c33: and r9d, ebx
401c36: jmp 0x401ba5
401c3b: nop dword ptr [rax + rax]
401c40: endbr64 
401c44: xor ebp, ebp
401c46: mov r9, rdx
401c49: pop rsi
401c4a: mov rdx, rsp
401c4d: and rsp, 0xfffffffffffffff0
401c51: push rax
401c52: push rsp
401c53: mov r8, 0x4030f0
401c5a: mov rcx, 0x403050
401c61: mov rdi, 0x401e53
401c68: call 0x4023f0
401c6e: hlt 
401c6f: nop 
401c70: endbr64 
401c74: ret 
401c75: nop word ptr cs:[rax + rax]
401c7f: nop 
401c80: mov eax, 0x4c1b10
401c85: cmp rax, 0x4c1b10
401c8b: je 0x401ca0
401c8d: mov eax, 0
401c92: test rax, rax
401c95: je 0x401ca0
401c97: mov edi, 0x4c1b10
401c9c: jmp rax
401c9e: nop 
401ca0: ret 
401ca1: nop word ptr cs:[rax + rax]
401cac: nop dword ptr [rax]
401cb0: mov esi, 0x4c1b10
401cb5: sub rsi, 0x4c1b10
401cbc: mov rax, rsi
401cbf: shr rsi, 0x3f
401cc3: sar rax, 3
401cc7: add rsi, rax
401cca: sar rsi, 1
401ccd: je 0x401ce0
401ccf: mov eax, 0
401cd4: test rax, rax
401cd7: je 0x401ce0
401cd9: mov edi, 0x4c1b10
401cde: jmp rax
401ce0: ret 
401ce1: nop word ptr cs:[rax + rax]
401cec: nop dword ptr [rax]
401cf0: endbr64 
401cf4: cmp byte ptr [rip + 0xc0525], 0
401cfb: jne 0x401d28
401cfd: push rbp
401cfe: mov rbp, rsp
401d01: call 0x401c80
401d06: mov eax, 0x492a90
401d0b: test rax, rax
401d0e: je 0x401d1a
401d10: mov edi, 0x4b1070
401d15: call 0x492a90
401d1a: mov byte ptr [rip + 0xc04ff], 1
401d21: pop rbp
401d22: ret 
401d23: nop dword ptr [rax + rax]
401d28: ret 
401d29: nop dword ptr [rax]
401d30: endbr64 
401d34: mov eax, 0x492830
401d39: test rax, rax
401d3c: je 0x401d60
401d3e: push rbp
401d3f: mov esi, 0x4c2240
401d44: mov edi, 0x4b1070
401d49: mov rbp, rsp
401d4c: call 0x492830
401d51: pop rbp
401d52: jmp 0x401cb0
401d57: nop word ptr [rax + rax]
401d60: jmp 0x401cb0
401d65: endbr64 
401d69: push rbp
401d6a: mov rbp, rsp
401d6d: sub rsp, 0x10
401d71: mov eax, edi
401d73: mov byte ptr [rbp - 4], al
401d76: movsx eax, byte ptr [rbp - 4]
401d7a: sub eax, 0x61
401d7d: cmp eax, 4
401d80: ja 0x401e38
401d86: mov eax, eax
401d88: lea rdx, [rax*4]
401d90: lea rax, [rip + 0x9327d]
401d97: mov eax, dword ptr [rdx + rax]
401d9a: cdqe 
401d9c: lea rdx, [rip + 0x93271]
401da3: add rax, rdx
401da6: notrack jmp rax
401da9: movsx eax, byte ptr [rbp - 4]
401dad: sub eax, 0x20
401db0: mov esi, eax
401db2: lea rdi, [rip + 0x9324f]
401db9: mov eax, 0
401dbe: call 0x410cd0
401dc3: jmp 0x401e50
401dc8: movsx eax, byte ptr [rbp - 4]
401dcc: sub eax, 0x20
401dcf: mov esi, eax
401dd1: lea rdi, [rip + 0x93230]
401dd8: mov eax, 0
401ddd: call 0x410cd0
401de2: jmp 0x401e50
401de4: movsx eax, byte ptr [rbp - 4]
401de8: sub eax, 0x20
401deb: mov esi, eax
401ded: lea rdi, [rip + 0x93214]
401df4: mov eax, 0
401df9: call 0x410cd0
401dfe: jmp 0x401e50
401e00: movsx eax, byte ptr [rbp - 4]
401e04: sub eax, 0x20
401e07: mov esi, eax
401e09: lea rdi, [rip + 0x931f8]
401e10: mov eax, 0
401e15: call 0x410cd0
401e1a: jmp 0x401e50
401e1c: movsx eax, byte ptr [rbp - 4]
401e20: sub eax, 0x20
401e23: mov esi, eax
401e25: lea rdi, [rip + 0x931dc]
401e2c: mov eax, 0
401e31: call 0x410cd0
401e36: jmp 0x401e50
401e38: movsx eax, byte ptr [rbp - 4]
401e3c: mov esi, eax
401e3e: lea rdi, [rip + 0x931c3]
401e45: mov eax, 0
401e4a: call 0x410cd0
401e4f: nop 
401e50: nop 
401e51: leave 
401e52: ret 
401e53: endbr64 
401e57: push rbp
401e58: mov rbp, rsp
401e5b: sub rsp, 0xc0
401e62: mov dword ptr [rbp - 0xb4], edi
401e68: mov qword ptr [rbp - 0xc0], rsi
401e6f: mov rax, qword ptr fs:[0x28]
401e78: mov qword ptr [rbp - 8], rax
401e7c: xor eax, eax
401e7e: cmp dword ptr [rbp - 0xb4], 1
401e85: jg 0x401e9d
401e87: lea rdi, [rip + 0x9319a]
401e8e: call 0x418990
401e93: mov eax, 1
401e98: jmp 0x402053
401e9d: mov rax, qword ptr [rbp - 0xc0]
401ea4: add rax, 8
401ea8: mov rax, qword ptr [rax]
401eab: lea rdx, [rbp - 0xa0]
401eb2: mov rsi, rdx
401eb5: mov rdi, rax
401eb8: call 0x450bb0
401ebd: test eax, eax
401ebf: je 0x401eed
401ec1: mov rax, qword ptr [rbp - 0xc0]
401ec8: add rax, 8
401ecc: mov rax, qword ptr [rax]
401ecf: mov rsi, rax
401ed2: lea rdi, [rip + 0x93167]
401ed9: mov eax, 0
401ede: call 0x410cd0
401ee3: mov eax, 1
401ee8: jmp 0x402053
401eed: lea rdi, [rip + 0x93164]
401ef4: mov eax, 0
401ef9: call 0x410cd0
401efe: call 0x41aaa0
401f03: mov byte ptr [rbp - 0xa5], al
401f09: mov rax, qword ptr [rbp - 0xc0]
401f10: add rax, 8
401f14: mov rax, qword ptr [rax]
401f17: mov esi, 0
401f1c: mov rdi, rax
401f1f: mov eax, 0
401f24: call 0x450c90
401f29: mov dword ptr [rbp - 0xa4], eax
401f2f: cmp dword ptr [rbp - 0xa4], 0
401f36: js 0x40202c
401f3c: lea rcx, [rbp - 0x10]
401f40: mov eax, dword ptr [rbp - 0xa4]
401f46: mov edx, 1
401f4b: mov rsi, rcx
401f4e: mov edi, eax
401f50: call 0x450dc0
401f55: test rax, rax
401f58: jle 0x401f68
401f5a: movzx eax, byte ptr [rbp - 0x10]
401f5e: movsx eax, al
401f61: mov edi, eax
401f63: call 0x401d65
401f68: lea rcx, [rbp - 0x10]
401f6c: mov eax, dword ptr [rbp - 0xa4]
401f72: mov edx, 1
401f77: mov rsi, rcx
401f7a: mov edi, eax
401f7c: call 0x450dc0
401f81: test rax, rax
401f84: jle 0x401f94
401f86: movzx eax, byte ptr [rbp - 0x10]
401f8a: movsx eax, al
401f8d: mov edi, eax
401f8f: call 0x401d65
401f94: lea rcx, [rbp - 0x10]
401f98: mov eax, dword ptr [rbp - 0xa4]
401f9e: mov edx, 1
401fa3: mov rsi, rcx
401fa6: mov edi, eax
401fa8: call 0x450dc0
401fad: test rax, rax
401fb0: jle 0x401fc0
401fb2: movzx eax, byte ptr [rbp - 0x10]
401fb6: movsx eax, al
401fb9: mov edi, eax
401fbb: call 0x401d65
401fc0: lea rcx, [rbp - 0x10]
401fc4: mov eax, dword ptr [rbp - 0xa4]
401fca: mov edx, 1
401fcf: mov rsi, rcx
401fd2: mov edi, eax
401fd4: call 0x450dc0
401fd9: test rax, rax
401fdc: jle 0x401fec
401fde: movzx eax, byte ptr [rbp - 0x10]
401fe2: movsx eax, al
401fe5: mov edi, eax
401fe7: call 0x401d65
401fec: lea rcx, [rbp - 0x10]
401ff0: mov eax, dword ptr [rbp - 0xa4]
401ff6: mov edx, 1
401ffb: mov rsi, rcx
401ffe: mov edi, eax
402000: call 0x450dc0
402005: test rax, rax
402008: jle 0x402018
40200a: movzx eax, byte ptr [rbp - 0x10]
40200e: movsx eax, al
402011: mov edi, eax
402013: call 0x401d65
402018: mov eax, dword ptr [rbp - 0xa4]
40201e: mov edi, eax
402020: call 0x450f30
402025: mov eax, 0
40202a: jmp 0x402053
40202c: mov rax, qword ptr [rbp - 0xc0]
402033: add rax, 8
402037: mov rax, qword ptr [rax]
40203a: mov rsi, rax
40203d: lea rdi, [rip + 0x93034]
402044: mov eax, 0
402049: call 0x410cd0
40204e: mov eax, 1
402053: mov rdx, qword ptr [rbp - 8]
402057: xor rdx, qword ptr fs:[0x28]
402060: je 0x402067
402062: call 0x4547a0
402067: leave 
402068: ret 
402069: nop dword ptr [rax]
402070: push rbx
402071: sub rsp, 0x88
402078: test rdi, rdi
40207b: je 0x4020d5
40207d: mov r8, rdx
402080: mov r9, rcx
402083: mov eax, 1
402088: cpuid 
40208a: mov dword ptr [rip + 0xc0c9c], edx
402090: mov edx, eax
402092: shr edx, 8
402095: mov dword ptr [rip + 0xc0c89], ebx
40209b: and edx, 0xf
40209e: mov dword ptr [rip + 0xc0c84], ecx
4020a4: mov dword ptr [rip + 0xc0c76], eax
4020aa: mov dword ptr [rdi], edx
4020ac: mov edx, eax
4020ae: shr edx, 4
4020b1: and edx, 0xf
4020b4: mov dword ptr [rsi], edx
4020b6: mov edx, eax
4020b8: shr edx, 0xc
4020bb: and edx, 0xf0
4020c1: mov dword ptr [r8], edx
4020c4: mov edx, eax
4020c6: and edx, 0xf
4020c9: mov dword ptr [r9], edx
4020cc: cmp dword ptr [rdi], 0xf
4020cf: je 0x40223d
4020d5: cmp dword ptr [rip + 0xc0cb0], 6
4020dc: jle 0x4020ff
4020de: mov eax, 7
4020e3: xor ecx, ecx
4020e5: cpuid 
4020e7: mov dword ptr [rip + 0xc0c43], eax
4020ed: mov dword ptr [rip + 0xc0c41], ebx
4020f3: mov dword ptr [rip + 0xc0c3f], ecx
4020f9: mov dword ptr [rip + 0xc0c3d], edx
4020ff: cmp dword ptr [rip + 0xc0c86], 0xc
402106: jle 0x40212c
402108: mov eax, 0xd
40210d: mov ecx, 1
402112: cpuid 
402114: mov dword ptr [rip + 0xc0c36], eax
40211a: mov dword ptr [rip + 0xc0c34], ebx
402120: mov dword ptr [rip + 0xc0c32], ecx
402126: mov dword ptr [rip + 0xc0c30], edx
40212c: mov esi, dword ptr [rip + 0xc0bf6]
402132: test esi, 0x8000000
402138: je 0x402234
40213e: xor ecx, ecx
402140: xgetbv 
402143: mov edx, eax
402145: and edx, 6
402148: cmp edx, 6
40214b: je 0x402252
402151: cmp dword ptr [rip + 0xc0c34], 0xc
402158: jle 0x402234
40215e: mov eax, 0xd
402163: xor ecx, ecx
402165: cpuid 
402167: test ebx, ebx
402169: je 0x402234
40216f: add ebx, 0x7f
402172: and ebx, 0xffffffc0
402175: mov eax, ebx
402177: mov dword ptr [rip + 0xc0c2b], ebx
40217d: mov qword ptr [rip + 0xc0c1c], rax
402184: test byte ptr [rip + 0xc0bc5], 2
40218b: je 0x402234
402191: lea r8, [rsp - 0x70]
402196: lea rdi, [rsp + 0x10]
40219b: mov esi, 2
4021a0: mov dword ptr [rsp - 0x70], 0x240
4021a8: mov r9d, 0xee
4021ae: mov r10d, 0xd
4021b4: jmp 0x4021f3
4021b6: nop word ptr cs:[rax + rax]
4021c0: mov eax, r10d
4021c3: mov ecx, esi
4021c5: cpuid 
4021c7: mov dword ptr [rdi], eax
4021c9: cmp esi, 2
4021cc: je 0x4021e8
4021ce: mov eax, dword ptr [rdi - 4]
4021d1: add eax, dword ptr [r8 - 4]
4021d5: and ecx, 2
4021d8: je 0x4021e0
4021da: add eax, 0x3f
4021dd: and eax, 0xffffffc0
4021e0: mov dword ptr [r8], eax
4021e3: cmp esi, 0x1f
4021e6: je 0x402210
4021e8: add esi, 1
4021eb: add r8, 4
4021ef: add rdi, 4
4021f3: bt r9d, esi
4021f7: jb 0x4021c0
4021f9: mov dword ptr [rdi], 0
4021ff: cmp esi, 2
402202: je 0x4021e8
402204: mov eax, dword ptr [rdi - 4]
402207: add eax, dword ptr [r8 - 4]
40220b: mov dword ptr [r8], eax
40220e: jmp 0x4021e3
402210: mov eax, dword ptr [rsp + 0x84]
402217: add eax, dword ptr [rsp + 4]
40221b: je 0x402234
40221d: or dword ptr [rip + 0xc0b59], 0x400000
402227: add eax, 0x7f
40222a: and eax, 0xffffffc0
40222d: mov qword ptr [rip + 0xc0b6c], rax
402234: add rsp, 0x88
40223b: pop rbx
40223c: ret 
40223d: shr eax, 0x14
402240: movzx eax, al
402243: add eax, 0xf
402246: mov dword ptr [rdi], eax
402248: mov eax, dword ptr [r8]
40224b: add dword ptr [rsi], eax
40224d: jmp 0x4020d5
402252: test esi, 0x10000000
402258: je 0x4022ca
40225a: mov edx, dword ptr [rip + 0xc0b20]
402260: mov ecx, edx
402262: or ecx, 1
402265: mov dword ptr [rip + 0xc0b15], ecx
40226b: test byte ptr [rip + 0xc0ac2], 0x20
402272: je 0x402287
402274: or dword ptr [rip + 0xc0b06], 0x100
40227e: or edx, 3
402281: mov dword ptr [rip + 0xc0af9], edx
402287: and esi, 0x1000
40228d: je 0x402299
40228f: or dword ptr [rip + 0xc0ae7], 0x20000
402299: mov edx, dword ptr [rip + 0xc0a99]
40229f: test dh, 2
4022a2: je 0x4022ae
4022a4: or dword ptr [rip + 0xc0ad2], 0x80000
4022ae: and dh, 4
4022b1: je 0x4022bd
4022b3: or dword ptr [rip + 0xc0ac3], 0x100000
4022bd: test byte ptr [rip + 0xc0a85], 8
4022c4: jne 0x4023e1
4022ca: and eax, 0xe0
4022cf: cmp eax, 0xe0
4022d4: jne 0x402151
4022da: mov eax, dword ptr [rip + 0xc0a54]
4022e0: test eax, 0x10000
4022e5: je 0x402151
4022eb: mov edx, dword ptr [rip + 0xc0a8f]
4022f1: mov ecx, edx
4022f3: or edx, 4
4022f6: or ecx, 0xc
4022f9: test eax, 0x10000000
4022fe: cmovne edx, ecx
402301: mov dword ptr [rip + 0xc0a79], edx
402307: test eax, 0x8000000
40230c: je 0x402317
40230e: or edx, 0x10
402311: mov dword ptr [rip + 0xc0a69], edx
402317: test eax, 0x4000000
40231c: je 0x402325
40231e: or dword ptr [rip + 0xc0a5b], 0x20
402325: test eax, eax
402327: jns 0x402330
402329: or dword ptr [rip + 0xc0a50], 0x40
402330: test eax, 0x20000
402335: je 0x402341
402337: or dword ptr [rip + 0xc0a3f], 0x80
402341: test eax, 0x40000000
402346: je 0x402352
402348: or dword ptr [rip + 0xc0a2e], 0x100
402352: mov edx, dword ptr [rip + 0xc09e4]
402358: test dl, 8
40235b: je 0x402367
40235d: or dword ptr [rip + 0xc0a19], 0x200
402367: and dl, 4
40236a: je 0x402376
40236c: or dword ptr [rip + 0xc0a0a], 0x400
402376: mov edx, dword ptr [rip + 0xc09bc]
40237c: test dh, 0x10
40237f: je 0x40238b
402381: or dword ptr [rip + 0xc09f5], 0x800
40238b: test eax, 0x200000
402390: je 0x40239c
402392: or dword ptr [rip + 0xc09e4], 0x1000
40239c: test dl, 2
40239f: je 0x4023ab
4023a1: or dword ptr [rip + 0xc09d5], 0x2000
4023ab: test dl, 0x40
4023ae: je 0x4023ba
4023b0: or dword ptr [rip + 0xc09c6], 0x4000
4023ba: test dh, 8
4023bd: je 0x4023c9
4023bf: or dword ptr [rip + 0xc09b7], 0x8000
4023c9: and dh, 0x40
4023cc: je 0x402151
4023d2: or dword ptr [rip + 0xc09a4], 0x10000
4023dc: jmp 0x402151
4023e1: or dword ptr [rip + 0xc0995], 0x200000
4023eb: jmp 0x4022ca
4023f0: endbr64 
4023f4: push r14
4023f6: xor eax, eax
4023f8: push r13
4023fa: mov r13, r9
4023fd: push r12
4023ff: mov r12, r8
402402: push rbp
402403: mov rbp, rcx
402406: push rbx
402407: sub rsp, 0xe0
40240e: mov qword ptr [rsp + 0x10], rdx
402413: mov rdx, 0
40241a: mov qword ptr [rsp + 0x18], rdi
40241f: mov dword ptr [rsp + 0xc], esi
402423: test rdx, rdx
402426: je 0x402431
402428: mov edx, dword ptr [rdx]
40242a: xor eax, eax
40242c: test edx, edx
40242e: sete al
402431: mov dword ptr [rip + 0xbf291], eax
402437: call 0x401c70
40243c: movsxd rax, dword ptr [rsp + 0xc]
402441: mov rbx, qword ptr [rsp + 0x10]
402446: lea rdi, [rbx + rax*8 + 8]
40244b: mov rax, qword ptr [rsp + 0x110]
402453: mov qword ptr [rip + 0xc087e], rdi
40245a: mov qword ptr [rip + 0xbd60f], rax
402461: nop dword ptr [rax]
402468: add rdi, 8
40246c: cmp qword ptr [rdi - 8], 0
402471: jne 0x402468
402473: call 0x454f40
402478: cmp qword ptr [rip + 0xc1390], 0
402480: jne 0x4024b2
402482: mov rax, 0x400000
402489: test rax, rax
40248c: je 0x4024b2
40248e: cmp word ptr [rax + 0x36], 0x38
402493: jne 0x40274c
402499: mov rdx, qword ptr [rax + 0x20]
40249d: add rdx, rax
4024a0: movzx eax, word ptr [rax + 0x38]
4024a4: mov qword ptr [rip + 0xc1365], rdx
4024ab: mov qword ptr [rip + 0xc1396], rax
4024b2: call 0x4560a0
4024b7: mov rdi, qword ptr [rip + 0xc081a]
4024be: call 0x454940
4024c3: mov dword ptr [rsp + 0x2c], 0
4024cb: xor eax, eax
4024cd: mov dword ptr [rsp + 0x30], 0
4024d5: mov dword ptr [rsp + 0x34], 0
4024dd: cpuid 
4024df: mov dword ptr [rip + 0xc08a7], eax
4024e5: cmp ebx, 0x756e6547
4024eb: jne 0x40265d
4024f1: cmp ecx, 0x6c65746e
4024f7: jne 0x40265d
4024fd: cmp edx, 0x49656e69
402503: je 0x402a26
402509: xor ecx, ecx
40250b: xor edx, edx
40250d: xor esi, esi
40250f: xor edi, edi
402511: call 0x402070
402516: mov eax, 3
40251b: mov edx, dword ptr [rip + 0xc080b]
402521: test dh, 1
402524: je 0x40252d
402526: or dword ptr [rip + 0xc0857], 1
40252d: and dh, 0x80
402530: je 0x402539
402532: or dword ptr [rip + 0xc084b], 2
402539: mov dword ptr [rip + 0xc0849], eax
40253f: mov eax, dword ptr [rsp + 0x2c]
402543: lea rsi, [rsp + 0x40]
402548: lea rdx, [rip + 0x53be1]
40254f: mov edi, 0x10
402554: mov dword ptr [rip + 0xc0836], eax
40255a: mov eax, dword ptr [rsp + 0x30]
40255e: mov dword ptr [rip + 0xc0830], eax
402564: mov eax, dword ptr [rsp + 0x34]
402568: mov dword ptr [rip + 0xc082a], eax
40256e: call 0x454ed0
402573: xor edx, edx
402575: lea rsi, [rsp + 0x48]
40257a: mov edi, 9
40257f: call 0x454ed0
402584: mov rax, qword ptr [rsp + 0x48]
402589: xor edx, edx
40258b: lea rsi, [rsp + 0x50]
402590: mov edi, 0x14
402595: mov qword ptr [rip + 0xc0824], rax
40259c: call 0x454ed0
4025a1: mov rax, qword ptr [rsp + 0x50]
4025a6: xor edx, edx
4025a8: lea rsi, [rsp + 0x58]
4025ad: mov edi, 3
4025b2: mov qword ptr [rip + 0xc07f7], rax
4025b9: call 0x454ed0
4025be: mov rax, qword ptr [rsp + 0x58]
4025c3: cmp dword ptr [rip + 0xc07be], 1
4025ca: mov qword ptr [rip + 0xc0733], 2
4025d5: mov qword ptr [rip + 0xc07dc], rax
4025dc: je 0x402942
4025e2: lea rsi, [rsp + 0x60]
4025e7: lea rdx, [rip + 0x54732]
4025ee: mov edi, 0xf
4025f3: call 0x454ed0
4025f8: lea rsi, [rsp + 0x68]
4025fd: mov edi, 0xa
402602: lea rdx, [rip + 0x547b7]
402609: call 0x454ed0
40260e: lea rsi, [rsp + 0x70]
402613: mov edi, 0x3001
402618: mov eax, 0x9e
40261d: syscall 
40261f: test rax, rax
402622: je 0x4028b8
402628: mov rbx, 0x4002d8
40262f: jmp 0x40263b
402631: call qword ptr [rbx + 0x10]
402634: add rbx, 0x18
402638: mov qword ptr [r14], rax
40263b: cmp rbx, 0x400518
402642: jae 0x40276b
402648: cmp dword ptr [rbx + 8], 0x25
40264c: mov r14, qword ptr [rbx]
40264f: je 0x402631
402651: lea rdi, [rip + 0x92aa8]
402658: call 0x41b220
40265d: cmp ebx, 0x68747541
402663: jne 0x402bb3
402669: cmp ecx, 0x444d4163
40266f: jne 0x402bb3
402675: cmp edx, 0x69746e65
40267b: jne 0x402509
402681: lea rsi, [rsp + 0x30]
402686: lea rcx, [rsp + 0x34]
40268b: lea rdx, [rsp + 0x3c]
402690: lea rdi, [rsp + 0x2c]
402695: call 0x402070
40269a: mov esi, 0x80000000
40269f: mov eax, esi
4026a1: cpuid 
4026a3: mov esi, eax
4026a5: cmp eax, 0x80000000
4026aa: jbe 0x402719
4026ac: mov eax, 0x80000001
4026b1: cpuid 
4026b3: mov dword ptr [rip + 0xc0687], eax
4026b9: mov dword ptr [rip + 0xc0685], ebx
4026bf: mov dword ptr [rip + 0xc0683], ecx
4026c5: mov dword ptr [rip + 0xc0681], edx
4026cb: cmp esi, 0x80000006
4026d1: jbe 0x402719
4026d3: mov eax, 0x80000007
4026d8: cpuid 
4026da: mov dword ptr [rip + 0xc0680], eax
4026e0: mov dword ptr [rip + 0xc067e], ebx
4026e6: mov dword ptr [rip + 0xc067c], ecx
4026ec: mov dword ptr [rip + 0xc067a], edx
4026f2: cmp esi, 0x80000007
4026f8: je 0x402719
4026fa: mov eax, 0x80000008
4026ff: cpuid 
402701: mov dword ptr [rip + 0xc0669], eax
402707: mov dword ptr [rip + 0xc0667], ebx
40270d: mov dword ptr [rip + 0xc0665], ecx
402713: mov dword ptr [rip + 0xc0663], edx
402719: mov eax, dword ptr [rip + 0xc0661]
40271f: test al, 1
402721: je 0x402737
402723: test byte ptr [rip + 0xc0620], 1
40272a: je 0x402737
40272c: or eax, 0x40000
402731: mov dword ptr [rip + 0xc0649], eax
402737: cmp dword ptr [rsp + 0x2c], 0x15
40273c: je 0x402be0
402742: mov eax, 2
402747: jmp 0x40251b
40274c: lea rcx, [rip + 0x92b1d]
402753: mov edx, 0xb4
402758: lea rsi, [rip + 0x92946]
40275f: lea rdi, [rip + 0x9296a]
402766: call 0x4032a0
40276b: call 0x402dc0
402770: mov eax, dword ptr [rip + 0xc107a]
402776: mov dword ptr fs:[0x48], eax
40277e: mov rax, qword ptr [rip + 0xbd2db]
402785: mov rax, qword ptr [rax]
402788: xor al, al
40278a: mov qword ptr fs:[0x28], rax
402793: cmp dword ptr [rip + 0xbef2e], 0
40279a: je 0x4029ee
4027a0: cmp qword ptr [rip + 0xbd7d8], 0
4027a8: je 0x4027af
4027aa: call 0
4027af: mov rax, qword ptr [rip + 0xbd2aa]
4027b6: mov rax, qword ptr [rax + 8]
4027ba: mov qword ptr fs:[0x30], rax
4027c3: test r13, r13
4027c6: je 0x4027d4
4027c8: xor edx, edx
4027ca: xor esi, esi
4027cc: mov rdi, r13
4027cf: call 0x410490
4027d4: mov rdx, qword ptr [rip + 0xc04fd]
4027db: mov rsi, qword ptr [rsp + 0x10]
4027e0: mov edi, dword ptr [rsp + 0xc]
4027e4: call 0x456f70
4027e9: test r12, r12
4027ec: je 0x4027fa
4027ee: xor edx, edx
4027f0: xor esi, esi
4027f2: mov rdi, r12
4027f5: call 0x410490
4027fa: cmp dword ptr [rip + 0xbd29f], 0
402801: jne 0x402ba9
402807: test rbp, rbp
40280a: je 0x40281e
40280c: mov rdx, qword ptr [rip + 0xc04c5]
402813: mov rsi, qword ptr [rsp + 0x10]
402818: mov edi, dword ptr [rsp + 0xc]
40281c: call rbp
40281e: xor edi, edi
402820: xor esi, esi
402822: call 0x454800
402827: lea rdi, [rsp + 0x70]
40282c: call 0x40f4f0
402831: endbr64 
402835: test eax, eax
402837: jne 0x402887
402839: mov rax, qword ptr fs:[0x300]
402842: mov qword ptr [rsp + 0xb8], rax
40284a: mov rax, qword ptr fs:[0x2f8]
402853: mov qword ptr [rsp + 0xc0], rax
40285b: lea rax, [rsp + 0x70]
402860: mov qword ptr fs:[0x300], rax
402869: mov rdx, qword ptr [rip + 0xc0468]
402870: mov edi, dword ptr [rsp + 0xc]
402874: mov rsi, qword ptr [rsp + 0x10]
402879: mov rax, qword ptr [rsp + 0x18]
40287e: call rax
402880: mov edi, eax
402882: call 0x410210
402887: call 0
40288c: mov rax, 0
402893: lock dec dword ptr [rax]
402896: sete dl
402899: test dl, dl
40289b: je 0x4028a1
40289d: xor edi, edi
40289f: jmp 0x402882
4028a1: mov edx, 0x3c
4028a6: nop word ptr cs:[rax + rax]
4028b0: xor edi, edi
4028b2: mov eax, edx
4028b4: syscall 
4028b6: jmp 0x4028b0
4028b8: mov rax, qword ptr [rsp + 0x70]
4028bd: test eax, eax
4028bf: je 0x402628
4028c5: mov dword ptr [rip + 0xc0f25], eax
4028cb: test al, 3
4028cd: je 0x402628
4028d3: mov eax, dword ptr [rip + 0xc045f]
4028d9: and eax, 0x80
4028de: test byte ptr [rip + 0xc0459], 0x10
4028e5: jne 0x402b9c
4028eb: mov edx, 1
4028f0: test eax, eax
4028f2: jne 0x4028fe
4028f4: mov eax, 1
4028f9: or eax, 2
4028fc: mov edx, eax
4028fe: mov esi, edx
402900: mov edi, 0x3002
402905: mov eax, 0x9e
40290a: syscall 
40290c: test eax, eax
40290e: jne 0x40291a
402910: mov eax, edx
402912: not eax
402914: and dword ptr [rip + 0xc0ed6], eax
40291a: mov eax, dword ptr [rip + 0xc0ed4]
402920: shr eax, 3
402923: and eax, 7
402926: cmp eax, 3
402929: je 0x402628
40292f: xor esi, esi
402931: mov edi, 0x3003
402936: mov eax, 0x9e
40293b: syscall 
40293d: jmp 0x402628
402942: mov edx, dword ptr [rip + 0xc0438]
402948: test dl, 4
40294b: je 0x40299a
40294d: mov eax, dword ptr [rip + 0xc03e1]
402953: test eax, 0x10000000
402958: je 0x40299a
40295a: test eax, 0x8000000
40295f: je 0x40297b
402961: test eax, 0x4000000
402966: je 0x40299a
402968: lea rax, [rip + 0x92725]
40296f: mov qword ptr [rip + 0xc0e72], rax
402976: jmp 0x4025e2
40297b: mov ecx, eax
40297d: and ecx, 0x40020000
402983: cmp ecx, 0x40020000
402989: jne 0x40299a
40298b: test eax, eax
40298d: jns 0x40299a
40298f: mov qword ptr [rip + 0xc036e], 6
40299a: and edx, 0x20002
4029a0: cmp edx, 0x20002
4029a6: jne 0x4025e2
4029ac: mov eax, dword ptr [rip + 0xc0382]
4029b2: and eax, 0x108
4029b7: cmp eax, 0x108
4029bc: jne 0x4025e2
4029c2: test byte ptr [rip + 0xc037f], 0x20
4029c9: je 0x4025e2
4029cf: mov eax, dword ptr [rip + 0xc0353]
4029d5: and eax, 0xc00000
4029da: cmp eax, 0xc00000
4029df: jne 0x4025e2
4029e5: lea rax, [rip + 0x926b1]
4029ec: jmp 0x40296f
4029ee: call 0x456e60
4029f3: test eax, eax
4029f5: js 0x402b26
4029fb: mov edx, dword ptr [rip + 0xc0e67]
402a01: test edx, edx
402a03: jne 0x402b19
402a09: mov dword ptr [rip + 0xc0e59], eax
402a0f: cmp eax, 0x301ff
402a14: jg 0x4027a0
402a1a: lea rdi, [rip + 0x92698]
402a21: call 0x41b220
402a26: lea rsi, [rsp + 0x30]
402a2b: lea rcx, [rsp + 0x34]
402a30: lea rdx, [rsp + 0x38]
402a35: lea rdi, [rsp + 0x2c]
402a3a: call 0x402070
402a3f: mov esi, 0x80000000
402a44: mov eax, esi
402a46: cpuid 
402a48: mov esi, eax
402a4a: cmp eax, 0x80000000
402a4f: jbe 0x402abe
402a51: mov eax, 0x80000001
402a56: cpuid 
402a58: mov dword ptr [rip + 0xc02e2], eax
402a5e: mov dword ptr [rip + 0xc02e0], ebx
402a64: mov dword ptr [rip + 0xc02de], ecx
402a6a: mov dword ptr [rip + 0xc02dc], edx
402a70: cmp esi, 0x80000006
402a76: jbe 0x402abe
402a78: mov eax, 0x80000007
402a7d: cpuid 
402a7f: mov dword ptr [rip + 0xc02db], eax
402a85: mov dword ptr [rip + 0xc02d9], ebx
402a8b: mov dword ptr [rip + 0xc02d7], ecx
402a91: mov dword ptr [rip + 0xc02d5], edx
402a97: cmp esi, 0x80000007
402a9d: je 0x402abe
402a9f: mov eax, 0x80000008
402aa4: cpuid 
402aa6: mov dword ptr [rip + 0xc02c4], eax
402aac: mov dword ptr [rip + 0xc02c2], ebx
402ab2: mov dword ptr [rip + 0xc02c0], ecx
402ab8: mov dword ptr [rip + 0xc02be], edx
402abe: cmp dword ptr [rsp + 0x2c], 6
402ac3: je 0x402aee
402ac5: mov edx, dword ptr [rip + 0xc02b9]
402acb: mov eax, edx
402acd: or ah, 0x40
402ad0: test byte ptr [rip + 0xc0260], 8
402ad7: je 0x402ade
402ad9: mov eax, edx
402adb: or ah, 8
402ade: mov dword ptr [rip + 0xc02a0], eax
402ae4: mov eax, 1
402ae9: jmp 0x40251b
402aee: mov eax, dword ptr [rsp + 0x30]
402af2: add eax, dword ptr [rsp + 0x38]
402af6: lea ecx, [rax - 0x1a]
402af9: mov dword ptr [rsp + 0x30], eax
402afd: mov edx, dword ptr [rip + 0xc0281]
402b03: cmp ecx, 0x45
402b06: ja 0x402b85
402b08: lea rsi, [rip + 0x92649]
402b0f: movsxd rcx, dword ptr [rsi + rcx*4]
402b13: add rcx, rsi
402b16: notrack jmp rcx
402b19: cmp edx, eax
402b1b: jbe 0x402a0f
402b21: jmp 0x402a09
402b26: lea rdi, [rip + 0x92603]
402b2d: call 0x41b220
402b32: or edx, 0x4b0
402b38: mov dword ptr [rip + 0xc0246], edx
402b3e: cmp eax, 0x3f
402b41: je 0x402b78
402b43: ja 0x402b6b
402b45: cmp eax, 0x3c
402b48: jne 0x402ac5
402b4e: and dword ptr [rip + 0xc01dc], 0xfffff7ff
402b58: jmp 0x402ac5
402b5d: or edx, 0x40
402b60: mov dword ptr [rip + 0xc021e], edx
402b66: jmp 0x402ac5
402b6b: sub eax, 0x45
402b6e: cmp eax, 1
402b71: jbe 0x402b4e
402b73: jmp 0x402ac5
402b78: cmp dword ptr [rsp + 0x34], 3
402b7d: ja 0x402ac5
402b83: jmp 0x402b4e
402b85: test byte ptr [rip + 0xc019f], 0x10
402b8c: je 0x402b3e
402b8e: or edx, 0x434
402b94: mov dword ptr [rip + 0xc01ea], edx
402b9a: jmp 0x402b3e
402b9c: test eax, eax
402b9e: jne 0x40291a
402ba4: jmp 0x4028f9
402ba9: call 0x402c10
402bae: jmp 0x402807
402bb3: cmp ebx, 0x6f677948
402bb9: sete sil
402bbd: cmp ecx, 0x656e6975
402bc3: sete al
402bc6: test sil, al
402bc9: je 0x402509
402bcf: cmp edx, 0x6e65476e
402bd5: je 0x402681
402bdb: jmp 0x402509
402be0: mov eax, dword ptr [rsp + 0x30]
402be4: sub eax, 0x60
402be7: cmp eax, 0x1f
402bea: ja 0x402742
402bf0: mov eax, dword ptr [rip + 0xc018e]
402bf6: and ah, 0xfe
402bf9: or eax, 0x18
402bfc: mov dword ptr [rip + 0xc0182], eax
402c02: jmp 0x402742
402c07: nop word ptr [rax + rax]
402c10: endbr64 
402c14: sub rsp, 0x98
402c1b: xor edi, edi
402c1d: xor eax, eax
402c1f: mov esi, 1
402c24: call 0x451760
402c29: cmp eax, -1
402c2c: je 0x402c70
402c2e: xor eax, eax
402c30: mov esi, 1
402c35: mov edi, 1
402c3a: call 0x451760
402c3f: cmp eax, -1
402c42: je 0x402cd8
402c48: xor eax, eax
402c4a: mov esi, 1
402c4f: mov edi, 2
402c54: call 0x451760
402c59: cmp eax, -1
402c5c: je 0x402d48
402c62: add rsp, 0x98
402c69: ret 
402c6a: nop word ptr [rax + rax]
402c70: mov rax, 0xffffffffffffffc0
402c77: cmp dword ptr fs:[rax], 9
402c7b: jne 0x402c2e
402c7d: xor edx, edx
402c7f: xor eax, eax
402c81: lea rdi, [rip + 0x925fa]
402c88: mov esi, 0x20001
402c8d: call 0x4518a0
402c92: test eax, eax
402c94: jne 0x402cd0
402c96: xor esi, esi
402c98: mov rdx, rsp
402c9b: mov edi, 1
402ca0: call 0x450c30
402ca5: test eax, eax
402ca7: jne 0x402cd0
402ca9: mov eax, dword ptr [rsp + 0x18]
402cad: and eax, 0xf000
402cb2: cmp eax, 0x2000
402cb7: jne 0x402cd0
402cb9: cmp qword ptr [rsp + 0x28], 0x107
402cc2: je 0x402c2e
402cc8: nop dword ptr [rax + rax]
402cd0: hlt 
402cd1: jmp 0x402cd0
402cd3: nop dword ptr [rax + rax]
402cd8: mov rax, 0xffffffffffffffc0
402cdf: cmp dword ptr fs:[rax], 9
402ce3: jne 0x402c48
402ce9: xor edx, edx
402ceb: xor eax, eax
402ced: lea rdi, [rip + 0x92598]
402cf4: mov esi, 0x20000
402cf9: call 0x4518a0
402cfe: cmp eax, 1
402d01: jne 0x402d40
402d03: mov rdx, rsp
402d06: mov esi, 1
402d0b: mov edi, 1
402d10: call 0x450c30
402d15: test eax, eax
402d17: jne 0x402d40
402d19: mov eax, dword ptr [rsp + 0x18]
402d1d: and eax, 0xf000
402d22: cmp eax, 0x2000
402d27: jne 0x402d40
402d29: cmp qword ptr [rsp + 0x28], 0x103
402d32: je 0x402c48
402d38: nop dword ptr [rax + rax]
402d40: hlt 
402d41: jmp 0x402d40
402d43: nop dword ptr [rax + rax]
402d48: mov rax, 0xffffffffffffffc0
402d4f: cmp dword ptr fs:[rax], 9
402d53: jne 0x402c62
402d59: xor edx, edx
402d5b: xor eax, eax
402d5d: lea rdi, [rip + 0x92528]
402d64: mov esi, 0x20000
402d69: call 0x4518a0
402d6e: cmp eax, 2
402d71: jne 0x402db0
402d73: mov rdx, rsp
402d76: mov esi, 2
402d7b: mov edi, 1
402d80: call 0x450c30
402d85: test eax, eax
402d87: jne 0x402db0
402d89: mov eax, dword ptr [rsp + 0x18]
402d8d: and eax, 0xf000
402d92: cmp eax, 0x2000
402d97: jne 0x402db0
402d99: cmp qword ptr [rsp + 0x28], 0x103
402da2: je 0x402c62
402da8: nop dword ptr [rax + rax]
402db0: hlt 
402db1: jmp 0x402db0
402db3: nop word ptr cs:[rax + rax]
402dbd: nop dword ptr [rax]
402dc0: endbr64 
402dc4: push r15
402dc6: push r14
402dc8: push r13
402dca: push r12
402dcc: push rbp
402dcd: push rbx
402dce: sub rsp, 0x28
402dd2: mov rax, qword ptr [rip + 0xc0a37]
402dd9: mov r14, qword ptr [rip + 0xbe3a0]
402de0: test rax, rax
402de3: je 0x402fd0
402de9: mov rcx, qword ptr [rip + 0xc0a58]
402df0: lea rdx, [rcx*8]
402df8: sub rdx, rcx
402dfb: lea rdx, [rax + rdx*8]
402dff: cmp rax, rdx
402e02: jb 0x402e1d
402e04: jmp 0x402fd0
402e09: nop dword ptr [rax]
402e10: add rax, 0x38
402e14: cmp rax, rdx
402e17: jae 0x402fd0
402e1d: cmp dword ptr [rax], 7
402e20: jne 0x402e10
402e22: mov r12, qword ptr [rax + 0x30]
402e26: mov rbx, qword ptr [rax + 0x28]
402e2a: mov ebp, 0x40
402e2f: mov r15d, 1
402e35: mov rcx, qword ptr [rax + 0x20]
402e39: mov r8, qword ptr [rax + 0x10]
402e3d: mov rax, qword ptr [rip + 0xbd2ac]
402e44: add r8, qword ptr [r14]
402e47: cmp r12, 0x40
402e4b: mov qword ptr [rsp + 0x10], rbx
402e50: cmovae rbp, r12
402e54: xor edx, edx
402e56: mov qword ptr [rsp + 8], rcx
402e5b: mov r13, r8
402e5e: lea rax, [rbx + rax - 1]
402e63: add rax, rbp
402e66: div rbp
402e69: imul rax, rbp
402e6d: lea rdi, [rbp + rax + 0x900]
402e75: mov rbx, rax
402e78: call 0x451a90
402e7d: mov rsi, rbp
402e80: mov qword ptr [rip + 0xc0495], 0x3e
402e8b: neg rsi
402e8e: lea rcx, [rbp + rax - 1]
402e93: and rcx, rsi
402e96: test r12, r12
402e99: mov rsi, r15
402e9c: cmovne rsi, r12
402ea0: je 0x403030
402ea6: mov rax, qword ptr [rsp + 0x10]
402eab: xor edx, edx
402ead: mov rdi, rbx
402eb0: lea rax, [rax + r12 - 1]
402eb5: div rsi
402eb8: imul rax, rsi
402ebc: mov r15, rax
402ebf: sub rdi, rax
402ec2: mov rdx, qword ptr [rsp + 8]
402ec7: add rdi, rcx
402eca: mov rsi, r13
402ecd: mov qword ptr [rsp + 0x18], rcx
402ed2: mov qword ptr [r14 + 0x450], rax
402ed9: mov qword ptr [rip + 0xc0460], rdi
402ee0: mov qword ptr [rip + 0xc045d], 0
402eeb: call 0x401060
402ef0: mov rcx, qword ptr [rsp + 0x18]
402ef5: mov edi, 0x1002
402efa: lea rax, [rip + 0xc042f]
402f01: lea rsi, [rcx + rbx]
402f05: mov qword ptr [rsi + 8], rax
402f09: mov eax, 0x9e
402f0e: mov qword ptr [rsi], rsi
402f11: mov qword ptr [rsi + 0x10], rsi
402f15: syscall 
402f17: test eax, eax
402f19: je 0x402f30
402f1b: lea rdi, [rip + 0x92376]
402f22: call 0x41b220
402f27: nop word ptr [rax + rax]
402f30: lea rax, [rip + 0xbf339]
402f37: movq xmm0, qword ptr [rsp + 8]
402f3d: mov qword ptr [r14 + 0x440], r12
402f44: mov qword ptr [rip + 0xc07d5], rax
402f4b: mov rax, qword ptr [rip + 0xbd19e]
402f52: movhps xmm0, qword ptr [rsp + 0x10]
402f57: mov qword ptr [r14 + 0x428], r13
402f5e: lea rax, [r15 + rax + 0x3f]
402f63: movups xmmword ptr [r14 + 0x430], xmm0
402f6b: and rax, 0xffffffffffffffc0
402f6f: mov qword ptr [rip + 0xbf322], r14
402f76: add rax, 0x900
402f7c: mov qword ptr [rip + 0xc037d], r15
402f83: mov qword ptr [r14 + 0x458], 1
402f8e: mov qword ptr [rip + 0xc0373], rbp
402f95: mov qword ptr [rip + 0xbf2d0], 0x40
402fa0: mov qword ptr [rip + 0xc0365], 1
402fab: mov qword ptr [rip + 0xbd13e], rax
402fb2: mov qword ptr [rip + 0xc077b], 1
402fbd: add rsp, 0x28
402fc1: pop rbx
402fc2: pop rbp
402fc3: pop r12
402fc5: pop r13
402fc7: pop r14
402fc9: pop r15
402fcb: ret 
402fcc: nop dword ptr [rax]
402fd0: mov rax, qword ptr [rip + 0xbd119]
402fd7: xor r15d, r15d
402fda: xor r12d, r12d
402fdd: xor r13d, r13d
402fe0: mov ebp, 0x40
402fe5: lea rsi, [rax + 0x3f]
402fe9: mov rbx, rsi
402fec: and rbx, 0xffffffffffffffc0
402ff0: lea rdi, [rbx + 0x940]
402ff7: call 0x451a90
402ffc: mov rdi, rbx
402fff: mov qword ptr [rip + 0xc0316], 0x3e
40300a: mov qword ptr [rsp + 8], 0
403013: lea rsi, [rax + 0x3f]
403017: xor eax, eax
403019: mov qword ptr [rsp + 0x10], 0
403022: mov rcx, rsi
403025: and rcx, 0xffffffffffffffc0
403029: jmp 0x402ec2
40302e: nop 
403030: mov r15, qword ptr [rsp + 0x10]
403035: mov rdi, rbx
403038: mov ebp, 0x40
40303d: mov rax, r15
403040: sub rdi, r15
403043: jmp 0x402ec2
403048: nop dword ptr [rax + rax]
403050: endbr64 
403054: push r15
403056: lea r15, [rip + 0xba083]
40305d: push r14
40305f: lea r14, [rip + 0xba07a]
403066: push r13
403068: sub r14, r15
40306b: mov r13, rdx
40306e: push r12
403070: mov r12, rsi
403073: push rbp
403074: mov ebp, edi
403076: push rbx
403077: sub rsp, 8
40307b: sar r14, 3
40307f: je 0x40309d
403081: xor ebx, ebx
403083: nop dword ptr [rax + rax]
403088: mov rdx, r13
40308b: mov rsi, r12
40308e: mov edi, ebp
403090: call qword ptr [r15 + rbx*8]
403094: add rbx, 1
403098: cmp r14, rbx
40309b: jne 0x403088
40309d: lea r15, [rip + 0xba03c]
4030a4: lea r14, [rip + 0xba045]
4030ab: call 0x401000
4030b0: sub r14, r15
4030b3: sar r14, 3
4030b7: je 0x4030d5
4030b9: xor ebx, ebx
4030bb: nop dword ptr [rax + rax]
4030c0: mov rdx, r13
4030c3: mov rsi, r12
4030c6: mov edi, ebp
4030c8: call qword ptr [r15 + rbx*8]
4030cc: add rbx, 1
4030d0: cmp r14, rbx
4030d3: jne 0x4030c0
4030d5: add rsp, 8
4030d9: pop rbx
4030da: pop rbp
4030db: pop r12
4030dd: pop r13
4030df: pop r14
4030e1: pop r15
4030e3: ret 
4030e4: nop word ptr cs:[rax + rax]
4030ef: nop 
4030f0: endbr64 
4030f4: push rbp
4030f5: lea rax, [rip + 0xba004]
4030fc: lea rbp, [rip + 0xb9fed]
403103: push rbx
403104: sub rax, rbp
403107: sub rsp, 8
40310b: sar rax, 3
40310f: je 0x403126
403111: lea rbx, [rax - 1]
403115: nop dword ptr [rax]
403118: call qword ptr [rbp + rbx*8]
40311c: sub rbx, 1
403120: cmp rbx, -1
403124: jne 0x403118
403126: add rsp, 8
40312a: pop rbx
40312b: pop rbp
40312c: jmp 0x494f24
403131: nop word ptr cs:[rax + rax]
40313b: nop dword ptr [rax + rax]
403140: endbr64 
403144: push r14
403146: mov r14, rsi
403149: push r13
40314b: mov r13d, ecx
40314e: push r12
403150: mov r12, rdx
403153: push rbp
403154: mov rbp, rdi
403157: push rbx
403158: mov rbx, r8
40315b: sub rsp, 0x20
40315f: mov rax, qword ptr fs:[0x28]
403168: mov qword ptr [rsp + 0x18], rax
40316d: xor eax, eax
40316f: cmp qword ptr [rip + 0xbcdf1], 0
403177: je 0x403185
403179: xor esi, esi
40317b: mov edi, 1
403180: call 0
403185: lea rax, [rip + 0x92141]
40318c: test rbx, rbx
40318f: je 0x40328b
403195: mov rdx, qword ptr [rip + 0xbdeec]
40319c: lea rdi, [rsp + 0x10]
4031a1: mov r9d, r13d
4031a4: mov r8, r12
4031a7: lea rsi, [rip + 0xa8867]
4031ae: lea rcx, [rip + 0x92118]
4031b5: cmp byte ptr [rdx], 0
4031b8: cmove rcx, rsi
4031bc: lea rsi, [rsp + 0xc]
4031c1: push rsi
4031c2: mov rsi, rbp
4031c5: push r14
4031c7: push rax
4031c8: xor eax, eax
4031ca: push rbx
4031cb: call 0x410da0
4031d0: add rsp, 0x20
4031d4: test eax, eax
4031d6: js 0x403270
4031dc: mov rdx, qword ptr [rsp + 0x10]
4031e1: lea rsi, [rip + 0xaccbe]
4031e8: xor edi, edi
4031ea: xor eax, eax
4031ec: call 0x417ef0
4031f1: mov rdi, qword ptr [rip + 0xbd4d0]
4031f8: call 0x4184d0
4031fd: mov eax, dword ptr [rsp + 0xc]
403201: xor r9d, r9d
403204: or r8d, 0xffffffff
403208: mov rdx, qword ptr [rip + 0xbdf09]
40320f: mov ecx, 0x22
403214: xor edi, edi
403216: add eax, edx
403218: neg edx
40321a: lea esi, [rax + 4]
40321d: and esi, edx
40321f: mov edx, 3
403224: mov dword ptr [rsp + 0xc], esi
403228: movsxd rsi, esi
40322b: call 0x451bc0
403230: mov rbx, rax
403233: cmp rax, -1
403237: je 0x4011a0
40323d: mov eax, dword ptr [rsp + 0xc]
403241: mov rsi, qword ptr [rsp + 0x10]
403246: lea rdi, [rbx + 4]
40324a: mov dword ptr [rbx], eax
40324c: call 0x401020
403251: mov rdi, rbx
403254: xchg qword ptr [rip + 0xbf565], rdi
40325b: test rdi, rdi
40325e: je 0x4011a0
403264: mov esi, dword ptr [rdi]
403266: call 0x451c70
40326b: jmp 0x4011a0
403270: mov edx, 0x12
403275: lea rsi, [rip + 0x92084]
40327c: mov edi, 2
403281: call 0x450e60
403286: jmp 0x4011aa
40328b: lea rbx, [rip + 0xa8783]
403292: mov rax, rbx
403295: jmp 0x403195
40329a: nop word ptr [rax + rax]
4032a0: endbr64 
4032a4: push r13
4032a6: mov r13d, edx
4032a9: mov edx, 5
4032ae: push r12
4032b0: mov r12, rsi
4032b3: lea rsi, [rip + 0x92016]
4032ba: push rbp
4032bb: mov rbp, rdi
4032be: lea rdi, [rip + 0xa5c57]
4032c5: push rbx
4032c6: mov rbx, rcx
4032c9: sub rsp, 8
4032cd: call 0x4032f0
4032d2: mov r8, rbx
4032d5: mov ecx, r13d
4032d8: mov rdx, r12
4032db: mov rdi, rax
4032de: mov rsi, rbp
4032e1: call 0x403140
4032e6: nop word ptr cs:[rax + rax]
4032f0: endbr64 
4032f4: mov r9d, edx
4032f7: xor r8d, r8d
4032fa: xor ecx, ecx
4032fc: xor edx, edx
4032fe: jmp 0x404030
403303: nop word ptr cs:[rax + rax]
40330d: nop dword ptr [rax]
403310: push r12
403312: push rbp
403313: mov rbp, rsi
403316: push rbx
403317: mov rbx, rdi
40331a: mov eax, dword ptr [rbx]
40331c: cmp eax, 2
40331f: je 0x403387
403321: jg 0x403358
403323: test eax, eax
403325: je 0x4033d0
40332b: cmp eax, 1
40332e: jne 0x4033e3
403334: mov rdi, qword ptr [rbx + 8]
403338: mov rsi, rbp
40333b: xor r12d, r12d
40333e: call 0x403310
403343: test rax, rax
403346: sete r12b
40334a: mov rax, r12
40334d: pop rbx
40334e: pop rbp
40334f: pop r12
403351: ret 
403352: nop word ptr [rax + rax]
403358: cmp eax, 3
40335b: jne 0x4033e3
403361: mov rdi, qword ptr [rbx + 8]
403365: mov rsi, rbp
403368: call 0x403310
40336d: test rax, rax
403370: sete al
403373: movzx eax, al
403376: add eax, 1
403379: cdqe 
40337b: mov rbx, qword ptr [rbx + rax*8 + 8]
403380: mov eax, dword ptr [rbx]
403382: cmp eax, 2
403385: jne 0x403321
403387: mov rdi, qword ptr [rbx + 8]
40338b: mov rsi, rbp
40338e: call 0x403310
403393: mov r12, rax
403396: mov eax, dword ptr [rbx + 4]
403399: cmp eax, 0xf
40339c: je 0x403400
40339e: cmp eax, 0xe
4033a1: je 0x403410
4033a3: mov rdi, qword ptr [rbx + 0x10]
4033a7: mov rsi, rbp
4033aa: call 0x403310
4033af: mov rbp, rax
4033b2: mov eax, dword ptr [rbx + 4]
4033b5: sub eax, 3
4033b8: cmp eax, 0xa
4033bb: ja 0x4033e3
4033bd: lea rdx, [rip + 0x91f50]
4033c4: movsxd rax, dword ptr [rdx + rax*4]
4033c8: add rax, rdx
4033cb: notrack jmp rax
4033ce: nop 
4033d0: mov eax, dword ptr [rbx + 4]
4033d3: mov r12, rbp
4033d6: test eax, eax
4033d8: je 0x40334a
4033de: cmp eax, 1
4033e1: je 0x4033f0
4033e3: xor r12d, r12d
4033e6: pop rbx
4033e7: pop rbp
4033e8: mov rax, r12
4033eb: pop r12
4033ed: ret 
4033ee: nop 
4033f0: mov r12, qword ptr [rbx + 8]
4033f4: jmp 0x40334a
4033f9: nop dword ptr [rax]
403400: test r12, r12
403403: je 0x403419
403405: mov r12d, 1
40340b: jmp 0x40334a
403410: test r12, r12
403413: je 0x40334a
403419: mov rdi, qword ptr [rbx + 0x10]
40341d: mov rsi, rbp
403420: xor r12d, r12d
403423: call 0x403310
403428: test rax, rax
40342b: setne r12b
40342f: jmp 0x40334a
403434: cmp r12, rbp
403437: setne r12b
40343b: movzx r12d, r12b
40343f: jmp 0x40334a
403444: test rbp, rbp
403447: je 0x4034db
40344d: mov rax, r12
403450: xor edx, edx
403452: div rbp
403455: mov r12, rax
403458: jmp 0x40334a
40345d: imul r12, rbp
403461: jmp 0x40334a
403466: cmp r12, rbp
403469: sete r12b
40346d: movzx r12d, r12b
403471: jmp 0x40334a
403476: cmp r12, rbp
403479: setae r12b
40347d: movzx r12d, r12b
403481: jmp 0x40334a
403486: cmp r12, rbp
403489: setbe r12b
40348d: movzx r12d, r12b
403491: jmp 0x40334a
403496: cmp r12, rbp
403499: seta r12b
40349d: movzx r12d, r12b
4034a1: jmp 0x40334a
4034a6: cmp r12, rbp
4034a9: setb r12b
4034ad: movzx r12d, r12b
4034b1: jmp 0x40334a
4034b6: sub r12, rbp
4034b9: jmp 0x40334a
4034be: add r12, rbp
4034c1: jmp 0x40334a
4034c6: test rbp, rbp
4034c9: je 0x4034ea
4034cb: mov rax, r12
4034ce: xor edx, edx
4034d0: div rbp
4034d3: mov r12, rdx
4034d6: jmp 0x40334a
4034db: mov edi, 8
4034e0: call 0x40f500
4034e5: jmp 0x40344d
4034ea: mov edi, 8
4034ef: call 0x40f500
4034f4: jmp 0x4034cb
4034f6: nop word ptr cs:[rax + rax]
403500: endbr64 
403504: push rbp
403505: mov rbp, rdi
403508: push rbx
403509: mov rbx, rsi
40350c: sub rsp, 8
403510: cmp qword ptr [rsi + 0x20], 0
403515: je 0x403570
403517: lea rsi, [rsi + 0x38]
40351b: cmp qword ptr [rbp + 0x20], 0
403520: lea rdi, [rbp + 0x38]
403524: je 0x403560
403526: call 0x401130
40352b: test eax, eax
40352d: jne 0x403556
40352f: mov rsi, qword ptr [rbx]
403532: mov rdi, qword ptr [rbp]
403536: call 0x401130
40353b: test eax, eax
40353d: jne 0x403556
40353f: mov rsi, qword ptr [rbx + 0x10]
403543: mov rdi, qword ptr [rbp + 0x10]
403547: call 0x401130
40354c: test eax, eax
40354e: jne 0x403556
403550: mov eax, dword ptr [rbp + 8]
403553: sub eax, dword ptr [rbx + 8]
403556: add rsp, 8
40355a: pop rbx
40355b: pop rbp
40355c: ret 
40355d: nop dword ptr [rax]
403560: mov rdi, qword ptr [rbp + 0x38]
403564: jmp 0x403526
403566: nop word ptr cs:[rax + rax]
403570: mov rsi, qword ptr [rsi + 0x38]
403574: jmp 0x40351b
403576: nop word ptr cs:[rax + rax]
403580: endbr64 
403584: push rbp
403585: mov rbp, rsp
403588: push r15
40358a: push r14
40358c: push r13
40358e: push r12
403590: mov r12, rdx
403593: push rbx
403594: sub rsp, 0x88
40359b: mov qword ptr [rbp - 0x90], rdi
4035a2: mov r10d, dword ptr [rdi + 8]
4035a6: mov qword ptr [rbp - 0xa8], rsi
4035ad: mov dword ptr [rbp - 0xa0], ecx
4035b3: mov qword ptr [rbp - 0xb0], r8
4035ba: mov rax, qword ptr fs:[0x28]
4035c3: mov qword ptr [rbp - 0x38], rax
4035c7: xor eax, eax
4035c9: test r10d, r10d
4035cc: jle 0x403868
4035d2: mov rax, qword ptr [rbp - 0x90]
4035d9: mov r13, qword ptr [rax + 0x10]
4035dd: test r13, r13
4035e0: je 0x403750
4035e6: mov eax, dword ptr [r13 + 0x28]
4035ea: cmp qword ptr [r13 + 0x60], 0
4035ef: mov dword ptr [rbp - 0x68], eax
4035f2: je 0x403780
4035f8: mov rdi, r12
4035fb: call 0x401180
403600: mov rdi, r12
403603: mov rbx, rax
403606: mov dword ptr [rbp - 0x78], eax
403609: call 0x40f490
40360e: mov esi, dword ptr [r13 + 0x58]
403612: xor edx, edx
403614: mov qword ptr [rbp - 0x88], r12
40361b: mov r15d, eax
40361e: div esi
403620: lea ecx, [rsi - 2]
403623: mov eax, r15d
403626: mov r14d, edx
403629: xor edx, edx
40362b: div ecx
40362d: mov ecx, dword ptr [r13 + 0x68]
403631: mov eax, ebx
403633: mov qword ptr [rbp - 0x80], rax
403637: mov eax, esi
403639: lea r15d, [rdx + 1]
40363d: mov rdx, qword ptr [r13 + 0x60]
403641: sub eax, r15d
403644: mov r8d, r15d
403647: mov r12d, r15d
40364a: mov r15d, r14d
40364d: mov dword ptr [rbp - 0x70], eax
403650: sub r8d, esi
403653: mov r14d, ecx
403656: nop word ptr cs:[rax + rax]
403660: mov eax, r15d
403663: test r14d, r14d
403666: mov ebx, dword ptr [rdx + rax*4]
403669: mov eax, ebx
40366b: bswap eax
40366d: cmovne ebx, eax
403670: test ebx, ebx
403672: je 0x403750
403678: sub ebx, 1
40367b: cmp dword ptr [rbp - 0x68], ebx
40367e: jbe 0x403820
403684: mov rax, qword ptr [r13 + 0x30]
403688: mov r9d, dword ptr [r13 + 0x18]
40368c: lea rdi, [rax + rbx*8]
403690: mov eax, dword ptr [rdi]
403692: test r9d, r9d
403695: je 0x403850
40369b: bswap eax
40369d: cmp dword ptr [rbp - 0x78], eax
4036a0: ja 0x4037e0
4036a6: mov esi, dword ptr [rdi + 4]
4036a9: mov rax, qword ptr [r13]
4036ad: bswap esi
4036af: mov esi, esi
4036b1: mov dword ptr [rbp - 0x9c], r8d
4036b8: add rsi, rax
4036bb: mov qword ptr [rbp - 0x98], rdx
4036c2: mov rdi, qword ptr [rbp - 0x88]
4036c9: call 0x401130
4036ce: mov rdx, qword ptr [rbp - 0x98]
4036d5: mov r8d, dword ptr [rbp - 0x9c]
4036dc: test eax, eax
4036de: jne 0x4037e0
4036e4: mov eax, dword ptr [rbp - 0x68]
4036e7: mov qword ptr [rbp - 0x70], rax
4036eb: cmp rbx, qword ptr [rbp - 0x70]
4036ef: jb 0x403878
4036f5: mov rax, rbx
4036f8: sub rax, qword ptr [rbp - 0x70]
4036fc: shl rax, 4
403700: add rax, qword ptr [r13 + 0x50]
403704: mov rdi, qword ptr [rax + 8]
403708: mov rax, qword ptr [rax]
40370b: mov qword ptr [rbp - 0x70], rdi
40370f: mov qword ptr [rbp - 0x78], rax
403713: mov edx, dword ptr [rbp - 0xa0]
403719: test edx, edx
40371b: jne 0x4038b0
403721: mov rax, qword ptr [rbp - 0xb0]
403728: mov rdi, qword ptr [rbp - 0x78]
40372c: mov qword ptr [rax], rdi
40372f: jmp 0x403758
403731: mov eax, dword ptr fs:[0x18]
403739: test eax, eax
40373b: jne 0x403fb3
403741: sub dword ptr [rip + 0xbef90], 1
403748: nop dword ptr [rax + rax]
403750: mov qword ptr [rbp - 0x70], 0
403758: mov rax, qword ptr [rbp - 0x38]
40375c: xor rax, qword ptr fs:[0x28]
403765: jne 0x403f7c
40376b: mov rax, qword ptr [rbp - 0x70]
40376f: lea rsp, [rbp - 0x28]
403773: pop rbx
403774: pop r12
403776: pop r13
403778: pop r14
40377a: pop r15
40377c: pop rbp
40377d: ret 
40377e: nop 
403780: mov eax, dword ptr [rbp - 0x68]
403783: xor r14d, r14d
403786: mov qword ptr [rbp - 0x70], rax
40378a: mov r15, rax
40378d: nop dword ptr [rax]
403790: cmp r15, r14
403793: jbe 0x403750
403795: mov rax, qword ptr [r13 + 0x30]
403799: lea rbx, [r15 + r14]
40379d: mov edi, dword ptr [r13 + 0x18]
4037a1: shr rbx, 1
4037a4: mov rdx, qword ptr [r13]
4037a8: mov esi, dword ptr [rax + rbx*8 + 4]
4037ac: test edi, edi
4037ae: je 0x403800
4037b0: bswap esi
4037b2: mov eax, esi
4037b4: mov rdi, r12
4037b7: lea rsi, [rdx + rax]
4037bb: call 0x401130
4037c0: test eax, eax
4037c2: js 0x40380f
4037c4: test eax, eax
4037c6: je 0x4036eb
4037cc: lea r14, [rbx + 1]
4037d0: cmp r15, r14
4037d3: ja 0x403795
4037d5: jmp 0x403750
4037da: nop word ptr [rax + rax]
4037e0: lea eax, [r15 + r8]
4037e4: lea esi, [r15 + r12]
4037e8: cmp dword ptr [rbp - 0x70], r15d
4037ec: cmova eax, esi
4037ef: mov r15d, eax
4037f2: jmp 0x403660
4037f7: nop word ptr [rax + rax]
403800: add rsi, rdx
403803: mov rdi, r12
403806: call 0x401130
40380b: test eax, eax
40380d: jns 0x4037c4
40380f: mov r15, rbx
403812: jmp 0x403790
403817: nop word ptr [rax + rax]
403820: mov eax, ebx
403822: sub eax, dword ptr [rbp - 0x68]
403825: mov rcx, qword ptr [rbp - 0x80]
403829: shl rax, 4
40382d: add rax, qword ptr [r13 + 0x48]
403831: cmp qword ptr [rax], rcx
403834: jbe 0x4037e0
403836: mov dword ptr [rbp - 0x9c], r8d
40383d: mov rsi, qword ptr [rax + 8]
403841: mov qword ptr [rbp - 0x98], rdx
403848: jmp 0x4036c2
40384d: nop dword ptr [rax]
403850: cmp dword ptr [rbp - 0x78], eax
403853: ja 0x4037e0
403855: mov rax, qword ptr [r13]
403859: mov esi, dword ptr [rdi + 4]
40385c: jmp 0x4036b1
403861: nop dword ptr [rax]
403868: call 0x404c30
40386d: jmp 0x4035d2
403872: nop word ptr [rax + rax]
403878: mov rax, qword ptr [r13 + 0x38]
40387c: mov esi, dword ptr [r13 + 0x18]
403880: mov rcx, qword ptr [r13]
403884: lea rdx, [rax + rbx*8]
403888: mov eax, dword ptr [rdx + 4]
40388b: mov edx, dword ptr [rdx]
40388d: test esi, esi
40388f: je 0x403ba8
403895: bswap eax
403897: mov eax, eax
403899: bswap edx
40389b: add rax, rcx
40389e: mov qword ptr [rbp - 0x70], rax
4038a2: lea eax, [rdx + 1]
4038a5: mov qword ptr [rbp - 0x78], rax
4038a9: jmp 0x403713
4038ae: nop 
4038b0: mov rax, qword ptr [rbp - 0xa8]
4038b7: test rax, rax
4038ba: je 0x403b70
4038c0: mov r14, qword ptr [rax + 0x10]
4038c4: test r14, r14
4038c7: je 0x403b70
4038cd: cmp qword ptr [rip + 0xbc673], 0
4038d5: je 0x4038e3
4038d7: lea rdi, [r13 + 0x80]
4038de: call 0
4038e3: mov r15, qword ptr [r13 + 0x78]
4038e7: jmp 0x403914
4038e9: nop dword ptr [rax]
4038f0: sub r15, 1
4038f4: mov rax, qword ptr [r13 + 0x70]
4038f8: mov rsi, r14
4038fb: lea rdx, [r15 + r15*2]
4038ff: lea r12, [rax + rdx*8]
403903: mov rdi, qword ptr [r12]
403907: call 0x401130
40390c: test eax, eax
40390e: je 0x403b10
403914: test r15, r15
403917: jne 0x4038f0
403919: cmp qword ptr [rip + 0xbc63f], 0
403921: je 0x40392f
403923: lea rdi, [r13 + 0x80]
40392a: call 0
40392f: cmp qword ptr [rip + 0xbc5f9], 0
403937: je 0x403945
403939: lea rdi, [r13 + 0x80]
403940: call 0
403945: mov rcx, qword ptr [r13 + 0x78]
403949: mov rdi, qword ptr [r13 + 0x70]
40394d: mov qword ptr [rbp - 0x88], rbx
403954: lea rax, [rcx + rcx*2]
403958: mov qword ptr [rbp - 0x98], rdi
40395f: mov rbx, rcx
403962: shl rax, 3
403966: mov qword ptr [rbp - 0x80], rax
40396a: lea r15, [rdi + rax - 0x18]
40396f: jmp 0x403996
403971: nop dword ptr [rax]
403978: mov rdi, qword ptr [r15]
40397b: mov rsi, r14
40397e: mov r12, r15
403981: sub rbx, 1
403985: sub r15, 0x18
403989: call 0x401130
40398e: test eax, eax
403990: je 0x403d18
403996: test rbx, rbx
403999: jne 0x403978
40399b: mov rax, qword ptr [rbp - 0x80]
40399f: mov rdi, qword ptr [rbp - 0x98]
4039a6: mov rbx, qword ptr [rbp - 0x88]
4039ad: lea rsi, [rax + 0x18]
4039b1: test rdi, rdi
4039b4: je 0x403e12
4039ba: call 0x427100
4039bf: mov r12, rax
4039c2: test r12, r12
4039c5: je 0x403d70
4039cb: mov qword ptr [r13 + 0x70], r12
4039cf: mov rdi, r14
4039d2: call 0x429020
4039d7: mov r15, rax
4039da: test rax, rax
4039dd: je 0x403d70
4039e3: add r12, qword ptr [rbp - 0x80]
4039e7: mov rdi, qword ptr [rbp - 0x90]
4039ee: lea r8, [rbp - 0x58]
4039f2: xor ecx, ecx
4039f4: mov qword ptr [r12], rax
4039f8: mov rsi, qword ptr [rbp - 0xa8]
4039ff: lea rdx, [rip + 0xa800f]
403a06: mov qword ptr [r12 + 8], 0xffffffffffffffff
403a0f: call 0x403580
403a14: mov rdi, rax
403a17: cmp rax, -1
403a1b: je 0x403ee7
403a21: test rax, rax
403a24: je 0x403afa
403a2a: lea rsi, [rip + 0x9191e]
403a31: call 0x4010c0
403a36: test rax, rax
403a39: je 0x403afa
403a3f: lea r14, [rax + 8]
403a43: lea rsi, [rip + 0x9190e]
403a4a: mov rdi, r14
403a4d: call 0x401160
403a52: mov rdi, rsp
403a55: lea rcx, [rax + 0x18]
403a59: mov rdx, rax
403a5c: mov rax, rcx
403a5f: and rcx, 0xfffffffffffff000
403a66: sub rdi, rcx
403a69: and rax, 0xfffffffffffffff0
403a6d: mov rcx, rdi
403a70: cmp rsp, rcx
403a73: je 0x403a8a
403a75: sub rsp, 0x1000
403a7c: or qword ptr [rsp + 0xff8], 0
403a85: cmp rsp, rcx
403a88: jne 0x403a75
403a8a: and eax, 0xfff
403a8f: sub rsp, rax
403a92: test rax, rax
403a95: je 0x403a9d
403a97: or qword ptr [rsp + rax - 8], 0
403a9d: lea r10, [rsp + 0xf]
403aa2: mov rsi, r14
403aa5: lea r14, [rbp - 0x50]
403aa9: and r10, 0xfffffffffffffff0
403aad: mov rdi, r10
403ab0: mov qword ptr [rbp - 0x80], r10
403ab4: call 0x401150
403ab9: mov r10, qword ptr [rbp - 0x80]
403abd: mov rdx, r15
403ac0: mov rdi, r14
403ac3: mov byte ptr [rax], 0
403ac6: mov rsi, r10
403ac9: call 0x462a50
403ace: lea rsi, [r12 + 8]
403ad3: mov rdi, r14
403ad6: mov byte ptr [rbp - 0x40], 1
403ada: mov edx, 1
403adf: call 0x457000
403ae4: mov rdi, r14
403ae7: mov dword ptr [rbp - 0x80], eax
403aea: call 0x462d30
403aef: mov eax, dword ptr [rbp - 0x80]
403af2: test eax, eax
403af4: jne 0x403ebe
403afa: mov qword ptr [r12 + 0x10], 0
403b03: add qword ptr [r13 + 0x78], 1
403b08: nop dword ptr [rax + rax]
403b10: cmp qword ptr [rip + 0xbc448], 0
403b18: je 0x403b26
403b1a: lea rdi, [r13 + 0x80]
403b21: call 0
403b26: cmp qword ptr [r12 + 8], -1
403b2c: je 0x403721
403b32: mov rax, qword ptr [r12 + 0x10]
403b37: test rax, rax
403b3a: je 0x403d93
403b40: cmp rax, -1
403b44: je 0x403d86
403b4a: mov rax, qword ptr [rax + rbx*8]
403b4e: test rax, rax
403b51: je 0x403beb
403b57: mov rdi, qword ptr [rax]
403b5a: mov qword ptr [rbp - 0x78], rdi
403b5e: add rax, 8
403b62: mov qword ptr [rbp - 0x70], rax
403b66: jmp 0x403721
403b6b: nop dword ptr [rax + rax]
403b70: mov eax, dword ptr [rip + 0xbeb4a]
403b76: mov r14, qword ptr [rip + 0xbeb3b]
403b7d: test eax, eax
403b7f: je 0x403bbb
403b81: test r14, r14
403b84: jne 0x4038cd
403b8a: mov rax, 0xffffffffffffffa0
403b91: mov rax, qword ptr fs:[rax]
403b95: mov rax, qword ptr [rax]
403b98: mov r14, qword ptr [rax + 0xb0]
403b9f: jmp 0x4038cd
403ba4: nop dword ptr [rax]
403ba8: add rax, rcx
403bab: mov qword ptr [rbp - 0x70], rax
403baf: lea eax, [rdx + 1]
403bb2: mov qword ptr [rbp - 0x78], rax
403bb6: jmp 0x403713
403bbb: lea rdi, [rip + 0x9177e]
403bc2: call 0x40fe70
403bc7: mov r12, rax
403bca: test rax, rax
403bcd: je 0x403bd8
403bcf: cmp byte ptr [rax], 0
403bd2: jne 0x403ddc
403bd8: mov r14, qword ptr [rip + 0xbead9]
403bdf: mov dword ptr [rip + 0xbead7], 1
403be9: jmp 0x403b81
403beb: mov eax, dword ptr fs:[0x18]
403bf3: test eax, eax
403bf5: jne 0x403e98
403bfb: mov edx, 1
403c00: cmpxchg dword ptr [rip + 0xbead1], edx
403c07: mov rax, qword ptr [rbp - 0x70]
403c0b: mov qword ptr [rbp - 0x68], rbx
403c0f: xor r14d, r14d
403c12: lea r13, [rbp - 0x50]
403c16: mov rdx, qword ptr [rip + 0xbeaab]
403c1d: mov qword ptr [rbp - 0x60], rax
403c21: mov rax, qword ptr [rip + 0xbeaa8]
403c28: add rax, 8
403c2c: mov qword ptr [rbp - 0x58], rax
403c30: jmp 0x403c8d
403c32: nop word ptr [rax + rax]
403c38: add r14d, 1
403c3c: mov rbx, qword ptr [rip + 0xbea9d]
403c43: imul edx, r14d, 0xff0
403c4a: mov rdi, rbx
403c4d: movsxd r15, edx
403c50: mov rsi, r15
403c53: mov qword ptr [rip + 0xbea6e], r15
403c5a: call 0x427100
403c5f: test rax, rax
403c62: je 0x403d24
403c68: mov qword ptr [rip + 0xbea71], rax
403c6f: lea rdx, [r15 - 8]
403c73: lea rcx, [rax + 8]
403c77: add rax, 0x10
403c7b: mov qword ptr [rip + 0xbea46], rdx
403c82: mov qword ptr [rip + 0xbea47], rcx
403c89: mov qword ptr [rbp - 0x58], rax
403c8d: cmp rdx, 7
403c91: jbe 0x403cd4
403c93: mov r11, qword ptr [rbp - 0x78]
403c97: mov rdi, qword ptr [r12 + 8]
403c9c: lea rcx, [rbp - 0x58]
403ca0: mov r9, r13
403ca3: add r11, qword ptr [rbp - 0x60]
403ca7: lea r8, [rax + rdx - 8]
403cac: lea rsi, [rbp - 0x60]
403cb0: mov rdx, r11
403cb3: call 0x457440
403cb8: mov edx, eax
403cba: and edx, 0xfffffffb
403cbd: je 0x403e22
403cc3: cmp eax, 5
403cc6: jne 0x403731
403ccc: mov rax, qword ptr [rbp - 0x70]
403cd0: mov qword ptr [rbp - 0x60], rax
403cd4: test r14d, r14d
403cd7: jne 0x403c38
403cdd: mov qword ptr [rip + 0xbe9e0], 0xff0
403ce8: mov edi, 0xff0
403ced: call 0x426410
403cf2: test rax, rax
403cf5: je 0x403d36
403cf7: mov rdx, qword ptr [rip + 0xbe9e2]
403cfe: mov r14d, 1
403d04: mov qword ptr [rip + 0xbe9d5], rax
403d0b: mov qword ptr [rax], rdx
403d0e: mov edx, 0xfe8
403d13: jmp 0x403c73
403d18: mov rbx, qword ptr [rbp - 0x88]
403d1f: jmp 0x403b10
403d24: mov rax, qword ptr [rbx]
403d27: mov rdi, rbx
403d2a: mov qword ptr [rip + 0xbe9af], rax
403d31: call 0x426a00
403d36: mov qword ptr [rip + 0xbe98f], 0
403d41: mov qword ptr [rip + 0xbe97c], 0
403d4c: mov eax, dword ptr fs:[0x18]
403d54: test eax, eax
403d56: jne 0x403ef0
403d5c: sub dword ptr [rip + 0xbe975], 1
403d63: mov qword ptr [rbp - 0x70], 0xffffffffffffffff
403d6b: jmp 0x403758
403d70: cmp qword ptr [rip + 0xbc1e8], 0
403d78: je 0x403d86
403d7a: lea rdi, [r13 + 0x80]
403d81: call 0
403d86: mov qword ptr [rbp - 0x70], 0xffffffffffffffff
403d8e: jmp 0x403758
403d93: mov eax, dword ptr fs:[0x18]
403d9b: test eax, eax
403d9d: jne 0x403f56
403da3: mov edx, 1
403da8: cmpxchg dword ptr [rip + 0xbe929], edx
403daf: cmp qword ptr [r12 + 0x10], 0
403db5: je 0x403f29
403dbb: mov eax, dword ptr fs:[0x18]
403dc3: test eax, eax
403dc5: jne 0x403f81
403dcb: sub dword ptr [rip + 0xbe906], 1
403dd2: mov rax, qword ptr [r12 + 0x10]
403dd7: jmp 0x403b40
403ddc: mov rdi, rax
403ddf: call 0x401180
403de4: lea r15, [rax + 1]
403de8: mov rdi, r15
403deb: call 0x426410
403df0: mov r14, rax
403df3: test rax, rax
403df6: je 0x403e06
403df8: mov rdx, r15
403dfb: mov rsi, r12
403dfe: mov rdi, rax
403e01: call 0x401060
403e06: mov qword ptr [rip + 0xbe8ab], r14
403e0d: jmp 0x403bdf
403e12: mov rdi, rsi
403e15: call 0x426410
403e1a: mov r12, rax
403e1d: jmp 0x4039c2
403e22: mov rsi, qword ptr [rbp - 0x58]
403e26: mov rax, qword ptr [rip + 0xbe8a3]
403e2d: mov rbx, qword ptr [rbp - 0x68]
403e31: mov rcx, rsi
403e34: sub rcx, rax
403e37: lea r8, [rbx*8]
403e3f: lea rdi, [rcx - 8]
403e43: mov qword ptr [rax], rdi
403e46: mov qword ptr [rbp - 0x78], rdi
403e4a: mov rdi, qword ptr [r12 + 0x10]
403e4f: mov qword ptr [rdi + rbx*8], rax
403e53: mov rbx, qword ptr [rip + 0xbe86e]
403e5a: sub rbx, rcx
403e5d: mov r9, rbx
403e60: mov rcx, rbx
403e63: and r9d, 7
403e67: and rcx, 0xfffffffffffffff8
403e6b: add rsi, r9
403e6e: mov qword ptr [rip + 0xbe853], rcx
403e75: mov qword ptr [rip + 0xbe854], rsi
403e7c: mov ecx, dword ptr fs:[0x18]
403e84: test ecx, ecx
403e86: jne 0x403f98
403e8c: sub dword ptr [rip + 0xbe845], 1
403e93: jmp 0x403b5e
403e98: xor eax, eax
403e9a: mov edx, 1
403e9f: lock cmpxchg dword ptr [rip + 0xbe831], edx
403ea7: je 0x403c07
403ead: lea rdi, [rip + 0xbe824]
403eb4: call 0x421250
403eb9: jmp 0x403c07
403ebe: add eax, 1
403ec1: je 0x403fd1
403ec7: cmp qword ptr [rip + 0xbc091], 0
403ecf: je 0x403edd
403ed1: lea rdi, [r13 + 0x80]
403ed8: call 0
403edd: mov rdi, r15
403ee0: call 0x426a00
403ee5: xor edi, edi
403ee7: mov qword ptr [rbp - 0x70], rdi
403eeb: jmp 0x403758
403ef0: xor eax, eax
403ef2: xchg dword ptr [rip + 0xbe7e0], eax
403ef8: mov qword ptr [rbp - 0x70], 0xffffffffffffffff
403f00: cmp eax, 1
403f03: jle 0x403758
403f09: xor r10d, r10d
403f0c: mov edx, 1
403f11: mov esi, 0x81
403f16: mov eax, 0xca
403f1b: lea rdi, [rip + 0xbe7b6]
403f22: syscall 
403f24: jmp 0x403758
403f29: mov edi, dword ptr [rbp - 0x68]
403f2c: mov esi, 8
403f31: add edi, dword ptr [r13 + 0x40]
403f35: call 0x427d10
403f3a: mov qword ptr [r12 + 0x10], rax
403f3f: test rax, rax
403f42: jne 0x403c07
403f48: mov qword ptr [r12 + 0x10], 0xffffffffffffffff
403f51: jmp 0x403dbb
403f56: xor eax, eax
403f58: mov edx, 1
403f5d: lock cmpxchg dword ptr [rip + 0xbe773], edx
403f65: je 0x403daf
403f6b: lea rdi, [rip + 0xbe766]
403f72: call 0x421250
403f77: jmp 0x403daf
403f7c: call 0x4547a0
403f81: xor eax, eax
403f83: xchg dword ptr [rip + 0xbe74f], eax
403f89: sub eax, 1
403f8c: jg 0x403fdf
403f8e: mov rax, qword ptr [r12 + 0x10]
403f93: jmp 0x403b40
403f98: xchg dword ptr [rip + 0xbe73a], edx
403f9e: sub edx, 1
403fa1: jg 0x403ffc
403fa3: mov rax, qword ptr [rdi + r8]
403fa7: mov rdi, qword ptr [rax]
403faa: mov qword ptr [rbp - 0x78], rdi
403fae: jmp 0x403b5e
403fb3: xor eax, eax
403fb5: xchg dword ptr [rip + 0xbe71d], eax
403fbb: sub eax, 1
403fbe: mov qword ptr [rbp - 0x70], 0
403fc6: jle 0x403758
403fcc: jmp 0x403f09
403fd1: mov qword ptr [r12 + 8], 0xffffffffffffffff
403fda: jmp 0x403afa
403fdf: xor r10d, r10d
403fe2: mov edx, 1
403fe7: mov esi, 0x81
403fec: mov eax, 0xca
403ff1: lea rdi, [rip + 0xbe6e0]
403ff8: syscall 
403ffa: jmp 0x403f8e
403ffc: xor r10d, r10d
403fff: mov edx, 1
404004: mov esi, 0x81
404009: mov eax, 0xca
40400e: lea rdi, [rip + 0xbe6c3]
404015: syscall 
404017: mov rax, qword ptr [r12 + 0x10]
40401c: mov rax, qword ptr [rax + r8]
404020: jmp 0x403b57
404025: nop word ptr cs:[rax + rax]
404030: endbr64 
404034: push rbp
404035: mov rbp, rsp
404038: push r15
40403a: push r14
40403c: push r13
40403e: push r12
404040: push rbx
404041: sub rsp, 0xd8
404048: mov qword ptr [rbp - 0xc8], rdx
40404f: mov dword ptr [rbp - 0xb0], ecx
404055: mov qword ptr [rbp - 0xb8], r8
40405c: mov dword ptr [rbp - 0xac], r9d
404063: mov rcx, qword ptr fs:[0x28]
40406c: mov qword ptr [rbp - 0x38], rcx
404070: xor ecx, ecx
404072: mov qword ptr [rbp - 0x90], 0
40407d: test rsi, rsi
404080: je 0x404680
404086: mov r14, rsi
404089: cmp r9d, 0xc
40408d: ja 0x4045d0
404093: cmp r9d, 6
404097: je 0x4045d0
40409d: mov rax, 0xffffffffffffffc0
4040a4: mov rbx, 0
4040ab: mov r13, rdi
4040ae: mov eax, dword ptr fs:[rax]
4040b1: mov dword ptr [rbp - 0xd4], eax
4040b7: test rbx, rbx
4040ba: je 0x4040d4
4040bc: lea rdi, [rip + 0xbed3d]
4040c3: call 0
4040c8: lea rdi, [rip + 0xbe5b1]
4040cf: call 0
4040d4: mov eax, dword ptr [rbp - 0xac]
4040da: test r13, r13
4040dd: cmove r13, qword ptr [rip + 0xbc013]
4040e5: mov qword ptr [rbp - 0x48], r14
4040e9: mov qword ptr [rbp - 0x60], 0
4040f1: mov edi, eax
4040f3: mov qword ptr [rbp - 0x80], r13
4040f7: mov dword ptr [rbp - 0x78], eax
4040fa: call 0x464f10
4040ff: mov qword ptr [rbp - 0xe8], rax
404106: mov qword ptr [rbp - 0x70], rax
40410a: test rbx, rbx
40410d: je 0x40411b
40410f: lea rdi, [rip + 0xbe5ea]
404116: call 0
40411b: lea rdi, [rbp - 0x80]
40411f: lea rdx, [rip - 0xc26]
404126: lea rsi, [rip + 0xbe5bb]
40412d: call 0x452270
404132: cmp qword ptr [rip + 0xbbe26], 0
40413a: mov qword ptr [rbp - 0xd0], rax
404141: je 0x40414f
404143: lea rdi, [rip + 0xbe5b6]
40414a: call 0
40414f: mov rax, qword ptr [rbp - 0xd0]
404156: test rax, rax
404159: je 0x40416d
40415b: mov rax, qword ptr [rax]
40415e: mov ecx, dword ptr [rip + 0xbf5e4]
404164: cmp dword ptr [rax + 0x18], ecx
404167: je 0x404618
40416d: mov r12, qword ptr [rip + 0xbf5cc]
404174: test r12, r12
404177: jne 0x404463
40417d: nop dword ptr [rax]
404180: lea rax, [rip + 0x911f9]
404187: mov qword ptr [rbp - 0x98], rax
40418e: movsxd rax, dword ptr [rbp - 0xac]
404195: lea rdx, [rip + 0x966c4]
40419c: mov rdi, rax
40419f: movzx eax, byte ptr [rdx + rax]
4041a3: lea rdx, [rip + 0x966d6]
4041aa: lea r15, [rax + rdx]
4041ae: call 0x464f10
4041b3: cmp byte ptr [rax], 0x43
4041b6: mov rbx, rax
4041b9: jne 0x4045f0
4041bf: cmp byte ptr [rax + 1], 0
4041c3: jne 0x4045f0
4041c9: mov rdi, r13
4041cc: call 0x401180
4041d1: mov rdi, r15
4041d4: mov qword ptr [rbp - 0xe0], rax
4041db: call 0x401180
4041e0: mov rcx, qword ptr [rbp - 0xe0]
4041e7: lea rax, [rcx + rax + 0x1c]
4041ec: mov rcx, rsp
4041ef: mov rdx, rax
4041f2: and rax, 0xfffffffffffff000
4041f8: sub rcx, rax
4041fb: and rdx, 0xfffffffffffffff0
4041ff: mov rax, rcx
404202: cmp rsp, rax
404205: je 0x40421c
404207: sub rsp, 0x1000
40420e: or qword ptr [rsp + 0xff8], 0
404217: cmp rsp, rax
40421a: jne 0x404207
40421c: and edx, 0xfff
404222: sub rsp, rdx
404225: test rdx, rdx
404228: je 0x404230
40422a: or qword ptr [rsp + rdx - 8], 0
404230: lea rax, [rsp + 0xf]
404235: mov rsi, r15
404238: and rax, 0xfffffffffffffff0
40423c: mov rdi, rax
40423f: mov qword ptr [rbp - 0xa8], rax
404246: call 0x401090
40424b: mov edi, 0x2f
404250: mov rdx, qword ptr [rbp - 0xe0]
404257: mov rsi, r13
40425a: mov word ptr [rax], di
40425d: lea rdi, [rax + 1]
404261: call 0x401150
404266: mov rdi, rbx
404269: mov dword ptr [rax], 0x6f6d2e
40426f: call 0x401180
404274: mov rcx, rsp
404277: add rax, 0x18
40427b: mov rdx, rax
40427e: and rax, 0xfffffffffffff000
404284: sub rcx, rax
404287: and rdx, 0xfffffffffffffff0
40428b: mov rax, rcx
40428e: cmp rsp, rax
404291: je 0x4042a8
404293: sub rsp, 0x1000
40429a: or qword ptr [rsp + 0xff8], 0
4042a3: cmp rsp, rax
4042a6: jne 0x404293
4042a8: and edx, 0xfff
4042ae: sub rsp, rdx
4042b1: test rdx, rdx
4042b4: je 0x4042bc
4042b6: or qword ptr [rsp + rdx - 8], 0
4042bc: lea r10, [rsp + 0xf]
4042c1: mov qword ptr [rbp - 0xc0], r13
4042c8: mov r15, r12
4042cb: and r10, 0xfffffffffffffff0
4042cf: mov r13, r10
4042d2: nop word ptr [rax + rax]
4042d8: movzx eax, byte ptr [rbx]
4042db: cmp al, 0x3a
4042dd: je 0x404690
4042e3: test al, al
4042e5: jne 0x4046a0
4042eb: mov esi, 0x43
4042f0: mov word ptr [r13], si
4042f5: cmp byte ptr [r13], 0x43
4042fa: jne 0x404307
4042fc: cmp byte ptr [r13 + 1], 0
404301: je 0x404550
404307: mov ecx, 6
40430c: mov rsi, r13
40430f: lea rdi, [rip + 0x91055]
404316: repe cmpsb byte ptr [rsi], byte ptr [rdi]
404318: seta al
40431b: sbb al, 0
40431d: test al, al
40431f: je 0x404550
404325: mov rdx, qword ptr [rbp - 0xa8]
40432c: mov rdi, qword ptr [rbp - 0x98]
404333: mov rcx, r15
404336: mov rsi, r13
404339: call 0x404990
40433e: mov r12, rax
404341: test rax, rax
404344: je 0x4042d8
404346: lea r8, [rbp - 0x88]
40434d: mov rdx, r14
404350: mov rsi, r15
404353: mov rdi, rax
404356: mov ecx, 1
40435b: mov qword ptr [rbp - 0xa0], r8
404362: call 0x403580
404367: mov r8, qword ptr [rbp - 0xa0]
40436e: test rax, rax
404371: mov rcx, rax
404374: je 0x4044e8
40437a: mov r13, qword ptr [rbp - 0xc0]
404381: mov r9, r12
404384: cmp rax, -1
404388: je 0x404550
40438e: mov rdi, qword ptr [rbp - 0x90]
404395: mov qword ptr [rbp - 0xa0], rcx
40439c: mov qword ptr [rbp - 0x98], r9
4043a3: call 0x426a00
4043a8: cmp qword ptr [rbp - 0xd0], 0
4043b0: mov r9, qword ptr [rbp - 0x98]
4043b7: mov rcx, qword ptr [rbp - 0xa0]
4043be: je 0x4047f6
4043c4: mov edx, dword ptr [rip + 0xbf37e]
4043ca: movq xmm0, r9
4043cf: movq xmm1, rcx
4043d4: mov rax, qword ptr [rbp - 0xd0]
4043db: punpcklqdq xmm0, xmm1
4043df: mov rax, qword ptr [rax]
4043e2: mov dword ptr [rax + 0x18], edx
4043e5: mov rdx, qword ptr [rbp - 0x88]
4043ec: movups xmmword ptr [rax + 0x20], xmm0
4043f0: mov qword ptr [rax + 0x30], rdx
4043f4: mov rax, 0xffffffffffffffc0
4043fb: mov ebx, dword ptr [rbp - 0xd4]
404401: mov dword ptr fs:[rax], ebx
404404: mov edx, dword ptr [rbp - 0xb0]
40440a: test edx, edx
40440c: jne 0x404786
404412: cmp qword ptr [rip + 0xbbb46], 0
40441a: je 0x4045a5
404420: lea rdi, [rip + 0xbe259]
404427: mov qword ptr [rbp - 0x98], rcx
40442e: call 0
404433: lea rdi, [rip + 0xbe9c6]
40443a: call 0
40443f: mov rcx, qword ptr [rbp - 0x98]
404446: jmp 0x4045a5
40444b: nop dword ptr [rax + rax]
404450: js 0x404678
404456: mov r12, qword ptr [r12]
40445a: test r12, r12
40445d: je 0x404180
404463: lea rsi, [r12 + 0x18]
404468: mov rdi, r13
40446b: call 0x401130
404470: test eax, eax
404472: jne 0x404450
404474: mov rax, qword ptr [r12 + 8]
404479: cmp byte ptr [rax], 0x2f
40447c: mov qword ptr [rbp - 0x98], rax
404483: je 0x40418e
404489: xor esi, esi
40448b: xor edi, edi
40448d: call 0x450fc0
404492: mov r15, rax
404495: test rax, rax
404498: je 0x404550
40449e: mov rcx, qword ptr [rbp - 0x98]
4044a5: lea rdi, [rbp - 0x90]
4044ac: mov rdx, rax
4044af: xor eax, eax
4044b1: lea rsi, [rip + 0x90ea4]
4044b8: call 0x410da0
4044bd: mov rdi, r15
4044c0: mov ebx, eax
4044c2: call 0x426a00
4044c7: test ebx, ebx
4044c9: js 0x404550
4044cf: mov rax, qword ptr [rbp - 0x90]
4044d6: mov qword ptr [rbp - 0x98], rax
4044dd: jmp 0x40418e
4044e2: nop word ptr [rax + rax]
4044e8: mov rdi, qword ptr [r12 + 0x20]
4044ed: test rdi, rdi
4044f0: je 0x4042d8
4044f6: xor r11d, r11d
4044f9: mov qword ptr [rbp - 0xf0], rbx
404500: mov rbx, r8
404503: mov qword ptr [rbp - 0xf8], r13
40450a: mov r13, r11
40450d: jmp 0x40452b
40450f: nop 
404510: test rax, rax
404513: jne 0x4046e9
404519: add r13, 1
40451d: mov rdi, qword ptr [r12 + r13*8 + 0x20]
404522: test rdi, rdi
404525: je 0x404704
40452b: mov r8, rbx
40452e: mov ecx, 1
404533: mov rdx, r14
404536: mov rsi, r15
404539: mov dword ptr [rbp - 0xa0], r13d
404540: call 0x403580
404545: cmp rax, -1
404549: jne 0x404510
40454b: nop dword ptr [rax + rax]
404550: mov rdi, qword ptr [rbp - 0x90]
404557: call 0x426a00
40455c: cmp qword ptr [rip + 0xbb9fc], 0
404564: je 0x40457e
404566: lea rdi, [rip + 0xbe113]
40456d: call 0
404572: lea rdi, [rip + 0xbe887]
404579: call 0
40457e: mov rax, 0xffffffffffffffc0
404585: mov ecx, dword ptr [rbp - 0xd4]
40458b: mov dword ptr fs:[rax], ecx
40458e: cmp qword ptr [rbp - 0xb8], 1
404596: je 0x4045a2
404598: mov eax, dword ptr [rbp - 0xb0]
40459e: test eax, eax
4045a0: jne 0x4045e6
4045a2: mov rcx, r14
4045a5: mov rax, qword ptr [rbp - 0x38]
4045a9: xor rax, qword ptr fs:[0x28]
4045b2: jne 0x404975
4045b8: lea rsp, [rbp - 0x28]
4045bc: mov rax, rcx
4045bf: pop rbx
4045c0: pop r12
4045c2: pop r13
4045c4: pop r14
4045c6: pop r15
4045c8: pop rbp
4045c9: ret 
4045ca: nop word ptr [rax + rax]
4045d0: mov r9d, dword ptr [rbp - 0xb0]
4045d7: test r9d, r9d
4045da: je 0x4045a2
4045dc: cmp qword ptr [rbp - 0xb8], 1
4045e4: je 0x4045a2
4045e6: mov rcx, qword ptr [rbp - 0xc8]
4045ed: jmp 0x4045a5
4045ef: nop 
4045f0: lea rdi, [rip + 0x90d6b]
4045f7: call 0x40fe70
4045fc: test rax, rax
4045ff: je 0x4041c9
404605: cmp byte ptr [rax], 0
404608: cmovne rbx, rax
40460c: jmp 0x4041c9
404611: nop dword ptr [rax]
404618: mov r8d, dword ptr [rbp - 0xb0]
40461f: mov rcx, qword ptr [rax + 0x28]
404623: test r8d, r8d
404626: jne 0x404717
40462c: cmp qword ptr [rip + 0xbb92c], 0
404634: je 0x40465c
404636: lea rdi, [rip + 0xbe043]
40463d: mov qword ptr [rbp - 0x98], rcx
404644: call 0
404649: lea rdi, [rip + 0xbe7b0]
404650: call 0
404655: mov rcx, qword ptr [rbp - 0x98]
40465c: mov rax, 0xffffffffffffffc0
404663: mov esi, dword ptr [rbp - 0xd4]
404669: mov dword ptr fs:[rax], esi
40466c: jmp 0x4045a5
404671: nop dword ptr [rax]
404678: xor r12d, r12d
40467b: jmp 0x404180
404680: xor ecx, ecx
404682: jmp 0x4045a5
404687: nop word ptr [rax + rax]
404690: add rbx, 1
404694: jmp 0x4042d8
404699: nop dword ptr [rax]
4046a0: mov rdx, r13
4046a3: nop dword ptr [rax + rax]
4046a8: add rbx, 1
4046ac: mov byte ptr [rdx], al
4046ae: add rdx, 1
4046b2: movzx eax, byte ptr [rbx]
4046b5: test al, al
4046b7: je 0x4046bd
4046b9: cmp al, 0x3a
4046bb: jne 0x4046a8
4046bd: mov ecx, dword ptr [rip + 0xbb3dd]
4046c3: mov byte ptr [rdx], 0
4046c6: test ecx, ecx
4046c8: je 0x4042f5
4046ce: mov esi, 0x2f
4046d3: mov rdi, r13
4046d6: call 0x401190
4046db: test rax, rax
4046de: jne 0x4042d8
4046e4: jmp 0x4042f5
4046e9: movsxd r15, dword ptr [rbp - 0xa0]
4046f0: mov r13, qword ptr [rbp - 0xc0]
4046f7: mov rcx, rax
4046fa: mov r9, qword ptr [r12 + r15*8 + 0x20]
4046ff: jmp 0x40438e
404704: mov rbx, qword ptr [rbp - 0xf0]
40470b: mov r13, qword ptr [rbp - 0xf8]
404712: jmp 0x4042d8
404717: mov rbx, qword ptr [rax + 0x30]
40471b: mov rax, qword ptr [rax + 0x20]
40471f: mov qword ptr [rbp - 0x98], rcx
404726: mov rsi, qword ptr [rbp - 0xb8]
40472d: mov r13, qword ptr [rax + 0x10]
404731: mov rdi, qword ptr [r13 + 0xb8]
404738: call 0x403310
40473d: cmp rax, qword ptr [r13 + 0xc0]
404744: mov rcx, qword ptr [rbp - 0x98]
40474b: mov r12, rax
40474e: jae 0x40462c
404754: mov rdi, rcx
404757: add rbx, rcx
40475a: mov r13, rcx
40475d: nop dword ptr [rax]
404760: sub r12, 1
404764: cmp r12, -1
404768: je 0x40496d
40476e: xor esi, esi
404770: call 0x401050
404775: lea rdi, [rax + 1]
404779: cmp rdi, rbx
40477c: jb 0x404760
40477e: mov rcx, r13
404781: jmp 0x40462c
404786: mov r13, qword ptr [r9 + 0x10]
40478a: mov rsi, qword ptr [rbp - 0xb8]
404791: mov qword ptr [rbp - 0x98], rcx
404798: mov rbx, qword ptr [rbp - 0x88]
40479f: mov rdi, qword ptr [r13 + 0xb8]
4047a6: call 0x403310
4047ab: cmp rax, qword ptr [r13 + 0xc0]
4047b2: mov rcx, qword ptr [rbp - 0x98]
4047b9: mov r12, rax
4047bc: jae 0x404412
4047c2: mov rdi, rcx
4047c5: add rbx, rcx
4047c8: mov r13, rcx
4047cb: nop dword ptr [rax + rax]
4047d0: sub r12, 1
4047d4: cmp r12, -1
4047d8: je 0x40497a
4047de: xor esi, esi
4047e0: call 0x401050
4047e5: lea rdi, [rax + 1]
4047e9: cmp rdi, rbx
4047ec: jb 0x4047d0
4047ee: mov rcx, r13
4047f1: jmp 0x404412
4047f6: mov rdi, r14
4047f9: call 0x401180
4047fe: mov rdi, qword ptr [rbp - 0xe8]
404805: lea r12, [rax + 1]
404809: call 0x401180
40480e: mov rbx, qword ptr [rbp - 0xe0]
404815: lea rdi, [rbx + rax + 0x3a]
40481a: add rdi, r12
40481d: call 0x426410
404822: mov r9, qword ptr [rbp - 0x98]
404829: mov rcx, qword ptr [rbp - 0xa0]
404830: test rax, rax
404833: mov r15, rax
404836: je 0x4043f4
40483c: mov rdx, r12
40483f: lea rdi, [rax + 0x38]
404843: mov rsi, r14
404846: add rbx, 1
40484a: call 0x401150
40484f: mov rdx, rbx
404852: mov rsi, r13
404855: mov r12, rax
404858: mov rdi, rax
40485b: call 0x401060
404860: add rbx, r12
404863: mov rsi, qword ptr [rbp - 0xe8]
40486a: mov rdi, rbx
40486d: call 0x401020
404872: mov eax, dword ptr [rbp - 0xac]
404878: mov qword ptr [r15], r12
40487b: mov r9, qword ptr [rbp - 0x98]
404882: mov rcx, qword ptr [rbp - 0xa0]
404889: mov qword ptr [r15 + 0x10], rbx
40488d: mov dword ptr [r15 + 8], eax
404891: mov eax, dword ptr [rip + 0xbeeb1]
404897: movq xmm0, r9
40489c: movq xmm2, rcx
4048a1: cmp qword ptr [rip + 0xbb687], 0
4048a9: mov dword ptr [r15 + 0x18], eax
4048ad: mov rax, qword ptr [rbp - 0x88]
4048b4: punpcklqdq xmm0, xmm2
4048b8: movups xmmword ptr [r15 + 0x20], xmm0
4048bd: mov qword ptr [r15 + 0x30], rax
4048c1: je 0x4048dd
4048c3: lea rdi, [rip + 0xbde36]
4048ca: call 0
4048cf: mov rcx, qword ptr [rbp - 0xa0]
4048d6: mov r9, qword ptr [rbp - 0x98]
4048dd: lea rdx, [rip - 0x13e4]
4048e4: lea rsi, [rip + 0xbddfd]
4048eb: mov rdi, r15
4048ee: mov qword ptr [rbp - 0xa0], rcx
4048f5: mov qword ptr [rbp - 0x98], r9
4048fc: call 0x451e70
404901: cmp qword ptr [rip + 0xbb657], 0
404909: mov r9, qword ptr [rbp - 0x98]
404910: mov rcx, qword ptr [rbp - 0xa0]
404917: mov rbx, rax
40491a: je 0x404936
40491c: lea rdi, [rip + 0xbdddd]
404923: call 0
404928: mov rcx, qword ptr [rbp - 0xa0]
40492f: mov r9, qword ptr [rbp - 0x98]
404936: test rbx, rbx
404939: je 0x404944
40493b: cmp qword ptr [rbx], r15
40493e: je 0x4043f4
404944: mov rdi, r15
404947: mov qword ptr [rbp - 0xa0], rcx
40494e: mov qword ptr [rbp - 0x98], r9
404955: call 0x426a00
40495a: mov r9, qword ptr [rbp - 0x98]
404961: mov rcx, qword ptr [rbp - 0xa0]
404968: jmp 0x4043f4
40496d: mov rcx, rdi
404970: jmp 0x40462c
404975: call 0x4547a0
40497a: mov rcx, rdi
40497d: jmp 0x404412
404982: nop word ptr cs:[rax + rax]
40498c: nop dword ptr [rax]
404990: endbr64 
404994: push r15
404996: push r14
404998: push r13
40499a: mov r13, rcx
40499d: push r12
40499f: mov r12, rsi
4049a2: push rbp
4049a3: mov rbp, rdi
4049a6: push rbx
4049a7: mov rbx, rdx
4049aa: sub rsp, 0x48
4049ae: mov rax, qword ptr fs:[0x28]
4049b7: mov qword ptr [rsp + 0x38], rax
4049bc: xor eax, eax
4049be: cmp qword ptr [rip + 0xbb582], 0
4049c6: je 0x4049d4
4049c8: lea rdi, [rip + 0xbdd71]
4049cf: call 0
4049d4: mov rdi, rbp
4049d7: call 0x401180
4049dc: sub rsp, 8
4049e0: xor r9d, r9d
4049e3: xor ecx, ecx
4049e5: push 0
4049e7: lea rdx, [rax + 1]
4049eb: mov r8, r12
4049ee: mov rsi, rbp
4049f1: push rbx
4049f2: lea rdi, [rip + 0xbdd7f]
4049f9: push 0
4049fb: push 0
4049fd: push 0
4049ff: call 0x406b20
404a04: add rsp, 0x30
404a08: cmp qword ptr [rip + 0xbb550], 0
404a10: mov r14, rax
404a13: je 0x404a21
404a15: lea rdi, [rip + 0xbdd24]
404a1c: call 0
404a21: test r14, r14
404a24: je 0x404ab0
404a2a: mov esi, dword ptr [r14 + 8]
404a2e: test esi, esi
404a30: jle 0x404aa0
404a32: cmp qword ptr [r14 + 0x10], 0
404a37: je 0x404a60
404a39: mov rax, qword ptr [rsp + 0x38]
404a3e: xor rax, qword ptr fs:[0x28]
404a47: jne 0x404c20
404a4d: add rsp, 0x48
404a51: mov rax, r14
404a54: pop rbx
404a55: pop rbp
404a56: pop r12
404a58: pop r13
404a5a: pop r14
404a5c: pop r15
404a5e: ret 
404a5f: nop 
404a60: mov rdi, qword ptr [r14 + 0x20]
404a64: test rdi, rdi
404a67: je 0x404a39
404a69: lea rbx, [r14 + 0x20]
404a6d: jmp 0x404a84
404a6f: nop 
404a70: cmp qword ptr [rdi + 0x10], 0
404a75: jne 0x404a39
404a77: mov rdi, qword ptr [rbx + 8]
404a7b: add rbx, 8
404a7f: test rdi, rdi
404a82: je 0x404a39
404a84: mov ecx, dword ptr [rdi + 8]
404a87: test ecx, ecx
404a89: jg 0x404a70
404a8b: mov rsi, r13
404a8e: call 0x404c30
404a93: mov rdi, qword ptr [rbx]
404a96: jmp 0x404a70
404a98: nop dword ptr [rax + rax]
404aa0: mov rsi, r13
404aa3: mov rdi, r14
404aa6: call 0x404c30
404aab: jmp 0x404a32
404aad: nop dword ptr [rax]
404ab0: mov rdi, r12
404ab3: call 0x406930
404ab8: mov qword ptr [rsp + 8], rax
404abd: test rax, rax
404ac0: je 0x404af2
404ac2: mov rdi, rax
404ac5: call 0x401180
404aca: lea r15, [rax + 1]
404ace: mov rdi, r15
404ad1: call 0x426410
404ad6: mov r12, rax
404ad9: test rax, rax
404adc: je 0x404a39
404ae2: mov rsi, qword ptr [rsp + 8]
404ae7: mov rdx, r15
404aea: mov rdi, rax
404aed: call 0x401060
404af2: lea rcx, [rsp + 0x20]
404af7: lea rdx, [rsp + 0x18]
404afc: mov rdi, r12
404aff: lea rsi, [rsp + 0x10]
404b04: lea r9, [rsp + 0x30]
404b09: lea r8, [rsp + 0x28]
404b0e: call 0x4071f0
404b13: mov r15d, eax
404b16: cmp eax, -1
404b19: je 0x404a39
404b1f: cmp qword ptr [rip + 0xbb409], 0
404b27: je 0x404b35
404b29: lea rdi, [rip + 0xbdc10]
404b30: call 0
404b35: mov rdi, rbp
404b38: call 0x401180
404b3d: sub rsp, 8
404b41: mov ecx, r15d
404b44: mov rsi, rbp
404b47: push 1
404b49: lea rdx, [rax + 1]
404b4d: lea rdi, [rip + 0xbdc24]
404b54: push rbx
404b55: push qword ptr [rsp + 0x30]
404b59: push qword ptr [rsp + 0x50]
404b5d: push qword ptr [rsp + 0x50]
404b61: mov r9, qword ptr [rsp + 0x50]
404b66: mov r8, qword ptr [rsp + 0x40]
404b6b: call 0x406b20
404b70: add rsp, 0x30
404b74: cmp qword ptr [rip + 0xbb3e4], 0
404b7c: mov r14, rax
404b7f: je 0x404b8d
404b81: lea rdi, [rip + 0xbdbb8]
404b88: call 0
404b8d: test r14, r14
404b90: je 0x404bb1
404b92: mov edx, dword ptr [r14 + 8]
404b96: test edx, edx
404b98: jle 0x404c10
404b9a: cmp qword ptr [r14 + 0x10], 0
404b9f: je 0x404bd0
404ba1: cmp qword ptr [rsp + 8], 0
404ba7: je 0x404bb1
404ba9: mov rdi, r12
404bac: call 0x426a00
404bb1: and r15d, 1
404bb5: je 0x404a39
404bbb: mov rdi, qword ptr [rsp + 0x30]
404bc0: call 0x426a00
404bc5: jmp 0x404a39
404bca: nop word ptr [rax + rax]
404bd0: mov rdi, qword ptr [r14 + 0x20]
404bd4: test rdi, rdi
404bd7: je 0x404ba1
404bd9: lea rbx, [r14 + 0x20]
404bdd: jmp 0x404bf4
404bdf: nop 
404be0: cmp qword ptr [rdi + 0x10], 0
404be5: jne 0x404ba1
404be7: mov rdi, qword ptr [rbx + 8]
404beb: add rbx, 8
404bef: test rdi, rdi
404bf2: je 0x404ba1
404bf4: mov eax, dword ptr [rdi + 8]
404bf7: test eax, eax
404bf9: jg 0x404be0
404bfb: mov rsi, r13
404bfe: call 0x404c30
404c03: mov rdi, qword ptr [rbx]
404c06: jmp 0x404be0
404c08: nop dword ptr [rax + rax]
404c10: mov rsi, r13
404c13: mov rdi, r14
404c16: call 0x404c30
404c1b: jmp 0x404b9a
404c20: call 0x4547a0
404c25: nop word ptr cs:[rax + rax]
404c2f: nop 
404c30: endbr64 
404c34: push r15
404c36: push r14
404c38: push r13
404c3a: push r12
404c3c: push rbp
404c3d: push rbx
404c3e: mov rbx, rdi
404c41: mov rbp, qword ptr fs:[0x10]
404c4a: sub rsp, 0x178
404c51: mov qword ptr [rsp + 8], rsi
404c56: mov rax, qword ptr fs:[0x28]
404c5f: mov qword ptr [rsp + 0x168], rax
404c67: xor eax, eax
404c69: cmp qword ptr [rip + 0xbdb18], rbp
404c70: je 0x404c95
404c72: mov eax, dword ptr fs:[0x18]
404c7a: test eax, eax
404c7c: jne 0x4051b8
404c82: mov edx, 1
404c87: cmpxchg dword ptr [rip + 0xbdaf2], edx
404c8e: mov qword ptr [rip + 0xbdaf3], rbp
404c95: mov eax, dword ptr [rip + 0xbdae9]
404c9b: mov ebp, dword ptr [rbx + 8]
404c9e: lea edx, [rax + 1]
404ca1: mov dword ptr [rip + 0xbdadd], edx
404ca7: test ebp, ebp
404ca9: jne 0x4050cf
404caf: mov rdi, qword ptr [rbx]
404cb2: mov dword ptr [rbx + 8], 0xffffffff
404cb9: mov qword ptr [rbx + 0x10], 0
404cc1: test rdi, rdi
404cc4: je 0x4050c8
404cca: xor esi, esi
404ccc: xor eax, eax
404cce: call 0x4518a0
404cd3: mov ebp, eax
404cd5: cmp eax, -1
404cd8: je 0x40513e
404cde: lea rdx, [rsp + 0xd0]
404ce6: mov esi, eax
404ce8: mov edi, 1
404ced: call 0x450c30
404cf2: mov dword ptr [rsp + 0x14], eax
404cf6: test eax, eax
404cf8: jne 0x405137
404cfe: mov r14, qword ptr [rsp + 0x100]
404d06: cmp r14, 0x2f
404d0a: jbe 0x405137
404d10: xor r9d, r9d
404d13: mov r8d, ebp
404d16: mov ecx, 2
404d1b: mov edx, 1
404d20: mov rsi, r14
404d23: xor edi, edi
404d25: call 0x451bc0
404d2a: mov r15, rax
404d2d: cmp rax, -1
404d31: je 0x405230
404d37: mov edi, ebp
404d39: call 0x451730
404d3e: mov r12d, dword ptr [r15]
404d41: cmp r12d, 0x950412de
404d48: setne al
404d4b: mov ebp, eax
404d4d: cmp r12d, 0xde120495
404d54: je 0x404d5e
404d56: test al, al
404d58: jne 0x405350
404d5e: mov dword ptr [rsp + 0x14], 1
404d66: mov edi, 0xc8
404d6b: call 0x426410
404d70: mov r13, rax
404d73: test rax, rax
404d76: je 0x40513e
404d7c: mov qword ptr [rax], r15
404d7f: movzx edx, bpl
404d83: mov qword ptr [rbx + 0x10], rax
404d87: mov eax, dword ptr [rsp + 0x14]
404d8b: mov qword ptr [r13 + 0x10], r14
404d8f: mov dword ptr [r13 + 8], eax
404d93: mov eax, dword ptr [r15 + 4]
404d97: mov dword ptr [r13 + 0x18], edx
404d9b: mov qword ptr [r13 + 0x20], 0
404da3: cmp r12d, 0x950412de
404daa: je 0x404fe0
404db0: bswap eax
404db2: cmp eax, 0x1ffff
404db7: ja 0x405180
404dbd: mov esi, dword ptr [r15 + 8]
404dc1: mov edi, dword ptr [r15 + 0x10]
404dc5: movzx eax, ax
404dc8: bswap esi
404dca: mov dword ptr [r13 + 0x28], esi
404dce: mov esi, dword ptr [r15 + 0xc]
404dd2: bswap edi
404dd4: bswap esi
404dd6: mov esi, esi
404dd8: lea rcx, [r15 + rsi]
404ddc: mov esi, edi
404dde: add rsi, r15
404de1: movq xmm0, rcx
404de6: movq xmm1, rsi
404deb: mov esi, dword ptr [r15 + 0x14]
404def: punpcklqdq xmm0, xmm1
404df3: bswap esi
404df5: movups xmmword ptr [r13 + 0x30], xmm0
404dfa: mov dword ptr [rsp + 0x18], esi
404dfe: mov dword ptr [r13 + 0x58], esi
404e02: cmp esi, 2
404e05: jbe 0x40502d
404e0b: mov esi, dword ptr [r15 + 0x18]
404e0f: mov dword ptr [r13 + 0x68], edx
404e13: bswap esi
404e15: mov esi, esi
404e17: lea rcx, [r15 + rsi]
404e1b: mov qword ptr [rsp + 0x38], rcx
404e20: mov qword ptr [r13 + 0x60], rcx
404e24: test eax, eax
404e26: je 0x405041
404e2c: mov eax, dword ptr [r15 + 0x24]
404e30: bswap eax
404e32: mov dword ptr [rsp + 0x20], eax
404e36: test eax, eax
404e38: je 0x405041
404e3e: mov eax, dword ptr [r15 + 0x1c]
404e42: bswap eax
404e44: mov dword ptr [rsp + 0x30], eax
404e48: mov eax, dword ptr [r15 + 0x20]
404e4c: bswap eax
404e4e: mov eax, eax
404e50: mov edi, dword ptr [rsp + 0x30]
404e54: mov esi, 8
404e59: lea rbp, [r15 + rax]
404e5d: call 0x427d10
404e62: mov r9, rax
404e65: test rax, rax
404e68: je 0x405180
404e6e: mov eax, dword ptr [rsp + 0x30]
404e72: xor edx, edx
404e74: lea rcx, [rip + 0x90535]
404e7b: lea r10d, [rax - 1]
404e7f: test eax, eax
404e81: jne 0x404ebb
404e83: jmp 0x405388
404e88: nop dword ptr [rax + rax]
404e90: cmp sil, 0x49
404e94: jne 0x405340
404e9a: cmp byte ptr [rax + 1], 0
404e9e: mov esi, 0
404ea3: cmove rsi, rcx
404ea7: mov qword ptr [r9 + rdx*8], rsi
404eab: lea rax, [rdx + 1]
404eaf: cmp r10, rdx
404eb2: je 0x405388
404eb8: mov rdx, rax
404ebb: mov eax, dword ptr [rbp + rdx*8 + 4]
404ebf: mov edi, dword ptr [rbp + rdx*8]
404ec3: mov rsi, rax
404ec6: add rax, r15
404ec9: cmp r12d, 0x950412de
404ed0: je 0x404edb
404ed2: bswap esi
404ed4: mov eax, esi
404ed6: bswap edi
404ed8: add rax, r15
404edb: test edi, edi
404edd: je 0x405327
404ee3: lea esi, [rdi - 1]
404ee6: cmp byte ptr [rax + rsi], 0
404eea: jne 0x405327
404ef0: movzx esi, byte ptr [rax]
404ef3: cmp sil, 0x50
404ef7: jne 0x404e90
404ef9: xor esi, esi
404efb: cmp byte ptr [rax + 1], 0x52
404eff: jne 0x404ea7
404f01: cmp byte ptr [rax + 2], 0x49
404f05: jne 0x404ea7
404f07: movzx edi, byte ptr [rax + 3]
404f0b: cmp dil, 0x64
404f0f: sete r11b
404f13: cmp dil, 0x69
404f17: sete r8b
404f1b: or r8d, r11d
404f1e: cmp dil, 0x6f
404f22: sete r11b
404f26: mov byte ptr [rsp + 0x28], r8b
404f2b: or r11d, r8d
404f2e: cmp dil, 0x75
404f32: mov r8d, r11d
404f35: mov byte ptr [rsp + 0x48], r11b
404f3a: sete r11b
404f3e: or r11d, r8d
404f41: mov r8d, edi
404f44: and r8d, 0xffffffdf
404f48: cmp r8b, 0x58
404f4c: je 0x404f57
404f4e: test r11b, r11b
404f51: je 0x404ea7
404f57: movzx esi, byte ptr [rax + 4]
404f5b: cmp sil, 0x38
404f5f: je 0x4057a0
404f65: cmp sil, 0x31
404f69: je 0x4057f3
404f6f: cmp sil, 0x33
404f73: jne 0x405547
404f79: xor esi, esi
404f7b: cmp byte ptr [rax + 5], 0x32
404f7f: jne 0x404ea7
404f85: cmp byte ptr [rax + 6], 0
404f89: jne 0x404ea7
404f8f: cmp dil, 0x64
404f93: je 0x405ebe
404f99: cmp byte ptr [rsp + 0x28], 0
404f9e: jne 0x405e87
404fa4: cmp byte ptr [rsp + 0x48], 0
404fa9: jne 0x405fae
404faf: test r11b, r11b
404fb2: jne 0x405f72
404fb8: cmp dil, 0x78
404fbc: je 0x405f66
404fc2: cmp dil, 0x58
404fc6: jne 0x4063fd
404fcc: lea rsi, [rip + 0xa6374]
404fd3: jmp 0x404ea7
404fd8: nop dword ptr [rax + rax]
404fe0: cmp eax, 0x1ffff
404fe5: ja 0x405180
404feb: mov esi, dword ptr [r15 + 8]
404fef: movzx eax, ax
404ff2: mov dword ptr [r13 + 0x28], esi
404ff6: mov esi, dword ptr [r15 + 0xc]
404ffa: lea rcx, [r15 + rsi]
404ffe: mov esi, dword ptr [r15 + 0x10]
405002: movq xmm0, rcx
405007: mov ecx, dword ptr [r15 + 0x14]
40500b: add rsi, r15
40500e: movq xmm2, rsi
405013: mov dword ptr [rsp + 0x18], ecx
405017: punpcklqdq xmm0, xmm2
40501b: mov dword ptr [r13 + 0x58], ecx
40501f: movups xmmword ptr [r13 + 0x30], xmm0
405024: cmp ecx, 2
405027: ja 0x4051f0
40502d: mov qword ptr [r13 + 0x60], 0
405035: mov dword ptr [r13 + 0x68], edx
405039: test eax, eax
40503b: jne 0x405180
405041: mov dword ptr [r13 + 0x40], 0
405049: pxor xmm0, xmm0
40504d: movups xmmword ptr [r13 + 0x48], xmm0
405052: cmp qword ptr [rip + 0xbaebe], 0
40505a: mov qword ptr [r13 + 0x70], 0
405062: mov qword ptr [r13 + 0x78], 0
40506a: je 0x40507a
40506c: lea rdi, [r13 + 0x80]
405073: xor esi, esi
405075: call 0
40507a: mov rsi, qword ptr [rsp + 8]
40507f: mov rdi, rbx
405082: lea r8, [rsp + 0xb8]
40508a: xor ecx, ecx
40508c: lea rdx, [rip + 0xa6982]
405093: call 0x403580
405098: mov rdi, rax
40509b: cmp rax, -1
40509f: je 0x405369
4050a5: lea rdx, [r13 + 0xc0]
4050ac: lea rsi, [r13 + 0xb8]
4050b3: call 0x40f370
4050b8: mov eax, dword ptr [rip + 0xbd6c6]
4050be: sub eax, 1
4050c1: nop dword ptr [rax]
4050c8: mov dword ptr [rbx + 8], 1
4050cf: mov dword ptr [rip + 0xbd6af], eax
4050d5: test eax, eax
4050d7: jne 0x4050f7
4050d9: mov qword ptr [rip + 0xbd6a4], 0
4050e4: mov edx, dword ptr fs:[0x18]
4050ec: test edx, edx
4050ee: jne 0x405150
4050f0: sub dword ptr [rip + 0xbd689], 1
4050f7: mov rax, qword ptr [rsp + 0x168]
4050ff: xor rax, qword ptr fs:[0x28]
405108: jne 0x405e46
40510e: add rsp, 0x178
405115: pop rbx
405116: pop rbp
405117: pop r12
405119: pop r13
40511b: pop r14
40511d: pop r15
40511f: ret 
405120: cmp rax, -1
405124: jne 0x405137
405126: mov rax, 0xffffffffffffffc0
40512d: cmp dword ptr fs:[rax], 4
405131: je 0x40524a
405137: mov edi, ebp
405139: call 0x451730
40513e: mov eax, dword ptr [rip + 0xbd640]
405144: sub eax, 1
405147: jmp 0x4050c8
40514c: nop dword ptr [rax]
405150: xchg dword ptr [rip + 0xbd62a], eax
405156: cmp eax, 1
405159: jle 0x4050f7
40515b: xor r10d, r10d
40515e: mov edx, 1
405163: mov esi, 0x81
405168: mov eax, 0xca
40516d: lea rdi, [rip + 0xbd60c]
405174: syscall 
405176: jmp 0x4050f7
40517b: nop dword ptr [rax + rax]
405180: xor edi, edi
405182: call 0x426a00
405187: mov eax, dword ptr [rsp + 0x14]
40518b: test eax, eax
40518d: jne 0x4051e0
40518f: mov rdi, r15
405192: call 0x426a00
405197: mov rdi, r13
40519a: call 0x426a00
40519f: mov eax, dword ptr [rip + 0xbd5df]
4051a5: mov qword ptr [rbx + 0x10], 0
4051ad: sub eax, 1
4051b0: jmp 0x4050c8
4051b5: nop dword ptr [rax]
4051b8: xor eax, eax
4051ba: mov edx, 1
4051bf: lock cmpxchg dword ptr [rip + 0xbd5b9], edx
4051c7: je 0x404c8e
4051cd: lea rdi, [rip + 0xbd5ac]
4051d4: call 0x421250
4051d9: jmp 0x404c8e
4051de: nop 
4051e0: mov rsi, r14
4051e3: mov rdi, r15
4051e6: call 0x451c70
4051eb: jmp 0x405197
4051ed: nop dword ptr [rax]
4051f0: mov esi, dword ptr [r15 + 0x18]
4051f4: mov dword ptr [r13 + 0x68], edx
4051f8: lea rcx, [r15 + rsi]
4051fc: mov qword ptr [rsp + 0x38], rcx
405201: mov qword ptr [r13 + 0x60], rcx
405205: test eax, eax
405207: je 0x405041
40520d: mov eax, dword ptr [r15 + 0x24]
405211: mov dword ptr [rsp + 0x20], eax
405215: test eax, eax
405217: je 0x405041
40521d: mov eax, dword ptr [r15 + 0x1c]
405221: mov dword ptr [rsp + 0x30], eax
405225: mov eax, dword ptr [r15 + 0x20]
405229: jmp 0x404e50
40522e: nop 
405230: mov rdi, r14
405233: call 0x426410
405238: mov r15, rax
40523b: test rax, rax
40523e: je 0x405137
405244: mov r13, rax
405247: mov r12, r14
40524a: mov rdx, r12
40524d: mov rsi, r13
405250: mov edi, ebp
405252: call 0x4519f0
405257: test rax, rax
40525a: jle 0x405120
405260: add r13, rax
405263: sub r12, rax
405266: jne 0x40524a
405268: mov edi, ebp
40526a: call 0x451730
40526f: mov r12d, dword ptr [r15]
405272: cmp r12d, 0x950412de
405279: setne al
40527c: mov ebp, eax
40527e: cmp r12d, 0xde120495
405285: je 0x404d66
40528b: test al, al
40528d: je 0x404d66
405293: mov rdi, r15
405296: call 0x426a00
40529b: mov eax, dword ptr [rip + 0xbd4e3]
4052a1: sub eax, 1
4052a4: jmp 0x4050c8
4052a9: nop dword ptr [rax]
4052b0: test rbx, rbx
4052b3: je 0x4054e0
4052b9: mov rax, qword ptr [rsp + 0x20]
4052be: mov r15d, dword ptr [rax]
4052c1: add r15, qword ptr [rsp + 0x28]
4052c6: cmp dword ptr [r15 + 8], -1
4052cb: je 0x405445
4052d1: add r15, 4
4052d5: xor r14d, r14d
4052d8: jmp 0x4052f9
4052da: nop word ptr [rax + rax]
4052e0: mov rdi, qword ptr [r12 + rax*8]
4052e4: test rdi, rdi
4052e7: je 0x405470
4052ed: call 0x401180
4052f2: add r15, 8
4052f6: add r14, rax
4052f9: mov eax, dword ptr [r15]
4052fc: add r14, rax
4052ff: mov eax, dword ptr [r15 + 4]
405303: cmp eax, -1
405306: je 0x405448
40530c: cmp eax, ebp
40530e: jb 0x4052e0
405310: mov r14, qword ptr [rsp + 0x58]
405315: mov r15, qword ptr [rsp + 0x28]
40531a: mov r9, r12
40531d: mov r13, qword ptr [rsp + 0x60]
405322: mov rbx, qword ptr [rsp + 0x30]
405327: mov rdi, r9
40532a: call 0x426a00
40532f: xor edi, edi
405331: jmp 0x405182
405336: nop word ptr cs:[rax + rax]
405340: xor esi, esi
405342: jmp 0x404ea7
405347: nop word ptr [rax + rax]
405350: mov rsi, r14
405353: mov rdi, r15
405356: call 0x451c70
40535b: mov eax, dword ptr [rip + 0xbd423]
405361: sub eax, 1
405364: jmp 0x4050c8
405369: cmp qword ptr [rip + 0xbac47], 0
405371: je 0x40537f
405373: lea rdi, [r13 + 0x80]
40537a: call 0
40537f: mov rdi, qword ptr [r13 + 0x20]
405383: jmp 0x405182
405388: mov edx, dword ptr [r15 + 0x28]
40538c: mov eax, dword ptr [r15 + 0x2c]
405390: cmp r12d, 0x950412de
405397: je 0x40553f
40539d: bswap edx
40539f: mov edx, edx
4053a1: bswap eax
4053a3: mov eax, eax
4053a5: add rdx, r15
4053a8: mov rcx, rdx
4053ab: mov esi, dword ptr [rsp + 0x18]
4053af: mov ebp, dword ptr [rsp + 0x30]
4053b3: mov qword ptr [rsp + 0x70], rdx
4053b8: lea rdx, [r15 + rax]
4053bc: mov eax, dword ptr [rsp + 0x20]
4053c0: mov qword ptr [rsp + 0x58], r14
4053c5: shl rsi, 2
4053c9: mov qword ptr [rsp + 0x68], rdx
4053ce: sub eax, 1
4053d1: mov qword ptr [rsp + 0x78], rsi
4053d6: lea rax, [rcx + rax*4 + 4]
4053db: mov qword ptr [rsp + 0x20], rdx
4053e0: mov qword ptr [rsp + 0x40], rax
4053e5: mov qword ptr [rsp + 0x50], rsi
4053ea: mov dword ptr [rsp + 0x4c], 0
4053f2: mov qword ptr [rsp + 0x28], r15
4053f7: mov qword ptr [rsp + 0x30], rbx
4053fc: mov dword ptr [rsp + 0x48], r12d
405401: mov r12, r9
405404: mov qword ptr [rsp + 0x60], r13
405409: mov r13, rcx
40540c: nop dword ptr [rax]
405410: xor ebx, ebx
405412: cmp dword ptr [rsp + 0x48], 0x950412de
40541a: je 0x4052b0
405420: mov rax, qword ptr [rsp + 0x20]
405425: test rbx, rbx
405428: cmove rax, r13
40542c: mov r15d, dword ptr [rax]
40542f: bswap r15d
405432: mov r15d, r15d
405435: add r15, qword ptr [rsp + 0x28]
40543a: cmp dword ptr [r15 + 8], -1
40543f: jne 0x4054f0
405445: xor r14d, r14d
405448: mov qword ptr [rsp + rbx*8 + 0xc0], r14
405450: cmp rbx, 1
405454: jne 0x4054d0
405456: mov rax, qword ptr [rsp + 0xc8]
40545e: add dword ptr [rsp + 0x4c], 1
405463: add rax, qword ptr [rsp + 0xc0]
40546b: add qword ptr [rsp + 0x50], rax
405470: add qword ptr [rsp + 0x20], 4
405476: add r13, 4
40547a: cmp qword ptr [rsp + 0x40], r13
40547f: jne 0x405410
405481: mov ebp, dword ptr [rsp + 0x4c]
405485: mov r9, r12
405488: mov r14, qword ptr [rsp + 0x58]
40548d: mov r15, qword ptr [rsp + 0x28]
405492: mov r13, qword ptr [rsp + 0x60]
405497: mov r12d, dword ptr [rsp + 0x48]
40549c: mov rbx, qword ptr [rsp + 0x30]
4054a1: test ebp, ebp
4054a3: jne 0x4058d7
4054a9: mov dword ptr [r13 + 0x40], 0
4054b1: pxor xmm0, xmm0
4054b5: movups xmmword ptr [r13 + 0x48], xmm0
4054ba: mov rdi, r9
4054bd: call 0x426a00
4054c2: jmp 0x405052
4054c7: nop word ptr [rax + rax]
4054d0: mov ebx, 1
4054d5: jmp 0x405412
4054da: nop word ptr [rax + rax]
4054e0: mov r15d, dword ptr [r13]
4054e4: jmp 0x4052c1
4054e9: nop dword ptr [rax]
4054f0: add r15, 4
4054f4: xor r14d, r14d
4054f7: jmp 0x40551b
4054f9: nop dword ptr [rax]
405500: mov eax, eax
405502: mov rdi, qword ptr [r12 + rax*8]
405506: test rdi, rdi
405509: je 0x405470
40550f: call 0x401180
405514: add r15, 8
405518: add r14, rax
40551b: mov edx, dword ptr [r15]
40551e: bswap edx
405520: mov edx, edx
405522: add r14, rdx
405525: mov edx, dword ptr [r15 + 4]
405529: mov eax, edx
40552b: bswap eax
40552d: cmp edx, -1
405530: je 0x405448
405536: cmp eax, ebp
405538: jb 0x405500
40553a: jmp 0x405310
40553f: add rdx, r15
405542: jmp 0x4053a8
405547: cmp sil, 0x36
40554b: jne 0x4055b0
40554d: xor esi, esi
40554f: cmp byte ptr [rax + 5], 0x34
405553: jne 0x404ea7
405559: cmp byte ptr [rax + 6], 0
40555d: jne 0x404ea7
405563: cmp dil, 0x64
405567: je 0x405ed6
40556d: cmp byte ptr [rsp + 0x28], 0
405572: jne 0x405eca
405578: cmp byte ptr [rsp + 0x48], 0
40557d: jne 0x405f36
405583: test r11b, r11b
405586: jne 0x405f2a
40558c: cmp dil, 0x78
405590: je 0x405f1e
405596: cmp dil, 0x58
40559a: jne 0x4063f3
4055a0: lea rsi, [rip + 0x8fe03]
4055a7: jmp 0x404ea7
4055ac: nop dword ptr [rax]
4055b0: cmp sil, 0x4c
4055b4: jne 0x405670
4055ba: xor esi, esi
4055bc: cmp byte ptr [rax + 5], 0x45
4055c0: jne 0x404ea7
4055c6: cmp byte ptr [rax + 6], 0x41
4055ca: jne 0x404ea7
4055d0: cmp byte ptr [rax + 7], 0x53
4055d4: jne 0x404ea7
4055da: cmp byte ptr [rax + 8], 0x54
4055de: jne 0x404ea7
4055e4: movzx esi, byte ptr [rax + 9]
4055e8: mov r8d, esi
4055eb: cmp sil, 0x38
4055ef: je 0x4060d4
4055f5: cmp sil, 0x31
4055f9: je 0x406081
4055ff: cmp sil, 0x33
405603: mov esi, 0
405608: jne 0x40601a
40560e: cmp byte ptr [rax + 0xa], 0x32
405612: jne 0x404ea7
405618: cmp byte ptr [rax + 0xb], 0
40561c: jne 0x404ea7
405622: cmp dil, 0x64
405626: je 0x40600e
40562c: cmp byte ptr [rsp + 0x28], 0
405631: jne 0x406002
405637: cmp byte ptr [rsp + 0x48], 0
40563c: jne 0x405ff6
405642: test r11b, r11b
405645: jne 0x405fea
40564b: cmp dil, 0x78
40564f: je 0x405fde
405655: cmp dil, 0x58
405659: jne 0x4063e4
40565f: lea rsi, [rip + 0xa5ce1]
405666: jmp 0x404ea7
40566b: nop dword ptr [rax + rax]
405670: cmp sil, 0x46
405674: jne 0x405728
40567a: xor esi, esi
40567c: cmp byte ptr [rax + 5], 0x41
405680: jne 0x404ea7
405686: cmp byte ptr [rax + 6], 0x53
40568a: jne 0x404ea7
405690: cmp byte ptr [rax + 7], 0x54
405694: jne 0x404ea7
40569a: movzx esi, byte ptr [rax + 8]
40569e: mov r8d, esi
4056a1: cmp sil, 0x38
4056a5: je 0x4062d0
4056ab: cmp sil, 0x31
4056af: je 0x406275
4056b5: cmp sil, 0x33
4056b9: mov esi, 0
4056be: jne 0x40620e
4056c4: cmp byte ptr [rax + 9], 0x32
4056c8: jne 0x404ea7
4056ce: cmp byte ptr [rax + 0xa], 0
4056d2: jne 0x404ea7
4056d8: cmp dil, 0x64
4056dc: je 0x406202
4056e2: cmp byte ptr [rsp + 0x28], 0
4056e7: jne 0x4061f6
4056ed: cmp byte ptr [rsp + 0x48], 0
4056f2: jne 0x4061ea
4056f8: test r11b, r11b
4056fb: jne 0x4061de
405701: cmp dil, 0x78
405705: je 0x4061d2
40570b: cmp dil, 0x58
40570f: jne 0x4063e9
405715: lea rsi, [rip + 0x8fc8e]
40571c: jmp 0x404ea7
405721: nop dword ptr [rax]
405728: cmp sil, 0x4d
40572c: jne 0x405858
405732: xor esi, esi
405734: cmp byte ptr [rax + 5], 0x41
405738: jne 0x404ea7
40573e: cmp byte ptr [rax + 6], 0x58
405742: jne 0x404ea7
405748: cmp byte ptr [rax + 7], 0
40574c: jne 0x405e93
405752: cmp dil, 0x64
405756: je 0x405f5a
40575c: cmp byte ptr [rsp + 0x28], 0
405761: jne 0x405f4e
405767: cmp byte ptr [rsp + 0x48], 0
40576c: jne 0x405fd2
405772: test r11b, r11b
405775: jne 0x405fc6
40577b: cmp dil, 0x78
40577f: je 0x405fba
405785: cmp dil, 0x58
405789: jne 0x4063ee
40578f: lea rsi, [rip + 0x8fc14]
405796: jmp 0x404ea7
40579b: nop dword ptr [rax + rax]
4057a0: cmp byte ptr [rax + 5], 0
4057a4: jne 0x4058d0
4057aa: cmp dil, 0x64
4057ae: je 0x405e4b
4057b4: cmp byte ptr [rsp + 0x28], 0
4057b9: jne 0x405e63
4057bf: cmp byte ptr [rsp + 0x48], 0
4057c4: jne 0x405e57
4057ca: test r11b, r11b
4057cd: jne 0x405e7b
4057d3: cmp dil, 0x78
4057d7: je 0x405e6f
4057dd: cmp dil, 0x58
4057e1: jne 0x4011af
4057e7: lea rsi, [rip + 0xa5b59]
4057ee: jmp 0x404ea7
4057f3: xor esi, esi
4057f5: cmp byte ptr [rax + 5], 0x36
4057f9: jne 0x404ea7
4057ff: cmp byte ptr [rax + 6], 0
405803: jne 0x404ea7
405809: cmp dil, 0x64
40580d: je 0x405f06
405813: cmp byte ptr [rsp + 0x28], 0
405818: jne 0x405efa
40581e: cmp byte ptr [rsp + 0x48], 0
405823: jne 0x405eee
405829: test r11b, r11b
40582c: jne 0x405f12
405832: cmp dil, 0x78
405836: je 0x405ee2
40583c: cmp dil, 0x58
405840: jne 0x4063f8
405846: lea rsi, [rip + 0xa5afa]
40584d: jmp 0x404ea7
405852: nop word ptr [rax + rax]
405858: cmp sil, 0x50
40585c: mov esi, 0
405861: jne 0x404ea7
405867: cmp byte ptr [rax + 5], 0x54
40586b: jne 0x404ea7
405871: cmp byte ptr [rax + 6], 0x52
405875: jne 0x404ea7
40587b: cmp byte ptr [rax + 7], 0
40587f: jne 0x405e9a
405885: cmp dil, 0x64
405889: je 0x405f42
40588f: cmp byte ptr [rsp + 0x28], 0
405894: jne 0x405f8a
40589a: cmp byte ptr [rsp + 0x48], 0
40589f: jne 0x405f7e
4058a5: test r11b, r11b
4058a8: jne 0x405fa2
4058ae: cmp dil, 0x78
4058b2: je 0x405f96
4058b8: cmp dil, 0x58
4058bc: jne 0x406402
4058c2: lea rsi, [rip + 0x8fae1]
4058c9: jmp 0x404ea7
4058ce: nop 
4058d0: xor esi, esi
4058d2: jmp 0x404ea7
4058d7: lea edi, [rbp + rbp]
4058db: mov qword ptr [rsp + 0x28], r9
4058e0: shl rdi, 4
4058e4: add rdi, qword ptr [rsp + 0x50]
4058e9: call 0x426410
4058ee: mov qword ptr [rsp + 0x30], rax
4058f3: mov rcx, rax
4058f6: test rax, rax
4058f9: je 0x405180
4058ff: mov qword ptr [r13 + 0x20], rax
405903: mov eax, ebp
405905: mov r9, qword ptr [rsp + 0x28]
40590a: mov qword ptr [rsp + 0x88], rax
405912: shl rax, 4
405916: add rcx, rax
405919: mov dword ptr [rsp + 0x48], 0
405921: lea r10, [rcx + rax]
405925: mov qword ptr [rsp + 0x80], rcx
40592d: mov rcx, qword ptr [rsp + 0x78]
405932: mov qword ptr [rsp + 0x98], r10
40593a: mov dword ptr [rsp + 0x20], r12d
40593f: add rcx, r10
405942: mov r12, qword ptr [rsp + 0x70]
405947: mov qword ptr [rsp + 0x78], r14
40594c: mov r14, rcx
40594f: mov qword ptr [rsp + 0x90], r13
405957: mov r13, qword ptr [rsp + 0x68]
40595c: mov qword ptr [rsp + 0x68], rbx
405961: mov rbx, r9
405964: xor edx, edx
405966: cmp dword ptr [rsp + 0x20], 0x950412de
40596e: je 0x405ad8
405974: test edx, edx
405976: mov rax, r13
405979: cmove rax, r12
40597d: mov eax, dword ptr [rax]
40597f: bswap eax
405981: mov eax, eax
405983: add rax, r15
405986: cmp dword ptr [rax + 8], -1
40598a: jne 0x405d2b
405990: cmp edx, 1
405993: jne 0x405d00
405999: mov eax, dword ptr [rsp + 0x48]
40599d: mov rcx, qword ptr [rsp + 0x30]
4059a2: mov qword ptr [rsp + 0x50], r13
4059a7: mov r13, r14
4059aa: mov dword ptr [rsp + 0x28], 0
4059b2: mov r14, r12
4059b5: mov r12, rbx
4059b8: shl rax, 4
4059bc: add rcx, rax
4059bf: add rax, qword ptr [rsp + 0x80]
4059c7: cmp dword ptr [rsp + 0x20], 0x950412de
4059cf: mov qword ptr [rsp + 0x60], rcx
4059d4: mov qword ptr [rsp + 0x58], rax
4059d9: je 0x405a3a
4059db: mov r11d, dword ptr [rsp + 0x28]
4059e0: test r11d, r11d
4059e3: je 0x405d93
4059e9: mov rax, qword ptr [rsp + 0x50]
4059ee: mov rbx, qword ptr [rsp + 0x58]
4059f3: mov ecx, dword ptr [rax]
4059f5: bswap ecx
4059f7: mov ecx, ecx
4059f9: add rcx, r15
4059fc: mov ebp, dword ptr [rcx]
4059fe: bswap ebp
405a00: mov ebp, ebp
405a02: add rbp, r15
405a05: mov eax, dword ptr [rcx + 4]
405a08: cmp dword ptr [rcx + 8], -1
405a0c: bswap eax
405a0e: mov eax, eax
405a10: jne 0x405db0
405a16: mov qword ptr [rbx], rax
405a19: mov qword ptr [rbx + 8], rbp
405a1d: cmp dword ptr [rsp + 0x28], 1
405a22: je 0x405d13
405a28: cmp dword ptr [rsp + 0x20], 0x950412de
405a30: mov dword ptr [rsp + 0x28], 1
405a38: jne 0x4059db
405a3a: mov r10d, dword ptr [rsp + 0x28]
405a3f: test r10d, r10d
405a42: je 0x405d7e
405a48: mov rax, qword ptr [rsp + 0x50]
405a4d: mov rbx, qword ptr [rsp + 0x58]
405a52: mov ecx, dword ptr [rax]
405a54: add rcx, r15
405a57: mov ebp, dword ptr [rcx]
405a59: add rbp, r15
405a5c: cmp dword ptr [rcx + 8], -1
405a60: mov eax, dword ptr [rcx + 4]
405a63: je 0x405a16
405a65: add rcx, 4
405a69: mov qword ptr [rsp + 0xa0], r14
405a71: mov qword ptr [rbx + 8], r13
405a75: mov r14, rcx
405a78: mov qword ptr [rsp + 0x70], r15
405a7d: mov qword ptr [rsp + 0xa8], rbx
405a85: jmp 0x405ab4
405a87: cmp ebx, -1
405a8a: je 0x405d5a
405a90: mov r15, qword ptr [r12 + rbx*8]
405a94: add r14, 8
405a98: mov rdi, r15
405a9b: call 0x401180
405aa0: mov rdi, r13
405aa3: mov rsi, r15
405aa6: mov rbx, rax
405aa9: mov rdx, rax
405aac: call 0x401060
405ab1: add r13, rbx
405ab4: mov eax, dword ptr [r14]
405ab7: mov ebx, dword ptr [r14 + 4]
405abb: test eax, eax
405abd: je 0x405a87
405abf: mov r15d, eax
405ac2: mov rsi, rbp
405ac5: mov rdi, r13
405ac8: mov rdx, r15
405acb: add r13, r15
405ace: add rbp, r15
405ad1: call 0x401060
405ad6: jmp 0x405a87
405ad8: test edx, edx
405ada: je 0x405d0a
405ae0: mov ecx, dword ptr [r13]
405ae4: add rcx, r15
405ae7: cmp dword ptr [rcx + 8], -1
405aeb: je 0x405990
405af1: add rcx, 4
405af5: jmp 0x405b04
405af7: nop word ptr [rax + rax]
405b00: add rcx, 8
405b04: mov eax, dword ptr [rcx + 4]
405b07: cmp eax, -1
405b0a: je 0x405990
405b10: cmp qword ptr [rbx + rax*8], 0
405b15: jne 0x405b00
405b17: add r12, 4
405b1b: add r13, 4
405b1f: cmp qword ptr [rsp + 0x40], r12
405b24: jne 0x405964
405b2a: mov r9, rbx
405b2d: mov r12d, dword ptr [rsp + 0x20]
405b32: mov r14, qword ptr [rsp + 0x78]
405b37: mov r13, qword ptr [rsp + 0x90]
405b3f: mov r10, qword ptr [rsp + 0x98]
405b47: mov rbx, qword ptr [rsp + 0x68]
405b4c: mov ecx, dword ptr [rsp + 0x48]
405b50: cmp dword ptr [rsp + 0x4c], ecx
405b54: jne 0x4011af
405b5a: cmp r12d, 0x950412de
405b61: jne 0x405e25
405b67: mov rax, qword ptr [rsp + 0x88]
405b6f: mov rcx, qword ptr [rsp + 0x30]
405b74: mov rdi, qword ptr [rsp + 0x38]
405b79: shl rax, 5
405b7d: lea rsi, [rcx + rax]
405b81: lea rax, [rcx + rax + 0x10]
405b86: cmp rdi, rax
405b89: lea rax, [rdi + 0x10]
405b8d: setae dl
405b90: cmp rsi, rax
405b93: setae al
405b96: or dl, al
405b98: je 0x405ea1
405b9e: mov eax, dword ptr [rsp + 0x18]
405ba2: cmp eax, 4
405ba5: jbe 0x405ea1
405bab: test eax, eax
405bad: mov ecx, 1
405bb2: cmovne ecx, eax
405bb5: xor eax, eax
405bb7: mov edx, ecx
405bb9: shr edx, 2
405bbc: shl rdx, 4
405bc0: movdqu xmm3, xmmword ptr [rdi + rax]
405bc5: movups xmmword ptr [rsi + rax], xmm3
405bc9: add rax, 0x10
405bcd: cmp rdx, rax
405bd0: jne 0x405bc0
405bd2: mov eax, ecx
405bd4: and eax, 0xfffffffc
405bd7: and cl, 3
405bda: je 0x405c0a
405bdc: mov rsi, qword ptr [rsp + 0x38]
405be1: mov edx, eax
405be3: mov edi, dword ptr [rsp + 0x18]
405be7: mov ecx, dword ptr [rsi + rdx*4]
405bea: mov dword ptr [r10 + rdx*4], ecx
405bee: lea edx, [rax + 1]
405bf1: cmp edx, edi
405bf3: jae 0x405c0a
405bf5: mov ecx, dword ptr [rsi + rdx*4]
405bf8: add eax, 2
405bfb: mov dword ptr [r10 + rdx*4], ecx
405bff: cmp eax, edi
405c01: jae 0x405c0a
405c03: mov edx, dword ptr [rsi + rax*4]
405c06: mov dword ptr [r10 + rax*4], edx
405c0a: mov rax, qword ptr [rsp + 0x30]
405c0f: mov qword ptr [rsp + 0x20], r9
405c14: xor ebp, ebp
405c16: mov qword ptr [rsp + 0x28], rbx
405c1b: mov ebx, dword ptr [rsp + 0x4c]
405c1f: mov qword ptr [rsp + 0x18], r14
405c24: lea r12, [rax + 8]
405c28: mov r14d, ebp
405c2b: mov rbp, r13
405c2e: mov r13, r10
405c31: mov rdi, qword ptr [r12]
405c35: call 0x40f490
405c3a: mov edi, dword ptr [rbp + 0x58]
405c3d: xor edx, edx
405c3f: mov r10d, eax
405c42: div edi
405c44: lea r11d, [rdi - 2]
405c48: mov eax, r10d
405c4b: mov ecx, edx
405c4d: xor edx, edx
405c4f: div r11d
405c52: mov eax, ecx
405c54: lea rax, [r13 + rax*4]
405c59: mov r9d, dword ptr [rax]
405c5c: lea r10d, [rdx + 1]
405c60: test r9d, r9d
405c63: je 0x405c8f
405c65: mov eax, r10d
405c68: mov edx, edi
405c6a: sub eax, edi
405c6c: sub edx, r10d
405c6f: mov edi, eax
405c71: nop dword ptr [rax]
405c78: cmp edx, ecx
405c7a: ja 0x405ce8
405c7c: lea eax, [rcx + rdi]
405c7f: mov rcx, rax
405c82: lea rax, [r13 + rax*4]
405c87: mov r8d, dword ptr [rax]
405c8a: test r8d, r8d
405c8d: jne 0x405c78
405c8f: mov edx, dword ptr [rbp + 0x28]
405c92: add r12, 0x10
405c96: lea edx, [r14 + rdx + 1]
405c9b: add r14d, 1
405c9f: mov dword ptr [rax], edx
405ca1: cmp ebx, r14d
405ca4: jne 0x405c31
405ca6: movq xmm0, qword ptr [rsp + 0x30]
405cac: mov eax, dword ptr [rsp + 0x4c]
405cb0: mov r10, r13
405cb3: mov dword ptr [rbp + 0x68], 0
405cba: mov qword ptr [rbp + 0x60], r10
405cbe: mov r14, qword ptr [rsp + 0x18]
405cc3: mov r13, rbp
405cc6: movhps xmm0, qword ptr [rsp + 0x80]
405cce: mov dword ptr [rbp + 0x40], eax
405cd1: mov r9, qword ptr [rsp + 0x20]
405cd6: mov rbx, qword ptr [rsp + 0x28]
405cdb: movups xmmword ptr [rbp + 0x48], xmm0
405cdf: jmp 0x4054ba
405ce4: nop dword ptr [rax]
405ce8: lea eax, [rcx + r10]
405cec: mov rcx, rax
405cef: lea rax, [r13 + rax*4]
405cf4: mov esi, dword ptr [rax]
405cf6: test esi, esi
405cf8: jne 0x405c78
405cfe: jmp 0x405c8f
405d00: mov edx, 1
405d05: jmp 0x405966
405d0a: mov ecx, dword ptr [r12]
405d0e: jmp 0x405ae4
405d13: mov rbx, r12
405d16: add dword ptr [rsp + 0x48], 1
405d1b: mov r12, r14
405d1e: mov r14, r13
405d21: mov r13, qword ptr [rsp + 0x50]
405d26: jmp 0x405b17
405d2b: add rax, 4
405d2f: jmp 0x405d3c
405d31: nop dword ptr [rax]
405d38: add rax, 8
405d3c: mov esi, dword ptr [rax + 4]
405d3f: mov ecx, esi
405d41: bswap ecx
405d43: cmp esi, -1
405d46: je 0x405990
405d4c: mov ecx, ecx
405d4e: cmp qword ptr [rbx + rcx*8], 0
405d53: jne 0x405d38
405d55: jmp 0x405b17
405d5a: mov rbx, qword ptr [rsp + 0xa8]
405d62: mov rax, r13
405d65: mov r15, qword ptr [rsp + 0x70]
405d6a: mov r14, qword ptr [rsp + 0xa0]
405d72: sub rax, qword ptr [rbx + 8]
405d76: mov qword ptr [rbx], rax
405d79: jmp 0x405a1d
405d7e: mov ecx, dword ptr [r14]
405d81: mov rbx, qword ptr [rsp + 0x60]
405d86: add rcx, r15
405d89: mov ebp, dword ptr [rcx]
405d8b: add rbp, r15
405d8e: jmp 0x405a5c
405d93: mov ecx, dword ptr [r14]
405d96: mov rbx, qword ptr [rsp + 0x60]
405d9b: bswap ecx
405d9d: mov ecx, ecx
405d9f: add rcx, r15
405da2: mov ebp, dword ptr [rcx]
405da4: bswap ebp
405da6: mov ebp, ebp
405da8: add rbp, r15
405dab: jmp 0x405a05
405db0: add rcx, 4
405db4: mov qword ptr [rsp + 0xa0], r14
405dbc: mov qword ptr [rbx + 8], r13
405dc0: mov r14, rcx
405dc3: mov qword ptr [rsp + 0x70], r15
405dc8: mov qword ptr [rsp + 0xa8], rbx
405dd0: jmp 0x405dfd
405dd2: cmp ebx, -1
405dd5: je 0x405d5a
405dd7: mov ebx, ebx
405dd9: add r14, 8
405ddd: mov r15, qword ptr [r12 + rbx*8]
405de1: mov rdi, r15
405de4: call 0x401180
405de9: mov rdi, r13
405dec: mov rsi, r15
405def: mov rbx, rax
405df2: mov rdx, rax
405df5: call 0x401060
405dfa: add r13, rbx
405dfd: mov eax, dword ptr [r14]
405e00: mov ebx, dword ptr [r14 + 4]
405e04: bswap eax
405e06: bswap ebx
405e08: test eax, eax
405e0a: je 0x405dd2
405e0c: mov r15d, eax
405e0f: mov rsi, rbp
405e12: mov rdi, r13
405e15: mov rdx, r15
405e18: add r13, r15
405e1b: add rbp, r15
405e1e: call 0x401060
405e23: jmp 0x405dd2
405e25: mov rcx, qword ptr [rsp + 0x38]
405e2a: mov esi, dword ptr [rsp + 0x18]
405e2e: xor eax, eax
405e30: mov edx, dword ptr [rcx + rax*4]
405e33: bswap edx
405e35: mov dword ptr [r10 + rax*4], edx
405e39: add rax, 1
405e3d: cmp esi, eax
405e3f: ja 0x405e30
405e41: jmp 0x405c0a
405e46: call 0x4547a0
405e4b: lea rsi, [rip + 0x93bce]
405e52: jmp 0x404ea7
405e57: lea rsi, [rip + 0x9320e]
405e5e: jmp 0x404ea7
405e63: lea rsi, [rip + 0x8f231]
405e6a: jmp 0x404ea7
405e6f: lea rsi, [rip + 0x92c86]
405e76: jmp 0x404ea7
405e7b: lea rsi, [rip + 0xa5a90]
405e82: jmp 0x404ea7
405e87: lea rsi, [rip + 0x8f20d]
405e8e: jmp 0x404ea7
405e93: xor esi, esi
405e95: jmp 0x404ea7
405e9a: xor esi, esi
405e9c: jmp 0x404ea7
405ea1: mov rcx, qword ptr [rsp + 0x38]
405ea6: xor eax, eax
405ea8: mov edx, dword ptr [rcx + rax*4]
405eab: mov dword ptr [r10 + rax*4], edx
405eaf: add rax, 1
405eb3: cmp dword ptr [rsp + 0x18], eax
405eb7: ja 0x405ea8
405eb9: jmp 0x405c0a
405ebe: lea rsi, [rip + 0x93b5b]
405ec5: jmp 0x404ea7
405eca: lea rsi, [rip + 0x8f4d6]
405ed1: jmp 0x404ea7
405ed6: lea rsi, [rip + 0x93244]
405edd: jmp 0x404ea7
405ee2: lea rsi, [rip + 0x92c13]
405ee9: jmp 0x404ea7
405eee: lea rsi, [rip + 0x93177]
405ef5: jmp 0x404ea7
405efa: lea rsi, [rip + 0x8f19a]
405f01: jmp 0x404ea7
405f06: lea rsi, [rip + 0x93b13]
405f0d: jmp 0x404ea7
405f12: lea rsi, [rip + 0xa59f9]
405f19: jmp 0x404ea7
405f1e: lea rsi, [rip + 0x8f488]
405f25: jmp 0x404ea7
405f2a: lea rsi, [rip + 0x8f470]
405f31: jmp 0x404ea7
405f36: lea rsi, [rip + 0x8f467]
405f3d: jmp 0x404ea7
405f42: lea rsi, [rip + 0x931d8]
405f49: jmp 0x404ea7
405f4e: lea rsi, [rip + 0x8f452]
405f55: jmp 0x404ea7
405f5a: lea rsi, [rip + 0x931c0]
405f61: jmp 0x404ea7
405f66: lea rsi, [rip + 0x92b8f]
405f6d: jmp 0x404ea7
405f72: lea rsi, [rip + 0xa5999]
405f79: jmp 0x404ea7
405f7e: lea rsi, [rip + 0x8f41f]
405f85: jmp 0x404ea7
405f8a: lea rsi, [rip + 0x8f416]
405f91: jmp 0x404ea7
405f96: lea rsi, [rip + 0x8f410]
405f9d: jmp 0x404ea7
405fa2: lea rsi, [rip + 0x8f3f8]
405fa9: jmp 0x404ea7
405fae: lea rsi, [rip + 0x930b7]
405fb5: jmp 0x404ea7
405fba: lea rsi, [rip + 0x8f3ec]
405fc1: jmp 0x404ea7
405fc6: lea rsi, [rip + 0x8f3d4]
405fcd: jmp 0x404ea7
405fd2: lea rsi, [rip + 0x8f3cb]
405fd9: jmp 0x404ea7
405fde: lea rsi, [rip + 0x92b17]
405fe5: jmp 0x404ea7
405fea: lea rsi, [rip + 0xa5921]
405ff1: jmp 0x404ea7
405ff6: lea rsi, [rip + 0x9306f]
405ffd: jmp 0x404ea7
406002: lea rsi, [rip + 0x8f092]
406009: jmp 0x404ea7
40600e: lea rsi, [rip + 0x93a0b]
406015: jmp 0x404ea7
40601a: cmp r8b, 0x36
40601e: jne 0x404ea7
406024: cmp byte ptr [rax + 0xa], 0x34
406028: jne 0x404ea7
40602e: cmp byte ptr [rax + 0xb], 0
406032: jne 0x404ea7
406038: cmp dil, 0x64
40603c: je 0x4061c6
406042: cmp byte ptr [rsp + 0x28], 0
406047: jne 0x4061ba
40604d: cmp byte ptr [rsp + 0x48], 0
406052: jne 0x4061ae
406058: test r11b, r11b
40605b: jne 0x4061a2
406061: cmp dil, 0x78
406065: je 0x406196
40606b: cmp dil, 0x58
40606f: jne 0x4063d0
406075: lea rsi, [rip + 0x8f32e]
40607c: jmp 0x404ea7
406081: xor esi, esi
406083: cmp byte ptr [rax + 0xa], 0x36
406087: jne 0x404ea7
40608d: cmp byte ptr [rax + 0xb], 0
406091: jne 0x404ea7
406097: cmp dil, 0x64
40609b: je 0x40618a
4060a1: cmp byte ptr [rsp + 0x28], 0
4060a6: jne 0x40617e
4060ac: cmp byte ptr [rsp + 0x48], 0
4060b1: jne 0x40612f
4060b3: test r11b, r11b
4060b6: jne 0x406123
4060b8: cmp dil, 0x78
4060bc: je 0x406117
4060be: cmp dil, 0x58
4060c2: jne 0x4063da
4060c8: lea rsi, [rip + 0xa5278]
4060cf: jmp 0x404ea7
4060d4: cmp byte ptr [rax + 0xa], 0
4060d8: jne 0x406177
4060de: cmp dil, 0x64
4060e2: je 0x40616b
4060e8: cmp byte ptr [rsp + 0x28], 0
4060ed: jne 0x40615f
4060ef: cmp byte ptr [rsp + 0x48], 0
4060f4: jne 0x406153
4060f6: test r11b, r11b
4060f9: jne 0x406147
4060fb: cmp dil, 0x78
4060ff: je 0x40613b
406101: cmp dil, 0x58
406105: jne 0x4063df
40610b: lea rsi, [rip + 0xa5235]
406112: jmp 0x404ea7
406117: lea rsi, [rip + 0x929de]
40611e: jmp 0x404ea7
406123: lea rsi, [rip + 0xa57e8]
40612a: jmp 0x404ea7
40612f: lea rsi, [rip + 0x92f36]
406136: jmp 0x404ea7
40613b: lea rsi, [rip + 0x929ba]
406142: jmp 0x404ea7
406147: lea rsi, [rip + 0xa57c4]
40614e: jmp 0x404ea7
406153: lea rsi, [rip + 0x92f12]
40615a: jmp 0x404ea7
40615f: lea rsi, [rip + 0x8ef35]
406166: jmp 0x404ea7
40616b: lea rsi, [rip + 0x938ae]
406172: jmp 0x404ea7
406177: xor esi, esi
406179: jmp 0x404ea7
40617e: lea rsi, [rip + 0x8ef16]
406185: jmp 0x404ea7
40618a: lea rsi, [rip + 0x9388f]
406191: jmp 0x404ea7
406196: lea rsi, [rip + 0x8f210]
40619d: jmp 0x404ea7
4061a2: lea rsi, [rip + 0x8f1f8]
4061a9: jmp 0x404ea7
4061ae: lea rsi, [rip + 0x8f1ef]
4061b5: jmp 0x404ea7
4061ba: lea rsi, [rip + 0x8f1e6]
4061c1: jmp 0x404ea7
4061c6: lea rsi, [rip + 0x92f54]
4061cd: jmp 0x404ea7
4061d2: lea rsi, [rip + 0x8f1d4]
4061d9: jmp 0x404ea7
4061de: lea rsi, [rip + 0x8f1bc]
4061e5: jmp 0x404ea7
4061ea: lea rsi, [rip + 0x8f1b3]
4061f1: jmp 0x404ea7
4061f6: lea rsi, [rip + 0x8f1aa]
4061fd: jmp 0x404ea7
406202: lea rsi, [rip + 0x92f18]
406209: jmp 0x404ea7
40620e: cmp r8b, 0x36
406212: jne 0x404ea7
406218: cmp byte ptr [rax + 9], 0x34
40621c: jne 0x404ea7
406222: cmp byte ptr [rax + 0xa], 0
406226: jne 0x404ea7
40622c: cmp dil, 0x64
406230: je 0x4063ba
406236: cmp byte ptr [rsp + 0x28], 0
40623b: jne 0x4063ae
406241: cmp byte ptr [rsp + 0x48], 0
406246: jne 0x4063a2
40624c: test r11b, r11b
40624f: jne 0x406396
406255: cmp dil, 0x78
406259: je 0x40638a
40625f: cmp dil, 0x58
406263: jne 0x4063d5
406269: lea rsi, [rip + 0x8f13a]
406270: jmp 0x404ea7
406275: xor esi, esi
406277: cmp byte ptr [rax + 9], 0x36
40627b: jne 0x404ea7
406281: cmp byte ptr [rax + 0xa], 0
406285: jne 0x404ea7
40628b: cmp dil, 0x64
40628f: je 0x40637e
406295: cmp byte ptr [rsp + 0x28], 0
40629a: jne 0x406372
4062a0: cmp byte ptr [rsp + 0x48], 0
4062a5: jne 0x406366
4062ab: test r11b, r11b
4062ae: jne 0x40635a
4062b4: cmp dil, 0x78
4062b8: je 0x40630b
4062ba: cmp dil, 0x58
4062be: jne 0x4063c6
4062c4: lea rsi, [rip + 0x8f0df]
4062cb: jmp 0x404ea7
4062d0: cmp byte ptr [rax + 9], 0
4062d4: jne 0x406353
4062d6: cmp dil, 0x64
4062da: je 0x406347
4062dc: cmp byte ptr [rsp + 0x28], 0
4062e1: jne 0x40633b
4062e3: cmp byte ptr [rsp + 0x48], 0
4062e8: jne 0x40632f
4062ea: test r11b, r11b
4062ed: jne 0x406323
4062ef: cmp dil, 0x78
4062f3: je 0x406317
4062f5: cmp dil, 0x58
4062f9: jne 0x4063cb
4062ff: lea rsi, [rip + 0xa5041]
406306: jmp 0x404ea7
40630b: lea rsi, [rip + 0x8f09b]
406312: jmp 0x404ea7
406317: lea rsi, [rip + 0x927de]
40631e: jmp 0x404ea7
406323: lea rsi, [rip + 0xa55e8]
40632a: jmp 0x404ea7
40632f: lea rsi, [rip + 0x92d36]
406336: jmp 0x404ea7
40633b: lea rsi, [rip + 0x8ed59]
406342: jmp 0x404ea7
406347: lea rsi, [rip + 0x936d2]
40634e: jmp 0x404ea7
406353: xor esi, esi
406355: jmp 0x404ea7
40635a: lea rsi, [rip + 0x8f040]
406361: jmp 0x404ea7
406366: lea rsi, [rip + 0x8f037]
40636d: jmp 0x404ea7
406372: lea rsi, [rip + 0x8f02e]
406379: jmp 0x404ea7
40637e: lea rsi, [rip + 0x92d9c]
406385: jmp 0x404ea7
40638a: lea rsi, [rip + 0x8f01c]
406391: jmp 0x404ea7
406396: lea rsi, [rip + 0x8f004]
40639d: jmp 0x404ea7
4063a2: lea rsi, [rip + 0x8effb]
4063a9: jmp 0x404ea7
4063ae: lea rsi, [rip + 0x8eff2]
4063b5: jmp 0x404ea7
4063ba: lea rsi, [rip + 0x92d60]
4063c1: jmp 0x404ea7
4063c6: jmp 0x4011af
4063cb: jmp 0x4011af
4063d0: jmp 0x4011af
4063d5: jmp 0x4011af
4063da: jmp 0x4011af
4063df: jmp 0x4011af
4063e4: jmp 0x4011af
4063e9: jmp 0x4011af
4063ee: jmp 0x4011af
4063f3: jmp 0x4011af
4063f8: jmp 0x4011af
4063fd: jmp 0x4011af
406402: jmp 0x4011af
406407: nop word ptr [rax + rax]
406410: endbr64 
406414: mov rsi, qword ptr [rsi]
406417: mov rdi, qword ptr [rdi]
40641a: lea rdx, [rip + 0xb999f]
406421: jmp 0x4010f0
406426: nop word ptr cs:[rax + rax]
406430: push rbp
406431: movsxd rdx, esi
406434: mov rbp, rsp
406437: push r15
406439: push r14
40643b: push r13
40643d: push r12
40643f: push rbx
406440: sub rsp, 0x1f8
406447: mov rax, qword ptr fs:[0x28]
406450: mov qword ptr [rbp - 0x38], rax
406454: xor eax, eax
406456: lea rax, [rdx + 0x25]
40645a: mov rbx, rsp
40645d: mov rcx, rax
406460: and rax, 0xfffffffffffff000
406466: sub rbx, rax
406469: and rcx, 0xfffffffffffffff0
40646d: mov rax, rbx
406470: cmp rsp, rax
406473: je 0x40648a
406475: sub rsp, 0x1000
40647c: or qword ptr [rsp + 0xff8], 0
406485: cmp rsp, rax
406488: jne 0x406475
40648a: and ecx, 0xfff
406490: sub rsp, rcx
406493: test rcx, rcx
406496: jne 0x4068bc
40649c: lea r12, [rsp + 0xf]
4064a1: mov rsi, rdi
4064a4: and r12, 0xfffffffffffffff0
4064a8: mov rdi, r12
4064ab: call 0x401150
4064b0: mov rdx, qword ptr [rip + 0x8ef11]
4064b7: lea rsi, [rip + 0x8eef4]
4064be: mov rdi, r12
4064c1: mov qword ptr [rax], rdx
4064c4: mov edx, dword ptr [rip + 0x8ef06]
4064ca: mov dword ptr [rax + 8], edx
4064cd: movzx edx, word ptr [rip + 0x8ef00]
4064d4: mov word ptr [rax + 0xc], dx
4064d8: call 0x418750
4064dd: mov r15, rax
4064e0: test rax, rax
4064e3: je 0x4068c7
4064e9: mov eax, dword ptr [rax]
4064eb: lea r14, [rbp - 0x1d0]
4064f2: mov qword ptr [rbp - 0x1d8], 0
4064fd: mov edx, eax
4064ff: or dh, 0x80
406502: mov dword ptr [r15], edx
406505: test al, 0x10
406507: jne 0x406917
40650d: nop dword ptr [rax]
406510: mov rdx, r15
406513: mov esi, 0x190
406518: mov rdi, r14
40651b: call 0x41b260
406520: test rax, rax
406523: je 0x406583
406525: mov esi, 0xa
40652a: mov rdi, r14
40652d: mov r12, r14
406530: call 0x401190
406535: movzx edx, byte ptr [rbp - 0x1d0]
40653c: mov rcx, rax
40653f: mov rax, 0xfffffffffffffff0
406546: mov rsi, qword ptr fs:[rax]
40654a: mov rax, rdx
40654d: test byte ptr [rsi + rdx*2 + 1], 0x20
406552: je 0x40656c
406554: nop dword ptr [rax]
406558: movzx edx, byte ptr [r12 + 1]
40655e: add r12, 1
406562: mov rax, rdx
406565: test byte ptr [rsi + rdx*2 + 1], 0x20
40656a: jne 0x406558
40656c: test al, al
40656e: je 0x406578
406570: cmp al, 0x23
406572: jne 0x406610
406578: test rcx, rcx
40657b: je 0x4065f2
40657d: test byte ptr [r15], 0x10
406581: je 0x406510
406583: mov rdi, r15
406586: call 0x418240
40658b: cmp qword ptr [rbp - 0x1d8], 0
406593: je 0x4065b4
406595: mov rsi, qword ptr [rip + 0xbc204]
40659c: mov rdi, qword ptr [rip + 0xbd3b5]
4065a3: mov edx, 0x10
4065a8: lea rcx, [rip - 0x19f]
4065af: call 0x40fe60
4065b4: mov rax, qword ptr [rbp - 0x38]
4065b8: xor rax, qword ptr fs:[0x28]
4065c1: jne 0x406924
4065c7: mov rax, qword ptr [rbp - 0x1d8]
4065ce: lea rsp, [rbp - 0x28]
4065d2: pop rbx
4065d3: pop r12
4065d5: pop r13
4065d7: pop r14
4065d9: pop r15
4065db: pop rbp
4065dc: ret 
4065dd: nop dword ptr [rax]
4065e0: mov esi, 0xa
4065e5: mov rdi, r14
4065e8: call 0x401190
4065ed: test rax, rax
4065f0: jne 0x40657d
4065f2: mov rdx, r15
4065f5: mov esi, 0x190
4065fa: mov rdi, r14
4065fd: call 0x41b260
406602: test rax, rax
406605: jne 0x4065e0
406607: jmp 0x40657d
40660c: nop dword ptr [rax]
406610: movzx eax, byte ptr [r12 + 1]
406616: lea rbx, [r12 + 1]
40661b: test al, al
40661d: jne 0x40662c
40661f: jmp 0x406644
406621: nop dword ptr [rax]
406628: test al, al
40662a: je 0x406644
40662c: movzx edx, al
40662f: mov rdi, rbx
406632: movzx eax, byte ptr [rbx + 1]
406636: add rbx, 1
40663a: test byte ptr [rsi + rdx*2 + 1], 0x20
40663f: je 0x406628
406641: mov byte ptr [rdi], 0
406644: movzx edx, al
406647: test byte ptr [rsi + rdx*2 + 1], 0x20
40664c: je 0x406662
40664e: nop 
406650: movzx edx, byte ptr [rbx + 1]
406654: add rbx, 1
406658: mov rax, rdx
40665b: test byte ptr [rsi + rdx*2 + 1], 0x20
406660: jne 0x406650
406662: test al, al
406664: je 0x406578
40666a: movzx eax, byte ptr [rbx + 1]
40666e: lea rdx, [rbx + 1]
406672: test al, al
406674: jne 0x40668c
406676: jmp 0x4066a6
406678: nop dword ptr [rax + rax]
406680: movzx eax, byte ptr [rdx + 1]
406684: add rdx, 1
406688: test al, al
40668a: je 0x4066a6
40668c: movzx edi, al
40668f: test byte ptr [rsi + rdi*2 + 1], 0x20
406694: je 0x406680
406696: cmp al, 0xa
406698: jne 0x4068a7
40669e: mov eax, 0xa00
4066a3: mov word ptr [rdx], ax
4066a6: mov rax, qword ptr [rip + 0xbc0f3]
4066ad: mov qword ptr [rbp - 0x1e0], rax
4066b4: mov rdi, rax
4066b7: mov rax, qword ptr [rip + 0xbc0da]
4066be: cmp rdi, rax
4066c1: jae 0x406861
4066c7: mov rdi, r12
4066ca: mov qword ptr [rbp - 0x1f8], rcx
4066d1: call 0x401180
4066d6: mov rdi, rbx
4066d9: lea rdx, [rax + 1]
4066dd: mov qword ptr [rbp - 0x1e8], rdx
4066e4: call 0x401180
4066e9: mov rdx, qword ptr [rbp - 0x1e8]
4066f0: mov r11, qword ptr [rip + 0xbc0b9]
4066f7: lea r10, [rax + 1]
4066fb: mov r13, qword ptr [rip + 0xbd25e]
406702: lea rax, [r11 + rdx]
406706: mov qword ptr [rbp - 0x1e8], rax
40670d: add rax, r10
406710: mov rcx, rax
406713: mov qword ptr [rbp - 0x1f0], rax
40671a: mov rax, qword ptr [rip + 0xbc087]
406721: cmp rcx, rax
406724: mov rcx, qword ptr [rbp - 0x1f8]
40672b: ja 0x4067c9
406731: mov rsi, qword ptr [rip + 0xbd220]
406738: mov r9, r13
40673b: mov r13, qword ptr [rbp - 0x1e0]
406742: lea rdi, [r9 + r11]
406746: mov qword ptr [rbp - 0x200], rcx
40674d: mov qword ptr [rbp - 0x208], r10
406754: shl r13, 4
406758: mov qword ptr [rbp - 0x1f8], r9
40675f: add r13, rsi
406762: mov rsi, r12
406765: call 0x401060
40676a: mov rdi, qword ptr [rbp - 0x1e8]
406771: mov r9, qword ptr [rbp - 0x1f8]
406778: mov rsi, rbx
40677b: mov r10, qword ptr [rbp - 0x208]
406782: mov qword ptr [r13], rax
406786: add rdi, r9
406789: mov rdx, r10
40678c: call 0x401060
406791: mov rbx, qword ptr [rbp - 0x1e0]
406798: add qword ptr [rbp - 0x1d8], 1
4067a0: mov qword ptr [r13 + 8], rax
4067a4: mov rax, qword ptr [rbp - 0x1f0]
4067ab: add rbx, 1
4067af: mov rcx, qword ptr [rbp - 0x200]
4067b6: mov qword ptr [rip + 0xbbff3], rax
4067bd: mov qword ptr [rip + 0xbbfdc], rbx
4067c4: jmp 0x406578
4067c9: lea rsi, [rdx + r10]
4067cd: mov qword ptr [rbp - 0x210], rcx
4067d4: mov ecx, 0x400
4067d9: mov rdi, r13
4067dc: cmp rsi, 0x400
4067e3: mov qword ptr [rbp - 0x218], r11
4067ea: cmovb rsi, rcx
4067ee: mov qword ptr [rbp - 0x208], r10
4067f5: mov qword ptr [rbp - 0x200], rdx
4067fc: lea r8, [rsi + rax]
406800: mov rsi, r8
406803: mov qword ptr [rbp - 0x1f8], r8
40680a: call 0x427100
40680f: mov r9, rax
406812: test rax, rax
406815: je 0x406583
40681b: cmp rax, r13
40681e: mov rsi, qword ptr [rip + 0xbd133]
406825: mov r8, qword ptr [rbp - 0x1f8]
40682c: mov rdx, qword ptr [rbp - 0x200]
406833: mov r10, qword ptr [rbp - 0x208]
40683a: mov rcx, qword ptr [rbp - 0x210]
406841: mov r11, qword ptr [rbp - 0x218]
406848: jne 0x4068d7
40684e: mov qword ptr [rip + 0xbd10b], r9
406855: mov qword ptr [rip + 0xbbf4c], r8
40685c: jmp 0x40673b
406861: test rax, rax
406864: jne 0x4068af
406866: mov esi, 0x640
40686b: mov r13d, 0x64
406871: mov rdi, qword ptr [rip + 0xbd0e0]
406878: mov qword ptr [rbp - 0x1e8], rcx
40687f: call 0x427100
406884: test rax, rax
406887: je 0x406583
40688d: mov qword ptr [rip + 0xbd0c4], rax
406894: mov rcx, qword ptr [rbp - 0x1e8]
40689b: mov qword ptr [rip + 0xbbef6], r13
4068a2: jmp 0x4066c7
4068a7: mov byte ptr [rdx], 0
4068aa: jmp 0x4066a6
4068af: lea r13, [rax + rax]
4068b3: shl rax, 5
4068b7: mov rsi, rax
4068ba: jmp 0x406871
4068bc: or qword ptr [rsp + rcx - 8], 0
4068c2: jmp 0x40649c
4068c7: mov qword ptr [rbp - 0x1d8], 0
4068d2: jmp 0x4065b4
4068d7: mov rdi, qword ptr [rbp - 0x1e0]
4068de: test rdi, rdi
4068e1: je 0x40684e
4068e7: sub rax, r13
4068ea: shl rdi, 4
4068ee: movq xmm1, rax
4068f3: add rdi, rsi
4068f6: mov rax, rsi
4068f9: punpcklqdq xmm1, xmm1
4068fd: movdqu xmm0, xmmword ptr [rax]
406901: add rax, 0x10
406905: paddq xmm0, xmm1
406909: movups xmmword ptr [rax - 0x10], xmm0
40690d: cmp rax, rdi
406910: jne 0x4068fd
406912: jmp 0x40684e
406917: mov rdi, r15
40691a: call 0x418240
40691f: jmp 0x4065b4
406924: call 0x4547a0
406929: nop dword ptr [rax]
406930: endbr64 
406934: push r15
406936: push r14
406938: push r13
40693a: push r12
40693c: push rbp
40693d: push rbx
40693e: mov rbx, rdi
406941: sub rsp, 0x18
406945: mov eax, dword ptr fs:[0x18]
40694d: test eax, eax
40694f: jne 0x406ac7
406955: mov edx, 1
40695a: cmpxchg dword ptr [rip + 0xbbe57], edx
406961: cmp qword ptr [rip + 0xbbe27], 0
406969: je 0x406aab
40696f: mov r15, qword ptr [rip + 0xbbe2a]
406976: lea rbp, [rip + 0xb9443]
40697d: test r15, r15
406980: jne 0x406a5d
406986: mov rsi, qword ptr [rip + 0xbbe03]
40698d: xor edx, edx
40698f: movzx eax, byte ptr [rsi]
406992: test al, al
406994: je 0x4069f0
406996: nop word ptr cs:[rax + rax]
4069a0: lea rdx, [rsi + 1]
4069a4: mov rdi, rsi
4069a7: cmp al, 0x3a
4069a9: jne 0x4069c2
4069ab: nop dword ptr [rax + rax]
4069b0: mov rdi, rdx
4069b3: movzx eax, byte ptr [rdx]
4069b6: add rdx, 1
4069ba: cmp al, 0x3a
4069bc: je 0x4069b0
4069be: test al, al
4069c0: je 0x406a30
4069c2: lea rdx, [rdi + 1]
4069c6: nop word ptr cs:[rax + rax]
4069d0: movzx eax, byte ptr [rdx]
4069d3: mov rsi, rdx
4069d6: add rdx, 1
4069da: test al, al
4069dc: je 0x4069e2
4069de: cmp al, 0x3a
4069e0: jne 0x4069d0
4069e2: cmp rsi, rdi
4069e5: ja 0x406a35
4069e7: mov edx, 1
4069ec: test al, al
4069ee: jne 0x4069a0
4069f0: test dl, dl
4069f2: je 0x4069fb
4069f4: mov qword ptr [rip + 0xbbd95], rsi
4069fb: xor r8d, r8d
4069fe: mov eax, dword ptr fs:[0x18]
406a06: test eax, eax
406a08: jne 0x406aed
406a0e: sub dword ptr [rip + 0xbbda3], 1
406a15: add rsp, 0x18
406a19: mov rax, r8
406a1c: pop rbx
406a1d: pop rbp
406a1e: pop r12
406a20: pop r13
406a22: pop r14
406a24: pop r15
406a26: ret 
406a27: nop word ptr [rax + rax]
406a30: mov rsi, rdi
406a33: jmp 0x4069e7
406a35: mov qword ptr [rip + 0xbbd54], rsi
406a3c: sub rsi, rdi
406a3f: call 0x406430
406a44: test rax, rax
406a47: je 0x406986
406a4d: mov r15, qword ptr [rip + 0xbbd4c]
406a54: test r15, r15
406a57: je 0x406986
406a5d: mov rax, qword ptr [rip + 0xbcef4]
406a64: xor r14d, r14d
406a67: mov qword ptr [rsp + 8], rax
406a6c: jmp 0x406a80
406a6e: nop 
406a70: je 0x406abe
406a72: lea r14, [r12 + 1]
406a77: cmp r15, r14
406a7a: jbe 0x406986
406a80: lea r12, [r15 + r14]
406a84: mov rdx, rbp
406a87: mov rdi, rbx
406a8a: shr r12, 1
406a8d: mov r13, r12
406a90: shl r13, 4
406a94: add r13, qword ptr [rsp + 8]
406a99: mov rsi, qword ptr [r13]
406a9d: call 0x4010f0
406aa2: test eax, eax
406aa4: jns 0x406a70
406aa6: mov r15, r12
406aa9: jmp 0x406a77
406aab: lea rax, [rip + 0x8e904]
406ab2: mov qword ptr [rip + 0xbbcd7], rax
406ab9: jmp 0x40696f
406abe: mov r8, qword ptr [r13 + 8]
406ac2: jmp 0x4069fe
406ac7: xor eax, eax
406ac9: mov edx, 1
406ace: lock cmpxchg dword ptr [rip + 0xbbce2], edx
406ad6: je 0x406961
406adc: lea rdi, [rip + 0xbbcd5]
406ae3: call 0x421250
406ae8: jmp 0x406961
406aed: xor eax, eax
406aef: xchg dword ptr [rip + 0xbbcc3], eax
406af5: cmp eax, 1
406af8: jle 0x406a15
406afe: xor r10d, r10d
406b01: mov edx, 1
406b06: mov esi, 0x81
406b0b: mov eax, 0xca
406b10: lea rdi, [rip + 0xbbca1]
406b17: syscall 
406b19: jmp 0x406a15
406b1e: nop 
406b20: endbr64 
406b24: push r15
406b26: push r14
406b28: push r13
406b2a: push r12
406b2c: mov r12, rdx
406b2f: push rbp
406b30: lea rbp, [r12 + 2]
406b35: push rbx
406b36: mov ebx, ecx
406b38: sub rsp, 0x48
406b3c: mov qword ptr [rsp + 0x18], rdi
406b41: mov rdi, r8
406b44: mov qword ptr [rsp + 0x10], rsi
406b49: mov dword ptr [rsp + 0x38], ecx
406b4d: mov qword ptr [rsp + 8], r8
406b52: mov qword ptr [rsp + 0x20], r9
406b57: call 0x401180
406b5c: and ebx, 4
406b5f: mov r14, rax
406b62: mov r13d, ebx
406b65: je 0x406ed8
406b6b: mov rdi, qword ptr [rsp + 0x20]
406b70: call 0x401180
406b75: lea r15, [rax + 1]
406b79: mov eax, dword ptr [rsp + 0x38]
406b7d: add r14, rbp
406b80: xor ebp, ebp
406b82: and eax, 2
406b85: mov dword ptr [rsp + 0x28], eax
406b89: je 0x406b9c
406b8b: mov rdi, qword ptr [rsp + 0x80]
406b93: call 0x401180
406b98: lea rbp, [rax + 1]
406b9c: mov eax, dword ptr [rsp + 0x38]
406ba0: add r14, r15
406ba3: xor ebx, ebx
406ba5: and eax, 1
406ba8: mov dword ptr [rsp + 0x30], eax
406bac: je 0x406bbf
406bae: mov rdi, qword ptr [rsp + 0x88]
406bb6: call 0x401180
406bbb: lea rbx, [rax + 1]
406bbf: mov eax, dword ptr [rsp + 0x38]
406bc3: add rbp, r14
406bc6: xor r15d, r15d
406bc9: and eax, 8
406bcc: mov dword ptr [rsp + 0x3c], eax
406bd0: je 0x406be3
406bd2: mov rdi, qword ptr [rsp + 0x90]
406bda: call 0x401180
406bdf: lea r15, [rax + 1]
406be3: mov rdi, qword ptr [rsp + 0x98]
406beb: call 0x401180
406bf0: lea rdi, [rbx + rbp]
406bf4: add rdi, r15
406bf7: mov r14, rax
406bfa: add rdi, rax
406bfd: call 0x426410
406c02: mov rbp, rax
406c05: test rax, rax
406c08: je 0x4070cf
406c0e: mov rsi, qword ptr [rsp + 0x10]
406c13: mov rdx, r12
406c16: mov rdi, rax
406c19: call 0x401060
406c1e: test r12, r12
406c21: je 0x406c50
406c23: mov rbx, r12
406c26: mov r15, rbp
406c29: nop dword ptr [rax]
406c30: mov rdi, r15
406c33: call 0x401180
406c38: mov rdx, rax
406c3b: not rdx
406c3e: add rbx, rdx
406c41: je 0x406c50
406c43: add rax, r15
406c46: mov byte ptr [rax], 0x3a
406c49: lea r15, [rax + 1]
406c4d: jmp 0x406c30
406c4f: nop 
406c50: mov byte ptr [rbp + r12 - 1], 0x2f
406c56: mov rsi, qword ptr [rsp + 8]
406c5b: lea rdi, [rbp + r12]
406c60: call 0x401090
406c65: test r13d, r13d
406c68: jne 0x407048
406c6e: mov esi, dword ptr [rsp + 0x28]
406c72: lea rdi, [rax + 1]
406c76: test esi, esi
406c78: jne 0x407028
406c7e: mov ecx, dword ptr [rsp + 0x30]
406c82: test ecx, ecx
406c84: jne 0x407008
406c8a: mov edx, dword ptr [rsp + 0x3c]
406c8e: test edx, edx
406c90: jne 0x406fe8
406c96: mov byte ptr [rax], 0x2f
406c99: mov rsi, qword ptr [rsp + 0x98]
406ca1: lea rdx, [r14 + 1]
406ca5: call 0x401060
406caa: mov rax, qword ptr [rsp + 0x18]
406caf: mov rax, qword ptr [rax]
406cb2: mov qword ptr [rsp + 0x30], rax
406cb7: test rax, rax
406cba: je 0x4070b7
406cc0: mov r13, rax
406cc3: xor r14d, r14d
406cc6: nop word ptr cs:[rax + rax]
406cd0: mov rdi, qword ptr [r13]
406cd4: test rdi, rdi
406cd7: je 0x406cee
406cd9: mov rsi, rbp
406cdc: call 0x401130
406ce1: test eax, eax
406ce3: je 0x407080
406ce9: js 0x406cf7
406ceb: mov r14, r13
406cee: mov r13, qword ptr [r13 + 0x18]
406cf2: test r13, r13
406cf5: jne 0x406cd0
406cf7: mov eax, dword ptr [rsp + 0xa0]
406cfe: test eax, eax
406d00: je 0x407076
406d06: mov ecx, dword ptr [rsp + 0x38]
406d0a: mov r13d, 1
406d10: mov r15, qword ptr [rsp + 0x10]
406d15: mov rbx, r12
406d18: mov eax, ecx
406d1a: and ecx, 0x5555
406d20: sar eax, 1
406d22: and eax, 0xffffd555
406d27: add eax, ecx
406d29: mov ecx, eax
406d2b: and eax, 0x3333
406d30: sar ecx, 2
406d33: and ecx, 0xfffff333
406d39: add ecx, eax
406d3b: mov eax, ecx
406d3d: sar eax, 4
406d40: add eax, ecx
406d42: and eax, 0xf0f
406d47: mov ecx, eax
406d49: sar ecx, 8
406d4c: add ecx, eax
406d4e: shl r13d, cl
406d51: movsxd rax, r13d
406d54: xor r13d, r13d
406d57: mov qword ptr [rsp + 0x28], rax
406d5c: test r12, r12
406d5f: je 0x407097
406d65: nop dword ptr [rax]
406d68: mov rdi, r15
406d6b: add r13, 1
406d6f: call 0x401180
406d74: lea r15, [r15 + rax + 1]
406d79: not rax
406d7c: add rbx, rax
406d7f: jne 0x406d68
406d81: imul r13, qword ptr [rsp + 0x28]
406d87: shl r13, 4
406d8b: lea rdi, [r13 + 0x28]
406d8f: call 0x426410
406d94: mov r13, rax
406d97: test rax, rax
406d9a: je 0x4070bf
406da0: mov r15, qword ptr [rsp + 0x10]
406da5: mov qword ptr [rax], rbp
406da8: mov rbp, r12
406dab: nop dword ptr [rax + rax]
406db0: mov rdi, r15
406db3: add rbx, 1
406db7: call 0x401180
406dbc: lea r15, [r15 + rax + 1]
406dc1: not rax
406dc4: add rbp, rax
406dc7: jne 0x406db0
406dc9: mov eax, 1
406dce: cmp rbx, 1
406dd2: je 0x406ee0
406dd8: mov dword ptr [r13 + 8], eax
406ddc: mov qword ptr [r13 + 0x10], 0
406de4: test r14, r14
406de7: je 0x407060
406ded: mov rax, qword ptr [r14 + 0x18]
406df1: mov qword ptr [r13 + 0x18], rax
406df5: mov qword ptr [r14 + 0x18], r13
406df9: test r12, r12
406dfc: je 0x40708d
406e02: mov r14, qword ptr [rsp + 0x10]
406e07: mov rbx, r12
406e0a: xor ebp, ebp
406e0c: nop dword ptr [rax]
406e10: mov rdi, r14
406e13: add rbp, 1
406e17: call 0x401180
406e1c: lea r14, [r14 + rax + 1]
406e21: not rax
406e24: add rbx, rax
406e27: jne 0x406e10
406e29: xor eax, eax
406e2b: mov r15d, dword ptr [rsp + 0x38]
406e30: cmp rbp, 1
406e34: sete al
406e37: sub r15d, eax
406e3a: mov ebp, dword ptr [rsp + 0x38]
406e3e: mov rax, qword ptr [rsp + 0x10]
406e43: xor ebx, ebx
406e45: not ebp
406e47: lea r10, [rax + r12]
406e4b: test r15d, r15d
406e4e: js 0x406e72
406e50: mov rax, r10
406e53: mov r10, r13
406e56: mov r13, r12
406e59: mov r12, rax
406e5c: test r15d, ebp
406e5f: je 0x406f50
406e65: sub r15d, 1
406e69: cmp r15d, -1
406e6d: jne 0x406e5c
406e6f: mov r13, r10
406e72: mov rsi, qword ptr [rsp + 0x98]
406e7a: mov ecx, 0xb
406e7f: lea rdi, [rip + 0x8e550]
406e86: repe cmpsb byte ptr [rsi], byte ptr [rdi]
406e88: seta al
406e8b: sbb al, 0
406e8d: test al, al
406e8f: jne 0x406eb7
406e91: mov r15d, dword ptr [rsp + 0x38]
406e96: test r15d, r15d
406e99: js 0x406eb7
406e9b: mov r12d, r15d
406e9e: lea r14, [rip + 0x8e53d]
406ea5: not r12d
406ea8: test r15d, r12d
406eab: je 0x406ef8
406ead: sub r15d, 1
406eb1: cmp r15d, -1
406eb5: jne 0x406ea8
406eb7: mov qword ptr [r13 + rbx*8 + 0x20], 0
406ec0: add rsp, 0x48
406ec4: mov rax, r13
406ec7: pop rbx
406ec8: pop rbp
406ec9: pop r12
406ecb: pop r13
406ecd: pop r14
406ecf: pop r15
406ed1: ret 
406ed2: nop word ptr [rax + rax]
406ed8: xor r15d, r15d
406edb: jmp 0x406b79
406ee0: mov eax, dword ptr [rsp + 0x38]
406ee4: and eax, 3
406ee7: cmp eax, 3
406eea: sete al
406eed: movzx eax, al
406ef0: jmp 0x406dd8
406ef5: nop dword ptr [rax]
406ef8: sub rsp, 8
406efc: mov ecx, r15d
406eff: mov edx, 0x1b
406f04: mov rsi, r14
406f07: push 1
406f09: lea rbp, [rbx + 1]
406f0d: push qword ptr [rsp + 0xa8]
406f14: push qword ptr [rsp + 0xa8]
406f1b: push qword ptr [rsp + 0xa8]
406f22: push qword ptr [rsp + 0xa8]
406f29: mov r9, qword ptr [rsp + 0x50]
406f2e: mov r8, qword ptr [rsp + 0x38]
406f33: mov rdi, qword ptr [rsp + 0x48]
406f38: call 0x406b20
406f3d: add rsp, 0x30
406f41: mov qword ptr [r13 + rbx*8 + 0x20], rax
406f46: mov rbx, rbp
406f49: jmp 0x406ead
406f4e: nop 
406f50: test r13, r13
406f53: je 0x406e65
406f59: mov r14, qword ptr [rsp + 0x10]
406f5e: mov dword ptr [rsp + 0x28], ebp
406f62: mov rbp, r14
406f65: mov r14, r10
406f68: mov rdi, rbp
406f6b: add rbx, 1
406f6f: call 0x401180
406f74: sub rsp, 8
406f78: mov ecx, r15d
406f7b: mov rsi, rbp
406f7e: push 1
406f80: lea rdx, [rax + 1]
406f84: push qword ptr [rsp + 0xa8]
406f8b: push qword ptr [rsp + 0xa8]
406f92: push qword ptr [rsp + 0xa8]
406f99: push qword ptr [rsp + 0xa8]
406fa0: mov r9, qword ptr [rsp + 0x50]
406fa5: mov r8, qword ptr [rsp + 0x38]
406faa: mov rdi, qword ptr [rsp + 0x48]
406faf: call 0x406b20
406fb4: add rsp, 0x30
406fb8: mov qword ptr [r14 + rbx*8 + 0x18], rax
406fbd: cmp r12, rbp
406fc0: jbe 0x406fd8
406fc2: mov rdi, rbp
406fc5: call 0x401180
406fca: lea rbp, [rbp + rax + 1]
406fcf: cmp rbp, r12
406fd2: jb 0x406f68
406fd4: nop dword ptr [rax]
406fd8: mov ebp, dword ptr [rsp + 0x28]
406fdc: mov r10, r14
406fdf: jmp 0x406e65
406fe4: nop dword ptr [rax]
406fe8: mov byte ptr [rax], 0x40
406feb: mov rsi, qword ptr [rsp + 0x90]
406ff3: call 0x401090
406ff8: lea rdi, [rax + 1]
406ffc: jmp 0x406c96
407001: nop dword ptr [rax]
407008: mov byte ptr [rax], 0x2e
40700b: mov rsi, qword ptr [rsp + 0x88]
407013: call 0x401090
407018: lea rdi, [rax + 1]
40701c: jmp 0x406c8a
407021: nop dword ptr [rax]
407028: mov byte ptr [rax], 0x2e
40702b: mov rsi, qword ptr [rsp + 0x80]
407033: call 0x401090
407038: lea rdi, [rax + 1]
40703c: jmp 0x406c7e
407041: nop dword ptr [rax]
407048: mov byte ptr [rax], 0x5f
40704b: mov rsi, qword ptr [rsp + 0x20]
407050: lea rdi, [rax + 1]
407054: call 0x401090
407059: jmp 0x406c6e
40705e: nop 
407060: mov rax, qword ptr [rsp + 0x30]
407065: mov qword ptr [r13 + 0x18], rax
407069: mov rax, qword ptr [rsp + 0x18]
40706e: mov qword ptr [rax], r13
407071: jmp 0x406df9
407076: xor r13d, r13d
407079: nop dword ptr [rax]
407080: mov rdi, rbp
407083: call 0x426a00
407088: jmp 0x406ec0
40708d: mov r15d, dword ptr [rsp + 0x38]
407092: jmp 0x406e3a
407097: mov edi, 0x28
40709c: call 0x426410
4070a1: mov r13, rax
4070a4: test rax, rax
4070a7: je 0x4070bf
4070a9: mov qword ptr [r13], rbp
4070ad: mov eax, 1
4070b2: jmp 0x406dd8
4070b7: xor r14d, r14d
4070ba: jmp 0x406cf7
4070bf: mov rdi, rbp
4070c2: xor r13d, r13d
4070c5: call 0x426a00
4070ca: jmp 0x406ec0
4070cf: xor r13d, r13d
4070d2: jmp 0x406ec0
4070d7: nop word ptr [rax + rax]
4070e0: endbr64 
4070e4: push r12
4070e6: push rbp
4070e7: push rbx
4070e8: test rsi, rsi
4070eb: je 0x4071d0
4070f1: mov rbx, qword ptr [rip + 0xb8d30]
4070f8: mov rbp, rdi
4070fb: mov r12, rsi
4070fe: mov rdx, rdi
407101: lea r8, [rsi + rdi]
407105: xor r9d, r9d
407108: mov esi, 1
40710d: xor edi, edi
40710f: nop 
407110: movzx ecx, byte ptr [rdx]
407113: mov rax, rcx
407116: test byte ptr [rbx + rcx*2], 8
40711a: je 0x40712a
40711c: sub eax, 0x30
40711f: add rdi, 1
407123: cmp eax, 0xa
407126: cmovae esi, r9d
40712a: add rdx, 1
40712e: cmp r8, rdx
407131: jne 0x407110
407133: test esi, esi
407135: jne 0x4071a0
407137: add rdi, 1
40713b: call 0x426410
407140: test rax, rax
407143: je 0x4071c0
407145: mov r9, rax
407148: mov r8, qword ptr [rip + 0xb8ce1]
40714f: xor edx, edx
407151: jmp 0x40716c
407153: nop dword ptr [rax + rax]
407158: mov ecx, dword ptr [r8 + rdi*4]
40715c: add rax, 1
407160: mov byte ptr [rax - 1], cl
407163: add rdx, 1
407167: cmp r12, rdx
40716a: jbe 0x407194
40716c: movzx edi, byte ptr [rbp + rdx]
407171: test byte ptr [rbx + rdi*2 + 1], 4
407176: jne 0x407158
407178: movzx esi, dil
40717c: sub esi, 0x30
40717f: cmp esi, 9
407182: ja 0x407163
407184: add rdx, 1
407188: mov byte ptr [rax], dil
40718b: add rax, 1
40718f: cmp r12, rdx
407192: ja 0x40716c
407194: mov byte ptr [rax], 0
407197: mov rax, r9
40719a: pop rbx
40719b: pop rbp
40719c: pop r12
40719e: ret 
40719f: nop 
4071a0: add rdi, 4
4071a4: call 0x426410
4071a9: mov r9, rax
4071ac: test rax, rax
4071af: je 0x4071c0
4071b1: mov dword ptr [rax], 0x6f7369
4071b7: lea rax, [rax + 3]
4071bb: jmp 0x407148
4071bd: nop dword ptr [rax]
4071c0: xor r9d, r9d
4071c3: pop rbx
4071c4: pop rbp
4071c5: mov rax, r9
4071c8: pop r12
4071ca: ret 
4071cb: nop dword ptr [rax + rax]
4071d0: mov edi, 4
4071d5: call 0x426410
4071da: mov r9, rax
4071dd: test rax, rax
4071e0: je 0x4071c0
4071e2: mov dword ptr [r9], 0x6f7369
4071e9: lea rax, [r9 + 3]
4071ed: jmp 0x407194
4071ef: nop 
4071f0: endbr64 
4071f4: push r15
4071f6: push r14
4071f8: push r13
4071fa: push r12
4071fc: push rbp
4071fd: mov rbp, r8
407200: push rbx
407201: sub rsp, 0x28
407205: mov qword ptr [rdx], 0
40720c: mov qword ptr [rcx], 0
407213: mov qword ptr [r8], 0
40721a: mov qword ptr [r9], 0
407221: mov qword ptr [rsi], rdi
407224: movzx eax, byte ptr [rdi]
407227: cmp al, 0x5f
407229: je 0x407290
40722b: test al, al
40722d: je 0x407290
40722f: mov r14, rdx
407232: mov rbx, rdi
407235: jmp 0x40725b
407237: nop word ptr [rax + rax]
407240: cmp al, 0x40
407242: je 0x40725f
407244: movzx eax, byte ptr [rbx + 1]
407248: lea rsi, [rbx + 1]
40724c: test al, al
40724e: je 0x4072d0
407254: cmp al, 0x5f
407256: je 0x4072d0
407258: mov rbx, rsi
40725b: cmp al, 0x2e
40725d: jne 0x407240
40725f: cmp rdi, rbx
407262: je 0x407290
407264: mov edx, 2
407269: xor r12d, r12d
40726c: cmp al, 0x2e
40726e: je 0x40731b
407274: cmp al, 0x40
407276: jne 0x407293
407278: lea rax, [rbx + 1]
40727c: mov byte ptr [rbx], 0
40727f: mov qword ptr [r14], rax
407282: cmp byte ptr [rbx + 1], 0
407286: je 0x407293
407288: or r12d, 8
40728c: jmp 0x407293
40728e: nop 
407290: xor r12d, r12d
407293: mov rax, qword ptr [rcx]
407296: test rax, rax
407299: je 0x4072a8
40729b: mov edx, r12d
40729e: and edx, 0xfffffffb
4072a1: cmp byte ptr [rax], 0
4072a4: cmove r12d, edx
4072a8: mov rax, qword ptr [rbp]
4072ac: test rax, rax
4072af: je 0x4072be
4072b1: mov edx, r12d
4072b4: and edx, 0xfffffffd
4072b7: cmp byte ptr [rax], 0
4072ba: cmove r12d, edx
4072be: add rsp, 0x28
4072c2: mov eax, r12d
4072c5: pop rbx
4072c6: pop rbp
4072c7: pop r12
4072c9: pop r13
4072cb: pop r14
4072cd: pop r15
4072cf: ret 
4072d0: cmp rdi, rsi
4072d3: je 0x407290
4072d5: cmp al, 0x5f
4072d7: jne 0x4073d3
4072dd: add rbx, 2
4072e1: mov byte ptr [rsi], 0
4072e4: mov qword ptr [rcx], rbx
4072e7: movzx eax, byte ptr [rsi + 1]
4072eb: test al, 0xbf
4072ed: jne 0x407304
4072ef: jmp 0x407308
4072f1: nop dword ptr [rax]
4072f8: movzx eax, byte ptr [rbx + 1]
4072fc: add rbx, 1
407300: test al, 0xbf
407302: je 0x407308
407304: cmp al, 0x2e
407306: jne 0x4072f8
407308: mov edx, 6
40730d: mov r12d, 4
407313: cmp al, 0x2e
407315: jne 0x407274
40731b: lea rdi, [rbx + 1]
40731f: mov byte ptr [rbx], 0
407322: mov qword ptr [rbp], rdi
407326: movzx eax, byte ptr [rbx + 1]
40732a: test al, 0xbf
40732c: je 0x4073c8
407332: mov rbx, rdi
407335: nop dword ptr [rax]
407338: mov r15, rbx
40733b: add rbx, 1
40733f: test byte ptr [rbx], 0xbf
407342: jne 0x407338
407344: mov qword ptr [rsp + 8], r9
407349: cmp rdi, rbx
40734c: je 0x407399
40734e: mov rsi, rbx
407351: mov qword ptr [rsp + 0x18], rcx
407356: sub rsi, rdi
407359: mov dword ptr [rsp + 0x10], edx
40735d: call 0x4070e0
407362: mov r9, qword ptr [rsp + 8]
407367: mov r13, rax
40736a: mov qword ptr [r9], rax
40736d: test rax, rax
407370: je 0x4073e3
407372: mov rdi, qword ptr [rbp]
407376: mov rsi, rax
407379: call 0x401130
40737e: mov edx, dword ptr [rsp + 0x10]
407382: mov rcx, qword ptr [rsp + 0x18]
407387: test eax, eax
407389: je 0x4073a1
40738b: movzx eax, byte ptr [r15 + 1]
407390: or r12d, 3
407394: jmp 0x407274
407399: mov r12d, edx
40739c: jmp 0x407274
4073a1: mov rdi, r13
4073a4: mov qword ptr [rsp + 0x10], rcx
4073a9: mov dword ptr [rsp + 8], edx
4073ad: call 0x426a00
4073b2: mov edx, dword ptr [rsp + 8]
4073b6: movzx eax, byte ptr [r15 + 1]
4073bb: mov rcx, qword ptr [rsp + 0x10]
4073c0: mov r12d, edx
4073c3: jmp 0x407274
4073c8: mov r12d, edx
4073cb: mov rbx, rdi
4073ce: jmp 0x407274
4073d3: mov rbx, rsi
4073d6: mov edx, 2
4073db: xor r12d, r12d
4073de: jmp 0x40726c
4073e3: or r12d, 0xffffffff
4073e7: jmp 0x4072be
4073ec: nop dword ptr [rax]
4073f0: endbr64 
4073f4: test rdi, rdi
4073f7: je 0x407448
4073f9: push rbp
4073fa: mov eax, dword ptr [rdi]
4073fc: mov rbp, rdi
4073ff: cmp eax, 2
407402: je 0x407429
407404: cmp eax, 3
407407: je 0x407420
407409: cmp eax, 1
40740c: je 0x407432
40740e: mov rdi, rbp
407411: pop rbp
407412: jmp 0x426a00
407417: nop word ptr [rax + rax]
407420: mov rdi, qword ptr [rdi + 0x18]
407424: call 0x4073f0
407429: mov rdi, qword ptr [rbp + 0x10]
40742d: call 0x4073f0
407432: mov rdi, qword ptr [rbp + 8]
407436: call 0x4073f0
40743b: mov rdi, rbp
40743e: pop rbp
40743f: jmp 0x426a00
407444: nop dword ptr [rax]
407448: ret 
407449: nop dword ptr [rax]
407450: push r15
407452: push r14
407454: push r13
407456: mov r13, rsi
407459: push r12
40745b: push rbp
40745c: push rbx
40745d: sub rsp, 0x18
407461: mov r12, qword ptr [rsi + 8]
407465: test r12, r12
407468: je 0x4074b0
40746a: mov rbp, qword ptr [rsi]
40746d: test rbp, rbp
407470: je 0x4074b0
407472: mov ebx, edi
407474: mov edi, 0x20
407479: call 0x426410
40747e: test rax, rax
407481: je 0x4074b0
407483: movq xmm0, rbp
407488: movq xmm1, r12
40748d: mov dword ptr [rax], 2
407493: punpcklqdq xmm0, xmm1
407497: mov dword ptr [rax + 4], ebx
40749a: movups xmmword ptr [rax + 8], xmm0
40749e: add rsp, 0x18
4074a2: pop rbx
4074a3: pop rbp
4074a4: pop r12
4074a6: pop r13
4074a8: pop r14
4074aa: pop r15
4074ac: ret 
4074ad: nop dword ptr [rax]
4074b0: mov ebx, 1
4074b5: jmp 0x4074dc
4074b7: nop word ptr [rax + rax]
4074c0: cmp eax, 1
4074c3: je 0x407553
4074c9: mov rdi, rbp
4074cc: call 0x426a00
4074d1: test rbx, rbx
4074d4: je 0x4079d0
4074da: xor ebx, ebx
4074dc: mov rbp, qword ptr [r13 + rbx*8]
4074e1: test rbp, rbp
4074e4: je 0x4074d1
4074e6: mov eax, dword ptr [rbp]
4074e9: cmp eax, 2
4074ec: je 0x407523
4074ee: cmp eax, 3
4074f1: jne 0x4074c0
4074f3: mov r12, qword ptr [rbp + 0x18]
4074f7: test r12, r12
4074fa: je 0x407523
4074fc: mov eax, dword ptr [r12]
407500: cmp eax, 2
407503: je 0x407960
407509: cmp eax, 3
40750c: je 0x407930
407512: cmp eax, 1
407515: je 0x407990
40751b: mov rdi, r12
40751e: call 0x426a00
407523: mov r12, qword ptr [rbp + 0x10]
407527: test r12, r12
40752a: je 0x407553
40752c: mov eax, dword ptr [r12]
407530: cmp eax, 2
407533: je 0x407648
407539: cmp eax, 3
40753c: je 0x407618
407542: cmp eax, 1
407545: je 0x407678
40754b: mov rdi, r12
40754e: call 0x426a00
407553: mov r12, qword ptr [rbp + 8]
407557: test r12, r12
40755a: je 0x4074c9
407560: mov eax, dword ptr [r12]
407564: cmp eax, 2
407567: je 0x4075b0
407569: cmp eax, 3
40756c: je 0x407580
40756e: cmp eax, 1
407571: je 0x4075e0
407573: mov rdi, r12
407576: call 0x426a00
40757b: jmp 0x4074c9
407580: mov r14, qword ptr [r12 + 0x18]
407585: test r14, r14
407588: je 0x4075b0
40758a: mov eax, dword ptr [r14]
40758d: cmp eax, 2
407590: je 0x407d3f
407596: cmp eax, 3
407599: je 0x407d10
40759f: cmp eax, 1
4075a2: je 0x407d6e
4075a8: mov rdi, r14
4075ab: call 0x426a00
4075b0: mov r14, qword ptr [r12 + 0x10]
4075b5: test r14, r14
4075b8: je 0x4075e0
4075ba: mov eax, dword ptr [r14]
4075bd: cmp eax, 2
4075c0: je 0x40777f
4075c6: cmp eax, 3
4075c9: je 0x407750
4075cf: cmp eax, 1
4075d2: je 0x4077ae
4075d8: mov rdi, r14
4075db: call 0x426a00
4075e0: mov r14, qword ptr [r12 + 8]
4075e5: test r14, r14
4075e8: je 0x407573
4075ea: mov eax, dword ptr [r14]
4075ed: cmp eax, 2
4075f0: je 0x4076e7
4075f6: cmp eax, 3
4075f9: je 0x4076b8
4075ff: cmp eax, 1
407602: je 0x407716
407608: mov rdi, r14
40760b: call 0x426a00
407610: jmp 0x407573
407615: nop dword ptr [rax]
407618: mov r14, qword ptr [r12 + 0x18]
40761d: test r14, r14
407620: je 0x407648
407622: mov eax, dword ptr [r14]
407625: cmp eax, 2
407628: je 0x4085a7
40762e: cmp eax, 3
407631: je 0x40856a
407637: cmp eax, 1
40763a: je 0x4085d6
407640: mov rdi, r14
407643: call 0x426a00
407648: mov r14, qword ptr [r12 + 0x10]
40764d: test r14, r14
407650: je 0x407678
407652: mov eax, dword ptr [r14]
407655: cmp eax, 2
407658: je 0x407a17
40765e: cmp eax, 3
407661: je 0x4079e8
407667: cmp eax, 1
40766a: je 0x407a46
407670: mov rdi, r14
407673: call 0x426a00
407678: mov r14, qword ptr [r12 + 8]
40767d: test r14, r14
407680: je 0x40754b
407686: mov eax, dword ptr [r14]
407689: cmp eax, 2
40768c: je 0x40781f
407692: cmp eax, 3
407695: je 0x4077f0
40769b: cmp eax, 1
40769e: je 0x40784e
4076a4: mov rdi, r14
4076a7: call 0x426a00
4076ac: jmp 0x40754b
4076b1: nop dword ptr [rax]
4076b8: mov r15, qword ptr [r14 + 0x18]
4076bc: test r15, r15
4076bf: je 0x4076e7
4076c1: mov eax, dword ptr [r15]
4076c4: cmp eax, 2
4076c7: je 0x4087db
4076cd: cmp eax, 3
4076d0: je 0x408786
4076d6: cmp eax, 1
4076d9: je 0x40880a
4076df: mov rdi, r15
4076e2: call 0x426a00
4076e7: mov r15, qword ptr [r14 + 0x10]
4076eb: test r15, r15
4076ee: je 0x407716
4076f0: mov eax, dword ptr [r15]
4076f3: cmp eax, 2
4076f6: je 0x407bef
4076fc: cmp eax, 3
4076ff: je 0x407bc0
407705: cmp eax, 1
407708: je 0x407c1e
40770e: mov rdi, r15
407711: call 0x426a00
407716: mov r15, qword ptr [r14 + 8]
40771a: test r15, r15
40771d: je 0x407608
407723: mov eax, dword ptr [r15]
407726: cmp eax, 2
407729: je 0x4078bf
40772f: cmp eax, 3
407732: je 0x407890
407738: cmp eax, 1
40773b: je 0x4078ee
407741: mov rdi, r15
407744: call 0x426a00
407749: jmp 0x407608
40774e: nop 
407750: mov r15, qword ptr [r14 + 0x18]
407754: test r15, r15
407757: je 0x40777f
407759: mov eax, dword ptr [r15]
40775c: cmp eax, 2
40775f: je 0x408ec5
407765: cmp eax, 3
407768: je 0x408ebc
40776e: cmp eax, 1
407771: je 0x408f1a
407777: mov rdi, r15
40777a: call 0x426a00
40777f: mov r15, qword ptr [r14 + 0x10]
407783: test r15, r15
407786: je 0x4077ae
407788: mov eax, dword ptr [r15]
40778b: cmp eax, 2
40778e: je 0x407f65
407794: cmp eax, 3
407797: je 0x407f10
40779d: cmp eax, 1
4077a0: je 0x407f94
4077a6: mov rdi, r15
4077a9: call 0x426a00
4077ae: mov r15, qword ptr [r14 + 8]
4077b2: test r15, r15
4077b5: je 0x4075d8
4077bb: mov eax, dword ptr [r15]
4077be: cmp eax, 2
4077c1: je 0x407aaf
4077c7: cmp eax, 3
4077ca: je 0x407a80
4077d0: cmp eax, 1
4077d3: je 0x407ade
4077d9: mov rdi, r15
4077dc: call 0x426a00
4077e1: jmp 0x4075d8
4077e6: nop word ptr cs:[rax + rax]
4077f0: mov r15, qword ptr [r14 + 0x18]
4077f4: test r15, r15
4077f7: je 0x40781f
4077f9: mov eax, dword ptr [r15]
4077fc: cmp eax, 2
4077ff: je 0x408d99
407805: cmp eax, 3
407808: je 0x408d90
40780e: cmp eax, 1
407811: je 0x408dee
407817: mov rdi, r15
40781a: call 0x426a00
40781f: mov r15, qword ptr [r14 + 0x10]
407823: test r15, r15
407826: je 0x40784e
407828: mov eax, dword ptr [r15]
40782b: cmp eax, 2
40782e: je 0x407ea5
407834: cmp eax, 3
407837: je 0x407e50
40783d: cmp eax, 1
407840: je 0x407ed4
407846: mov rdi, r15
407849: call 0x426a00
40784e: mov r15, qword ptr [r14 + 8]
407852: test r15, r15
407855: je 0x4076a4
40785b: mov eax, dword ptr [r15]
40785e: cmp eax, 2
407861: je 0x407b4f
407867: cmp eax, 3
40786a: je 0x407b20
407870: cmp eax, 1
407873: je 0x407b7e
407879: mov rdi, r15
40787c: call 0x426a00
407881: jmp 0x4076a4
407886: nop word ptr cs:[rax + rax]
407890: mov r8, qword ptr [r15 + 0x18]
407894: test r8, r8
407897: je 0x4078bf
407899: mov eax, dword ptr [r8]
40789c: cmp eax, 2
40789f: je 0x409389
4078a5: cmp eax, 3
4078a8: je 0x409378
4078ae: cmp eax, 1
4078b1: je 0x409404
4078b7: mov rdi, r8
4078ba: call 0x426a00
4078bf: mov r8, qword ptr [r15 + 0x10]
4078c3: test r8, r8
4078c6: je 0x4078ee
4078c8: mov eax, dword ptr [r8]
4078cb: cmp eax, 2
4078ce: je 0x40810b
4078d4: cmp eax, 3
4078d7: je 0x408090
4078dd: cmp eax, 1
4078e0: je 0x408142
4078e6: mov rdi, r8
4078e9: call 0x426a00
4078ee: mov r8, qword ptr [r15 + 8]
4078f2: test r8, r8
4078f5: je 0x407741
4078fb: mov eax, dword ptr [r8]
4078fe: cmp eax, 2
407901: je 0x407c97
407907: cmp eax, 3
40790a: je 0x407c60
407910: cmp eax, 1
407913: je 0x407cce
407919: mov rdi, r8
40791c: call 0x426a00
407921: jmp 0x407741
407926: nop word ptr cs:[rax + rax]
407930: mov r14, qword ptr [r12 + 0x18]
407935: test r14, r14
407938: je 0x407960
40793a: mov eax, dword ptr [r14]
40793d: cmp eax, 2
407940: je 0x40977d
407946: cmp eax, 3
407949: je 0x409774
40794f: cmp eax, 1
407952: je 0x4097ba
407958: mov rdi, r14
40795b: call 0x426a00
407960: mov r14, qword ptr [r12 + 0x10]
407965: test r14, r14
407968: je 0x407990
40796a: mov eax, dword ptr [r14]
40796d: cmp eax, 2
407970: je 0x408503
407976: cmp eax, 3
407979: je 0x4084c6
40797f: cmp eax, 1
407982: je 0x408532
407988: mov rdi, r14
40798b: call 0x426a00
407990: mov r14, qword ptr [r12 + 8]
407995: test r14, r14
407998: je 0x40751b
40799e: mov eax, dword ptr [r14]
4079a1: cmp eax, 2
4079a4: je 0x407ddf
4079aa: cmp eax, 3
4079ad: je 0x407db0
4079b3: cmp eax, 1
4079b6: je 0x407e0e
4079bc: mov rdi, r14
4079bf: call 0x426a00
4079c4: jmp 0x40751b
4079c9: nop dword ptr [rax]
4079d0: add rsp, 0x18
4079d4: xor eax, eax
4079d6: pop rbx
4079d7: pop rbp
4079d8: pop r12
4079da: pop r13
4079dc: pop r14
4079de: pop r15
4079e0: ret 
4079e1: nop dword ptr [rax]
4079e8: mov r15, qword ptr [r14 + 0x18]
4079ec: test r15, r15
4079ef: je 0x407a17
4079f1: mov eax, dword ptr [r15]
4079f4: cmp eax, 2
4079f7: je 0x409c36
4079fd: cmp eax, 3
407a00: je 0x409c2d
407a06: cmp eax, 1
407a09: je 0x409c65
407a0f: mov rdi, r15
407a12: call 0x426a00
407a17: mov r15, qword ptr [r14 + 0x10]
407a1b: test r15, r15
407a1e: je 0x407a46
407a20: mov eax, dword ptr [r15]
407a23: cmp eax, 2
407a26: je 0x40884b
407a2c: cmp eax, 3
407a2f: je 0x408842
407a35: cmp eax, 1
407a38: je 0x40887a
407a3e: mov rdi, r15
407a41: call 0x426a00
407a46: mov r15, qword ptr [r14 + 8]
407a4a: test r15, r15
407a4d: je 0x407670
407a53: mov eax, dword ptr [r15]
407a56: cmp eax, 2
407a59: je 0x408025
407a5f: cmp eax, 3
407a62: je 0x407fd0
407a68: cmp eax, 1
407a6b: je 0x408054
407a71: mov rdi, r15
407a74: call 0x426a00
407a79: jmp 0x407670
407a7e: nop 
407a80: mov r8, qword ptr [r15 + 0x18]
407a84: test r8, r8
407a87: je 0x407aaf
407a89: mov eax, dword ptr [r8]
407a8c: cmp eax, 2
407a8f: je 0x40a03a
407a95: cmp eax, 3
407a98: je 0x40a029
407a9e: cmp eax, 1
407aa1: je 0x40a04b
407aa7: mov rdi, r8
407aaa: call 0x426a00
407aaf: mov r8, qword ptr [r15 + 0x10]
407ab3: test r8, r8
407ab6: je 0x407ade
407ab8: mov eax, dword ptr [r8]
407abb: cmp eax, 2
407abe: je 0x408a5b
407ac4: cmp eax, 3
407ac7: je 0x408a4a
407acd: cmp eax, 1
407ad0: je 0x408a92
407ad6: mov rdi, r8
407ad9: call 0x426a00
407ade: mov r8, qword ptr [r15 + 8]
407ae2: test r8, r8
407ae5: je 0x4077d9
407aeb: mov eax, dword ptr [r8]
407aee: cmp eax, 2
407af1: je 0x4082fb
407af7: cmp eax, 3
407afa: je 0x408280
407b00: cmp eax, 1
407b03: je 0x408332
407b09: mov rdi, r8
407b0c: call 0x426a00
407b11: jmp 0x4077d9
407b16: nop word ptr cs:[rax + rax]
407b20: mov r8, qword ptr [r15 + 0x18]
407b24: test r8, r8
407b27: je 0x407b4f
407b29: mov eax, dword ptr [r8]
407b2c: cmp eax, 2
407b2f: je 0x409f76
407b35: cmp eax, 3
407b38: je 0x409f65
407b3e: cmp eax, 1
407b41: je 0x409f87
407b47: mov rdi, r8
407b4a: call 0x426a00
407b4f: mov r8, qword ptr [r15 + 0x10]
407b53: test r8, r8
407b56: je 0x407b7e
407b58: mov eax, dword ptr [r8]
407b5b: cmp eax, 2
407b5e: je 0x40894b
407b64: cmp eax, 3
407b67: je 0x40893a
407b6d: cmp eax, 1
407b70: je 0x408982
407b76: mov rdi, r8
407b79: call 0x426a00
407b7e: mov r8, qword ptr [r15 + 8]
407b82: test r8, r8
407b85: je 0x407879
407b8b: mov eax, dword ptr [r8]
407b8e: cmp eax, 2
407b91: je 0x4083f3
407b97: cmp eax, 3
407b9a: je 0x408378
407ba0: cmp eax, 1
407ba3: je 0x40842a
407ba9: mov rdi, r8
407bac: call 0x426a00
407bb1: jmp 0x407879
407bb6: nop word ptr cs:[rax + rax]
407bc0: mov r8, qword ptr [r15 + 0x18]
407bc4: test r8, r8
407bc7: je 0x407bef
407bc9: mov eax, dword ptr [r8]
407bcc: cmp eax, 2
407bcf: je 0x40a10c
407bd5: cmp eax, 3
407bd8: je 0x40a0fb
407bde: cmp eax, 1
407be1: je 0x40a11d
407be7: mov rdi, r8
407bea: call 0x426a00
407bef: mov r8, qword ptr [r15 + 0x10]
407bf3: test r8, r8
407bf6: je 0x407c1e
407bf8: mov eax, dword ptr [r8]
407bfb: cmp eax, 2
407bfe: je 0x408b6b
407c04: cmp eax, 3
407c07: je 0x408b5a
407c0d: cmp eax, 1
407c10: je 0x408ba2
407c16: mov rdi, r8
407c19: call 0x426a00
407c1e: mov r8, qword ptr [r15 + 8]
407c22: test r8, r8
407c25: je 0x40770e
407c2b: mov eax, dword ptr [r8]
407c2e: cmp eax, 2
407c31: je 0x408203
407c37: cmp eax, 3
407c3a: je 0x408188
407c40: cmp eax, 1
407c43: je 0x40823a
407c49: mov rdi, r8
407c4c: call 0x426a00
407c51: jmp 0x40770e
407c56: nop word ptr cs:[rax + rax]
407c60: mov r9, qword ptr [r8 + 0x18]
407c64: test r9, r9
407c67: je 0x407c97
407c69: mov eax, dword ptr [r9]
407c6c: cmp eax, 2
407c6f: je 0x40a412
407c75: cmp eax, 3
407c78: je 0x40a3f7
407c7e: cmp eax, 1
407c81: je 0x40a42d
407c87: mov rdi, r9
407c8a: mov qword ptr [rsp], r8
407c8e: call 0x426a00
407c93: mov r8, qword ptr [rsp]
407c97: mov r9, qword ptr [r8 + 0x10]
407c9b: test r9, r9
407c9e: je 0x407cce
407ca0: mov eax, dword ptr [r9]
407ca3: cmp eax, 2
407ca6: je 0x408ca9
407cac: cmp eax, 3
407caf: je 0x408c8e
407cb5: cmp eax, 1
407cb8: je 0x408cc4
407cbe: mov rdi, r9
407cc1: mov qword ptr [rsp], r8
407cc5: call 0x426a00
407cca: mov r8, qword ptr [rsp]
407cce: mov r9, qword ptr [r8 + 8]
407cd2: test r9, r9
407cd5: je 0x407919
407cdb: mov eax, dword ptr [r9]
407cde: cmp eax, 2
407ce1: je 0x40848b
407ce7: cmp eax, 3
407cea: je 0x408470
407cf0: cmp eax, 1
407cf3: je 0x4084a6
407cf9: mov rdi, r9
407cfc: mov qword ptr [rsp], r8
407d00: call 0x426a00
407d05: mov r8, qword ptr [rsp]
407d09: jmp 0x407919
407d0e: nop 
407d10: mov r15, qword ptr [r14 + 0x18]
407d14: test r15, r15
407d17: je 0x407d3f
407d19: mov eax, dword ptr [r15]
407d1c: cmp eax, 2
407d1f: je 0x40a824
407d25: cmp eax, 3
407d28: je 0x40a81b
407d2e: cmp eax, 1
407d31: je 0x40a82d
407d37: mov rdi, r15
407d3a: call 0x426a00
407d3f: mov r15, qword ptr [r14 + 0x10]
407d43: test r15, r15
407d46: je 0x407d6e
407d48: mov eax, dword ptr [r15]
407d4b: cmp eax, 2
407d4e: je 0x408e2f
407d54: cmp eax, 3
407d57: je 0x408e26
407d5d: cmp eax, 1
407d60: je 0x408e84
407d66: mov rdi, r15
407d69: call 0x426a00
407d6e: mov r15, qword ptr [r14 + 8]
407d72: test r15, r15
407d75: je 0x4075a8
407d7b: mov eax, dword ptr [r15]
407d7e: cmp eax, 2
407d81: je 0x408663
407d87: cmp eax, 3
407d8a: je 0x40860e
407d90: cmp eax, 1
407d93: je 0x408692
407d99: mov rdi, r15
407d9c: call 0x426a00
407da1: jmp 0x4075a8
407da6: nop word ptr cs:[rax + rax]
407db0: mov r15, qword ptr [r14 + 0x18]
407db4: test r15, r15
407db7: je 0x407ddf
407db9: mov eax, dword ptr [r15]
407dbc: cmp eax, 2
407dbf: je 0x40a51a
407dc5: cmp eax, 3
407dc8: je 0x40a511
407dce: cmp eax, 1
407dd1: je 0x40a523
407dd7: mov rdi, r15
407dda: call 0x426a00
407ddf: mov r15, qword ptr [r14 + 0x10]
407de3: test r15, r15
407de6: je 0x407e0e
407de8: mov eax, dword ptr [r15]
407deb: cmp eax, 2
407dee: je 0x409087
407df4: cmp eax, 3
407df7: je 0x40907e
407dfd: cmp eax, 1
407e00: je 0x4090dc
407e06: mov rdi, r15
407e09: call 0x426a00
407e0e: mov r15, qword ptr [r14 + 8]
407e12: test r15, r15
407e15: je 0x4079bc
407e1b: mov eax, dword ptr [r15]
407e1e: cmp eax, 2
407e21: je 0x40871f
407e27: cmp eax, 3
407e2a: je 0x4086ca
407e30: cmp eax, 1
407e33: je 0x40874e
407e39: mov rdi, r15
407e3c: call 0x426a00
407e41: jmp 0x4079bc
407e46: nop word ptr cs:[rax + rax]
407e50: mov r8, qword ptr [r15 + 0x18]
407e54: test r8, r8
407e57: je 0x407ea5
407e59: mov eax, dword ptr [r8]
407e5c: cmp eax, 2
407e5f: je 0x407e7b
407e61: cmp eax, 3
407e64: jne 0x409ce2
407e6a: mov rdi, qword ptr [r8 + 0x18]
407e6e: mov qword ptr [rsp], r8
407e72: call 0x4073f0
407e77: mov r8, qword ptr [rsp]
407e7b: mov rdi, qword ptr [r8 + 0x10]
407e7f: mov qword ptr [rsp], r8
407e83: call 0x4073f0
407e88: mov r8, qword ptr [rsp]
407e8c: mov rdi, qword ptr [r8 + 8]
407e90: mov qword ptr [rsp], r8
407e94: call 0x4073f0
407e99: mov r8, qword ptr [rsp]
407e9d: mov rdi, r8
407ea0: call 0x426a00
407ea5: mov r8, qword ptr [r15 + 0x10]
407ea9: test r8, r8
407eac: je 0x407ed4
407eae: mov eax, dword ptr [r8]
407eb1: cmp eax, 2
407eb4: je 0x409455
407eba: cmp eax, 3
407ebd: je 0x409444
407ec3: cmp eax, 1
407ec6: je 0x4094d0
407ecc: mov rdi, r8
407ecf: call 0x426a00
407ed4: mov r8, qword ptr [r15 + 8]
407ed8: test r8, r8
407edb: je 0x407846
407ee1: mov eax, dword ptr [r8]
407ee4: cmp eax, 2
407ee7: je 0x4088c3
407eed: cmp eax, 3
407ef0: je 0x4088b2
407ef6: cmp eax, 1
407ef9: je 0x4088fa
407eff: mov rdi, r8
407f02: call 0x426a00
407f07: jmp 0x407846
407f0c: nop dword ptr [rax]
407f10: mov r8, qword ptr [r15 + 0x18]
407f14: test r8, r8
407f17: je 0x407f65
407f19: mov eax, dword ptr [r8]
407f1c: cmp eax, 2
407f1f: je 0x407f3b
407f21: cmp eax, 3
407f24: jne 0x409be7
407f2a: mov rdi, qword ptr [r8 + 0x18]
407f2e: mov qword ptr [rsp], r8
407f32: call 0x4073f0
407f37: mov r8, qword ptr [rsp]
407f3b: mov rdi, qword ptr [r8 + 0x10]
407f3f: mov qword ptr [rsp], r8
407f43: call 0x4073f0
407f48: mov r8, qword ptr [rsp]
407f4c: mov rdi, qword ptr [r8 + 8]
407f50: mov qword ptr [rsp], r8
407f54: call 0x4073f0
407f59: mov r8, qword ptr [rsp]
407f5d: mov rdi, r8
407f60: call 0x426a00
407f65: mov r8, qword ptr [r15 + 0x10]
407f69: test r8, r8
407f6c: je 0x407f94
407f6e: mov eax, dword ptr [r8]
407f71: cmp eax, 2
407f74: je 0x4096b9
407f7a: cmp eax, 3
407f7d: je 0x4096a8
407f83: cmp eax, 1
407f86: je 0x409734
407f8c: mov rdi, r8
407f8f: call 0x426a00
407f94: mov r8, qword ptr [r15 + 8]
407f98: test r8, r8
407f9b: je 0x4077a6
407fa1: mov eax, dword ptr [r8]
407fa4: cmp eax, 2
407fa7: je 0x4089d3
407fad: cmp eax, 3
407fb0: je 0x4089c2
407fb6: cmp eax, 1
407fb9: je 0x408a0a
407fbf: mov rdi, r8
407fc2: call 0x426a00
407fc7: jmp 0x4077a6
407fcc: nop dword ptr [rax]
407fd0: mov r8, qword ptr [r15 + 0x18]
407fd4: test r8, r8
407fd7: je 0x408025
407fd9: mov eax, dword ptr [r8]
407fdc: cmp eax, 2
407fdf: je 0x407ffb
407fe1: cmp eax, 3
407fe4: jne 0x409bf5
407fea: mov rdi, qword ptr [r8 + 0x18]
407fee: mov qword ptr [rsp], r8
407ff2: call 0x4073f0
407ff7: mov r8, qword ptr [rsp]
407ffb: mov rdi, qword ptr [r8 + 0x10]
407fff: mov qword ptr [rsp], r8
408003: call 0x4073f0
408008: mov r8, qword ptr [rsp]
40800c: mov rdi, qword ptr [r8 + 8]
408010: mov qword ptr [rsp], r8
408014: call 0x4073f0
408019: mov r8, qword ptr [rsp]
40801d: mov rdi, r8
408020: call 0x426a00
408025: mov r8, qword ptr [r15 + 0x10]
408029: test r8, r8
40802c: je 0x408054
40802e: mov eax, dword ptr [r8]
408031: cmp eax, 2
408034: je 0x4095ed
40803a: cmp eax, 3
40803d: je 0x4095dc
408043: cmp eax, 1
408046: je 0x409668
40804c: mov rdi, r8
40804f: call 0x426a00
408054: mov r8, qword ptr [r15 + 8]
408058: test r8, r8
40805b: je 0x407a71
408061: mov eax, dword ptr [r8]
408064: cmp eax, 2
408067: je 0x408ae3
40806d: cmp eax, 3
408070: je 0x408ad2
408076: cmp eax, 1
408079: je 0x408b1a
40807f: mov rdi, r8
408082: call 0x426a00
408087: jmp 0x407a71
40808c: nop dword ptr [rax]
408090: mov r9, qword ptr [r8 + 0x18]
408094: test r9, r9
408097: je 0x40810b
408099: mov eax, dword ptr [r9]
40809c: cmp eax, 2
40809f: je 0x4080c5
4080a1: cmp eax, 3
4080a4: jne 0x409d97
4080aa: mov rdi, qword ptr [r9 + 0x18]
4080ae: mov qword ptr [rsp + 8], r8
4080b3: mov qword ptr [rsp], r9
4080b7: call 0x4073f0
4080bc: mov r8, qword ptr [rsp + 8]
4080c1: mov r9, qword ptr [rsp]
4080c5: mov rdi, qword ptr [r9 + 0x10]
4080c9: mov qword ptr [rsp + 8], r8
4080ce: mov qword ptr [rsp], r9
4080d2: call 0x4073f0
4080d7: mov r8, qword ptr [rsp + 8]
4080dc: mov r9, qword ptr [rsp]
4080e0: mov rdi, qword ptr [r9 + 8]
4080e4: mov qword ptr [rsp + 8], r8
4080e9: mov qword ptr [rsp], r9
4080ed: call 0x4073f0
4080f2: mov r8, qword ptr [rsp + 8]
4080f7: mov r9, qword ptr [rsp]
4080fb: mov rdi, r9
4080fe: mov qword ptr [rsp], r8
408102: call 0x426a00
408107: mov r8, qword ptr [rsp]
40810b: mov r9, qword ptr [r8 + 0x10]
40810f: test r9, r9
408112: je 0x408142
408114: mov eax, dword ptr [r9]
408117: cmp eax, 2
40811a: je 0x409b13
408120: cmp eax, 3
408123: je 0x409af8
408129: cmp eax, 1
40812c: je 0x409b2e
408132: mov rdi, r9
408135: mov qword ptr [rsp], r8
408139: call 0x426a00
40813e: mov r8, qword ptr [rsp]
408142: mov r9, qword ptr [r8 + 8]
408146: test r9, r9
408149: je 0x4078e6
40814f: mov eax, dword ptr [r9]
408152: cmp eax, 2
408155: je 0x408c53
40815b: cmp eax, 3
40815e: je 0x408c38
408164: cmp eax, 1
408167: je 0x408c6e
40816d: mov rdi, r9
408170: mov qword ptr [rsp], r8
408174: call 0x426a00
408179: mov r8, qword ptr [rsp]
40817d: jmp 0x4078e6
408182: nop word ptr [rax + rax]
408188: mov r9, qword ptr [r8 + 0x18]
40818c: test r9, r9
40818f: je 0x408203
408191: mov eax, dword ptr [r9]
408194: cmp eax, 2
408197: je 0x4081bd
408199: cmp eax, 3
40819c: jne 0x40a291
4081a2: mov rdi, qword ptr [r9 + 0x18]
4081a6: mov qword ptr [rsp + 8], r8
4081ab: mov qword ptr [rsp], r9
4081af: call 0x4073f0
4081b4: mov r8, qword ptr [rsp + 8]
4081b9: mov r9, qword ptr [rsp]
4081bd: mov rdi, qword ptr [r9 + 0x10]
4081c1: mov qword ptr [rsp + 8], r8
4081c6: mov qword ptr [rsp], r9
4081ca: call 0x4073f0
4081cf: mov r8, qword ptr [rsp + 8]
4081d4: mov r9, qword ptr [rsp]
4081d8: mov rdi, qword ptr [r9 + 8]
4081dc: mov qword ptr [rsp + 8], r8
4081e1: mov qword ptr [rsp], r9
4081e5: call 0x4073f0
4081ea: mov r8, qword ptr [rsp + 8]
4081ef: mov r9, qword ptr [rsp]
4081f3: mov rdi, r9
4081f6: mov qword ptr [rsp], r8
4081fa: call 0x426a00
4081ff: mov r8, qword ptr [rsp]
408203: mov r9, qword ptr [r8 + 0x10]
408207: test r9, r9
40820a: je 0x40823a
40820c: mov eax, dword ptr [r9]
40820f: cmp eax, 2
408212: je 0x4099bb
408218: cmp eax, 3
40821b: je 0x4099a0
408221: cmp eax, 1
408224: je 0x4099d6
40822a: mov rdi, r9
40822d: mov qword ptr [rsp], r8
408231: call 0x426a00
408236: mov r8, qword ptr [rsp]
40823a: mov r9, qword ptr [r8 + 8]
40823e: test r9, r9
408241: je 0x407c49
408247: mov eax, dword ptr [r9]
40824a: cmp eax, 2
40824d: je 0x408d55
408253: cmp eax, 3
408256: je 0x408d3a
40825c: cmp eax, 1
40825f: je 0x408d70
408265: mov rdi, r9
408268: mov qword ptr [rsp], r8
40826c: call 0x426a00
408271: mov r8, qword ptr [rsp]
408275: jmp 0x407c49
40827a: nop word ptr [rax + rax]
408280: mov r9, qword ptr [r8 + 0x18]
408284: test r9, r9
408287: je 0x4082fb
408289: mov eax, dword ptr [r9]
40828c: cmp eax, 2
40828f: je 0x4082b5
408291: cmp eax, 3
408294: jne 0x40a283
40829a: mov rdi, qword ptr [r9 + 0x18]
40829e: mov qword ptr [rsp + 8], r8
4082a3: mov qword ptr [rsp], r9
4082a7: call 0x4073f0
4082ac: mov r8, qword ptr [rsp + 8]
4082b1: mov r9, qword ptr [rsp]
4082b5: mov rdi, qword ptr [r9 + 0x10]
4082b9: mov qword ptr [rsp + 8], r8
4082be: mov qword ptr [rsp], r9
4082c2: call 0x4073f0
4082c7: mov r8, qword ptr [rsp + 8]
4082cc: mov r9, qword ptr [rsp]
4082d0: mov rdi, qword ptr [r9 + 8]
4082d4: mov qword ptr [rsp + 8], r8
4082d9: mov qword ptr [rsp], r9
4082dd: call 0x4073f0
4082e2: mov r8, qword ptr [rsp + 8]
4082e7: mov r9, qword ptr [rsp]
4082eb: mov rdi, r9
4082ee: mov qword ptr [rsp], r8
4082f2: call 0x426a00
4082f7: mov r8, qword ptr [rsp]
4082fb: mov r9, qword ptr [r8 + 0x10]
4082ff: test r9, r9
408302: je 0x408332
408304: mov eax, dword ptr [r9]
408307: cmp eax, 2
40830a: je 0x40980d
408310: cmp eax, 3
408313: je 0x4097f2
408319: cmp eax, 1
40831c: je 0x409828
408322: mov rdi, r9
408325: mov qword ptr [rsp], r8
408329: call 0x426a00
40832e: mov r8, qword ptr [rsp]
408332: mov r9, qword ptr [r8 + 8]
408336: test r9, r9
408339: je 0x407b09
40833f: mov eax, dword ptr [r9]
408342: cmp eax, 2
408345: je 0x408cff
40834b: cmp eax, 3
40834e: je 0x408ce4
408354: cmp eax, 1
408357: je 0x408d1a
40835d: mov rdi, r9
408360: mov qword ptr [rsp], r8
408364: call 0x426a00
408369: mov r8, qword ptr [rsp]
40836d: jmp 0x407b09
408372: nop word ptr [rax + rax]
408378: mov r9, qword ptr [r8 + 0x18]
40837c: test r9, r9
40837f: je 0x4083f3
408381: mov eax, dword ptr [r9]
408384: cmp eax, 2
408387: je 0x4083ad
408389: cmp eax, 3
40838c: jne 0x409da5
408392: mov rdi, qword ptr [r9 + 0x18]
408396: mov qword ptr [rsp + 8], r8
40839b: mov qword ptr [rsp], r9
40839f: call 0x4073f0
4083a4: mov r8, qword ptr [rsp + 8]
4083a9: mov r9, qword ptr [rsp]
4083ad: mov rdi, qword ptr [r9 + 0x10]
4083b1: mov qword ptr [rsp + 8], r8
4083b6: mov qword ptr [rsp], r9
4083ba: call 0x4073f0
4083bf: mov r8, qword ptr [rsp + 8]
4083c4: mov r9, qword ptr [rsp]
4083c8: mov rdi, qword ptr [r9 + 8]
4083cc: mov qword ptr [rsp + 8], r8
4083d1: mov qword ptr [rsp], r9
4083d5: call 0x4073f0
4083da: mov r8, qword ptr [rsp + 8]
4083df: mov r9, qword ptr [rsp]
4083e3: mov rdi, r9
4083e6: mov qword ptr [rsp], r8
4083ea: call 0x426a00
4083ef: mov r8, qword ptr [rsp]
4083f3: mov r9, qword ptr [r8 + 0x10]
4083f7: test r9, r9
4083fa: je 0x40842a
4083fc: mov eax, dword ptr [r9]
4083ff: cmp eax, 2
408402: je 0x409863
408408: cmp eax, 3
40840b: je 0x409848
408411: cmp eax, 1
408414: je 0x40987e
40841a: mov rdi, r9
40841d: mov qword ptr [rsp], r8
408421: call 0x426a00
408426: mov r8, qword ptr [rsp]
40842a: mov r9, qword ptr [r8 + 8]
40842e: test r9, r9
408431: je 0x407ba9
408437: mov eax, dword ptr [r9]
40843a: cmp eax, 2
40843d: je 0x408bfd
408443: cmp eax, 3
408446: je 0x408be2
40844c: cmp eax, 1
40844f: je 0x408c18
408455: mov rdi, r9
408458: mov qword ptr [rsp], r8
40845c: call 0x426a00
408461: mov r8, qword ptr [rsp]
408465: jmp 0x407ba9
40846a: nop word ptr [rax + rax]
408470: mov rdi, qword ptr [r9 + 0x18]
408474: mov qword ptr [rsp + 8], r8
408479: mov qword ptr [rsp], r9
40847d: call 0x4073f0
408482: mov r8, qword ptr [rsp + 8]
408487: mov r9, qword ptr [rsp]
40848b: mov rdi, qword ptr [r9 + 0x10]
40848f: mov qword ptr [rsp + 8], r8
408494: mov qword ptr [rsp], r9
408498: call 0x4073f0
40849d: mov r8, qword ptr [rsp + 8]
4084a2: mov r9, qword ptr [rsp]
4084a6: mov rdi, qword ptr [r9 + 8]
4084aa: mov qword ptr [rsp + 8], r8
4084af: mov qword ptr [rsp], r9
4084b3: call 0x4073f0
4084b8: mov r8, qword ptr [rsp + 8]
4084bd: mov r9, qword ptr [rsp]
4084c1: jmp 0x407cf9
4084c6: mov r15, qword ptr [r14 + 0x18]
4084ca: test r15, r15
4084cd: je 0x408503
4084cf: mov eax, dword ptr [r15]
4084d2: cmp eax, 2
4084d5: je 0x4084e9
4084d7: cmp eax, 3
4084da: jne 0x40a4f5
4084e0: mov rdi, qword ptr [r15 + 0x18]
4084e4: call 0x4073f0
4084e9: mov rdi, qword ptr [r15 + 0x10]
4084ed: call 0x4073f0
4084f2: mov rdi, qword ptr [r15 + 8]
4084f6: call 0x4073f0
4084fb: mov rdi, r15
4084fe: call 0x426a00
408503: mov r15, qword ptr [r14 + 0x10]
408507: test r15, r15
40850a: je 0x408532
40850c: mov eax, dword ptr [r15]
40850f: cmp eax, 2
408512: je 0x409b57
408518: cmp eax, 3
40851b: je 0x409b4e
408521: cmp eax, 1
408524: je 0x409b86
40852a: mov rdi, r15
40852d: call 0x426a00
408532: mov r15, qword ptr [r14 + 8]
408536: test r15, r15
408539: je 0x407988
40853f: mov eax, dword ptr [r15]
408542: cmp eax, 2
408545: je 0x408f5b
40854b: cmp eax, 3
40854e: je 0x408f52
408554: cmp eax, 1
408557: je 0x408fb0
40855d: mov rdi, r15
408560: call 0x426a00
408565: jmp 0x407988
40856a: mov r15, qword ptr [r14 + 0x18]
40856e: test r15, r15
408571: je 0x4085a7
408573: mov eax, dword ptr [r15]
408576: cmp eax, 2
408579: je 0x40858d
40857b: cmp eax, 3
40857e: jne 0x40a4e7
408584: mov rdi, qword ptr [r15 + 0x18]
408588: call 0x4073f0
40858d: mov rdi, qword ptr [r15 + 0x10]
408591: call 0x4073f0
408596: mov rdi, qword ptr [r15 + 8]
40859a: call 0x4073f0
40859f: mov rdi, r15
4085a2: call 0x426a00
4085a7: mov r15, qword ptr [r14 + 0x10]
4085ab: test r15, r15
4085ae: je 0x4085d6
4085b0: mov eax, dword ptr [r15]
4085b3: cmp eax, 2
4085b6: je 0x409d07
4085bc: cmp eax, 3
4085bf: je 0x409cfe
4085c5: cmp eax, 1
4085c8: je 0x409d36
4085ce: mov rdi, r15
4085d1: call 0x426a00
4085d6: mov r15, qword ptr [r14 + 8]
4085da: test r15, r15
4085dd: je 0x407640
4085e3: mov eax, dword ptr [r15]
4085e6: cmp eax, 2
4085e9: je 0x408ff1
4085ef: cmp eax, 3
4085f2: je 0x408fe8
4085f8: cmp eax, 1
4085fb: je 0x409046
408601: mov rdi, r15
408604: call 0x426a00
408609: jmp 0x407640
40860e: mov r8, qword ptr [r15 + 0x18]
408612: test r8, r8
408615: je 0x408663
408617: mov eax, dword ptr [r8]
40861a: cmp eax, 2
40861d: je 0x408639
40861f: cmp eax, 3
408622: jne 0x40a6a7
408628: mov rdi, qword ptr [r8 + 0x18]
40862c: mov qword ptr [rsp], r8
408630: call 0x4073f0
408635: mov r8, qword ptr [rsp]
408639: mov rdi, qword ptr [r8 + 0x10]
40863d: mov qword ptr [rsp], r8
408641: call 0x4073f0
408646: mov r8, qword ptr [rsp]
40864a: mov rdi, qword ptr [r8 + 8]
40864e: mov qword ptr [rsp], r8
408652: call 0x4073f0
408657: mov r8, qword ptr [rsp]
40865b: mov rdi, r8
40865e: call 0x426a00
408663: mov r8, qword ptr [r15 + 0x10]
408667: test r8, r8
40866a: je 0x408692
40866c: mov eax, dword ptr [r8]
40866f: cmp eax, 2
408672: je 0x40a232
408678: cmp eax, 3
40867b: je 0x40a221
408681: cmp eax, 1
408684: je 0x40a243
40868a: mov rdi, r8
40868d: call 0x426a00
408692: mov r8, qword ptr [r15 + 8]
408696: test r8, r8
408699: je 0x407d99
40869f: mov eax, dword ptr [r8]
4086a2: cmp eax, 2
4086a5: je 0x4091f1
4086ab: cmp eax, 3
4086ae: je 0x4091e0
4086b4: cmp eax, 1
4086b7: je 0x40926c
4086bd: mov rdi, r8
4086c0: call 0x426a00
4086c5: jmp 0x407d99
4086ca: mov r8, qword ptr [r15 + 0x18]
4086ce: test r8, r8
4086d1: je 0x40871f
4086d3: mov eax, dword ptr [r8]
4086d6: cmp eax, 2
4086d9: je 0x4086f5
4086db: cmp eax, 3
4086de: jne 0x40a80d
4086e4: mov rdi, qword ptr [r8 + 0x18]
4086e8: mov qword ptr [rsp], r8
4086ec: call 0x4073f0
4086f1: mov r8, qword ptr [rsp]
4086f5: mov rdi, qword ptr [r8 + 0x10]
4086f9: mov qword ptr [rsp], r8
4086fd: call 0x4073f0
408702: mov r8, qword ptr [rsp]
408706: mov rdi, qword ptr [r8 + 8]
40870a: mov qword ptr [rsp], r8
40870e: call 0x4073f0
408713: mov r8, qword ptr [rsp]
408717: mov rdi, r8
40871a: call 0x426a00
40871f: mov r8, qword ptr [r15 + 0x10]
408723: test r8, r8
408726: je 0x40874e
408728: mov eax, dword ptr [r8]
40872b: cmp eax, 2
40872e: je 0x40a1d0
408734: cmp eax, 3
408737: je 0x40a1bf
40873d: cmp eax, 1
408740: je 0x40a1e1
408746: mov rdi, r8
408749: call 0x426a00
40874e: mov r8, qword ptr [r15 + 8]
408752: test r8, r8
408755: je 0x407e39
40875b: mov eax, dword ptr [r8]
40875e: cmp eax, 2
408761: je 0x409125
408767: cmp eax, 3
40876a: je 0x409114
408770: cmp eax, 1
408773: je 0x4091a0
408779: mov rdi, r8
40877c: call 0x426a00
408781: jmp 0x407e39
408786: mov r8, qword ptr [r15 + 0x18]
40878a: test r8, r8
40878d: je 0x4087db
40878f: mov eax, dword ptr [r8]
408792: cmp eax, 2
408795: je 0x4087b1
408797: cmp eax, 3
40879a: jne 0x40a865
4087a0: mov rdi, qword ptr [r8 + 0x18]
4087a4: mov qword ptr [rsp], r8
4087a8: call 0x4073f0
4087ad: mov r8, qword ptr [rsp]
4087b1: mov rdi, qword ptr [r8 + 0x10]
4087b5: mov qword ptr [rsp], r8
4087b9: call 0x4073f0
4087be: mov r8, qword ptr [rsp]
4087c2: mov rdi, qword ptr [r8 + 8]
4087c6: mov qword ptr [rsp], r8
4087ca: call 0x4073f0
4087cf: mov r8, qword ptr [rsp]
4087d3: mov rdi, r8
4087d6: call 0x426a00
4087db: mov r8, qword ptr [r15 + 0x10]
4087df: test r8, r8
4087e2: je 0x40880a
4087e4: mov eax, dword ptr [r8]
4087e7: cmp eax, 2
4087ea: je 0x409f14
4087f0: cmp eax, 3
4087f3: je 0x409f03
4087f9: cmp eax, 1
4087fc: je 0x409f25
408802: mov rdi, r8
408805: call 0x426a00
40880a: mov r8, qword ptr [r15 + 8]
40880e: test r8, r8
408811: je 0x4076df
408817: mov eax, dword ptr [r8]
40881a: cmp eax, 2
40881d: je 0x4092bd
408823: cmp eax, 3
408826: je 0x4092ac
40882c: cmp eax, 1
40882f: je 0x409338
408835: mov rdi, r8
408838: call 0x426a00
40883d: jmp 0x4076df
408842: mov rdi, qword ptr [r15 + 0x18]
408846: call 0x4073f0
40884b: mov r8, qword ptr [r15 + 0x10]
40884f: test r8, r8
408852: je 0x40887a
408854: mov eax, dword ptr [r8]
408857: cmp eax, 2
40885a: je 0x40a47a
408860: cmp eax, 3
408863: je 0x40a469
408869: cmp eax, 1
40886c: je 0x40a48b
408872: mov rdi, r8
408875: call 0x426a00
40887a: mov r8, qword ptr [r15 + 8]
40887e: test r8, r8
408881: je 0x407a3e
408887: mov eax, dword ptr [r8]
40888a: cmp eax, 2
40888d: je 0x409521
408893: cmp eax, 3
408896: je 0x409510
40889c: cmp eax, 1
40889f: je 0x40959c
4088a5: mov rdi, r8
4088a8: call 0x426a00
4088ad: jmp 0x407a3e
4088b2: mov rdi, qword ptr [r8 + 0x18]
4088b6: mov qword ptr [rsp], r8
4088ba: call 0x4073f0
4088bf: mov r8, qword ptr [rsp]
4088c3: mov r9, qword ptr [r8 + 0x10]
4088c7: test r9, r9
4088ca: je 0x4088fa
4088cc: mov eax, dword ptr [r9]
4088cf: cmp eax, 2
4088d2: je 0x40a93a
4088d8: cmp eax, 3
4088db: je 0x40a91f
4088e1: cmp eax, 1
4088e4: je 0x40a955
4088ea: mov rdi, r9
4088ed: mov qword ptr [rsp], r8
4088f1: call 0x426a00
4088f6: mov r8, qword ptr [rsp]
4088fa: mov r9, qword ptr [r8 + 8]
4088fe: test r9, r9
408901: je 0x407eff
408907: mov eax, dword ptr [r9]
40890a: cmp eax, 2
40890d: je 0x4098b9
408913: cmp eax, 3
408916: je 0x40989e
40891c: cmp eax, 1
40891f: je 0x4098d4
408925: mov rdi, r9
408928: mov qword ptr [rsp], r8
40892c: call 0x426a00
408931: mov r8, qword ptr [rsp]
408935: jmp 0x407eff
40893a: mov rdi, qword ptr [r8 + 0x18]
40893e: mov qword ptr [rsp], r8
408942: call 0x4073f0
408947: mov r8, qword ptr [rsp]
40894b: mov r9, qword ptr [r8 + 0x10]
40894f: test r9, r9
408952: je 0x408982
408954: mov eax, dword ptr [r9]
408957: cmp eax, 2
40895a: je 0x40a8e4
408960: cmp eax, 3
408963: je 0x40a8c9
408969: cmp eax, 1
40896c: je 0x40a8ff
408972: mov rdi, r9
408975: mov qword ptr [rsp], r8
408979: call 0x426a00
40897e: mov r8, qword ptr [rsp]
408982: mov r9, qword ptr [r8 + 8]
408986: test r9, r9
408989: je 0x407b76
40898f: mov eax, dword ptr [r9]
408992: cmp eax, 2
408995: je 0x40990f
40899b: cmp eax, 3
40899e: je 0x4098f4
4089a4: cmp eax, 1
4089a7: je 0x40992a
4089ad: mov rdi, r9
4089b0: mov qword ptr [rsp], r8
4089b4: call 0x426a00
4089b9: mov r8, qword ptr [rsp]
4089bd: jmp 0x407b76
4089c2: mov rdi, qword ptr [r8 + 0x18]
4089c6: mov qword ptr [rsp], r8
4089ca: call 0x4073f0
4089cf: mov r8, qword ptr [rsp]
4089d3: mov r9, qword ptr [r8 + 0x10]
4089d7: test r9, r9
4089da: je 0x408a0a
4089dc: mov eax, dword ptr [r9]
4089df: cmp eax, 2
4089e2: je 0x40a6d0
4089e8: cmp eax, 3
4089eb: je 0x40a6b5
4089f1: cmp eax, 1
4089f4: je 0x40a6eb
4089fa: mov rdi, r9
4089fd: mov qword ptr [rsp], r8
408a01: call 0x426a00
408a06: mov r8, qword ptr [rsp]
408a0a: mov r9, qword ptr [r8 + 8]
408a0e: test r9, r9
408a11: je 0x407fbf
408a17: mov eax, dword ptr [r9]
408a1a: cmp eax, 2
408a1d: je 0x409965
408a23: cmp eax, 3
408a26: je 0x40994a
408a2c: cmp eax, 1
408a2f: je 0x409980
408a35: mov rdi, r9
408a38: mov qword ptr [rsp], r8
408a3c: call 0x426a00
408a41: mov r8, qword ptr [rsp]
408a45: jmp 0x407fbf
408a4a: mov rdi, qword ptr [r8 + 0x18]
408a4e: mov qword ptr [rsp], r8
408a52: call 0x4073f0
408a57: mov r8, qword ptr [rsp]
408a5b: mov r9, qword ptr [r8 + 0x10]
408a5f: test r9, r9
408a62: je 0x408a92
408a64: mov eax, dword ptr [r9]
408a67: cmp eax, 2
408a6a: je 0x40a77c
408a70: cmp eax, 3
408a73: je 0x40a761
408a79: cmp eax, 1
408a7c: je 0x40a797
408a82: mov rdi, r9
408a85: mov qword ptr [rsp], r8
408a89: call 0x426a00
408a8e: mov r8, qword ptr [rsp]
408a92: mov r9, qword ptr [r8 + 8]
408a96: test r9, r9
408a99: je 0x407ad6
408a9f: mov eax, dword ptr [r9]
408aa2: cmp eax, 2
408aa5: je 0x409a11
408aab: cmp eax, 3
408aae: je 0x4099f6
408ab4: cmp eax, 1
408ab7: je 0x409a2c
408abd: mov rdi, r9
408ac0: mov qword ptr [rsp], r8
408ac4: call 0x426a00
408ac9: mov r8, qword ptr [rsp]
408acd: jmp 0x407ad6
408ad2: mov rdi, qword ptr [r8 + 0x18]
408ad6: mov qword ptr [rsp], r8
408ada: call 0x4073f0
408adf: mov r8, qword ptr [rsp]
408ae3: mov r9, qword ptr [r8 + 0x10]
408ae7: test r9, r9
408aea: je 0x408b1a
408aec: mov eax, dword ptr [r9]
408aef: cmp eax, 2
408af2: je 0x40a66c
408af8: cmp eax, 3
408afb: je 0x40a651
408b01: cmp eax, 1
408b04: je 0x40a687
408b0a: mov rdi, r9
408b0d: mov qword ptr [rsp], r8
408b11: call 0x426a00
408b16: mov r8, qword ptr [rsp]
408b1a: mov r9, qword ptr [r8 + 8]
408b1e: test r9, r9
408b21: je 0x40807f
408b27: mov eax, dword ptr [r9]
408b2a: cmp eax, 2
408b2d: je 0x409a67
408b33: cmp eax, 3
408b36: je 0x409a4c
408b3c: cmp eax, 1
408b3f: je 0x409a82
408b45: mov rdi, r9
408b48: mov qword ptr [rsp], r8
408b4c: call 0x426a00
408b51: mov r8, qword ptr [rsp]
408b55: jmp 0x40807f
408b5a: mov rdi, qword ptr [r8 + 0x18]
408b5e: mov qword ptr [rsp], r8
408b62: call 0x4073f0
408b67: mov r8, qword ptr [rsp]
408b6b: mov r9, qword ptr [r8 + 0x10]
408b6f: test r9, r9
408b72: je 0x408ba2
408b74: mov eax, dword ptr [r9]
408b77: cmp eax, 2
408b7a: je 0x40a7d2
408b80: cmp eax, 3
408b83: je 0x40a7b7
408b89: cmp eax, 1
408b8c: je 0x40a7ed
408b92: mov rdi, r9
408b95: mov qword ptr [rsp], r8
408b99: call 0x426a00
408b9e: mov r8, qword ptr [rsp]
408ba2: mov r9, qword ptr [r8 + 8]
408ba6: test r9, r9
408ba9: je 0x407c16
408baf: mov eax, dword ptr [r9]
408bb2: cmp eax, 2
408bb5: je 0x409abd
408bbb: cmp eax, 3
408bbe: je 0x409aa2
408bc4: cmp eax, 1
408bc7: je 0x409ad8
408bcd: mov rdi, r9
408bd0: mov qword ptr [rsp], r8
408bd4: call 0x426a00
408bd9: mov r8, qword ptr [rsp]
408bdd: jmp 0x407c16
408be2: mov rdi, qword ptr [r9 + 0x18]
408be6: mov qword ptr [rsp + 8], r8
408beb: mov qword ptr [rsp], r9
408bef: call 0x4073f0
408bf4: mov r8, qword ptr [rsp + 8]
408bf9: mov r9, qword ptr [rsp]
408bfd: mov rdi, qword ptr [r9 + 0x10]
408c01: mov qword ptr [rsp + 8], r8
408c06: mov qword ptr [rsp], r9
408c0a: call 0x4073f0
408c0f: mov r8, qword ptr [rsp + 8]
408c14: mov r9, qword ptr [rsp]
408c18: mov rdi, qword ptr [r9 + 8]
408c1c: mov qword ptr [rsp + 8], r8
408c21: mov qword ptr [rsp], r9
408c25: call 0x4073f0
408c2a: mov r8, qword ptr [rsp + 8]
408c2f: mov r9, qword ptr [rsp]
408c33: jmp 0x408455
408c38: mov rdi, qword ptr [r9 + 0x18]
408c3c: mov qword ptr [rsp + 8], r8
408c41: mov qword ptr [rsp], r9
408c45: call 0x4073f0
408c4a: mov r8, qword ptr [rsp + 8]
408c4f: mov r9, qword ptr [rsp]
408c53: mov rdi, qword ptr [r9 + 0x10]
408c57: mov qword ptr [rsp + 8], r8
408c5c: mov qword ptr [rsp], r9
408c60: call 0x4073f0
408c65: mov r8, qword ptr [rsp + 8]
408c6a: mov r9, qword ptr [rsp]
408c6e: mov rdi, qword ptr [r9 + 8]
408c72: mov qword ptr [rsp + 8], r8
408c77: mov qword ptr [rsp], r9
408c7b: call 0x4073f0
408c80: mov r8, qword ptr [rsp + 8]
408c85: mov r9, qword ptr [rsp]
408c89: jmp 0x40816d
408c8e: mov rdi, qword ptr [r9 + 0x18]
408c92: mov qword ptr [rsp + 8], r8
408c97: mov qword ptr [rsp], r9
408c9b: call 0x4073f0
408ca0: mov r8, qword ptr [rsp + 8]
408ca5: mov r9, qword ptr [rsp]
408ca9: mov rdi, qword ptr [r9 + 0x10]
408cad: mov qword ptr [rsp + 8], r8
408cb2: mov qword ptr [rsp], r9
408cb6: call 0x4073f0
408cbb: mov r8, qword ptr [rsp + 8]
408cc0: mov r9, qword ptr [rsp]
408cc4: mov rdi, qword ptr [r9 + 8]
408cc8: mov qword ptr [rsp + 8], r8
408ccd: mov qword ptr [rsp], r9
408cd1: call 0x4073f0
408cd6: mov r8, qword ptr [rsp + 8]
408cdb: mov r9, qword ptr [rsp]
408cdf: jmp 0x407cbe
408ce4: mov rdi, qword ptr [r9 + 0x18]
408ce8: mov qword ptr [rsp + 8], r8
408ced: mov qword ptr [rsp], r9
408cf1: call 0x4073f0
408cf6: mov r8, qword ptr [rsp + 8]
408cfb: mov r9, qword ptr [rsp]
408cff: mov rdi, qword ptr [r9 + 0x10]
408d03: mov qword ptr [rsp + 8], r8
408d08: mov qword ptr [rsp], r9
408d0c: call 0x4073f0
408d11: mov r8, qword ptr [rsp + 8]
408d16: mov r9, qword ptr [rsp]
408d1a: mov rdi, qword ptr [r9 + 8]
408d1e: mov qword ptr [rsp + 8], r8
408d23: mov qword ptr [rsp], r9
408d27: call 0x4073f0
408d2c: mov r8, qword ptr [rsp + 8]
408d31: mov r9, qword ptr [rsp]
408d35: jmp 0x40835d
408d3a: mov rdi, qword ptr [r9 + 0x18]
408d3e: mov qword ptr [rsp + 8], r8
408d43: mov qword ptr [rsp], r9
408d47: call 0x4073f0
408d4c: mov r8, qword ptr [rsp + 8]
408d51: mov r9, qword ptr [rsp]
408d55: mov rdi, qword ptr [r9 + 0x10]
408d59: mov qword ptr [rsp + 8], r8
408d5e: mov qword ptr [rsp], r9
408d62: call 0x4073f0
408d67: mov r8, qword ptr [rsp + 8]
408d6c: mov r9, qword ptr [rsp]
408d70: mov rdi, qword ptr [r9 + 8]
408d74: mov qword ptr [rsp + 8], r8
408d79: mov qword ptr [rsp], r9
408d7d: call 0x4073f0
408d82: mov r8, qword ptr [rsp + 8]
408d87: mov r9, qword ptr [rsp]
408d8b: jmp 0x408265
408d90: mov rdi, qword ptr [r15 + 0x18]
408d94: call 0x4073f0
408d99: mov r8, qword ptr [r15 + 0x10]
408d9d: test r8, r8
408da0: je 0x408dee
408da2: mov eax, dword ptr [r8]
408da5: cmp eax, 2
408da8: je 0x408dc4
408daa: cmp eax, 3
408dad: jne 0x409c03
408db3: mov rdi, qword ptr [r8 + 0x18]
408db7: mov qword ptr [rsp], r8
408dbb: call 0x4073f0
408dc0: mov r8, qword ptr [rsp]
408dc4: mov rdi, qword ptr [r8 + 0x10]
408dc8: mov qword ptr [rsp], r8
408dcc: call 0x4073f0
408dd1: mov r8, qword ptr [rsp]
408dd5: mov rdi, qword ptr [r8 + 8]
408dd9: mov qword ptr [rsp], r8
408ddd: call 0x4073f0
408de2: mov r8, qword ptr [rsp]
408de6: mov rdi, r8
408de9: call 0x426a00
408dee: mov r8, qword ptr [r15 + 8]
408df2: test r8, r8
408df5: je 0x407817
408dfb: mov eax, dword ptr [r8]
408dfe: cmp eax, 2
408e01: je 0x409fd8
408e07: cmp eax, 3
408e0a: je 0x409fc7
408e10: cmp eax, 1
408e13: je 0x409fe9
408e19: mov rdi, r8
408e1c: call 0x426a00
408e21: jmp 0x407817
408e26: mov rdi, qword ptr [r15 + 0x18]
408e2a: call 0x4073f0
408e2f: mov r8, qword ptr [r15 + 0x10]
408e33: test r8, r8
408e36: je 0x408e84
408e38: mov eax, dword ptr [r8]
408e3b: cmp eax, 2
408e3e: je 0x408e5a
408e40: cmp eax, 3
408e43: jne 0x409c1f
408e49: mov rdi, qword ptr [r8 + 0x18]
408e4d: mov qword ptr [rsp], r8
408e51: call 0x4073f0
408e56: mov r8, qword ptr [rsp]
408e5a: mov rdi, qword ptr [r8 + 0x10]
408e5e: mov qword ptr [rsp], r8
408e62: call 0x4073f0
408e67: mov r8, qword ptr [rsp]
408e6b: mov rdi, qword ptr [r8 + 8]
408e6f: mov qword ptr [rsp], r8
408e73: call 0x4073f0
408e78: mov r8, qword ptr [rsp]
408e7c: mov rdi, r8
408e7f: call 0x426a00
408e84: mov r8, qword ptr [r15 + 8]
408e88: test r8, r8
408e8b: je 0x407d66
408e91: mov eax, dword ptr [r8]
408e94: cmp eax, 2
408e97: je 0x40a09c
408e9d: cmp eax, 3
408ea0: je 0x40a08b
408ea6: cmp eax, 1
408ea9: je 0x40a0ad
408eaf: mov rdi, r8
408eb2: call 0x426a00
408eb7: jmp 0x407d66
408ebc: mov rdi, qword ptr [r15 + 0x18]
408ec0: call 0x4073f0
408ec5: mov r8, qword ptr [r15 + 0x10]
408ec9: test r8, r8
408ecc: je 0x408f1a
408ece: mov eax, dword ptr [r8]
408ed1: cmp eax, 2
408ed4: je 0x408ef0
408ed6: cmp eax, 3
408ed9: jne 0x409cc6
408edf: mov rdi, qword ptr [r8 + 0x18]
408ee3: mov qword ptr [rsp], r8
408ee7: call 0x4073f0
408eec: mov r8, qword ptr [rsp]
408ef0: mov rdi, qword ptr [r8 + 0x10]
408ef4: mov qword ptr [rsp], r8
408ef8: call 0x4073f0
408efd: mov r8, qword ptr [rsp]
408f01: mov rdi, qword ptr [r8 + 8]
408f05: mov qword ptr [rsp], r8
408f09: call 0x4073f0
408f0e: mov r8, qword ptr [rsp]
408f12: mov rdi, r8
408f15: call 0x426a00
408f1a: mov r8, qword ptr [r15 + 8]
408f1e: test r8, r8
408f21: je 0x407777
408f27: mov eax, dword ptr [r8]
408f2a: cmp eax, 2
408f2d: je 0x409e26
408f33: cmp eax, 3
408f36: je 0x409e15
408f3c: cmp eax, 1
408f3f: je 0x409e37
408f45: mov rdi, r8
408f48: call 0x426a00
408f4d: jmp 0x407777
408f52: mov rdi, qword ptr [r15 + 0x18]
408f56: call 0x4073f0
408f5b: mov r8, qword ptr [r15 + 0x10]
408f5f: test r8, r8
408f62: je 0x408fb0
408f64: mov eax, dword ptr [r8]
408f67: cmp eax, 2
408f6a: je 0x408f86
408f6c: cmp eax, 3
408f6f: jne 0x409cd4
408f75: mov rdi, qword ptr [r8 + 0x18]
408f79: mov qword ptr [rsp], r8
408f7d: call 0x4073f0
408f82: mov r8, qword ptr [rsp]
408f86: mov rdi, qword ptr [r8 + 0x10]
408f8a: mov qword ptr [rsp], r8
408f8e: call 0x4073f0
408f93: mov r8, qword ptr [rsp]
408f97: mov rdi, qword ptr [r8 + 8]
408f9b: mov qword ptr [rsp], r8
408f9f: call 0x4073f0
408fa4: mov r8, qword ptr [rsp]
408fa8: mov rdi, r8
408fab: call 0x426a00
408fb0: mov r8, qword ptr [r15 + 8]
408fb4: test r8, r8
408fb7: je 0x40855d
408fbd: mov eax, dword ptr [r8]
408fc0: cmp eax, 2
408fc3: je 0x409e96
408fc9: cmp eax, 3
408fcc: je 0x409e85
408fd2: cmp eax, 1
408fd5: je 0x409ea7
408fdb: mov rdi, r8
408fde: call 0x426a00
408fe3: jmp 0x40855d
408fe8: mov rdi, qword ptr [r15 + 0x18]
408fec: call 0x4073f0
408ff1: mov r8, qword ptr [r15 + 0x10]
408ff5: test r8, r8
408ff8: je 0x409046
408ffa: mov eax, dword ptr [r8]
408ffd: cmp eax, 2
409000: je 0x40901c
409002: cmp eax, 3
409005: jne 0x409cf0
40900b: mov rdi, qword ptr [r8 + 0x18]
40900f: mov qword ptr [rsp], r8
409013: call 0x4073f0
409018: mov r8, qword ptr [rsp]
40901c: mov rdi, qword ptr [r8 + 0x10]
409020: mov qword ptr [rsp], r8
409024: call 0x4073f0
409029: mov r8, qword ptr [rsp]
40902d: mov rdi, qword ptr [r8 + 8]
409031: mov qword ptr [rsp], r8
409035: call 0x4073f0
40903a: mov r8, qword ptr [rsp]
40903e: mov rdi, r8
409041: call 0x426a00
409046: mov r8, qword ptr [r15 + 8]
40904a: test r8, r8
40904d: je 0x408601
409053: mov eax, dword ptr [r8]
409056: cmp eax, 2
409059: je 0x40a16e
40905f: cmp eax, 3
409062: je 0x40a15d
409068: cmp eax, 1
40906b: je 0x40a17f
409071: mov rdi, r8
409074: call 0x426a00
409079: jmp 0x408601
40907e: mov rdi, qword ptr [r15 + 0x18]
409082: call 0x4073f0
409087: mov r8, qword ptr [r15 + 0x10]
40908b: test r8, r8
40908e: je 0x4090dc
409090: mov eax, dword ptr [r8]
409093: cmp eax, 2
409096: je 0x4090b2
409098: cmp eax, 3
40909b: jne 0x409c11
4090a1: mov rdi, qword ptr [r8 + 0x18]
4090a5: mov qword ptr [rsp], r8
4090a9: call 0x4073f0
4090ae: mov r8, qword ptr [rsp]
4090b2: mov rdi, qword ptr [r8 + 0x10]
4090b6: mov qword ptr [rsp], r8
4090ba: call 0x4073f0
4090bf: mov r8, qword ptr [rsp]
4090c3: mov rdi, qword ptr [r8 + 8]
4090c7: mov qword ptr [rsp], r8
4090cb: call 0x4073f0
4090d0: mov r8, qword ptr [rsp]
4090d4: mov rdi, r8
4090d7: call 0x426a00
4090dc: mov r8, qword ptr [r15 + 8]
4090e0: test r8, r8
4090e3: je 0x407e06
4090e9: mov eax, dword ptr [r8]
4090ec: cmp eax, 2
4090ef: je 0x409dc4
4090f5: cmp eax, 3
4090f8: je 0x409db3
4090fe: cmp eax, 1
409101: je 0x409dd5
409107: mov rdi, r8
40910a: call 0x426a00
40910f: jmp 0x407e06
409114: mov rdi, qword ptr [r8 + 0x18]
409118: mov qword ptr [rsp], r8
40911c: call 0x4073f0
409121: mov r8, qword ptr [rsp]
409125: mov r9, qword ptr [r8 + 0x10]
409129: test r9, r9
40912c: je 0x4091a0
40912e: mov eax, dword ptr [r9]
409131: cmp eax, 2
409134: je 0x40915a
409136: cmp eax, 3
409139: jne 0x409e77
40913f: mov rdi, qword ptr [r9 + 0x18]
409143: mov qword ptr [rsp + 8], r8
409148: mov qword ptr [rsp], r9
40914c: call 0x4073f0
409151: mov r8, qword ptr [rsp + 8]
409156: mov r9, qword ptr [rsp]
40915a: mov rdi, qword ptr [r9 + 0x10]
40915e: mov qword ptr [rsp + 8], r8
409163: mov qword ptr [rsp], r9
409167: call 0x4073f0
40916c: mov r8, qword ptr [rsp + 8]
409171: mov r9, qword ptr [rsp]
409175: mov rdi, qword ptr [r9 + 8]
409179: mov qword ptr [rsp + 8], r8
40917e: mov qword ptr [rsp], r9
409182: call 0x4073f0
409187: mov r8, qword ptr [rsp + 8]
40918c: mov r9, qword ptr [rsp]
409190: mov rdi, r9
409193: mov qword ptr [rsp], r8
409197: call 0x426a00
40919c: mov r8, qword ptr [rsp]
4091a0: mov r9, qword ptr [r8 + 8]
4091a4: test r9, r9
4091a7: je 0x408779
4091ad: mov eax, dword ptr [r9]
4091b0: cmp eax, 2
4091b3: je 0x40a3bc
4091b9: cmp eax, 3
4091bc: je 0x40a3a1
4091c2: cmp eax, 1
4091c5: je 0x40a3d7
4091cb: mov rdi, r9
4091ce: mov qword ptr [rsp], r8
4091d2: call 0x426a00
4091d7: mov r8, qword ptr [rsp]
4091db: jmp 0x408779
4091e0: mov rdi, qword ptr [r8 + 0x18]
4091e4: mov qword ptr [rsp], r8
4091e8: call 0x4073f0
4091ed: mov r8, qword ptr [rsp]
4091f1: mov r9, qword ptr [r8 + 0x10]
4091f5: test r9, r9
4091f8: je 0x40926c
4091fa: mov eax, dword ptr [r9]
4091fd: cmp eax, 2
409200: je 0x409226
409202: cmp eax, 3
409205: jne 0x409ef5
40920b: mov rdi, qword ptr [r9 + 0x18]
40920f: mov qword ptr [rsp + 8], r8
409214: mov qword ptr [rsp], r9
409218: call 0x4073f0
40921d: mov r8, qword ptr [rsp + 8]
409222: mov r9, qword ptr [rsp]
409226: mov rdi, qword ptr [r9 + 0x10]
40922a: mov qword ptr [rsp + 8], r8
40922f: mov qword ptr [rsp], r9
409233: call 0x4073f0
409238: mov r8, qword ptr [rsp + 8]
40923d: mov r9, qword ptr [rsp]
409241: mov rdi, qword ptr [r9 + 8]
409245: mov qword ptr [rsp + 8], r8
40924a: mov qword ptr [rsp], r9
40924e: call 0x4073f0
409253: mov r8, qword ptr [rsp + 8]
409258: mov r9, qword ptr [rsp]
40925c: mov rdi, r9
40925f: mov qword ptr [rsp], r8
409263: call 0x426a00
409268: mov r8, qword ptr [rsp]
40926c: mov r9, qword ptr [r8 + 8]
409270: test r9, r9
409273: je 0x4086bd
409279: mov eax, dword ptr [r9]
40927c: cmp eax, 2
40927f: je 0x40a366
409285: cmp eax, 3
409288: je 0x40a34b
40928e: cmp eax, 1
409291: je 0x40a381
409297: mov rdi, r9
40929a: mov qword ptr [rsp], r8
40929e: call 0x426a00
4092a3: mov r8, qword ptr [rsp]
4092a7: jmp 0x4086bd
4092ac: mov rdi, qword ptr [r8 + 0x18]
4092b0: mov qword ptr [rsp], r8
4092b4: call 0x4073f0
4092b9: mov r8, qword ptr [rsp]
4092bd: mov r9, qword ptr [r8 + 0x10]
4092c1: test r9, r9
4092c4: je 0x409338
4092c6: mov eax, dword ptr [r9]
4092c9: cmp eax, 2
4092cc: je 0x4092f2
4092ce: cmp eax, 3
4092d1: jne 0x409ee7
4092d7: mov rdi, qword ptr [r9 + 0x18]
4092db: mov qword ptr [rsp + 8], r8
4092e0: mov qword ptr [rsp], r9
4092e4: call 0x4073f0
4092e9: mov r8, qword ptr [rsp + 8]
4092ee: mov r9, qword ptr [rsp]
4092f2: mov rdi, qword ptr [r9 + 0x10]
4092f6: mov qword ptr [rsp + 8], r8
4092fb: mov qword ptr [rsp], r9
4092ff: call 0x4073f0
409304: mov r8, qword ptr [rsp + 8]
409309: mov r9, qword ptr [rsp]
40930d: mov rdi, qword ptr [r9 + 8]
409311: mov qword ptr [rsp + 8], r8
409316: mov qword ptr [rsp], r9
40931a: call 0x4073f0
40931f: mov r8, qword ptr [rsp + 8]
409324: mov r9, qword ptr [rsp]
409328: mov rdi, r9
40932b: mov qword ptr [rsp], r8
40932f: call 0x426a00
409334: mov r8, qword ptr [rsp]
409338: mov r9, qword ptr [r8 + 8]
40933c: test r9, r9
40933f: je 0x408835
409345: mov eax, dword ptr [r9]
409348: cmp eax, 2
40934b: je 0x40a310
409351: cmp eax, 3
409354: je 0x40a2f5
40935a: cmp eax, 1
40935d: je 0x40a32b
409363: mov rdi, r9
409366: mov qword ptr [rsp], r8
40936a: call 0x426a00
40936f: mov r8, qword ptr [rsp]
409373: jmp 0x408835
409378: mov rdi, qword ptr [r8 + 0x18]
40937c: mov qword ptr [rsp], r8
409380: call 0x4073f0
409385: mov r8, qword ptr [rsp]
409389: mov r9, qword ptr [r8 + 0x10]
40938d: test r9, r9
409390: je 0x409404
409392: mov eax, dword ptr [r9]
409395: cmp eax, 2
409398: je 0x4093be
40939a: cmp eax, 3
40939d: jne 0x40a0ed
4093a3: mov rdi, qword ptr [r9 + 0x18]
4093a7: mov qword ptr [rsp + 8], r8
4093ac: mov qword ptr [rsp], r9
4093b0: call 0x4073f0
4093b5: mov r8, qword ptr [rsp + 8]
4093ba: mov r9, qword ptr [rsp]
4093be: mov rdi, qword ptr [r9 + 0x10]
4093c2: mov qword ptr [rsp + 8], r8
4093c7: mov qword ptr [rsp], r9
4093cb: call 0x4073f0
4093d0: mov r8, qword ptr [rsp + 8]
4093d5: mov r9, qword ptr [rsp]
4093d9: mov rdi, qword ptr [r9 + 8]
4093dd: mov qword ptr [rsp + 8], r8
4093e2: mov qword ptr [rsp], r9
4093e6: call 0x4073f0
4093eb: mov r8, qword ptr [rsp + 8]
4093f0: mov r9, qword ptr [rsp]
4093f4: mov rdi, r9
4093f7: mov qword ptr [rsp], r8
4093fb: call 0x426a00
409400: mov r8, qword ptr [rsp]
409404: mov r9, qword ptr [r8 + 8]
409408: test r9, r9
40940b: je 0x4078b7
409411: mov eax, dword ptr [r9]
409414: cmp eax, 2
409417: je 0x40a2ba
40941d: cmp eax, 3
409420: je 0x40a29f
409426: cmp eax, 1
409429: je 0x40a2d5
40942f: mov rdi, r9
409432: mov qword ptr [rsp], r8
409436: call 0x426a00
40943b: mov r8, qword ptr [rsp]
40943f: jmp 0x4078b7
409444: mov rdi, qword ptr [r8 + 0x18]
409448: mov qword ptr [rsp], r8
40944c: call 0x4073f0
409451: mov r8, qword ptr [rsp]
409455: mov r9, qword ptr [r8 + 0x10]
409459: test r9, r9
40945c: je 0x4094d0
40945e: mov eax, dword ptr [r9]
409461: cmp eax, 2
409464: je 0x40948a
409466: cmp eax, 3
409469: jne 0x40a4cb
40946f: mov rdi, qword ptr [r9 + 0x18]
409473: mov qword ptr [rsp + 8], r8
409478: mov qword ptr [rsp], r9
40947c: call 0x4073f0
409481: mov r8, qword ptr [rsp + 8]
409486: mov r9, qword ptr [rsp]
40948a: mov rdi, qword ptr [r9 + 0x10]
40948e: mov qword ptr [rsp + 8], r8
409493: mov qword ptr [rsp], r9
409497: call 0x4073f0
40949c: mov r8, qword ptr [rsp + 8]
4094a1: mov r9, qword ptr [rsp]
4094a5: mov rdi, qword ptr [r9 + 8]
4094a9: mov qword ptr [rsp + 8], r8
4094ae: mov qword ptr [rsp], r9
4094b2: call 0x4073f0
4094b7: mov r8, qword ptr [rsp + 8]
4094bc: mov r9, qword ptr [rsp]
4094c0: mov rdi, r9
4094c3: mov qword ptr [rsp], r8
4094c7: call 0x426a00
4094cc: mov r8, qword ptr [rsp]
4094d0: mov r9, qword ptr [r8 + 8]
4094d4: test r9, r9
4094d7: je 0x407ecc
4094dd: mov eax, dword ptr [r9]
4094e0: cmp eax, 2
4094e3: je 0x40a726
4094e9: cmp eax, 3
4094ec: je 0x40a70b
4094f2: cmp eax, 1
4094f5: je 0x40a741
4094fb: mov rdi, r9
4094fe: mov qword ptr [rsp], r8
409502: call 0x426a00
409507: mov r8, qword ptr [rsp]
40950b: jmp 0x407ecc
409510: mov rdi, qword ptr [r8 + 0x18]
409514: mov qword ptr [rsp], r8
409518: call 0x4073f0
40951d: mov r8, qword ptr [rsp]
409521: mov r9, qword ptr [r8 + 0x10]
409525: test r9, r9
409528: je 0x40959c
40952a: mov eax, dword ptr [r9]
40952d: cmp eax, 2
409530: je 0x409556
409532: cmp eax, 3
409535: jne 0x40a4d9
40953b: mov rdi, qword ptr [r9 + 0x18]
40953f: mov qword ptr [rsp + 8], r8
409544: mov qword ptr [rsp], r9
409548: call 0x4073f0
40954d: mov r8, qword ptr [rsp + 8]
409552: mov r9, qword ptr [rsp]
409556: mov rdi, qword ptr [r9 + 0x10]
40955a: mov qword ptr [rsp + 8], r8
40955f: mov qword ptr [rsp], r9
409563: call 0x4073f0
409568: mov r8, qword ptr [rsp + 8]
40956d: mov r9, qword ptr [rsp]
409571: mov rdi, qword ptr [r9 + 8]
409575: mov qword ptr [rsp + 8], r8
40957a: mov qword ptr [rsp], r9
40957e: call 0x4073f0
409583: mov r8, qword ptr [rsp + 8]
409588: mov r9, qword ptr [rsp]
40958c: mov rdi, r9
40958f: mov qword ptr [rsp], r8
409593: call 0x426a00
409598: mov r8, qword ptr [rsp]
40959c: mov r9, qword ptr [r8 + 8]
4095a0: test r9, r9
4095a3: je 0x4088a5
4095a9: mov eax, dword ptr [r9]
4095ac: cmp eax, 2
4095af: je 0x40a616
4095b5: cmp eax, 3
4095b8: je 0x40a5fb
4095be: cmp eax, 1
4095c1: je 0x40a631
4095c7: mov rdi, r9
4095ca: mov qword ptr [rsp], r8
4095ce: call 0x426a00
4095d3: mov r8, qword ptr [rsp]
4095d7: jmp 0x4088a5
4095dc: mov rdi, qword ptr [r8 + 0x18]
4095e0: mov qword ptr [rsp], r8
4095e4: call 0x4073f0
4095e9: mov r8, qword ptr [rsp]
4095ed: mov r9, qword ptr [r8 + 0x10]
4095f1: test r9, r9
4095f4: je 0x409668
4095f6: mov eax, dword ptr [r9]
4095f9: cmp eax, 2
4095fc: je 0x409622
4095fe: cmp eax, 3
409601: jne 0x40a45b
409607: mov rdi, qword ptr [r9 + 0x18]
40960b: mov qword ptr [rsp + 8], r8
409610: mov qword ptr [rsp], r9
409614: call 0x4073f0
409619: mov r8, qword ptr [rsp + 8]
40961e: mov r9, qword ptr [rsp]
409622: mov rdi, qword ptr [r9 + 0x10]
409626: mov qword ptr [rsp + 8], r8
40962b: mov qword ptr [rsp], r9
40962f: call 0x4073f0
409634: mov r8, qword ptr [rsp + 8]
409639: mov r9, qword ptr [rsp]
40963d: mov rdi, qword ptr [r9 + 8]
409641: mov qword ptr [rsp + 8], r8
409646: mov qword ptr [rsp], r9
40964a: call 0x4073f0
40964f: mov r8, qword ptr [rsp + 8]
409654: mov r9, qword ptr [rsp]
409658: mov rdi, r9
40965b: mov qword ptr [rsp], r8
40965f: call 0x426a00
409664: mov r8, qword ptr [rsp]
409668: mov r9, qword ptr [r8 + 8]
40966c: test r9, r9
40966f: je 0x40804c
409675: mov eax, dword ptr [r9]
409678: cmp eax, 2
40967b: je 0x40a5c0
409681: cmp eax, 3
409684: je 0x40a5a5
40968a: cmp eax, 1
40968d: je 0x40a5db
409693: mov rdi, r9
409696: mov qword ptr [rsp], r8
40969a: call 0x426a00
40969f: mov r8, qword ptr [rsp]
4096a3: jmp 0x40804c
4096a8: mov rdi, qword ptr [r8 + 0x18]
4096ac: mov qword ptr [rsp], r8
4096b0: call 0x4073f0
4096b5: mov r8, qword ptr [rsp]
4096b9: mov r9, qword ptr [r8 + 0x10]
4096bd: test r9, r9
4096c0: je 0x409734
4096c2: mov eax, dword ptr [r9]
4096c5: cmp eax, 2
4096c8: je 0x4096ee
4096ca: cmp eax, 3
4096cd: jne 0x40a44d
4096d3: mov rdi, qword ptr [r9 + 0x18]
4096d7: mov qword ptr [rsp + 8], r8
4096dc: mov qword ptr [rsp], r9
4096e0: call 0x4073f0
4096e5: mov r8, qword ptr [rsp + 8]
4096ea: mov r9, qword ptr [rsp]
4096ee: mov rdi, qword ptr [r9 + 0x10]
4096f2: mov qword ptr [rsp + 8], r8
4096f7: mov qword ptr [rsp], r9
4096fb: call 0x4073f0
409700: mov r8, qword ptr [rsp + 8]
409705: mov r9, qword ptr [rsp]
409709: mov rdi, qword ptr [r9 + 8]
40970d: mov qword ptr [rsp + 8], r8
409712: mov qword ptr [rsp], r9
409716: call 0x4073f0
40971b: mov r8, qword ptr [rsp + 8]
409720: mov r9, qword ptr [rsp]
409724: mov rdi, r9
409727: mov qword ptr [rsp], r8
40972b: call 0x426a00
409730: mov r8, qword ptr [rsp]
409734: mov r9, qword ptr [r8 + 8]
409738: test r9, r9
40973b: je 0x407f8c
409741: mov eax, dword ptr [r9]
409744: cmp eax, 2
409747: je 0x40a88e
40974d: cmp eax, 3
409750: je 0x40a873
409756: cmp eax, 1
409759: je 0x40a8a9
40975f: mov rdi, r9
409762: mov qword ptr [rsp], r8
409766: call 0x426a00
40976b: mov r8, qword ptr [rsp]
40976f: jmp 0x407f8c
409774: mov rdi, qword ptr [r14 + 0x18]
409778: call 0x4073f0
40977d: mov r15, qword ptr [r14 + 0x10]
409781: test r15, r15
409784: je 0x4097ba
409786: mov eax, dword ptr [r15]
409789: cmp eax, 2
40978c: je 0x4097a0
40978e: cmp eax, 3
409791: jne 0x40a503
409797: mov rdi, qword ptr [r15 + 0x18]
40979b: call 0x4073f0
4097a0: mov rdi, qword ptr [r15 + 0x10]
4097a4: call 0x4073f0
4097a9: mov rdi, qword ptr [r15 + 8]
4097ad: call 0x4073f0
4097b2: mov rdi, r15
4097b5: call 0x426a00
4097ba: mov r15, qword ptr [r14 + 8]
4097be: test r15, r15
4097c1: je 0x407958
4097c7: mov eax, dword ptr [r15]
4097ca: cmp eax, 2
4097cd: je 0x40a564
4097d3: cmp eax, 3
4097d6: je 0x40a55b
4097dc: cmp eax, 1
4097df: je 0x40a56d
4097e5: mov rdi, r15
4097e8: call 0x426a00
4097ed: jmp 0x407958
4097f2: mov rdi, qword ptr [r9 + 0x18]
4097f6: mov qword ptr [rsp + 8], r8
4097fb: mov qword ptr [rsp], r9
4097ff: call 0x4073f0
409804: mov r8, qword ptr [rsp + 8]
409809: mov r9, qword ptr [rsp]
40980d: mov rdi, qword ptr [r9 + 0x10]
409811: mov qword ptr [rsp + 8], r8
409816: mov qword ptr [rsp], r9
40981a: call 0x4073f0
40981f: mov r8, qword ptr [rsp + 8]
409824: mov r9, qword ptr [rsp]
409828: mov rdi, qword ptr [r9 + 8]
40982c: mov qword ptr [rsp + 8], r8
409831: mov qword ptr [rsp], r9
409835: call 0x4073f0
40983a: mov r8, qword ptr [rsp + 8]
40983f: mov r9, qword ptr [rsp]
409843: jmp 0x408322
409848: mov rdi, qword ptr [r9 + 0x18]
40984c: mov qword ptr [rsp + 8], r8
409851: mov qword ptr [rsp], r9
409855: call 0x4073f0
40985a: mov r8, qword ptr [rsp + 8]
40985f: mov r9, qword ptr [rsp]
409863: mov rdi, qword ptr [r9 + 0x10]
409867: mov qword ptr [rsp + 8], r8
40986c: mov qword ptr [rsp], r9
409870: call 0x4073f0
409875: mov r8, qword ptr [rsp + 8]
40987a: mov r9, qword ptr [rsp]
40987e: mov rdi, qword ptr [r9 + 8]
409882: mov qword ptr [rsp + 8], r8
409887: mov qword ptr [rsp], r9
40988b: call 0x4073f0
409890: mov r8, qword ptr [rsp + 8]
409895: mov r9, qword ptr [rsp]
409899: jmp 0x40841a
40989e: mov rdi, qword ptr [r9 + 0x18]
4098a2: mov qword ptr [rsp + 8], r8
4098a7: mov qword ptr [rsp], r9
4098ab: call 0x4073f0
4098b0: mov r8, qword ptr [rsp + 8]
4098b5: mov r9, qword ptr [rsp]
4098b9: mov rdi, qword ptr [r9 + 0x10]
4098bd: mov qword ptr [rsp + 8], r8
4098c2: mov qword ptr [rsp], r9
4098c6: call 0x4073f0
4098cb: mov r8, qword ptr [rsp + 8]
4098d0: mov r9, qword ptr [rsp]
4098d4: mov rdi, qword ptr [r9 + 8]
4098d8: mov qword ptr [rsp + 8], r8
4098dd: mov qword ptr [rsp], r9
4098e1: call 0x4073f0
4098e6: mov r8, qword ptr [rsp + 8]
4098eb: mov r9, qword ptr [rsp]
4098ef: jmp 0x408925
4098f4: mov rdi, qword ptr [r9 + 0x18]
4098f8: mov qword ptr [rsp + 8], r8
4098fd: mov qword ptr [rsp], r9
409901: call 0x4073f0
409906: mov r8, qword ptr [rsp + 8]
40990b: mov r9, qword ptr [rsp]
40990f: mov rdi, qword ptr [r9 + 0x10]
409913: mov qword ptr [rsp + 8], r8
409918: mov qword ptr [rsp], r9
40991c: call 0x4073f0
409921: mov r8, qword ptr [rsp + 8]
409926: mov r9, qword ptr [rsp]
40992a: mov rdi, qword ptr [r9 + 8]
40992e: mov qword ptr [rsp + 8], r8
409933: mov qword ptr [rsp], r9
409937: call 0x4073f0
40993c: mov r8, qword ptr [rsp + 8]
409941: mov r9, qword ptr [rsp]
409945: jmp 0x4089ad
40994a: mov rdi, qword ptr [r9 + 0x18]
40994e: mov qword ptr [rsp + 8], r8
409953: mov qword ptr [rsp], r9
409957: call 0x4073f0
40995c: mov r8, qword ptr [rsp + 8]
409961: mov r9, qword ptr [rsp]
409965: mov rdi, qword ptr [r9 + 0x10]
409969: mov qword ptr [rsp + 8], r8
40996e: mov qword ptr [rsp], r9
409972: call 0x4073f0
409977: mov r8, qword ptr [rsp + 8]
40997c: mov r9, qword ptr [rsp]
409980: mov rdi, qword ptr [r9 + 8]
409984: mov qword ptr [rsp + 8], r8
409989: mov qword ptr [rsp], r9
40998d: call 0x4073f0
409992: mov r8, qword ptr [rsp + 8]
409997: mov r9, qword ptr [rsp]
40999b: jmp 0x408a35
4099a0: mov rdi, qword ptr [r9 + 0x18]
4099a4: mov qword ptr [rsp + 8], r8
4099a9: mov qword ptr [rsp], r9
4099ad: call 0x4073f0
4099b2: mov r8, qword ptr [rsp + 8]
4099b7: mov r9, qword ptr [rsp]
4099bb: mov rdi, qword ptr [r9 + 0x10]
4099bf: mov qword ptr [rsp + 8], r8
4099c4: mov qword ptr [rsp], r9
4099c8: call 0x4073f0
4099cd: mov r8, qword ptr [rsp + 8]
4099d2: mov r9, qword ptr [rsp]
4099d6: mov rdi, qword ptr [r9 + 8]
4099da: mov qword ptr [rsp + 8], r8
4099df: mov qword ptr [rsp], r9
4099e3: call 0x4073f0
4099e8: mov r8, qword ptr [rsp + 8]
4099ed: mov r9, qword ptr [rsp]
4099f1: jmp 0x40822a
4099f6: mov rdi, qword ptr [r9 + 0x18]
4099fa: mov qword ptr [rsp + 8], r8
4099ff: mov qword ptr [rsp], r9
409a03: call 0x4073f0
409a08: mov r8, qword ptr [rsp + 8]
409a0d: mov r9, qword ptr [rsp]
409a11: mov rdi, qword ptr [r9 + 0x10]
409a15: mov qword ptr [rsp + 8], r8
409a1a: mov qword ptr [rsp], r9
409a1e: call 0x4073f0
409a23: mov r8, qword ptr [rsp + 8]
409a28: mov r9, qword ptr [rsp]
409a2c: mov rdi, qword ptr [r9 + 8]
409a30: mov qword ptr [rsp + 8], r8
409a35: mov qword ptr [rsp], r9
409a39: call 0x4073f0
409a3e: mov r8, qword ptr [rsp + 8]
409a43: mov r9, qword ptr [rsp]
409a47: jmp 0x408abd
409a4c: mov rdi, qword ptr [r9 + 0x18]
409a50: mov qword ptr [rsp + 8], r8
409a55: mov qword ptr [rsp], r9
409a59: call 0x4073f0
409a5e: mov r8, qword ptr [rsp + 8]
409a63: mov r9, qword ptr [rsp]
409a67: mov rdi, qword ptr [r9 + 0x10]
409a6b: mov qword ptr [rsp + 8], r8
409a70: mov qword ptr [rsp], r9
409a74: call 0x4073f0
409a79: mov r8, qword ptr [rsp + 8]
409a7e: mov r9, qword ptr [rsp]
409a82: mov rdi, qword ptr [r9 + 8]
409a86: mov qword ptr [rsp + 8], r8
409a8b: mov qword ptr [rsp], r9
409a8f: call 0x4073f0
409a94: mov r8, qword ptr [rsp + 8]
409a99: mov r9, qword ptr [rsp]
409a9d: jmp 0x408b45
409aa2: mov rdi, qword ptr [r9 + 0x18]
409aa6: mov qword ptr [rsp + 8], r8
409aab: mov qword ptr [rsp], r9
409aaf: call 0x4073f0
409ab4: mov r8, qword ptr [rsp + 8]
409ab9: mov r9, qword ptr [rsp]
409abd: mov rdi, qword ptr [r9 + 0x10]
409ac1: mov qword ptr [rsp + 8], r8
409ac6: mov qword ptr [rsp], r9
409aca: call 0x4073f0
409acf: mov r8, qword ptr [rsp + 8]
409ad4: mov r9, qword ptr [rsp]
409ad8: mov rdi, qword ptr [r9 + 8]
409adc: mov qword ptr [rsp + 8], r8
409ae1: mov qword ptr [rsp], r9
409ae5: call 0x4073f0
409aea: mov r8, qword ptr [rsp + 8]
409aef: mov r9, qword ptr [rsp]
409af3: jmp 0x408bcd
409af8: mov rdi, qword ptr [r9 + 0x18]
409afc: mov qword ptr [rsp + 8], r8
409b01: mov qword ptr [rsp], r9
409b05: call 0x4073f0
409b0a: mov r8, qword ptr [rsp + 8]
409b0f: mov r9, qword ptr [rsp]
409b13: mov rdi, qword ptr [r9 + 0x10]
409b17: mov qword ptr [rsp + 8], r8
409b1c: mov qword ptr [rsp], r9
409b20: call 0x4073f0
409b25: mov r8, qword ptr [rsp + 8]
409b2a: mov r9, qword ptr [rsp]
409b2e: mov rdi, qword ptr [r9 + 8]
409b32: mov qword ptr [rsp + 8], r8
409b37: mov qword ptr [rsp], r9
409b3b: call 0x4073f0
409b40: mov r8, qword ptr [rsp + 8]
409b45: mov r9, qword ptr [rsp]
409b49: jmp 0x408132
409b4e: mov rdi, qword ptr [r15 + 0x18]
409b52: call 0x4073f0
409b57: mov r8, qword ptr [r15 + 0x10]
409b5b: test r8, r8
409b5e: je 0x409b86
409b60: mov eax, dword ptr [r8]
409b63: cmp eax, 2
409b66: je 0x40aec4
409b6c: cmp eax, 3
409b6f: je 0x40aeb3
409b75: cmp eax, 1
409b78: je 0x40aed5
409b7e: mov rdi, r8
409b81: call 0x426a00
409b86: mov r8, qword ptr [r15 + 8]
409b8a: test r8, r8
409b8d: je 0x40852a
409b93: mov eax, dword ptr [r8]
409b96: cmp eax, 2
409b99: je 0x409bc3
409b9b: cmp eax, 3
409b9e: je 0x409bb2
409ba0: cmp eax, 1
409ba3: je 0x409bd4
409ba5: mov rdi, r8
409ba8: call 0x426a00
409bad: jmp 0x40852a
409bb2: mov rdi, qword ptr [r8 + 0x18]
409bb6: mov qword ptr [rsp], r8
409bba: call 0x4073f0
409bbf: mov r8, qword ptr [rsp]
409bc3: mov rdi, qword ptr [r8 + 0x10]
409bc7: mov qword ptr [rsp], r8
409bcb: call 0x4073f0
409bd0: mov r8, qword ptr [rsp]
409bd4: mov rdi, qword ptr [r8 + 8]
409bd8: mov qword ptr [rsp], r8
409bdc: call 0x4073f0
409be1: mov r8, qword ptr [rsp]
409be5: jmp 0x409ba5
409be7: cmp eax, 1
409bea: jne 0x407f5d
409bf0: jmp 0x407f4c
409bf5: cmp eax, 1
409bf8: jne 0x40801d
409bfe: jmp 0x40800c
409c03: cmp eax, 1
409c06: jne 0x408de6
409c0c: jmp 0x408dd5
409c11: cmp eax, 1
409c14: jne 0x4090d4
409c1a: jmp 0x4090c3
409c1f: cmp eax, 1
409c22: jne 0x408e7c
409c28: jmp 0x408e6b
409c2d: mov rdi, qword ptr [r15 + 0x18]
409c31: call 0x4073f0
409c36: mov r8, qword ptr [r15 + 0x10]
409c3a: test r8, r8
409c3d: je 0x409c65
409c3f: mov eax, dword ptr [r8]
409c42: cmp eax, 2
409c45: je 0x40ae8c
409c4b: cmp eax, 3
409c4e: je 0x40ae7b
409c54: cmp eax, 1
409c57: je 0x40ae9d
409c5d: mov rdi, r8
409c60: call 0x426a00
409c65: mov r8, qword ptr [r15 + 8]
409c69: test r8, r8
409c6c: je 0x407a0f
409c72: mov eax, dword ptr [r8]
409c75: cmp eax, 2
409c78: je 0x409ca2
409c7a: cmp eax, 3
409c7d: je 0x409c91
409c7f: cmp eax, 1
409c82: je 0x409cb3
409c84: mov rdi, r8
409c87: call 0x426a00
409c8c: jmp 0x407a0f
409c91: mov rdi, qword ptr [r8 + 0x18]
409c95: mov qword ptr [rsp], r8
409c99: call 0x4073f0
409c9e: mov r8, qword ptr [rsp]
409ca2: mov rdi, qword ptr [r8 + 0x10]
409ca6: mov qword ptr [rsp], r8
409caa: call 0x4073f0
409caf: mov r8, qword ptr [rsp]
409cb3: mov rdi, qword ptr [r8 + 8]
409cb7: mov qword ptr [rsp], r8
409cbb: call 0x4073f0
409cc0: mov r8, qword ptr [rsp]
409cc4: jmp 0x409c84
409cc6: cmp eax, 1
409cc9: jne 0x408f12
409ccf: jmp 0x408f01
409cd4: cmp eax, 1
409cd7: jne 0x408fa8
409cdd: jmp 0x408f97
409ce2: cmp eax, 1
409ce5: jne 0x407e9d
409ceb: jmp 0x407e8c
409cf0: cmp eax, 1
409cf3: jne 0x40903e
409cf9: jmp 0x40902d
409cfe: mov rdi, qword ptr [r15 + 0x18]
409d02: call 0x4073f0
409d07: mov r8, qword ptr [r15 + 0x10]
409d0b: test r8, r8
409d0e: je 0x409d36
409d10: mov eax, dword ptr [r8]
409d13: cmp eax, 2
409d16: je 0x40aefc
409d1c: cmp eax, 3
409d1f: je 0x40aeeb
409d25: cmp eax, 1
409d28: je 0x40af0d
409d2e: mov rdi, r8
409d31: call 0x426a00
409d36: mov r8, qword ptr [r15 + 8]
409d3a: test r8, r8
409d3d: je 0x4085ce
409d43: mov eax, dword ptr [r8]
409d46: cmp eax, 2
409d49: je 0x409d73
409d4b: cmp eax, 3
409d4e: je 0x409d62
409d50: cmp eax, 1
409d53: je 0x409d84
409d55: mov rdi, r8
409d58: call 0x426a00
409d5d: jmp 0x4085ce
409d62: mov rdi, qword ptr [r8 + 0x18]
409d66: mov qword ptr [rsp], r8
409d6a: call 0x4073f0
409d6f: mov r8, qword ptr [rsp]
409d73: mov rdi, qword ptr [r8 + 0x10]
409d77: mov qword ptr [rsp], r8
409d7b: call 0x4073f0
409d80: mov r8, qword ptr [rsp]
409d84: mov rdi, qword ptr [r8 + 8]
409d88: mov qword ptr [rsp], r8
409d8c: call 0x4073f0
409d91: mov r8, qword ptr [rsp]
409d95: jmp 0x409d55
409d97: cmp eax, 1
409d9a: jne 0x4080fb
409da0: jmp 0x4080e0
409da5: cmp eax, 1
409da8: jne 0x4083e3
409dae: jmp 0x4083c8
409db3: mov rdi, qword ptr [r8 + 0x18]
409db7: mov qword ptr [rsp], r8
409dbb: call 0x4073f0
409dc0: mov r8, qword ptr [rsp]
409dc4: mov rdi, qword ptr [r8 + 0x10]
409dc8: mov qword ptr [rsp], r8
409dcc: call 0x4073f0
409dd1: mov r8, qword ptr [rsp]
409dd5: mov r9, qword ptr [r8 + 8]
409dd9: test r9, r9
409ddc: je 0x409107
409de2: mov eax, dword ptr [r9]
409de5: cmp eax, 2
409de8: je 0x40aa3c
409dee: cmp eax, 3
409df1: je 0x40aa21
409df7: cmp eax, 1
409dfa: je 0x40aa57
409e00: mov rdi, r9
409e03: mov qword ptr [rsp], r8
409e07: call 0x426a00
409e0c: mov r8, qword ptr [rsp]
409e10: jmp 0x409107
409e15: mov rdi, qword ptr [r8 + 0x18]
409e19: mov qword ptr [rsp], r8
409e1d: call 0x4073f0
409e22: mov r8, qword ptr [rsp]
409e26: mov rdi, qword ptr [r8 + 0x10]
409e2a: mov qword ptr [rsp], r8
409e2e: call 0x4073f0
409e33: mov r8, qword ptr [rsp]
409e37: mov r9, qword ptr [r8 + 8]
409e3b: test r9, r9
409e3e: je 0x408f45
409e44: mov eax, dword ptr [r9]
409e47: cmp eax, 2
409e4a: je 0x40a9e6
409e50: cmp eax, 3
409e53: je 0x40a9cb
409e59: cmp eax, 1
409e5c: je 0x40aa01
409e62: mov rdi, r9
409e65: mov qword ptr [rsp], r8
409e69: call 0x426a00
409e6e: mov r8, qword ptr [rsp]
409e72: jmp 0x408f45
409e77: cmp eax, 1
409e7a: jne 0x409190
409e80: jmp 0x409175
409e85: mov rdi, qword ptr [r8 + 0x18]
409e89: mov qword ptr [rsp], r8
409e8d: call 0x4073f0
409e92: mov r8, qword ptr [rsp]
409e96: mov rdi, qword ptr [r8 + 0x10]
409e9a: mov qword ptr [rsp], r8
409e9e: call 0x4073f0
409ea3: mov r8, qword ptr [rsp]
409ea7: mov r9, qword ptr [r8 + 8]
409eab: test r9, r9
409eae: je 0x408fdb
409eb4: mov eax, dword ptr [r9]
409eb7: cmp eax, 2
409eba: je 0x40a990
409ec0: cmp eax, 3
409ec3: je 0x40a975
409ec9: cmp eax, 1
409ecc: je 0x40a9ab
409ed2: mov rdi, r9
409ed5: mov qword ptr [rsp], r8
409ed9: call 0x426a00
409ede: mov r8, qword ptr [rsp]
409ee2: jmp 0x408fdb
409ee7: cmp eax, 1
409eea: jne 0x409328
409ef0: jmp 0x40930d
409ef5: cmp eax, 1
409ef8: jne 0x40925c
409efe: jmp 0x409241
409f03: mov rdi, qword ptr [r8 + 0x18]
409f07: mov qword ptr [rsp], r8
409f0b: call 0x4073f0
409f10: mov r8, qword ptr [rsp]
409f14: mov rdi, qword ptr [r8 + 0x10]
409f18: mov qword ptr [rsp], r8
409f1c: call 0x4073f0
409f21: mov r8, qword ptr [rsp]
409f25: mov r9, qword ptr [r8 + 8]
409f29: test r9, r9
409f2c: je 0x408802
409f32: mov eax, dword ptr [r9]
409f35: cmp eax, 2
409f38: je 0x40ad42
409f3e: cmp eax, 3
409f41: je 0x40ad27
409f47: cmp eax, 1
409f4a: je 0x40ad5d
409f50: mov rdi, r9
409f53: mov qword ptr [rsp], r8
409f57: call 0x426a00
409f5c: mov r8, qword ptr [rsp]
409f60: jmp 0x408802
409f65: mov rdi, qword ptr [r8 + 0x18]
409f69: mov qword ptr [rsp], r8
409f6d: call 0x4073f0
409f72: mov r8, qword ptr [rsp]
409f76: mov rdi, qword ptr [r8 + 0x10]
409f7a: mov qword ptr [rsp], r8
409f7e: call 0x4073f0
409f83: mov r8, qword ptr [rsp]
409f87: mov r9, qword ptr [r8 + 8]
409f8b: test r9, r9
409f8e: je 0x407b47
409f94: mov eax, dword ptr [r9]
409f97: cmp eax, 2
409f9a: je 0x40acec
409fa0: cmp eax, 3
409fa3: je 0x40acd1
409fa9: cmp eax, 1
409fac: je 0x40ad07
409fb2: mov rdi, r9
409fb5: mov qword ptr [rsp], r8
409fb9: call 0x426a00
409fbe: mov r8, qword ptr [rsp]
409fc2: jmp 0x407b47
409fc7: mov rdi, qword ptr [r8 + 0x18]
409fcb: mov qword ptr [rsp], r8
409fcf: call 0x4073f0
409fd4: mov r8, qword ptr [rsp]
409fd8: mov rdi, qword ptr [r8 + 0x10]
409fdc: mov qword ptr [rsp], r8
409fe0: call 0x4073f0
409fe5: mov r8, qword ptr [rsp]
409fe9: mov r9, qword ptr [r8 + 8]
409fed: test r9, r9
409ff0: je 0x408e19
409ff6: mov eax, dword ptr [r9]
409ff9: cmp eax, 2
409ffc: je 0x40ac96
40a002: cmp eax, 3
40a005: je 0x40ac7b
40a00b: cmp eax, 1
40a00e: je 0x40acb1
40a014: mov rdi, r9
40a017: mov qword ptr [rsp], r8
40a01b: call 0x426a00
40a020: mov r8, qword ptr [rsp]
40a024: jmp 0x408e19
40a029: mov rdi, qword ptr [r8 + 0x18]
40a02d: mov qword ptr [rsp], r8
40a031: call 0x4073f0
40a036: mov r8, qword ptr [rsp]
40a03a: mov rdi, qword ptr [r8 + 0x10]
40a03e: mov qword ptr [rsp], r8
40a042: call 0x4073f0
40a047: mov r8, qword ptr [rsp]
40a04b: mov r9, qword ptr [r8 + 8]
40a04f: test r9, r9
40a052: je 0x407aa7
40a058: mov eax, dword ptr [r9]
40a05b: cmp eax, 2
40a05e: je 0x40ac40
40a064: cmp eax, 3
40a067: je 0x40ac25
40a06d: cmp eax, 1
40a070: je 0x40ac5b
40a076: mov rdi, r9
40a079: mov qword ptr [rsp], r8
40a07d: call 0x426a00
40a082: mov r8, qword ptr [rsp]
40a086: jmp 0x407aa7
40a08b: mov rdi, qword ptr [r8 + 0x18]
40a08f: mov qword ptr [rsp], r8
40a093: call 0x4073f0
40a098: mov r8, qword ptr [rsp]
40a09c: mov rdi, qword ptr [r8 + 0x10]
40a0a0: mov qword ptr [rsp], r8
40a0a4: call 0x4073f0
40a0a9: mov r8, qword ptr [rsp]
40a0ad: mov r9, qword ptr [r8 + 8]
40a0b1: test r9, r9
40a0b4: je 0x408eaf
40a0ba: mov eax, dword ptr [r9]
40a0bd: cmp eax, 2
40a0c0: je 0x40abea
40a0c6: cmp eax, 3
40a0c9: je 0x40abcf
40a0cf: cmp eax, 1
40a0d2: je 0x40ac05
40a0d8: mov rdi, r9
40a0db: mov qword ptr [rsp], r8
40a0df: call 0x426a00
40a0e4: mov r8, qword ptr [rsp]
40a0e8: jmp 0x408eaf
40a0ed: cmp eax, 1
40a0f0: jne 0x4093f4
40a0f6: jmp 0x4093d9
40a0fb: mov rdi, qword ptr [r8 + 0x18]
40a0ff: mov qword ptr [rsp], r8
40a103: call 0x4073f0
40a108: mov r8, qword ptr [rsp]
40a10c: mov rdi, qword ptr [r8 + 0x10]
40a110: mov qword ptr [rsp], r8
40a114: call 0x4073f0
40a119: mov r8, qword ptr [rsp]
40a11d: mov r9, qword ptr [r8 + 8]
40a121: test r9, r9
40a124: je 0x407be7
40a12a: mov eax, dword ptr [r9]
40a12d: cmp eax, 2
40a130: je 0x40ab94
40a136: cmp eax, 3
40a139: je 0x40ab79
40a13f: cmp eax, 1
40a142: je 0x40abaf
40a148: mov rdi, r9
40a14b: mov qword ptr [rsp], r8
40a14f: call 0x426a00
40a154: mov r8, qword ptr [rsp]
40a158: jmp 0x407be7
40a15d: mov rdi, qword ptr [r8 + 0x18]
40a161: mov qword ptr [rsp], r8
40a165: call 0x4073f0
40a16a: mov r8, qword ptr [rsp]
40a16e: mov rdi, qword ptr [r8 + 0x10]
40a172: mov qword ptr [rsp], r8
40a176: call 0x4073f0
40a17b: mov r8, qword ptr [rsp]
40a17f: mov r9, qword ptr [r8 + 8]
40a183: test r9, r9
40a186: je 0x409071
40a18c: mov eax, dword ptr [r9]
40a18f: cmp eax, 2
40a192: je 0x40ab3e
40a198: cmp eax, 3
40a19b: je 0x40ab23
40a1a1: cmp eax, 1
40a1a4: je 0x40ab59
40a1aa: mov rdi, r9
40a1ad: mov qword ptr [rsp], r8
40a1b1: call 0x426a00
40a1b6: mov r8, qword ptr [rsp]
40a1ba: jmp 0x409071
40a1bf: mov rdi, qword ptr [r8 + 0x18]
40a1c3: mov qword ptr [rsp], r8
40a1c7: call 0x4073f0
40a1cc: mov r8, qword ptr [rsp]
40a1d0: mov rdi, qword ptr [r8 + 0x10]
40a1d4: mov qword ptr [rsp], r8
40a1d8: call 0x4073f0
40a1dd: mov r8, qword ptr [rsp]
40a1e1: mov r9, qword ptr [r8 + 8]
40a1e5: test r9, r9
40a1e8: je 0x408746
40a1ee: mov eax, dword ptr [r9]
40a1f1: cmp eax, 2
40a1f4: je 0x40aae8
40a1fa: cmp eax, 3
40a1fd: je 0x40aacd
40a203: cmp eax, 1
40a206: je 0x40ab03
40a20c: mov rdi, r9
40a20f: mov qword ptr [rsp], r8
40a213: call 0x426a00
40a218: mov r8, qword ptr [rsp]
40a21c: jmp 0x408746
40a221: mov rdi, qword ptr [r8 + 0x18]
40a225: mov qword ptr [rsp], r8
40a229: call 0x4073f0
40a22e: mov r8, qword ptr [rsp]
40a232: mov rdi, qword ptr [r8 + 0x10]
40a236: mov qword ptr [rsp], r8
40a23a: call 0x4073f0
40a23f: mov r8, qword ptr [rsp]
40a243: mov r9, qword ptr [r8 + 8]
40a247: test r9, r9
40a24a: je 0x40868a
40a250: mov eax, dword ptr [r9]
40a253: cmp eax, 2
40a256: je 0x40aa92
40a25c: cmp eax, 3
40a25f: je 0x40aa77
40a265: cmp eax, 1
40a268: je 0x40aaad
40a26e: mov rdi, r9
40a271: mov qword ptr [rsp], r8
40a275: call 0x426a00
40a27a: mov r8, qword ptr [rsp]
40a27e: jmp 0x40868a
40a283: cmp eax, 1
40a286: jne 0x4082eb
40a28c: jmp 0x4082d0
40a291: cmp eax, 1
40a294: jne 0x4081f3
40a29a: jmp 0x4081d8
40a29f: mov rdi, qword ptr [r9 + 0x18]
40a2a3: mov qword ptr [rsp + 8], r8
40a2a8: mov qword ptr [rsp], r9
40a2ac: call 0x4073f0
40a2b1: mov r8, qword ptr [rsp + 8]
40a2b6: mov r9, qword ptr [rsp]
40a2ba: mov rdi, qword ptr [r9 + 0x10]
40a2be: mov qword ptr [rsp + 8], r8
40a2c3: mov qword ptr [rsp], r9
40a2c7: call 0x4073f0
40a2cc: mov r8, qword ptr [rsp + 8]
40a2d1: mov r9, qword ptr [rsp]
40a2d5: mov rdi, qword ptr [r9 + 8]
40a2d9: mov qword ptr [rsp + 8], r8
40a2de: mov qword ptr [rsp], r9
40a2e2: call 0x4073f0
40a2e7: mov r8, qword ptr [rsp + 8]
40a2ec: mov r9, qword ptr [rsp]
40a2f0: jmp 0x40942f
40a2f5: mov rdi, qword ptr [r9 + 0x18]
40a2f9: mov qword ptr [rsp + 8], r8
40a2fe: mov qword ptr [rsp], r9
40a302: call 0x4073f0
40a307: mov r8, qword ptr [rsp + 8]
40a30c: mov r9, qword ptr [rsp]
40a310: mov rdi, qword ptr [r9 + 0x10]
40a314: mov qword ptr [rsp + 8], r8
40a319: mov qword ptr [rsp], r9
40a31d: call 0x4073f0
40a322: mov r8, qword ptr [rsp + 8]
40a327: mov r9, qword ptr [rsp]
40a32b: mov rdi, qword ptr [r9 + 8]
40a32f: mov qword ptr [rsp + 8], r8
40a334: mov qword ptr [rsp], r9
40a338: call 0x4073f0
40a33d: mov r8, qword ptr [rsp + 8]
40a342: mov r9, qword ptr [rsp]
40a346: jmp 0x409363
40a34b: mov rdi, qword ptr [r9 + 0x18]
40a34f: mov qword ptr [rsp + 8], r8
40a354: mov qword ptr [rsp], r9
40a358: call 0x4073f0
40a35d: mov r8, qword ptr [rsp + 8]
40a362: mov r9, qword ptr [rsp]
40a366: mov rdi, qword ptr [r9 + 0x10]
40a36a: mov qword ptr [rsp + 8], r8
40a36f: mov qword ptr [rsp], r9
40a373: call 0x4073f0
40a378: mov r8, qword ptr [rsp + 8]
40a37d: mov r9, qword ptr [rsp]
40a381: mov rdi, qword ptr [r9 + 8]
40a385: mov qword ptr [rsp + 8], r8
40a38a: mov qword ptr [rsp], r9
40a38e: call 0x4073f0
40a393: mov r8, qword ptr [rsp + 8]
40a398: mov r9, qword ptr [rsp]
40a39c: jmp 0x409297
40a3a1: mov rdi, qword ptr [r9 + 0x18]
40a3a5: mov qword ptr [rsp + 8], r8
40a3aa: mov qword ptr [rsp], r9
40a3ae: call 0x4073f0
40a3b3: mov r8, qword ptr [rsp + 8]
40a3b8: mov r9, qword ptr [rsp]
40a3bc: mov rdi, qword ptr [r9 + 0x10]
40a3c0: mov qword ptr [rsp + 8], r8
40a3c5: mov qword ptr [rsp], r9
40a3c9: call 0x4073f0
40a3ce: mov r8, qword ptr [rsp + 8]
40a3d3: mov r9, qword ptr [rsp]
40a3d7: mov rdi, qword ptr [r9 + 8]
40a3db: mov qword ptr [rsp + 8], r8
40a3e0: mov qword ptr [rsp], r9
40a3e4: call 0x4073f0
40a3e9: mov r8, qword ptr [rsp + 8]
40a3ee: mov r9, qword ptr [rsp]
40a3f2: jmp 0x4091cb
40a3f7: mov rdi, qword ptr [r9 + 0x18]
40a3fb: mov qword ptr [rsp + 8], r8
40a400: mov qword ptr [rsp], r9
40a404: call 0x4073f0
40a409: mov r8, qword ptr [rsp + 8]
40a40e: mov r9, qword ptr [rsp]
40a412: mov rdi, qword ptr [r9 + 0x10]
40a416: mov qword ptr [rsp + 8], r8
40a41b: mov qword ptr [rsp], r9
40a41f: call 0x4073f0
40a424: mov r8, qword ptr [rsp + 8]
40a429: mov r9, qword ptr [rsp]
40a42d: mov rdi, qword ptr [r9 + 8]
40a431: mov qword ptr [rsp + 8], r8
40a436: mov qword ptr [rsp], r9
40a43a: call 0x4073f0
40a43f: mov r8, qword ptr [rsp + 8]
40a444: mov r9, qword ptr [rsp]
40a448: jmp 0x407c87
40a44d: cmp eax, 1
40a450: jne 0x409724
40a456: jmp 0x409709
40a45b: cmp eax, 1
40a45e: jne 0x409658
40a464: jmp 0x40963d
40a469: mov rdi, qword ptr [r8 + 0x18]
40a46d: mov qword ptr [rsp], r8
40a471: call 0x4073f0
40a476: mov r8, qword ptr [rsp]
40a47a: mov rdi, qword ptr [r8 + 0x10]
40a47e: mov qword ptr [rsp], r8
40a482: call 0x4073f0
40a487: mov r8, qword ptr [rsp]
40a48b: mov r9, qword ptr [r8 + 8]
40a48f: test r9, r9
40a492: je 0x408872
40a498: mov eax, dword ptr [r9]
40a49b: cmp eax, 2
40a49e: je 0x40ad98
40a4a4: cmp eax, 3
40a4a7: je 0x40ad7d
40a4ad: cmp eax, 1
40a4b0: je 0x40adb3
40a4b6: mov rdi, r9
40a4b9: mov qword ptr [rsp], r8
40a4bd: call 0x426a00
40a4c2: mov r8, qword ptr [rsp]
40a4c6: jmp 0x408872
40a4cb: cmp eax, 1
40a4ce: jne 0x4094c0
40a4d4: jmp 0x4094a5
40a4d9: cmp eax, 1
40a4dc: jne 0x40958c
40a4e2: jmp 0x409571
40a4e7: cmp eax, 1
40a4ea: jne 0x40859f
40a4f0: jmp 0x408596
40a4f5: cmp eax, 1
40a4f8: jne 0x4084fb
40a4fe: jmp 0x4084f2
40a503: cmp eax, 1
40a506: jne 0x4097b2
40a50c: jmp 0x4097a9
40a511: mov rdi, qword ptr [r15 + 0x18]
40a515: call 0x4073f0
40a51a: mov rdi, qword ptr [r15 + 0x10]
40a51e: call 0x4073f0
40a523: mov r8, qword ptr [r15 + 8]
40a527: test r8, r8
40a52a: je 0x407dd7
40a530: mov eax, dword ptr [r8]
40a533: cmp eax, 2
40a536: je 0x40ae54
40a53c: cmp eax, 3
40a53f: je 0x40ae43
40a545: cmp eax, 1
40a548: je 0x40ae65
40a54e: mov rdi, r8
40a551: call 0x426a00
40a556: jmp 0x407dd7
40a55b: mov rdi, qword ptr [r15 + 0x18]
40a55f: call 0x4073f0
40a564: mov rdi, qword ptr [r15 + 0x10]
40a568: call 0x4073f0
40a56d: mov r8, qword ptr [r15 + 8]
40a571: test r8, r8
40a574: je 0x4097e5
40a57a: mov eax, dword ptr [r8]
40a57d: cmp eax, 2
40a580: je 0x40ae1c
40a586: cmp eax, 3
40a589: je 0x40ae0b
40a58f: cmp eax, 1
40a592: je 0x40ae2d
40a598: mov rdi, r8
40a59b: call 0x426a00
40a5a0: jmp 0x4097e5
40a5a5: mov rdi, qword ptr [r9 + 0x18]
40a5a9: mov qword ptr [rsp + 8], r8
40a5ae: mov qword ptr [rsp], r9
40a5b2: call 0x4073f0
40a5b7: mov r8, qword ptr [rsp + 8]
40a5bc: mov r9, qword ptr [rsp]
40a5c0: mov rdi, qword ptr [r9 + 0x10]
40a5c4: mov qword ptr [rsp + 8], r8
40a5c9: mov qword ptr [rsp], r9
40a5cd: call 0x4073f0
40a5d2: mov r8, qword ptr [rsp + 8]
40a5d7: mov r9, qword ptr [rsp]
40a5db: mov rdi, qword ptr [r9 + 8]
40a5df: mov qword ptr [rsp + 8], r8
40a5e4: mov qword ptr [rsp], r9
40a5e8: call 0x4073f0
40a5ed: mov r8, qword ptr [rsp + 8]
40a5f2: mov r9, qword ptr [rsp]
40a5f6: jmp 0x409693
40a5fb: mov rdi, qword ptr [r9 + 0x18]
40a5ff: mov qword ptr [rsp + 8], r8
40a604: mov qword ptr [rsp], r9
40a608: call 0x4073f0
40a60d: mov r8, qword ptr [rsp + 8]
40a612: mov r9, qword ptr [rsp]
40a616: mov rdi, qword ptr [r9 + 0x10]
40a61a: mov qword ptr [rsp + 8], r8
40a61f: mov qword ptr [rsp], r9
40a623: call 0x4073f0
40a628: mov r8, qword ptr [rsp + 8]
40a62d: mov r9, qword ptr [rsp]
40a631: mov rdi, qword ptr [r9 + 8]
40a635: mov qword ptr [rsp + 8], r8
40a63a: mov qword ptr [rsp], r9
40a63e: call 0x4073f0
40a643: mov r8, qword ptr [rsp + 8]
40a648: mov r9, qword ptr [rsp]
40a64c: jmp 0x4095c7
40a651: mov rdi, qword ptr [r9 + 0x18]
40a655: mov qword ptr [rsp + 8], r8
40a65a: mov qword ptr [rsp], r9
40a65e: call 0x4073f0
40a663: mov r8, qword ptr [rsp + 8]
40a668: mov r9, qword ptr [rsp]
40a66c: mov rdi, qword ptr [r9 + 0x10]
40a670: mov qword ptr [rsp + 8], r8
40a675: mov qword ptr [rsp], r9
40a679: call 0x4073f0
40a67e: mov r8, qword ptr [rsp + 8]
40a683: mov r9, qword ptr [rsp]
40a687: mov rdi, qword ptr [r9 + 8]
40a68b: mov qword ptr [rsp + 8], r8
40a690: mov qword ptr [rsp], r9
40a694: call 0x4073f0
40a699: mov r8, qword ptr [rsp + 8]
40a69e: mov r9, qword ptr [rsp]
40a6a2: jmp 0x408b0a
40a6a7: cmp eax, 1
40a6aa: jne 0x40865b
40a6b0: jmp 0x40864a
40a6b5: mov rdi, qword ptr [r9 + 0x18]
40a6b9: mov qword ptr [rsp + 8], r8
40a6be: mov qword ptr [rsp], r9
40a6c2: call 0x4073f0
40a6c7: mov r8, qword ptr [rsp + 8]
40a6cc: mov r9, qword ptr [rsp]
40a6d0: mov rdi, qword ptr [r9 + 0x10]
40a6d4: mov qword ptr [rsp + 8], r8
40a6d9: mov qword ptr [rsp], r9
40a6dd: call 0x4073f0
40a6e2: mov r8, qword ptr [rsp + 8]
40a6e7: mov r9, qword ptr [rsp]
40a6eb: mov rdi, qword ptr [r9 + 8]
40a6ef: mov qword ptr [rsp + 8], r8
40a6f4: mov qword ptr [rsp], r9
40a6f8: call 0x4073f0
40a6fd: mov r8, qword ptr [rsp + 8]
40a702: mov r9, qword ptr [rsp]
40a706: jmp 0x4089fa
40a70b: mov rdi, qword ptr [r9 + 0x18]
40a70f: mov qword ptr [rsp + 8], r8
40a714: mov qword ptr [rsp], r9
40a718: call 0x4073f0
40a71d: mov r8, qword ptr [rsp + 8]
40a722: mov r9, qword ptr [rsp]
40a726: mov rdi, qword ptr [r9 + 0x10]
40a72a: mov qword ptr [rsp + 8], r8
40a72f: mov qword ptr [rsp], r9
40a733: call 0x4073f0
40a738: mov r8, qword ptr [rsp + 8]
40a73d: mov r9, qword ptr [rsp]
40a741: mov rdi, qword ptr [r9 + 8]
40a745: mov qword ptr [rsp + 8], r8
40a74a: mov qword ptr [rsp], r9
40a74e: call 0x4073f0
40a753: mov r8, qword ptr [rsp + 8]
40a758: mov r9, qword ptr [rsp]
40a75c: jmp 0x4094fb
40a761: mov rdi, qword ptr [r9 + 0x18]
40a765: mov qword ptr [rsp + 8], r8
40a76a: mov qword ptr [rsp], r9
40a76e: call 0x4073f0
40a773: mov r8, qword ptr [rsp + 8]
40a778: mov r9, qword ptr [rsp]
40a77c: mov rdi, qword ptr [r9 + 0x10]
40a780: mov qword ptr [rsp + 8], r8
40a785: mov qword ptr [rsp], r9
40a789: call 0x4073f0
40a78e: mov r8, qword ptr [rsp + 8]
40a793: mov r9, qword ptr [rsp]
40a797: mov rdi, qword ptr [r9 + 8]
40a79b: mov qword ptr [rsp + 8], r8
40a7a0: mov qword ptr [rsp], r9
40a7a4: call 0x4073f0
40a7a9: mov r8, qword ptr [rsp + 8]
40a7ae: mov r9, qword ptr [rsp]
40a7b2: jmp 0x408a82
40a7b7: mov rdi, qword ptr [r9 + 0x18]
40a7bb: mov qword ptr [rsp + 8], r8
40a7c0: mov qword ptr [rsp], r9
40a7c4: call 0x4073f0
40a7c9: mov r8, qword ptr [rsp + 8]
40a7ce: mov r9, qword ptr [rsp]
40a7d2: mov rdi, qword ptr [r9 + 0x10]
40a7d6: mov qword ptr [rsp + 8], r8
40a7db: mov qword ptr [rsp], r9
40a7df: call 0x4073f0
40a7e4: mov r8, qword ptr [rsp + 8]
40a7e9: mov r9, qword ptr [rsp]
40a7ed: mov rdi, qword ptr [r9 + 8]
40a7f1: mov qword ptr [rsp + 8], r8
40a7f6: mov qword ptr [rsp], r9
40a7fa: call 0x4073f0
40a7ff: mov r8, qword ptr [rsp + 8]
40a804: mov r9, qword ptr [rsp]
40a808: jmp 0x408b92
40a80d: cmp eax, 1
40a810: jne 0x408717
40a816: jmp 0x408706
40a81b: mov rdi, qword ptr [r15 + 0x18]
40a81f: call 0x4073f0
40a824: mov rdi, qword ptr [r15 + 0x10]
40a828: call 0x4073f0
40a82d: mov r8, qword ptr [r15 + 8]
40a831: test r8, r8
40a834: je 0x407d37
40a83a: mov eax, dword ptr [r8]
40a83d: cmp eax, 2
40a840: je 0x40ade4
40a846: cmp eax, 3
40a849: je 0x40add3
40a84f: cmp eax, 1
40a852: je 0x40adf5
40a858: mov rdi, r8
40a85b: call 0x426a00
40a860: jmp 0x407d37
40a865: cmp eax, 1
40a868: jne 0x4087d3
40a86e: jmp 0x4087c2
40a873: mov rdi, qword ptr [r9 + 0x18]
40a877: mov qword ptr [rsp + 8], r8
40a87c: mov qword ptr [rsp], r9
40a880: call 0x4073f0
40a885: mov r8, qword ptr [rsp + 8]
40a88a: mov r9, qword ptr [rsp]
40a88e: mov rdi, qword ptr [r9 + 0x10]
40a892: mov qword ptr [rsp + 8], r8
40a897: mov qword ptr [rsp], r9
40a89b: call 0x4073f0
40a8a0: mov r8, qword ptr [rsp + 8]
40a8a5: mov r9, qword ptr [rsp]
40a8a9: mov rdi, qword ptr [r9 + 8]
40a8ad: mov qword ptr [rsp + 8], r8
40a8b2: mov qword ptr [rsp], r9
40a8b6: call 0x4073f0
40a8bb: mov r8, qword ptr [rsp + 8]
40a8c0: mov r9, qword ptr [rsp]
40a8c4: jmp 0x40975f
40a8c9: mov rdi, qword ptr [r9 + 0x18]
40a8cd: mov qword ptr [rsp + 8], r8
40a8d2: mov qword ptr [rsp], r9
40a8d6: call 0x4073f0
40a8db: mov r8, qword ptr [rsp + 8]
40a8e0: mov r9, qword ptr [rsp]
40a8e4: mov rdi, qword ptr [r9 + 0x10]
40a8e8: mov qword ptr [rsp + 8], r8
40a8ed: mov qword ptr [rsp], r9
40a8f1: call 0x4073f0
40a8f6: mov r8, qword ptr [rsp + 8]
40a8fb: mov r9, qword ptr [rsp]
40a8ff: mov rdi, qword ptr [r9 + 8]
40a903: mov qword ptr [rsp + 8], r8
40a908: mov qword ptr [rsp], r9
40a90c: call 0x4073f0
40a911: mov r8, qword ptr [rsp + 8]
40a916: mov r9, qword ptr [rsp]
40a91a: jmp 0x408972
40a91f: mov rdi, qword ptr [r9 + 0x18]
40a923: mov qword ptr [rsp + 8], r8
40a928: mov qword ptr [rsp], r9
40a92c: call 0x4073f0
40a931: mov r8, qword ptr [rsp + 8]
40a936: mov r9, qword ptr [rsp]
40a93a: mov rdi, qword ptr [r9 + 0x10]
40a93e: mov qword ptr [rsp + 8], r8
40a943: mov qword ptr [rsp], r9
40a947: call 0x4073f0
40a94c: mov r8, qword ptr [rsp + 8]
40a951: mov r9, qword ptr [rsp]
40a955: mov rdi, qword ptr [r9 + 8]
40a959: mov qword ptr [rsp + 8], r8
40a95e: mov qword ptr [rsp], r9
40a962: call 0x4073f0
40a967: mov r8, qword ptr [rsp + 8]
40a96c: mov r9, qword ptr [rsp]
40a970: jmp 0x4088ea
40a975: mov rdi, qword ptr [r9 + 0x18]
40a979: mov qword ptr [rsp + 8], r8
40a97e: mov qword ptr [rsp], r9
40a982: call 0x4073f0
40a987: mov r8, qword ptr [rsp + 8]
40a98c: mov r9, qword ptr [rsp]
40a990: mov rdi, qword ptr [r9 + 0x10]
40a994: mov qword ptr [rsp + 8], r8
40a999: mov qword ptr [rsp], r9
40a99d: call 0x4073f0
40a9a2: mov r8, qword ptr [rsp + 8]
40a9a7: mov r9, qword ptr [rsp]
40a9ab: mov rdi, qword ptr [r9 + 8]
40a9af: mov qword ptr [rsp + 8], r8
40a9b4: mov qword ptr [rsp], r9
40a9b8: call 0x4073f0
40a9bd: mov r8, qword ptr [rsp + 8]
40a9c2: mov r9, qword ptr [rsp]
40a9c6: jmp 0x409ed2
40a9cb: mov rdi, qword ptr [r9 + 0x18]
40a9cf: mov qword ptr [rsp + 8], r8
40a9d4: mov qword ptr [rsp], r9
40a9d8: call 0x4073f0
40a9dd: mov r8, qword ptr [rsp + 8]
40a9e2: mov r9, qword ptr [rsp]
40a9e6: mov rdi, qword ptr [r9 + 0x10]
40a9ea: mov qword ptr [rsp + 8], r8
40a9ef: mov qword ptr [rsp], r9
40a9f3: call 0x4073f0
40a9f8: mov r8, qword ptr [rsp + 8]
40a9fd: mov r9, qword ptr [rsp]
40aa01: mov rdi, qword ptr [r9 + 8]
40aa05: mov qword ptr [rsp + 8], r8
40aa0a: mov qword ptr [rsp], r9
40aa0e: call 0x4073f0
40aa13: mov r8, qword ptr [rsp + 8]
40aa18: mov r9, qword ptr [rsp]
40aa1c: jmp 0x409e62
40aa21: mov rdi, qword ptr [r9 + 0x18]
40aa25: mov qword ptr [rsp + 8], r8
40aa2a: mov qword ptr [rsp], r9
40aa2e: call 0x4073f0
40aa33: mov r8, qword ptr [rsp + 8]
40aa38: mov r9, qword ptr [rsp]
40aa3c: mov rdi, qword ptr [r9 + 0x10]
40aa40: mov qword ptr [rsp + 8], r8
40aa45: mov qword ptr [rsp], r9
40aa49: call 0x4073f0
40aa4e: mov r8, qword ptr [rsp + 8]
40aa53: mov r9, qword ptr [rsp]
40aa57: mov rdi, qword ptr [r9 + 8]
40aa5b: mov qword ptr [rsp + 8], r8
40aa60: mov qword ptr [rsp], r9
40aa64: call 0x4073f0
40aa69: mov r8, qword ptr [rsp + 8]
40aa6e: mov r9, qword ptr [rsp]
40aa72: jmp 0x409e00
40aa77: mov rdi, qword ptr [r9 + 0x18]
40aa7b: mov qword ptr [rsp + 8], r8
40aa80: mov qword ptr [rsp], r9
40aa84: call 0x4073f0
40aa89: mov r8, qword ptr [rsp + 8]
40aa8e: mov r9, qword ptr [rsp]
40aa92: mov rdi, qword ptr [r9 + 0x10]
40aa96: mov qword ptr [rsp + 8], r8
40aa9b: mov qword ptr [rsp], r9
40aa9f: call 0x4073f0
40aaa4: mov r8, qword ptr [rsp + 8]
40aaa9: mov r9, qword ptr [rsp]
40aaad: mov rdi, qword ptr [r9 + 8]
40aab1: mov qword ptr [rsp + 8], r8
40aab6: mov qword ptr [rsp], r9
40aaba: call 0x4073f0
40aabf: mov r8, qword ptr [rsp + 8]
40aac4: mov r9, qword ptr [rsp]
40aac8: jmp 0x40a26e
40aacd: mov rdi, qword ptr [r9 + 0x18]
40aad1: mov qword ptr [rsp + 8], r8
40aad6: mov qword ptr [rsp], r9
40aada: call 0x4073f0
40aadf: mov r8, qword ptr [rsp + 8]
40aae4: mov r9, qword ptr [rsp]
40aae8: mov rdi, qword ptr [r9 + 0x10]
40aaec: mov qword ptr [rsp + 8], r8
40aaf1: mov qword ptr [rsp], r9
40aaf5: call 0x4073f0
40aafa: mov r8, qword ptr [rsp + 8]
40aaff: mov r9, qword ptr [rsp]
40ab03: mov rdi, qword ptr [r9 + 8]
40ab07: mov qword ptr [rsp + 8], r8
40ab0c: mov qword ptr [rsp], r9
40ab10: call 0x4073f0
40ab15: mov r8, qword ptr [rsp + 8]
40ab1a: mov r9, qword ptr [rsp]
40ab1e: jmp 0x40a20c
40ab23: mov rdi, qword ptr [r9 + 0x18]
40ab27: mov qword ptr [rsp + 8], r8
40ab2c: mov qword ptr [rsp], r9
40ab30: call 0x4073f0
40ab35: mov r8, qword ptr [rsp + 8]
40ab3a: mov r9, qword ptr [rsp]
40ab3e: mov rdi, qword ptr [r9 + 0x10]
40ab42: mov qword ptr [rsp + 8], r8
40ab47: mov qword ptr [rsp], r9
40ab4b: call 0x4073f0
40ab50: mov r8, qword ptr [rsp + 8]
40ab55: mov r9, qword ptr [rsp]
40ab59: mov rdi, qword ptr [r9 + 8]
40ab5d: mov qword ptr [rsp + 8], r8
40ab62: mov qword ptr [rsp], r9
40ab66: call 0x4073f0
40ab6b: mov r8, qword ptr [rsp + 8]
40ab70: mov r9, qword ptr [rsp]
40ab74: jmp 0x40a1aa
40ab79: mov rdi, qword ptr [r9 + 0x18]
40ab7d: mov qword ptr [rsp + 8], r8
40ab82: mov qword ptr [rsp], r9
40ab86: call 0x4073f0
40ab8b: mov r8, qword ptr [rsp + 8]
40ab90: mov r9, qword ptr [rsp]
40ab94: mov rdi, qword ptr [r9 + 0x10]
40ab98: mov qword ptr [rsp + 8], r8
40ab9d: mov qword ptr [rsp], r9
40aba1: call 0x4073f0
40aba6: mov r8, qword ptr [rsp + 8]
40abab: mov r9, qword ptr [rsp]
40abaf: mov rdi, qword ptr [r9 + 8]
40abb3: mov qword ptr [rsp + 8], r8
40abb8: mov qword ptr [rsp], r9
40abbc: call 0x4073f0
40abc1: mov r8, qword ptr [rsp + 8]
40abc6: mov r9, qword ptr [rsp]
40abca: jmp 0x40a148
40abcf: mov rdi, qword ptr [r9 + 0x18]
40abd3: mov qword ptr [rsp + 8], r8
40abd8: mov qword ptr [rsp], r9
40abdc: call 0x4073f0
40abe1: mov r8, qword ptr [rsp + 8]
40abe6: mov r9, qword ptr [rsp]
40abea: mov rdi, qword ptr [r9 + 0x10]
40abee: mov qword ptr [rsp + 8], r8
40abf3: mov qword ptr [rsp], r9
40abf7: call 0x4073f0
40abfc: mov r8, qword ptr [rsp + 8]
40ac01: mov r9, qword ptr [rsp]
40ac05: mov rdi, qword ptr [r9 + 8]
40ac09: mov qword ptr [rsp + 8], r8
40ac0e: mov qword ptr [rsp], r9
40ac12: call 0x4073f0
40ac17: mov r8, qword ptr [rsp + 8]
40ac1c: mov r9, qword ptr [rsp]
40ac20: jmp 0x40a0d8
40ac25: mov rdi, qword ptr [r9 + 0x18]
40ac29: mov qword ptr [rsp + 8], r8
40ac2e: mov qword ptr [rsp], r9
40ac32: call 0x4073f0
40ac37: mov r8, qword ptr [rsp + 8]
40ac3c: mov r9, qword ptr [rsp]
40ac40: mov rdi, qword ptr [r9 + 0x10]
40ac44: mov qword ptr [rsp + 8], r8
40ac49: mov qword ptr [rsp], r9
40ac4d: call 0x4073f0
40ac52: mov r8, qword ptr [rsp + 8]
40ac57: mov r9, qword ptr [rsp]
40ac5b: mov rdi, qword ptr [r9 + 8]
40ac5f: mov qword ptr [rsp + 8], r8
40ac64: mov qword ptr [rsp], r9
40ac68: call 0x4073f0
40ac6d: mov r8, qword ptr [rsp + 8]
40ac72: mov r9, qword ptr [rsp]
40ac76: jmp 0x40a076
40ac7b: mov rdi, qword ptr [r9 + 0x18]
40ac7f: mov qword ptr [rsp + 8], r8
40ac84: mov qword ptr [rsp], r9
40ac88: call 0x4073f0
40ac8d: mov r8, qword ptr [rsp + 8]
40ac92: mov r9, qword ptr [rsp]
40ac96: mov rdi, qword ptr [r9 + 0x10]
40ac9a: mov qword ptr [rsp + 8], r8
40ac9f: mov qword ptr [rsp], r9
40aca3: call 0x4073f0
40aca8: mov r8, qword ptr [rsp + 8]
40acad: mov r9, qword ptr [rsp]
40acb1: mov rdi, qword ptr [r9 + 8]
40acb5: mov qword ptr [rsp + 8], r8
40acba: mov qword ptr [rsp], r9
40acbe: call 0x4073f0
40acc3: mov r8, qword ptr [rsp + 8]
40acc8: mov r9, qword ptr [rsp]
40accc: jmp 0x40a014
40acd1: mov rdi, qword ptr [r9 + 0x18]
40acd5: mov qword ptr [rsp + 8], r8
40acda: mov qword ptr [rsp], r9
40acde: call 0x4073f0
40ace3: mov r8, qword ptr [rsp + 8]
40ace8: mov r9, qword ptr [rsp]
40acec: mov rdi, qword ptr [r9 + 0x10]
40acf0: mov qword ptr [rsp + 8], r8
40acf5: mov qword ptr [rsp], r9
40acf9: call 0x4073f0
40acfe: mov r8, qword ptr [rsp + 8]
40ad03: mov r9, qword ptr [rsp]
40ad07: mov rdi, qword ptr [r9 + 8]
40ad0b: mov qword ptr [rsp + 8], r8
40ad10: mov qword ptr [rsp], r9
40ad14: call 0x4073f0
40ad19: mov r8, qword ptr [rsp + 8]
40ad1e: mov r9, qword ptr [rsp]
40ad22: jmp 0x409fb2
40ad27: mov rdi, qword ptr [r9 + 0x18]
40ad2b: mov qword ptr [rsp + 8], r8
40ad30: mov qword ptr [rsp], r9
40ad34: call 0x4073f0
40ad39: mov r8, qword ptr [rsp + 8]
40ad3e: mov r9, qword ptr [rsp]
40ad42: mov rdi, qword ptr [r9 + 0x10]
40ad46: mov qword ptr [rsp + 8], r8
40ad4b: mov qword ptr [rsp], r9
40ad4f: call 0x4073f0
40ad54: mov r8, qword ptr [rsp + 8]
40ad59: mov r9, qword ptr [rsp]
40ad5d: mov rdi, qword ptr [r9 + 8]
40ad61: mov qword ptr [rsp + 8], r8
40ad66: mov qword ptr [rsp], r9
40ad6a: call 0x4073f0
40ad6f: mov r8, qword ptr [rsp + 8]
40ad74: mov r9, qword ptr [rsp]
40ad78: jmp 0x409f50
40ad7d: mov rdi, qword ptr [r9 + 0x18]
40ad81: mov qword ptr [rsp + 8], r8
40ad86: mov qword ptr [rsp], r9
40ad8a: call 0x4073f0
40ad8f: mov r8, qword ptr [rsp + 8]
40ad94: mov r9, qword ptr [rsp]
40ad98: mov rdi, qword ptr [r9 + 0x10]
40ad9c: mov qword ptr [rsp + 8], r8
40ada1: mov qword ptr [rsp], r9
40ada5: call 0x4073f0
40adaa: mov r8, qword ptr [rsp + 8]
40adaf: mov r9, qword ptr [rsp]
40adb3: mov rdi, qword ptr [r9 + 8]
40adb7: mov qword ptr [rsp + 8], r8
40adbc: mov qword ptr [rsp], r9
40adc0: call 0x4073f0
40adc5: mov r8, qword ptr [rsp + 8]
40adca: mov r9, qword ptr [rsp]
40adce: jmp 0x40a4b6
40add3: mov rdi, qword ptr [r8 + 0x18]
40add7: mov qword ptr [rsp], r8
40addb: call 0x4073f0
40ade0: mov r8, qword ptr [rsp]
40ade4: mov rdi, qword ptr [r8 + 0x10]
40ade8: mov qword ptr [rsp], r8
40adec: call 0x4073f0
40adf1: mov r8, qword ptr [rsp]
40adf5: mov rdi, qword ptr [r8 + 8]
40adf9: mov qword ptr [rsp], r8
40adfd: call 0x4073f0
40ae02: mov r8, qword ptr [rsp]
40ae06: jmp 0x40a858
40ae0b: mov rdi, qword ptr [r8 + 0x18]
40ae0f: mov qword ptr [rsp], r8
40ae13: call 0x4073f0
40ae18: mov r8, qword ptr [rsp]
40ae1c: mov rdi, qword ptr [r8 + 0x10]
40ae20: mov qword ptr [rsp], r8
40ae24: call 0x4073f0
40ae29: mov r8, qword ptr [rsp]
40ae2d: mov rdi, qword ptr [r8 + 8]
40ae31: mov qword ptr [rsp], r8
40ae35: call 0x4073f0
40ae3a: mov r8, qword ptr [rsp]
40ae3e: jmp 0x40a598
40ae43: mov rdi, qword ptr [r8 + 0x18]
40ae47: mov qword ptr [rsp], r8
40ae4b: call 0x4073f0
40ae50: mov r8, qword ptr [rsp]
40ae54: mov rdi, qword ptr [r8 + 0x10]
40ae58: mov qword ptr [rsp], r8
40ae5c: call 0x4073f0
40ae61: mov r8, qword ptr [rsp]
40ae65: mov rdi, qword ptr [r8 + 8]
40ae69: mov qword ptr [rsp], r8
40ae6d: call 0x4073f0
40ae72: mov r8, qword ptr [rsp]
40ae76: jmp 0x40a54e
40ae7b: mov rdi, qword ptr [r8 + 0x18]
40ae7f: mov qword ptr [rsp], r8
40ae83: call 0x4073f0
40ae88: mov r8, qword ptr [rsp]
40ae8c: mov rdi, qword ptr [r8 + 0x10]
40ae90: mov qword ptr [rsp], r8
40ae94: call 0x4073f0
40ae99: mov r8, qword ptr [rsp]
40ae9d: mov rdi, qword ptr [r8 + 8]
40aea1: mov qword ptr [rsp], r8
40aea5: call 0x4073f0
40aeaa: mov r8, qword ptr [rsp]
40aeae: jmp 0x409c5d
40aeb3: mov rdi, qword ptr [r8 + 0x18]
40aeb7: mov qword ptr [rsp], r8
40aebb: call 0x4073f0
40aec0: mov r8, qword ptr [rsp]
40aec4: mov rdi, qword ptr [r8 + 0x10]
40aec8: mov qword ptr [rsp], r8
40aecc: call 0x4073f0
40aed1: mov r8, qword ptr [rsp]
40aed5: mov rdi, qword ptr [r8 + 8]
40aed9: mov qword ptr [rsp], r8
40aedd: call 0x4073f0
40aee2: mov r8, qword ptr [rsp]
40aee6: jmp 0x409b7e
40aeeb: mov rdi, qword ptr [r8 + 0x18]
40aeef: mov qword ptr [rsp], r8
40aef3: call 0x4073f0
40aef8: mov r8, qword ptr [rsp]
40aefc: mov rdi, qword ptr [r8 + 0x10]
40af00: mov qword ptr [rsp], r8
40af04: call 0x4073f0
40af09: mov r8, qword ptr [rsp]
40af0d: mov rdi, qword ptr [r8 + 8]
40af11: mov qword ptr [rsp], r8
40af15: call 0x4073f0
40af1a: mov r8, qword ptr [rsp]
40af1e: jmp 0x409d2e
40af23: nop word ptr cs:[rax + rax]
40af2e: nop 
40af30: push r15
40af32: push r14
40af34: push r13
40af36: push r12
40af38: mov r12d, esi
40af3b: push rbp
40af3c: push rbx
40af3d: sub rsp, 0x18
40af41: test edi, edi
40af43: je 0x40e575
40af49: lea r14d, [rdi - 1]
40af4d: mov r13, rdx
40af50: movsxd rbx, r14d
40af53: cmp qword ptr [rdx + rbx*8], 0
40af58: je 0x40b03e
40af5e: mov ebp, edi
40af60: lea eax, [rdi - 2]
40af63: cmp edi, 1
40af66: je 0x40af84
40af68: cdqe 
40af6a: cmp qword ptr [rdx + rax*8], 0
40af6f: je 0x40b03e
40af75: cmp edi, 2
40af78: je 0x40af84
40af7a: cmp qword ptr [rdx], 0
40af7e: je 0x40b03e
40af84: mov edi, 0x20
40af89: call 0x426410
40af8e: test rax, rax
40af91: je 0x40b03e
40af97: mov r14d, r14d
40af9a: lea rdi, [rbx*8 + 8]
40afa2: mov dword ptr [rax], ebp
40afa4: mov rdx, r14
40afa7: mov dword ptr [rax + 4], r12d
40afab: lea rsi, [r14*8 + 8]
40afb3: neg rdx
40afb6: shl rdx, 3
40afba: lea rcx, [rdx + rdi]
40afbe: lea rdx, [rdi + rdx - 8]
40afc3: add r13, rdx
40afc6: add rcx, rax
40afc9: mov rdx, qword ptr [r13]
40afcd: mov qword ptr [rcx], rdx
40afd0: mov edx, esi
40afd2: mov rdi, qword ptr [r13 + rdx - 8]
40afd7: mov qword ptr [rcx + rdx - 8], rdi
40afdc: lea rdi, [rcx + 8]
40afe0: and rdi, 0xfffffffffffffff8
40afe4: sub rcx, rdi
40afe7: sub r13, rcx
40afea: add ecx, esi
40afec: and ecx, 0xfffffff8
40afef: cmp ecx, 8
40aff2: jb 0x40b00b
40aff4: and ecx, 0xfffffff8
40aff7: xor esi, esi
40aff9: mov edx, esi
40affb: add esi, 8
40affe: mov r8, qword ptr [r13 + rdx]
40b003: mov qword ptr [rdi + rdx], r8
40b007: cmp esi, ecx
40b009: jb 0x40aff9
40b00b: add rsp, 0x18
40b00f: pop rbx
40b010: pop rbp
40b011: pop r12
40b013: pop r13
40b015: pop r14
40b017: pop r15
40b019: ret 
40b01a: nop word ptr [rax + rax]
40b020: cmp eax, 1
40b023: je 0x40b0b5
40b029: mov rdi, rbp
40b02c: call 0x426a00
40b031: sub rbx, 1
40b035: cmp ebx, -1
40b038: je 0x40b850
40b03e: mov rbp, qword ptr [r13 + rbx*8]
40b043: test rbp, rbp
40b046: je 0x40b031
40b048: mov eax, dword ptr [rbp]
40b04b: cmp eax, 2
40b04e: je 0x40b085
40b050: cmp eax, 3
40b053: jne 0x40b020
40b055: mov r12, qword ptr [rbp + 0x18]
40b059: test r12, r12
40b05c: je 0x40b085
40b05e: mov eax, dword ptr [r12]
40b062: cmp eax, 2
40b065: je 0x40b710
40b06b: cmp eax, 3
40b06e: je 0x40b6e0
40b074: cmp eax, 1
40b077: je 0x40b7d8
40b07d: mov rdi, r12
40b080: call 0x426a00
40b085: mov r12, qword ptr [rbp + 0x10]
40b089: test r12, r12
40b08c: je 0x40b0b5
40b08e: mov eax, dword ptr [r12]
40b092: cmp eax, 2
40b095: je 0x40b248
40b09b: cmp eax, 3
40b09e: je 0x40b180
40b0a4: cmp eax, 1
40b0a7: je 0x40b360
40b0ad: mov rdi, r12
40b0b0: call 0x426a00
40b0b5: mov r12, qword ptr [rbp + 8]
40b0b9: test r12, r12
40b0bc: je 0x40b029
40b0c2: mov eax, dword ptr [r12]
40b0c6: cmp eax, 2
40b0c9: je 0x40b118
40b0cb: cmp eax, 3
40b0ce: je 0x40b0e8
40b0d0: cmp eax, 1
40b0d3: je 0x40b148
40b0d5: mov rdi, r12
40b0d8: call 0x426a00
40b0dd: jmp 0x40b029
40b0e2: nop word ptr [rax + rax]
40b0e8: mov r14, qword ptr [r12 + 0x18]
40b0ed: test r14, r14
40b0f0: je 0x40b118
40b0f2: mov eax, dword ptr [r14]
40b0f5: cmp eax, 2
40b0f8: je 0x40bd9f
40b0fe: cmp eax, 3
40b101: je 0x40bd70
40b107: cmp eax, 1
40b10a: je 0x40bdce
40b110: mov rdi, r14
40b113: call 0x426a00
40b118: mov r14, qword ptr [r12 + 0x10]
40b11d: test r14, r14
40b120: je 0x40b148
40b122: mov eax, dword ptr [r14]
40b125: cmp eax, 2
40b128: je 0x40b5cf
40b12e: cmp eax, 3
40b131: je 0x40b5a0
40b137: cmp eax, 1
40b13a: je 0x40b5fe
40b140: mov rdi, r14
40b143: call 0x426a00
40b148: mov r14, qword ptr [r12 + 8]
40b14d: test r14, r14
40b150: je 0x40b0d5
40b152: mov eax, dword ptr [r14]
40b155: cmp eax, 2
40b158: je 0x40b480
40b15e: cmp eax, 3
40b161: je 0x40b3a0
40b167: cmp eax, 1
40b16a: je 0x40b4af
40b170: mov rdi, r14
40b173: call 0x426a00
40b178: jmp 0x40b0d5
40b17d: nop dword ptr [rax]
40b180: mov r14, qword ptr [r12 + 0x18]
40b185: test r14, r14
40b188: je 0x40b248
40b18e: mov eax, dword ptr [r14]
40b191: cmp eax, 2
40b194: je 0x40b1dc
40b196: cmp eax, 3
40b199: jne 0x40bcb0
40b19f: mov r15, qword ptr [r14 + 0x18]
40b1a3: test r15, r15
40b1a6: je 0x40b1dc
40b1a8: mov eax, dword ptr [r15]
40b1ab: cmp eax, 2
40b1ae: je 0x40b1c2
40b1b0: cmp eax, 3
40b1b3: jne 0x40c7f0
40b1b9: mov rdi, qword ptr [r15 + 0x18]
40b1bd: call 0x4073f0
40b1c2: mov rdi, qword ptr [r15 + 0x10]
40b1c6: call 0x4073f0
40b1cb: mov rdi, qword ptr [r15 + 8]
40b1cf: call 0x4073f0
40b1d4: mov rdi, r15
40b1d7: call 0x426a00
40b1dc: mov r15, qword ptr [r14 + 0x10]
40b1e0: test r15, r15
40b1e3: je 0x40b20b
40b1e5: mov eax, dword ptr [r15]
40b1e8: cmp eax, 2
40b1eb: je 0x40d7ab
40b1f1: cmp eax, 3
40b1f4: je 0x40d7a2
40b1fa: cmp eax, 1
40b1fd: je 0x40d7da
40b203: mov rdi, r15
40b206: call 0x426a00
40b20b: mov r15, qword ptr [r14 + 8]
40b20f: test r15, r15
40b212: je 0x40b23a
40b214: mov eax, dword ptr [r15]
40b217: cmp eax, 2
40b21a: je 0x40cba1
40b220: cmp eax, 3
40b223: je 0x40cb98
40b229: cmp eax, 1
40b22c: je 0x40cbf6
40b232: mov rdi, r15
40b235: call 0x426a00
40b23a: mov rdi, r14
40b23d: call 0x426a00
40b242: nop word ptr [rax + rax]
40b248: mov r14, qword ptr [r12 + 0x10]
40b24d: test r14, r14
40b250: je 0x40b360
40b256: mov eax, dword ptr [r14]
40b259: cmp eax, 2
40b25c: je 0x40b296
40b25e: cmp eax, 3
40b261: jne 0x40b580
40b267: mov r15, qword ptr [r14 + 0x18]
40b26b: test r15, r15
40b26e: je 0x40b296
40b270: mov eax, dword ptr [r15]
40b273: cmp eax, 2
40b276: je 0x40d94d
40b27c: cmp eax, 3
40b27f: je 0x40d944
40b285: cmp eax, 1
40b288: je 0x40d97c
40b28e: mov rdi, r15
40b291: call 0x426a00
40b296: mov r15, qword ptr [r14 + 0x10]
40b29a: test r15, r15
40b29d: je 0x40b328
40b2a3: mov eax, dword ptr [r15]
40b2a6: cmp eax, 2
40b2a9: je 0x40b2bd
40b2ab: cmp eax, 3
40b2ae: jne 0x40b830
40b2b4: mov rdi, qword ptr [r15 + 0x18]
40b2b8: call 0x4073f0
40b2bd: mov r8, qword ptr [r15 + 0x10]
40b2c1: test r8, r8
40b2c4: je 0x40b2ec
40b2c6: mov eax, dword ptr [r8]
40b2c9: cmp eax, 2
40b2cc: je 0x40e0dc
40b2d2: cmp eax, 3
40b2d5: je 0x40e0cb
40b2db: cmp eax, 1
40b2de: je 0x40e0ed
40b2e4: mov rdi, r8
40b2e7: call 0x426a00
40b2ec: mov r8, qword ptr [r15 + 8]
40b2f0: test r8, r8
40b2f3: je 0x40b31b
40b2f5: mov eax, dword ptr [r8]
40b2f8: cmp eax, 2
40b2fb: je 0x40d233
40b301: cmp eax, 3
40b304: je 0x40d222
40b30a: cmp eax, 1
40b30d: je 0x40d2ae
40b313: mov rdi, r8
40b316: call 0x426a00
40b31b: mov rdi, r15
40b31e: call 0x426a00
40b323: nop dword ptr [rax + rax]
40b328: mov r15, qword ptr [r14 + 8]
40b32c: test r15, r15
40b32f: je 0x40b357
40b331: mov eax, dword ptr [r15]
40b334: cmp eax, 2
40b337: je 0x40bf65
40b33d: cmp eax, 3
40b340: je 0x40bf10
40b346: cmp eax, 1
40b349: je 0x40bf94
40b34f: mov rdi, r15
40b352: call 0x426a00
40b357: mov rdi, r14
40b35a: call 0x426a00
40b35f: nop 
40b360: mov r14, qword ptr [r12 + 8]
40b365: test r14, r14
40b368: je 0x40b0ad
40b36e: mov eax, dword ptr [r14]
40b371: cmp eax, 2
40b374: je 0x40b66f
40b37a: cmp eax, 3
40b37d: je 0x40b640
40b383: cmp eax, 1
40b386: je 0x40b69e
40b38c: mov rdi, r14
40b38f: call 0x426a00
40b394: jmp 0x40b0ad
40b399: nop dword ptr [rax]
40b3a0: mov r15, qword ptr [r14 + 0x18]
40b3a4: test r15, r15
40b3a7: je 0x40b480
40b3ad: mov eax, dword ptr [r15]
40b3b0: cmp eax, 2
40b3b3: je 0x40b413
40b3b5: cmp eax, 3
40b3b8: jne 0x40be10
40b3be: mov r8, qword ptr [r15 + 0x18]
40b3c2: test r8, r8
40b3c5: je 0x40b413
40b3c7: mov eax, dword ptr [r8]
40b3ca: cmp eax, 2
40b3cd: je 0x40b3e9
40b3cf: cmp eax, 3
40b3d2: jne 0x40c7fe
40b3d8: mov rdi, qword ptr [r8 + 0x18]
40b3dc: mov qword ptr [rsp], r8
40b3e0: call 0x4073f0
40b3e5: mov r8, qword ptr [rsp]
40b3e9: mov rdi, qword ptr [r8 + 0x10]
40b3ed: mov qword ptr [rsp], r8
40b3f1: call 0x4073f0
40b3f6: mov r8, qword ptr [rsp]
40b3fa: mov rdi, qword ptr [r8 + 8]
40b3fe: mov qword ptr [rsp], r8
40b402: call 0x4073f0
40b407: mov r8, qword ptr [rsp]
40b40b: mov rdi, r8
40b40e: call 0x426a00
40b413: mov r8, qword ptr [r15 + 0x10]
40b417: test r8, r8
40b41a: je 0x40b442
40b41c: mov eax, dword ptr [r8]
40b41f: cmp eax, 2
40b422: je 0x40dce2
40b428: cmp eax, 3
40b42b: je 0x40dcd1
40b431: cmp eax, 1
40b434: je 0x40dcf3
40b43a: mov rdi, r8
40b43d: call 0x426a00
40b442: mov r8, qword ptr [r15 + 8]
40b446: test r8, r8
40b449: je 0x40b471
40b44b: mov eax, dword ptr [r8]
40b44e: cmp eax, 2
40b451: je 0x40cf03
40b457: cmp eax, 3
40b45a: je 0x40cef2
40b460: cmp eax, 1
40b463: je 0x40cf7e
40b469: mov rdi, r8
40b46c: call 0x426a00
40b471: mov rdi, r15
40b474: call 0x426a00
40b479: nop dword ptr [rax]
40b480: mov r15, qword ptr [r14 + 0x10]
40b484: test r15, r15
40b487: je 0x40b4af
40b489: mov eax, dword ptr [r15]
40b48c: cmp eax, 2
40b48f: je 0x40b9af
40b495: cmp eax, 3
40b498: je 0x40b980
40b49e: cmp eax, 1
40b4a1: je 0x40ba58
40b4a7: mov rdi, r15
40b4aa: call 0x426a00
40b4af: mov r15, qword ptr [r14 + 8]
40b4b3: test r15, r15
40b4b6: je 0x40b170
40b4bc: mov eax, dword ptr [r15]
40b4bf: cmp eax, 2
40b4c2: je 0x40b50f
40b4c4: cmp eax, 3
40b4c7: je 0x40b4e0
40b4c9: cmp eax, 1
40b4cc: je 0x40b53e
40b4ce: mov rdi, r15
40b4d1: call 0x426a00
40b4d6: jmp 0x40b170
40b4db: nop dword ptr [rax + rax]
40b4e0: mov r8, qword ptr [r15 + 0x18]
40b4e4: test r8, r8
40b4e7: je 0x40b50f
40b4e9: mov eax, dword ptr [r8]
40b4ec: cmp eax, 2
40b4ef: je 0x40ce37
40b4f5: cmp eax, 3
40b4f8: je 0x40ce26
40b4fe: cmp eax, 1
40b501: je 0x40ceb2
40b507: mov rdi, r8
40b50a: call 0x426a00
40b50f: mov r8, qword ptr [r15 + 0x10]
40b513: test r8, r8
40b516: je 0x40b53e
40b518: mov eax, dword ptr [r8]
40b51b: cmp eax, 2
40b51e: je 0x40c243
40b524: cmp eax, 3
40b527: je 0x40c1c8
40b52d: cmp eax, 1
40b530: je 0x40c27a
40b536: mov rdi, r8
40b539: call 0x426a00
40b53e: mov r8, qword ptr [r15 + 8]
40b542: test r8, r8
40b545: je 0x40b4ce
40b547: mov eax, dword ptr [r8]
40b54a: cmp eax, 2
40b54d: je 0x40bbd7
40b553: cmp eax, 3
40b556: je 0x40bba0
40b55c: cmp eax, 1
40b55f: je 0x40bc0e
40b565: mov rdi, r8
40b568: call 0x426a00
40b56d: mov rdi, r15
40b570: call 0x426a00
40b575: jmp 0x40b170
40b57a: nop word ptr [rax + rax]
40b580: cmp eax, 1
40b583: je 0x40b328
40b589: mov rdi, r14
40b58c: call 0x426a00
40b591: jmp 0x40b360
40b596: nop word ptr cs:[rax + rax]
40b5a0: mov r15, qword ptr [r14 + 0x18]
40b5a4: test r15, r15
40b5a7: je 0x40b5cf
40b5a9: mov eax, dword ptr [r15]
40b5ac: cmp eax, 2
40b5af: je 0x40cb0b
40b5b5: cmp eax, 3
40b5b8: je 0x40cb02
40b5be: cmp eax, 1
40b5c1: je 0x40cb60
40b5c7: mov rdi, r15
40b5ca: call 0x426a00
40b5cf: mov r15, qword ptr [r14 + 0x10]
40b5d3: test r15, r15
40b5d6: je 0x40b5fe
40b5d8: mov eax, dword ptr [r15]
40b5db: cmp eax, 2
40b5de: je 0x40c045
40b5e4: cmp eax, 3
40b5e7: je 0x40bff0
40b5ed: cmp eax, 1
40b5f0: je 0x40c074
40b5f6: mov rdi, r15
40b5f9: call 0x426a00
40b5fe: mov r15, qword ptr [r14 + 8]
40b602: test r15, r15
40b605: je 0x40b140
40b60b: mov eax, dword ptr [r15]
40b60e: cmp eax, 2
40b611: je 0x40babf
40b617: cmp eax, 3
40b61a: je 0x40ba90
40b620: cmp eax, 1
40b623: je 0x40bb68
40b629: mov rdi, r15
40b62c: call 0x426a00
40b631: jmp 0x40b140
40b636: nop word ptr cs:[rax + rax]
40b640: mov r15, qword ptr [r14 + 0x18]
40b644: test r15, r15
40b647: je 0x40b66f
40b649: mov eax, dword ptr [r15]
40b64c: cmp eax, 2
40b64f: je 0x40cccd
40b655: cmp eax, 3
40b658: je 0x40ccc4
40b65e: cmp eax, 1
40b661: je 0x40cd22
40b667: mov rdi, r15
40b66a: call 0x426a00
40b66f: mov r15, qword ptr [r14 + 0x10]
40b673: test r15, r15
40b676: je 0x40b69e
40b678: mov eax, dword ptr [r15]
40b67b: cmp eax, 2
40b67e: je 0x40be85
40b684: cmp eax, 3
40b687: je 0x40be30
40b68d: cmp eax, 1
40b690: je 0x40beb4
40b696: mov rdi, r15
40b699: call 0x426a00
40b69e: mov r15, qword ptr [r14 + 8]
40b6a2: test r15, r15
40b6a5: je 0x40b38c
40b6ab: mov eax, dword ptr [r15]
40b6ae: cmp eax, 2
40b6b1: je 0x40b897
40b6b7: cmp eax, 3
40b6ba: je 0x40b868
40b6c0: cmp eax, 1
40b6c3: je 0x40b940
40b6c9: mov rdi, r15
40b6cc: call 0x426a00
40b6d1: jmp 0x40b38c
40b6d6: nop word ptr cs:[rax + rax]
40b6e0: mov r14, qword ptr [r12 + 0x18]
40b6e5: test r14, r14
40b6e8: je 0x40b710
40b6ea: mov eax, dword ptr [r14]
40b6ed: cmp eax, 2
40b6f0: je 0x40d3c3
40b6f6: cmp eax, 3
40b6f9: je 0x40d3ba
40b6ff: cmp eax, 1
40b702: je 0x40d400
40b708: mov rdi, r14
40b70b: call 0x426a00
40b710: mov r14, qword ptr [r12 + 0x10]
40b715: test r14, r14
40b718: je 0x40b7d8
40b71e: mov eax, dword ptr [r14]
40b721: cmp eax, 2
40b724: je 0x40b76c
40b726: cmp eax, 3
40b729: jne 0x40b818
40b72f: mov r15, qword ptr [r14 + 0x18]
40b733: test r15, r15
40b736: je 0x40b76c
40b738: mov eax, dword ptr [r15]
40b73b: cmp eax, 2
40b73e: je 0x40b752
40b740: cmp eax, 3
40b743: jne 0x40c7e2
40b749: mov rdi, qword ptr [r15 + 0x18]
40b74d: call 0x4073f0
40b752: mov rdi, qword ptr [r15 + 0x10]
40b756: call 0x4073f0
40b75b: mov rdi, qword ptr [r15 + 8]
40b75f: call 0x4073f0
40b764: mov rdi, r15
40b767: call 0x426a00
40b76c: mov r15, qword ptr [r14 + 0x10]
40b770: test r15, r15
40b773: je 0x40b79b
40b775: mov eax, dword ptr [r15]
40b778: cmp eax, 2
40b77b: je 0x40d8b4
40b781: cmp eax, 3
40b784: je 0x40d8ab
40b78a: cmp eax, 1
40b78d: je 0x40d8e3
40b793: mov rdi, r15
40b796: call 0x426a00
40b79b: mov r15, qword ptr [r14 + 8]
40b79f: test r15, r15
40b7a2: je 0x40b7ca
40b7a4: mov eax, dword ptr [r15]
40b7a7: cmp eax, 2
40b7aa: je 0x40cc37
40b7b0: cmp eax, 3
40b7b3: je 0x40cc2e
40b7b9: cmp eax, 1
40b7bc: je 0x40cc8c
40b7c2: mov rdi, r15
40b7c5: call 0x426a00
40b7ca: mov rdi, r14
40b7cd: call 0x426a00
40b7d2: nop word ptr [rax + rax]
40b7d8: mov r14, qword ptr [r12 + 8]
40b7dd: test r14, r14
40b7e0: je 0x40b07d
40b7e6: mov eax, dword ptr [r14]
40b7e9: cmp eax, 2
40b7ec: je 0x40bcff
40b7f2: cmp eax, 3
40b7f5: je 0x40bcd0
40b7fb: cmp eax, 1
40b7fe: je 0x40bd2e
40b804: mov rdi, r14
40b807: call 0x426a00
40b80c: jmp 0x40b07d
40b811: nop dword ptr [rax]
40b818: cmp eax, 1
40b81b: je 0x40b79b
40b821: mov rdi, r14
40b824: call 0x426a00
40b829: jmp 0x40b7d8
40b82b: nop dword ptr [rax + rax]
40b830: cmp eax, 1
40b833: je 0x40b2ec
40b839: mov rdi, r15
40b83c: call 0x426a00
40b841: jmp 0x40b328
40b846: nop word ptr cs:[rax + rax]
40b850: add rsp, 0x18
40b854: xor eax, eax
40b856: pop rbx
40b857: pop rbp
40b858: pop r12
40b85a: pop r13
40b85c: pop r14
40b85e: pop r15
40b860: ret 
40b861: nop dword ptr [rax]
40b868: mov r8, qword ptr [r15 + 0x18]
40b86c: test r8, r8
40b86f: je 0x40b897
40b871: mov eax, dword ptr [r8]
40b874: cmp eax, 2
40b877: je 0x40dc02
40b87d: cmp eax, 3
40b880: je 0x40dbf1
40b886: cmp eax, 1
40b889: je 0x40dc13
40b88f: mov rdi, r8
40b892: call 0x426a00
40b897: mov r8, qword ptr [r15 + 0x10]
40b89b: test r8, r8
40b89e: je 0x40b940
40b8a4: mov eax, dword ptr [r8]
40b8a7: cmp eax, 2
40b8aa: je 0x40b8c6
40b8ac: cmp eax, 3
40b8af: jne 0x40bfd0
40b8b5: mov rdi, qword ptr [r8 + 0x18]
40b8b9: mov qword ptr [rsp], r8
40b8bd: call 0x4073f0
40b8c2: mov r8, qword ptr [rsp]
40b8c6: mov r9, qword ptr [r8 + 0x10]
40b8ca: test r9, r9
40b8cd: je 0x40b8fd
40b8cf: mov eax, dword ptr [r9]
40b8d2: cmp eax, 2
40b8d5: je 0x40e2f8
40b8db: cmp eax, 3
40b8de: je 0x40e2dd
40b8e4: cmp eax, 1
40b8e7: je 0x40e313
40b8ed: mov rdi, r9
40b8f0: mov qword ptr [rsp], r8
40b8f4: call 0x426a00
40b8f9: mov r8, qword ptr [rsp]
40b8fd: mov r9, qword ptr [r8 + 8]
40b901: test r9, r9
40b904: je 0x40b934
40b906: mov eax, dword ptr [r9]
40b909: cmp eax, 2
40b90c: je 0x40d657
40b912: cmp eax, 3
40b915: je 0x40d63c
40b91b: cmp eax, 1
40b91e: je 0x40d672
40b924: mov rdi, r9
40b927: mov qword ptr [rsp], r8
40b92b: call 0x426a00
40b930: mov r8, qword ptr [rsp]
40b934: mov rdi, r8
40b937: call 0x426a00
40b93c: nop dword ptr [rax]
40b940: mov r8, qword ptr [r15 + 8]
40b944: test r8, r8
40b947: je 0x40b6c9
40b94d: mov eax, dword ptr [r8]
40b950: cmp eax, 2
40b953: je 0x40c14b
40b959: cmp eax, 3
40b95c: je 0x40c0d0
40b962: cmp eax, 1
40b965: je 0x40c182
40b96b: mov rdi, r8
40b96e: call 0x426a00
40b973: jmp 0x40b6c9
40b978: nop dword ptr [rax + rax]
40b980: mov r8, qword ptr [r15 + 0x18]
40b984: test r8, r8
40b987: je 0x40b9af
40b989: mov eax, dword ptr [r8]
40b98c: cmp eax, 2
40b98f: je 0x40dd52
40b995: cmp eax, 3
40b998: je 0x40dd41
40b99e: cmp eax, 1
40b9a1: je 0x40dd63
40b9a7: mov rdi, r8
40b9aa: call 0x426a00
40b9af: mov r8, qword ptr [r15 + 0x10]
40b9b3: test r8, r8
40b9b6: je 0x40ba58
40b9bc: mov eax, dword ptr [r8]
40b9bf: cmp eax, 2
40b9c2: je 0x40b9de
40b9c4: cmp eax, 3
40b9c7: jne 0x40c0b0
40b9cd: mov rdi, qword ptr [r8 + 0x18]
40b9d1: mov qword ptr [rsp], r8
40b9d5: call 0x4073f0
40b9da: mov r8, qword ptr [rsp]
40b9de: mov r9, qword ptr [r8 + 0x10]
40b9e2: test r9, r9
40b9e5: je 0x40ba15
40b9e7: mov eax, dword ptr [r9]
40b9ea: cmp eax, 2
40b9ed: je 0x40e48e
40b9f3: cmp eax, 3
40b9f6: je 0x40e473
40b9fc: cmp eax, 1
40b9ff: je 0x40e4a9
40ba05: mov rdi, r9
40ba08: mov qword ptr [rsp], r8
40ba0c: call 0x426a00
40ba11: mov r8, qword ptr [rsp]
40ba15: mov r9, qword ptr [r8 + 8]
40ba19: test r9, r9
40ba1c: je 0x40ba4c
40ba1e: mov eax, dword ptr [r9]
40ba21: cmp eax, 2
40ba24: je 0x40d601
40ba2a: cmp eax, 3
40ba2d: je 0x40d5e6
40ba33: cmp eax, 1
40ba36: je 0x40d61c
40ba3c: mov rdi, r9
40ba3f: mov qword ptr [rsp], r8
40ba43: call 0x426a00
40ba48: mov r8, qword ptr [rsp]
40ba4c: mov rdi, r8
40ba4f: call 0x426a00
40ba54: nop dword ptr [rax]
40ba58: mov r8, qword ptr [r15 + 8]
40ba5c: test r8, r8
40ba5f: je 0x40b4a7
40ba65: mov eax, dword ptr [r8]
40ba68: cmp eax, 2
40ba6b: je 0x40c33b
40ba71: cmp eax, 3
40ba74: je 0x40c2c0
40ba7a: cmp eax, 1
40ba7d: je 0x40c372
40ba83: mov rdi, r8
40ba86: call 0x426a00
40ba8b: jmp 0x40b4a7
40ba90: mov r8, qword ptr [r15 + 0x18]
40ba94: test r8, r8
40ba97: je 0x40babf
40ba99: mov eax, dword ptr [r8]
40ba9c: cmp eax, 2
40ba9f: je 0x40ddb4
40baa5: cmp eax, 3
40baa8: je 0x40dda3
40baae: cmp eax, 1
40bab1: je 0x40ddc5
40bab7: mov rdi, r8
40baba: call 0x426a00
40babf: mov r8, qword ptr [r15 + 0x10]
40bac3: test r8, r8
40bac6: je 0x40bb68
40bacc: mov eax, dword ptr [r8]
40bacf: cmp eax, 2
40bad2: je 0x40baee
40bad4: cmp eax, 3
40bad7: jne 0x40bef0
40badd: mov rdi, qword ptr [r8 + 0x18]
40bae1: mov qword ptr [rsp], r8
40bae5: call 0x4073f0
40baea: mov r8, qword ptr [rsp]
40baee: mov r9, qword ptr [r8 + 0x10]
40baf2: test r9, r9
40baf5: je 0x40bb25
40baf7: mov eax, dword ptr [r9]
40bafa: cmp eax, 2
40bafd: je 0x40e4e4
40bb03: cmp eax, 3
40bb06: je 0x40e4c9
40bb0c: cmp eax, 1
40bb0f: je 0x40e4ff
40bb15: mov rdi, r9
40bb18: mov qword ptr [rsp], r8
40bb1c: call 0x426a00
40bb21: mov r8, qword ptr [rsp]
40bb25: mov r9, qword ptr [r8 + 8]
40bb29: test r9, r9
40bb2c: je 0x40bb5c
40bb2e: mov eax, dword ptr [r9]
40bb31: cmp eax, 2
40bb34: je 0x40d759
40bb3a: cmp eax, 3
40bb3d: je 0x40d73e
40bb43: cmp eax, 1
40bb46: je 0x40d774
40bb4c: mov rdi, r9
40bb4f: mov qword ptr [rsp], r8
40bb53: call 0x426a00
40bb58: mov r8, qword ptr [rsp]
40bb5c: mov rdi, r8
40bb5f: call 0x426a00
40bb64: nop dword ptr [rax]
40bb68: mov r8, qword ptr [r15 + 8]
40bb6c: test r8, r8
40bb6f: je 0x40b629
40bb75: mov eax, dword ptr [r8]
40bb78: cmp eax, 2
40bb7b: je 0x40c433
40bb81: cmp eax, 3
40bb84: je 0x40c3b8
40bb8a: cmp eax, 1
40bb8d: je 0x40c46a
40bb93: mov rdi, r8
40bb96: call 0x426a00
40bb9b: jmp 0x40b629
40bba0: mov r9, qword ptr [r8 + 0x18]
40bba4: test r9, r9
40bba7: je 0x40bbd7
40bba9: mov eax, dword ptr [r9]
40bbac: cmp eax, 2
40bbaf: je 0x40df00
40bbb5: cmp eax, 3
40bbb8: je 0x40dee5
40bbbe: cmp eax, 1
40bbc1: je 0x40df1b
40bbc7: mov rdi, r9
40bbca: mov qword ptr [rsp], r8
40bbce: call 0x426a00
40bbd3: mov r8, qword ptr [rsp]
40bbd7: mov r9, qword ptr [r8 + 0x10]
40bbdb: test r9, r9
40bbde: je 0x40bc0e
40bbe0: mov eax, dword ptr [r9]
40bbe3: cmp eax, 2
40bbe6: je 0x40c945
40bbec: cmp eax, 3
40bbef: je 0x40c92a
40bbf5: cmp eax, 1
40bbf8: je 0x40c960
40bbfe: mov rdi, r9
40bc01: mov qword ptr [rsp], r8
40bc05: call 0x426a00
40bc0a: mov r8, qword ptr [rsp]
40bc0e: mov r9, qword ptr [r8 + 8]
40bc12: test r9, r9
40bc15: je 0x40b565
40bc1b: mov eax, dword ptr [r9]
40bc1e: cmp eax, 2
40bc21: je 0x40bc63
40bc23: cmp eax, 3
40bc26: je 0x40bc48
40bc28: cmp eax, 1
40bc2b: je 0x40bc7e
40bc2d: mov rdi, r9
40bc30: mov qword ptr [rsp], r8
40bc34: call 0x426a00
40bc39: mov r8, qword ptr [rsp]
40bc3d: jmp 0x40b565
40bc42: nop word ptr [rax + rax]
40bc48: mov rdi, qword ptr [r9 + 0x18]
40bc4c: mov qword ptr [rsp + 8], r8
40bc51: mov qword ptr [rsp], r9
40bc55: call 0x4073f0
40bc5a: mov r8, qword ptr [rsp + 8]
40bc5f: mov r9, qword ptr [rsp]
40bc63: mov rdi, qword ptr [r9 + 0x10]
40bc67: mov qword ptr [rsp + 8], r8
40bc6c: mov qword ptr [rsp], r9
40bc70: call 0x4073f0
40bc75: mov r8, qword ptr [rsp + 8]
40bc7a: mov r9, qword ptr [rsp]
40bc7e: mov rdi, qword ptr [r9 + 8]
40bc82: mov qword ptr [rsp + 8], r8
40bc87: mov qword ptr [rsp], r9
40bc8b: call 0x4073f0
40bc90: mov r9, qword ptr [rsp]
40bc94: mov r8, qword ptr [rsp + 8]
40bc99: mov rdi, r9
40bc9c: mov qword ptr [rsp], r8
40bca0: call 0x426a00
40bca5: mov r8, qword ptr [rsp]
40bca9: jmp 0x40b565
40bcae: nop 
40bcb0: cmp eax, 1
40bcb3: je 0x40b20b
40bcb9: mov rdi, r14
40bcbc: call 0x426a00
40bcc1: jmp 0x40b248
40bcc6: nop word ptr cs:[rax + rax]
40bcd0: mov r15, qword ptr [r14 + 0x18]
40bcd4: test r15, r15
40bcd7: je 0x40bcff
40bcd9: mov eax, dword ptr [r15]
40bcdc: cmp eax, 2
40bcdf: je 0x40e3dc
40bce5: cmp eax, 3
40bce8: je 0x40e3d3
40bcee: cmp eax, 1
40bcf1: je 0x40e3e5
40bcf7: mov rdi, r15
40bcfa: call 0x426a00
40bcff: mov r15, qword ptr [r14 + 0x10]
40bd03: test r15, r15
40bd06: je 0x40bd2e
40bd08: mov eax, dword ptr [r15]
40bd0b: cmp eax, 2
40bd0e: je 0x40ca75
40bd14: cmp eax, 3
40bd17: je 0x40ca6c
40bd1d: cmp eax, 1
40bd20: je 0x40caca
40bd26: mov rdi, r15
40bd29: call 0x426a00
40bd2e: mov r15, qword ptr [r14 + 8]
40bd32: test r15, r15
40bd35: je 0x40b804
40bd3b: mov eax, dword ptr [r15]
40bd3e: cmp eax, 2
40bd41: je 0x40c4ff
40bd47: cmp eax, 3
40bd4a: je 0x40c4aa
40bd50: cmp eax, 1
40bd53: je 0x40c52e
40bd59: mov rdi, r15
40bd5c: call 0x426a00
40bd61: jmp 0x40b804
40bd66: nop word ptr cs:[rax + rax]
40bd70: mov r15, qword ptr [r14 + 0x18]
40bd74: test r15, r15
40bd77: je 0x40bd9f
40bd79: mov eax, dword ptr [r15]
40bd7c: cmp eax, 2
40bd7f: je 0x40e1f0
40bd85: cmp eax, 3
40bd88: je 0x40e1e7
40bd8e: cmp eax, 1
40bd91: je 0x40e1f9
40bd97: mov rdi, r15
40bd9a: call 0x426a00
40bd9f: mov r15, qword ptr [r14 + 0x10]
40bda3: test r15, r15
40bda6: je 0x40bdce
40bda8: mov eax, dword ptr [r15]
40bdab: cmp eax, 2
40bdae: je 0x40c9df
40bdb4: cmp eax, 3
40bdb7: je 0x40c9d6
40bdbd: cmp eax, 1
40bdc0: je 0x40ca34
40bdc6: mov rdi, r15
40bdc9: call 0x426a00
40bdce: mov r15, qword ptr [r14 + 8]
40bdd2: test r15, r15
40bdd5: je 0x40b110
40bddb: mov eax, dword ptr [r15]
40bdde: cmp eax, 2
40bde1: je 0x40c5c3
40bde7: cmp eax, 3
40bdea: je 0x40c56e
40bdf0: cmp eax, 1
40bdf3: je 0x40c5f2
40bdf9: mov rdi, r15
40bdfc: call 0x426a00
40be01: jmp 0x40b110
40be06: nop word ptr cs:[rax + rax]
40be10: cmp eax, 1
40be13: je 0x40b442
40be19: mov rdi, r15
40be1c: call 0x426a00
40be21: jmp 0x40b480
40be26: nop word ptr cs:[rax + rax]
40be30: mov r8, qword ptr [r15 + 0x18]
40be34: test r8, r8
40be37: je 0x40be85
40be39: mov eax, dword ptr [r8]
40be3c: cmp eax, 2
40be3f: je 0x40be5b
40be41: cmp eax, 3
40be44: jne 0x40d865
40be4a: mov rdi, qword ptr [r8 + 0x18]
40be4e: mov qword ptr [rsp], r8
40be52: call 0x4073f0
40be57: mov r8, qword ptr [rsp]
40be5b: mov rdi, qword ptr [r8 + 0x10]
40be5f: mov qword ptr [rsp], r8
40be63: call 0x4073f0
40be68: mov r8, qword ptr [rsp]
40be6c: mov rdi, qword ptr [r8 + 8]
40be70: mov qword ptr [rsp], r8
40be74: call 0x4073f0
40be79: mov r8, qword ptr [rsp]
40be7d: mov rdi, r8
40be80: call 0x426a00
40be85: mov r8, qword ptr [r15 + 0x10]
40be89: test r8, r8
40be8c: je 0x40beb4
40be8e: mov eax, dword ptr [r8]
40be91: cmp eax, 2
40be94: je 0x40d2ff
40be9a: cmp eax, 3
40be9d: je 0x40d2ee
40bea3: cmp eax, 1
40bea6: je 0x40d37a
40beac: mov rdi, r8
40beaf: call 0x426a00
40beb4: mov r8, qword ptr [r15 + 8]
40beb8: test r8, r8
40bebb: je 0x40b696
40bec1: mov eax, dword ptr [r8]
40bec4: cmp eax, 2
40bec7: je 0x40c763
40becd: cmp eax, 3
40bed0: je 0x40c752
40bed6: cmp eax, 1
40bed9: je 0x40c79a
40bedf: mov rdi, r8
40bee2: call 0x426a00
40bee7: jmp 0x40b696
40beec: nop dword ptr [rax]
40bef0: cmp eax, 1
40bef3: je 0x40bb25
40bef9: mov rdi, r8
40befc: call 0x426a00
40bf01: jmp 0x40bb68
40bf06: nop word ptr cs:[rax + rax]
40bf10: mov r8, qword ptr [r15 + 0x18]
40bf14: test r8, r8
40bf17: je 0x40bf65
40bf19: mov eax, dword ptr [r8]
40bf1c: cmp eax, 2
40bf1f: je 0x40bf3b
40bf21: cmp eax, 3
40bf24: jne 0x40d873
40bf2a: mov rdi, qword ptr [r8 + 0x18]
40bf2e: mov qword ptr [rsp], r8
40bf32: call 0x4073f0
40bf37: mov r8, qword ptr [rsp]
40bf3b: mov rdi, qword ptr [r8 + 0x10]
40bf3f: mov qword ptr [rsp], r8
40bf43: call 0x4073f0
40bf48: mov r8, qword ptr [rsp]
40bf4c: mov rdi, qword ptr [r8 + 8]
40bf50: mov qword ptr [rsp], r8
40bf54: call 0x4073f0
40bf59: mov r8, qword ptr [rsp]
40bf5d: mov rdi, r8
40bf60: call 0x426a00
40bf65: mov r8, qword ptr [r15 + 0x10]
40bf69: test r8, r8
40bf6c: je 0x40bf94
40bf6e: mov eax, dword ptr [r8]
40bf71: cmp eax, 2
40bf74: je 0x40d09b
40bf7a: cmp eax, 3
40bf7d: je 0x40d08a
40bf83: cmp eax, 1
40bf86: je 0x40d116
40bf8c: mov rdi, r8
40bf8f: call 0x426a00
40bf94: mov r8, qword ptr [r15 + 8]
40bf98: test r8, r8
40bf9b: je 0x40b34f
40bfa1: mov eax, dword ptr [r8]
40bfa4: cmp eax, 2
40bfa7: je 0x40c643
40bfad: cmp eax, 3
40bfb0: je 0x40c632
40bfb6: cmp eax, 1
40bfb9: je 0x40c67a
40bfbf: mov rdi, r8
40bfc2: call 0x426a00
40bfc7: jmp 0x40b34f
40bfcc: nop dword ptr [rax]
40bfd0: cmp eax, 1
40bfd3: je 0x40b8fd
40bfd9: mov rdi, r8
40bfdc: call 0x426a00
40bfe1: jmp 0x40b940
40bfe6: nop word ptr cs:[rax + rax]
40bff0: mov r8, qword ptr [r15 + 0x18]
40bff4: test r8, r8
40bff7: je 0x40c045
40bff9: mov eax, dword ptr [r8]
40bffc: cmp eax, 2
40bfff: je 0x40c01b
40c001: cmp eax, 3
40c004: jne 0x40d857
40c00a: mov rdi, qword ptr [r8 + 0x18]
40c00e: mov qword ptr [rsp], r8
40c012: call 0x4073f0
40c017: mov r8, qword ptr [rsp]
40c01b: mov rdi, qword ptr [r8 + 0x10]
40c01f: mov qword ptr [rsp], r8
40c023: call 0x4073f0
40c028: mov r8, qword ptr [rsp]
40c02c: mov rdi, qword ptr [r8 + 8]
40c030: mov qword ptr [rsp], r8
40c034: call 0x4073f0
40c039: mov r8, qword ptr [rsp]
40c03d: mov rdi, r8
40c040: call 0x426a00
40c045: mov r8, qword ptr [r15 + 0x10]
40c049: test r8, r8
40c04c: je 0x40c074
40c04e: mov eax, dword ptr [r8]
40c051: cmp eax, 2
40c054: je 0x40d167
40c05a: cmp eax, 3
40c05d: je 0x40d156
40c063: cmp eax, 1
40c066: je 0x40d1e2
40c06c: mov rdi, r8
40c06f: call 0x426a00
40c074: mov r8, qword ptr [r15 + 8]
40c078: test r8, r8
40c07b: je 0x40b5f6
40c081: mov eax, dword ptr [r8]
40c084: cmp eax, 2
40c087: je 0x40c6d3
40c08d: cmp eax, 3
40c090: je 0x40c6c2
40c096: cmp eax, 1
40c099: je 0x40c70a
40c09f: mov rdi, r8
40c0a2: call 0x426a00
40c0a7: jmp 0x40b5f6
40c0ac: nop dword ptr [rax]
40c0b0: cmp eax, 1
40c0b3: je 0x40ba15
40c0b9: mov rdi, r8
40c0bc: call 0x426a00
40c0c1: jmp 0x40ba58
40c0c6: nop word ptr cs:[rax + rax]
40c0d0: mov r9, qword ptr [r8 + 0x18]
40c0d4: test r9, r9
40c0d7: je 0x40c14b
40c0d9: mov eax, dword ptr [r9]
40c0dc: cmp eax, 2
40c0df: je 0x40c105
40c0e1: cmp eax, 3
40c0e4: jne 0x40dd33
40c0ea: mov rdi, qword ptr [r9 + 0x18]
40c0ee: mov qword ptr [rsp + 8], r8
40c0f3: mov qword ptr [rsp], r9
40c0f7: call 0x4073f0
40c0fc: mov r8, qword ptr [rsp + 8]
40c101: mov r9, qword ptr [rsp]
40c105: mov rdi, qword ptr [r9 + 0x10]
40c109: mov qword ptr [rsp + 8], r8
40c10e: mov qword ptr [rsp], r9
40c112: call 0x4073f0
40c117: mov r8, qword ptr [rsp + 8]
40c11c: mov r9, qword ptr [rsp]
40c120: mov rdi, qword ptr [r9 + 8]
40c124: mov qword ptr [rsp + 8], r8
40c129: mov qword ptr [rsp], r9
40c12d: call 0x4073f0
40c132: mov r8, qword ptr [rsp + 8]
40c137: mov r9, qword ptr [rsp]
40c13b: mov rdi, r9
40c13e: mov qword ptr [rsp], r8
40c142: call 0x426a00
40c147: mov r8, qword ptr [rsp]
40c14b: mov r9, qword ptr [r8 + 0x10]
40c14f: test r9, r9
40c152: je 0x40c182
40c154: mov eax, dword ptr [r9]
40c157: cmp eax, 2
40c15a: je 0x40d5ab
40c160: cmp eax, 3
40c163: je 0x40d590
40c169: cmp eax, 1
40c16c: je 0x40d5c6
40c172: mov rdi, r9
40c175: mov qword ptr [rsp], r8
40c179: call 0x426a00
40c17e: mov r8, qword ptr [rsp]
40c182: mov r9, qword ptr [r8 + 8]
40c186: test r9, r9
40c189: je 0x40b96b
40c18f: mov eax, dword ptr [r9]
40c192: cmp eax, 2
40c195: je 0x40c8ef
40c19b: cmp eax, 3
40c19e: je 0x40c8d4
40c1a4: cmp eax, 1
40c1a7: je 0x40c90a
40c1ad: mov rdi, r9
40c1b0: mov qword ptr [rsp], r8
40c1b4: call 0x426a00
40c1b9: mov r8, qword ptr [rsp]
40c1bd: jmp 0x40b96b
40c1c2: nop word ptr [rax + rax]
40c1c8: mov r9, qword ptr [r8 + 0x18]
40c1cc: test r9, r9
40c1cf: je 0x40c243
40c1d1: mov eax, dword ptr [r9]
40c1d4: cmp eax, 2
40c1d7: je 0x40c1fd
40c1d9: cmp eax, 3
40c1dc: jne 0x40db81
40c1e2: mov rdi, qword ptr [r9 + 0x18]
40c1e6: mov qword ptr [rsp + 8], r8
40c1eb: mov qword ptr [rsp], r9
40c1ef: call 0x4073f0
40c1f4: mov r8, qword ptr [rsp + 8]
40c1f9: mov r9, qword ptr [rsp]
40c1fd: mov rdi, qword ptr [r9 + 0x10]
40c201: mov qword ptr [rsp + 8], r8
40c206: mov qword ptr [rsp], r9
40c20a: call 0x4073f0
40c20f: mov r8, qword ptr [rsp + 8]
40c214: mov r9, qword ptr [rsp]
40c218: mov rdi, qword ptr [r9 + 8]
40c21c: mov qword ptr [rsp + 8], r8
40c221: mov qword ptr [rsp], r9
40c225: call 0x4073f0
40c22a: mov r8, qword ptr [rsp + 8]
40c22f: mov r9, qword ptr [rsp]
40c233: mov rdi, r9
40c236: mov qword ptr [rsp], r8
40c23a: call 0x426a00
40c23f: mov r8, qword ptr [rsp]
40c243: mov r9, qword ptr [r8 + 0x10]
40c247: test r9, r9
40c24a: je 0x40c27a
40c24c: mov eax, dword ptr [r9]
40c24f: cmp eax, 2
40c252: je 0x40d4ff
40c258: cmp eax, 3
40c25b: je 0x40d4e4
40c261: cmp eax, 1
40c264: je 0x40d51a
40c26a: mov rdi, r9
40c26d: mov qword ptr [rsp], r8
40c271: call 0x426a00
40c276: mov r8, qword ptr [rsp]
40c27a: mov r9, qword ptr [r8 + 8]
40c27e: test r9, r9
40c281: je 0x40b536
40c287: mov eax, dword ptr [r9]
40c28a: cmp eax, 2
40c28d: je 0x40c99b
40c293: cmp eax, 3
40c296: je 0x40c980
40c29c: cmp eax, 1
40c29f: je 0x40c9b6
40c2a5: mov rdi, r9
40c2a8: mov qword ptr [rsp], r8
40c2ac: call 0x426a00
40c2b1: mov r8, qword ptr [rsp]
40c2b5: jmp 0x40b536
40c2ba: nop word ptr [rax + rax]
40c2c0: mov r9, qword ptr [r8 + 0x18]
40c2c4: test r9, r9
40c2c7: je 0x40c33b
40c2c9: mov eax, dword ptr [r9]
40c2cc: cmp eax, 2
40c2cf: je 0x40c2f5
40c2d1: cmp eax, 3
40c2d4: jne 0x40db73
40c2da: mov rdi, qword ptr [r9 + 0x18]
40c2de: mov qword ptr [rsp + 8], r8
40c2e3: mov qword ptr [rsp], r9
40c2e7: call 0x4073f0
40c2ec: mov r8, qword ptr [rsp + 8]
40c2f1: mov r9, qword ptr [rsp]
40c2f5: mov rdi, qword ptr [r9 + 0x10]
40c2f9: mov qword ptr [rsp + 8], r8
40c2fe: mov qword ptr [rsp], r9
40c302: call 0x4073f0
40c307: mov r8, qword ptr [rsp + 8]
40c30c: mov r9, qword ptr [rsp]
40c310: mov rdi, qword ptr [r9 + 8]
40c314: mov qword ptr [rsp + 8], r8
40c319: mov qword ptr [rsp], r9
40c31d: call 0x4073f0
40c322: mov r8, qword ptr [rsp + 8]
40c327: mov r9, qword ptr [rsp]
40c32b: mov rdi, r9
40c32e: mov qword ptr [rsp], r8
40c332: call 0x426a00
40c337: mov r8, qword ptr [rsp]
40c33b: mov r9, qword ptr [r8 + 0x10]
40c33f: test r9, r9
40c342: je 0x40c372
40c344: mov eax, dword ptr [r9]
40c347: cmp eax, 2
40c34a: je 0x40d555
40c350: cmp eax, 3
40c353: je 0x40d53a
40c359: cmp eax, 1
40c35c: je 0x40d570
40c362: mov rdi, r9
40c365: mov qword ptr [rsp], r8
40c369: call 0x426a00
40c36e: mov r8, qword ptr [rsp]
40c372: mov r9, qword ptr [r8 + 8]
40c376: test r9, r9
40c379: je 0x40ba83
40c37f: mov eax, dword ptr [r9]
40c382: cmp eax, 2
40c385: je 0x40c843
40c38b: cmp eax, 3
40c38e: je 0x40c828
40c394: cmp eax, 1
40c397: je 0x40c85e
40c39d: mov rdi, r9
40c3a0: mov qword ptr [rsp], r8
40c3a4: call 0x426a00
40c3a9: mov r8, qword ptr [rsp]
40c3ad: jmp 0x40ba83
40c3b2: nop word ptr [rax + rax]
40c3b8: mov r9, qword ptr [r8 + 0x18]
40c3bc: test r9, r9
40c3bf: je 0x40c433
40c3c1: mov eax, dword ptr [r9]
40c3c4: cmp eax, 2
40c3c7: je 0x40c3ed
40c3c9: cmp eax, 3
40c3cc: jne 0x40dc53
40c3d2: mov rdi, qword ptr [r9 + 0x18]
40c3d6: mov qword ptr [rsp + 8], r8
40c3db: mov qword ptr [rsp], r9
40c3df: call 0x4073f0
40c3e4: mov r8, qword ptr [rsp + 8]
40c3e9: mov r9, qword ptr [rsp]
40c3ed: mov rdi, qword ptr [r9 + 0x10]
40c3f1: mov qword ptr [rsp + 8], r8
40c3f6: mov qword ptr [rsp], r9
40c3fa: call 0x4073f0
40c3ff: mov r8, qword ptr [rsp + 8]
40c404: mov r9, qword ptr [rsp]
40c408: mov rdi, qword ptr [r9 + 8]
40c40c: mov qword ptr [rsp + 8], r8
40c411: mov qword ptr [rsp], r9
40c415: call 0x4073f0
40c41a: mov r8, qword ptr [rsp + 8]
40c41f: mov r9, qword ptr [rsp]
40c423: mov rdi, r9
40c426: mov qword ptr [rsp], r8
40c42a: call 0x426a00
40c42f: mov r8, qword ptr [rsp]
40c433: mov r9, qword ptr [r8 + 0x10]
40c437: test r9, r9
40c43a: je 0x40c46a
40c43c: mov eax, dword ptr [r9]
40c43f: cmp eax, 2
40c442: je 0x40d4a9
40c448: cmp eax, 3
40c44b: je 0x40d48e
40c451: cmp eax, 1
40c454: je 0x40d4c4
40c45a: mov rdi, r9
40c45d: mov qword ptr [rsp], r8
40c461: call 0x426a00
40c466: mov r8, qword ptr [rsp]
40c46a: mov r9, qword ptr [r8 + 8]
40c46e: test r9, r9
40c471: je 0x40bb93
40c477: mov eax, dword ptr [r9]
40c47a: cmp eax, 2
40c47d: je 0x40c899
40c483: cmp eax, 3
40c486: je 0x40c87e
40c48c: cmp eax, 1
40c48f: je 0x40c8b4
40c495: mov rdi, r9
40c498: mov qword ptr [rsp], r8
40c49c: call 0x426a00
40c4a1: mov r8, qword ptr [rsp]
40c4a5: jmp 0x40bb93
40c4aa: mov r8, qword ptr [r15 + 0x18]
40c4ae: test r8, r8
40c4b1: je 0x40c4ff
40c4b3: mov eax, dword ptr [r8]
40c4b6: cmp eax, 2
40c4b9: je 0x40c4d5
40c4bb: cmp eax, 3
40c4be: jne 0x40c81a
40c4c4: mov rdi, qword ptr [r8 + 0x18]
40c4c8: mov qword ptr [rsp], r8
40c4cc: call 0x4073f0
40c4d1: mov r8, qword ptr [rsp]
40c4d5: mov rdi, qword ptr [r8 + 0x10]
40c4d9: mov qword ptr [rsp], r8
40c4dd: call 0x4073f0
40c4e2: mov r8, qword ptr [rsp]
40c4e6: mov rdi, qword ptr [r8 + 8]
40c4ea: mov qword ptr [rsp], r8
40c4ee: call 0x4073f0
40c4f3: mov r8, qword ptr [rsp]
40c4f7: mov rdi, r8
40c4fa: call 0x426a00
40c4ff: mov r8, qword ptr [r15 + 0x10]
40c503: test r8, r8
40c506: je 0x40c52e
40c508: mov eax, dword ptr [r8]
40c50b: cmp eax, 2
40c50e: je 0x40de86
40c514: cmp eax, 3
40c517: je 0x40de75
40c51d: cmp eax, 1
40c520: je 0x40de97
40c526: mov rdi, r8
40c529: call 0x426a00
40c52e: mov r8, qword ptr [r15 + 8]
40c532: test r8, r8
40c535: je 0x40bd59
40c53b: mov eax, dword ptr [r8]
40c53e: cmp eax, 2
40c541: je 0x40cd6b
40c547: cmp eax, 3
40c54a: je 0x40cd5a
40c550: cmp eax, 1
40c553: je 0x40cde6
40c559: mov rdi, r8
40c55c: call 0x426a00
40c561: mov rdi, r15
40c564: call 0x426a00
40c569: jmp 0x40b804
40c56e: mov r8, qword ptr [r15 + 0x18]
40c572: test r8, r8
40c575: je 0x40c5c3
40c577: mov eax, dword ptr [r8]
40c57a: cmp eax, 2
40c57d: je 0x40c599
40c57f: cmp eax, 3
40c582: jne 0x40c80c
40c588: mov rdi, qword ptr [r8 + 0x18]
40c58c: mov qword ptr [rsp], r8
40c590: call 0x4073f0
40c595: mov r8, qword ptr [rsp]
40c599: mov rdi, qword ptr [r8 + 0x10]
40c59d: mov qword ptr [rsp], r8
40c5a1: call 0x4073f0
40c5a6: mov r8, qword ptr [rsp]
40c5aa: mov rdi, qword ptr [r8 + 8]
40c5ae: mov qword ptr [rsp], r8
40c5b2: call 0x4073f0
40c5b7: mov r8, qword ptr [rsp]
40c5bb: mov rdi, r8
40c5be: call 0x426a00
40c5c3: mov r8, qword ptr [r15 + 0x10]
40c5c7: test r8, r8
40c5ca: je 0x40c5f2
40c5cc: mov eax, dword ptr [r8]
40c5cf: cmp eax, 2
40c5d2: je 0x40da5e
40c5d8: cmp eax, 3
40c5db: je 0x40da4d
40c5e1: cmp eax, 1
40c5e4: je 0x40da6f
40c5ea: mov rdi, r8
40c5ed: call 0x426a00
40c5f2: mov r8, qword ptr [r15 + 8]
40c5f6: test r8, r8
40c5f9: je 0x40bdf9
40c5ff: mov eax, dword ptr [r8]
40c602: cmp eax, 2
40c605: je 0x40cfcf
40c60b: cmp eax, 3
40c60e: je 0x40cfbe
40c614: cmp eax, 1
40c617: je 0x40d04a
40c61d: mov rdi, r8
40c620: call 0x426a00
40c625: mov rdi, r15
40c628: call 0x426a00
40c62d: jmp 0x40b110
40c632: mov rdi, qword ptr [r8 + 0x18]
40c636: mov qword ptr [rsp], r8
40c63a: call 0x4073f0
40c63f: mov r8, qword ptr [rsp]
40c643: mov r9, qword ptr [r8 + 0x10]
40c647: test r9, r9
40c64a: je 0x40c67a
40c64c: mov eax, dword ptr [r9]
40c64f: cmp eax, 2
40c652: je 0x40e398
40c658: cmp eax, 3
40c65b: je 0x40e37d
40c661: cmp eax, 1
40c664: je 0x40e3b3
40c66a: mov rdi, r9
40c66d: mov qword ptr [rsp], r8
40c671: call 0x426a00
40c676: mov r8, qword ptr [rsp]
40c67a: mov r9, qword ptr [r8 + 8]
40c67e: test r9, r9
40c681: je 0x40bfbf
40c687: mov eax, dword ptr [r9]
40c68a: cmp eax, 2
40c68d: je 0x40d703
40c693: cmp eax, 3
40c696: je 0x40d6e8
40c69c: cmp eax, 1
40c69f: je 0x40d71e
40c6a5: mov rdi, r9
40c6a8: mov qword ptr [rsp], r8
40c6ac: call 0x426a00
40c6b1: mov r8, qword ptr [rsp]
40c6b5: mov rdi, r8
40c6b8: call 0x426a00
40c6bd: jmp 0x40b34f
40c6c2: mov rdi, qword ptr [r8 + 0x18]
40c6c6: mov qword ptr [rsp], r8
40c6ca: call 0x4073f0
40c6cf: mov r8, qword ptr [rsp]
40c6d3: mov r9, qword ptr [r8 + 0x10]
40c6d7: test r9, r9
40c6da: je 0x40c70a
40c6dc: mov eax, dword ptr [r9]
40c6df: cmp eax, 2
40c6e2: je 0x40e2a2
40c6e8: cmp eax, 3
40c6eb: je 0x40e287
40c6f1: cmp eax, 1
40c6f4: je 0x40e2bd
40c6fa: mov rdi, r9
40c6fd: mov qword ptr [rsp], r8
40c701: call 0x426a00
40c706: mov r8, qword ptr [rsp]
40c70a: mov r9, qword ptr [r8 + 8]
40c70e: test r9, r9
40c711: je 0x40c09f
40c717: mov eax, dword ptr [r9]
40c71a: cmp eax, 2
40c71d: je 0x40d6ad
40c723: cmp eax, 3
40c726: je 0x40d692
40c72c: cmp eax, 1
40c72f: je 0x40d6c8
40c735: mov rdi, r9
40c738: mov qword ptr [rsp], r8
40c73c: call 0x426a00
40c741: mov r8, qword ptr [rsp]
40c745: mov rdi, r8
40c748: call 0x426a00
40c74d: jmp 0x40b5f6
40c752: mov rdi, qword ptr [r8 + 0x18]
40c756: mov qword ptr [rsp], r8
40c75a: call 0x4073f0
40c75f: mov r8, qword ptr [rsp]
40c763: mov r9, qword ptr [r8 + 0x10]
40c767: test r9, r9
40c76a: je 0x40c79a
40c76c: mov eax, dword ptr [r9]
40c76f: cmp eax, 2
40c772: je 0x40e53a
40c778: cmp eax, 3
40c77b: je 0x40e51f
40c781: cmp eax, 1
40c784: je 0x40e555
40c78a: mov rdi, r9
40c78d: mov qword ptr [rsp], r8
40c791: call 0x426a00
40c796: mov r8, qword ptr [rsp]
40c79a: mov r9, qword ptr [r8 + 8]
40c79e: test r9, r9
40c7a1: je 0x40bedf
40c7a7: mov eax, dword ptr [r9]
40c7aa: cmp eax, 2
40c7ad: je 0x40d453
40c7b3: cmp eax, 3
40c7b6: je 0x40d438
40c7bc: cmp eax, 1
40c7bf: je 0x40d46e
40c7c5: mov rdi, r9
40c7c8: mov qword ptr [rsp], r8
40c7cc: call 0x426a00
40c7d1: mov r8, qword ptr [rsp]
40c7d5: mov rdi, r8
40c7d8: call 0x426a00
40c7dd: jmp 0x40b696
40c7e2: cmp eax, 1
40c7e5: jne 0x40b764
40c7eb: jmp 0x40b75b
40c7f0: cmp eax, 1
40c7f3: jne 0x40b1d4
40c7f9: jmp 0x40b1cb
40c7fe: cmp eax, 1
40c801: jne 0x40b40b
40c807: jmp 0x40b3fa
40c80c: cmp eax, 1
40c80f: jne 0x40c5bb
40c815: jmp 0x40c5aa
40c81a: cmp eax, 1
40c81d: jne 0x40c4f7
40c823: jmp 0x40c4e6
40c828: mov rdi, qword ptr [r9 + 0x18]
40c82c: mov qword ptr [rsp + 8], r8
40c831: mov qword ptr [rsp], r9
40c835: call 0x4073f0
40c83a: mov r8, qword ptr [rsp + 8]
40c83f: mov r9, qword ptr [rsp]
40c843: mov rdi, qword ptr [r9 + 0x10]
40c847: mov qword ptr [rsp + 8], r8
40c84c: mov qword ptr [rsp], r9
40c850: call 0x4073f0
40c855: mov r8, qword ptr [rsp + 8]
40c85a: mov r9, qword ptr [rsp]
40c85e: mov rdi, qword ptr [r9 + 8]
40c862: mov qword ptr [rsp + 8], r8
40c867: mov qword ptr [rsp], r9
40c86b: call 0x4073f0
40c870: mov r8, qword ptr [rsp + 8]
40c875: mov r9, qword ptr [rsp]
40c879: jmp 0x40c39d
40c87e: mov rdi, qword ptr [r9 + 0x18]
40c882: mov qword ptr [rsp + 8], r8
40c887: mov qword ptr [rsp], r9
40c88b: call 0x4073f0
40c890: mov r8, qword ptr [rsp + 8]
40c895: mov r9, qword ptr [rsp]
40c899: mov rdi, qword ptr [r9 + 0x10]
40c89d: mov qword ptr [rsp + 8], r8
40c8a2: mov qword ptr [rsp], r9
40c8a6: call 0x4073f0
40c8ab: mov r8, qword ptr [rsp + 8]
40c8b0: mov r9, qword ptr [rsp]
40c8b4: mov rdi, qword ptr [r9 + 8]
40c8b8: mov qword ptr [rsp + 8], r8
40c8bd: mov qword ptr [rsp], r9
40c8c1: call 0x4073f0
40c8c6: mov r8, qword ptr [rsp + 8]
40c8cb: mov r9, qword ptr [rsp]
40c8cf: jmp 0x40c495
40c8d4: mov rdi, qword ptr [r9 + 0x18]
40c8d8: mov qword ptr [rsp + 8], r8
40c8dd: mov qword ptr [rsp], r9
40c8e1: call 0x4073f0
40c8e6: mov r8, qword ptr [rsp + 8]
40c8eb: mov r9, qword ptr [rsp]
40c8ef: mov rdi, qword ptr [r9 + 0x10]
40c8f3: mov qword ptr [rsp + 8], r8
40c8f8: mov qword ptr [rsp], r9
40c8fc: call 0x4073f0
40c901: mov r8, qword ptr [rsp + 8]
40c906: mov r9, qword ptr [rsp]
40c90a: mov rdi, qword ptr [r9 + 8]
40c90e: mov qword ptr [rsp + 8], r8
40c913: mov qword ptr [rsp], r9
40c917: call 0x4073f0
40c91c: mov r8, qword ptr [rsp + 8]
40c921: mov r9, qword ptr [rsp]
40c925: jmp 0x40c1ad
40c92a: mov rdi, qword ptr [r9 + 0x18]
40c92e: mov qword ptr [rsp + 8], r8
40c933: mov qword ptr [rsp], r9
40c937: call 0x4073f0
40c93c: mov r8, qword ptr [rsp + 8]
40c941: mov r9, qword ptr [rsp]
40c945: mov rdi, qword ptr [r9 + 0x10]
40c949: mov qword ptr [rsp + 8], r8
40c94e: mov qword ptr [rsp], r9
40c952: call 0x4073f0
40c957: mov r8, qword ptr [rsp + 8]
40c95c: mov r9, qword ptr [rsp]
40c960: mov rdi, qword ptr [r9 + 8]
40c964: mov qword ptr [rsp + 8], r8
40c969: mov qword ptr [rsp], r9
40c96d: call 0x4073f0
40c972: mov r8, qword ptr [rsp + 8]
40c977: mov r9, qword ptr [rsp]
40c97b: jmp 0x40bbfe
40c980: mov rdi, qword ptr [r9 + 0x18]
40c984: mov qword ptr [rsp + 8], r8
40c989: mov qword ptr [rsp], r9
40c98d: call 0x4073f0
40c992: mov r8, qword ptr [rsp + 8]
40c997: mov r9, qword ptr [rsp]
40c99b: mov rdi, qword ptr [r9 + 0x10]
40c99f: mov qword ptr [rsp + 8], r8
40c9a4: mov qword ptr [rsp], r9
40c9a8: call 0x4073f0
40c9ad: mov r8, qword ptr [rsp + 8]
40c9b2: mov r9, qword ptr [rsp]
40c9b6: mov rdi, qword ptr [r9 + 8]
40c9ba: mov qword ptr [rsp + 8], r8
40c9bf: mov qword ptr [rsp], r9
40c9c3: call 0x4073f0
40c9c8: mov r8, qword ptr [rsp + 8]
40c9cd: mov r9, qword ptr [rsp]
40c9d1: jmp 0x40c2a5
40c9d6: mov rdi, qword ptr [r15 + 0x18]
40c9da: call 0x4073f0
40c9df: mov r8, qword ptr [r15 + 0x10]
40c9e3: test r8, r8
40c9e6: je 0x40ca34
40c9e8: mov eax, dword ptr [r8]
40c9eb: cmp eax, 2
40c9ee: je 0x40ca0a
40c9f0: cmp eax, 3
40c9f3: jne 0x40d794
40c9f9: mov rdi, qword ptr [r8 + 0x18]
40c9fd: mov qword ptr [rsp], r8
40ca01: call 0x4073f0
40ca06: mov r8, qword ptr [rsp]
40ca0a: mov rdi, qword ptr [r8 + 0x10]
40ca0e: mov qword ptr [rsp], r8
40ca12: call 0x4073f0
40ca17: mov r8, qword ptr [rsp]
40ca1b: mov rdi, qword ptr [r8 + 8]
40ca1f: mov qword ptr [rsp], r8
40ca23: call 0x4073f0
40ca28: mov r8, qword ptr [rsp]
40ca2c: mov rdi, r8
40ca2f: call 0x426a00
40ca34: mov r8, qword ptr [r15 + 8]
40ca38: test r8, r8
40ca3b: je 0x40bdc6
40ca41: mov eax, dword ptr [r8]
40ca44: cmp eax, 2
40ca47: je 0x40dc72
40ca4d: cmp eax, 3
40ca50: je 0x40dc61
40ca56: cmp eax, 1
40ca59: je 0x40dc83
40ca5f: mov rdi, r8
40ca62: call 0x426a00
40ca67: jmp 0x40bdc6
40ca6c: mov rdi, qword ptr [r15 + 0x18]
40ca70: call 0x4073f0
40ca75: mov r8, qword ptr [r15 + 0x10]
40ca79: test r8, r8
40ca7c: je 0x40caca
40ca7e: mov eax, dword ptr [r8]
40ca81: cmp eax, 2
40ca84: je 0x40caa0
40ca86: cmp eax, 3
40ca89: jne 0x40d881
40ca8f: mov rdi, qword ptr [r8 + 0x18]
40ca93: mov qword ptr [rsp], r8
40ca97: call 0x4073f0
40ca9c: mov r8, qword ptr [rsp]
40caa0: mov rdi, qword ptr [r8 + 0x10]
40caa4: mov qword ptr [rsp], r8
40caa8: call 0x4073f0
40caad: mov r8, qword ptr [rsp]
40cab1: mov rdi, qword ptr [r8 + 8]
40cab5: mov qword ptr [rsp], r8
40cab9: call 0x4073f0
40cabe: mov r8, qword ptr [rsp]
40cac2: mov rdi, r8
40cac5: call 0x426a00
40caca: mov r8, qword ptr [r15 + 8]
40cace: test r8, r8
40cad1: je 0x40bd26
40cad7: mov eax, dword ptr [r8]
40cada: cmp eax, 2
40cadd: je 0x40d9ee
40cae3: cmp eax, 3
40cae6: je 0x40d9dd
40caec: cmp eax, 1
40caef: je 0x40d9ff
40caf5: mov rdi, r8
40caf8: call 0x426a00
40cafd: jmp 0x40bd26
40cb02: mov rdi, qword ptr [r15 + 0x18]
40cb06: call 0x4073f0
40cb0b: mov r8, qword ptr [r15 + 0x10]
40cb0f: test r8, r8
40cb12: je 0x40cb60
40cb14: mov eax, dword ptr [r8]
40cb17: cmp eax, 2
40cb1a: je 0x40cb36
40cb1c: cmp eax, 3
40cb1f: jne 0x40d89d
40cb25: mov rdi, qword ptr [r8 + 0x18]
40cb29: mov qword ptr [rsp], r8
40cb2d: call 0x4073f0
40cb32: mov r8, qword ptr [rsp]
40cb36: mov rdi, qword ptr [r8 + 0x10]
40cb3a: mov qword ptr [rsp], r8
40cb3e: call 0x4073f0
40cb43: mov r8, qword ptr [rsp]
40cb47: mov rdi, qword ptr [r8 + 8]
40cb4b: mov qword ptr [rsp], r8
40cb4f: call 0x4073f0
40cb54: mov r8, qword ptr [rsp]
40cb58: mov rdi, r8
40cb5b: call 0x426a00
40cb60: mov r8, qword ptr [r15 + 8]
40cb64: test r8, r8
40cb67: je 0x40b5c7
40cb6d: mov eax, dword ptr [r8]
40cb70: cmp eax, 2
40cb73: je 0x40de16
40cb79: cmp eax, 3
40cb7c: je 0x40de05
40cb82: cmp eax, 1
40cb85: je 0x40de27
40cb8b: mov rdi, r8
40cb8e: call 0x426a00
40cb93: jmp 0x40b5c7
40cb98: mov rdi, qword ptr [r15 + 0x18]
40cb9c: call 0x4073f0
40cba1: mov r8, qword ptr [r15 + 0x10]
40cba5: test r8, r8
40cba8: je 0x40cbf6
40cbaa: mov eax, dword ptr [r8]
40cbad: cmp eax, 2
40cbb0: je 0x40cbcc
40cbb2: cmp eax, 3
40cbb5: jne 0x40d83b
40cbbb: mov rdi, qword ptr [r8 + 0x18]
40cbbf: mov qword ptr [rsp], r8
40cbc3: call 0x4073f0
40cbc8: mov r8, qword ptr [rsp]
40cbcc: mov rdi, qword ptr [r8 + 0x10]
40cbd0: mov qword ptr [rsp], r8
40cbd4: call 0x4073f0
40cbd9: mov r8, qword ptr [rsp]
40cbdd: mov rdi, qword ptr [r8 + 8]
40cbe1: mov qword ptr [rsp], r8
40cbe5: call 0x4073f0
40cbea: mov r8, qword ptr [rsp]
40cbee: mov rdi, r8
40cbf1: call 0x426a00
40cbf6: mov r8, qword ptr [r15 + 8]
40cbfa: test r8, r8
40cbfd: je 0x40b232
40cc03: mov eax, dword ptr [r8]
40cc06: cmp eax, 2
40cc09: je 0x40dac0
40cc0f: cmp eax, 3
40cc12: je 0x40daaf
40cc18: cmp eax, 1
40cc1b: je 0x40dad1
40cc21: mov rdi, r8
40cc24: call 0x426a00
40cc29: jmp 0x40b232
40cc2e: mov rdi, qword ptr [r15 + 0x18]
40cc32: call 0x4073f0
40cc37: mov r8, qword ptr [r15 + 0x10]
40cc3b: test r8, r8
40cc3e: je 0x40cc8c
40cc40: mov eax, dword ptr [r8]
40cc43: cmp eax, 2
40cc46: je 0x40cc62
40cc48: cmp eax, 3
40cc4b: jne 0x40d849
40cc51: mov rdi, qword ptr [r8 + 0x18]
40cc55: mov qword ptr [rsp], r8
40cc59: call 0x4073f0
40cc5e: mov r8, qword ptr [rsp]
40cc62: mov rdi, qword ptr [r8 + 0x10]
40cc66: mov qword ptr [rsp], r8
40cc6a: call 0x4073f0
40cc6f: mov r8, qword ptr [rsp]
40cc73: mov rdi, qword ptr [r8 + 8]
40cc77: mov qword ptr [rsp], r8
40cc7b: call 0x4073f0
40cc80: mov r8, qword ptr [rsp]
40cc84: mov rdi, r8
40cc87: call 0x426a00
40cc8c: mov r8, qword ptr [r15 + 8]
40cc90: test r8, r8
40cc93: je 0x40b7c2
40cc99: mov eax, dword ptr [r8]
40cc9c: cmp eax, 2
40cc9f: je 0x40dba0
40cca5: cmp eax, 3
40cca8: je 0x40db8f
40ccae: cmp eax, 1
40ccb1: je 0x40dbb1
40ccb7: mov rdi, r8
40ccba: call 0x426a00
40ccbf: jmp 0x40b7c2
40ccc4: mov rdi, qword ptr [r15 + 0x18]
40ccc8: call 0x4073f0
40cccd: mov r8, qword ptr [r15 + 0x10]
40ccd1: test r8, r8
40ccd4: je 0x40cd22
40ccd6: mov eax, dword ptr [r8]
40ccd9: cmp eax, 2
40ccdc: je 0x40ccf8
40ccde: cmp eax, 3
40cce1: jne 0x40d88f
40cce7: mov rdi, qword ptr [r8 + 0x18]
40cceb: mov qword ptr [rsp], r8
40ccef: call 0x4073f0
40ccf4: mov r8, qword ptr [rsp]
40ccf8: mov rdi, qword ptr [r8 + 0x10]
40ccfc: mov qword ptr [rsp], r8
40cd00: call 0x4073f0
40cd05: mov r8, qword ptr [rsp]
40cd09: mov rdi, qword ptr [r8 + 8]
40cd0d: mov qword ptr [rsp], r8
40cd11: call 0x4073f0
40cd16: mov r8, qword ptr [rsp]
40cd1a: mov rdi, r8
40cd1d: call 0x426a00
40cd22: mov r8, qword ptr [r15 + 8]
40cd26: test r8, r8
40cd29: je 0x40b667
40cd2f: mov eax, dword ptr [r8]
40cd32: cmp eax, 2
40cd35: je 0x40db22
40cd3b: cmp eax, 3
40cd3e: je 0x40db11
40cd44: cmp eax, 1
40cd47: je 0x40db33
40cd4d: mov rdi, r8
40cd50: call 0x426a00
40cd55: jmp 0x40b667
40cd5a: mov rdi, qword ptr [r8 + 0x18]
40cd5e: mov qword ptr [rsp], r8
40cd62: call 0x4073f0
40cd67: mov r8, qword ptr [rsp]
40cd6b: mov r9, qword ptr [r8 + 0x10]
40cd6f: test r9, r9
40cd72: je 0x40cde6
40cd74: mov eax, dword ptr [r9]
40cd77: cmp eax, 2
40cd7a: je 0x40cda0
40cd7c: cmp eax, 3
40cd7f: jne 0x40ded7
40cd85: mov rdi, qword ptr [r9 + 0x18]
40cd89: mov qword ptr [rsp + 8], r8
40cd8e: mov qword ptr [rsp], r9
40cd92: call 0x4073f0
40cd97: mov r8, qword ptr [rsp + 8]
40cd9c: mov r9, qword ptr [rsp]
40cda0: mov rdi, qword ptr [r9 + 0x10]
40cda4: mov qword ptr [rsp + 8], r8
40cda9: mov qword ptr [rsp], r9
40cdad: call 0x4073f0
40cdb2: mov r8, qword ptr [rsp + 8]
40cdb7: mov r9, qword ptr [rsp]
40cdbb: mov rdi, qword ptr [r9 + 8]
40cdbf: mov qword ptr [rsp + 8], r8
40cdc4: mov qword ptr [rsp], r9
40cdc8: call 0x4073f0
40cdcd: mov r8, qword ptr [rsp + 8]
40cdd2: mov r9, qword ptr [rsp]
40cdd6: mov rdi, r9
40cdd9: mov qword ptr [rsp], r8
40cddd: call 0x426a00
40cde2: mov r8, qword ptr [rsp]
40cde6: mov r9, qword ptr [r8 + 8]
40cdea: test r9, r9
40cded: je 0x40c559
40cdf3: mov eax, dword ptr [r9]
40cdf6: cmp eax, 2
40cdf9: je 0x40dfac
40cdff: cmp eax, 3
40ce02: je 0x40df91
40ce08: cmp eax, 1
40ce0b: je 0x40dfc7
40ce11: mov rdi, r9
40ce14: mov qword ptr [rsp], r8
40ce18: call 0x426a00
40ce1d: mov r8, qword ptr [rsp]
40ce21: jmp 0x40c559
40ce26: mov rdi, qword ptr [r8 + 0x18]
40ce2a: mov qword ptr [rsp], r8
40ce2e: call 0x4073f0
40ce33: mov r8, qword ptr [rsp]
40ce37: mov r9, qword ptr [r8 + 0x10]
40ce3b: test r9, r9
40ce3e: je 0x40ceb2
40ce40: mov eax, dword ptr [r9]
40ce43: cmp eax, 2
40ce46: je 0x40ce6c
40ce48: cmp eax, 3
40ce4b: jne 0x40da3f
40ce51: mov rdi, qword ptr [r9 + 0x18]
40ce55: mov qword ptr [rsp + 8], r8
40ce5a: mov qword ptr [rsp], r9
40ce5e: call 0x4073f0
40ce63: mov r8, qword ptr [rsp + 8]
40ce68: mov r9, qword ptr [rsp]
40ce6c: mov rdi, qword ptr [r9 + 0x10]
40ce70: mov qword ptr [rsp + 8], r8
40ce75: mov qword ptr [rsp], r9
40ce79: call 0x4073f0
40ce7e: mov r8, qword ptr [rsp + 8]
40ce83: mov r9, qword ptr [rsp]
40ce87: mov rdi, qword ptr [r9 + 8]
40ce8b: mov qword ptr [rsp + 8], r8
40ce90: mov qword ptr [rsp], r9
40ce94: call 0x4073f0
40ce99: mov r8, qword ptr [rsp + 8]
40ce9e: mov r9, qword ptr [rsp]
40cea2: mov rdi, r9
40cea5: mov qword ptr [rsp], r8
40cea9: call 0x426a00
40ceae: mov r8, qword ptr [rsp]
40ceb2: mov r9, qword ptr [r8 + 8]
40ceb6: test r9, r9
40ceb9: je 0x40b507
40cebf: mov eax, dword ptr [r9]
40cec2: cmp eax, 2
40cec5: je 0x40e002
40cecb: cmp eax, 3
40cece: je 0x40dfe7
40ced4: cmp eax, 1
40ced7: je 0x40e01d
40cedd: mov rdi, r9
40cee0: mov qword ptr [rsp], r8
40cee4: call 0x426a00
40cee9: mov r8, qword ptr [rsp]
40ceed: jmp 0x40b507
40cef2: mov rdi, qword ptr [r8 + 0x18]
40cef6: mov qword ptr [rsp], r8
40cefa: call 0x4073f0
40ceff: mov r8, qword ptr [rsp]
40cf03: mov r9, qword ptr [r8 + 0x10]
40cf07: test r9, r9
40cf0a: je 0x40cf7e
40cf0c: mov eax, dword ptr [r9]
40cf0f: cmp eax, 2
40cf12: je 0x40cf38
40cf14: cmp eax, 3
40cf17: jne 0x40de67
40cf1d: mov rdi, qword ptr [r9 + 0x18]
40cf21: mov qword ptr [rsp + 8], r8
40cf26: mov qword ptr [rsp], r9
40cf2a: call 0x4073f0
40cf2f: mov r8, qword ptr [rsp + 8]
40cf34: mov r9, qword ptr [rsp]
40cf38: mov rdi, qword ptr [r9 + 0x10]
40cf3c: mov qword ptr [rsp + 8], r8
40cf41: mov qword ptr [rsp], r9
40cf45: call 0x4073f0
40cf4a: mov r8, qword ptr [rsp + 8]
40cf4f: mov r9, qword ptr [rsp]
40cf53: mov rdi, qword ptr [r9 + 8]
40cf57: mov qword ptr [rsp + 8], r8
40cf5c: mov qword ptr [rsp], r9
40cf60: call 0x4073f0
40cf65: mov r8, qword ptr [rsp + 8]
40cf6a: mov r9, qword ptr [rsp]
40cf6e: mov rdi, r9
40cf71: mov qword ptr [rsp], r8
40cf75: call 0x426a00
40cf7a: mov r8, qword ptr [rsp]
40cf7e: mov r9, qword ptr [r8 + 8]
40cf82: test r9, r9
40cf85: je 0x40b469
40cf8b: mov eax, dword ptr [r9]
40cf8e: cmp eax, 2
40cf91: je 0x40e058
40cf97: cmp eax, 3
40cf9a: je 0x40e03d
40cfa0: cmp eax, 1
40cfa3: je 0x40e073
40cfa9: mov rdi, r9
40cfac: mov qword ptr [rsp], r8
40cfb0: call 0x426a00
40cfb5: mov r8, qword ptr [rsp]
40cfb9: jmp 0x40b469
40cfbe: mov rdi, qword ptr [r8 + 0x18]
40cfc2: mov qword ptr [rsp], r8
40cfc6: call 0x4073f0
40cfcb: mov r8, qword ptr [rsp]
40cfcf: mov r9, qword ptr [r8 + 0x10]
40cfd3: test r9, r9
40cfd6: je 0x40d04a
40cfd8: mov eax, dword ptr [r9]
40cfdb: cmp eax, 2
40cfde: je 0x40d004
40cfe0: cmp eax, 3
40cfe3: jne 0x40dcc3
40cfe9: mov rdi, qword ptr [r9 + 0x18]
40cfed: mov qword ptr [rsp + 8], r8
40cff2: mov qword ptr [rsp], r9
40cff6: call 0x4073f0
40cffb: mov r8, qword ptr [rsp + 8]
40d000: mov r9, qword ptr [rsp]
40d004: mov rdi, qword ptr [r9 + 0x10]
40d008: mov qword ptr [rsp + 8], r8
40d00d: mov qword ptr [rsp], r9
40d011: call 0x4073f0
40d016: mov r8, qword ptr [rsp + 8]
40d01b: mov r9, qword ptr [rsp]
40d01f: mov rdi, qword ptr [r9 + 8]
40d023: mov qword ptr [rsp + 8], r8
40d028: mov qword ptr [rsp], r9
40d02c: call 0x4073f0
40d031: mov r8, qword ptr [rsp + 8]
40d036: mov r9, qword ptr [rsp]
40d03a: mov rdi, r9
40d03d: mov qword ptr [rsp], r8
40d041: call 0x426a00
40d046: mov r8, qword ptr [rsp]
40d04a: mov r9, qword ptr [r8 + 8]
40d04e: test r9, r9
40d051: je 0x40c61d
40d057: mov eax, dword ptr [r9]
40d05a: cmp eax, 2
40d05d: je 0x40df56
40d063: cmp eax, 3
40d066: je 0x40df3b
40d06c: cmp eax, 1
40d06f: je 0x40df71
40d075: mov rdi, r9
40d078: mov qword ptr [rsp], r8
40d07c: call 0x426a00
40d081: mov r8, qword ptr [rsp]
40d085: jmp 0x40c61d
40d08a: mov rdi, qword ptr [r8 + 0x18]
40d08e: mov qword ptr [rsp], r8
40d092: call 0x4073f0
40d097: mov r8, qword ptr [rsp]
40d09b: mov r9, qword ptr [r8 + 0x10]
40d09f: test r9, r9
40d0a2: je 0x40d116
40d0a4: mov eax, dword ptr [r9]
40d0a7: cmp eax, 2
40d0aa: je 0x40d0d0
40d0ac: cmp eax, 3
40d0af: jne 0x40e093
40d0b5: mov rdi, qword ptr [r9 + 0x18]
40d0b9: mov qword ptr [rsp + 8], r8
40d0be: mov qword ptr [rsp], r9
40d0c2: call 0x4073f0
40d0c7: mov r8, qword ptr [rsp + 8]
40d0cc: mov r9, qword ptr [rsp]
40d0d0: mov rdi, qword ptr [r9 + 0x10]
40d0d4: mov qword ptr [rsp + 8], r8
40d0d9: mov qword ptr [rsp], r9
40d0dd: call 0x4073f0
40d0e2: mov r8, qword ptr [rsp + 8]
40d0e7: mov r9, qword ptr [rsp]
40d0eb: mov rdi, qword ptr [r9 + 8]
40d0ef: mov qword ptr [rsp + 8], r8
40d0f4: mov qword ptr [rsp], r9
40d0f8: call 0x4073f0
40d0fd: mov r8, qword ptr [rsp + 8]
40d102: mov r9, qword ptr [rsp]
40d106: mov rdi, r9
40d109: mov qword ptr [rsp], r8
40d10d: call 0x426a00
40d112: mov r8, qword ptr [rsp]
40d116: mov r9, qword ptr [r8 + 8]
40d11a: test r9, r9
40d11d: je 0x40bf8c
40d123: mov eax, dword ptr [r9]
40d126: cmp eax, 2
40d129: je 0x40e24c
40d12f: cmp eax, 3
40d132: je 0x40e231
40d138: cmp eax, 1
40d13b: je 0x40e267
40d141: mov rdi, r9
40d144: mov qword ptr [rsp], r8
40d148: call 0x426a00
40d14d: mov r8, qword ptr [rsp]
40d151: jmp 0x40bf8c
40d156: mov rdi, qword ptr [r8 + 0x18]
40d15a: mov qword ptr [rsp], r8
40d15e: call 0x4073f0
40d163: mov r8, qword ptr [rsp]
40d167: mov r9, qword ptr [r8 + 0x10]
40d16b: test r9, r9
40d16e: je 0x40d1e2
40d170: mov eax, dword ptr [r9]
40d173: cmp eax, 2
40d176: je 0x40d19c
40d178: cmp eax, 3
40d17b: jne 0x40e0a1
40d181: mov rdi, qword ptr [r9 + 0x18]
40d185: mov qword ptr [rsp + 8], r8
40d18a: mov qword ptr [rsp], r9
40d18e: call 0x4073f0
40d193: mov r8, qword ptr [rsp + 8]
40d198: mov r9, qword ptr [rsp]
40d19c: mov rdi, qword ptr [r9 + 0x10]
40d1a0: mov qword ptr [rsp + 8], r8
40d1a5: mov qword ptr [rsp], r9
40d1a9: call 0x4073f0
40d1ae: mov r8, qword ptr [rsp + 8]
40d1b3: mov r9, qword ptr [rsp]
40d1b7: mov rdi, qword ptr [r9 + 8]
40d1bb: mov qword ptr [rsp + 8], r8
40d1c0: mov qword ptr [rsp], r9
40d1c4: call 0x4073f0
40d1c9: mov r8, qword ptr [rsp + 8]
40d1ce: mov r9, qword ptr [rsp]
40d1d2: mov rdi, r9
40d1d5: mov qword ptr [rsp], r8
40d1d9: call 0x426a00
40d1de: mov r8, qword ptr [rsp]
40d1e2: mov r9, qword ptr [r8 + 8]
40d1e6: test r9, r9
40d1e9: je 0x40c06c
40d1ef: mov eax, dword ptr [r9]
40d1f2: cmp eax, 2
40d1f5: je 0x40e156
40d1fb: cmp eax, 3
40d1fe: je 0x40e13b
40d204: cmp eax, 1
40d207: je 0x40e171
40d20d: mov rdi, r9
40d210: mov qword ptr [rsp], r8
40d214: call 0x426a00
40d219: mov r8, qword ptr [rsp]
40d21d: jmp 0x40c06c
40d222: mov rdi, qword ptr [r8 + 0x18]
40d226: mov qword ptr [rsp], r8
40d22a: call 0x4073f0
40d22f: mov r8, qword ptr [rsp]
40d233: mov r9, qword ptr [r8 + 0x10]
40d237: test r9, r9
40d23a: je 0x40d2ae
40d23c: mov eax, dword ptr [r9]
40d23f: cmp eax, 2
40d242: je 0x40d268
40d244: cmp eax, 3
40d247: jne 0x40e0af
40d24d: mov rdi, qword ptr [r9 + 0x18]
40d251: mov qword ptr [rsp + 8], r8
40d256: mov qword ptr [rsp], r9
40d25a: call 0x4073f0
40d25f: mov r8, qword ptr [rsp + 8]
40d264: mov r9, qword ptr [rsp]
40d268: mov rdi, qword ptr [r9 + 0x10]
40d26c: mov qword ptr [rsp + 8], r8
40d271: mov qword ptr [rsp], r9
40d275: call 0x4073f0
40d27a: mov r8, qword ptr [rsp + 8]
40d27f: mov r9, qword ptr [rsp]
40d283: mov rdi, qword ptr [r9 + 8]
40d287: mov qword ptr [rsp + 8], r8
40d28c: mov qword ptr [rsp], r9
40d290: call 0x4073f0
40d295: mov r8, qword ptr [rsp + 8]
40d29a: mov r9, qword ptr [rsp]
40d29e: mov rdi, r9
40d2a1: mov qword ptr [rsp], r8
40d2a5: call 0x426a00
40d2aa: mov r8, qword ptr [rsp]
40d2ae: mov r9, qword ptr [r8 + 8]
40d2b2: test r9, r9
40d2b5: je 0x40b313
40d2bb: mov eax, dword ptr [r9]
40d2be: cmp eax, 2
40d2c1: je 0x40e1ac
40d2c7: cmp eax, 3
40d2ca: je 0x40e191
40d2d0: cmp eax, 1
40d2d3: je 0x40e1c7
40d2d9: mov rdi, r9
40d2dc: mov qword ptr [rsp], r8
40d2e0: call 0x426a00
40d2e5: mov r8, qword ptr [rsp]
40d2e9: jmp 0x40b313
40d2ee: mov rdi, qword ptr [r8 + 0x18]
40d2f2: mov qword ptr [rsp], r8
40d2f6: call 0x4073f0
40d2fb: mov r8, qword ptr [rsp]
40d2ff: mov r9, qword ptr [r8 + 0x10]
40d303: test r9, r9
40d306: je 0x40d37a
40d308: mov eax, dword ptr [r9]
40d30b: cmp eax, 2
40d30e: je 0x40d334
40d310: cmp eax, 3
40d313: jne 0x40e0bd
40d319: mov rdi, qword ptr [r9 + 0x18]
40d31d: mov qword ptr [rsp + 8], r8
40d322: mov qword ptr [rsp], r9
40d326: call 0x4073f0
40d32b: mov r8, qword ptr [rsp + 8]
40d330: mov r9, qword ptr [rsp]
40d334: mov rdi, qword ptr [r9 + 0x10]
40d338: mov qword ptr [rsp + 8], r8
40d33d: mov qword ptr [rsp], r9
40d341: call 0x4073f0
40d346: mov r8, qword ptr [rsp + 8]
40d34b: mov r9, qword ptr [rsp]
40d34f: mov rdi, qword ptr [r9 + 8]
40d353: mov qword ptr [rsp + 8], r8
40d358: mov qword ptr [rsp], r9
40d35c: call 0x4073f0
40d361: mov r8, qword ptr [rsp + 8]
40d366: mov r9, qword ptr [rsp]
40d36a: mov rdi, r9
40d36d: mov qword ptr [rsp], r8
40d371: call 0x426a00
40d376: mov r8, qword ptr [rsp]
40d37a: mov r9, qword ptr [r8 + 8]
40d37e: test r9, r9
40d381: je 0x40beac
40d387: mov eax, dword ptr [r9]
40d38a: cmp eax, 2
40d38d: je 0x40e438
40d393: cmp eax, 3
40d396: je 0x40e41d
40d39c: cmp eax, 1
40d39f: je 0x40e453
40d3a5: mov rdi, r9
40d3a8: mov qword ptr [rsp], r8
40d3ac: call 0x426a00
40d3b1: mov r8, qword ptr [rsp]
40d3b5: jmp 0x40beac
40d3ba: mov rdi, qword ptr [r14 + 0x18]
40d3be: call 0x4073f0
40d3c3: mov r15, qword ptr [r14 + 0x10]
40d3c7: test r15, r15
40d3ca: je 0x40d400
40d3cc: mov eax, dword ptr [r15]
40d3cf: cmp eax, 2
40d3d2: je 0x40d3e6
40d3d4: cmp eax, 3
40d3d7: jne 0x40e12d
40d3dd: mov rdi, qword ptr [r15 + 0x18]
40d3e1: call 0x4073f0
40d3e6: mov rdi, qword ptr [r15 + 0x10]
40d3ea: call 0x4073f0
40d3ef: mov rdi, qword ptr [r15 + 8]
40d3f3: call 0x4073f0
40d3f8: mov rdi, r15
40d3fb: call 0x426a00
40d400: mov r15, qword ptr [r14 + 8]
40d404: test r15, r15
40d407: je 0x40b708
40d40d: mov eax, dword ptr [r15]
40d410: cmp eax, 2
40d413: je 0x40e33c
40d419: cmp eax, 3
40d41c: je 0x40e333
40d422: cmp eax, 1
40d425: je 0x40e345
40d42b: mov rdi, r15
40d42e: call 0x426a00
40d433: jmp 0x40b708
40d438: mov rdi, qword ptr [r9 + 0x18]
40d43c: mov qword ptr [rsp + 8], r8
40d441: mov qword ptr [rsp], r9
40d445: call 0x4073f0
40d44a: mov r8, qword ptr [rsp + 8]
40d44f: mov r9, qword ptr [rsp]
40d453: mov rdi, qword ptr [r9 + 0x10]
40d457: mov qword ptr [rsp + 8], r8
40d45c: mov qword ptr [rsp], r9
40d460: call 0x4073f0
40d465: mov r8, qword ptr [rsp + 8]
40d46a: mov r9, qword ptr [rsp]
40d46e: mov rdi, qword ptr [r9 + 8]
40d472: mov qword ptr [rsp + 8], r8
40d477: mov qword ptr [rsp], r9
40d47b: call 0x4073f0
40d480: mov r8, qword ptr [rsp + 8]
40d485: mov r9, qword ptr [rsp]
40d489: jmp 0x40c7c5
40d48e: mov rdi, qword ptr [r9 + 0x18]
40d492: mov qword ptr [rsp + 8], r8
40d497: mov qword ptr [rsp], r9
40d49b: call 0x4073f0
40d4a0: mov r8, qword ptr [rsp + 8]
40d4a5: mov r9, qword ptr [rsp]
40d4a9: mov rdi, qword ptr [r9 + 0x10]
40d4ad: mov qword ptr [rsp + 8], r8
40d4b2: mov qword ptr [rsp], r9
40d4b6: call 0x4073f0
40d4bb: mov r8, qword ptr [rsp + 8]
40d4c0: mov r9, qword ptr [rsp]
40d4c4: mov rdi, qword ptr [r9 + 8]
40d4c8: mov qword ptr [rsp + 8], r8
40d4cd: mov qword ptr [rsp], r9
40d4d1: call 0x4073f0
40d4d6: mov r8, qword ptr [rsp + 8]
40d4db: mov r9, qword ptr [rsp]
40d4df: jmp 0x40c45a
40d4e4: mov rdi, qword ptr [r9 + 0x18]
40d4e8: mov qword ptr [rsp + 8], r8
40d4ed: mov qword ptr [rsp], r9
40d4f1: call 0x4073f0
40d4f6: mov r8, qword ptr [rsp + 8]
40d4fb: mov r9, qword ptr [rsp]
40d4ff: mov rdi, qword ptr [r9 + 0x10]
40d503: mov qword ptr [rsp + 8], r8
40d508: mov qword ptr [rsp], r9
40d50c: call 0x4073f0
40d511: mov r8, qword ptr [rsp + 8]
40d516: mov r9, qword ptr [rsp]
40d51a: mov rdi, qword ptr [r9 + 8]
40d51e: mov qword ptr [rsp + 8], r8
40d523: mov qword ptr [rsp], r9
40d527: call 0x4073f0
40d52c: mov r8, qword ptr [rsp + 8]
40d531: mov r9, qword ptr [rsp]
40d535: jmp 0x40c26a
40d53a: mov rdi, qword ptr [r9 + 0x18]
40d53e: mov qword ptr [rsp + 8], r8
40d543: mov qword ptr [rsp], r9
40d547: call 0x4073f0
40d54c: mov r8, qword ptr [rsp + 8]
40d551: mov r9, qword ptr [rsp]
40d555: mov rdi, qword ptr [r9 + 0x10]
40d559: mov qword ptr [rsp + 8], r8
40d55e: mov qword ptr [rsp], r9
40d562: call 0x4073f0
40d567: mov r8, qword ptr [rsp + 8]
40d56c: mov r9, qword ptr [rsp]
40d570: mov rdi, qword ptr [r9 + 8]
40d574: mov qword ptr [rsp + 8], r8
40d579: mov qword ptr [rsp], r9
40d57d: call 0x4073f0
40d582: mov r8, qword ptr [rsp + 8]
40d587: mov r9, qword ptr [rsp]
40d58b: jmp 0x40c362
40d590: mov rdi, qword ptr [r9 + 0x18]
40d594: mov qword ptr [rsp + 8], r8
40d599: mov qword ptr [rsp], r9
40d59d: call 0x4073f0
40d5a2: mov r8, qword ptr [rsp + 8]
40d5a7: mov r9, qword ptr [rsp]
40d5ab: mov rdi, qword ptr [r9 + 0x10]
40d5af: mov qword ptr [rsp + 8], r8
40d5b4: mov qword ptr [rsp], r9
40d5b8: call 0x4073f0
40d5bd: mov r8, qword ptr [rsp + 8]
40d5c2: mov r9, qword ptr [rsp]
40d5c6: mov rdi, qword ptr [r9 + 8]
40d5ca: mov qword ptr [rsp + 8], r8
40d5cf: mov qword ptr [rsp], r9
40d5d3: call 0x4073f0
40d5d8: mov r8, qword ptr [rsp + 8]
40d5dd: mov r9, qword ptr [rsp]
40d5e1: jmp 0x40c172
40d5e6: mov rdi, qword ptr [r9 + 0x18]
40d5ea: mov qword ptr [rsp + 8], r8
40d5ef: mov qword ptr [rsp], r9
40d5f3: call 0x4073f0
40d5f8: mov r8, qword ptr [rsp + 8]
40d5fd: mov r9, qword ptr [rsp]
40d601: mov rdi, qword ptr [r9 + 0x10]
40d605: mov qword ptr [rsp + 8], r8
40d60a: mov qword ptr [rsp], r9
40d60e: call 0x4073f0
40d613: mov r8, qword ptr [rsp + 8]
40d618: mov r9, qword ptr [rsp]
40d61c: mov rdi, qword ptr [r9 + 8]
40d620: mov qword ptr [rsp + 8], r8
40d625: mov qword ptr [rsp], r9
40d629: call 0x4073f0
40d62e: mov r8, qword ptr [rsp + 8]
40d633: mov r9, qword ptr [rsp]
40d637: jmp 0x40ba3c
40d63c: mov rdi, qword ptr [r9 + 0x18]
40d640: mov qword ptr [rsp + 8], r8
40d645: mov qword ptr [rsp], r9
40d649: call 0x4073f0
40d64e: mov r8, qword ptr [rsp + 8]
40d653: mov r9, qword ptr [rsp]
40d657: mov rdi, qword ptr [r9 + 0x10]
40d65b: mov qword ptr [rsp + 8], r8
40d660: mov qword ptr [rsp], r9
40d664: call 0x4073f0
40d669: mov r8, qword ptr [rsp + 8]
40d66e: mov r9, qword ptr [rsp]
40d672: mov rdi, qword ptr [r9 + 8]
40d676: mov qword ptr [rsp + 8], r8
40d67b: mov qword ptr [rsp], r9
40d67f: call 0x4073f0
40d684: mov r8, qword ptr [rsp + 8]
40d689: mov r9, qword ptr [rsp]
40d68d: jmp 0x40b924
40d692: mov rdi, qword ptr [r9 + 0x18]
40d696: mov qword ptr [rsp + 8], r8
40d69b: mov qword ptr [rsp], r9
40d69f: call 0x4073f0
40d6a4: mov r8, qword ptr [rsp + 8]
40d6a9: mov r9, qword ptr [rsp]
40d6ad: mov rdi, qword ptr [r9 + 0x10]
40d6b1: mov qword ptr [rsp + 8], r8
40d6b6: mov qword ptr [rsp], r9
40d6ba: call 0x4073f0
40d6bf: mov r8, qword ptr [rsp + 8]
40d6c4: mov r9, qword ptr [rsp]
40d6c8: mov rdi, qword ptr [r9 + 8]
40d6cc: mov qword ptr [rsp + 8], r8
40d6d1: mov qword ptr [rsp], r9
40d6d5: call 0x4073f0
40d6da: mov r8, qword ptr [rsp + 8]
40d6df: mov r9, qword ptr [rsp]
40d6e3: jmp 0x40c735
40d6e8: mov rdi, qword ptr [r9 + 0x18]
40d6ec: mov qword ptr [rsp + 8], r8
40d6f1: mov qword ptr [rsp], r9
40d6f5: call 0x4073f0
40d6fa: mov r8, qword ptr [rsp + 8]
40d6ff: mov r9, qword ptr [rsp]
40d703: mov rdi, qword ptr [r9 + 0x10]
40d707: mov qword ptr [rsp + 8], r8
40d70c: mov qword ptr [rsp], r9
40d710: call 0x4073f0
40d715: mov r8, qword ptr [rsp + 8]
40d71a: mov r9, qword ptr [rsp]
40d71e: mov rdi, qword ptr [r9 + 8]
40d722: mov qword ptr [rsp + 8], r8
40d727: mov qword ptr [rsp], r9
40d72b: call 0x4073f0
40d730: mov r8, qword ptr [rsp + 8]
40d735: mov r9, qword ptr [rsp]
40d739: jmp 0x40c6a5
40d73e: mov rdi, qword ptr [r9 + 0x18]
40d742: mov qword ptr [rsp + 8], r8
40d747: mov qword ptr [rsp], r9
40d74b: call 0x4073f0
40d750: mov r8, qword ptr [rsp + 8]
40d755: mov r9, qword ptr [rsp]
40d759: mov rdi, qword ptr [r9 + 0x10]
40d75d: mov qword ptr [rsp + 8], r8
40d762: mov qword ptr [rsp], r9
40d766: call 0x4073f0
40d76b: mov r8, qword ptr [rsp + 8]
40d770: mov r9, qword ptr [rsp]
40d774: mov rdi, qword ptr [r9 + 8]
40d778: mov qword ptr [rsp + 8], r8
40d77d: mov qword ptr [rsp], r9
40d781: call 0x4073f0
40d786: mov r8, qword ptr [rsp + 8]
40d78b: mov r9, qword ptr [rsp]
40d78f: jmp 0x40bb4c
40d794: cmp eax, 1
40d797: jne 0x40ca2c
40d79d: jmp 0x40ca1b
40d7a2: mov rdi, qword ptr [r15 + 0x18]
40d7a6: call 0x4073f0
40d7ab: mov r8, qword ptr [r15 + 0x10]
40d7af: test r8, r8
40d7b2: je 0x40d7da
40d7b4: mov eax, dword ptr [r8]
40d7b7: cmp eax, 2
40d7ba: je 0x40eab8
40d7c0: cmp eax, 3
40d7c3: je 0x40eaa7
40d7c9: cmp eax, 1
40d7cc: je 0x40eac9
40d7d2: mov rdi, r8
40d7d5: call 0x426a00
40d7da: mov r8, qword ptr [r15 + 8]
40d7de: test r8, r8
40d7e1: je 0x40b203
40d7e7: mov eax, dword ptr [r8]
40d7ea: cmp eax, 2
40d7ed: je 0x40d817
40d7ef: cmp eax, 3
40d7f2: je 0x40d806
40d7f4: cmp eax, 1
40d7f7: je 0x40d828
40d7f9: mov rdi, r8
40d7fc: call 0x426a00
40d801: jmp 0x40b203
40d806: mov rdi, qword ptr [r8 + 0x18]
40d80a: mov qword ptr [rsp], r8
40d80e: call 0x4073f0
40d813: mov r8, qword ptr [rsp]
40d817: mov rdi, qword ptr [r8 + 0x10]
40d81b: mov qword ptr [rsp], r8
40d81f: call 0x4073f0
40d824: mov r8, qword ptr [rsp]
40d828: mov rdi, qword ptr [r8 + 8]
40d82c: mov qword ptr [rsp], r8
40d830: call 0x4073f0
40d835: mov r8, qword ptr [rsp]
40d839: jmp 0x40d7f9
40d83b: cmp eax, 1
40d83e: jne 0x40cbee
40d844: jmp 0x40cbdd
40d849: cmp eax, 1
40d84c: jne 0x40cc84
40d852: jmp 0x40cc73
40d857: cmp eax, 1
40d85a: jne 0x40c03d
40d860: jmp 0x40c02c
40d865: cmp eax, 1
40d868: jne 0x40be7d
40d86e: jmp 0x40be6c
40d873: cmp eax, 1
40d876: jne 0x40bf5d
40d87c: jmp 0x40bf4c
40d881: cmp eax, 1
40d884: jne 0x40cac2
40d88a: jmp 0x40cab1
40d88f: cmp eax, 1
40d892: jne 0x40cd1a
40d898: jmp 0x40cd09
40d89d: cmp eax, 1
40d8a0: jne 0x40cb58
40d8a6: jmp 0x40cb47
40d8ab: mov rdi, qword ptr [r15 + 0x18]
40d8af: call 0x4073f0
40d8b4: mov r8, qword ptr [r15 + 0x10]
40d8b8: test r8, r8
40d8bb: je 0x40d8e3
40d8bd: mov eax, dword ptr [r8]
40d8c0: cmp eax, 2
40d8c3: je 0x40eaf0
40d8c9: cmp eax, 3
40d8cc: je 0x40eadf
40d8d2: cmp eax, 1
40d8d5: je 0x40eb01
40d8db: mov rdi, r8
40d8de: call 0x426a00
40d8e3: mov r8, qword ptr [r15 + 8]
40d8e7: test r8, r8
40d8ea: je 0x40b793
40d8f0: mov eax, dword ptr [r8]
40d8f3: cmp eax, 2
40d8f6: je 0x40d920
40d8f8: cmp eax, 3
40d8fb: je 0x40d90f
40d8fd: cmp eax, 1
40d900: je 0x40d931
40d902: mov rdi, r8
40d905: call 0x426a00
40d90a: jmp 0x40b793
40d90f: mov rdi, qword ptr [r8 + 0x18]
40d913: mov qword ptr [rsp], r8
40d917: call 0x4073f0
40d91c: mov r8, qword ptr [rsp]
40d920: mov rdi, qword ptr [r8 + 0x10]
40d924: mov qword ptr [rsp], r8
40d928: call 0x4073f0
40d92d: mov r8, qword ptr [rsp]
40d931: mov rdi, qword ptr [r8 + 8]
40d935: mov qword ptr [rsp], r8
40d939: call 0x4073f0
40d93e: mov r8, qword ptr [rsp]
40d942: jmp 0x40d902
40d944: mov rdi, qword ptr [r15 + 0x18]
40d948: call 0x4073f0
40d94d: mov r8, qword ptr [r15 + 0x10]
40d951: test r8, r8
40d954: je 0x40d97c
40d956: mov eax, dword ptr [r8]
40d959: cmp eax, 2
40d95c: je 0x40eb28
40d962: cmp eax, 3
40d965: je 0x40eb17
40d96b: cmp eax, 1
40d96e: je 0x40eb39
40d974: mov rdi, r8
40d977: call 0x426a00
40d97c: mov r8, qword ptr [r15 + 8]
40d980: test r8, r8
40d983: je 0x40b28e
40d989: mov eax, dword ptr [r8]
40d98c: cmp eax, 2
40d98f: je 0x40d9b9
40d991: cmp eax, 3
40d994: je 0x40d9a8
40d996: cmp eax, 1
40d999: je 0x40d9ca
40d99b: mov rdi, r8
40d99e: call 0x426a00
40d9a3: jmp 0x40b28e
40d9a8: mov rdi, qword ptr [r8 + 0x18]
40d9ac: mov qword ptr [rsp], r8
40d9b0: call 0x4073f0
40d9b5: mov r8, qword ptr [rsp]
40d9b9: mov rdi, qword ptr [r8 + 0x10]
40d9bd: mov qword ptr [rsp], r8
40d9c1: call 0x4073f0
40d9c6: mov r8, qword ptr [rsp]
40d9ca: mov rdi, qword ptr [r8 + 8]
40d9ce: mov qword ptr [rsp], r8
40d9d2: call 0x4073f0
40d9d7: mov r8, qword ptr [rsp]
40d9db: jmp 0x40d99b
40d9dd: mov rdi, qword ptr [r8 + 0x18]
40d9e1: mov qword ptr [rsp], r8
40d9e5: call 0x4073f0
40d9ea: mov r8, qword ptr [rsp]
40d9ee: mov rdi, qword ptr [r8 + 0x10]
40d9f2: mov qword ptr [rsp], r8
40d9f6: call 0x4073f0
40d9fb: mov r8, qword ptr [rsp]
40d9ff: mov r9, qword ptr [r8 + 8]
40da03: test r9, r9
40da06: je 0x40caf5
40da0c: mov eax, dword ptr [r9]
40da0f: cmp eax, 2
40da12: je 0x40e96e
40da18: cmp eax, 3
40da1b: je 0x40e953
40da21: cmp eax, 1
40da24: je 0x40e989
40da2a: mov rdi, r9
40da2d: mov qword ptr [rsp], r8
40da31: call 0x426a00
40da36: mov r8, qword ptr [rsp]
40da3a: jmp 0x40caf5
40da3f: cmp eax, 1
40da42: jne 0x40cea2
40da48: jmp 0x40ce87
40da4d: mov rdi, qword ptr [r8 + 0x18]
40da51: mov qword ptr [rsp], r8
40da55: call 0x4073f0
40da5a: mov r8, qword ptr [rsp]
40da5e: mov rdi, qword ptr [r8 + 0x10]
40da62: mov qword ptr [rsp], r8
40da66: call 0x4073f0
40da6b: mov r8, qword ptr [rsp]
40da6f: mov r9, qword ptr [r8 + 8]
40da73: test r9, r9
40da76: je 0x40c5ea
40da7c: mov eax, dword ptr [r9]
40da7f: cmp eax, 2
40da82: je 0x40e918
40da88: cmp eax, 3
40da8b: je 0x40e8fd
40da91: cmp eax, 1
40da94: je 0x40e933
40da9a: mov rdi, r9
40da9d: mov qword ptr [rsp], r8
40daa1: call 0x426a00
40daa6: mov r8, qword ptr [rsp]
40daaa: jmp 0x40c5ea
40daaf: mov rdi, qword ptr [r8 + 0x18]
40dab3: mov qword ptr [rsp], r8
40dab7: call 0x4073f0
40dabc: mov r8, qword ptr [rsp]
40dac0: mov rdi, qword ptr [r8 + 0x10]
40dac4: mov qword ptr [rsp], r8
40dac8: call 0x4073f0
40dacd: mov r8, qword ptr [rsp]
40dad1: mov r9, qword ptr [r8 + 8]
40dad5: test r9, r9
40dad8: je 0x40cc21
40dade: mov eax, dword ptr [r9]
40dae1: cmp eax, 2
40dae4: je 0x40e8c2
40daea: cmp eax, 3
40daed: je 0x40e8a7
40daf3: cmp eax, 1
40daf6: je 0x40e8dd
40dafc: mov rdi, r9
40daff: mov qword ptr [rsp], r8
40db03: call 0x426a00
40db08: mov r8, qword ptr [rsp]
40db0c: jmp 0x40cc21
40db11: mov rdi, qword ptr [r8 + 0x18]
40db15: mov qword ptr [rsp], r8
40db19: call 0x4073f0
40db1e: mov r8, qword ptr [rsp]
40db22: mov rdi, qword ptr [r8 + 0x10]
40db26: mov qword ptr [rsp], r8
40db2a: call 0x4073f0
40db2f: mov r8, qword ptr [rsp]
40db33: mov r9, qword ptr [r8 + 8]
40db37: test r9, r9
40db3a: je 0x40cd4d
40db40: mov eax, dword ptr [r9]
40db43: cmp eax, 2
40db46: je 0x40e86c
40db4c: cmp eax, 3
40db4f: je 0x40e851
40db55: cmp eax, 1
40db58: je 0x40e887
40db5e: mov rdi, r9
40db61: mov qword ptr [rsp], r8
40db65: call 0x426a00
40db6a: mov r8, qword ptr [rsp]
40db6e: jmp 0x40cd4d
40db73: cmp eax, 1
40db76: jne 0x40c32b
40db7c: jmp 0x40c310
40db81: cmp eax, 1
40db84: jne 0x40c233
40db8a: jmp 0x40c218
40db8f: mov rdi, qword ptr [r8 + 0x18]
40db93: mov qword ptr [rsp], r8
40db97: call 0x4073f0
40db9c: mov r8, qword ptr [rsp]
40dba0: mov rdi, qword ptr [r8 + 0x10]
40dba4: mov qword ptr [rsp], r8
40dba8: call 0x4073f0
40dbad: mov r8, qword ptr [rsp]
40dbb1: mov r9, qword ptr [r8 + 8]
40dbb5: test r9, r9
40dbb8: je 0x40ccb7
40dbbe: mov eax, dword ptr [r9]
40dbc1: cmp eax, 2
40dbc4: je 0x40e816
40dbca: cmp eax, 3
40dbcd: je 0x40e7fb
40dbd3: cmp eax, 1
40dbd6: je 0x40e831
40dbdc: mov rdi, r9
40dbdf: mov qword ptr [rsp], r8
40dbe3: call 0x426a00
40dbe8: mov r8, qword ptr [rsp]
40dbec: jmp 0x40ccb7
40dbf1: mov rdi, qword ptr [r8 + 0x18]
40dbf5: mov qword ptr [rsp], r8
40dbf9: call 0x4073f0
40dbfe: mov r8, qword ptr [rsp]
40dc02: mov rdi, qword ptr [r8 + 0x10]
40dc06: mov qword ptr [rsp], r8
40dc0a: call 0x4073f0
40dc0f: mov r8, qword ptr [rsp]
40dc13: mov r9, qword ptr [r8 + 8]
40dc17: test r9, r9
40dc1a: je 0x40b88f
40dc20: mov eax, dword ptr [r9]
40dc23: cmp eax, 2
40dc26: je 0x40e7c0
40dc2c: cmp eax, 3
40dc2f: je 0x40e7a5
40dc35: cmp eax, 1
40dc38: je 0x40e7db
40dc3e: mov rdi, r9
40dc41: mov qword ptr [rsp], r8
40dc45: call 0x426a00
40dc4a: mov r8, qword ptr [rsp]
40dc4e: jmp 0x40b88f
40dc53: cmp eax, 1
40dc56: jne 0x40c423
40dc5c: jmp 0x40c408
40dc61: mov rdi, qword ptr [r8 + 0x18]
40dc65: mov qword ptr [rsp], r8
40dc69: call 0x4073f0
40dc6e: mov r8, qword ptr [rsp]
40dc72: mov rdi, qword ptr [r8 + 0x10]
40dc76: mov qword ptr [rsp], r8
40dc7a: call 0x4073f0
40dc7f: mov r8, qword ptr [rsp]
40dc83: mov r9, qword ptr [r8 + 8]
40dc87: test r9, r9
40dc8a: je 0x40ca5f
40dc90: mov eax, dword ptr [r9]
40dc93: cmp eax, 2
40dc96: je 0x40e76a
40dc9c: cmp eax, 3
40dc9f: je 0x40e74f
40dca5: cmp eax, 1
40dca8: je 0x40e785
40dcae: mov rdi, r9
40dcb1: mov qword ptr [rsp], r8
40dcb5: call 0x426a00
40dcba: mov r8, qword ptr [rsp]
40dcbe: jmp 0x40ca5f
40dcc3: cmp eax, 1
40dcc6: jne 0x40d03a
40dccc: jmp 0x40d01f
40dcd1: mov rdi, qword ptr [r8 + 0x18]
40dcd5: mov qword ptr [rsp], r8
40dcd9: call 0x4073f0
40dcde: mov r8, qword ptr [rsp]
40dce2: mov rdi, qword ptr [r8 + 0x10]
40dce6: mov qword ptr [rsp], r8
40dcea: call 0x4073f0
40dcef: mov r8, qword ptr [rsp]
40dcf3: mov r9, qword ptr [r8 + 8]
40dcf7: test r9, r9
40dcfa: je 0x40b43a
40dd00: mov eax, dword ptr [r9]
40dd03: cmp eax, 2
40dd06: je 0x40e714
40dd0c: cmp eax, 3
40dd0f: je 0x40e6f9
40dd15: cmp eax, 1
40dd18: je 0x40e72f
40dd1e: mov rdi, r9
40dd21: mov qword ptr [rsp], r8
40dd25: call 0x426a00
40dd2a: mov r8, qword ptr [rsp]
40dd2e: jmp 0x40b43a
40dd33: cmp eax, 1
40dd36: jne 0x40c13b
40dd3c: jmp 0x40c120
40dd41: mov rdi, qword ptr [r8 + 0x18]
40dd45: mov qword ptr [rsp], r8
40dd49: call 0x4073f0
40dd4e: mov r8, qword ptr [rsp]
40dd52: mov rdi, qword ptr [r8 + 0x10]
40dd56: mov qword ptr [rsp], r8
40dd5a: call 0x4073f0
40dd5f: mov r8, qword ptr [rsp]
40dd63: mov r9, qword ptr [r8 + 8]
40dd67: test r9, r9
40dd6a: je 0x40b9a7
40dd70: mov eax, dword ptr [r9]
40dd73: cmp eax, 2
40dd76: je 0x40e6be
40dd7c: cmp eax, 3
40dd7f: je 0x40e6a3
40dd85: cmp eax, 1
40dd88: je 0x40e6d9
40dd8e: mov rdi, r9
40dd91: mov qword ptr [rsp], r8
40dd95: call 0x426a00
40dd9a: mov r8, qword ptr [rsp]
40dd9e: jmp 0x40b9a7
40dda3: mov rdi, qword ptr [r8 + 0x18]
40dda7: mov qword ptr [rsp], r8
40ddab: call 0x4073f0
40ddb0: mov r8, qword ptr [rsp]
40ddb4: mov rdi, qword ptr [r8 + 0x10]
40ddb8: mov qword ptr [rsp], r8
40ddbc: call 0x4073f0
40ddc1: mov r8, qword ptr [rsp]
40ddc5: mov r9, qword ptr [r8 + 8]
40ddc9: test r9, r9
40ddcc: je 0x40bab7
40ddd2: mov eax, dword ptr [r9]
40ddd5: cmp eax, 2
40ddd8: je 0x40e668
40ddde: cmp eax, 3
40dde1: je 0x40e64d
40dde7: cmp eax, 1
40ddea: je 0x40e683
40ddf0: mov rdi, r9
40ddf3: mov qword ptr [rsp], r8
40ddf7: call 0x426a00
40ddfc: mov r8, qword ptr [rsp]
40de00: jmp 0x40bab7
40de05: mov rdi, qword ptr [r8 + 0x18]
40de09: mov qword ptr [rsp], r8
40de0d: call 0x4073f0
40de12: mov r8, qword ptr [rsp]
40de16: mov rdi, qword ptr [r8 + 0x10]
40de1a: mov qword ptr [rsp], r8
40de1e: call 0x4073f0
40de23: mov r8, qword ptr [rsp]
40de27: mov r9, qword ptr [r8 + 8]
40de2b: test r9, r9
40de2e: je 0x40cb8b
40de34: mov eax, dword ptr [r9]
40de37: cmp eax, 2
40de3a: je 0x40e612
40de40: cmp eax, 3
40de43: je 0x40e5f7
40de49: cmp eax, 1
40de4c: je 0x40e62d
40de52: mov rdi, r9
40de55: mov qword ptr [rsp], r8
40de59: call 0x426a00
40de5e: mov r8, qword ptr [rsp]
40de62: jmp 0x40cb8b
40de67: cmp eax, 1
40de6a: jne 0x40cf6e
40de70: jmp 0x40cf53
40de75: mov rdi, qword ptr [r8 + 0x18]
40de79: mov qword ptr [rsp], r8
40de7d: call 0x4073f0
40de82: mov r8, qword ptr [rsp]
40de86: mov rdi, qword ptr [r8 + 0x10]
40de8a: mov qword ptr [rsp], r8
40de8e: call 0x4073f0
40de93: mov r8, qword ptr [rsp]
40de97: mov r9, qword ptr [r8 + 8]
40de9b: test r9, r9
40de9e: je 0x40c526
40dea4: mov eax, dword ptr [r9]
40dea7: cmp eax, 2
40deaa: je 0x40e5bc
40deb0: cmp eax, 3
40deb3: je 0x40e5a1
40deb9: cmp eax, 1
40debc: je 0x40e5d7
40dec2: mov rdi, r9
40dec5: mov qword ptr [rsp], r8
40dec9: call 0x426a00
40dece: mov r8, qword ptr [rsp]
40ded2: jmp 0x40c526
40ded7: cmp eax, 1
40deda: jne 0x40cdd6
40dee0: jmp 0x40cdbb
40dee5: mov rdi, qword ptr [r9 + 0x18]
40dee9: mov qword ptr [rsp + 8], r8
40deee: mov qword ptr [rsp], r9
40def2: call 0x4073f0
40def7: mov r8, qword ptr [rsp + 8]
40defc: mov r9, qword ptr [rsp]
40df00: mov rdi, qword ptr [r9 + 0x10]
40df04: mov qword ptr [rsp + 8], r8
40df09: mov qword ptr [rsp], r9
40df0d: call 0x4073f0
40df12: mov r8, qword ptr [rsp + 8]
40df17: mov r9, qword ptr [rsp]
40df1b: mov rdi, qword ptr [r9 + 8]
40df1f: mov qword ptr [rsp + 8], r8
40df24: mov qword ptr [rsp], r9
40df28: call 0x4073f0
40df2d: mov r8, qword ptr [rsp + 8]
40df32: mov r9, qword ptr [rsp]
40df36: jmp 0x40bbc7
40df3b: mov rdi, qword ptr [r9 + 0x18]
40df3f: mov qword ptr [rsp + 8], r8
40df44: mov qword ptr [rsp], r9
40df48: call 0x4073f0
40df4d: mov r8, qword ptr [rsp + 8]
40df52: mov r9, qword ptr [rsp]
40df56: mov rdi, qword ptr [r9 + 0x10]
40df5a: mov qword ptr [rsp + 8], r8
40df5f: mov qword ptr [rsp], r9
40df63: call 0x4073f0
40df68: mov r8, qword ptr [rsp + 8]
40df6d: mov r9, qword ptr [rsp]
40df71: mov rdi, qword ptr [r9 + 8]
40df75: mov qword ptr [rsp + 8], r8
40df7a: mov qword ptr [rsp], r9
40df7e: call 0x4073f0
40df83: mov r8, qword ptr [rsp + 8]
40df88: mov r9, qword ptr [rsp]
40df8c: jmp 0x40d075
40df91: mov rdi, qword ptr [r9 + 0x18]
40df95: mov qword ptr [rsp + 8], r8
40df9a: mov qword ptr [rsp], r9
40df9e: call 0x4073f0
40dfa3: mov r8, qword ptr [rsp + 8]
40dfa8: mov r9, qword ptr [rsp]
40dfac: mov rdi, qword ptr [r9 + 0x10]
40dfb0: mov qword ptr [rsp + 8], r8
40dfb5: mov qword ptr [rsp], r9
40dfb9: call 0x4073f0
40dfbe: mov r8, qword ptr [rsp + 8]
40dfc3: mov r9, qword ptr [rsp]
40dfc7: mov rdi, qword ptr [r9 + 8]
40dfcb: mov qword ptr [rsp + 8], r8
40dfd0: mov qword ptr [rsp], r9
40dfd4: call 0x4073f0
40dfd9: mov r8, qword ptr [rsp + 8]
40dfde: mov r9, qword ptr [rsp]
40dfe2: jmp 0x40ce11
40dfe7: mov rdi, qword ptr [r9 + 0x18]
40dfeb: mov qword ptr [rsp + 8], r8
40dff0: mov qword ptr [rsp], r9
40dff4: call 0x4073f0
40dff9: mov r8, qword ptr [rsp + 8]
40dffe: mov r9, qword ptr [rsp]
40e002: mov rdi, qword ptr [r9 + 0x10]
40e006: mov qword ptr [rsp + 8], r8
40e00b: mov qword ptr [rsp], r9
40e00f: call 0x4073f0
40e014: mov r8, qword ptr [rsp + 8]
40e019: mov r9, qword ptr [rsp]
40e01d: mov rdi, qword ptr [r9 + 8]
40e021: mov qword ptr [rsp + 8], r8
40e026: mov qword ptr [rsp], r9
40e02a: call 0x4073f0
40e02f: mov r8, qword ptr [rsp + 8]
40e034: mov r9, qword ptr [rsp]
40e038: jmp 0x40cedd
40e03d: mov rdi, qword ptr [r9 + 0x18]
40e041: mov qword ptr [rsp + 8], r8
40e046: mov qword ptr [rsp], r9
40e04a: call 0x4073f0
40e04f: mov r8, qword ptr [rsp + 8]
40e054: mov r9, qword ptr [rsp]
40e058: mov rdi, qword ptr [r9 + 0x10]
40e05c: mov qword ptr [rsp + 8], r8
40e061: mov qword ptr [rsp], r9
40e065: call 0x4073f0
40e06a: mov r8, qword ptr [rsp + 8]
40e06f: mov r9, qword ptr [rsp]
40e073: mov rdi, qword ptr [r9 + 8]
40e077: mov qword ptr [rsp + 8], r8
40e07c: mov qword ptr [rsp], r9
40e080: call 0x4073f0
40e085: mov r8, qword ptr [rsp + 8]
40e08a: mov r9, qword ptr [rsp]
40e08e: jmp 0x40cfa9
40e093: cmp eax, 1
40e096: jne 0x40d106
40e09c: jmp 0x40d0eb
40e0a1: cmp eax, 1
40e0a4: jne 0x40d1d2
40e0aa: jmp 0x40d1b7
40e0af: cmp eax, 1
40e0b2: jne 0x40d29e
40e0b8: jmp 0x40d283
40e0bd: cmp eax, 1
40e0c0: jne 0x40d36a
40e0c6: jmp 0x40d34f
40e0cb: mov rdi, qword ptr [r8 + 0x18]
40e0cf: mov qword ptr [rsp], r8
40e0d3: call 0x4073f0
40e0d8: mov r8, qword ptr [rsp]
40e0dc: mov rdi, qword ptr [r8 + 0x10]
40e0e0: mov qword ptr [rsp], r8
40e0e4: call 0x4073f0
40e0e9: mov r8, qword ptr [rsp]
40e0ed: mov r9, qword ptr [r8 + 8]
40e0f1: test r9, r9
40e0f4: je 0x40b2e4
40e0fa: mov eax, dword ptr [r9]
40e0fd: cmp eax, 2
40e100: je 0x40e9c4
40e106: cmp eax, 3
40e109: je 0x40e9a9
40e10f: cmp eax, 1
40e112: je 0x40e9df
40e118: mov rdi, r9
40e11b: mov qword ptr [rsp], r8
40e11f: call 0x426a00
40e124: mov r8, qword ptr [rsp]
40e128: jmp 0x40b2e4
40e12d: cmp eax, 1
40e130: jne 0x40d3f8
40e136: jmp 0x40d3ef
40e13b: mov rdi, qword ptr [r9 + 0x18]
40e13f: mov qword ptr [rsp + 8], r8
40e144: mov qword ptr [rsp], r9
40e148: call 0x4073f0
40e14d: mov r8, qword ptr [rsp + 8]
40e152: mov r9, qword ptr [rsp]
40e156: mov rdi, qword ptr [r9 + 0x10]
40e15a: mov qword ptr [rsp + 8], r8
40e15f: mov qword ptr [rsp], r9
40e163: call 0x4073f0
40e168: mov r8, qword ptr [rsp + 8]
40e16d: mov r9, qword ptr [rsp]
40e171: mov rdi, qword ptr [r9 + 8]
40e175: mov qword ptr [rsp + 8], r8
40e17a: mov qword ptr [rsp], r9
40e17e: call 0x4073f0
40e183: mov r8, qword ptr [rsp + 8]
40e188: mov r9, qword ptr [rsp]
40e18c: jmp 0x40d20d
40e191: mov rdi, qword ptr [r9 + 0x18]
40e195: mov qword ptr [rsp + 8], r8
40e19a: mov qword ptr [rsp], r9
40e19e: call 0x4073f0
40e1a3: mov r8, qword ptr [rsp + 8]
40e1a8: mov r9, qword ptr [rsp]
40e1ac: mov rdi, qword ptr [r9 + 0x10]
40e1b0: mov qword ptr [rsp + 8], r8
40e1b5: mov qword ptr [rsp], r9
40e1b9: call 0x4073f0
40e1be: mov r8, qword ptr [rsp + 8]
40e1c3: mov r9, qword ptr [rsp]
40e1c7: mov rdi, qword ptr [r9 + 8]
40e1cb: mov qword ptr [rsp + 8], r8
40e1d0: mov qword ptr [rsp], r9
40e1d4: call 0x4073f0
40e1d9: mov r8, qword ptr [rsp + 8]
40e1de: mov r9, qword ptr [rsp]
40e1e2: jmp 0x40d2d9
40e1e7: mov rdi, qword ptr [r15 + 0x18]
40e1eb: call 0x4073f0
40e1f0: mov rdi, qword ptr [r15 + 0x10]
40e1f4: call 0x4073f0
40e1f9: mov r8, qword ptr [r15 + 8]
40e1fd: test r8, r8
40e200: je 0x40bd97
40e206: mov eax, dword ptr [r8]
40e209: cmp eax, 2
40e20c: je 0x40ea80
40e212: cmp eax, 3
40e215: je 0x40ea6f
40e21b: cmp eax, 1
40e21e: je 0x40ea91
40e224: mov rdi, r8
40e227: call 0x426a00
40e22c: jmp 0x40bd97
40e231: mov rdi, qword ptr [r9 + 0x18]
40e235: mov qword ptr [rsp + 8], r8
40e23a: mov qword ptr [rsp], r9
40e23e: call 0x4073f0
40e243: mov r8, qword ptr [rsp + 8]
40e248: mov r9, qword ptr [rsp]
40e24c: mov rdi, qword ptr [r9 + 0x10]
40e250: mov qword ptr [rsp + 8], r8
40e255: mov qword ptr [rsp], r9
40e259: call 0x4073f0
40e25e: mov r8, qword ptr [rsp + 8]
40e263: mov r9, qword ptr [rsp]
40e267: mov rdi, qword ptr [r9 + 8]
40e26b: mov qword ptr [rsp + 8], r8
40e270: mov qword ptr [rsp], r9
40e274: call 0x4073f0
40e279: mov r8, qword ptr [rsp + 8]
40e27e: mov r9, qword ptr [rsp]
40e282: jmp 0x40d141
40e287: mov rdi, qword ptr [r9 + 0x18]
40e28b: mov qword ptr [rsp + 8], r8
40e290: mov qword ptr [rsp], r9
40e294: call 0x4073f0
40e299: mov r8, qword ptr [rsp + 8]
40e29e: mov r9, qword ptr [rsp]
40e2a2: mov rdi, qword ptr [r9 + 0x10]
40e2a6: mov qword ptr [rsp + 8], r8
40e2ab: mov qword ptr [rsp], r9
40e2af: call 0x4073f0
40e2b4: mov r8, qword ptr [rsp + 8]
40e2b9: mov r9, qword ptr [rsp]
40e2bd: mov rdi, qword ptr [r9 + 8]
40e2c1: mov qword ptr [rsp + 8], r8
40e2c6: mov qword ptr [rsp], r9
40e2ca: call 0x4073f0
40e2cf: mov r8, qword ptr [rsp + 8]
40e2d4: mov r9, qword ptr [rsp]
40e2d8: jmp 0x40c6fa
40e2dd: mov rdi, qword ptr [r9 + 0x18]
40e2e1: mov qword ptr [rsp + 8], r8
40e2e6: mov qword ptr [rsp], r9
40e2ea: call 0x4073f0
40e2ef: mov r8, qword ptr [rsp + 8]
40e2f4: mov r9, qword ptr [rsp]
40e2f8: mov rdi, qword ptr [r9 + 0x10]
40e2fc: mov qword ptr [rsp + 8], r8
40e301: mov qword ptr [rsp], r9
40e305: call 0x4073f0
40e30a: mov r8, qword ptr [rsp + 8]
40e30f: mov r9, qword ptr [rsp]
40e313: mov rdi, qword ptr [r9 + 8]
40e317: mov qword ptr [rsp + 8], r8
40e31c: mov qword ptr [rsp], r9
40e320: call 0x4073f0
40e325: mov r8, qword ptr [rsp + 8]
40e32a: mov r9, qword ptr [rsp]
40e32e: jmp 0x40b8ed
40e333: mov rdi, qword ptr [r15 + 0x18]
40e337: call 0x4073f0
40e33c: mov rdi, qword ptr [r15 + 0x10]
40e340: call 0x4073f0
40e345: mov r8, qword ptr [r15 + 8]
40e349: test r8, r8
40e34c: je 0x40d42b
40e352: mov eax, dword ptr [r8]
40e355: cmp eax, 2
40e358: je 0x40ea48
40e35e: cmp eax, 3
40e361: je 0x40ea37
40e367: cmp eax, 1
40e36a: je 0x40ea59
40e370: mov rdi, r8
40e373: call 0x426a00
40e378: jmp 0x40d42b
40e37d: mov rdi, qword ptr [r9 + 0x18]
40e381: mov qword ptr [rsp + 8], r8
40e386: mov qword ptr [rsp], r9
40e38a: call 0x4073f0
40e38f: mov r8, qword ptr [rsp + 8]
40e394: mov r9, qword ptr [rsp]
40e398: mov rdi, qword ptr [r9 + 0x10]
40e39c: mov qword ptr [rsp + 8], r8
40e3a1: mov qword ptr [rsp], r9
40e3a5: call 0x4073f0
40e3aa: mov r8, qword ptr [rsp + 8]
40e3af: mov r9, qword ptr [rsp]
40e3b3: mov rdi, qword ptr [r9 + 8]
40e3b7: mov qword ptr [rsp + 8], r8
40e3bc: mov qword ptr [rsp], r9
40e3c0: call 0x4073f0
40e3c5: mov r8, qword ptr [rsp + 8]
40e3ca: mov r9, qword ptr [rsp]
40e3ce: jmp 0x40c66a
40e3d3: mov rdi, qword ptr [r15 + 0x18]
40e3d7: call 0x4073f0
40e3dc: mov rdi, qword ptr [r15 + 0x10]
40e3e0: call 0x4073f0
40e3e5: mov r8, qword ptr [r15 + 8]
40e3e9: test r8, r8
40e3ec: je 0x40bcf7
40e3f2: mov eax, dword ptr [r8]
40e3f5: cmp eax, 2
40e3f8: je 0x40ea10
40e3fe: cmp eax, 3
40e401: je 0x40e9ff
40e407: cmp eax, 1
40e40a: je 0x40ea21
40e410: mov rdi, r8
40e413: call 0x426a00
40e418: jmp 0x40bcf7
40e41d: mov rdi, qword ptr [r9 + 0x18]
40e421: mov qword ptr [rsp + 8], r8
40e426: mov qword ptr [rsp], r9
40e42a: call 0x4073f0
40e42f: mov r8, qword ptr [rsp + 8]
40e434: mov r9, qword ptr [rsp]
40e438: mov rdi, qword ptr [r9 + 0x10]
40e43c: mov qword ptr [rsp + 8], r8
40e441: mov qword ptr [rsp], r9
40e445: call 0x4073f0
40e44a: mov r8, qword ptr [rsp + 8]
40e44f: mov r9, qword ptr [rsp]
40e453: mov rdi, qword ptr [r9 + 8]
40e457: mov qword ptr [rsp + 8], r8
40e45c: mov qword ptr [rsp], r9
40e460: call 0x4073f0
40e465: mov r8, qword ptr [rsp + 8]
40e46a: mov r9, qword ptr [rsp]
40e46e: jmp 0x40d3a5
40e473: mov rdi, qword ptr [r9 + 0x18]
40e477: mov qword ptr [rsp + 8], r8
40e47c: mov qword ptr [rsp], r9
40e480: call 0x4073f0
40e485: mov r8, qword ptr [rsp + 8]
40e48a: mov r9, qword ptr [rsp]
40e48e: mov rdi, qword ptr [r9 + 0x10]
40e492: mov qword ptr [rsp + 8], r8
40e497: mov qword ptr [rsp], r9
40e49b: call 0x4073f0
40e4a0: mov r8, qword ptr [rsp + 8]
40e4a5: mov r9, qword ptr [rsp]
40e4a9: mov rdi, qword ptr [r9 + 8]
40e4ad: mov qword ptr [rsp + 8], r8
40e4b2: mov qword ptr [rsp], r9
40e4b6: call 0x4073f0
40e4bb: mov r8, qword ptr [rsp + 8]
40e4c0: mov r9, qword ptr [rsp]
40e4c4: jmp 0x40ba05
40e4c9: mov rdi, qword ptr [r9 + 0x18]
40e4cd: mov qword ptr [rsp + 8], r8
40e4d2: mov qword ptr [rsp], r9
40e4d6: call 0x4073f0
40e4db: mov r8, qword ptr [rsp + 8]
40e4e0: mov r9, qword ptr [rsp]
40e4e4: mov rdi, qword ptr [r9 + 0x10]
40e4e8: mov qword ptr [rsp + 8], r8
40e4ed: mov qword ptr [rsp], r9
40e4f1: call 0x4073f0
40e4f6: mov r8, qword ptr [rsp + 8]
40e4fb: mov r9, qword ptr [rsp]
40e4ff: mov rdi, qword ptr [r9 + 8]
40e503: mov qword ptr [rsp + 8], r8
40e508: mov qword ptr [rsp], r9
40e50c: call 0x4073f0
40e511: mov r8, qword ptr [rsp + 8]
40e516: mov r9, qword ptr [rsp]
40e51a: jmp 0x40bb15
40e51f: mov rdi, qword ptr [r9 + 0x18]
40e523: mov qword ptr [rsp + 8], r8
40e528: mov qword ptr [rsp], r9
40e52c: call 0x4073f0
40e531: mov r8, qword ptr [rsp + 8]
40e536: mov r9, qword ptr [rsp]
40e53a: mov rdi, qword ptr [r9 + 0x10]
40e53e: mov qword ptr [rsp + 8], r8
40e543: mov qword ptr [rsp], r9
40e547: call 0x4073f0
40e54c: mov r8, qword ptr [rsp + 8]
40e551: mov r9, qword ptr [rsp]
40e555: mov rdi, qword ptr [r9 + 8]
40e559: mov qword ptr [rsp + 8], r8
40e55e: mov qword ptr [rsp], r9
40e562: call 0x4073f0
40e567: mov r8, qword ptr [rsp + 8]
40e56c: mov r9, qword ptr [rsp]
40e570: jmp 0x40c78a
40e575: mov edi, 0x20
40e57a: call 0x426410
40e57f: test rax, rax
40e582: je 0x40b850
40e588: mov dword ptr [rax], 0
40e58e: mov dword ptr [rax + 4], r12d
40e592: add rsp, 0x18
40e596: pop rbx
40e597: pop rbp
40e598: pop r12
40e59a: pop r13
40e59c: pop r14
40e59e: pop r15
40e5a0: ret 
40e5a1: mov rdi, qword ptr [r9 + 0x18]
40e5a5: mov qword ptr [rsp + 8], r8
40e5aa: mov qword ptr [rsp], r9
40e5ae: call 0x4073f0
40e5b3: mov r8, qword ptr [rsp + 8]
40e5b8: mov r9, qword ptr [rsp]
40e5bc: mov rdi, qword ptr [r9 + 0x10]
40e5c0: mov qword ptr [rsp + 8], r8
40e5c5: mov qword ptr [rsp], r9
40e5c9: call 0x4073f0
40e5ce: mov r8, qword ptr [rsp + 8]
40e5d3: mov r9, qword ptr [rsp]
40e5d7: mov rdi, qword ptr [r9 + 8]
40e5db: mov qword ptr [rsp + 8], r8
40e5e0: mov qword ptr [rsp], r9
40e5e4: call 0x4073f0
40e5e9: mov r8, qword ptr [rsp + 8]
40e5ee: mov r9, qword ptr [rsp]
40e5f2: jmp 0x40dec2
40e5f7: mov rdi, qword ptr [r9 + 0x18]
40e5fb: mov qword ptr [rsp + 8], r8
40e600: mov qword ptr [rsp], r9
40e604: call 0x4073f0
40e609: mov r8, qword ptr [rsp + 8]
40e60e: mov r9, qword ptr [rsp]
40e612: mov rdi, qword ptr [r9 + 0x10]
40e616: mov qword ptr [rsp + 8], r8
40e61b: mov qword ptr [rsp], r9
40e61f: call 0x4073f0
40e624: mov r8, qword ptr [rsp + 8]
40e629: mov r9, qword ptr [rsp]
40e62d: mov rdi, qword ptr [r9 + 8]
40e631: mov qword ptr [rsp + 8], r8
40e636: mov qword ptr [rsp], r9
40e63a: call 0x4073f0
40e63f: mov r8, qword ptr [rsp + 8]
40e644: mov r9, qword ptr [rsp]
40e648: jmp 0x40de52
40e64d: mov rdi, qword ptr [r9 + 0x18]
40e651: mov qword ptr [rsp + 8], r8
40e656: mov qword ptr [rsp], r9
40e65a: call 0x4073f0
40e65f: mov r8, qword ptr [rsp + 8]
40e664: mov r9, qword ptr [rsp]
40e668: mov rdi, qword ptr [r9 + 0x10]
40e66c: mov qword ptr [rsp + 8], r8
40e671: mov qword ptr [rsp], r9
40e675: call 0x4073f0
40e67a: mov r8, qword ptr [rsp + 8]
40e67f: mov r9, qword ptr [rsp]
40e683: mov rdi, qword ptr [r9 + 8]
40e687: mov qword ptr [rsp + 8], r8
40e68c: mov qword ptr [rsp], r9
40e690: call 0x4073f0
40e695: mov r8, qword ptr [rsp + 8]
40e69a: mov r9, qword ptr [rsp]
40e69e: jmp 0x40ddf0
40e6a3: mov rdi, qword ptr [r9 + 0x18]
40e6a7: mov qword ptr [rsp + 8], r8
40e6ac: mov qword ptr [rsp], r9
40e6b0: call 0x4073f0
40e6b5: mov r8, qword ptr [rsp + 8]
40e6ba: mov r9, qword ptr [rsp]
40e6be: mov rdi, qword ptr [r9 + 0x10]
40e6c2: mov qword ptr [rsp + 8], r8
40e6c7: mov qword ptr [rsp], r9
40e6cb: call 0x4073f0
40e6d0: mov r8, qword ptr [rsp + 8]
40e6d5: mov r9, qword ptr [rsp]
40e6d9: mov rdi, qword ptr [r9 + 8]
40e6dd: mov qword ptr [rsp + 8], r8
40e6e2: mov qword ptr [rsp], r9
40e6e6: call 0x4073f0
40e6eb: mov r8, qword ptr [rsp + 8]
40e6f0: mov r9, qword ptr [rsp]
40e6f4: jmp 0x40dd8e
40e6f9: mov rdi, qword ptr [r9 + 0x18]
40e6fd: mov qword ptr [rsp + 8], r8
40e702: mov qword ptr [rsp], r9
40e706: call 0x4073f0
40e70b: mov r8, qword ptr [rsp + 8]
40e710: mov r9, qword ptr [rsp]
40e714: mov rdi, qword ptr [r9 + 0x10]
40e718: mov qword ptr [rsp + 8], r8
40e71d: mov qword ptr [rsp], r9
40e721: call 0x4073f0
40e726: mov r8, qword ptr [rsp + 8]
40e72b: mov r9, qword ptr [rsp]
40e72f: mov rdi, qword ptr [r9 + 8]
40e733: mov qword ptr [rsp + 8], r8
40e738: mov qword ptr [rsp], r9
40e73c: call 0x4073f0
40e741: mov r8, qword ptr [rsp + 8]
40e746: mov r9, qword ptr [rsp]
40e74a: jmp 0x40dd1e
40e74f: mov rdi, qword ptr [r9 + 0x18]
40e753: mov qword ptr [rsp + 8], r8
40e758: mov qword ptr [rsp], r9
40e75c: call 0x4073f0
40e761: mov r8, qword ptr [rsp + 8]
40e766: mov r9, qword ptr [rsp]
40e76a: mov rdi, qword ptr [r9 + 0x10]
40e76e: mov qword ptr [rsp + 8], r8
40e773: mov qword ptr [rsp], r9
40e777: call 0x4073f0
40e77c: mov r8, qword ptr [rsp + 8]
40e781: mov r9, qword ptr [rsp]
40e785: mov rdi, qword ptr [r9 + 8]
40e789: mov qword ptr [rsp + 8], r8
40e78e: mov qword ptr [rsp], r9
40e792: call 0x4073f0
40e797: mov r8, qword ptr [rsp + 8]
40e79c: mov r9, qword ptr [rsp]
40e7a0: jmp 0x40dcae
40e7a5: mov rdi, qword ptr [r9 + 0x18]
40e7a9: mov qword ptr [rsp + 8], r8
40e7ae: mov qword ptr [rsp], r9
40e7b2: call 0x4073f0
40e7b7: mov r8, qword ptr [rsp + 8]
40e7bc: mov r9, qword ptr [rsp]
40e7c0: mov rdi, qword ptr [r9 + 0x10]
40e7c4: mov qword ptr [rsp + 8], r8
40e7c9: mov qword ptr [rsp], r9
40e7cd: call 0x4073f0
40e7d2: mov r8, qword ptr [rsp + 8]
40e7d7: mov r9, qword ptr [rsp]
40e7db: mov rdi, qword ptr [r9 + 8]
40e7df: mov qword ptr [rsp + 8], r8
40e7e4: mov qword ptr [rsp], r9
40e7e8: call 0x4073f0
40e7ed: mov r8, qword ptr [rsp + 8]
40e7f2: mov r9, qword ptr [rsp]
40e7f6: jmp 0x40dc3e
40e7fb: mov rdi, qword ptr [r9 + 0x18]
40e7ff: mov qword ptr [rsp + 8], r8
40e804: mov qword ptr [rsp], r9
40e808: call 0x4073f0
40e80d: mov r8, qword ptr [rsp + 8]
40e812: mov r9, qword ptr [rsp]
40e816: mov rdi, qword ptr [r9 + 0x10]
40e81a: mov qword ptr [rsp + 8], r8
40e81f: mov qword ptr [rsp], r9
40e823: call 0x4073f0
40e828: mov r8, qword ptr [rsp + 8]
40e82d: mov r9, qword ptr [rsp]
40e831: mov rdi, qword ptr [r9 + 8]
40e835: mov qword ptr [rsp + 8], r8
40e83a: mov qword ptr [rsp], r9
40e83e: call 0x4073f0
40e843: mov r8, qword ptr [rsp + 8]
40e848: mov r9, qword ptr [rsp]
40e84c: jmp 0x40dbdc
40e851: mov rdi, qword ptr [r9 + 0x18]
40e855: mov qword ptr [rsp + 8], r8
40e85a: mov qword ptr [rsp], r9
40e85e: call 0x4073f0
40e863: mov r8, qword ptr [rsp + 8]
40e868: mov r9, qword ptr [rsp]
40e86c: mov rdi, qword ptr [r9 + 0x10]
40e870: mov qword ptr [rsp + 8], r8
40e875: mov qword ptr [rsp], r9
40e879: call 0x4073f0
40e87e: mov r8, qword ptr [rsp + 8]
40e883: mov r9, qword ptr [rsp]
40e887: mov rdi, qword ptr [r9 + 8]
40e88b: mov qword ptr [rsp + 8], r8
40e890: mov qword ptr [rsp], r9
40e894: call 0x4073f0
40e899: mov r8, qword ptr [rsp + 8]
40e89e: mov r9, qword ptr [rsp]
40e8a2: jmp 0x40db5e
40e8a7: mov rdi, qword ptr [r9 + 0x18]
40e8ab: mov qword ptr [rsp + 8], r8
40e8b0: mov qword ptr [rsp], r9
40e8b4: call 0x4073f0
40e8b9: mov r8, qword ptr [rsp + 8]
40e8be: mov r9, qword ptr [rsp]
40e8c2: mov rdi, qword ptr [r9 + 0x10]
40e8c6: mov qword ptr [rsp + 8], r8
40e8cb: mov qword ptr [rsp], r9
40e8cf: call 0x4073f0
40e8d4: mov r8, qword ptr [rsp + 8]
40e8d9: mov r9, qword ptr [rsp]
40e8dd: mov rdi, qword ptr [r9 + 8]
40e8e1: mov qword ptr [rsp + 8], r8
40e8e6: mov qword ptr [rsp], r9
40e8ea: call 0x4073f0
40e8ef: mov r8, qword ptr [rsp + 8]
40e8f4: mov r9, qword ptr [rsp]
40e8f8: jmp 0x40dafc
40e8fd: mov rdi, qword ptr [r9 + 0x18]
40e901: mov qword ptr [rsp + 8], r8
40e906: mov qword ptr [rsp], r9
40e90a: call 0x4073f0
40e90f: mov r8, qword ptr [rsp + 8]
40e914: mov r9, qword ptr [rsp]
40e918: mov rdi, qword ptr [r9 + 0x10]
40e91c: mov qword ptr [rsp + 8], r8
40e921: mov qword ptr [rsp], r9
40e925: call 0x4073f0
40e92a: mov r8, qword ptr [rsp + 8]
40e92f: mov r9, qword ptr [rsp]
40e933: mov rdi, qword ptr [r9 + 8]
40e937: mov qword ptr [rsp + 8], r8
40e93c: mov qword ptr [rsp], r9
40e940: call 0x4073f0
40e945: mov r8, qword ptr [rsp + 8]
40e94a: mov r9, qword ptr [rsp]
40e94e: jmp 0x40da9a
40e953: mov rdi, qword ptr [r9 + 0x18]
40e957: mov qword ptr [rsp + 8], r8
40e95c: mov qword ptr [rsp], r9
40e960: call 0x4073f0
40e965: mov r8, qword ptr [rsp + 8]
40e96a: mov r9, qword ptr [rsp]
40e96e: mov rdi, qword ptr [r9 + 0x10]
40e972: mov qword ptr [rsp + 8], r8
40e977: mov qword ptr [rsp], r9
40e97b: call 0x4073f0
40e980: mov r8, qword ptr [rsp + 8]
40e985: mov r9, qword ptr [rsp]
40e989: mov rdi, qword ptr [r9 + 8]
40e98d: mov qword ptr [rsp + 8], r8
40e992: mov qword ptr [rsp], r9
40e996: call 0x4073f0
40e99b: mov r8, qword ptr [rsp + 8]
40e9a0: mov r9, qword ptr [rsp]
40e9a4: jmp 0x40da2a
40e9a9: mov rdi, qword ptr [r9 + 0x18]
40e9ad: mov qword ptr [rsp + 8], r8
40e9b2: mov qword ptr [rsp], r9
40e9b6: call 0x4073f0
40e9bb: mov r8, qword ptr [rsp + 8]
40e9c0: mov r9, qword ptr [rsp]
40e9c4: mov rdi, qword ptr [r9 + 0x10]
40e9c8: mov qword ptr [rsp + 8], r8
40e9cd: mov qword ptr [rsp], r9
40e9d1: call 0x4073f0
40e9d6: mov r8, qword ptr [rsp + 8]
40e9db: mov r9, qword ptr [rsp]
40e9df: mov rdi, qword ptr [r9 + 8]
40e9e3: mov qword ptr [rsp + 8], r8
40e9e8: mov qword ptr [rsp], r9
40e9ec: call 0x4073f0
40e9f1: mov r8, qword ptr [rsp + 8]
40e9f6: mov r9, qword ptr [rsp]
40e9fa: jmp 0x40e118
40e9ff: mov rdi, qword ptr [r8 + 0x18]
40ea03: mov qword ptr [rsp], r8
40ea07: call 0x4073f0
40ea0c: mov r8, qword ptr [rsp]
40ea10: mov rdi, qword ptr [r8 + 0x10]
40ea14: mov qword ptr [rsp], r8
40ea18: call 0x4073f0
40ea1d: mov r8, qword ptr [rsp]
40ea21: mov rdi, qword ptr [r8 + 8]
40ea25: mov qword ptr [rsp], r8
40ea29: call 0x4073f0
40ea2e: mov r8, qword ptr [rsp]
40ea32: jmp 0x40e410
40ea37: mov rdi, qword ptr [r8 + 0x18]
40ea3b: mov qword ptr [rsp], r8
40ea3f: call 0x4073f0
40ea44: mov r8, qword ptr [rsp]
40ea48: mov rdi, qword ptr [r8 + 0x10]
40ea4c: mov qword ptr [rsp], r8
40ea50: call 0x4073f0
40ea55: mov r8, qword ptr [rsp]
40ea59: mov rdi, qword ptr [r8 + 8]
40ea5d: mov qword ptr [rsp], r8
40ea61: call 0x4073f0
40ea66: mov r8, qword ptr [rsp]
40ea6a: jmp 0x40e370
40ea6f: mov rdi, qword ptr [r8 + 0x18]
40ea73: mov qword ptr [rsp], r8
40ea77: call 0x4073f0
40ea7c: mov r8, qword ptr [rsp]
40ea80: mov rdi, qword ptr [r8 + 0x10]
40ea84: mov qword ptr [rsp], r8
40ea88: call 0x4073f0
40ea8d: mov r8, qword ptr [rsp]
40ea91: mov rdi, qword ptr [r8 + 8]
40ea95: mov qword ptr [rsp], r8
40ea99: call 0x4073f0
40ea9e: mov r8, qword ptr [rsp]
40eaa2: jmp 0x40e224
40eaa7: mov rdi, qword ptr [r8 + 0x18]
40eaab: mov qword ptr [rsp], r8
40eaaf: call 0x4073f0
40eab4: mov r8, qword ptr [rsp]
40eab8: mov rdi, qword ptr [r8 + 0x10]
40eabc: mov qword ptr [rsp], r8
40eac0: call 0x4073f0
40eac5: mov r8, qword ptr [rsp]
40eac9: mov rdi, qword ptr [r8 + 8]
40eacd: mov qword ptr [rsp], r8
40ead1: call 0x4073f0
40ead6: mov r8, qword ptr [rsp]
40eada: jmp 0x40d7d2
40eadf: mov rdi, qword ptr [r8 + 0x18]
40eae3: mov qword ptr [rsp], r8
40eae7: call 0x4073f0
40eaec: mov r8, qword ptr [rsp]
40eaf0: mov rdi, qword ptr [r8 + 0x10]
40eaf4: mov qword ptr [rsp], r8
40eaf8: call 0x4073f0
40eafd: mov r8, qword ptr [rsp]
40eb01: mov rdi, qword ptr [r8 + 8]
40eb05: mov qword ptr [rsp], r8
40eb09: call 0x4073f0
40eb0e: mov r8, qword ptr [rsp]
40eb12: jmp 0x40d8db
40eb17: mov rdi, qword ptr [r8 + 0x18]
40eb1b: mov qword ptr [rsp], r8
40eb1f: call 0x4073f0
40eb24: mov r8, qword ptr [rsp]
40eb28: mov rdi, qword ptr [r8 + 0x10]
40eb2c: mov qword ptr [rsp], r8
40eb30: call 0x4073f0
40eb35: mov r8, qword ptr [rsp]
40eb39: mov rdi, qword ptr [r8 + 8]
40eb3d: mov qword ptr [rsp], r8
40eb41: call 0x4073f0
40eb46: mov r8, qword ptr [rsp]
40eb4a: jmp 0x40d974
40eb4f: nop 
40eb50: endbr64 
40eb54: push r15
40eb56: push r14
40eb58: xor r14d, r14d
40eb5b: push r13
40eb5d: movsxd r15, r14d
40eb60: mov r13d, 0xc8
40eb66: push r12
40eb68: lea r12, [rip + 0x86c81]
40eb6f: push rbp
40eb70: push rbx
40eb71: sub rsp, 0x768
40eb78: mov qword ptr [rsp + 0x20], rdi
40eb7d: lea rbp, [rsp + 0x50]
40eb82: mov r14, rbp
40eb85: mov rax, qword ptr fs:[0x28]
40eb8e: mov qword ptr [rsp + 0x758], rax
40eb96: xor eax, eax
40eb98: lea rax, [rsp + 0x690]
40eba0: mov qword ptr [rsp], rbp
40eba4: mov byte ptr [rsp + 0x690], 0
40ebac: mov rbx, rax
40ebaf: mov rbp, rax
40ebb2: mov dword ptr [rsp + 0x14], 0
40ebba: mov dword ptr [rsp + 0x10], 0xfffffffe
40ebc2: mov qword ptr [rsp + 8], rax
40ebc7: movsx eax, byte ptr [r12 + r15]
40ebcc: mov edi, eax
40ebce: cmp eax, -0xa
40ebd1: je 0x40eca8
40ebd7: cmp dword ptr [rsp + 0x10], -2
40ebdc: je 0x40ef58
40ebe2: mov ecx, dword ptr [rsp + 0x10]
40ebe6: test ecx, ecx
40ebe8: jle 0x40eee8
40ebee: movsxd rdx, dword ptr [rsp + 0x10]
40ebf3: lea rsi, [rip + 0x86ae6]
40ebfa: movsx edx, byte ptr [rsi + rdx]
40ebfe: lea edi, [rax + rdx]
40ec01: cmp edi, 0x36
40ec04: ja 0x40eca8
40ec0a: movsxd rdi, edi
40ec0d: lea rcx, [rip + 0x86a2c]
40ec14: movsx esi, byte ptr [rcx + rdi]
40ec18: cmp esi, edx
40ec1a: jne 0x40eca8
40ec20: lea rax, [rip + 0x86a59]
40ec27: movzx eax, byte ptr [rax + rdi]
40ec2b: movsx r15, al
40ec2f: mov edx, r15d
40ec32: neg edx
40ec34: test r15d, r15d
40ec37: jle 0x40ec68
40ec39: mov edi, dword ptr [rsp + 0x14]
40ec3d: mov dword ptr [rsp + 0x10], 0xfffffffe
40ec45: mov rdx, rbx
40ec48: cmp edi, 1
40ec4b: adc edi, -1
40ec4e: add r14, 8
40ec52: mov dword ptr [rsp + 0x14], edi
40ec56: mov rdi, qword ptr [rsp + 0x28]
40ec5b: mov qword ptr [r14], rdi
40ec5e: jmp 0x40edbf
40ec63: nop dword ptr [rax + rax]
40ec68: lea rax, [rip + 0x86999]
40ec6f: movsxd r9, edx
40ec72: movsx rsi, byte ptr [rax + r9]
40ec77: mov eax, 1
40ec7c: sub eax, esi
40ec7e: mov r15, rsi
40ec81: cdqe 
40ec83: mov rax, qword ptr [r14 + rax*8]
40ec87: cmp edx, 0xd
40ec8a: ja 0x40ed58
40ec90: lea rsi, [rip + 0x86769]
40ec97: mov edx, edx
40ec99: movsxd rdx, dword ptr [rsi + rdx*4]
40ec9d: add rdx, rsi
40eca0: notrack jmp rdx
40eca3: nop dword ptr [rax + rax]
40eca8: lea rdx, [rip + 0x86a11]
40ecaf: movsx edx, byte ptr [rdx + r15]
40ecb4: test edx, edx
40ecb6: jne 0x40ec68
40ecb8: cmp dword ptr [rsp + 0x14], 3
40ecbd: jne 0x40ecd1
40ecbf: mov edx, dword ptr [rsp + 0x10]
40ecc3: test edx, edx
40ecc5: jg 0x40ef30
40eccb: je 0x40eea0
40ecd1: lea rdx, [rip + 0x869a8]
40ecd8: jmp 0x40ecfb
40ecda: nop word ptr [rax + rax]
40ece0: cmp rbx, rbp
40ece3: je 0x40eea0
40ece9: movsx rax, byte ptr [rbx - 1]
40ecee: sub rbx, 1
40ecf2: sub r14, 8
40ecf6: movsx eax, byte ptr [r12 + rax]
40ecfb: cmp eax, -0xa
40ecfe: je 0x40ece0
40ed00: add eax, 1
40ed03: cmp eax, 0x36
40ed06: ja 0x40ece0
40ed08: cdqe 
40ed0a: lea rcx, [rip + 0x8692f]
40ed11: cmp byte ptr [rcx + rax], 1
40ed15: jne 0x40ece0
40ed17: movzx eax, byte ptr [rdx + rax]
40ed1b: movsx r15, al
40ed1f: test r15d, r15d
40ed22: jle 0x40ece0
40ed24: mov rdi, qword ptr [rsp + 0x28]
40ed29: mov dword ptr [rsp + 0x14], 3
40ed31: add r14, 8
40ed35: mov rdx, rbx
40ed38: mov qword ptr [r14], rdi
40ed3b: jmp 0x40edbf
40ed40: mov rdx, qword ptr [r14]
40ed43: test rdx, rdx
40ed46: je 0x40eea0
40ed4c: mov rdi, qword ptr [rsp + 0x20]
40ed51: mov qword ptr [rdi + 8], rdx
40ed55: nop dword ptr [rax]
40ed58: lea rdx, [r15*8]
40ed60: mov rsi, r14
40ed63: sub rsi, rdx
40ed66: mov rdx, rbx
40ed69: mov qword ptr [rsi + 8], rax
40ed6d: lea rax, [rip + 0x868a4]
40ed74: sub rdx, r15
40ed77: lea r14, [rsi + 8]
40ed7b: movsx eax, byte ptr [rax + r9]
40ed80: lea rsi, [rip + 0x86a64]
40ed87: movsx r9d, byte ptr [rdx]
40ed8b: sub eax, 0x10
40ed8e: cdqe 
40ed90: movsx esi, byte ptr [rsi + rax]
40ed94: add esi, r9d
40ed97: cmp esi, 0x36
40ed9a: ja 0x40edb0
40ed9c: movsxd rsi, esi
40ed9f: lea rcx, [rip + 0x8689a]
40eda6: cmp r9b, byte ptr [rcx + rsi]
40edaa: je 0x40ef40
40edb0: lea rsi, [rip + 0x86a30]
40edb7: movzx eax, byte ptr [rsi + rax]
40edbb: movsx r15, al
40edbf: mov byte ptr [rdx + 1], al
40edc2: lea rbx, [rdx + 1]
40edc6: lea rax, [rbp + r13 - 1]
40edcb: cmp rbx, rax
40edce: jb 0x40ee85
40edd4: sub rbx, rbp
40edd7: lea r14, [rbx + 1]
40eddb: cmp r13, 0x270f
40ede2: jg 0x40f2e7
40ede8: lea rcx, [r13 + r13]
40eded: mov eax, 0x2710
40edf2: cmp rcx, 0x2710
40edf9: cmovle rax, rcx
40edfd: lea rdi, [rax + rax*8 + 7]
40ee02: mov r13, rax
40ee05: call 0x426410
40ee0a: test rax, rax
40ee0d: je 0x40f2e7
40ee13: mov rdx, r14
40ee16: mov rsi, rbp
40ee19: mov rdi, rax
40ee1c: shl r14, 3
40ee20: call 0x401060
40ee25: lea r10, [r13 + 7]
40ee29: mov rsi, qword ptr [rsp]
40ee2d: mov rdx, r14
40ee30: and r10, 0xfffffffffffffff8
40ee34: mov qword ptr [rsp + 0x18], rax
40ee39: add r10, rax
40ee3c: mov rdi, r10
40ee3f: call 0x401060
40ee44: cmp rbp, qword ptr [rsp + 8]
40ee49: mov r9, qword ptr [rsp + 0x18]
40ee4e: mov r10, rax
40ee51: je 0x40ee68
40ee53: mov rdi, rbp
40ee56: mov qword ptr [rsp], rax
40ee5a: call 0x426a00
40ee5f: mov r9, qword ptr [rsp + 0x18]
40ee64: mov r10, qword ptr [rsp]
40ee68: add rbx, r9
40ee6b: lea rax, [r9 + r13 - 1]
40ee70: lea r14, [r10 + r14 - 8]
40ee75: cmp rbx, rax
40ee78: jae 0x40f2f5
40ee7e: mov qword ptr [rsp], r10
40ee82: mov rbp, r9
40ee85: cmp r15d, 9
40ee89: jne 0x40ebc7
40ee8f: mov r15, rbp
40ee92: xor r12d, r12d
40ee95: jmp 0x40eea9
40ee97: nop word ptr [rax + rax]
40eea0: mov r15, rbp
40eea3: mov r12d, 1
40eea9: cmp r15, qword ptr [rsp + 8]
40eeae: je 0x40eeb8
40eeb0: mov rdi, r15
40eeb3: call 0x426a00
40eeb8: mov rax, qword ptr [rsp + 0x758]
40eec0: xor rax, qword ptr fs:[0x28]
40eec9: jne 0x40f366
40eecf: add rsp, 0x768
40eed6: mov eax, r12d
40eed9: pop rbx
40eeda: pop rbp
40eedb: pop r12
40eedd: pop r13
40eedf: pop r14
40eee1: pop r15
40eee3: ret 
40eee4: nop dword ptr [rax]
40eee8: mov dword ptr [rsp + 0x10], 0
40eef0: xor edx, edx
40eef2: jmp 0x40ec01
40eef7: nop word ptr [rax + rax]
40ef00: mov rax, qword ptr [r14]
40ef03: mov edi, dword ptr [r14 - 8]
40ef07: lea rsi, [rsp + 0x30]
40ef0c: mov qword ptr [rsp + 0x18], r9
40ef11: mov rdx, qword ptr [r14 - 0x10]
40ef15: mov qword ptr [rsp + 0x38], rax
40ef1a: mov qword ptr [rsp + 0x30], rdx
40ef1f: call 0x407450
40ef24: mov r9, qword ptr [rsp + 0x18]
40ef29: jmp 0x40ed58
40ef2e: nop 
40ef30: mov dword ptr [rsp + 0x10], 0xfffffffe
40ef38: jmp 0x40ecd1
40ef3d: nop dword ptr [rax]
40ef40: lea rax, [rip + 0x86739]
40ef47: movzx eax, byte ptr [rax + rsi]
40ef4b: movsx r15, al
40ef4f: jmp 0x40edbf
40ef54: nop dword ptr [rax]
40ef58: mov rcx, qword ptr [rsp + 0x20]
40ef5d: mov rdx, qword ptr [rcx]
40ef60: movzx esi, byte ptr [rdx]
40ef63: test sil, sil
40ef66: je 0x40efb0
40ef68: mov r9, rdx
40ef6b: add rdx, 1
40ef6f: cmp sil, 0x20
40ef73: je 0x40ef60
40ef75: cmp sil, 9
40ef79: je 0x40ef60
40ef7b: movsx ecx, sil
40ef7f: lea r10d, [rsi - 0xa]
40ef83: mov dword ptr [rsp + 0x10], ecx
40ef87: cmp r10b, 0x72
40ef8b: ja 0x40f0e0
40ef91: lea r11, [rip + 0x864a0]
40ef98: movzx r10d, r10b
40ef9c: movsxd r10, dword ptr [r11 + r10*4]
40efa0: add r10, r11
40efa3: notrack jmp r10
40efa7: nop word ptr [rax + rax]
40efb0: mov rcx, qword ptr [rsp + 0x20]
40efb5: mov dword ptr [rsp + 0x10], 0
40efbd: mov qword ptr [rcx], rdx
40efc0: xor edx, edx
40efc2: jmp 0x40ec01
40efc7: movdqu xmm0, xmmword ptr [r14 - 0x20]
40efcd: movdqu xmm1, xmmword ptr [r14 - 0x10]
40efd3: lea rdx, [rsp + 0x30]
40efd8: mov esi, 0x10
40efdd: mov rax, qword ptr [r14]
40efe0: mov edi, 3
40efe5: mov qword ptr [rsp + 0x18], r9
40efea: punpcklqdq xmm0, xmm1
40efee: mov qword ptr [rsp + 0x40], rax
40eff3: movaps xmmword ptr [rsp + 0x30], xmm0
40eff8: call 0x40af30
40effd: mov r9, qword ptr [rsp + 0x18]
40f002: jmp 0x40ed58
40f007: mov rax, qword ptr [r14]
40f00a: mov rdx, qword ptr [r14 - 0x10]
40f00e: lea rsi, [rsp + 0x30]
40f013: mov edi, 0xf
40f018: mov qword ptr [rsp + 0x18], r9
40f01d: mov qword ptr [rsp + 0x30], rdx
40f022: mov qword ptr [rsp + 0x38], rax
40f027: call 0x407450
40f02c: mov r9, qword ptr [rsp + 0x18]
40f031: jmp 0x40ed58
40f036: mov rax, qword ptr [r14]
40f039: mov rdx, qword ptr [r14 - 0x10]
40f03d: lea rsi, [rsp + 0x30]
40f042: mov edi, 0xe
40f047: mov qword ptr [rsp + 0x18], r9
40f04c: mov qword ptr [rsp + 0x30], rdx
40f051: mov qword ptr [rsp + 0x38], rax
40f056: call 0x407450
40f05b: mov r9, qword ptr [rsp + 0x18]
40f060: jmp 0x40ed58
40f065: mov rax, qword ptr [r14 - 8]
40f069: jmp 0x40ed58
40f06e: mov rax, qword ptr [r14]
40f071: lea rdx, [rsp + 0x30]
40f076: mov esi, 2
40f07b: mov edi, 1
40f080: mov qword ptr [rsp + 0x18], r9
40f085: mov qword ptr [rsp + 0x30], rax
40f08a: call 0x40af30
40f08f: mov r9, qword ptr [rsp + 0x18]
40f094: jmp 0x40ed58
40f099: xor edx, edx
40f09b: xor edi, edi
40f09d: mov esi, 1
40f0a2: mov qword ptr [rsp + 0x18], r9
40f0a7: call 0x40af30
40f0ac: mov r9, qword ptr [rsp + 0x18]
40f0b1: test rax, rax
40f0b4: je 0x40ed58
40f0ba: mov rdx, qword ptr [r14]
40f0bd: mov qword ptr [rax + 8], rdx
40f0c1: jmp 0x40ed58
40f0c6: xor edx, edx
40f0c8: xor esi, esi
40f0ca: xor edi, edi
40f0cc: mov qword ptr [rsp + 0x18], r9
40f0d1: call 0x40af30
40f0d6: mov r9, qword ptr [rsp + 0x18]
40f0db: jmp 0x40ed58
40f0e0: mov rdi, qword ptr [rsp + 0x20]
40f0e5: mov dword ptr [rsp + 0x10], 0x100
40f0ed: mov qword ptr [rdi], rdx
40f0f0: mov edx, 1
40f0f5: jmp 0x40ebfe
40f0fa: mov esi, dword ptr [rsp + 0x10]
40f0fe: movzx edi, byte ptr [r9 + 1]
40f103: sub esi, 0x30
40f106: lea r9d, [rdi - 0x30]
40f10a: movsxd rsi, esi
40f10d: cmp r9b, 9
40f111: ja 0x40f135
40f113: movsx ecx, dil
40f117: movzx edi, byte ptr [rdx + 1]
40f11b: lea rsi, [rsi + rsi*4]
40f11f: add rdx, 1
40f123: sub ecx, 0x30
40f126: movsxd rcx, ecx
40f129: lea rsi, [rcx + rsi*2]
40f12d: lea ecx, [rdi - 0x30]
40f130: cmp cl, 9
40f133: jbe 0x40f113
40f135: mov rdi, qword ptr [rsp + 0x20]
40f13a: mov qword ptr [rsp + 0x28], rsi
40f13f: mov dword ptr [rsp + 0x10], 0x106
40f147: mov qword ptr [rdi], rdx
40f14a: mov edx, 0xb
40f14f: jmp 0x40ebfe
40f154: cmp sil, byte ptr [r9 + 1]
40f158: jne 0x40f0e0
40f15a: lea rdx, [r9 + 2]
40f15e: mov rcx, qword ptr [rsp + 0x20]
40f163: mov qword ptr [rcx], rdx
40f166: jmp 0x40ebe2
40f16b: mov rcx, qword ptr [rsp + 0x20]
40f170: mov dword ptr [rsp + 0x10], 0
40f178: xor edx, edx
40f17a: mov qword ptr [rcx], r9
40f17d: jmp 0x40ec01
40f182: movabs rsi, 0xffffffff00000000
40f18c: and rsi, qword ptr [rsp + 0x28]
40f191: or rsi, 4
40f195: mov rdi, qword ptr [rsp + 0x20]
40f19a: mov qword ptr [rsp + 0x28], rsi
40f19f: mov dword ptr [rsp + 0x10], 0x105
40f1a7: mov qword ptr [rdi], rdx
40f1aa: mov edx, 9
40f1af: jmp 0x40ebfe
40f1b4: movabs rsi, 0xffffffff00000000
40f1be: and rsi, qword ptr [rsp + 0x28]
40f1c3: or rsi, 7
40f1c7: mov rdi, qword ptr [rsp + 0x20]
40f1cc: mov qword ptr [rsp + 0x28], rsi
40f1d1: mov dword ptr [rsp + 0x10], 0x104
40f1d9: mov qword ptr [rdi], rdx
40f1dc: mov edx, 8
40f1e1: jmp 0x40ebfe
40f1e6: movabs rsi, 0xffffffff00000000
40f1f0: and rsi, qword ptr [rsp + 0x28]
40f1f5: or rsi, 6
40f1f9: jmp 0x40f1c7
40f1fb: movabs rsi, 0xffffffff00000000
40f205: and rsi, qword ptr [rsp + 0x28]
40f20a: or rsi, 3
40f20e: jmp 0x40f195
40f210: cmp byte ptr [r9 + 1], 0x3d
40f215: je 0x40f351
40f21b: movabs rsi, 0xffffffff00000000
40f225: and rsi, qword ptr [rsp + 0x28]
40f22a: or rsi, 8
40f22e: mov rdi, qword ptr [rsp + 0x20]
40f233: mov qword ptr [rsp + 0x28], rsi
40f238: mov dword ptr [rsp + 0x10], 0x103
40f240: mov qword ptr [rdi], rdx
40f243: mov edx, 7
40f248: jmp 0x40ebfe
40f24d: cmp byte ptr [r9 + 1], 0x3d
40f252: je 0x40f303
40f258: movabs rsi, 0xffffffff00000000
40f262: and rsi, qword ptr [rsp + 0x28]
40f267: or rsi, 9
40f26b: jmp 0x40f22e
40f26d: movabs rsi, 0xffffffff00000000
40f277: and rsi, qword ptr [rsp + 0x28]
40f27c: or rsi, 5
40f280: jmp 0x40f195
40f285: cmp byte ptr [r9 + 1], 0x3d
40f28a: jne 0x40f0e0
40f290: movabs rdx, 0xffffffff00000000
40f29a: and rdx, qword ptr [rsp + 0x28]
40f29f: or rdx, 0xc
40f2a3: mov rdi, qword ptr [rsp + 0x20]
40f2a8: add r9, 2
40f2ac: mov qword ptr [rsp + 0x28], rdx
40f2b1: mov edx, 6
40f2b6: mov dword ptr [rsp + 0x10], 0x102
40f2be: mov qword ptr [rdi], r9
40f2c1: jmp 0x40ebfe
40f2c6: cmp byte ptr [r9 + 1], 0x3d
40f2cb: je 0x40f339
40f2cd: mov rdi, qword ptr [rsp + 0x20]
40f2d2: mov dword ptr [rsp + 0x10], 0x21
40f2da: mov qword ptr [rdi], rdx
40f2dd: mov edx, 0xa
40f2e2: jmp 0x40ebfe
40f2e7: mov r15, rbp
40f2ea: mov r12d, 2
40f2f0: jmp 0x40eea9
40f2f5: mov r15, r9
40f2f8: mov r12d, 1
40f2fe: jmp 0x40eeb0
40f303: movabs rdx, 0xffffffff00000000
40f30d: and rdx, qword ptr [rsp + 0x28]
40f312: or rdx, 0xb
40f316: mov rdi, qword ptr [rsp + 0x20]
40f31b: add r9, 2
40f31f: mov qword ptr [rsp + 0x28], rdx
40f324: mov edx, 7
40f329: mov dword ptr [rsp + 0x10], 0x103
40f331: mov qword ptr [rdi], r9
40f334: jmp 0x40ebfe
40f339: movabs rdx, 0xffffffff00000000
40f343: and rdx, qword ptr [rsp + 0x28]
40f348: or rdx, 0xd
40f34c: jmp 0x40f2a3
40f351: movabs rdx, 0xffffffff00000000
40f35b: and rdx, qword ptr [rsp + 0x28]
40f360: or rdx, 0xa
40f364: jmp 0x40f316
40f366: call 0x4547a0
40f36b: nop dword ptr [rax + rax]
40f370: endbr64 
40f374: push r14
40f376: push r13
40f378: push r12
40f37a: mov r12, rsi
40f37d: push rbp
40f37e: mov rbp, rdx
40f381: push rbx
40f382: sub rsp, 0x30
40f386: mov rax, qword ptr fs:[0x28]
40f38f: mov qword ptr [rsp + 0x28], rax
40f394: xor eax, eax
40f396: test rdi, rdi
40f399: je 0x40f450
40f39f: lea rsi, [rip + 0x86466]
40f3a6: mov r14, rdi
40f3a9: call 0x4010c0
40f3ae: lea rsi, [rip + 0x8645f]
40f3b5: mov rdi, r14
40f3b8: mov r13, rax
40f3bb: call 0x4010c0
40f3c0: test r13, r13
40f3c3: je 0x40f450
40f3c9: test rax, rax
40f3cc: je 0x40f450
40f3d2: lea rbx, [rax + 9]
40f3d6: movzx eax, byte ptr [rax + 9]
40f3da: test al, al
40f3dc: je 0x40f450
40f3de: mov rdx, 0xfffffffffffffff0
40f3e5: mov rcx, qword ptr fs:[rdx]
40f3e9: jmp 0x40f3fc
40f3eb: nop dword ptr [rax + rax]
40f3f0: movzx eax, byte ptr [rbx + 1]
40f3f4: add rbx, 1
40f3f8: test al, al
40f3fa: je 0x40f450
40f3fc: movzx edx, al
40f3ff: test byte ptr [rcx + rdx*2 + 1], 0x20
40f404: jne 0x40f3f0
40f406: sub eax, 0x30
40f409: cmp al, 9
40f40b: ja 0x40f450
40f40d: lea rsi, [rsp + 8]
40f412: mov edx, 0xa
40f417: mov rdi, rbx
40f41a: call 0x4105f0
40f41f: cmp qword ptr [rsp + 8], rbx
40f424: je 0x40f450
40f426: mov qword ptr [rbp], rax
40f42a: add r13, 7
40f42e: lea rdi, [rsp + 0x10]
40f433: mov qword ptr [rsp + 0x10], r13
40f438: call 0x40eb50
40f43d: test eax, eax
40f43f: jne 0x40f450
40f441: mov rax, qword ptr [rsp + 0x18]
40f446: mov qword ptr [r12], rax
40f44a: jmp 0x40f463
40f44c: nop dword ptr [rax]
40f450: lea rax, [rip + 0xadca9]
40f457: mov qword ptr [r12], rax
40f45b: mov qword ptr [rbp], 2
40f463: mov rax, qword ptr [rsp + 0x28]
40f468: xor rax, qword ptr fs:[0x28]
40f471: jne 0x40f480
40f473: add rsp, 0x30
40f477: pop rbx
40f478: pop rbp
40f479: pop r12
40f47b: pop r13
40f47d: pop r14
40f47f: ret 
40f480: call 0x4547a0
40f485: nop word ptr cs:[rax + rax]
40f48f: nop 
40f490: endbr64 
40f494: movzx eax, byte ptr [rdi]
40f497: test al, al
40f499: je 0x40f4e8
40f49b: movzx edx, byte ptr [rdi + 1]
40f49f: lea rcx, [rdi + 1]
40f4a3: movabs rsi, 0xffffffff0fffffff
40f4ad: test dl, dl
40f4af: je 0x40f4e0
40f4b1: nop dword ptr [rax]
40f4b8: shl rax, 4
40f4bc: add rcx, 1
40f4c0: add rax, rdx
40f4c3: mov rdx, rax
40f4c6: and edx, 0xf0000000
40f4cc: je 0x40f4d8
40f4ce: and rax, rsi
40f4d1: shr rdx, 0x18
40f4d5: xor rax, rdx
40f4d8: movzx edx, byte ptr [rcx]
40f4db: test dl, dl
40f4dd: jne 0x40f4b8
40f4df: ret 
40f4e0: ret 
40f4e1: nop dword ptr [rax]
40f4e8: xor eax, eax
40f4ea: ret 
40f4eb: nop dword ptr [rax + rax]
40f4f0: endbr64 
40f4f4: xor esi, esi
40f4f6: jmp 0x465050
40f4fb: nop dword ptr [rax + rax]
40f500: endbr64 
40f504: sub rsp, 0x118
40f50b: mov r8d, edi
40f50e: xor edi, edi
40f510: movdqa xmm0, xmmword ptr [rip + 0x86348]
40f518: mov rax, qword ptr fs:[0x28]
40f521: mov qword ptr [rsp + 0x108], rax
40f529: xor eax, eax
40f52b: mov r9, rsp
40f52e: mov eax, 0xe
40f533: lea rsi, [rsp + 0x80]
40f53b: movaps xmmword ptr [rsp + 0x80], xmm0
40f543: pcmpeqd xmm0, xmm0
40f547: mov r10d, 8
40f54d: mov rdx, r9
40f550: movaps xmmword ptr [rsp + 0x90], xmm0
40f558: movaps xmmword ptr [rsp + 0xa0], xmm0
40f560: movaps xmmword ptr [rsp + 0xb0], xmm0
40f568: movaps xmmword ptr [rsp + 0xc0], xmm0
40f570: movaps xmmword ptr [rsp + 0xd0], xmm0
40f578: movaps xmmword ptr [rsp + 0xe0], xmm0
40f580: movaps xmmword ptr [rsp + 0xf0], xmm0
40f588: syscall 
40f58a: mov ecx, 0x27
40f58f: mov eax, ecx
40f591: syscall 
40f593: mov rdi, rax
40f596: mov eax, 0xba
40f59b: syscall 
40f59d: mov esi, eax
40f59f: mov edx, r8d
40f5a2: mov eax, 0xea
40f5a7: syscall 
40f5a9: cmp rax, -0x1000
40f5af: ja 0x40f5f0
40f5b1: mov r8d, eax
40f5b4: mov r10d, 8
40f5ba: xor edx, edx
40f5bc: mov rsi, r9
40f5bf: mov edi, 2
40f5c4: mov eax, 0xe
40f5c9: syscall 
40f5cb: mov rax, qword ptr [rsp + 0x108]
40f5d3: xor rax, qword ptr fs:[0x28]
40f5dc: jne 0x40f604
40f5de: mov eax, r8d
40f5e1: add rsp, 0x118
40f5e8: ret 
40f5e9: nop dword ptr [rax]
40f5f0: mov rdx, 0xffffffffffffffc0
40f5f7: neg eax
40f5f9: mov r8d, 0xffffffff
40f5ff: mov dword ptr fs:[rdx], eax
40f602: jmp 0x40f5b4
40f604: call 0x4547a0
40f609: nop dword ptr [rax]
40f610: push r15
40f612: mov rax, rdx
40f615: push r14
40f617: push r13
40f619: push r12
40f61b: push rbp
40f61c: mov rbp, rdx
40f61f: push rbx
40f620: shr rbp, 1
40f623: sub rax, rbp
40f626: mov rbx, rax
40f629: sub rsp, 0x48
40f62d: mov rcx, qword ptr [rdi]
40f630: mov qword ptr [rsp + 0x18], rdi
40f635: imul rcx, rbp
40f639: mov qword ptr [rsp + 0x20], rsi
40f63e: mov qword ptr [rsp + 0x30], rdx
40f643: lea r13, [rsi + rcx]
40f647: cmp rbp, 1
40f64b: je 0x40f655
40f64d: mov rdx, rbp
40f650: call 0x40f610
40f655: cmp rbx, 1
40f659: jbe 0x40f778
40f65f: mov r14, qword ptr [rsp + 0x18]
40f664: mov rdx, rbx
40f667: mov rsi, r13
40f66a: mov rdi, r14
40f66d: call 0x40f610
40f672: mov rcx, qword ptr [r14]
40f675: mov rax, r14
40f678: mov r15, qword ptr [r14 + 0x20]
40f67c: mov rax, qword ptr [rax + 8]
40f680: mov qword ptr [rsp + 8], rcx
40f685: mov rcx, qword ptr [r14 + 0x10]
40f689: mov r14, qword ptr [r14 + 0x18]
40f68d: mov qword ptr [rsp], rcx
40f691: cmp rax, 2
40f695: je 0x40f87e
40f69b: ja 0x40f728
40f6a1: test rax, rax
40f6a4: je 0x40f7e8
40f6aa: mov r12, qword ptr [rsp + 0x20]
40f6af: nop 
40f6b0: mov rax, qword ptr [rsp]
40f6b4: mov rdx, r14
40f6b7: mov rsi, r13
40f6ba: mov rdi, r12
40f6bd: call rax
40f6bf: test eax, eax
40f6c1: jle 0x40f9c0
40f6c7: mov rax, qword ptr [r13]
40f6cb: add r15, 8
40f6cf: add r13, 8
40f6d3: mov qword ptr [r15 - 8], rax
40f6d7: sub rbx, 1
40f6db: jne 0x40f6b0
40f6dd: nop dword ptr [rax]
40f6e0: mov rdx, qword ptr [rsp + 8]
40f6e5: mov rsi, r12
40f6e8: mov rdi, r15
40f6eb: imul rdx, rbp
40f6ef: call 0x401060
40f6f4: mov rdx, qword ptr [rsp + 0x30]
40f6f9: mov rax, qword ptr [rsp + 0x18]
40f6fe: mov rdi, qword ptr [rsp + 0x20]
40f703: sub rdx, rbx
40f706: imul rdx, qword ptr [rsp + 8]
40f70c: mov rsi, qword ptr [rax + 0x20]
40f710: add rsp, 0x48
40f714: pop rbx
40f715: pop rbp
40f716: pop r12
40f718: pop r13
40f71a: pop r14
40f71c: pop r15
40f71e: jmp 0x401060
40f723: nop dword ptr [rax + rax]
40f728: cmp rax, 3
40f72c: jne 0x40f827
40f732: mov r12, qword ptr [rsp + 0x20]
40f737: nop word ptr [rax + rax]
40f740: mov rsi, qword ptr [r13]
40f744: mov rdi, qword ptr [r12]
40f748: mov rdx, r14
40f74b: mov rax, qword ptr [rsp]
40f74f: call rax
40f751: test eax, eax
40f753: jle 0x40fa10
40f759: mov rax, qword ptr [r13]
40f75d: add r15, 8
40f761: add r13, 8
40f765: mov qword ptr [r15 - 8], rax
40f769: sub rbx, 1
40f76d: jne 0x40f740
40f76f: jmp 0x40f6e0
40f774: nop dword ptr [rax]
40f778: mov rax, qword ptr [rsp + 0x18]
40f77d: mov rcx, qword ptr [rax]
40f780: mov r15, qword ptr [rax + 0x20]
40f784: mov r14, qword ptr [rax + 0x18]
40f788: mov qword ptr [rsp + 8], rcx
40f78d: mov rcx, qword ptr [rax + 0x10]
40f791: mov rax, qword ptr [rax + 8]
40f795: mov qword ptr [rsp], rcx
40f799: cmp rax, 2
40f79d: je 0x40f875
40f7a3: ja 0x40f7c0
40f7a5: test rax, rax
40f7a8: je 0x40f7d8
40f7aa: test rbx, rbx
40f7ad: jne 0x40f6aa
40f7b3: mov r12, qword ptr [rsp + 0x20]
40f7b8: jmp 0x40f6e0
40f7bd: nop dword ptr [rax]
40f7c0: cmp rax, 3
40f7c4: jne 0x40f822
40f7c6: test rbx, rbx
40f7c9: je 0x40f7b3
40f7cb: mov ebx, 1
40f7d0: jmp 0x40f732
40f7d5: nop dword ptr [rax]
40f7d8: test rbx, rbx
40f7db: je 0x40f7b3
40f7dd: mov ebx, 1
40f7e2: nop word ptr [rax + rax]
40f7e8: mov r12, qword ptr [rsp + 0x20]
40f7ed: nop dword ptr [rax]
40f7f0: mov rax, qword ptr [rsp]
40f7f4: mov rdx, r14
40f7f7: mov rsi, r13
40f7fa: mov rdi, r12
40f7fd: call rax
40f7ff: test eax, eax
40f801: jle 0x40f998
40f807: mov eax, dword ptr [r13]
40f80b: add r15, 4
40f80f: add r13, 4
40f813: mov dword ptr [r15 - 4], eax
40f817: sub rbx, 1
40f81b: jne 0x40f7f0
40f81d: jmp 0x40f6e0
40f822: test rbx, rbx
40f825: je 0x40f7b3
40f827: mov r12, qword ptr [rsp + 0x20]
40f82c: mov rax, r12
40f82f: mov r12, r13
40f832: mov r13, rax
40f835: nop dword ptr [rax]
40f838: mov rdx, r14
40f83b: mov rax, qword ptr [rsp]
40f83f: mov rsi, r12
40f842: mov rdi, r13
40f845: call rax
40f847: mov rdx, qword ptr [rsp + 8]
40f84c: test eax, eax
40f84e: jle 0x40f9e0
40f854: mov rsi, r12
40f857: mov rdi, r15
40f85a: call 0x401150
40f85f: add r12, qword ptr [rsp + 8]
40f864: mov r15, rax
40f867: sub rbx, 1
40f86b: jne 0x40f838
40f86d: mov r12, r13
40f870: jmp 0x40f6e0
40f875: test rbx, rbx
40f878: je 0x40f7b3
40f87e: mov r12, qword ptr [rsp + 0x20]
40f883: mov qword ptr [rsp + 0x28], rbp
40f888: mov rbp, r13
40f88b: mov qword ptr [rsp + 0x38], r14
40f890: mov r14, rbx
40f893: mov rbx, r15
40f896: mov r9, r12
40f899: mov r12, qword ptr [rsp + 8]
40f89e: nop 
40f8a0: mov qword ptr [rsp + 0x10], r9
40f8a5: mov rdi, r9
40f8a8: mov rdx, qword ptr [rsp + 0x38]
40f8ad: mov rsi, rbp
40f8b0: mov rax, qword ptr [rsp]
40f8b4: mov r13, r15
40f8b7: add r15, r12
40f8ba: call rax
40f8bc: mov r9, qword ptr [rsp + 0x10]
40f8c1: test eax, eax
40f8c3: jle 0x40f980
40f8c9: mov rsi, rbp
40f8cc: sub r14, 1
40f8d0: add rbp, r12
40f8d3: cmp r15, rbx
40f8d6: jbe 0x40f945
40f8d8: mov rdx, rbx
40f8db: lea rax, [rsi + 0xf]
40f8df: not rdx
40f8e2: sub rax, r13
40f8e5: add rdx, r15
40f8e8: cmp rax, 0x1e
40f8ec: jbe 0x40fa30
40f8f2: cmp rdx, 0x1f
40f8f6: jbe 0x40fa30
40f8fc: shr rdx, 3
40f900: xor eax, eax
40f902: add rdx, 1
40f906: mov rdi, rdx
40f909: shr rdi, 1
40f90c: shl rdi, 4
40f910: movdqu xmm0, xmmword ptr [rsi + rax]
40f915: movups xmmword ptr [r13 + rax], xmm0
40f91b: add rax, 0x10
40f91f: cmp rdi, rax
40f922: jne 0x40f910
40f924: mov rdi, rdx
40f927: and rdi, 0xfffffffffffffffe
40f92b: lea rax, [rdi*8]
40f933: add rsi, rax
40f936: add r13, rax
40f939: cmp rdi, rdx
40f93c: je 0x40f945
40f93e: mov rax, qword ptr [rsi]
40f941: mov qword ptr [r13], rax
40f945: add rbx, r12
40f948: cmp qword ptr [rsp + 0x28], 0
40f94e: je 0x40fa44
40f954: test r14, r14
40f957: jne 0x40f8a0
40f95d: mov rbp, qword ptr [rsp + 0x28]
40f962: mov rbx, r14
40f965: mov r12, r9
40f968: test rbp, rbp
40f96b: je 0x40f6f4
40f971: jmp 0x40f6e0
40f976: nop word ptr cs:[rax + rax]
40f980: mov rsi, r9
40f983: sub qword ptr [rsp + 0x28], 1
40f989: add r9, r12
40f98c: jmp 0x40f8d3
40f991: nop dword ptr [rax]
40f998: mov eax, dword ptr [r12]
40f99c: add r15, 4
40f9a0: add r12, 4
40f9a4: mov dword ptr [r15 - 4], eax
40f9a8: sub rbp, 1
40f9ac: jne 0x40f7f0
40f9b2: jmp 0x40f6f4
40f9b7: nop word ptr [rax + rax]
40f9c0: mov rax, qword ptr [r12]
40f9c4: add r15, 8
40f9c8: add r12, 8
40f9cc: mov qword ptr [r15 - 8], rax
40f9d0: sub rbp, 1
40f9d4: jne 0x40f6b0
40f9da: jmp 0x40f6f4
40f9df: nop 
40f9e0: mov rsi, r13
40f9e3: mov rdi, r15
40f9e6: call 0x401150
40f9eb: add r13, qword ptr [rsp + 8]
40f9f0: mov r15, rax
40f9f3: sub rbp, 1
40f9f7: je 0x40f6f4
40f9fd: test rbx, rbx
40fa00: jne 0x40f838
40fa06: mov r12, r13
40fa09: jmp 0x40f968
40fa0e: nop 
40fa10: mov rax, qword ptr [r12]
40fa14: add r15, 8
40fa18: add r12, 8
40fa1c: mov qword ptr [r15 - 8], rax
40fa20: sub rbp, 1
40fa24: jne 0x40f740
40fa2a: jmp 0x40f6f4
40fa2f: nop 
40fa30: mov rdi, r13
40fa33: nop dword ptr [rax + rax]
40fa38: movsq qword ptr [rdi], qword ptr [rsi]
40fa3a: cmp r15, rdi
40fa3d: ja 0x40fa38
40fa3f: jmp 0x40f945
40fa44: mov rbx, r14
40fa47: jmp 0x40f6f4
40fa4c: nop dword ptr [rax]
40fa50: endbr64 
40fa54: push rbp
40fa55: mov rbp, rsp
40fa58: push r15
40fa5a: mov r15, rdx
40fa5d: push r14
40fa5f: mov r14, r8
40fa62: push r13
40fa64: push r12
40fa66: push rbx
40fa67: mov rbx, rcx
40fa6a: sub rsp, 0x68
40fa6e: mov qword ptr [rbp - 0x70], rdi
40fa72: mov qword ptr [rbp - 0x78], rsi
40fa76: mov rax, qword ptr fs:[0x28]
40fa7f: mov qword ptr [rbp - 0x38], rax
40fa83: xor eax, eax
40fa85: cmp rdx, 0x20
40fa89: ja 0x40fd68
40fa8f: imul rsi, rdx
40fa93: mov r12, rsi
40fa96: cmp r12, 0x3ff
40fa9d: ja 0x40fb00
40fa9f: add r12, 0x17
40faa3: mov rdx, rsp
40faa6: mov rax, r12
40faa9: and r12, 0xfffffffffffff000
40fab0: sub rdx, r12
40fab3: and rax, 0xfffffffffffffff0
40fab7: cmp rsp, rdx
40faba: je 0x40fad1
40fabc: sub rsp, 0x1000
40fac3: or qword ptr [rsp + 0xff8], 0
40facc: cmp rsp, rdx
40facf: jne 0x40fabc
40fad1: and eax, 0xfff
40fad6: sub rsp, rax
40fad9: test rax, rax
40fadc: je 0x40fae4
40fade: or qword ptr [rsp + rax - 8], 0
40fae4: mov qword ptr [rbp - 0x88], 0
40faef: lea r10, [rsp + 0xf]
40faf4: and r10, 0xfffffffffffffff0
40faf8: mov qword ptr [rbp - 0x40], r10
40fafc: jmp 0x40fb5c
40fafe: nop 
40fb00: mov edx, dword ptr [rip + 0xb2cea]
40fb06: test edx, edx
40fb08: je 0x40fdb0
40fb0e: movsxd rsi, edx
40fb11: mov rax, r12
40fb14: xor edx, edx
40fb16: div rsi
40fb19: cmp rax, qword ptr [rip + 0xb2cc8]
40fb20: ja 0x40fd90
40fb26: mov r13, 0xffffffffffffffc0
40fb2d: mov rdi, r12
40fb30: mov edx, dword ptr fs:[r13]
40fb35: mov dword ptr [rbp - 0x68], edx
40fb38: call 0x426410
40fb3d: mov edx, dword ptr [rbp - 0x68]
40fb40: mov qword ptr [rbp - 0x88], rax
40fb47: mov dword ptr fs:[r13], edx
40fb4c: test rax, rax
40fb4f: je 0x40fd90
40fb55: mov qword ptr [rbp - 0x40], rax
40fb59: mov r10, rax
40fb5c: mov qword ptr [rbp - 0x60], r15
40fb60: mov qword ptr [rbp - 0x58], 4
40fb68: mov qword ptr [rbp - 0x50], rbx
40fb6c: mov qword ptr [rbp - 0x48], r14
40fb70: cmp r15, 0x20
40fb74: jbe 0x40fd10
40fb7a: mov rax, qword ptr [rbp - 0x78]
40fb7e: lea rsi, [rax*8]
40fb86: lea r14, [r10 + rsi]
40fb8a: lea rax, [r14 + rsi]
40fb8e: mov qword ptr [rbp - 0x80], rax
40fb92: cmp r14, rax
40fb95: jae 0x40fe34
40fb9b: lea rdx, [rsi - 1]
40fb9f: mov rax, r14
40fba2: mov rcx, rdx
40fba5: shr rcx, 3
40fba9: add rcx, 1
40fbad: cmp rdx, 0x17
40fbb1: jbe 0x40fe3c
40fbb7: mov rbx, qword ptr [rbp - 0x70]
40fbbb: lea rdx, [rbx + r15]
40fbbf: movq xmm0, rbx
40fbc4: lea rbx, [r15 + r15]
40fbc8: movq xmm3, rdx
40fbcd: mov rdx, rcx
40fbd0: movq xmm2, rbx
40fbd5: shr rdx, 1
40fbd8: punpcklqdq xmm0, xmm3
40fbdc: punpcklqdq xmm2, xmm2
40fbe0: shl rdx, 4
40fbe4: add rdx, r14
40fbe7: nop word ptr [rax + rax]
40fbf0: movdqa xmm1, xmm0
40fbf4: add rax, 0x10
40fbf8: paddq xmm0, xmm2
40fbfc: movups xmmword ptr [rax - 0x10], xmm1
40fc00: cmp rax, rdx
40fc03: jne 0x40fbf0
40fc05: mov rdi, rcx
40fc08: mov rax, r15
40fc0b: and rdi, 0xfffffffffffffffe
40fc0f: imul rax, rdi
40fc13: lea rdx, [r14 + rdi*8]
40fc17: add rax, qword ptr [rbp - 0x70]
40fc1b: cmp rdi, rcx
40fc1e: je 0x40fc47
40fc20: mov rbx, qword ptr [rbp - 0x80]
40fc24: lea rcx, [rdx + 8]
40fc28: mov qword ptr [rdx], rax
40fc2b: add rax, r15
40fc2e: cmp rbx, rcx
40fc31: jbe 0x40fc47
40fc33: lea rcx, [rdx + 0x10]
40fc37: mov qword ptr [rdx + 8], rax
40fc3b: add rax, r15
40fc3e: cmp rbx, rcx
40fc41: jbe 0x40fc47
40fc43: mov qword ptr [rdx + 0x10], rax
40fc47: add rsi, qword ptr [rbp - 0x40]
40fc4b: movdqa xmm0, xmmword ptr [rip + 0x85c1d]
40fc53: mov rdx, qword ptr [rbp - 0x78]
40fc57: movaps xmmword ptr [rbp - 0x60], xmm0
40fc5b: cmp rdx, 1
40fc5f: jbe 0x40fd80
40fc65: lea rdi, [rbp - 0x60]
40fc69: call 0x40f610
40fc6e: mov qword ptr [rbp - 0x68], 0
40fc76: mov rbx, qword ptr [rbp - 0x70]
40fc7a: jmp 0x40fc96
40fc7c: nop dword ptr [rax]
40fc80: add qword ptr [rbp - 0x68], 1
40fc85: add rbx, r15
40fc88: mov rax, qword ptr [rbp - 0x68]
40fc8c: cmp qword ptr [rbp - 0x78], rax
40fc90: jbe 0x40fd36
40fc96: mov rax, qword ptr [rbp - 0x68]
40fc9a: mov r12, qword ptr [r14 + rax*8]
40fc9e: cmp r12, rbx
40fca1: je 0x40fc80
40fca3: mov rdi, qword ptr [rbp - 0x80]
40fca7: mov rdx, r15
40fcaa: mov rsi, rbx
40fcad: call 0x401060
40fcb2: mov r13, qword ptr [rbp - 0x68]
40fcb6: mov rdi, rbx
40fcb9: jmp 0x40fcc3
40fcbb: nop dword ptr [rax + rax]
40fcc0: mov r12, rax
40fcc3: mov rax, r12
40fcc6: xor edx, edx
40fcc8: sub rax, qword ptr [rbp - 0x70]
40fccc: mov rsi, r13
40fccf: div r15
40fcd2: mov qword ptr [r14 + rsi*8], rdi
40fcd6: mov rdx, r15
40fcd9: mov rsi, r12
40fcdc: mov r13, rax
40fcdf: call 0x401060
40fce4: lea rdx, [r14 + r13*8]
40fce8: mov rdi, r12
40fceb: mov rax, qword ptr [rdx]
40fcee: cmp rax, rbx
40fcf1: jne 0x40fcc0
40fcf3: mov qword ptr [rdx], r12
40fcf6: mov rsi, qword ptr [rbp - 0x80]
40fcfa: mov rdx, r15
40fcfd: call 0x401060
40fd02: jmp 0x40fc80
40fd07: nop word ptr [rax + rax]
40fd10: mov rax, qword ptr [rbp - 0x70]
40fd14: or rax, r15
40fd17: test al, 3
40fd19: je 0x40fe00
40fd1f: mov rdx, qword ptr [rbp - 0x78]
40fd23: cmp rdx, 1
40fd27: jbe 0x40fd36
40fd29: mov rsi, qword ptr [rbp - 0x70]
40fd2d: lea rdi, [rbp - 0x60]
40fd31: call 0x40f610
40fd36: mov rdi, qword ptr [rbp - 0x88]
40fd3d: call 0x426a00
40fd42: mov rax, qword ptr [rbp - 0x38]
40fd46: xor rax, qword ptr fs:[0x28]
40fd4f: jne 0x40fe55
40fd55: lea rsp, [rbp - 0x28]
40fd59: pop rbx
40fd5a: pop r12
40fd5c: pop r13
40fd5e: pop r14
40fd60: pop r15
40fd62: pop rbp
40fd63: ret 
40fd64: nop dword ptr [rax]
40fd68: mov r12, rsi
40fd6b: shl r12, 4
40fd6f: add r12, rdx
40fd72: jmp 0x40fa96
40fd77: nop word ptr [rax + rax]
40fd80: cmp qword ptr [rbp - 0x78], 0
40fd85: jne 0x40fc6e
40fd8b: jmp 0x40fd36
40fd8d: nop dword ptr [rax]
40fd90: mov rsi, qword ptr [rbp - 0x78]
40fd94: mov rdi, qword ptr [rbp - 0x70]
40fd98: mov r8, r14
40fd9b: mov rcx, rbx
40fd9e: mov rdx, r15
40fda1: call 0x465450
40fda6: jmp 0x40fd42
40fda8: nop dword ptr [rax + rax]
40fdb0: mov edi, 0x55
40fdb5: call 0x450760
40fdba: movabs rdx, 0x1fffffffffffffff
40fdc4: cmp rax, -1
40fdc8: je 0x40fdd9
40fdca: test rax, rax
40fdcd: lea rdx, [rax + 3]
40fdd1: cmovns rdx, rax
40fdd5: sar rdx, 2
40fdd9: mov qword ptr [rip + 0xb2a08], rdx
40fde0: mov edi, 0x1e
40fde5: call 0x450760
40fdea: mov dword ptr [rip + 0xb2a00], eax
40fdf0: mov edx, eax
40fdf2: jmp 0x40fb0e
40fdf7: nop word ptr [rax + rax]
40fe00: cmp r15, 4
40fe04: je 0x40fe48
40fe06: cmp r15, 8
40fe0a: je 0x40fe21
40fe0c: test al, 7
40fe0e: jne 0x40fd1f
40fe14: mov qword ptr [rbp - 0x58], 2
40fe1c: jmp 0x40fd1f
40fe21: test byte ptr [rbp - 0x70], 7
40fe25: jne 0x40fe0c
40fe27: mov qword ptr [rbp - 0x58], 1
40fe2f: jmp 0x40fd1f
40fe34: mov rsi, r14
40fe37: jmp 0x40fc4b
40fe3c: mov rax, qword ptr [rbp - 0x70]
40fe40: mov rdx, r14
40fe43: jmp 0x40fc20
40fe48: mov qword ptr [rbp - 0x58], 0
40fe50: jmp 0x40fd1f
40fe55: call 0x4547a0
40fe5a: nop word ptr [rax + rax]
40fe60: endbr64 
40fe64: xor r8d, r8d
40fe67: jmp 0x40fa50
40fe6c: nop dword ptr [rax]
40fe70: endbr64 
40fe74: push r15
40fe76: push r14
40fe78: push r13
40fe7a: push r12
40fe7c: push rbp
40fe7d: push rbx
40fe7e: sub rsp, 8
40fe82: mov rbx, qword ptr [rip + 0xb2e4f]
40fe89: test rbx, rbx
40fe8c: je 0x40ff40
40fe92: movzx eax, byte ptr [rdi]
40fe95: mov r13, rdi
40fe98: test al, al
40fe9a: je 0x40ff40
40fea0: cmp byte ptr [rdi + 1], 0
40fea4: mov r12, qword ptr [rbx]
40fea7: jne 0x40fee8
40fea9: or ah, 0x3d
40feac: test r12, r12
40feaf: jne 0x40fec5
40feb1: jmp 0x40fed0
40feb3: nop dword ptr [rax + rax]
40feb8: mov r12, qword ptr [rbx + 8]
40febc: add rbx, 8
40fec0: test r12, r12
40fec3: je 0x40fed0
40fec5: cmp ax, word ptr [r12]
40feca: jne 0x40feb8
40fecc: add r12, 2
40fed0: add rsp, 8
40fed4: mov rax, r12
40fed7: pop rbx
40fed8: pop rbp
40fed9: pop r12
40fedb: pop r13
40fedd: pop r14
40fedf: pop r15
40fee1: ret 
40fee2: nop word ptr [rax + rax]
40fee8: call 0x401180
40feed: add r13, 2
40fef1: movzx ebp, word ptr [r13 - 2]
40fef6: mov r14, rax
40fef9: lea r15, [rax - 2]
40fefd: test r12, r12
40ff00: jne 0x40ff15
40ff02: jmp 0x40fed0
40ff04: nop dword ptr [rax]
40ff08: mov r12, qword ptr [rbx + 8]
40ff0c: add rbx, 8
40ff10: test r12, r12
40ff13: je 0x40fed0
40ff15: cmp bp, word ptr [r12]
40ff1a: jne 0x40ff08
40ff1c: lea rdi, [r12 + 2]
40ff21: mov rdx, r15
40ff24: mov rsi, r13
40ff27: call 0x4010d0
40ff2c: test eax, eax
40ff2e: jne 0x40ff08
40ff30: cmp byte ptr [r12 + r14], 0x3d
40ff35: jne 0x40ff08
40ff37: lea r12, [r12 + r14 + 1]
40ff3c: jmp 0x40fed0
40ff3e: nop 
40ff40: xor r12d, r12d
40ff43: jmp 0x40fed0
40ff45: nop word ptr cs:[rax + rax]
40ff4f: nop 
40ff50: endbr64 
40ff54: push r15
40ff56: push r14
40ff58: push r13
40ff5a: mov r13d, edx
40ff5d: push r12
40ff5f: push rbp
40ff60: mov ebp, edi
40ff62: push rbx
40ff63: mov rbx, rsi
40ff66: sub rsp, 8
40ff6a: cmp qword ptr [rip + 0xb0066], 0
40ff72: je 0x40ff7c
40ff74: test cl, cl
40ff76: jne 0x4101ce
40ff7c: xor r12d, r12d
40ff7f: nop 
40ff80: mov eax, dword ptr fs:[0x18]
40ff88: mov edx, 1
40ff8d: test eax, eax
40ff8f: jne 0x41017a
40ff95: cmpxchg dword ptr [rip + 0xb37b4], edx
40ff9c: mov r14, qword ptr [rbx]
40ff9f: test r14, r14
40ffa2: jne 0x40ffdf
40ffa4: jmp 0x41011f
40ffa9: nop dword ptr [rax]
40ffb0: cmp rdx, 2
40ffb4: je 0x410070
40ffba: mov eax, dword ptr fs:[0x18]
40ffc2: mov edx, 1
40ffc7: test eax, eax
40ffc9: jne 0x410090
40ffcf: cmpxchg dword ptr [rip + 0xb377a], edx
40ffd6: cmp qword ptr [rip + 0xb377b], r15
40ffdd: jne 0x40ff9c
40ffdf: mov rax, qword ptr [r14 + 8]
40ffe3: test rax, rax
40ffe6: je 0x4100f0
40ffec: lea r8, [rax - 1]
40fff0: mov r15, qword ptr [rip + 0xb3761]
40fff7: mov qword ptr [r14 + 8], r8
40fffb: mov eax, dword ptr fs:[0x18]
410003: test eax, eax
410005: jne 0x4100b8
41000b: sub dword ptr [rip + 0xb373e], 1
410012: mov rax, r8
410015: shl rax, 5
410019: add rax, r14
41001c: mov rdx, qword ptr [rax + 0x10]
410020: cmp rdx, 3
410024: je 0x410058
410026: cmp rdx, 4
41002a: jne 0x40ffb0
41002c: mov rdx, qword ptr [rax + 0x18]
410030: mov rdi, qword ptr [rax + 0x20]
410034: mov qword ptr [rax + 0x10], 0
41003c: mov esi, ebp
41003e: ror rdx, 0x11
410042: xor rdx, qword ptr fs:[0x30]
41004b: call rdx
41004d: jmp 0x40ffba
410052: nop word ptr [rax + rax]
410058: mov rax, qword ptr [rax + 0x18]
41005c: ror rax, 0x11
410060: xor rax, qword ptr fs:[0x30]
410069: call rax
41006b: jmp 0x40ffba
410070: mov rdx, qword ptr [rax + 0x18]
410074: mov rsi, qword ptr [rax + 0x20]
410078: mov edi, ebp
41007a: ror rdx, 0x11
41007e: xor rdx, qword ptr fs:[0x30]
410087: call rdx
410089: jmp 0x40ffba
41008e: nop 
410090: mov eax, r12d
410093: lock cmpxchg dword ptr [rip + 0xb36b5], edx
41009b: je 0x40ffd6
4100a1: lea rdi, [rip + 0xb36a8]
4100a8: call 0x421250
4100ad: jmp 0x40ffd6
4100b2: nop word ptr [rax + rax]
4100b8: mov eax, r12d
4100bb: xchg dword ptr [rip + 0xb368f], eax
4100c1: cmp eax, 1
4100c4: jle 0x410012
4100ca: xor r10d, r10d
4100cd: mov edx, 1
4100d2: mov esi, 0x81
4100d7: mov eax, 0xca
4100dc: lea rdi, [rip + 0xb366d]
4100e3: syscall 
4100e5: jmp 0x410012
4100ea: nop word ptr [rax + rax]
4100f0: mov rax, qword ptr [r14]
4100f3: mov qword ptr [rbx], rax
4100f6: test rax, rax
4100f9: je 0x410103
4100fb: mov rdi, r14
4100fe: call 0x426a00
410103: mov eax, dword ptr fs:[0x18]
41010b: test eax, eax
41010d: jne 0x41019c
410113: sub dword ptr [rip + 0xb3636], 1
41011a: jmp 0x40ff80
41011f: mov byte ptr [rip + 0xb26ce], 1
410126: mov eax, dword ptr fs:[0x18]
41012e: test eax, eax
410130: jne 0x4101d8
410136: sub dword ptr [rip + 0xb3613], 1
41013d: test r13b, r13b
410140: je 0x410173
410142: mov rbx, 0x4c2208
410149: mov rax, 0x4c2210
410150: cmp rbx, rax
410153: jae 0x410173
410155: sub rax, 1
410159: sub rax, rbx
41015c: shr rax, 3
410160: lea r12, [rbx + rax*8 + 8]
410165: nop dword ptr [rax]
410168: call qword ptr [rbx]
41016a: add rbx, 8
41016e: cmp r12, rbx
410171: jne 0x410168
410173: mov edi, ebp
410175: call 0x4505c0
41017a: mov eax, r12d
41017d: lock cmpxchg dword ptr [rip + 0xb35cb], edx
410185: je 0x40ff9c
41018b: lea rdi, [rip + 0xb35be]
410192: call 0x421250
410197: jmp 0x40ff9c
41019c: mov eax, r12d
41019f: xchg dword ptr [rip + 0xb35ab], eax
4101a5: sub eax, 1
4101a8: jle 0x40ff80
4101ae: xor r10d, r10d
4101b1: mov edx, 1
4101b6: mov esi, 0x81
4101bb: mov eax, 0xca
4101c0: lea rdi, [rip + 0xb3589]
4101c7: syscall 
4101c9: jmp 0x40ff80
4101ce: call 0
4101d3: jmp 0x40ff7c
4101d8: xor eax, eax
4101da: xchg dword ptr [rip + 0xb3570], eax
4101e0: sub eax, 1
4101e3: jle 0x41013d
4101e9: xor r10d, r10d
4101ec: mov edx, 1
4101f1: mov esi, 0x81
4101f6: mov eax, 0xca
4101fb: lea rdi, [rip + 0xb354e]
410202: syscall 
410204: jmp 0x41013d
410209: nop dword ptr [rax]
410210: endbr64 
410214: push rax
410215: pop rax
410216: mov ecx, 1
41021b: mov edx, 1
410220: lea rsi, [rip + 0xafed9]
410227: sub rsp, 8
41022b: call 0x40ff50
410230: endbr64 
410234: cmp byte ptr [rip + 0xb25b9], 0
41023b: jne 0x41032d
410241: push rbp
410242: push rbx
410243: mov rbx, rdi
410246: sub rsp, 8
41024a: mov rbp, qword ptr [rdi]
41024d: test rbp, rbp
410250: je 0x41030e
410256: mov rsi, rbp
410259: xor edi, edi
41025b: nop dword ptr [rax + rax]
410260: mov rax, qword ptr [rsi + 8]
410264: jmp 0x410286
410266: nop word ptr cs:[rax + rax]
410270: lea rdx, [rax - 1]
410274: mov rcx, rdx
410277: shl rcx, 5
41027b: cmp qword ptr [rsi + rcx + 0x10], 0
410281: jne 0x4102a8
410283: mov rax, rdx
410286: test rax, rax
410289: jne 0x410270
41028b: mov rax, qword ptr [rsi]
41028e: mov qword ptr [rsi + 8], 0
410296: mov rdi, rsi
410299: test rax, rax
41029c: je 0x410300
41029e: mov rsi, rax
4102a1: jmp 0x410260
4102a3: nop dword ptr [rax + rax]
4102a8: cmp rax, 0x20
4102ac: je 0x4102db
4102ae: mov rdx, rax
4102b1: add rax, 1
4102b5: mov qword ptr [rsi + 8], rax
4102b9: shl rdx, 5
4102bd: lea r8, [rsi + rdx + 0x10]
4102c2: mov qword ptr [r8], 1
4102c9: mov rax, r8
4102cc: add qword ptr [rip + 0xb3484], 1
4102d4: add rsp, 8
4102d8: pop rbx
4102d9: pop rbp
4102da: ret 
4102db: mov rsi, rdi
4102de: test rdi, rdi
4102e1: jne 0x410300
4102e3: mov esi, 0x410
4102e8: mov edi, 1
4102ed: call 0x427d10
4102f2: mov rsi, rax
4102f5: test rax, rax
4102f8: je 0x410334
4102fa: mov qword ptr [rsi], rbp
4102fd: mov qword ptr [rbx], rsi
410300: mov qword ptr [rsi + 8], 1
410308: lea r8, [rsi + 0x10]
41030c: jmp 0x4102c2
41030e: lea rcx, [rip + 0x85593]
410315: mov edx, 0x70
41031a: lea rsi, [rip + 0x8555f]
410321: lea rdi, [rip + 0x85565]
410328: call 0x4032a0
41032d: xor r8d, r8d
410330: mov rax, r8
410333: ret 
410334: add rsp, 8
410338: xor r8d, r8d
41033b: mov rax, r8
41033e: pop rbx
41033f: pop rbp
410340: ret 
410341: nop word ptr cs:[rax + rax]
41034c: nop dword ptr [rax]
410350: endbr64 
410354: push rbp
410355: push rbx
410356: sub rsp, 0x18
41035a: mov qword ptr [rsp], rsi
41035e: mov qword ptr [rsp + 8], rdx
410363: test rdi, rdi
410366: je 0x410458
41036c: mov rbx, rdi
41036f: mov rbp, rcx
410372: mov eax, dword ptr fs:[0x18]
41037a: test eax, eax
41037c: jne 0x4103e8
41037e: mov edx, 1
410383: cmpxchg dword ptr [rip + 0xb33c6], edx
41038a: mov rdi, rbp
41038d: call 0x410230
410392: test rax, rax
410395: je 0x41043d
41039b: movq xmm0, qword ptr [rsp]
4103a0: mov rdi, rbx
4103a3: mov qword ptr [rax], 4
4103aa: xor rdi, qword ptr fs:[0x30]
4103b3: rol rdi, 0x11
4103b7: movhps xmm0, qword ptr [rsp + 8]
4103bc: mov qword ptr [rax + 8], rdi
4103c0: movups xmmword ptr [rax + 0x10], xmm0
4103c4: mov r8d, dword ptr fs:[0x18]
4103cd: test r8d, r8d
4103d0: jne 0x410410
4103d2: sub dword ptr [rip + 0xb3377], 1
4103d9: add rsp, 0x18
4103dd: mov eax, r8d
4103e0: pop rbx
4103e1: pop rbp
4103e2: ret 
4103e3: nop dword ptr [rax + rax]
4103e8: xor eax, eax
4103ea: mov edx, 1
4103ef: lock cmpxchg dword ptr [rip + 0xb3359], edx
4103f7: je 0x41038a
4103f9: lea rdi, [rip + 0xb3350]
410400: call 0x421250
410405: jmp 0x41038a
410407: nop word ptr [rax + rax]
410410: xor eax, eax
410412: xchg dword ptr [rip + 0xb3338], eax
410418: xor r8d, r8d
41041b: cmp eax, 1
41041e: jle 0x4103d9
410420: xor r10d, r10d
410423: mov edx, 1
410428: mov esi, 0x81
41042d: mov eax, 0xca
410432: lea rdi, [rip + 0xb3317]
410439: syscall 
41043b: jmp 0x4103d9
41043d: mov eax, dword ptr fs:[0x18]
410445: test eax, eax
410447: jne 0x410477
410449: sub dword ptr [rip + 0xb3300], 1
410450: mov r8d, 0xffffffff
410456: jmp 0x4103d9
410458: lea rcx, [rip + 0x85461]
41045f: mov edx, 0x29
410464: lea rsi, [rip + 0x85415]
41046b: lea rdi, [rip + 0x85425]
410472: call 0x4032a0
410477: xor eax, eax
410479: xchg dword ptr [rip + 0xb32d1], eax
41047f: or r8d, 0xffffffff
410483: sub eax, 1
410486: jle 0x4103d9
41048c: jmp 0x410420
41048e: nop 
410490: endbr64 
410494: push rbx
410495: sub rsp, 0x10
410499: mov qword ptr [rsp], rsi
41049d: mov qword ptr [rsp + 8], rdx
4104a2: test rdi, rdi
4104a5: je 0x410598
4104ab: mov rbx, rdi
4104ae: mov eax, dword ptr fs:[0x18]
4104b6: test eax, eax
4104b8: jne 0x410528
4104ba: mov edx, 1
4104bf: cmpxchg dword ptr [rip + 0xb328a], edx
4104c6: lea rdi, [rip + 0xafc33]
4104cd: call 0x410230
4104d2: test rax, rax
4104d5: je 0x41057d
4104db: movq xmm0, qword ptr [rsp]
4104e0: mov rdi, rbx
4104e3: mov qword ptr [rax], 4
4104ea: xor rdi, qword ptr fs:[0x30]
4104f3: rol rdi, 0x11
4104f7: movhps xmm0, qword ptr [rsp + 8]
4104fc: mov qword ptr [rax + 8], rdi
410500: movups xmmword ptr [rax + 0x10], xmm0
410504: mov r8d, dword ptr fs:[0x18]
41050d: test r8d, r8d
410510: jne 0x410550
410512: sub dword ptr [rip + 0xb3237], 1
410519: add rsp, 0x10
41051d: mov eax, r8d
410520: pop rbx
410521: ret 
410522: nop word ptr [rax + rax]
410528: xor eax, eax
41052a: mov edx, 1
41052f: lock cmpxchg dword ptr [rip + 0xb3219], edx
410537: je 0x4104c6
410539: lea rdi, [rip + 0xb3210]
410540: call 0x421250
410545: jmp 0x4104c6
41054a: nop word ptr [rax + rax]
410550: xor eax, eax
410552: xchg dword ptr [rip + 0xb31f8], eax
410558: xor r8d, r8d
41055b: cmp eax, 1
41055e: jle 0x410519
410560: xor r10d, r10d
410563: mov edx, 1
410568: mov esi, 0x81
41056d: mov eax, 0xca
410572: lea rdi, [rip + 0xb31d7]
410579: syscall 
41057b: jmp 0x410519
41057d: mov eax, dword ptr fs:[0x18]
410585: test eax, eax
410587: jne 0x4105b7
410589: sub dword ptr [rip + 0xb31c0], 1
410590: mov r8d, 0xffffffff
410596: jmp 0x410519
410598: lea rcx, [rip + 0x85321]
41059f: mov edx, 0x29
4105a4: lea rsi, [rip + 0x852d5]
4105ab: lea rdi, [rip + 0x852e5]
4105b2: call 0x4032a0
4105b7: xor eax, eax
4105b9: xchg dword ptr [rip + 0xb3191], eax
4105bf: or r8d, 0xffffffff
4105c3: sub eax, 1
4105c6: jle 0x410519
4105cc: jmp 0x410560
4105ce: nop 
4105d0: endbr64 
4105d4: mov rax, 0xffffffffffffffb0
4105db: mov r8, qword ptr fs:[rax]
4105df: jmp 0x410610
4105e4: nop word ptr cs:[rax + rax]
4105ef: nop 
4105f0: endbr64 
4105f4: mov rax, 0xffffffffffffffb0
4105fb: xor ecx, ecx
4105fd: mov r8, qword ptr fs:[rax]
410601: jmp 0x410610
410606: nop word ptr cs:[rax + rax]
410610: endbr64 
410614: push r15
410616: push r14
410618: xor r14d, r14d
41061b: push r13
41061d: mov r13, rdi
410620: push r12
410622: xor r12d, r12d
410625: push rbp
410626: push rbx
410627: sub rsp, 0x28
41062b: mov qword ptr [rsp + 8], rsi
410630: test ecx, ecx
410632: jne 0x4108c8
410638: cmp edx, 1
41063b: je 0x4107c0
410641: cmp edx, 0x24
410644: ja 0x4107c0
41064a: movsx rax, byte ptr [r13]
41064f: mov rsi, qword ptr [r8 + 0x68]
410653: mov rbx, r13
410656: mov rcx, rax
410659: test byte ptr [rsi + rax*2 + 1], 0x20
41065e: je 0x410673
410660: movsx rax, byte ptr [rbx + 1]
410665: add rbx, 1
410669: mov rcx, rax
41066c: test byte ptr [rsi + rax*2 + 1], 0x20
410671: jne 0x410660
410673: test cl, cl
410675: je 0x4109d9
41067b: cmp cl, 0x2d
41067e: je 0x4108b0
410684: mov dword ptr [rsp + 0x14], 0
41068c: cmp cl, 0x2b
41068f: je 0x410800
410695: cmp cl, 0x30
410698: je 0x410860
41069e: test edx, edx
4106a0: jne 0x4107e0
4106a6: test r14, r14
4106a9: jne 0x4109f0
4106af: mov eax, 8
4106b4: mov edx, 0xa
4106b9: xor ebp, ebp
4106bb: cdqe 
4106bd: lea rsi, [rip + 0x988bc]
4106c4: mov r8, qword ptr [rsi + rax*8]
4106c8: lea rsi, [rip + 0x98871]
4106cf: movzx eax, byte ptr [rsi + rax]
4106d3: mov byte ptr [rsp + 0x12], al
4106d7: test cl, cl
4106d9: je 0x4108f9
4106df: cmp r14, rbx
4106e2: je 0x4108f9
4106e8: mov r10, qword ptr [rip + 0xaf749]
4106ef: lea rsi, [rbp - 1]
4106f3: mov r11, qword ptr [rip + 0xaf72e]
4106fa: mov rdi, rbx
4106fd: xor eax, eax
4106ff: mov qword ptr [rsp + 0x18], rsi
410704: xor r9d, r9d
410707: movsxd r15, edx
41070a: jmp 0x410738
41070c: nop dword ptr [rax]
410710: jne 0x410719
410712: cmp sil, byte ptr [rsp + 0x12]
410717: ja 0x410769
410719: imul rax, r15
41071d: movzx esi, sil
410721: mov rcx, rdi
410724: add rax, rsi
410727: lea rdi, [rcx + 1]
41072b: movzx ecx, byte ptr [rcx + 1]
41072f: test cl, cl
410731: je 0x410780
410733: cmp rdi, r14
410736: je 0x410780
410738: lea esi, [rcx - 0x30]
41073b: cmp sil, 9
41073f: jbe 0x41075c
410741: test rbp, rbp
410744: jne 0x410810
41074a: movzx ecx, cl
41074d: test byte ptr [r11 + rcx*2 + 1], 4
410753: je 0x410780
410755: mov esi, dword ptr [r10 + rcx*4]
410759: sub esi, 0x37
41075c: movzx ecx, sil
410760: cmp ecx, edx
410762: jge 0x410780
410764: cmp r8, rax
410767: jae 0x410710
410769: mov rcx, rdi
41076c: mov r9d, 1
410772: lea rdi, [rcx + 1]
410776: movzx ecx, byte ptr [rcx + 1]
41077a: test cl, cl
41077c: jne 0x410733
41077e: nop 
410780: cmp rbx, rdi
410783: je 0x4108fc
410789: mov rbx, qword ptr [rsp + 8]
41078e: test rbx, rbx
410791: je 0x410796
410793: mov qword ptr [rbx], rdi
410796: test r9d, r9d
410799: jne 0x410aba
41079f: mov ecx, dword ptr [rsp + 0x14]
4107a3: mov rdx, rax
4107a6: neg rdx
4107a9: test ecx, ecx
4107ab: cmovne rax, rdx
4107af: add rsp, 0x28
4107b3: pop rbx
4107b4: pop rbp
4107b5: pop r12
4107b7: pop r13
4107b9: pop r14
4107bb: pop r15
4107bd: ret 
4107be: nop 
4107c0: mov rax, 0xffffffffffffffc0
4107c7: mov dword ptr fs:[rax], 0x16
4107ce: xor eax, eax
4107d0: add rsp, 0x28
4107d4: pop rbx
4107d5: pop rbp
4107d6: pop r12
4107d8: pop r13
4107da: pop r14
4107dc: pop r15
4107de: ret 
4107df: nop 
4107e0: cmp edx, 0xa
4107e3: je 0x4106a6
4107e9: lea eax, [rdx - 2]
4107ec: xor ebp, ebp
4107ee: xor r14d, r14d
4107f1: jmp 0x4106bb
4107f6: nop word ptr cs:[rax + rax]
410800: movzx ecx, byte ptr [rbx + 1]
410804: add rbx, 1
410808: jmp 0x410695
41080d: nop dword ptr [rax]
410810: mov byte ptr [rsp + 0x13], cl
410814: xor esi, esi
410816: nop word ptr cs:[rax + rax]
410820: movzx ecx, byte ptr [rdi + rsi]
410824: cmp byte ptr [r12 + rsi], cl
410828: jne 0x410848
41082a: add rsi, 1
41082e: cmp rsi, rbp
410831: jne 0x410820
410833: mov rsi, qword ptr [rsp + 0x18]
410838: lea rcx, [rdi + rsi]
41083c: jmp 0x410727
410841: nop dword ptr [rax]
410848: movzx ecx, byte ptr [rsp + 0x13]
41084d: cmp rbp, rsi
410850: jne 0x41074d
410856: jmp 0x410833
410858: nop dword ptr [rax + rax]
410860: test edx, 0xffffffef
410866: je 0x410938
41086c: cmp edx, 0xa
41086f: je 0x4109b6
410875: lea eax, [rdx - 2]
410878: lea rcx, [rip + 0x98701]
41087f: xor r14d, r14d
410882: xor ebp, ebp
410884: cdqe 
410886: mov r10, qword ptr [rip + 0xaf5ab]
41088d: mov r8, qword ptr [rcx + rax*8]
410891: lea rcx, [rip + 0x986a8]
410898: movzx eax, byte ptr [rcx + rax]
41089c: mov ecx, 0x30
4108a1: mov byte ptr [rsp + 0x12], al
4108a5: jmp 0x4106ef
4108aa: nop word ptr [rax + rax]
4108b0: movzx ecx, byte ptr [rbx + 1]
4108b4: mov dword ptr [rsp + 0x14], 1
4108bc: add rbx, 1
4108c0: jmp 0x410695
4108c5: nop dword ptr [rax]
4108c8: mov rcx, qword ptr [r8 + 8]
4108cc: mov r14, qword ptr [rcx + 0x50]
4108d0: movzx eax, byte ptr [r14]
4108d4: sub eax, 1
4108d7: cmp al, 0x7d
4108d9: ja 0x410979
4108df: mov r12, qword ptr [rcx + 0x48]
4108e3: cmp byte ptr [r12], 0
4108e8: jne 0x410638
4108ee: xor r14d, r14d
4108f1: xor r12d, r12d
4108f4: jmp 0x410638
4108f9: mov rdi, rbx
4108fc: cmp qword ptr [rsp + 8], 0
410902: je 0x4109af
410908: mov rax, rdi
41090b: sub rax, r13
41090e: cmp rax, 1
410912: jle 0x410926
410914: movsx rdx, byte ptr [rdi - 1]
410919: mov rax, qword ptr [rip + 0xaf518]
410920: cmp dword ptr [rax + rdx*4], 0x58
410924: je 0x41099d
410926: mov rax, qword ptr [rsp + 8]
41092b: mov qword ptr [rax], r13
41092e: xor eax, eax
410930: jmp 0x4107d0
410935: nop dword ptr [rax]
410938: mov r10, qword ptr [rip + 0xaf4f9]
41093f: movsx rax, byte ptr [rbx + 1]
410944: cmp dword ptr [r10 + rax*4], 0x58
410949: je 0x410981
41094b: test edx, edx
41094d: jne 0x41086c
410953: mov edx, 8
410958: xor r14d, r14d
41095b: xor ebp, ebp
41095d: mov ecx, 0x30
410962: movzx eax, byte ptr [rip + 0x985dd]
410969: mov r8, qword ptr [rip + 0x98640]
410970: mov byte ptr [rsp + 0x12], al
410974: jmp 0x4106ef
410979: xor r14d, r14d
41097c: jmp 0x410638
410981: movzx ecx, byte ptr [rbx + 2]
410985: mov eax, 0xe
41098a: add rbx, 2
41098e: xor ebp, ebp
410990: mov edx, 0x10
410995: xor r14d, r14d
410998: jmp 0x4106bb
41099d: cmp byte ptr [rdi - 2], 0x30
4109a1: jne 0x410926
4109a3: mov rax, qword ptr [rsp + 8]
4109a8: sub rdi, 1
4109ac: mov qword ptr [rax], rdi
4109af: xor eax, eax
4109b1: jmp 0x4107d0
4109b6: test r14, r14
4109b9: jne 0x4109f0
4109bb: movzx eax, byte ptr [rip + 0x98586]
4109c2: mov r8, qword ptr [rip + 0x985f7]
4109c9: xor ebp, ebp
4109cb: mov ecx, 0x30
4109d0: mov byte ptr [rsp + 0x12], al
4109d4: jmp 0x4106e8
4109d9: cmp qword ptr [rsp + 8], 0
4109df: jne 0x410926
4109e5: xor eax, eax
4109e7: jmp 0x4107d0
4109ec: nop dword ptr [rax]
4109f0: mov rdi, r12
4109f3: mov byte ptr [rsp + 0x12], cl
4109f7: call 0x401180
4109fc: mov rdx, rax
4109ff: mov rbp, rax
410a02: test rax, rax
410a05: je 0x4108f9
410a0b: movzx ecx, byte ptr [rsp + 0x12]
410a10: xor eax, eax
410a12: jmp 0x410a25
410a14: nop dword ptr [rax]
410a18: add rax, 1
410a1c: cmp rdx, rax
410a1f: je 0x4108f9
410a25: movzx edi, byte ptr [rbx + rax]
410a29: cmp byte ptr [r12 + rax], dil
410a2d: je 0x410a18
410a2f: mov rsi, rbx
410a32: test cl, cl
410a34: je 0x410a97
410a36: mov r8, qword ptr [rip + 0xaf3eb]
410a3d: mov rdi, qword ptr [rip + 0xaf3f4]
410a44: mov rsi, rbx
410a47: jmp 0x410a5c
410a49: nop dword ptr [rax]
410a50: movzx ecx, byte ptr [rsi + 1]
410a54: add rsi, 1
410a58: test cl, cl
410a5a: je 0x410a97
410a5c: lea eax, [rcx - 0x30]
410a5f: cmp al, 9
410a61: jbe 0x410a50
410a63: xor eax, eax
410a65: jmp 0x410a79
410a67: nop word ptr [rax + rax]
410a70: add rax, 1
410a74: cmp rax, rdx
410a77: je 0x410a50
410a79: movzx r11d, byte ptr [rsi + rax]
410a7e: cmp byte ptr [r12 + rax], r11b
410a82: je 0x410a70
410a84: cmp rdx, rax
410a87: jbe 0x410a50
410a89: test byte ptr [r8 + rcx*2 + 1], 4
410a8f: je 0x410a97
410a91: cmp dword ptr [rdi + rcx*4], 0x40
410a95: jle 0x410a50
410a97: mov rcx, r14
410a9a: mov rdx, r12
410a9d: mov rdi, rbx
410aa0: call 0x410af0
410aa5: movzx ecx, byte ptr [rbx]
410aa8: mov edx, 0xa
410aad: mov r14, rax
410ab0: mov eax, 8
410ab5: jmp 0x4106bb
410aba: mov rax, 0xffffffffffffffc0
410ac1: mov dword ptr fs:[rax], 0x22
410ac8: mov rax, 0xffffffffffffffff
410acf: jmp 0x4107d0
410ad4: nop word ptr cs:[rax + rax]
410adf: nop 
410ae0: endbr64 
410ae4: mov r8, rcx
410ae7: xor ecx, ecx
410ae9: jmp 0x410610
410aee: nop 
410af0: endbr64 
410af4: push r15
410af6: push r14
410af8: push r13
410afa: push r12
410afc: mov r12, rsi
410aff: push rbp
410b00: push rbx
410b01: sub rsp, 0x18
410b05: mov qword ptr [rsp], rcx
410b09: test rcx, rcx
410b0c: je 0x410bb8
410b12: mov rbp, rdi
410b15: mov rdi, rdx
410b18: mov rbx, rdx
410b1b: call 0x401180
410b20: mov r11, rax
410b23: cmp r12, rbp
410b26: jbe 0x410bb1
410b2c: lea r10, [rax - 1]
410b30: lea r9, [rbp - 1]
410b34: lea r15, [rax - 2]
410b38: lea rdi, [r12 - 1]
410b3d: cmp rbp, rdi
410b40: ja 0x410bb8
410b42: movzx r8d, byte ptr [rbx]
410b46: jmp 0x410b59
410b48: nop dword ptr [rax + rax]
410b50: sub rdi, 1
410b54: cmp rdi, r9
410b57: je 0x410bb8
410b59: cmp byte ptr [rdi + r11 - 1], r8b
410b5e: jne 0x410b50
410b60: movzx eax, byte ptr [rbx + 1]
410b64: test al, al
410b66: je 0x410b83
410b68: lea rdx, [rdi + r15]
410b6c: lea rcx, [rbx + 2]
410b70: cmp byte ptr [rdx], al
410b72: jne 0x410b50
410b74: movzx eax, byte ptr [rcx]
410b77: sub rdx, 1
410b7b: add rcx, 1
410b7f: test al, al
410b81: jne 0x410b70
410b83: cmp rbp, rdi
410b86: ja 0x410bb8
410b88: mov rax, qword ptr [rsp]
410b8c: mov rdx, r12
410b8f: sub rdx, rdi
410b92: movsx rax, byte ptr [rax]
410b96: mov r13, rax
410b99: add eax, 1
410b9c: cdqe 
410b9e: cmp rdx, rax
410ba1: je 0x410bca
410ba3: lea r12, [rdi + r13 + 1]
410ba8: cmovle r12, rdi
410bac: cmp rbp, r12
410baf: jb 0x410b38
410bb1: cmp r12, rbp
410bb4: cmovb r12, rbp
410bb8: add rsp, 0x18
410bbc: mov rax, r12
410bbf: pop rbx
410bc0: pop rbp
410bc1: pop r12
410bc3: pop r13
410bc5: pop r14
410bc7: pop r15
410bc9: ret 
410bca: sub rdi, 1
410bce: mov r14, qword ptr [rsp]
410bd2: mov qword ptr [rsp + 8], rdi
410bd7: nop word ptr [rax + rax]
410be0: movzx eax, byte ptr [r14 + 1]
410be5: test al, al
410be7: je 0x410bf1
410be9: add r14, 1
410bed: movsx r13, al
410bf1: mov rsi, rdi
410bf4: cmp r13b, 0x7e
410bf8: jbe 0x410c50
410bfa: cmp rbp, rdi
410bfd: ja 0x410bb8
410bff: test r8b, r8b
410c02: je 0x410c40
410c04: nop dword ptr [rax]
410c08: lea rdx, [rsi + r10]
410c0c: lea rcx, [rbx + 1]
410c10: mov eax, r8d
410c13: jmp 0x410c27
410c15: nop dword ptr [rax]
410c18: movzx eax, byte ptr [rcx]
410c1b: sub rdx, 1
410c1f: add rcx, 1
410c23: test al, al
410c25: je 0x410c40
410c27: cmp al, byte ptr [rdx]
410c29: je 0x410c18
410c2b: sub rsi, 1
410c2f: cmp rsi, r9
410c32: je 0x410bb8
410c34: test r8b, r8b
410c37: jne 0x410c08
410c39: nop dword ptr [rax]
410c40: cmp rbp, rsi
410c43: ja 0x410bb8
410c49: lea rdi, [rsi - 1]
410c4d: jmp 0x410be0
410c4f: nop 
410c50: cmp rbp, rdi
410c53: ja 0x410bb8
410c59: nop dword ptr [rax]
410c60: test r8b, r8b
410c63: je 0x410cb0
410c65: lea rdx, [rsi + r10]
410c69: lea rcx, [rbx + 1]
410c6d: mov eax, r8d
410c70: jmp 0x410c87
410c72: nop word ptr [rax + rax]
410c78: movzx eax, byte ptr [rcx]
410c7b: sub rdx, 1
410c7f: add rcx, 1
410c83: test al, al
410c85: je 0x410cb0
410c87: cmp al, byte ptr [rdx]
410c89: je 0x410c78
410c8b: sub rsi, 1
410c8f: cmp rsi, r9
410c92: jne 0x410c60
410c94: sub rdi, r9
410c97: cmp r13, rdi
410c9a: jge 0x410bb8
410ca0: mov r12, qword ptr [rsp + 8]
410ca5: jmp 0x410bac
410caa: nop word ptr [rax + rax]
410cb0: sub rdi, rsi
410cb3: cmp rbp, rsi
410cb6: ja 0x410c97
410cb8: movsx rax, r13b
410cbc: cmp rdi, rax
410cbf: je 0x410c49
410cc1: jmp 0x410ca0
410cc3: nop word ptr cs:[rax + rax]
410ccd: nop dword ptr [rax]
410cd0: endbr64 
410cd4: sub rsp, 0xd8
410cdb: mov r10, rdi
410cde: mov qword ptr [rsp + 0x28], rsi
410ce3: mov qword ptr [rsp + 0x30], rdx
410ce8: mov qword ptr [rsp + 0x38], rcx
410ced: mov qword ptr [rsp + 0x40], r8
410cf2: mov qword ptr [rsp + 0x48], r9
410cf7: test al, al
410cf9: je 0x410d32
410cfb: movaps xmmword ptr [rsp + 0x50], xmm0
410d00: movaps xmmword ptr [rsp + 0x60], xmm1
410d05: movaps xmmword ptr [rsp + 0x70], xmm2
410d0a: movaps xmmword ptr [rsp + 0x80], xmm3
410d12: movaps xmmword ptr [rsp + 0x90], xmm4
410d1a: movaps xmmword ptr [rsp + 0xa0], xmm5
410d22: movaps xmmword ptr [rsp + 0xb0], xmm6
410d2a: movaps xmmword ptr [rsp + 0xc0], xmm7
410d32: mov rax, qword ptr fs:[0x28]
410d3b: mov qword ptr [rsp + 0x18], rax
410d40: xor eax, eax
410d42: mov rdi, qword ptr [rip + 0xaf987]
410d49: xor ecx, ecx
410d4b: mov rdx, rsp
410d4e: lea rax, [rsp + 0xe0]
410d56: mov rsi, r10
410d59: mov dword ptr [rsp], 8
410d60: mov qword ptr [rsp + 8], rax
410d65: lea rax, [rsp + 0x20]
410d6a: mov dword ptr [rsp + 4], 0x30
410d72: mov qword ptr [rsp + 0x10], rax
410d77: call 0x413e90
410d7c: mov rcx, qword ptr [rsp + 0x18]
410d81: xor rcx, qword ptr fs:[0x28]
410d8a: jne 0x410d94
410d8c: add rsp, 0xd8
410d93: ret 
410d94: call 0x4547a0
410d99: nop dword ptr [rax]
410da0: endbr64 
410da4: sub rsp, 0xd8
410dab: mov qword ptr [rsp + 0x30], rdx
410db0: mov qword ptr [rsp + 0x38], rcx
410db5: mov qword ptr [rsp + 0x40], r8
410dba: mov qword ptr [rsp + 0x48], r9
410dbf: test al, al
410dc1: je 0x410dfa
410dc3: movaps xmmword ptr [rsp + 0x50], xmm0
410dc8: movaps xmmword ptr [rsp + 0x60], xmm1
410dcd: movaps xmmword ptr [rsp + 0x70], xmm2
410dd2: movaps xmmword ptr [rsp + 0x80], xmm3
410dda: movaps xmmword ptr [rsp + 0x90], xmm4
410de2: movaps xmmword ptr [rsp + 0xa0], xmm5
410dea: movaps xmmword ptr [rsp + 0xb0], xmm6
410df2: movaps xmmword ptr [rsp + 0xc0], xmm7
410dfa: mov rax, qword ptr fs:[0x28]
410e03: mov qword ptr [rsp + 0x18], rax
410e08: xor eax, eax
410e0a: lea rax, [rsp + 0xe0]
410e12: xor ecx, ecx
410e14: mov rdx, rsp
410e17: mov qword ptr [rsp + 8], rax
410e1c: lea rax, [rsp + 0x20]
410e21: mov dword ptr [rsp], 0x10
410e28: mov dword ptr [rsp + 4], 0x30
410e30: mov qword ptr [rsp + 0x10], rax
410e35: call 0x41ac20
410e3a: mov rcx, qword ptr [rsp + 0x18]
410e3f: xor rcx, qword ptr fs:[0x28]
410e48: jne 0x410e52
410e4a: add rsp, 0xd8
410e51: ret 
410e52: call 0x4547a0
410e57: nop word ptr [rax + rax]
410e60: push r15
410e62: push r14
410e64: push r13
410e66: push r12
410e68: mov r12, rsi
410e6b: push rbp
410e6c: push rbx
410e6d: mov rbx, rdx
410e70: sub rsp, 0x18
410e74: movzx edx, byte ptr [rcx]
410e77: lea eax, [rdx - 1]
410e7a: mov byte ptr [rsp], dl
410e7d: cmp al, 0x7d
410e7f: jbe 0x410e98
410e81: add rsp, 0x18
410e85: mov rax, r12
410e88: pop rbx
410e89: pop rbp
410e8a: pop r12
410e8c: pop r13
410e8e: pop r14
410e90: pop r15
410e92: ret 
410e93: nop dword ptr [rax + rax]
410e98: mov r13, rdi
410e9b: mov rdi, r8
410e9e: mov rbp, rcx
410ea1: mov r15, r8
410ea4: call 0x401180
410ea9: mov rdx, rbx
410eac: lea r8, [rbp + 1]
410eb0: mov rsi, r12
410eb3: sub rdx, r12
410eb6: mov rdi, r13
410eb9: movsx ebp, byte ptr [rsp]
410ebd: mov qword ptr [rsp + 8], r8
410ec2: mov qword ptr [rsp], rdx
410ec6: mov r14, rax
410ec9: call 0x401040
410ece: mov rdx, qword ptr [rsp]
410ed2: lea rsi, [r13 + rdx]
410ed7: cmp r13, rsi
410eda: jae 0x410fa2
410ee0: mov r8, qword ptr [rsp + 8]
410ee5: movsxd r9, r14d
410ee8: lea r10d, [r14 - 1]
410eec: mov rax, 0xffffffffffffffff
410ef3: nop dword ptr [rax + rax]
410ef8: movzx edx, byte ptr [rsi - 1]
410efc: sub rsi, 1
410f00: lea r12, [rbx - 1]
410f04: mov byte ptr [rbx - 1], dl
410f07: sub ebp, 1
410f0a: jne 0x410f78
410f0c: cmp r13, rsi
410f0f: jae 0x410e81
410f15: mov rdx, r12
410f18: sub rdx, rsi
410f1b: cmp r9, rdx
410f1e: jge 0x410f8f
410f20: mov rcx, r9
410f23: sub rbx, r9
410f26: nop word ptr cs:[rax + rax]
410f30: movzx edi, byte ptr [r15 + rcx - 1]
410f36: mov byte ptr [rbx + rcx - 2], dil
410f3b: sub rcx, 1
410f3f: test ecx, ecx
410f41: jg 0x410f30
410f43: mov rdx, r10
410f46: test r14d, r14d
410f49: movsx ebp, byte ptr [r8]
410f4d: not rdx
410f50: cmovle rdx, rax
410f54: add r12, rdx
410f57: cmp bpl, 0x7e
410f5b: ja 0x410f8f
410f5d: test bpl, bpl
410f60: je 0x410f88
410f62: add r8, 1
410f66: nop word ptr cs:[rax + rax]
410f70: mov rbx, r12
410f73: jmp 0x410ef8
410f75: nop dword ptr [rax]
410f78: cmp r13, rsi
410f7b: jb 0x410f70
410f7d: jmp 0x410e81
410f82: nop word ptr [rax + rax]
410f88: movsx ebp, byte ptr [r8 - 1]
410f8d: jmp 0x410f70
410f8f: mov rdx, r13
410f92: mov rdi, r12
410f95: sub rdx, rsi
410f98: call 0x401040
410f9d: jmp 0x410e81
410fa2: mov r12, rbx
410fa5: jmp 0x410e81
410faa: nop word ptr [rax + rax]
410fb0: push r15
410fb2: push r14
410fb4: mov r14, rdx
410fb7: push r13
410fb9: mov r13, rdi
410fbc: lea rdi, [rip + 0x8490f]
410fc3: push r12
410fc5: mov r12, rsi
410fc8: push rbp
410fc9: push rbx
410fca: sub rsp, 0x468
410fd1: mov rax, qword ptr fs:[0x28]
410fda: mov qword ptr [rsp + 0x458], rax
410fe2: xor eax, eax
410fe4: call 0x454490
410fe9: mov edi, 0x2e
410fee: mov rbx, rax
410ff1: mov rsi, rax
410ff4: call 0x454520
410ff9: mov rsi, rbx
410ffc: mov edi, 0x2c
411001: mov ebp, eax
411003: call 0x454520
411008: lea r8, [rsp + 0x10]
41100d: test rbx, rbx
411010: jne 0x4111e0
411016: sub r12, r13
411019: lea rbp, [rsp + 0x20]
41101e: mov edx, 1
411023: mov rdi, r8
411026: mov rsi, r12
411029: mov qword ptr [rsp + 0x10], rbp
41102e: mov qword ptr [rsp + 0x18], 0x400
411037: call 0x428e40
41103c: test al, al
41103e: je 0x411250
411044: mov rcx, qword ptr [rsp + 0x10]
411049: mov rdx, r12
41104c: mov rsi, r13
41104f: mov rdi, rcx
411052: mov qword ptr [rsp], rcx
411056: call 0x401150
41105b: mov rcx, qword ptr [rsp]
41105f: lea r15, [rax - 1]
411063: cmp rcx, r15
411066: ja 0x411105
41106c: lea rax, [rsp + 0x440]
411074: lea r12, [rcx - 1]
411078: mov qword ptr [rsp], rax
41107c: lea rax, [rsp + 0x420]
411084: mov qword ptr [rsp + 8], rax
411089: jmp 0x4110aa
41108b: nop dword ptr [rax + rax]
411090: test rbx, rbx
411093: jne 0x411140
411099: mov byte ptr [r14 - 1], al
41109d: sub r14, 1
4110a1: sub r15, 1
4110a5: cmp r15, r12
4110a8: je 0x411105
4110aa: movsx eax, byte ptr [r15]
4110ae: lea ecx, [rax - 0x30]
4110b1: cmp cl, 9
4110b4: ja 0x411090
4110b6: mov rcx, 0xffffffffffffffa0
4110bd: sub eax, 7
4110c0: cdqe 
4110c2: mov rcx, qword ptr fs:[rcx]
4110c6: mov rcx, qword ptr [rcx]
4110c9: mov r13, qword ptr [rcx + rax*8 + 0x40]
4110ce: mov rdi, r13
4110d1: call 0x401180
4110d6: sub r14, rax
4110d9: lea rcx, [rax - 1]
4110dd: test rax, rax
4110e0: je 0x4110a1
4110e2: nop word ptr [rax + rax]
4110e8: movzx eax, byte ptr [r13 + rcx]
4110ee: mov byte ptr [r14 + rcx], al
4110f2: sub rcx, 1
4110f6: cmp rcx, -1
4110fa: jne 0x4110e8
4110fc: sub r15, 1
411100: cmp r15, r12
411103: jne 0x4110aa
411105: mov rdi, qword ptr [rsp + 0x10]
41110a: cmp rdi, rbp
41110d: je 0x411114
41110f: call 0x426a00
411114: mov rax, qword ptr [rsp + 0x458]
41111c: xor rax, qword ptr fs:[0x28]
411125: jne 0x4112db
41112b: add rsp, 0x468
411132: mov rax, r14
411135: pop rbx
411136: pop rbp
411137: pop r12
411139: pop r13
41113b: pop r14
41113d: pop r15
41113f: ret 
411140: mov ecx, eax
411142: and ecx, 0xfffffffd
411145: cmp cl, 0x2c
411148: jne 0x411099
41114e: mov rdi, qword ptr [rsp]
411152: cmp al, 0x2e
411154: cmove rdi, qword ptr [rsp + 8]
41115a: mov rcx, rdi
41115d: mov esi, dword ptr [rcx]
41115f: add rcx, 4
411163: lea eax, [rsi - 0x1010101]
411169: not esi
41116b: and eax, esi
41116d: and eax, 0x80808080
411172: je 0x41115d
411174: mov esi, eax
411176: shr esi, 0x10
411179: test eax, 0x8080
41117e: cmove eax, esi
411181: lea rsi, [rcx + 2]
411185: cmove rcx, rsi
411189: mov edx, eax
41118b: add dl, al
41118d: sbb rcx, 3
411191: sub rcx, rdi
411194: sub r14, rcx
411197: test rcx, rcx
41119a: je 0x4110a1
4111a0: mov eax, ecx
4111a2: cmp ecx, 8
4111a5: jae 0x411258
4111ab: and ecx, 4
4111ae: jne 0x4112c8
4111b4: test eax, eax
4111b6: je 0x4110a1
4111bc: movzx ecx, byte ptr [rdi]
4111bf: mov byte ptr [r14], cl
4111c2: test al, 2
4111c4: je 0x4110a1
4111ca: movzx ecx, word ptr [rdi + rax - 2]
4111cf: mov word ptr [r14 + rax - 2], cx
4111d5: jmp 0x4110a1
4111da: nop word ptr [rax + rax]
4111e0: mov rdx, r8
4111e3: lea rdi, [rsp + 0x420]
4111eb: mov esi, ebp
4111ed: mov r15d, eax
4111f0: mov qword ptr [rsp], r8
4111f4: mov qword ptr [rsp + 0x10], 0
4111fd: call 0x44f020
411202: mov r8, qword ptr [rsp]
411206: cmp rax, -1
41120a: je 0x4112b6
411210: mov byte ptr [rsp + rax + 0x420], 0
411218: mov rdx, r8
41121b: lea rdi, [rsp + 0x440]
411223: mov esi, r15d
411226: mov qword ptr [rsp], r8
41122a: mov qword ptr [rsp + 0x10], 0
411233: call 0x44f020
411238: mov r8, qword ptr [rsp]
41123c: cmp rax, -1
411240: je 0x4112a4
411242: mov byte ptr [rsp + rax + 0x440], 0
41124a: jmp 0x411016
41124f: nop 
411250: mov r14, r13
411253: jmp 0x411114
411258: mov rax, qword ptr [rdi]
41125b: lea r8, [r14 + 8]
41125f: and r8, 0xfffffffffffffff8
411263: mov qword ptr [r14], rax
411266: mov eax, ecx
411268: mov rsi, qword ptr [rdi + rax - 8]
41126d: mov qword ptr [r14 + rax - 8], rsi
411272: mov rax, r14
411275: sub rax, r8
411278: sub rdi, rax
41127b: add eax, ecx
41127d: and eax, 0xfffffff8
411280: cmp eax, 8
411283: jb 0x4110a1
411289: and eax, 0xfffffff8
41128c: xor ecx, ecx
41128e: mov esi, ecx
411290: add ecx, 8
411293: mov r9, qword ptr [rdi + rsi]
411297: mov qword ptr [r8 + rsi], r9
41129b: cmp ecx, eax
41129d: jb 0x41128e
41129f: jmp 0x4110a1
4112a4: mov eax, 0x2c
4112a9: mov word ptr [rsp + 0x440], ax
4112b1: jmp 0x411016
4112b6: mov edx, 0x2e
4112bb: mov word ptr [rsp + 0x420], dx
4112c3: jmp 0x411218
4112c8: mov ecx, dword ptr [rdi]
4112ca: mov dword ptr [r14], ecx
4112cd: mov ecx, dword ptr [rdi + rax - 4]
4112d1: mov dword ptr [r14 + rax - 4], ecx
4112d6: jmp 0x4110a1
4112db: call 0x4547a0
4112e0: endbr64 
4112e4: push r13
4112e6: push r12
4112e8: push rbp
4112e9: mov rbp, rdi
4112ec: push rbx
4112ed: mov ebx, esi
4112ef: sub rsp, 0x18
4112f3: mov rax, qword ptr [rdi + 0x28]
4112f7: mov rsi, qword ptr [rdi + 0x20]
4112fb: mov r12, rax
4112fe: sub r12, rsi
411301: cmp eax, esi
411303: je 0x411364
411305: mov rdi, qword ptr [rdi + 0xe0]
41130c: mov rdx, 0x4c1b60
411313: mov rax, 0x4c2208
41131a: mov r13, qword ptr [rdi + 0xd8]
411321: sub rax, rdx
411324: mov rcx, r13
411327: sub rcx, rdx
41132a: cmp rax, rcx
41132d: jbe 0x411390
41132f: movsxd r12, r12d
411332: mov rdx, r12
411335: call qword ptr [r13 + 0x38]
411339: mov r13, rax
41133c: lea rax, [rax - 1]
411340: cmp rax, -3
411344: ja 0x4113c0
411346: mov rdi, qword ptr [rbp + 0x20]
41134a: mov rdx, r12
41134d: sub rdx, r13
411350: lea rsi, [rdi + r13]
411354: call 0x401040
411359: mov rax, qword ptr [rbp + 0x28]
41135d: sub rax, r13
411360: mov qword ptr [rbp + 0x28], rax
411364: movzx r8d, bl
411368: cmp qword ptr [rbp + 0x30], rax
41136c: jbe 0x4113a8
41136e: lea rdx, [rax + 1]
411372: mov qword ptr [rbp + 0x28], rdx
411376: mov byte ptr [rax], bl
411378: add rsp, 0x18
41137c: mov eax, r8d
41137f: pop rbx
411380: pop rbp
411381: pop r12
411383: pop r13
411385: ret 
411386: nop word ptr cs:[rax + rax]
411390: mov qword ptr [rsp + 8], rdi
411395: call 0x41b240
41139a: mov rsi, qword ptr [rbp + 0x20]
41139e: mov rdi, qword ptr [rsp + 8]
4113a3: jmp 0x41132f
4113a5: nop dword ptr [rax]
4113a8: add rsp, 0x18
4113ac: mov rdi, rbp
4113af: mov esi, r8d
4113b2: pop rbx
4113b3: pop rbp
4113b4: pop r12
4113b6: pop r13
4113b8: jmp 0x41e8a0
4113bd: nop dword ptr [rax]
4113c0: mov r8d, 0xffffffff
4113c6: jmp 0x411378
4113c8: nop dword ptr [rax + rax]
4113d0: push rbp
4113d1: mov rbp, rsp
4113d4: push r15
4113d6: push r14
4113d8: push r13
4113da: push r12
4113dc: push rbx
4113dd: sub rsp, 0x938
4113e4: mov rax, qword ptr [rbp + 0x20]
4113e8: mov qword ptr [rbp - 0x8d0], rdi
4113ef: mov rdi, qword ptr [rbp + 0x38]
4113f3: mov qword ptr [rbp - 0x918], rsi
4113fa: mov qword ptr [rbp - 0x8e8], rax
411401: mov rax, qword ptr [rbp + 0x30]
411405: mov qword ptr [rbp - 0x8d8], rdi
41140c: lea rdi, [rbp - 0x860]
411413: mov r14, qword ptr [rbp + 0x18]
411417: mov dword ptr [rbp - 0x8a8], edx
41141d: mov qword ptr [rbp - 0x8b8], r8
411424: mov dword ptr [rbp - 0x8a4], r9d
41142b: mov qword ptr [rbp - 0x8c8], rax
411432: mov rbx, qword ptr fs:[0x28]
41143b: mov qword ptr [rbp - 0x38], rbx
41143f: xor ebx, ebx
411441: mov qword ptr [rbp - 0x8b0], rdi
411448: mov qword ptr [rbp - 0x870], rdi
41144f: lea rdi, [rbp - 0x450]
411456: mov qword ptr [rbp - 0x868], 0x400
411461: mov qword ptr [rbp - 0x8c0], rdi
411468: mov qword ptr [rbp - 0x460], rdi
41146f: mov qword ptr [rbp - 0x458], 0x400
41147a: mov qword ptr [rbp - 0x890], 0
411485: cmp rax, -1
411489: je 0x411dc8
41148f: cmp byte ptr [r14], 0
411493: je 0x41220c
411499: mov rax, qword ptr [rbp - 0x8b0]
4114a0: xor r13d, r13d
4114a3: xor r15d, r15d
4114a6: lea r12, [rbp - 0x890]
4114ad: mov qword ptr [rbp - 0x8a0], 0xe
4114b8: mov qword ptr [rbp - 0x898], rax
4114bf: nop 
4114c0: mov rcx, qword ptr [rbp - 0x898]
4114c7: lea rax, [r13 + r13*8]
4114cc: mov rsi, r15
4114cf: mov rdi, r14
4114d2: add r13, 1
4114d6: lea rbx, [rcx + rax*8]
4114da: mov rcx, r12
4114dd: mov rdx, rbx
4114e0: call 0x417480
4114e5: mov r14, qword ptr [rbx + 0x20]
4114e9: add r15, rax
4114ec: cmp byte ptr [r14], 0
4114f0: je 0x411540
4114f2: cmp qword ptr [rbp - 0x8a0], r13
4114f9: jne 0x4114c0
4114fb: lea rdi, [rbp - 0x870]
411502: call 0x428d80
411507: test al, al
411509: je 0x411790
41150f: mov rax, qword ptr [rbp - 0x870]
411516: mov qword ptr [rbp - 0x898], rax
41151d: movabs rax, 0xe38e38e38e38e38f
411527: mul qword ptr [rbp - 0x868]
41152e: shr rdx, 6
411532: mov qword ptr [rbp - 0x8a0], rdx
411539: jmp 0x4114c0
41153b: nop dword ptr [rax + rax]
411540: cmp qword ptr [rbp - 0x890], r15
411547: mov rbx, r15
41154a: cmovae rbx, qword ptr [rbp - 0x890]
411552: lea rdi, [rbp - 0x460]
411559: mov edx, 0x18
41155e: mov rsi, rbx
411561: call 0x428e40
411566: mov byte ptr [rbp - 0x91e], al
41156c: test al, al
41156e: je 0x411790
411574: mov rax, qword ptr [rbp - 0x460]
41157b: mov r12, rbx
41157e: lea rdx, [rbx*4]
411586: shl r12, 4
41158a: add r12, rax
41158d: mov qword ptr [rbp - 0x8a0], rax
411594: mov eax, dword ptr [rbp + 0x40]
411597: lea r15, [r12 + rdx]
41159b: and eax, 2
41159e: mov rdi, r15
4115a1: setne sil
4115a5: mov dword ptr [rbp - 0x91c], eax
4115ab: movzx esi, sil
4115af: neg esi
4115b1: call 0x401110
4115b6: test r13, r13
4115b9: je 0x4121c4
4115bf: mov rdi, qword ptr [rbp - 0x898]
4115c6: lea rax, [r13 + r13*8]
4115cb: mov qword ptr [rbp - 0x8e0], rbx
4115d2: mov rbx, r12
4115d5: lea r8, [rdi + rax*8]
4115d9: mov r14, rdi
4115dc: mov r12, r8
4115df: jmp 0x411608
4115e1: nop dword ptr [rax]
4115e8: mov edx, dword ptr [r14 + 0x34]
4115ec: movsxd rax, dword ptr [r14 + 0x30]
4115f0: mov dword ptr [r15 + rax*4], edx
4115f4: mov edx, dword ptr [r14 + 0x40]
4115f8: movsxd rax, dword ptr [r14 + 0x30]
4115fc: mov dword ptr [rbx + rax*4], edx
4115ff: add r14, 0x48
411603: cmp r12, r14
411606: je 0x411663
411608: movsxd rax, dword ptr [r14 + 0x2c]
41160c: cmp eax, -1
41160f: je 0x411619
411611: mov dword ptr [r15 + rax*4], 0
411619: movsxd rax, dword ptr [r14 + 0x28]
41161d: cmp eax, -1
411620: je 0x41162a
411622: mov dword ptr [r15 + rax*4], 0
41162a: mov rsi, qword ptr [r14 + 0x38]
41162e: test rsi, rsi
411631: je 0x4115ff
411633: cmp rsi, 1
411637: je 0x4115e8
411639: movsxd rdx, dword ptr [r14 + 0x30]
41163d: movsxd r9, dword ptr [r14 + 8]
411641: mov rdi, r14
411644: add r14, 0x48
411648: mov rax, qword ptr [rip + 0xb2319]
41164f: shl rdx, 2
411653: lea rcx, [rbx + rdx]
411657: add rdx, r15
41165a: call qword ptr [rax + r9*8]
41165e: cmp r12, r14
411661: jne 0x411608
411663: mov r12, rbx
411666: mov rbx, qword ptr [rbp - 0x8e0]
41166d: test rbx, rbx
411670: je 0x411821
411676: movzx r8d, byte ptr [rbp + 0x40]
41167b: mov r9d, dword ptr [rbp + 0x40]
41167f: xor edx, edx
411681: lea r14, [rip + 0x84378]
411688: mov r10, qword ptr [rbp - 0x8a0]
41168f: mov rcx, qword ptr [rbp - 0x8b8]
411696: and r8d, 1
41169a: and r9d, 8
41169e: nop 
4116a0: mov eax, dword ptr [r15 + rdx*4]
4116a4: cmp eax, 7
4116a7: jg 0x411ca8
4116ad: cmp eax, -1
4116b0: jl 0x412130
4116b6: cmp eax, 7
4116b9: ja 0x411d61
4116bf: movsxd rax, dword ptr [r14 + rax*4]
4116c3: add rax, r14
4116c6: notrack jmp rax
4116c9: endbr64 
4116cd: movsxd rax, dword ptr [r14 + 0x30]
4116d1: shl rax, 4
4116d5: add rax, qword ptr [rbp - 0x8a0]
4116dc: cmp byte ptr [rbp - 0x91f], 0
4116e3: mov qword ptr [rbp - 0x880], rax
4116ea: jne 0x413980
4116f0: mov r10d, dword ptr [rbp - 0x95c]
4116f7: movzx ebx, byte ptr [rbp - 0x938]
4116fe: mov eax, 0
411703: mov rdi, r15
411706: movzx edx, byte ptr [r14 + 0xd]
41170b: test r10d, r10d
41170e: cmove ebx, eax
411711: and edx, 0xffffffef
411714: mov eax, ebx
411716: and eax, 1
411719: shl eax, 4
41171c: or eax, edx
41171e: lea rdx, [rbp - 0x880]
411725: mov byte ptr [r14 + 0xd], al
411729: mov rax, qword ptr [rbp - 0x8b8]
411730: mov rsi, qword ptr [rbp - 0x898]
411737: lea rax, [rax + rax*8]
41173b: lea rsi, [rsi + rax*8]
41173f: call 0x46a6f0
411744: test eax, eax
411746: js 0x411777
411748: mov ebx, dword ptr [rbp - 0x8a4]
41174e: cmp ebx, 0x7ffffffe
411754: ja 0x413d0b
41175a: mov edx, 0x7fffffff
41175f: sub edx, ebx
411761: cmp edx, eax
411763: jae 0x412073
411769: mov rax, 0xffffffffffffffc0
411770: mov dword ptr fs:[rax], 0x4b
411777: mov rax, qword ptr [rbp - 0x8d0]
41177e: test rax, rax
411781: je 0x411790
411783: mov rdi, rax
411786: call 0x426a00
41178b: nop dword ptr [rax + rax]
411790: mov r12d, 0xffffffff
411796: mov rdi, qword ptr [rbp - 0x460]
41179d: cmp rdi, qword ptr [rbp - 0x8c0]
4117a4: je 0x4117ab
4117a6: call 0x426a00
4117ab: mov rdi, qword ptr [rbp - 0x870]
4117b2: cmp rdi, qword ptr [rbp - 0x8b0]
4117b9: je 0x4117c0
4117bb: call 0x426a00
4117c0: mov rax, qword ptr [rbp - 0x38]
4117c4: xor rax, qword ptr fs:[0x28]
4117cd: jne 0x413d70
4117d3: lea rsp, [rbp - 0x28]
4117d7: mov eax, r12d
4117da: pop rbx
4117db: pop r12
4117dd: pop r13
4117df: pop r14
4117e1: pop r15
4117e3: pop rbp
4117e4: ret 
4117e5: cmp eax, 0x100
4117ea: jne 0x411e10
4117f0: mov eax, dword ptr [rcx]
4117f2: cmp eax, 0x2f
4117f5: ja 0x411d50
4117fb: mov esi, eax
4117fd: add eax, 8
411800: add rsi, qword ptr [rcx + 0x10]
411804: mov dword ptr [rcx], eax
411806: mov rsi, qword ptr [rsi]
411809: mov rax, rdx
41180c: shl rax, 4
411810: mov qword ptr [r10 + rax], rsi
411814: add rdx, 1
411818: cmp rdx, rbx
41181b: jb 0x4116a0
411821: movsxd rax, dword ptr [rbp + 0x10]
411825: mov qword ptr [rbp - 0x8b8], rax
41182c: cmp r13, rax
41182f: jbe 0x41211b
411835: movzx eax, byte ptr [rbp + 0x40]
411839: mov rbx, qword ptr [rbp - 0x898]
411840: mov qword ptr [rbp - 0x948], r13
411847: mov r15, qword ptr [rbp - 0x8d0]
41184e: and eax, 1
411851: mov byte ptr [rbp - 0x91f], al
411857: mov eax, dword ptr [rbp + 0x40]
41185a: and eax, 8
41185d: mov dword ptr [rbp - 0x95c], eax
411863: mov rax, qword ptr [rbp - 0x8e8]
41186a: add rax, 0x3e8
411870: mov qword ptr [rbp - 0x958], rax
411877: mov rax, qword ptr [rbp - 0x8b8]
41187e: lea rax, [rax + rax*8]
411882: lea r14, [rbx + rax*8]
411886: movzx eax, byte ptr [r14 + 0xc]
41188b: mov r11d, dword ptr [r14 + 8]
41188f: mov r8d, dword ptr [r14]
411892: mov ebx, eax
411894: mov edx, eax
411896: mov esi, eax
411898: mov ecx, eax
41189a: shr bl, 3
41189d: shr dl, 5
4118a0: mov edi, eax
4118a2: mov r13d, eax
4118a5: shr cl, 6
4118a8: and ebx, 1
4118ab: shr r13b, 1
4118ae: mov byte ptr [rbp - 0x8e0], r11b
4118b5: shr sil, 4
4118b9: and ecx, 1
4118bc: shr dil, 7
4118c0: and r13d, 1
4118c4: mov byte ptr [rbp - 0x91d], bl
4118ca: mov ebx, edx
4118cc: movzx edx, byte ptr [r14 + 0xd]
4118d1: and esi, 1
4118d4: mov byte ptr [rbp - 0x8f8], sil
4118db: mov esi, eax
4118dd: and ebx, 1
4118e0: mov r12d, edx
4118e3: shr dl, 3
4118e6: and esi, 1
4118e9: mov dword ptr [rbp - 0x8f0], ebx
4118ef: and edx, 1
4118f2: mov byte ptr [rbp - 0x938], sil
4118f9: mov ebx, eax
4118fb: mov esi, dword ptr [r14 + 0x10]
4118ff: mov byte ptr [rbp - 0x928], dl
411905: movsxd rdx, dword ptr [r14 + 0x2c]
411909: shr r12b, 1
41190c: shr bl, 2
41190f: mov byte ptr [rbp - 0x900], cl
411915: and r12d, 1
411919: and ebx, 1
41191c: mov byte ptr [rbp - 0x930], dil
411923: mov dword ptr [rbp - 0x908], esi
411929: cmp edx, -1
41192c: je 0x411f50
411932: mov rdi, qword ptr [rbp - 0x8a0]
411939: shl rdx, 4
41193d: mov r9d, dword ptr [rdi + rdx]
411941: test r9d, r9d
411944: js 0x412180
41194a: mov dword ptr [r14 + 4], r9d
41194e: movsxd rax, dword ptr [r14 + 0x28]
411952: cmp eax, -1
411955: je 0x411972
411957: mov rsi, qword ptr [rbp - 0x8a0]
41195e: shl rax, 4
411962: mov r8d, dword ptr [rsi + rax]
411966: test r8d, r8d
411969: js 0x412168
41196f: mov dword ptr [r14], r8d
411972: cmp r9d, r8d
411975: mov eax, r8d
411978: cmovge eax, r9d
41197c: cmp eax, 0x3c8
411981: jle 0x411f30
411987: lea edx, [rax + 0x20]
41198a: mov dword ptr [rbp - 0x950], r8d
411991: movsxd rdi, edx
411994: mov dword ptr [rbp - 0x94c], r9d
41199b: mov dword ptr [rbp - 0x940], r11d
4119a2: mov dword ptr [rbp - 0x910], edx
4119a8: mov qword ptr [rbp - 0x8d0], rdi
4119af: call 0x421200
4119b4: mov edx, dword ptr [rbp - 0x910]
4119ba: mov rdi, qword ptr [rbp - 0x8d0]
4119c1: mov r11d, dword ptr [rbp - 0x940]
4119c8: mov r9d, dword ptr [rbp - 0x94c]
4119cf: cmp edx, 0x1000
4119d5: mov r8d, dword ptr [rbp - 0x950]
4119dc: jle 0x4119e6
4119de: test eax, eax
4119e0: je 0x41399c
4119e6: add rdi, 0x17
4119ea: mov rdx, rsp
4119ed: mov rax, rdi
4119f0: and rdi, 0xfffffffffffff000
4119f7: sub rdx, rdi
4119fa: and rax, 0xfffffffffffffff0
4119fe: cmp rsp, rdx
411a01: je 0x411a18
411a03: sub rsp, 0x1000
411a0a: or qword ptr [rsp + 0xff8], 0
411a13: cmp rsp, rdx
411a16: jne 0x411a03
411a18: and eax, 0xfff
411a1d: sub rsp, rax
411a20: test rax, rax
411a23: jne 0x412224
411a29: lea rdx, [rsp + 0xf]
411a2e: and rdx, 0xfffffffffffffff0
411a32: cmp r9d, r8d
411a35: jl 0x411ec6
411a3b: movsxd rax, r9d
411a3e: add rax, 0x20
411a42: mov qword ptr [rbp - 0x8d0], 0
411a4d: add rax, rdx
411a50: mov qword ptr [rbp - 0x910], rax
411a57: mov rax, qword ptr [rip + 0xb1eea]
411a5e: test rax, rax
411a61: je 0x411a7f
411a63: movsx rcx, byte ptr [rbp - 0x8e0]
411a6b: mov rax, qword ptr [rax + rcx*8]
411a6f: mov qword ptr [rbp - 0x940], rcx
411a76: test rax, rax
411a79: jne 0x411f60
411a7f: lea eax, [r11 - 0x20]
411a83: mov byte ptr [rbp - 0x94c], r11b
411a8a: cmp al, 0x5a
411a8c: jbe 0x411ed8
411a92: endbr64 
411a96: mov rsi, qword ptr [r14 + 0x38]
411a9a: mov rbx, rsp
411a9d: lea rax, [rsi*8 + 0x17]
411aa5: mov rdx, rax
411aa8: and rax, 0xfffffffffffff000
411aae: sub rbx, rax
411ab1: and rdx, 0xfffffffffffffff0
411ab5: mov rax, rbx
411ab8: cmp rsp, rax
411abb: je 0x411ad2
411abd: sub rsp, 0x1000
411ac4: or qword ptr [rsp + 0xff8], 0
411acd: cmp rsp, rax
411ad0: jne 0x411abd
411ad2: mov rax, rdx
411ad5: and eax, 0xfff
411ada: sub rsp, rax
411add: test rax, rax
411ae0: je 0x411ae8
411ae2: or qword ptr [rsp + rax - 8], 0
411ae8: lea rdi, [rsp + 0xf]
411aed: and rdi, 0xfffffffffffffff0
411af1: test rsi, rsi
411af4: je 0x411b22
411af6: mov r8d, dword ptr [r14 + 0x30]
411afa: mov r9, qword ptr [rbp - 0x8a0]
411b01: xor edx, edx
411b03: xor ecx, ecx
411b05: nop dword ptr [rax]
411b08: lea eax, [rdx + r8]
411b0c: shl rax, 4
411b10: add rax, r9
411b13: mov qword ptr [rdi + rcx*8], rax
411b17: lea ecx, [rdx + 1]
411b1a: mov rdx, rcx
411b1d: cmp rsi, rcx
411b20: ja 0x411b08
411b22: mov rax, qword ptr [r15 + 0x28]
411b26: cmp rax, qword ptr [r15 + 0x30]
411b2a: jae 0x413960
411b30: lea rdx, [rax + 1]
411b34: mov qword ptr [r15 + 0x28], rdx
411b38: mov byte ptr [rax], 0x25
411b3b: movzx eax, byte ptr [r14 + 0xc]
411b40: test al, 8
411b42: je 0x41318b
411b48: mov rax, qword ptr [r15 + 0x28]
411b4c: cmp rax, qword ptr [r15 + 0x30]
411b50: jae 0x4139fe
411b56: lea rdx, [rax + 1]
411b5a: mov qword ptr [r15 + 0x28], rdx
411b5e: mov byte ptr [rax], 0x23
411b61: movzx eax, byte ptr [r14 + 0xc]
411b66: mov r12d, 3
411b6c: mov ebx, 2
411b71: test al, al
411b73: js 0x4132eb
411b79: test al, 0x40
411b7b: je 0x41319b
411b81: mov rax, qword ptr [r15 + 0x28]
411b85: cmp rax, qword ptr [r15 + 0x30]
411b89: jae 0x413c00
411b8f: lea rdx, [rax + 1]
411b93: mov qword ptr [r15 + 0x28], rdx
411b97: mov byte ptr [rax], 0x2b
411b9a: movzx eax, byte ptr [r14 + 0xc]
411b9f: add ebx, 1
411ba2: test al, 0x20
411ba4: je 0x411bc2
411ba6: mov rax, qword ptr [r15 + 0x28]
411baa: cmp rax, qword ptr [r15 + 0x30]
411bae: jae 0x413a20
411bb4: lea rdx, [rax + 1]
411bb8: mov qword ptr [r15 + 0x28], rdx
411bbc: mov byte ptr [rax], 0x2d
411bbf: add ebx, 1
411bc2: cmp dword ptr [r14 + 0x10], 0x30
411bc7: je 0x4133f0
411bcd: test byte ptr [r14 + 0xd], 8
411bd2: je 0x411bf0
411bd4: mov rax, qword ptr [r15 + 0x28]
411bd8: cmp rax, qword ptr [r15 + 0x30]
411bdc: jae 0x413c20
411be2: lea rdx, [rax + 1]
411be6: mov qword ptr [r15 + 0x28], rdx
411bea: mov byte ptr [rax], 0x49
411bed: add ebx, 1
411bf0: mov eax, dword ptr [r14 + 4]
411bf4: test eax, eax
411bf6: jne 0x413373
411bfc: cmp dword ptr [r14], -1
411c00: je 0x41304c
411c06: mov rax, qword ptr [r15 + 0x28]
411c0a: cmp rax, qword ptr [r15 + 0x30]
411c0e: jae 0x413b30
411c14: lea rdx, [rax + 1]
411c18: mov qword ptr [r15 + 0x28], rdx
411c1c: mov byte ptr [rax], 0x2e
411c1f: cmp ebx, 0x7fffffff
411c25: je 0x411777
411c2b: movsxd rdi, dword ptr [r14]
411c2e: lea r12, [rbp - 0x44]
411c32: xor ecx, ecx
411c34: mov edx, 0xa
411c39: mov rsi, r12
411c3c: add ebx, 1
411c3f: call 0x467040
411c44: mov r13, rax
411c47: cmp rax, r12
411c4a: jb 0x411c7a
411c4c: jmp 0x41304c
411c51: nop dword ptr [rax]
411c58: lea rcx, [rax + 1]
411c5c: mov qword ptr [r15 + 0x28], rcx
411c60: mov byte ptr [rax], dl
411c62: cmp ebx, 0x7fffffff
411c68: je 0x411777
411c6e: add ebx, 1
411c71: cmp r13, r12
411c74: je 0x41304c
411c7a: add r13, 1
411c7e: mov rax, qword ptr [r15 + 0x28]
411c82: movzx edx, byte ptr [r13 - 1]
411c87: cmp rax, qword ptr [r15 + 0x30]
411c8b: jb 0x411c58
411c8d: movzx esi, dl
411c90: mov rdi, r15
411c93: call 0x41e8a0
411c98: cmp eax, -1
411c9b: jne 0x411c62
411c9d: jmp 0x411777
411ca2: nop word ptr [rax + rax]
411ca8: cmp eax, 0x107
411cad: je 0x411d80
411cb3: jle 0x4117e5
411cb9: cmp eax, 0x200
411cbe: je 0x4117f0
411cc4: cmp eax, 0x400
411cc9: jne 0x412130
411ccf: mov eax, dword ptr [rcx]
411cd1: cmp eax, 0x2f
411cd4: jbe 0x411e90
411cda: mov rsi, qword ptr [rcx + 8]
411cde: lea rax, [rsi + 8]
411ce2: mov qword ptr [rcx + 8], rax
411ce6: mov esi, dword ptr [rsi]
411ce8: mov rax, rdx
411ceb: shl rax, 4
411cef: mov dword ptr [r10 + rax], esi
411cf3: jmp 0x411814
411cf8: mov eax, dword ptr [rcx + 4]
411cfb: cmp eax, 0xaf
411d00: ja 0x411e58
411d06: mov esi, eax
411d08: add eax, 0x10
411d0b: add rsi, qword ptr [rcx + 0x10]
411d0f: mov dword ptr [rcx + 4], eax
411d12: movsd xmm0, qword ptr [rsi]
411d16: mov rax, rdx
411d19: shl rax, 4
411d1d: movsd qword ptr [r10 + rax], xmm0
411d23: jmp 0x411814
411d28: mov eax, dword ptr [rcx]
411d2a: cmp eax, 0x2f
411d2d: ja 0x411e40
411d33: mov esi, eax
411d35: add eax, 8
411d38: add rsi, qword ptr [rcx + 0x10]
411d3c: mov dword ptr [rcx], eax
411d3e: mov esi, dword ptr [rsi]
411d40: mov rax, rdx
411d43: shl rax, 4
411d47: mov dword ptr [r10 + rax], esi
411d4b: jmp 0x411814
411d50: mov rsi, qword ptr [rcx + 8]
411d54: lea rax, [rsi + 8]
411d58: mov qword ptr [rcx + 8], rax
411d5c: jmp 0x411806
411d61: mov esi, dword ptr [rbp - 0x91c]
411d67: test esi, esi
411d69: je 0x411e70
411d6f: lea rdi, [rip + 0x83bca]
411d76: call 0x41b220
411d7b: nop dword ptr [rax + rax]
411d80: test r8b, r8b
411d83: jne 0x412e0f
411d89: test r9d, r9d
411d8c: je 0x411ea0
411d92: mov esi, dword ptr [rcx + 4]
411d95: cmp esi, 0xaf
411d9b: ja 0x4121ab
411da1: mov eax, esi
411da3: add esi, 0x10
411da6: add rax, qword ptr [rcx + 0x10]
411daa: mov dword ptr [rcx + 4], esi
411dad: movdqa xmm0, xmmword ptr [rax]
411db1: mov rax, rdx
411db4: shl rax, 4
411db8: movaps xmmword ptr [r10 + rax], xmm0
411dbd: jmp 0x411814
411dc2: nop word ptr [rax + rax]
411dc8: mov rax, 0xffffffffffffffa8
411dcf: mov rax, qword ptr fs:[rax]
411dd3: mov rax, qword ptr [rax]
411dd6: mov rbx, qword ptr [rax + 0x48]
411dda: mov rax, qword ptr [rax + 0x50]
411dde: mov qword ptr [rbp - 0x8c8], rax
411de5: movzx eax, byte ptr [rax]
411de8: mov qword ptr [rbp - 0x8d8], rbx
411def: test al, al
411df1: je 0x411dfb
411df3: cmp al, 0x7f
411df5: jne 0x41148f
411dfb: mov qword ptr [rbp - 0x8c8], 0
411e06: jmp 0x41148f
411e0b: nop dword ptr [rax + rax]
411e10: mov rsi, rdx
411e13: shl rsi, 4
411e17: lea rdi, [r10 + rsi]
411e1b: mov r11, qword ptr [rip + 0xb1b4e]
411e22: test r11, r11
411e25: jne 0x4130ad
411e2b: pxor xmm0, xmm0
411e2f: movups xmmword ptr [rdi], xmm0
411e32: jmp 0x411814
411e37: nop word ptr [rax + rax]
411e40: mov rsi, qword ptr [rcx + 8]
411e44: lea rax, [rsi + 8]
411e48: mov qword ptr [rcx + 8], rax
411e4c: jmp 0x411d3e
411e51: nop dword ptr [rax]
411e58: mov rsi, qword ptr [rcx + 8]
411e5c: lea rax, [rsi + 8]
411e60: mov qword ptr [rcx + 8], rax
411e64: jmp 0x411d12
411e69: nop dword ptr [rax]
411e70: lea rcx, [rip + 0x83c09]
411e77: mov edx, 0x796
411e7c: lea rsi, [rip + 0x83a61]
411e83: lea rdi, [rip + 0x83a8e]
411e8a: call 0x4032a0
411e8f: nop 
411e90: mov esi, eax
411e92: add eax, 8
411e95: add rsi, qword ptr [rcx + 0x10]
411e99: mov dword ptr [rcx], eax
411e9b: jmp 0x411ce6
411ea0: mov rax, qword ptr [rcx + 8]
411ea4: add rax, 0xf
411ea8: and rax, 0xfffffffffffffff0
411eac: lea rsi, [rax + 0x10]
411eb0: mov qword ptr [rcx + 8], rsi
411eb4: fld xword ptr [rax]
411eb6: mov rax, rdx
411eb9: shl rax, 4
411ebd: fstp xword ptr [r10 + rax]
411ec1: jmp 0x411814
411ec6: movsxd rax, r8d
411ec9: add rax, 0x20
411ecd: jmp 0x411a42
411ed2: nop word ptr [rax + rax]
411ed8: movzx eax, byte ptr [rbp - 0x8f8]
411edf: movzx r13d, r13b
411ee3: movzx r12d, r12b
411ee7: movzx ebx, bl
411eea: lea rdi, [rip + 0x83b2f]
411ef1: lea rsi, [rip + 0xab228]
411ef8: mov dword ptr [rbp - 0x940], eax
411efe: movzx eax, byte ptr [rbp - 0x900]
411f05: mov dword ptr [rbp - 0x8f8], eax
411f0b: movzx eax, byte ptr [rbp - 0x908]
411f12: mov byte ptr [rbp - 0x900], al
411f18: movsx eax, r11b
411f1c: sub eax, 0x20
411f1f: cdqe 
411f21: movzx eax, byte ptr [rdi + rax]
411f25: jmp qword ptr [rsi + rax*8]
411f28: nop dword ptr [rax + rax]
411f30: mov rax, qword ptr [rbp - 0x958]
411f37: mov qword ptr [rbp - 0x8d0], 0
411f42: mov qword ptr [rbp - 0x910], rax
411f49: jmp 0x411a57
411f4e: nop 
411f50: mov r9d, dword ptr [r14 + 4]
411f54: jmp 0x41194e
411f59: nop dword ptr [rax]
411f60: mov rsi, qword ptr [r14 + 0x38]
411f64: mov rdi, rsp
411f67: lea rdx, [rsi*8 + 0x17]
411f6f: mov rcx, rdx
411f72: and rdx, 0xfffffffffffff000
411f79: sub rdi, rdx
411f7c: and rcx, 0xfffffffffffffff0
411f80: mov rdx, rdi
411f83: cmp rsp, rdx
411f86: je 0x411f9d
411f88: sub rsp, 0x1000
411f8f: or qword ptr [rsp + 0xff8], 0
411f98: cmp rsp, rdx
411f9b: jne 0x411f88
411f9d: and ecx, 0xfff
411fa3: sub rsp, rcx
411fa6: test rcx, rcx
411fa9: jne 0x412b18
411faf: lea r10, [rsp + 0xf]
411fb4: and r10, 0xfffffffffffffff0
411fb8: test rsi, rsi
411fbb: je 0x41200a
411fbd: mov dword ptr [rbp - 0x94c], r8d
411fc4: mov edi, dword ptr [r14 + 0x30]
411fc8: xor edx, edx
411fca: xor ecx, ecx
411fcc: mov r8, qword ptr [rbp - 0x8a0]
411fd3: nop dword ptr [rax + rax]
411fd8: lea eax, [rdi + rdx]
411fdb: shl rax, 4
411fdf: add rax, r8
411fe2: mov qword ptr [r10 + rcx*8], rax
411fe6: lea ecx, [rdx + 1]
411fe9: mov rdx, rcx
411fec: cmp rsi, rcx
411fef: ja 0x411fd8
411ff1: mov rax, qword ptr [rip + 0xb1950]
411ff8: mov rcx, qword ptr [rbp - 0x940]
411fff: mov r8d, dword ptr [rbp - 0x94c]
412006: mov rax, qword ptr [rax + rcx*8]
41200a: mov dword ptr [rbp - 0x950], r8d
412011: mov rdx, r10
412014: mov rsi, r14
412017: mov rdi, r15
41201a: mov dword ptr [rbp - 0x94c], r9d
412021: mov dword ptr [rbp - 0x940], r11d
412028: call rax
41202a: mov r11d, dword ptr [rbp - 0x940]
412031: mov r9d, dword ptr [rbp - 0x94c]
412038: cmp eax, -2
41203b: mov r8d, dword ptr [rbp - 0x950]
412042: je 0x411a7f
412048: test eax, eax
41204a: js 0x411777
412050: cmp dword ptr [rbp - 0x8a4], 0x7ffffffe
41205a: ja 0x413e01
412060: mov edx, 0x7fffffff
412065: sub edx, dword ptr [rbp - 0x8a4]
41206b: cmp edx, eax
41206d: jb 0x411769
412073: add dword ptr [rbp - 0x8a4], eax
412079: cmp qword ptr [rbp - 0x8d0], 0
412081: jne 0x4121e2
412087: mov esi, dword ptr [rbp - 0x8a4]
41208d: test esi, esi
41208f: js 0x413d49
412095: mov rbx, qword ptr [r15 + 0xd8]
41209c: mov rdx, 0x4c1b60
4120a3: mov rax, 0x4c2208
4120aa: mov rcx, rbx
4120ad: sub rax, rdx
4120b0: sub rcx, rdx
4120b3: cmp rax, rcx
4120b6: jbe 0x4121d8
4120bc: mov rsi, qword ptr [r14 + 0x18]
4120c0: mov rdx, qword ptr [r14 + 0x20]
4120c4: mov rdi, r15
4120c7: sub rdx, rsi
4120ca: call qword ptr [rbx + 0x38]
4120cd: mov rdx, qword ptr [r14 + 0x20]
4120d1: sub rdx, qword ptr [r14 + 0x18]
4120d5: cmp rax, rdx
4120d8: jne 0x411790
4120de: mov edx, 0x7fffffff
4120e3: sub edx, dword ptr [rbp - 0x8a4]
4120e9: movsxd rdx, edx
4120ec: cmp rax, rdx
4120ef: jg 0x4121f3
4120f5: add dword ptr [rbp - 0x8a4], eax
4120fb: add r14, 0x48
4120ff: add qword ptr [rbp - 0x8b8], 1
412107: mov rax, qword ptr [rbp - 0x8b8]
41210e: cmp qword ptr [rbp - 0x948], rax
412115: ja 0x411886
41211b: mov r12d, dword ptr [rbp - 0x8a4]
412122: jmp 0x411796
412127: nop word ptr [rax + rax]
412130: mov rsi, rdx
412133: shl rsi, 4
412137: lea rdi, [r10 + rsi]
41213b: test ah, 8
41213e: je 0x411e1b
412144: mov eax, dword ptr [rcx]
412146: cmp eax, 0x2f
412149: ja 0x41219d
41214b: mov edi, eax
41214d: add eax, 8
412150: add rdi, qword ptr [rcx + 0x10]
412154: mov dword ptr [rcx], eax
412156: mov rax, qword ptr [rdi]
412159: mov qword ptr [r10 + rsi], rax
41215d: jmp 0x411814
412162: nop word ptr [rax + rax]
412168: mov dword ptr [r14], 0xffffffff
41216f: mov r8d, 0xffffffff
412175: jmp 0x411972
41217a: nop word ptr [rax + rax]
412180: mov dword ptr [rbp - 0x8f0], 1
41218a: neg r9d
41218d: or eax, 0x20
412190: mov dword ptr [r14 + 4], r9d
412194: mov byte ptr [r14 + 0xc], al
412198: jmp 0x41194e
41219d: mov rdi, qword ptr [rcx + 8]
4121a1: lea rax, [rdi + 8]
4121a5: mov qword ptr [rcx + 8], rax
4121a9: jmp 0x412156
4121ab: mov rax, qword ptr [rcx + 8]
4121af: add rax, 0xf
4121b3: and rax, 0xfffffffffffffff0
4121b7: lea rsi, [rax + 0x10]
4121bb: mov qword ptr [rcx + 8], rsi
4121bf: jmp 0x411dad
4121c4: test rbx, rbx
4121c7: jne 0x411676
4121cd: jmp 0x41211b
4121d2: nop word ptr [rax + rax]
4121d8: call 0x41b240
4121dd: jmp 0x4120bc
4121e2: mov rdi, qword ptr [rbp - 0x8d0]
4121e9: call 0x426a00
4121ee: jmp 0x412087
4121f3: mov rax, 0xffffffffffffffc0
4121fa: mov r12d, 0xffffffff
412200: mov dword ptr fs:[rax], 0x4b
412207: jmp 0x411796
41220c: mov rax, qword ptr [rbp - 0x8b0]
412213: xor ebx, ebx
412215: xor r13d, r13d
412218: mov qword ptr [rbp - 0x898], rax
41221f: jmp 0x411552
412224: or qword ptr [rsp + rax - 8], 0
41222a: jmp 0x411a29
41222f: endbr64 
412233: mov qword ptr [rbp - 0x878], 0
41223e: movsxd rax, dword ptr [r14 + 0x30]
412242: lea r12, [rbp - 0x50]
412246: lea rdx, [rbp - 0x878]
41224d: mov rdi, qword ptr [rbp - 0x8a0]
412254: mov dword ptr [rbp - 0x8e0], r9d
41225b: shl rax, 4
41225f: mov esi, dword ptr [rdi + rax]
412262: mov rdi, r12
412265: call 0x44f020
41226a: mov r13, rax
41226d: cmp rax, -1
412271: je 0x411777
412277: mov r9d, dword ptr [rbp - 0x8e0]
41227e: mov edx, dword ptr [rbp - 0x8f0]
412284: mov ebx, r9d
412287: sub ebx, eax
412289: test ebx, ebx
41228b: setg byte ptr [rbp - 0x8e0]
412292: movzx eax, byte ptr [rbp - 0x8e0]
412299: test edx, edx
41229b: jne 0x4122a5
41229d: test al, al
41229f: jne 0x413480
4122a5: mov eax, dword ptr [rbp - 0x8a4]
4122ab: test eax, eax
4122ad: js 0x413de2
4122b3: mov rcx, qword ptr [r15 + 0xd8]
4122ba: mov rdx, 0x4c1b60
4122c1: mov rax, 0x4c2208
4122c8: mov rdi, rcx
4122cb: sub rax, rdx
4122ce: sub rdi, rdx
4122d1: cmp rax, rdi
4122d4: jbe 0x4136e5
4122da: mov rdx, r13
4122dd: mov rsi, r12
4122e0: mov rdi, r15
4122e3: call qword ptr [rcx + 0x38]
4122e6: cmp rax, r13
4122e9: jne 0x411777
4122ef: mov edi, dword ptr [rbp - 0x8a4]
4122f5: mov ecx, 0x7fffffff
4122fa: mov eax, ecx
4122fc: sub eax, edi
4122fe: cdqe 
412300: cmp rax, r13
412303: jb 0x411769
412309: mov r12d, dword ptr [rbp - 0x8f0]
412310: add edi, r13d
412313: mov dword ptr [rbp - 0x8a4], edi
412319: test r12d, r12d
41231c: je 0x412079
412322: cmp byte ptr [rbp - 0x8e0], 0
412329: je 0x412079
41232f: movsxd r12, ebx
412332: mov esi, 0x20
412337: mov rdi, r15
41233a: mov rdx, r12
41233d: call 0x418850
412342: cmp r12, rax
412345: jne 0x411777
41234b: mov esi, dword ptr [rbp - 0x8a4]
412351: cmp esi, 0x7ffffffe
412357: ja 0x413d2a
41235d: mov ecx, 0x7fffffff
412362: mov eax, ecx
412364: sub eax, esi
412366: cmp eax, ebx
412368: jb 0x411769
41236e: add esi, ebx
412370: mov dword ptr [rbp - 0x8a4], esi
412376: jmp 0x412079
41237b: endbr64 
41237f: mov rax, qword ptr [r15 + 0x28]
412383: cmp rax, qword ptr [r15 + 0x30]
412387: jae 0x413940
41238d: lea rdx, [rax + 1]
412391: mov qword ptr [r15 + 0x28], rdx
412395: mov byte ptr [rax], 0x25
412398: mov eax, dword ptr [rbp - 0x8a4]
41239e: cmp eax, 0x7fffffff
4123a3: je 0x411777
4123a9: add eax, 1
4123ac: mov dword ptr [rbp - 0x8a4], eax
4123b2: jmp 0x412079
4123b7: endbr64 
4123bb: mov dword ptr [rbp - 0x908], 0xa
4123c5: movsxd rax, dword ptr [r14 + 0x30]
4123c9: shl rax, 4
4123cd: add rax, qword ptr [rbp - 0x8a0]
4123d4: test ebx, ebx
4123d6: je 0x412cb6
4123dc: mov dword ptr [rbp - 0x8f8], 0
4123e6: mov r11, qword ptr [rax]
4123e9: xor ebx, ebx
4123eb: mov dword ptr [rbp - 0x940], 0
4123f5: test r8d, r8d
4123f8: js 0x412e47
4123fe: jne 0x412749
412404: test r11, r11
412407: jne 0x413011
41240d: cmp dword ptr [rbp - 0x908], 8
412414: jne 0x4131ef
41241a: cmp byte ptr [rbp - 0x91d], 0
412421: je 0x4131ef
412427: mov rax, qword ptr [rbp - 0x910]
41242e: mov r13d, 1
412434: mov byte ptr [rax - 1], 0x30
412438: lea r10, [rax - 1]
41243c: mov byte ptr [rbp - 0x900], 0x20
412443: xor edx, edx
412445: mov eax, dword ptr [rbp - 0x8f0]
41244b: xor r11d, r11d
41244e: test eax, eax
412450: jne 0x412b23
412456: add edx, r13d
412459: mov dword ptr [rbp - 0x8f0], r13d
412460: xor r11d, r11d
412463: sub r9d, edx
412466: mov r12d, r9d
412469: mov eax, dword ptr [rbp - 0x940]
41246f: or eax, dword ptr [rbp - 0x8f8]
412475: or eax, ebx
412477: je 0x412d71
41247d: sub r12d, 1
412481: cmp byte ptr [rbp - 0x900], 0x20
412488: je 0x413dc5
41248e: test ebx, ebx
412490: je 0x412f91
412496: mov rax, qword ptr [r15 + 0x28]
41249a: cmp rax, qword ptr [r15 + 0x30]
41249e: jae 0x4136fd
4124a4: lea rdx, [rax + 1]
4124a8: mov qword ptr [r15 + 0x28], rdx
4124ac: mov byte ptr [rax], 0x2d
4124af: mov eax, dword ptr [rbp - 0x8a4]
4124b5: cmp eax, 0x7fffffff
4124ba: je 0x411777
4124c0: add eax, 1
4124c3: mov dword ptr [rbp - 0x8a4], eax
4124c9: test r11, r11
4124cc: je 0x412542
4124ce: cmp dword ptr [rbp - 0x908], 0x10
4124d5: jne 0x412542
4124d7: cmp byte ptr [rbp - 0x91d], 0
4124de: je 0x412542
4124e0: mov rax, qword ptr [r15 + 0x28]
4124e4: cmp rax, qword ptr [r15 + 0x30]
4124e8: jae 0x413af0
4124ee: lea rdx, [rax + 1]
4124f2: mov qword ptr [r15 + 0x28], rdx
4124f6: mov byte ptr [rax], 0x30
4124f9: cmp dword ptr [rbp - 0x8a4], 0x7fffffff
412503: je 0x411777
412509: mov rax, qword ptr [r15 + 0x28]
41250d: cmp rax, qword ptr [r15 + 0x30]
412511: jae 0x413aad
412517: movzx ebx, byte ptr [rbp - 0x8e0]
41251e: lea rdx, [rax + 1]
412522: mov qword ptr [r15 + 0x28], rdx
412526: mov byte ptr [rax], bl
412528: mov eax, dword ptr [rbp - 0x8a4]
41252e: cmp eax, 0x7ffffffe
412533: je 0x411777
412539: add eax, 2
41253c: mov dword ptr [rbp - 0x8a4], eax
412542: add r12d, r8d
412545: test r12d, r12d
412548: jg 0x412f37
41254e: mov eax, dword ptr [rbp - 0x8a4]
412554: test eax, eax
412556: js 0x413e20
41255c: mov rbx, qword ptr [r15 + 0xd8]
412563: mov rdx, 0x4c1b60
41256a: mov rax, 0x4c2208
412571: mov rcx, rbx
412574: sub rax, rdx
412577: sub rcx, rdx
41257a: cmp rax, rcx
41257d: jbe 0x4135b7
412583: mov rdx, r13
412586: mov rsi, r10
412589: mov rdi, r15
41258c: call qword ptr [rbx + 0x38]
41258f: cmp r13, rax
412592: jne 0x411777
412598: mov ebx, dword ptr [rbp - 0x8a4]
41259e: mov eax, 0x7fffffff
4125a3: sub eax, ebx
4125a5: cdqe 
4125a7: cmp rax, r13
4125aa: jl 0x411769
4125b0: mov eax, dword ptr [rbp - 0x8f0]
4125b6: add ebx, eax
4125b8: mov dword ptr [rbp - 0x8a4], ebx
4125be: jmp 0x412079
4125c3: endbr64 
4125c7: test ebx, ebx
4125c9: jne 0x41222f
4125cf: lea r12d, [r9 - 1]
4125d3: mov esi, dword ptr [rbp - 0x8f0]
4125d9: test r12d, r12d
4125dc: setg bl
4125df: test esi, esi
4125e1: jne 0x4125eb
4125e3: test bl, bl
4125e5: jne 0x413748
4125eb: movsxd rax, dword ptr [r14 + 0x30]
4125ef: mov rcx, qword ptr [rbp - 0x8a0]
4125f6: shl rax, 4
4125fa: mov edx, dword ptr [rcx + rax]
4125fd: mov rax, qword ptr [r15 + 0x28]
412601: cmp rax, qword ptr [r15 + 0x30]
412605: jae 0x413a5f
41260b: lea rcx, [rax + 1]
41260f: mov qword ptr [r15 + 0x28], rcx
412613: mov byte ptr [rax], dl
412615: mov eax, dword ptr [rbp - 0x8a4]
41261b: cmp eax, 0x7fffffff
412620: je 0x411777
412626: mov ecx, dword ptr [rbp - 0x8f0]
41262c: add eax, 1
41262f: mov dword ptr [rbp - 0x8a4], eax
412635: test ecx, ecx
412637: je 0x412079
41263d: test bl, bl
41263f: je 0x412079
412645: movsxd rbx, r12d
412648: mov esi, 0x20
41264d: mov rdi, r15
412650: mov rdx, rbx
412653: call 0x418850
412658: cmp rbx, rax
41265b: jne 0x411777
412661: mov ebx, dword ptr [rbp - 0x8a4]
412667: cmp ebx, 0x7ffffffe
41266d: ja 0x413d2a
412673: mov eax, 0x7fffffff
412678: sub eax, ebx
41267a: cmp eax, r12d
41267d: jb 0x411769
412683: add ebx, r12d
412686: mov dword ptr [rbp - 0x8a4], ebx
41268c: jmp 0x412079
412691: endbr64 
412695: mov r9d, dword ptr [rbp - 0x91c]
41269c: test r9d, r9d
41269f: je 0x4126bf
4126a1: mov r8d, dword ptr [rbp - 0x8a8]
4126a8: test r8d, r8d
4126ab: je 0x4136be
4126b1: mov edi, dword ptr [rbp - 0x8a8]
4126b7: test edi, edi
4126b9: js 0x413dd6
4126bf: movsxd rax, dword ptr [r14 + 0x30]
4126c3: mov rsi, qword ptr [rbp - 0x8a0]
4126ca: shl rax, 4
4126ce: mov rax, qword ptr [rsi + rax]
4126d2: test ebx, ebx
4126d4: je 0x4131d7
4126da: movsxd rdx, dword ptr [rbp - 0x8a4]
4126e1: mov qword ptr [rax], rdx
4126e4: jmp 0x412079
4126e9: endbr64 
4126ed: movsxd rax, dword ptr [r14 + 0x30]
4126f1: mov rcx, qword ptr [rbp - 0x8a0]
4126f8: shl rax, 4
4126fc: mov r10, qword ptr [rcx + rax]
412700: test r10, r10
412703: je 0x413444
412709: mov r11, r10
41270c: test r8d, r8d
41270f: js 0x413642
412715: movzx eax, byte ptr [rbp - 0x91e]
41271c: mov byte ptr [rbp - 0x91d], al
412722: je 0x413515
412728: mov byte ptr [rbp - 0x94c], 0x78
41272f: xor ebx, ebx
412731: mov byte ptr [rbp - 0x930], 0
412738: mov dword ptr [rbp - 0x908], 0x10
412742: mov byte ptr [rbp - 0x8e0], 0x78
412749: mov byte ptr [rbp - 0x900], 0x20
412750: movsxd r12, r8d
412753: mov r13d, dword ptr [rbp - 0x908]
41275a: xor ecx, ecx
41275c: mov rsi, qword ptr [rbp - 0x910]
412763: mov rdi, r11
412766: cmp byte ptr [rbp - 0x8e0], 0x58
41276d: mov dword ptr [rbp - 0x950], r9d
412774: sete cl
412777: mov edx, r13d
41277a: mov qword ptr [rbp - 0x938], r11
412781: call 0x467040
412786: mov rcx, qword ptr [rbp - 0x8c8]
41278d: cmp r13d, 0xa
412791: mov r11, qword ptr [rbp - 0x938]
412798: sete r13b
41279c: and r13b, byte ptr [rbp - 0x928]
4127a3: mov r9d, dword ptr [rbp - 0x950]
4127aa: mov r10, rax
4127ad: test rcx, rcx
4127b0: je 0x4127f7
4127b2: cmp byte ptr [rbp - 0x930], 0
4127b9: je 0x4127f7
4127bb: mov r8, qword ptr [rbp - 0x8d8]
4127c2: mov rdx, qword ptr [rbp - 0x910]
4127c9: mov rsi, rax
4127cc: mov qword ptr [rbp - 0x930], r11
4127d3: mov rdi, qword ptr [rbp - 0x8e8]
4127da: mov dword ptr [rbp - 0x928], r9d
4127e1: call 0x410e60
4127e6: mov r11, qword ptr [rbp - 0x930]
4127ed: mov r9d, dword ptr [rbp - 0x928]
4127f4: mov r10, rax
4127f7: test r13b, r13b
4127fa: je 0x41282d
4127fc: mov rsi, qword ptr [rbp - 0x910]
412803: mov rdi, r10
412806: mov qword ptr [rbp - 0x930], r11
41280d: mov dword ptr [rbp - 0x928], r9d
412814: mov rdx, rsi
412817: call 0x410fb0
41281c: mov r11, qword ptr [rbp - 0x930]
412823: mov r9d, dword ptr [rbp - 0x928]
41282a: mov r10, rax
41282d: mov r13, qword ptr [rbp - 0x910]
412834: sub r13, r10
412837: cmp r13, r12
41283a: jge 0x412cdf
412840: mov rdx, r12
412843: mov eax, 0
412848: mov ecx, dword ptr [rbp - 0x8f0]
41284e: sub rdx, r13
412851: cmovs rdx, rax
412855: mov r8d, edx
412858: test ecx, ecx
41285a: jne 0x412b23
412860: sub r9d, r13d
412863: mov dword ptr [rbp - 0x8f0], r13d
41286a: mov r12d, r9d
41286d: sub r12d, edx
412870: test r11, r11
412873: je 0x412469
412879: cmp dword ptr [rbp - 0x908], 0x10
412880: sete al
412883: and al, byte ptr [rbp - 0x91d]
412889: je 0x412469
41288f: mov byte ptr [rbp - 0x91d], al
412895: sub r12d, 2
412899: jmp 0x412469
41289e: endbr64 
4128a2: movsxd rax, dword ptr [r14 + 0x30]
4128a6: mov rdi, qword ptr [rbp - 0x8a0]
4128ad: shl rax, 4
4128b1: mov r12, qword ptr [rdi + rax]
4128b5: test r12, r12
4128b8: je 0x412fe2
4128be: and ebx, 1
4128c1: jne 0x4131fe
4128c7: cmp r11b, 0x53
4128cb: je 0x4131fe
4128d1: cmp r8d, -1
4128d5: je 0x41332b
4128db: movsxd rsi, r8d
4128de: mov rdi, r12
4128e1: mov dword ptr [rbp - 0x8e0], r9d
4128e8: call 0x401030
4128ed: mov r9d, dword ptr [rbp - 0x8e0]
4128f4: mov dword ptr [rbp - 0x8f8], 0
4128fe: mov rbx, rax
412901: mov r13d, eax
412904: sub r9d, r13d
412907: mov dword ptr [rbp - 0x900], r9d
41290e: js 0x412ec5
412914: mov r10d, dword ptr [rbp - 0x8f0]
41291b: setne byte ptr [rbp - 0x8e0]
412922: movzx eax, byte ptr [rbp - 0x8e0]
412929: test r10d, r10d
41292c: jne 0x412936
41292e: test al, al
412930: jne 0x413558
412936: mov r9d, dword ptr [rbp - 0x8a4]
41293d: test r9d, r9d
412940: js 0x413de2
412946: mov rcx, qword ptr [r15 + 0xd8]
41294d: mov rdx, 0x4c1b60
412954: mov rax, 0x4c2208
41295b: mov rsi, rcx
41295e: sub rax, rdx
412961: sub rsi, rdx
412964: cmp rax, rsi
412967: jbe 0x4138a9
41296d: mov rdx, rbx
412970: mov rsi, r12
412973: mov rdi, r15
412976: call qword ptr [rcx + 0x38]
412979: cmp rax, rbx
41297c: jne 0x411777
412982: mov esi, dword ptr [rbp - 0x8a4]
412988: mov ecx, 0x7fffffff
41298d: mov eax, ecx
41298f: sub eax, esi
412991: cdqe 
412993: cmp rax, rbx
412996: jb 0x411769
41299c: mov r8d, dword ptr [rbp - 0x8f0]
4129a3: add esi, r13d
4129a6: mov dword ptr [rbp - 0x8a4], esi
4129ac: test r8d, r8d
4129af: je 0x4129be
4129b1: cmp byte ptr [rbp - 0x8e0], 0
4129b8: jne 0x4135f5
4129be: mov edi, dword ptr [rbp - 0x8f8]
4129c4: test edi, edi
4129c6: je 0x412079
4129cc: mov rdi, r12
4129cf: call 0x426a00
4129d4: jmp 0x412079
4129d9: endbr64 
4129dd: movsxd rax, dword ptr [r14 + 0x30]
4129e1: shl rax, 4
4129e5: test ebx, ebx
4129e7: mov rbx, qword ptr [rbp - 0x8a0]
4129ee: je 0x4131c1
4129f4: mov r10, qword ptr [rbx + rax]
4129f8: test r10, r10
4129fb: js 0x413311
412a01: mov dword ptr [rbp - 0x908], 0xa
412a0b: mov r11, r10
412a0e: xor ebx, ebx
412a10: jmp 0x4123f5
412a15: endbr64 
412a19: mov dword ptr [rbp - 0x908], 0x10
412a23: jmp 0x4123c5
412a28: endbr64 
412a2c: mov dword ptr [rbp - 0x908], 8
412a36: jmp 0x4123c5
412a3b: endbr64 
412a3f: mov rsi, qword ptr [rbp - 0x8e8]
412a46: mov edi, dword ptr [rbp + 0x28]
412a49: xor ebx, ebx
412a4b: mov edx, 0x3e8
412a50: mov dword ptr [rbp - 0x900], r8d
412a57: mov dword ptr [rbp - 0x8f8], r9d
412a5e: mov dword ptr [rbp - 0x8e0], r11d
412a65: call 0x429060
412a6a: mov r11d, dword ptr [rbp - 0x8e0]
412a71: mov r9d, dword ptr [rbp - 0x8f8]
412a78: mov r8d, dword ptr [rbp - 0x900]
412a7f: mov r12, rax
412a82: jmp 0x4128b5
412a87: endbr64 
412a8b: movsxd rax, dword ptr [r14 + 0x30]
412a8f: shl rax, 4
412a93: add rax, qword ptr [rbp - 0x8a0]
412a9a: cmp byte ptr [rbp - 0x91f], 0
412aa1: mov qword ptr [rbp - 0x888], rax
412aa8: jne 0x41398a
412aae: mov r11d, dword ptr [rbp - 0x95c]
412ab5: movzx ebx, byte ptr [rbp - 0x938]
412abc: mov eax, 0
412ac1: mov rdi, r15
412ac4: test r11d, r11d
412ac7: cmove ebx, eax
412aca: mov eax, ebx
412acc: and eax, 1
412acf: shl eax, 4
412ad2: mov edx, eax
412ad4: movzx eax, byte ptr [r14 + 0xd]
412ad9: and eax, 0xffffffef
412adc: or eax, edx
412ade: lea rdx, [rbp - 0x888]
412ae5: mov byte ptr [r14 + 0xd], al
412ae9: mov rax, qword ptr [rbp - 0x8b8]
412af0: mov rbx, qword ptr [rbp - 0x898]
412af7: lea rax, [rax + rax*8]
412afb: lea rsi, [rbx + rax*8]
412aff: call 0x46a400
412b04: test eax, eax
412b06: jns 0x411748
412b0c: jmp 0x411777
412b11: nop dword ptr [rax]
412b18: or qword ptr [rsp + rcx - 8], 0
412b1e: jmp 0x411faf
412b23: test ebx, ebx
412b25: je 0x412d45
412b2b: mov rax, qword ptr [r15 + 0x28]
412b2f: cmp rax, qword ptr [r15 + 0x30]
412b33: jae 0x4138c1
412b39: lea rcx, [rax + 1]
412b3d: mov qword ptr [r15 + 0x28], rcx
412b41: mov byte ptr [rax], 0x2d
412b44: mov eax, dword ptr [rbp - 0x8a4]
412b4a: cmp eax, 0x7fffffff
412b4f: je 0x411777
412b55: add eax, 1
412b58: sub r9d, 1
412b5c: mov dword ptr [rbp - 0x8a4], eax
412b62: test r11, r11
412b65: je 0x412bdf
412b67: cmp dword ptr [rbp - 0x908], 0x10
412b6e: jne 0x412bdf
412b70: cmp byte ptr [rbp - 0x91d], 0
412b77: je 0x412bdf
412b79: mov rax, qword ptr [r15 + 0x28]
412b7d: cmp rax, qword ptr [r15 + 0x30]
412b81: jae 0x413ba8
412b87: lea rcx, [rax + 1]
412b8b: mov qword ptr [r15 + 0x28], rcx
412b8f: mov byte ptr [rax], 0x30
412b92: cmp dword ptr [rbp - 0x8a4], 0x7fffffff
412b9c: je 0x411777
412ba2: mov rax, qword ptr [r15 + 0x28]
412ba6: cmp rax, qword ptr [r15 + 0x30]
412baa: jae 0x413b50
412bb0: movzx ebx, byte ptr [rbp - 0x8e0]
412bb7: lea rcx, [rax + 1]
412bbb: mov qword ptr [r15 + 0x28], rcx
412bbf: mov byte ptr [rax], bl
412bc1: mov eax, dword ptr [rbp - 0x8a4]
412bc7: cmp eax, 0x7ffffffe
412bcc: je 0x411777
412bd2: add eax, 2
412bd5: sub r9d, 2
412bd9: mov dword ptr [rbp - 0x8a4], eax
412bdf: add edx, r13d
412be2: mov ebx, r9d
412be5: mov r12d, r13d
412be8: sub ebx, edx
412bea: test r8d, r8d
412bed: jg 0x412e52
412bf3: mov eax, dword ptr [rbp - 0x8a4]
412bf9: test eax, eax
412bfb: js 0x413e20
412c01: mov rcx, qword ptr [r15 + 0xd8]
412c08: mov rdx, 0x4c1b60
412c0f: mov rax, 0x4c2208
412c16: mov rsi, rcx
412c19: sub rax, rdx
412c1c: sub rsi, rdx
412c1f: cmp rax, rsi
412c22: jbe 0x4135cf
412c28: mov rdx, r13
412c2b: mov rsi, r10
412c2e: mov rdi, r15
412c31: call qword ptr [rcx + 0x38]
412c34: cmp r13, rax
412c37: jne 0x411777
412c3d: mov edi, dword ptr [rbp - 0x8a4]
412c43: mov ecx, 0x7fffffff
412c48: mov eax, ecx
412c4a: sub eax, edi
412c4c: cdqe 
412c4e: cmp rax, r13
412c51: jl 0x411769
412c57: add edi, r12d
412c5a: mov dword ptr [rbp - 0x8a4], edi
412c60: mov r13d, edi
412c63: test ebx, ebx
412c65: jle 0x412079
412c6b: movsxd r12, ebx
412c6e: mov esi, 0x20
412c73: mov rdi, r15
412c76: mov rdx, r12
412c79: call 0x418850
412c7e: cmp r12, rax
412c81: jne 0x411777
412c87: mov edi, r13d
412c8a: cmp r13d, 0x7ffffffe
412c91: ja 0x413d0b
412c97: mov ecx, 0x7fffffff
412c9c: mov eax, ecx
412c9e: sub eax, r13d
412ca1: cmp eax, ebx
412ca3: jb 0x411769
412ca9: add edi, ebx
412cab: mov dword ptr [rbp - 0x8a4], edi
412cb1: jmp 0x412079
412cb6: mov r10d, dword ptr [rax]
412cb9: test r12d, r12d
412cbc: je 0x412fbd
412cc2: mov dword ptr [rbp - 0x8f8], 0
412ccc: movzx r11d, r10b
412cd0: mov dword ptr [rbp - 0x940], 0
412cda: jmp 0x4123f5
412cdf: test r11, r11
412ce2: je 0x413432
412ce8: cmp dword ptr [rbp - 0x908], 8
412cef: jne 0x412d10
412cf1: cmp byte ptr [rbp - 0x91d], 0
412cf8: je 0x412d10
412cfa: mov r13, qword ptr [rbp - 0x910]
412d01: lea rax, [r10 - 1]
412d05: mov byte ptr [r10 - 1], 0x30
412d0a: mov r10, rax
412d0d: sub r13, rax
412d10: mov rdx, r12
412d13: mov eax, 0
412d18: mov ecx, dword ptr [rbp - 0x8f0]
412d1e: sub rdx, r13
412d21: cmovs rdx, rax
412d25: mov r8d, edx
412d28: test ecx, ecx
412d2a: jne 0x412b23
412d30: sub r9d, r13d
412d33: mov dword ptr [rbp - 0x8f0], r13d
412d3a: mov r12d, r9d
412d3d: sub r12d, edx
412d40: jmp 0x412879
412d45: mov eax, dword ptr [rbp - 0x8f8]
412d4b: test eax, eax
412d4d: je 0x413020
412d53: mov rax, qword ptr [r15 + 0x28]
412d57: cmp rax, qword ptr [r15 + 0x30]
412d5b: jae 0x413a80
412d61: lea rcx, [rax + 1]
412d65: mov qword ptr [r15 + 0x28], rcx
412d69: mov byte ptr [rax], 0x2b
412d6c: jmp 0x412b44
412d71: cmp byte ptr [rbp - 0x900], 0x20
412d78: jne 0x4124c9
412d7e: test r12d, r12d
412d81: jle 0x413d68
412d87: movsxd rdx, r12d
412d8a: mov esi, 0x20
412d8f: mov rdi, r15
412d92: mov qword ptr [rbp - 0x930], r11
412d99: mov qword ptr [rbp - 0x900], rdx
412da0: mov dword ptr [rbp - 0x928], r8d
412da7: mov qword ptr [rbp - 0x910], r10
412dae: call 0x418850
412db3: mov rdx, qword ptr [rbp - 0x900]
412dba: cmp rdx, rax
412dbd: jne 0x411777
412dc3: mov r10, qword ptr [rbp - 0x910]
412dca: mov r8d, dword ptr [rbp - 0x928]
412dd1: cmp dword ptr [rbp - 0x8a4], 0x7ffffffe
412ddb: mov r11, qword ptr [rbp - 0x930]
412de2: ja 0x413d0b
412de8: mov edi, dword ptr [rbp - 0x8a4]
412dee: mov eax, 0x7fffffff
412df3: sub eax, edi
412df5: cmp eax, r12d
412df8: jb 0x411769
412dfe: add edi, r12d
412e01: xor r12d, r12d
412e04: mov dword ptr [rbp - 0x8a4], edi
412e0a: jmp 0x41248e
412e0f: mov eax, dword ptr [rcx + 4]
412e12: cmp eax, 0xaf
412e17: ja 0x41317a
412e1d: mov esi, eax
412e1f: add eax, 0x10
412e22: add rsi, qword ptr [rcx + 0x10]
412e26: mov dword ptr [rcx + 4], eax
412e29: movsd xmm0, qword ptr [rsi]
412e2d: mov rax, rdx
412e30: shl rax, 4
412e34: movsd qword ptr [r10 + rax], xmm0
412e3a: and dword ptr [r15 + rdx*4], 0xfffffeff
412e42: jmp 0x411814
412e47: mov r12d, 1
412e4d: jmp 0x412753
412e52: movsxd rdx, r8d
412e55: mov esi, 0x30
412e5a: mov rdi, r15
412e5d: mov qword ptr [rbp - 0x8f8], r10
412e64: mov qword ptr [rbp - 0x8e0], rdx
412e6b: mov dword ptr [rbp - 0x8f0], r8d
412e72: call 0x418850
412e77: mov rdx, qword ptr [rbp - 0x8e0]
412e7e: cmp rdx, rax
412e81: jne 0x411777
412e87: mov ecx, dword ptr [rbp - 0x8a4]
412e8d: cmp ecx, 0x7ffffffe
412e93: ja 0x413d0b
412e99: mov eax, 0x7fffffff
412e9e: mov r8d, dword ptr [rbp - 0x8f0]
412ea5: sub eax, ecx
412ea7: cmp eax, r8d
412eaa: jb 0x411769
412eb0: add ecx, r8d
412eb3: mov r10, qword ptr [rbp - 0x8f8]
412eba: mov dword ptr [rbp - 0x8a4], ecx
412ec0: jmp 0x412bf3
412ec5: mov r11d, dword ptr [rbp - 0x8a4]
412ecc: test r11d, r11d
412ecf: js 0x413de2
412ed5: mov rcx, qword ptr [r15 + 0xd8]
412edc: mov rdx, 0x4c1b60
412ee3: mov rax, 0x4c2208
412eea: mov rdi, rcx
412eed: sub rax, rdx
412ef0: sub rdi, rdx
412ef3: cmp rax, rdi
412ef6: jbe 0x413928
412efc: mov rdx, rbx
412eff: mov rsi, r12
412f02: mov rdi, r15
412f05: call qword ptr [rcx + 0x38]
412f08: cmp rax, rbx
412f0b: jne 0x411777
412f11: mov ecx, dword ptr [rbp - 0x8a4]
412f17: mov eax, 0x7fffffff
412f1c: sub eax, ecx
412f1e: cdqe 
412f20: cmp rax, rbx
412f23: jb 0x411769
412f29: add ecx, r13d
412f2c: mov dword ptr [rbp - 0x8a4], ecx
412f32: jmp 0x412079
412f37: movsxd rbx, r12d
412f3a: mov esi, 0x30
412f3f: mov rdi, r15
412f42: mov qword ptr [rbp - 0x8e0], r10
412f49: mov rdx, rbx
412f4c: call 0x418850
412f51: cmp rbx, rax
412f54: jne 0x411777
412f5a: mov ebx, dword ptr [rbp - 0x8a4]
412f60: cmp ebx, 0x7ffffffe
412f66: ja 0x413d0b
412f6c: mov eax, 0x7fffffff
412f71: sub eax, ebx
412f73: cmp eax, r12d
412f76: jb 0x411769
412f7c: add ebx, r12d
412f7f: mov r10, qword ptr [rbp - 0x8e0]
412f86: mov dword ptr [rbp - 0x8a4], ebx
412f8c: jmp 0x41254e
412f91: mov edx, dword ptr [rbp - 0x8f8]
412f97: test edx, edx
412f99: je 0x4134d3
412f9f: mov rax, qword ptr [r15 + 0x28]
412fa3: cmp rax, qword ptr [r15 + 0x30]
412fa7: jae 0x413a40
412fad: lea rdx, [rax + 1]
412fb1: mov qword ptr [r15 + 0x28], rdx
412fb5: mov byte ptr [rax], 0x2b
412fb8: jmp 0x4124af
412fbd: test r13d, r13d
412fc0: jne 0x413356
412fc6: mov dword ptr [rbp - 0x8f8], 0
412fd0: mov r11d, r10d
412fd3: mov dword ptr [rbp - 0x940], 0
412fdd: jmp 0x4123f5
412fe2: cmp r8d, -1
412fe6: je 0x413411
412fec: cmp r8d, 5
412ff0: jg 0x413411
412ff6: mov dword ptr [rbp - 0x8f8], 0
413000: xor r13d, r13d
413003: xor ebx, ebx
413005: lea r12, [rip + 0x98a09]
41300c: jmp 0x412904
413011: mov byte ptr [rbp - 0x900], 0x20
413018: xor r12d, r12d
41301b: jmp 0x412753
413020: mov eax, dword ptr [rbp - 0x940]
413026: test eax, eax
413028: je 0x412b62
41302e: mov rax, qword ptr [r15 + 0x28]
413032: cmp rax, qword ptr [r15 + 0x30]
413036: jae 0x413c40
41303c: lea rcx, [rax + 1]
413040: mov qword ptr [r15 + 0x28], rcx
413044: mov byte ptr [rax], 0x20
413047: jmp 0x412b44
41304c: mov eax, dword ptr [r14 + 8]
413050: test eax, eax
413052: je 0x41307b
413054: mov rdx, qword ptr [r15 + 0x28]
413058: cmp rdx, qword ptr [r15 + 0x30]
41305c: jae 0x413c79
413062: lea rcx, [rdx + 1]
413066: mov qword ptr [r15 + 0x28], rcx
41306a: mov byte ptr [rdx], al
41306c: cmp ebx, 0x7fffffff
413072: je 0x411777
413078: add ebx, 1
41307b: cmp dword ptr [rbp - 0x8a4], 0x7ffffffe
413085: ja 0x413d75
41308b: mov ecx, dword ptr [rbp - 0x8a4]
413091: mov eax, 0x7fffffff
413096: sub eax, ecx
413098: cmp eax, ebx
41309a: jb 0x411769
4130a0: add ecx, ebx
4130a2: mov dword ptr [rbp - 0x8a4], ecx
4130a8: jmp 0x412079
4130ad: cdqe 
4130af: cmp qword ptr [r11 + rax*8 - 0x40], 0
4130b5: je 0x411e2b
4130bb: movsxd rax, dword ptr [r12 + rdx*4]
4130bf: add rax, 0x17
4130c3: mov rdi, rax
4130c6: and rax, 0xfffffffffffff000
4130cc: and rdi, 0xfffffffffffffff0
4130d0: mov qword ptr [rbp - 0x8b8], rdi
4130d7: mov rdi, rsp
4130da: sub rdi, rax
4130dd: mov rax, rdi
4130e0: mov rdi, qword ptr [rbp - 0x8b8]
4130e7: cmp rsp, rax
4130ea: je 0x413101
4130ec: sub rsp, 0x1000
4130f3: or qword ptr [rsp + 0xff8], 0
4130fc: cmp rsp, rax
4130ff: jne 0x4130ec
413101: and edi, 0xfff
413107: sub rsp, rdi
41310a: test rdi, rdi
41310d: je 0x413115
41310f: or qword ptr [rsp + rdi - 8], 0
413115: lea rdi, [rsp + 0xf]
41311a: mov dword ptr [rbp - 0x900], r9d
413121: and rdi, 0xfffffffffffffff0
413125: mov byte ptr [rbp - 0x8f8], r8b
41312c: mov qword ptr [r10 + rsi], rdi
413130: movsxd rax, dword ptr [r15 + rdx*4]
413134: mov rsi, rcx
413137: mov qword ptr [rbp - 0x8f0], r10
41313e: mov qword ptr [rbp - 0x8e0], rdx
413145: mov qword ptr [rbp - 0x8b8], rcx
41314c: call qword ptr [r11 + rax*8 - 0x40]
413151: mov rcx, qword ptr [rbp - 0x8b8]
413158: mov rdx, qword ptr [rbp - 0x8e0]
41315f: mov r10, qword ptr [rbp - 0x8f0]
413166: movzx r8d, byte ptr [rbp - 0x8f8]
41316e: mov r9d, dword ptr [rbp - 0x900]
413175: jmp 0x411814
41317a: mov rsi, qword ptr [rcx + 8]
41317e: lea rax, [rsi + 8]
413182: mov qword ptr [rcx + 8], rax
413186: jmp 0x412e29
41318b: mov r12d, 2
413191: mov ebx, 1
413196: jmp 0x411b71
41319b: test al, 0x10
41319d: je 0x411ba2
4131a3: mov rax, qword ptr [r15 + 0x28]
4131a7: cmp rax, qword ptr [r15 + 0x30]
4131ab: jae 0x413cd2
4131b1: lea rdx, [rax + 1]
4131b5: mov qword ptr [r15 + 0x28], rdx
4131b9: mov byte ptr [rax], 0x20
4131bc: jmp 0x411b9a
4131c1: mov r10d, dword ptr [rbx + rax]
4131c5: test r12d, r12d
4131c8: je 0x413545
4131ce: movsx r10, r10b
4131d2: jmp 0x4129f8
4131d7: test r12d, r12d
4131da: je 0x4134ff
4131e0: movzx esi, byte ptr [rbp - 0x8a4]
4131e7: mov byte ptr [rax], sil
4131ea: jmp 0x412079
4131ef: mov r10, qword ptr [rbp - 0x910]
4131f6: xor r13d, r13d
4131f9: jmp 0x41243c
4131fe: mov qword ptr [rbp - 0x880], r12
413205: lea r13, [rbp - 0x878]
41320c: mov qword ptr [rbp - 0x878], 0
413217: test r8d, r8d
41321a: js 0x4137a7
413220: movsxd rbx, r8d
413223: mov dword ptr [rbp - 0x8f8], r9d
41322a: mov rdi, rbx
41322d: mov dword ptr [rbp - 0x8e0], r8d
413234: call 0x421200
413239: mov r9d, dword ptr [rbp - 0x8f8]
413240: test eax, eax
413242: jne 0x413258
413244: mov r8d, dword ptr [rbp - 0x8e0]
41324b: cmp r8d, 0x1000
413252: jg 0x413d94
413258: lea rdx, [rbx + 0x17]
41325c: mov rdi, rsp
41325f: mov rax, rdx
413262: and rdx, 0xfffffffffffff000
413269: sub rdi, rdx
41326c: and rax, 0xfffffffffffffff0
413270: mov rdx, rdi
413273: cmp rsp, rdx
413276: je 0x41328d
413278: sub rsp, 0x1000
41327f: or qword ptr [rsp + 0xff8], 0
413288: cmp rsp, rdx
41328b: jne 0x413278
41328d: and eax, 0xfff
413292: sub rsp, rax
413295: test rax, rax
413298: je 0x4132a0
41329a: or qword ptr [rsp + rax - 8], 0
4132a0: mov dword ptr [rbp - 0x8f8], 0
4132aa: lea r12, [rsp + 0xf]
4132af: and r12, 0xfffffffffffffff0
4132b3: mov rdx, rbx
4132b6: lea rsi, [rbp - 0x880]
4132bd: mov rcx, r13
4132c0: mov rdi, r12
4132c3: mov dword ptr [rbp - 0x8e0], r9d
4132ca: call 0x44f240
4132cf: mov r9d, dword ptr [rbp - 0x8e0]
4132d6: cmp rax, -1
4132da: mov rbx, rax
4132dd: je 0x411777
4132e3: mov r13d, ebx
4132e6: jmp 0x412904
4132eb: mov rax, qword ptr [r15 + 0x28]
4132ef: cmp rax, qword ptr [r15 + 0x30]
4132f3: jae 0x413cf0
4132f9: lea rdx, [rax + 1]
4132fd: mov qword ptr [r15 + 0x28], rdx
413301: mov byte ptr [rax], 0x27
413304: movzx eax, byte ptr [r14 + 0xc]
413309: mov ebx, r12d
41330c: jmp 0x411b79
413311: neg r10
413314: mov ebx, 1
413319: mov dword ptr [rbp - 0x908], 0xa
413323: mov r11, r10
413326: jmp 0x4123f5
41332b: mov rdi, r12
41332e: mov dword ptr [rbp - 0x8e0], r9d
413335: call 0x401180
41333a: mov r9d, dword ptr [rbp - 0x8e0]
413341: mov dword ptr [rbp - 0x8f8], 0
41334b: mov rbx, rax
41334e: mov r13d, eax
413351: jmp 0x412904
413356: mov dword ptr [rbp - 0x8f8], 0
413360: movzx r11d, r10w
413364: mov dword ptr [rbp - 0x940], 0
41336e: jmp 0x4123f5
413373: lea r12, [rbp - 0x44]
413377: movsxd rdi, eax
41337a: xor ecx, ecx
41337c: mov edx, 0xa
413381: mov rsi, r12
413384: call 0x467040
413389: mov r13, rax
41338c: cmp rax, r12
41338f: jb 0x4133c2
413391: jmp 0x411bfc
413396: nop word ptr cs:[rax + rax]
4133a0: lea rcx, [rax + 1]
4133a4: mov qword ptr [r15 + 0x28], rcx
4133a8: mov byte ptr [rax], dl
4133aa: cmp ebx, 0x7fffffff
4133b0: je 0x411777
4133b6: add ebx, 1
4133b9: cmp r13, r12
4133bc: je 0x411bfc
4133c2: add r13, 1
4133c6: mov rax, qword ptr [r15 + 0x28]
4133ca: movzx edx, byte ptr [r13 - 1]
4133cf: cmp rax, qword ptr [r15 + 0x30]
4133d3: jb 0x4133a0
4133d5: movzx esi, dl
4133d8: mov rdi, r15
4133db: call 0x41e8a0
4133e0: cmp eax, -1
4133e3: jne 0x4133aa
4133e5: jmp 0x411777
4133ea: nop word ptr [rax + rax]
4133f0: mov rax, qword ptr [r15 + 0x28]
4133f4: cmp rax, qword ptr [r15 + 0x30]
4133f8: jae 0x413cb7
4133fe: lea rdx, [rax + 1]
413402: mov qword ptr [r15 + 0x28], rdx
413406: mov byte ptr [rax], 0x30
413409: add ebx, 1
41340c: jmp 0x411bcd
413411: mov dword ptr [rbp - 0x8f8], 0
41341b: mov r13d, 6
413421: mov ebx, 6
413426: lea r12, [rip + 0x824e0]
41342d: jmp 0x412904
413432: mov rdx, r12
413435: sub rdx, r13
413438: cmovs rdx, r11
41343c: mov r8d, edx
41343f: jmp 0x412445
413444: cmp r8d, 5
413448: mov eax, 5
41344d: lea r12, [rip + 0x8248a]
413454: cmovl r8d, eax
413458: cmp r11b, 0x53
41345c: jne 0x4128db
413462: mov qword ptr [rbp - 0x880], r12
413469: lea r13, [rbp - 0x878]
413470: mov qword ptr [rbp - 0x878], 0
41347b: jmp 0x413220
413480: movsxd rdx, ebx
413483: mov esi, 0x20
413488: mov rdi, r15
41348b: mov qword ptr [rbp - 0x8f8], rdx
413492: call 0x418850
413497: mov rdx, qword ptr [rbp - 0x8f8]
41349e: cmp rdx, rax
4134a1: jne 0x411777
4134a7: mov ecx, dword ptr [rbp - 0x8a4]
4134ad: cmp ecx, 0x7ffffffe
4134b3: ja 0x413d2a
4134b9: mov eax, 0x7fffffff
4134be: sub eax, ecx
4134c0: cmp eax, ebx
4134c2: jb 0x411769
4134c8: add dword ptr [rbp - 0x8a4], ebx
4134ce: jmp 0x4122a5
4134d3: mov eax, dword ptr [rbp - 0x940]
4134d9: test eax, eax
4134db: je 0x4124c9
4134e1: mov rax, qword ptr [r15 + 0x28]
4134e5: cmp rax, qword ptr [r15 + 0x30]
4134e9: jae 0x413c98
4134ef: lea rdx, [rax + 1]
4134f3: mov qword ptr [r15 + 0x28], rdx
4134f7: mov byte ptr [rax], 0x20
4134fa: jmp 0x4124af
4134ff: test r13d, r13d
413502: jne 0x413798
413508: mov ebx, dword ptr [rbp - 0x8a4]
41350e: mov dword ptr [rax], ebx
413510: jmp 0x412079
413515: mov byte ptr [rbp - 0x94c], 0x78
41351c: xor ebx, ebx
41351e: xor r12d, r12d
413521: mov byte ptr [rbp - 0x930], 0
413528: mov byte ptr [rbp - 0x8e0], 0x78
41352f: mov dword ptr [rbp - 0x908], 0x10
413539: mov byte ptr [rbp - 0x900], 0x20
413540: jmp 0x412753
413545: movsxd rax, r10d
413548: test r13d, r13d
41354b: movsx r10, r10w
41354f: cmove r10, rax
413553: jmp 0x4129f8
413558: movsxd rdx, dword ptr [rbp - 0x900]
41355f: mov esi, 0x20
413564: mov rdi, r15
413567: mov qword ptr [rbp - 0x908], rdx
41356e: call 0x418850
413573: mov rdx, qword ptr [rbp - 0x908]
41357a: cmp rdx, rax
41357d: jne 0x411777
413583: mov ecx, dword ptr [rbp - 0x8a4]
413589: cmp ecx, 0x7ffffffe
41358f: ja 0x413d2a
413595: mov eax, 0x7fffffff
41359a: mov esi, dword ptr [rbp - 0x900]
4135a0: sub eax, ecx
4135a2: cmp eax, esi
4135a4: jb 0x411769
4135aa: add ecx, esi
4135ac: mov dword ptr [rbp - 0x8a4], ecx
4135b2: jmp 0x412936
4135b7: mov qword ptr [rbp - 0x8e0], r10
4135be: call 0x41b240
4135c3: mov r10, qword ptr [rbp - 0x8e0]
4135ca: jmp 0x412583
4135cf: mov qword ptr [rbp - 0x8f0], rcx
4135d6: mov qword ptr [rbp - 0x8e0], r10
4135dd: call 0x41b240
4135e2: mov rcx, qword ptr [rbp - 0x8f0]
4135e9: mov r10, qword ptr [rbp - 0x8e0]
4135f0: jmp 0x412c28
4135f5: movsxd rbx, dword ptr [rbp - 0x900]
4135fc: mov esi, 0x20
413601: mov rdi, r15
413604: mov rdx, rbx
413607: call 0x418850
41360c: cmp rbx, rax
41360f: jne 0x411777
413615: mov eax, dword ptr [rbp - 0x8a4]
41361b: cmp eax, 0x7ffffffe
413620: ja 0x413d2a
413626: mov ecx, 0x7fffffff
41362b: sub ecx, eax
41362d: cmp ecx, ebx
41362f: jb 0x411769
413635: add eax, ebx
413637: mov dword ptr [rbp - 0x8a4], eax
41363d: jmp 0x4129be
413642: xor ecx, ecx
413644: mov rdi, r10
413647: mov edx, 0x10
41364c: mov r12d, 1
413652: mov rbx, qword ptr [rbp - 0x910]
413659: mov dword ptr [rbp - 0x908], r9d
413660: mov qword ptr [rbp - 0x8e0], r10
413667: mov rsi, rbx
41366a: call 0x467040
41366f: mov r11, qword ptr [rbp - 0x8e0]
413676: mov r9d, dword ptr [rbp - 0x908]
41367d: mov byte ptr [rbp - 0x8e0], 0x78
413684: sub rbx, rax
413687: mov r10, rax
41368a: movzx eax, byte ptr [rbp - 0x91e]
413691: mov dword ptr [rbp - 0x908], 0x10
41369b: test rbx, rbx
41369e: mov r13, rbx
4136a1: mov byte ptr [rbp - 0x94c], 0x78
4136a8: mov ebx, 0
4136ad: mov byte ptr [rbp - 0x91d], al
4136b3: jle 0x412840
4136b9: jmp 0x412ce8
4136be: mov rdi, qword ptr [rbp - 0x918]
4136c5: call 0x401180
4136ca: mov rdi, qword ptr [rbp - 0x918]
4136d1: lea rsi, [rax + 1]
4136d5: call 0x454590
4136da: mov dword ptr [rbp - 0x8a8], eax
4136e0: jmp 0x4126b1
4136e5: mov qword ptr [rbp - 0x8f8], rcx
4136ec: call 0x41b240
4136f1: mov rcx, qword ptr [rbp - 0x8f8]
4136f8: jmp 0x4122da
4136fd: mov qword ptr [rbp - 0x910], r11
413704: mov esi, 0x2d
413709: mov dword ptr [rbp - 0x900], r8d
413710: mov qword ptr [rbp - 0x8f8], r10
413717: mov rdi, r15
41371a: call 0x41e8a0
41371f: mov r10, qword ptr [rbp - 0x8f8]
413726: mov r8d, dword ptr [rbp - 0x900]
41372d: cmp eax, -1
413730: mov r11, qword ptr [rbp - 0x910]
413737: jne 0x4124af
41373d: jmp 0x411777
413742: nop word ptr [rax + rax]
413748: movsxd r13, r12d
41374b: mov esi, 0x20
413750: mov rdi, r15
413753: mov rdx, r13
413756: call 0x418850
41375b: cmp r13, rax
41375e: jne 0x411777
413764: cmp dword ptr [rbp - 0x8a4], 0x7ffffffe
41376e: ja 0x413d2a
413774: mov edi, dword ptr [rbp - 0x8a4]
41377a: mov eax, 0x7fffffff
41377f: sub eax, edi
413781: cmp eax, r12d
413784: jb 0x411769
41378a: add edi, r12d
41378d: mov dword ptr [rbp - 0x8a4], edi
413793: jmp 0x4125eb
413798: movzx ecx, word ptr [rbp - 0x8a4]
41379f: mov word ptr [rax], cx
4137a2: jmp 0x412079
4137a7: lea rax, [rbp - 0x880]
4137ae: mov rcx, r13
4137b1: xor edx, edx
4137b3: xor edi, edi
4137b5: mov rsi, rax
4137b8: mov dword ptr [rbp - 0x900], r9d
4137bf: mov qword ptr [rbp - 0x8e0], rax
4137c6: call 0x44f240
4137cb: mov rbx, rax
4137ce: cmp rax, -1
4137d2: je 0x411777
4137d8: mov eax, dword ptr [rbp - 0x878]
4137de: mov r9d, dword ptr [rbp - 0x900]
4137e5: test eax, eax
4137e7: mov dword ptr [rbp - 0x8f8], eax
4137ed: jne 0x413e3f
4137f3: lea rdx, [rbx + 1]
4137f7: mov dword ptr [rbp - 0x908], r9d
4137fe: mov rdi, rdx
413801: mov qword ptr [rbp - 0x900], rdx
413808: mov qword ptr [rbp - 0x880], r12
41380f: call 0x421200
413814: mov rdx, qword ptr [rbp - 0x900]
41381b: mov r9d, dword ptr [rbp - 0x908]
413822: test eax, eax
413824: jne 0x413833
413826: cmp rdx, 0x1000
41382d: ja 0x413e5e
413833: lea rcx, [rdx + 0x17]
413837: mov rdi, rsp
41383a: mov rax, rcx
41383d: and rcx, 0xfffffffffffff000
413844: sub rdi, rcx
413847: and rax, 0xfffffffffffffff0
41384b: mov rcx, rdi
41384e: cmp rsp, rcx
413851: je 0x413868
413853: sub rsp, 0x1000
41385a: or qword ptr [rsp + 0xff8], 0
413863: cmp rsp, rcx
413866: jne 0x413853
413868: and eax, 0xfff
41386d: sub rsp, rax
413870: test rax, rax
413873: je 0x41387b
413875: or qword ptr [rsp + rax - 8], 0
41387b: lea r12, [rsp + 0xf]
413880: and r12, 0xfffffffffffffff0
413884: mov rsi, qword ptr [rbp - 0x8e0]
41388b: mov rcx, r13
41388e: mov rdi, r12
413891: mov dword ptr [rbp - 0x900], r9d
413898: call 0x44f240
41389d: mov r9d, dword ptr [rbp - 0x900]
4138a4: jmp 0x4132e3
4138a9: mov qword ptr [rbp - 0x908], rcx
4138b0: call 0x41b240
4138b5: mov rcx, qword ptr [rbp - 0x908]
4138bc: jmp 0x41296d
4138c1: mov qword ptr [rbp - 0x928], r11
4138c8: mov esi, 0x2d
4138cd: mov dword ptr [rbp - 0x910], r8d
4138d4: mov dword ptr [rbp - 0x900], r9d
4138db: mov qword ptr [rbp - 0x8f8], rdx
4138e2: mov qword ptr [rbp - 0x8f0], r10
4138e9: mov rdi, r15
4138ec: call 0x41e8a0
4138f1: mov r10, qword ptr [rbp - 0x8f0]
4138f8: mov rdx, qword ptr [rbp - 0x8f8]
4138ff: cmp eax, -1
413902: mov r9d, dword ptr [rbp - 0x900]
413909: mov r8d, dword ptr [rbp - 0x910]
413910: mov r11, qword ptr [rbp - 0x928]
413917: jne 0x412b44
41391d: jmp 0x411777
413922: nop word ptr [rax + rax]
413928: mov qword ptr [rbp - 0x8e0], rcx
41392f: call 0x41b240
413934: mov rcx, qword ptr [rbp - 0x8e0]
41393b: jmp 0x412efc
413940: mov esi, 0x25
413945: mov rdi, r15
413948: call 0x41e8a0
41394d: cmp eax, -1
413950: jne 0x412398
413956: jmp 0x411777
41395b: nop dword ptr [rax + rax]
413960: mov esi, 0x25
413965: mov rdi, r15
413968: call 0x41e8a0
41396d: cmp eax, -1
413970: jne 0x411b3b
413976: jmp 0x411777
41397b: nop dword ptr [rax + rax]
413980: and byte ptr [r14 + 0xc], 0xfe
413985: jmp 0x4116f0
41398a: and byte ptr [r14 + 0xc], 0xfe
41398f: mov dword ptr [r14 + 0x34], 7
413997: jmp 0x412aae
41399c: mov dword ptr [rbp - 0x94c], r8d
4139a3: mov dword ptr [rbp - 0x940], r9d
4139aa: mov dword ptr [rbp - 0x910], r11d
4139b1: call 0x426410
4139b6: mov r11d, dword ptr [rbp - 0x910]
4139bd: mov r9d, dword ptr [rbp - 0x940]
4139c4: test rax, rax
4139c7: mov qword ptr [rbp - 0x8d0], rax
4139ce: mov r8d, dword ptr [rbp - 0x94c]
4139d5: je 0x411790
4139db: cmp r9d, r8d
4139de: jge 0x413c6d
4139e4: movsxd rax, r8d
4139e7: add rax, 0x20
4139eb: add rax, qword ptr [rbp - 0x8d0]
4139f2: mov qword ptr [rbp - 0x910], rax
4139f9: jmp 0x411a57
4139fe: mov esi, 0x23
413a03: mov rdi, r15
413a06: call 0x41e8a0
413a0b: cmp eax, -1
413a0e: jne 0x411b61
413a14: jmp 0x411777
413a19: nop dword ptr [rax]
413a20: mov esi, 0x2d
413a25: mov rdi, r15
413a28: call 0x41e8a0
413a2d: cmp eax, -1
413a30: jne 0x411bbf
413a36: jmp 0x411777
413a3b: nop dword ptr [rax + rax]
413a40: mov qword ptr [rbp - 0x910], r11
413a47: mov esi, 0x2b
413a4c: mov dword ptr [rbp - 0x900], r8d
413a53: mov qword ptr [rbp - 0x8f8], r10
413a5a: jmp 0x413717
413a5f: movzx esi, dl
413a62: mov rdi, r15
413a65: call 0x41e8a0
413a6a: cmp eax, -1
413a6d: jne 0x412615
413a73: jmp 0x411777
413a78: nop dword ptr [rax + rax]
413a80: mov qword ptr [rbp - 0x928], r11
413a87: mov esi, 0x2b
413a8c: mov dword ptr [rbp - 0x910], r8d
413a93: mov dword ptr [rbp - 0x900], r9d
413a9a: mov qword ptr [rbp - 0x8f8], rdx
413aa1: mov qword ptr [rbp - 0x8f0], r10
413aa8: jmp 0x4138e9
413aad: movzx esi, byte ptr [rbp - 0x94c]
413ab4: mov rdi, r15
413ab7: mov dword ptr [rbp - 0x8f8], r8d
413abe: mov qword ptr [rbp - 0x8e0], r10
413ac5: call 0x41e8a0
413aca: mov r10, qword ptr [rbp - 0x8e0]
413ad1: mov r8d, dword ptr [rbp - 0x8f8]
413ad8: cmp eax, -1
413adb: jne 0x412528
413ae1: jmp 0x411777
413ae6: nop word ptr cs:[rax + rax]
413af0: mov esi, 0x30
413af5: mov rdi, r15
413af8: mov dword ptr [rbp - 0x900], r8d
413aff: mov qword ptr [rbp - 0x8f8], r10
413b06: call 0x41e8a0
413b0b: mov r10, qword ptr [rbp - 0x8f8]
413b12: mov r8d, dword ptr [rbp - 0x900]
413b19: cmp eax, -1
413b1c: jne 0x4124f9
413b22: jmp 0x411777
413b27: nop word ptr [rax + rax]
413b30: mov esi, 0x2e
413b35: mov rdi, r15
413b38: call 0x41e8a0
413b3d: cmp eax, -1
413b40: jne 0x411c1f
413b46: jmp 0x411777
413b4b: nop dword ptr [rax + rax]
413b50: movzx esi, byte ptr [rbp - 0x94c]
413b57: mov rdi, r15
413b5a: mov dword ptr [rbp - 0x900], r8d
413b61: mov dword ptr [rbp - 0x8f8], r9d
413b68: mov qword ptr [rbp - 0x8f0], rdx
413b6f: mov qword ptr [rbp - 0x8e0], r10
413b76: call 0x41e8a0
413b7b: mov r10, qword ptr [rbp - 0x8e0]
413b82: mov rdx, qword ptr [rbp - 0x8f0]
413b89: cmp eax, -1
413b8c: mov r9d, dword ptr [rbp - 0x8f8]
413b93: mov r8d, dword ptr [rbp - 0x900]
413b9a: jne 0x412bc1
413ba0: jmp 0x411777
413ba5: nop dword ptr [rax]
413ba8: mov esi, 0x30
413bad: mov rdi, r15
413bb0: mov dword ptr [rbp - 0x908], r8d
413bb7: mov dword ptr [rbp - 0x900], r9d
413bbe: mov qword ptr [rbp - 0x8f8], rdx
413bc5: mov qword ptr [rbp - 0x8f0], r10
413bcc: call 0x41e8a0
413bd1: mov r10, qword ptr [rbp - 0x8f0]
413bd8: mov rdx, qword ptr [rbp - 0x8f8]
413bdf: cmp eax, -1
413be2: mov r9d, dword ptr [rbp - 0x900]
413be9: mov r8d, dword ptr [rbp - 0x908]
413bf0: jne 0x412b92
413bf6: jmp 0x411777
413bfb: nop dword ptr [rax + rax]
413c00: mov esi, 0x2b
413c05: mov rdi, r15
413c08: call 0x41e8a0
413c0d: cmp eax, -1
413c10: jne 0x411b9a
413c16: jmp 0x411777
413c1b: nop dword ptr [rax + rax]
413c20: mov esi, 0x49
413c25: mov rdi, r15
413c28: call 0x41e8a0
413c2d: cmp eax, -1
413c30: jne 0x411bed
413c36: jmp 0x411777
413c3b: nop dword ptr [rax + rax]
413c40: mov qword ptr [rbp - 0x928], r11
413c47: mov esi, 0x20
413c4c: mov dword ptr [rbp - 0x910], r8d
413c53: mov dword ptr [rbp - 0x900], r9d
413c5a: mov qword ptr [rbp - 0x8f8], rdx
413c61: mov qword ptr [rbp - 0x8f0], r10
413c68: jmp 0x4138e9
413c6d: movsxd rax, r9d
413c70: add rax, 0x20
413c74: jmp 0x4139eb
413c79: movzx esi, al
413c7c: mov rdi, r15
413c7f: call 0x41e8a0
413c84: cmp eax, -1
413c87: jne 0x41306c
413c8d: jmp 0x411777
413c92: nop word ptr [rax + rax]
413c98: mov qword ptr [rbp - 0x910], r11
413c9f: mov esi, 0x20
413ca4: mov dword ptr [rbp - 0x900], r8d
413cab: mov qword ptr [rbp - 0x8f8], r10
413cb2: jmp 0x413717
413cb7: mov esi, 0x30
413cbc: mov rdi, r15
413cbf: call 0x41e8a0
413cc4: cmp eax, -1
413cc7: jne 0x413409
413ccd: jmp 0x411777
413cd2: mov esi, 0x20
413cd7: mov rdi, r15
413cda: call 0x41e8a0
413cdf: add eax, 1
413ce2: jne 0x411b9a
413ce8: jmp 0x411777
413ced: nop dword ptr [rax]
413cf0: mov esi, 0x27
413cf5: mov rdi, r15
413cf8: call 0x41e8a0
413cfd: cmp eax, -1
413d00: jne 0x413304
413d06: jmp 0x411777
413d0b: lea rcx, [rip + 0x81d6e]
413d12: mov edx, 0x818
413d17: lea rsi, [rip + 0x81bc6]
413d1e: lea rdi, [rip + 0x81c43]
413d25: call 0x4032a0
413d2a: lea rcx, [rip + 0x81d4f]
413d31: mov edx, 0x819
413d36: lea rsi, [rip + 0x81ba7]
413d3d: lea rdi, [rip + 0x81c24]
413d44: call 0x4032a0
413d49: lea rcx, [rip + 0x81d30]
413d50: mov edx, 0x83e
413d55: lea rsi, [rip + 0x81b88]
413d5c: lea rdi, [rip + 0x81c35]
413d63: call 0x4032a0
413d68: xor r12d, r12d
413d6b: jmp 0x4124c9
413d70: call 0x4547a0
413d75: lea rcx, [rip + 0x81d04]
413d7c: mov edx, 0x834
413d81: lea rsi, [rip + 0x81b5c]
413d88: lea rdi, [rip + 0x81bd9]
413d8f: call 0x4032a0
413d94: mov rdi, rbx
413d97: mov dword ptr [rbp - 0x8e0], r9d
413d9e: call 0x426410
413da3: mov r12, rax
413da6: test rax, rax
413da9: je 0x411777
413daf: mov dword ptr [rbp - 0x8f8], 1
413db9: mov r9d, dword ptr [rbp - 0x8e0]
413dc0: jmp 0x4132b3
413dc5: test r12d, r12d
413dc8: jg 0x412d87
413dce: xor r12d, r12d
413dd1: jmp 0x41248e
413dd6: lea rdi, [rip + 0x81be3]
413ddd: call 0x41b220
413de2: lea rcx, [rip + 0x81c97]
413de9: mov edx, 0x819
413dee: lea rsi, [rip + 0x81aef]
413df5: lea rdi, [rip + 0x81b9c]
413dfc: call 0x4032a0
413e01: lea rcx, [rip + 0x81c78]
413e08: mov edx, 0x811
413e0d: lea rsi, [rip + 0x81ad0]
413e14: lea rdi, [rip + 0x81b4d]
413e1b: call 0x4032a0
413e20: lea rcx, [rip + 0x81c59]
413e27: mov edx, 0x818
413e2c: lea rsi, [rip + 0x81ab1]
413e33: lea rdi, [rip + 0x81b5e]
413e3a: call 0x4032a0
413e3f: lea rcx, [rip + 0x81c3a]
413e46: mov edx, 0x819
413e4b: lea rsi, [rip + 0x81a92]
413e52: lea rdi, [rip + 0x81a9f]
413e59: call 0x4032a0
413e5e: mov rdi, rdx
413e61: call 0x426410
413e66: mov r12, rax
413e69: test rax, rax
413e6c: je 0x411777
413e72: mov rdx, qword ptr [rbp - 0x900]
413e79: mov r9d, dword ptr [rbp - 0x908]
413e80: mov dword ptr [rbp - 0x8f8], 1
413e8a: jmp 0x413884
413e8f: nop 
413e90: endbr64 
413e94: push rbp
413e95: mov rbp, rsp
413e98: push r15
413e9a: push r14
413e9c: mov r14, rdx
413e9f: push r13
413ea1: mov r13, rsi
413ea4: push r12
413ea6: mov r12, rdi
413ea9: push rbx
413eaa: sub rsp, 0x538
413eb1: mov dword ptr [rbp - 0x4b8], ecx
413eb7: mov rax, qword ptr fs:[0x28]
413ec0: mov qword ptr [rbp - 0x38], rax
413ec4: xor eax, eax
413ec6: mov rax, 0xffffffffffffffc0
413ecd: mov eax, dword ptr fs:[rax]
413ed0: mov dword ptr [rbp - 0x4d4], eax
413ed6: mov eax, dword ptr [rdi + 0xc0]
413edc: test eax, eax
413ede: jne 0x413fd0
413ee4: mov dword ptr [rdi + 0xc0], 0xffffffff
413eee: mov r15d, dword ptr [r12]
413ef2: test r15b, 8
413ef6: jne 0x416391
413efc: test r13, r13
413eff: je 0x416998
413f05: mov ebx, r15d
413f08: and ebx, 2
413f0b: jne 0x414330
413f11: movdqu xmm1, xmmword ptr [r14]
413f16: mov rax, qword ptr [r14 + 0x10]
413f1a: mov esi, 0x25
413f1f: mov rdi, r13
413f22: mov qword ptr [rbp - 0x438], rax
413f29: movups xmmword ptr [rbp - 0x448], xmm1
413f30: call 0x4010a0
413f35: and r15d, 0x8000
413f3c: mov qword ptr [rbp - 0x4c0], rax
413f43: mov dword ptr [rbp - 0x4b4], r15d
413f4a: jne 0x413fe8
413f50: cmp qword ptr [rip + 0xac058], 0
413f58: je 0x414350
413f5e: mov rsi, 0x46caa0
413f65: lea rdi, [rbp - 0x470]
413f6c: mov rdx, r12
413f6f: call 0
413f74: test dword ptr [r12], 0x8000
413f7c: mov dword ptr [rbp - 0x4b4], 1
413f86: jne 0x413ff2
413f88: mov rdi, qword ptr [r12 + 0x88]
413f90: mov r15, qword ptr fs:[0x10]
413f99: cmp qword ptr [rdi + 8], r15
413f9d: je 0x413fc3
413f9f: mov eax, dword ptr fs:[0x18]
413fa7: test eax, eax
413fa9: jne 0x415ce8
413faf: mov edx, 1
413fb4: cmpxchg dword ptr [rdi], edx
413fb7: mov rdi, qword ptr [r12 + 0x88]
413fbf: mov qword ptr [rdi + 8], r15
413fc3: add dword ptr [rdi + 4], 1
413fc7: jmp 0x413ff2
413fc9: nop dword ptr [rax]
413fd0: cmp eax, -1
413fd3: je 0x413eee
413fd9: mov r9d, 0xffffffff
413fdf: jmp 0x414237
413fe4: nop dword ptr [rax]
413fe8: mov dword ptr [rbp - 0x4b4], 0
413ff2: mov rax, qword ptr [r12 + 0xd8]
413ffa: mov rcx, 0x4c2208
414001: sub rcx, 0x4c1b60
414008: mov rdx, rax
41400b: sub rdx, 0x4c1b60
414012: mov qword ptr [rbp - 0x4d0], rcx
414019: cmp rcx, rdx
41401c: jbe 0x414370
414022: mov r15, qword ptr [rbp - 0x4c0]
414029: mov rsi, r13
41402c: mov rdi, r12
41402f: sub r15, r13
414032: mov rdx, r15
414035: call qword ptr [rax + 0x38]
414038: cmp r15, rax
41403b: jne 0x4142c0
414041: cmp r15, 0x7fffffff
414048: jg 0x414390
41404e: mov rdi, qword ptr [rbp - 0x4c0]
414055: mov r9d, r15d
414058: cmp byte ptr [rdi], 0
41405b: je 0x414208
414061: mov rax, qword ptr [rip + 0xaf8e0]
414068: mov qword ptr [rbp - 0x538], rax
41406f: test rax, rax
414072: jne 0x415d88
414078: cmp qword ptr [rip + 0xaf8d0], 0
414080: jne 0x4141a0
414086: cmp qword ptr [rip + 0xaf8e2], 0
41408e: jne 0x4141a0
414094: mov eax, dword ptr [rbp - 0x4b8]
41409a: mov rbx, rdi
41409d: mov dword ptr [rbp - 0x540], 0
4140a7: mov dword ptr [rbp - 0x514], 0
4140b1: mov qword ptr [rbp - 0x528], 0xffffffffffffffff
4140bc: mov esi, eax
4140be: and esi, 2
4140c1: mov dword ptr [rbp - 0x550], esi
4140c7: mov esi, eax
4140c9: and eax, 8
4140cc: and esi, 1
4140cf: mov dword ptr [rbp - 0x54c], eax
4140d5: mov byte ptr [rbp - 0x545], sil
4140dc: movzx r15d, byte ptr [rbx + 1]
4140e1: lea eax, [r15 - 0x20]
4140e5: cmp al, 0x5a
4140e7: ja 0x414320
4140ed: lea rax, [rbx + 1]
4140f1: xor r10d, r10d
4140f4: xor r11d, r11d
4140f7: mov r8d, 0xffffffff
4140fd: mov qword ptr [rbp - 0x4c8], rax
414104: movsx eax, r15b
414108: lea rbx, [rip + 0x81911]
41410f: lea rsi, [rip + 0xa960a]
414116: sub eax, 0x20
414119: mov dword ptr [rbp - 0x520], 0
414123: cdqe 
414125: mov dword ptr [rbp - 0x53c], 0
41412f: movzx eax, byte ptr [rbx + rax]
414133: mov dword ptr [rbp - 0x4e8], 0
41413d: mov dword ptr [rbp - 0x500], 0
414147: mov rax, qword ptr [rsi + rax*8]
41414b: lea rsi, [rbp - 0x38]
41414f: mov dword ptr [rbp - 0x530], 0
414159: mov dword ptr [rbp - 0x4d8], 0
414163: mov dword ptr [rbp - 0x4f0], 0
41416d: mov dword ptr [rbp - 0x518], 0
414177: mov dword ptr [rbp - 0x51c], 0
414181: mov qword ptr [rbp - 0x4e0], 0
41418c: mov byte ptr [rbp - 0x508], 0x20
414193: mov qword ptr [rbp - 0x4f8], rsi
41419a: jmp rax
41419c: nop dword ptr [rax]
4141a0: mov dword ptr [rbp - 0x540], 0
4141aa: mov qword ptr [rbp - 0x528], 0xffffffffffffffff
4141b5: mov eax, dword ptr [rbp - 0x4b8]
4141bb: sub rsp, 8
4141bf: mov rcx, r14
4141c2: mov rsi, r13
4141c5: mov edx, dword ptr [rbp - 0x540]
4141cb: lea r8, [rbp - 0x448]
4141d2: mov rdi, r12
4141d5: push rax
4141d6: mov eax, dword ptr [rbp - 0x4d4]
4141dc: push qword ptr [rbp - 0x538]
4141e2: push qword ptr [rbp - 0x528]
4141e8: push rax
4141e9: lea rax, [rbp - 0x420]
4141f0: push rax
4141f1: push qword ptr [rbp - 0x4c0]
4141f7: push rbx
4141f8: call 0x4113d0
4141fd: add rsp, 0x40
414201: mov r9d, eax
414204: nop dword ptr [rax]
414208: test dword ptr [r12], 0x8000
414210: jne 0x414229
414212: mov rdi, qword ptr [r12 + 0x88]
41421a: mov eax, dword ptr [rdi + 4]
41421d: sub eax, 1
414220: mov dword ptr [rdi + 4], eax
414223: je 0x4142f8
414229: mov ecx, dword ptr [rbp - 0x4b4]
41422f: test ecx, ecx
414231: jne 0x4142d0
414237: mov rax, qword ptr [rbp - 0x38]
41423b: xor rax, qword ptr fs:[0x28]
414244: jne 0x416fa0
41424a: lea rsp, [rbp - 0x28]
41424e: mov eax, r9d
414251: pop rbx
414252: pop r12
414254: pop r13
414256: pop r14
414258: pop r15
41425a: pop rbp
41425b: ret 
41425c: nop dword ptr [rax]
414260: endbr64 
414264: endbr64 
414268: mov rax, qword ptr [rbp - 0x4c8]
41426f: movzx r15d, byte ptr [rax + 1]
414274: lea rdx, [rax + 1]
414278: lea eax, [r15 - 0x20]
41427c: cmp al, 0x5a
41427e: jbe 0x4143b0
414284: nop dword ptr [rax]
414288: endbr64 
41428c: test r15b, r15b
41428f: jne 0x414400
414295: mov rax, 0xffffffffffffffc0
41429c: mov dword ptr fs:[rax], 0x16
4142a3: nop dword ptr [rax + rax]
4142a8: cmp qword ptr [rbp - 0x4e0], 0
4142b0: je 0x4142c0
4142b2: mov rdi, qword ptr [rbp - 0x4e0]
4142b9: call 0x426a00
4142be: nop 
4142c0: mov r9d, 0xffffffff
4142c6: jmp 0x414208
4142cb: nop dword ptr [rax + rax]
4142d0: lea rdi, [rbp - 0x470]
4142d7: xor esi, esi
4142d9: mov dword ptr [rbp - 0x4b4], r9d
4142e0: call 0
4142e5: mov r9d, dword ptr [rbp - 0x4b4]
4142ec: jmp 0x414237
4142f1: nop dword ptr [rax]
4142f8: mov qword ptr [rdi + 8], 0
414300: mov edx, dword ptr fs:[0x18]
414308: test edx, edx
41430a: jne 0x415de0
414310: sub dword ptr [rdi], 1
414313: jmp 0x414229
414318: nop dword ptr [rax + rax]
414320: mov qword ptr [rbp - 0x4e0], 0
41432b: jmp 0x414288
414330: mov ecx, dword ptr [rbp - 0x4b8]
414336: mov rdx, r14
414339: mov rsi, r13
41433c: mov rdi, r12
41433f: call 0x4171e0
414344: mov r9d, eax
414347: jmp 0x414237
41434c: nop dword ptr [rax]
414350: mov rax, 0x46caa0
414357: mov qword ptr [rbp - 0x468], r12
41435e: mov qword ptr [rbp - 0x470], rax
414365: jmp 0x413f88
41436a: nop word ptr [rax + rax]
414370: mov qword ptr [rbp - 0x4c8], rax
414377: call 0x41b240
41437c: mov rax, qword ptr [rbp - 0x4c8]
414383: jmp 0x414022
414388: nop dword ptr [rax + rax]
414390: mov rax, 0xffffffffffffffc0
414397: mov r9d, 0xffffffff
41439d: mov dword ptr fs:[rax], 0x4b
4143a4: jmp 0x414208
4143a9: nop dword ptr [rax]
4143b0: movsx eax, r15b
4143b4: xor r11d, r11d
4143b7: lea rsi, [rip + 0xa8f62]
4143be: mov qword ptr [rbp - 0x4c8], rdx
4143c5: mov dword ptr [rbp - 0x4e8], 1
4143cf: sub eax, 0x20
4143d2: cdqe 
4143d4: movzx eax, byte ptr [rbx + rax]
4143d8: mov rax, qword ptr [rsi + rax*8]
4143dc: jmp rax
4143de: cmp eax, -1
4143e1: je 0x414da8
4143e7: cmp dil, 0x24
4143eb: jne 0x4148f6
4143f1: test eax, eax
4143f3: je 0x4148f6
4143f9: nop dword ptr [rax]
414400: mov rdi, qword ptr [rbp - 0x4e0]
414407: mov ebx, dword ptr [rbp - 0x514]
41440d: test rdi, rdi
414410: je 0x4141b5
414416: mov dword ptr [rbp - 0x4c8], r9d
41441d: call 0x426a00
414422: mov r9d, dword ptr [rbp - 0x4c8]
414429: jmp 0x4141b5
41442e: nop 
414430: endbr64 
414434: mov eax, dword ptr [r14]
414437: lea rbx, [rbp - 0x450]
41443e: mov qword ptr [rbp - 0x450], 0
414449: cmp eax, 0x2f
41444c: ja 0x415d70
414452: mov ecx, eax
414454: add eax, 8
414457: add rcx, qword ptr [r14 + 0x10]
41445b: mov dword ptr [r14], eax
41445e: lea r8, [rbp - 0x430]
414465: mov esi, dword ptr [rcx]
414467: mov rdx, rbx
41446a: mov dword ptr [rbp - 0x500], r9d
414471: mov rdi, r8
414474: mov dword ptr [rbp - 0x4e8], r10d
41447b: mov qword ptr [rbp - 0x4f8], r8
414482: call 0x44f020
414487: mov r15, rax
41448a: cmp rax, -1
41448e: je 0x4142a8
414494: mov r10d, dword ptr [rbp - 0x4e8]
41449b: mov edx, dword ptr [rbp - 0x4f0]
4144a1: mov r8, qword ptr [rbp - 0x4f8]
4144a8: mov r9d, dword ptr [rbp - 0x500]
4144af: mov ebx, r10d
4144b2: sub ebx, eax
4144b4: test ebx, ebx
4144b6: setg byte ptr [rbp - 0x4e8]
4144bd: test edx, edx
4144bf: movzx eax, byte ptr [rbp - 0x4e8]
4144c6: jne 0x4144d0
4144c8: test al, al
4144ca: jne 0x41646c
4144d0: test r9d, r9d
4144d3: js 0x417121
4144d9: mov rax, qword ptr [r12 + 0xd8]
4144e1: mov rdx, rax
4144e4: sub rdx, 0x4c1b60
4144eb: cmp qword ptr [rbp - 0x4d0], rdx
4144f2: jbe 0x4169f3
4144f8: mov dword ptr [rbp - 0x4f8], r9d
4144ff: mov rdx, r15
414502: mov rsi, r8
414505: mov rdi, r12
414508: call qword ptr [rax + 0x38]
41450b: cmp rax, r15
41450e: jne 0x4142a8
414514: mov r9d, dword ptr [rbp - 0x4f8]
41451b: mov eax, 0x7fffffff
414520: sub eax, r9d
414523: cdqe 
414525: cmp rax, r15
414528: jb 0x414da8
41452e: add r9d, r15d
414531: mov r15d, dword ptr [rbp - 0x4f0]
414538: test r15d, r15d
41453b: je 0x414550
41453d: cmp byte ptr [rbp - 0x4e8], 0
414544: jne 0x414d5c
41454a: nop word ptr [rax + rax]
414550: add dword ptr [rbp - 0x514], 1
414557: cmp qword ptr [rbp - 0x4e0], 0
41455f: jne 0x415a78
414565: mov r8, qword ptr [rbp - 0x4c8]
41456c: mov esi, 0x25
414571: mov dword ptr [rbp - 0x4e0], r9d
414578: add r8, 1
41457c: mov rdi, r8
41457f: mov qword ptr [rbp - 0x4c8], r8
414586: call 0x4010a0
41458b: mov r9d, dword ptr [rbp - 0x4e0]
414592: mov r8, qword ptr [rbp - 0x4c8]
414599: mov rbx, rax
41459c: test r9d, r9d
41459f: js 0x417019
4145a5: mov rax, qword ptr [r12 + 0xd8]
4145ad: mov rdx, rax
4145b0: sub rdx, 0x4c1b60
4145b7: cmp qword ptr [rbp - 0x4d0], rdx
4145be: jbe 0x415a40
4145c4: mov r15, rbx
4145c7: mov dword ptr [rbp - 0x4c8], r9d
4145ce: mov rsi, r8
4145d1: mov rdi, r12
4145d4: sub r15, r8
4145d7: mov rdx, r15
4145da: call qword ptr [rax + 0x38]
4145dd: cmp r15, rax
4145e0: jne 0x4142c0
4145e6: mov r9d, dword ptr [rbp - 0x4c8]
4145ed: mov eax, 0x7fffffff
4145f2: sub eax, r9d
4145f5: cdqe 
4145f7: cmp r15, rax
4145fa: jg 0x414390
414600: add r9d, r15d
414603: cmp byte ptr [rbx], 0
414606: jne 0x4140dc
41460c: jmp 0x414208
414611: nop dword ptr [rax]
414618: endbr64 
41461c: mov eax, dword ptr [r14]
41461f: cmp eax, 0x2f
414622: ja 0x415eb0
414628: mov edx, eax
41462a: add eax, 8
41462d: add rdx, qword ptr [r14 + 0x10]
414631: mov dword ptr [r14], eax
414634: mov r11, qword ptr [rdx]
414637: test r11, r11
41463a: je 0x415850
414640: mov ebx, dword ptr [rbp - 0x4e8]
414646: test ebx, ebx
414648: jne 0x415f70
41464e: cmp r15b, 0x53
414652: je 0x415f70
414658: cmp r8d, -1
41465c: je 0x416168
414662: movsxd rsi, r8d
414665: mov rdi, r11
414668: mov dword ptr [rbp - 0x508], r9d
41466f: mov dword ptr [rbp - 0x500], r10d
414676: mov qword ptr [rbp - 0x4e8], r11
41467d: call 0x401030
414682: mov dword ptr [rbp - 0x4f8], 0
41468c: mov r11, qword ptr [rbp - 0x4e8]
414693: mov r15, rax
414696: mov ebx, eax
414698: mov r10d, dword ptr [rbp - 0x500]
41469f: mov r9d, dword ptr [rbp - 0x508]
4146a6: sub r10d, ebx
4146a9: jns 0x41587a
4146af: test r9d, r9d
4146b2: js 0x417121
4146b8: mov rcx, qword ptr [r12 + 0xd8]
4146c0: mov rax, rcx
4146c3: sub rax, 0x4c1b60
4146ca: cmp qword ptr [rbp - 0x4d0], rax
4146d1: jbe 0x416c82
4146d7: mov dword ptr [rbp - 0x4e8], r9d
4146de: mov rdx, r15
4146e1: mov rsi, r11
4146e4: mov rdi, r12
4146e7: call qword ptr [rcx + 0x38]
4146ea: cmp r15, rax
4146ed: jne 0x4142a8
4146f3: mov r9d, dword ptr [rbp - 0x4e8]
4146fa: mov eax, 0x7fffffff
4146ff: sub eax, r9d
414702: cdqe 
414704: cmp r15, rax
414707: ja 0x414da8
41470d: add r9d, ebx
414710: jmp 0x414550
414715: nop dword ptr [rax]
414718: endbr64 
41471c: jmp 0x414264
414721: nop dword ptr [rax]
414728: endbr64 
41472c: mov rax, qword ptr [rbp - 0x4c8]
414733: movzx r15d, byte ptr [rax + 1]
414738: lea rdx, [rax + 1]
41473c: lea eax, [r15 - 0x20]
414740: cmp al, 0x5a
414742: ja 0x414288
414748: movsx eax, r15b
41474c: mov r11d, 1
414752: lea rsi, [rip + 0xa8bc7]
414759: mov qword ptr [rbp - 0x4c8], rdx
414760: mov dword ptr [rbp - 0x4e8], 1
41476a: sub eax, 0x20
41476d: cdqe 
41476f: movzx eax, byte ptr [rbx + rax]
414773: mov rax, qword ptr [rsi + rax*8]
414777: jmp rax
414779: nop dword ptr [rax]
414780: endbr64 
414784: mov rax, qword ptr [rbp - 0x4c8]
41478b: movzx r15d, byte ptr [rax + 1]
414790: lea rdx, [rax + 1]
414794: lea eax, [r15 - 0x20]
414798: cmp al, 0x5a
41479a: ja 0x414288
4147a0: movsx eax, r15b
4147a4: mov qword ptr [rbp - 0x4c8], rdx
4147ab: mov dword ptr [rbp - 0x500], 1
4147b5: sub eax, 0x20
4147b8: cdqe 
4147ba: movzx ecx, byte ptr [rbx + rax]
4147be: lea rax, [rip + 0xa8c5b]
4147c5: mov rax, qword ptr [rax + rcx*8]
4147c9: jmp rax
4147cb: nop dword ptr [rax + rax]
4147d0: endbr64 
4147d4: mov rax, qword ptr [rbp - 0x4c8]
4147db: lea rdx, [rax + 1]
4147df: movzx eax, byte ptr [rax + 1]
4147e3: cmp al, 0x2a
4147e5: je 0x4161b0
4147eb: lea r8d, [rax - 0x30]
4147ef: cmp r8d, 9
4147f3: jbe 0x4165c3
4147f9: mov qword ptr [rbp - 0x4c8], rdx
414800: xor r8d, r8d
414803: mov rax, qword ptr [rbp - 0x4c8]
41480a: movzx r15d, byte ptr [rax]
41480e: lea eax, [r15 - 0x20]
414812: cmp al, 0x5a
414814: ja 0x414288
41481a: movsx eax, r15b
41481e: sub eax, 0x20
414821: cdqe 
414823: movzx edx, byte ptr [rbx + rax]
414827: lea rax, [rip + 0xa8cf2]
41482e: jmp qword ptr [rax + rdx*8]
414831: nop dword ptr [rax]
414838: endbr64 
41483c: mov rsi, qword ptr [rbp - 0x4c8]
414843: movzx edx, byte ptr [rsi + 1]
414847: movzx eax, byte ptr [rsi]
41484a: mov r15d, edx
41484d: sub edx, 0x30
414850: lea r10d, [rax - 0x30]
414854: lea rax, [rsi + 1]
414858: cmp edx, 9
41485b: jbe 0x41488c
41485d: jmp 0x416b78
414862: nop word ptr [rax + rax]
414868: lea r10d, [r10 + r10*4]
41486c: mov edi, 0x7fffffff
414871: add r10d, r10d
414874: sub edi, edx
414876: cmp r10d, edi
414879: jg 0x4148a8
41487b: add r10d, edx
41487e: cmp ecx, 9
414881: ja 0x415be8
414887: mov edx, ecx
414889: mov rax, rsi
41488c: movzx ecx, byte ptr [rax + 1]
414890: lea rsi, [rax + 1]
414894: mov r15d, ecx
414897: sub ecx, 0x30
41489a: test r10d, r10d
41489d: js 0x41487e
41489f: cmp r10d, 0xccccccc
4148a6: jle 0x414868
4148a8: cmp ecx, 9
4148ab: ja 0x414da8
4148b1: movzx edx, byte ptr [rax + 2]
4148b5: lea rsi, [rax + 2]
4148b9: sub edx, 0x30
4148bc: cmp edx, 9
4148bf: ja 0x414da8
4148c5: mov r10d, 0xffffffff
4148cb: jmp 0x414889
4148cd: nop dword ptr [rax]
4148d0: endbr64 
4148d4: mov rax, qword ptr [rbp - 0x4c8]
4148db: lea rsi, [rax + 1]
4148df: movzx eax, byte ptr [rax + 1]
4148e3: mov qword ptr [rbp - 0x510], rsi
4148ea: sub eax, 0x30
4148ed: cmp eax, 9
4148f0: jbe 0x4162f0
4148f6: mov eax, dword ptr [r14]
4148f9: cmp eax, 0x2f
4148fc: jbe 0x415f40
414902: mov rdx, qword ptr [r14 + 8]
414906: lea rax, [rdx + 8]
41490a: mov qword ptr [r14 + 8], rax
41490e: mov r10d, dword ptr [rdx]
414911: test r10d, r10d
414914: jns 0x41492a
414916: mov byte ptr [rbp - 0x508], 0x20
41491d: neg r10d
414920: mov dword ptr [rbp - 0x4f0], 1
41492a: cmp r10d, 0x7fffffde
414931: jg 0x414da8
414937: cmp r10d, 0x3c7
41493e: jle 0x4149f7
414944: movsxd r15, r10d
414947: mov dword ptr [rbp - 0x558], r9d
41494e: add r15, 0x20
414952: mov dword ptr [rbp - 0x554], r8d
414959: mov rdi, r15
41495c: mov dword ptr [rbp - 0x544], r11d
414963: mov dword ptr [rbp - 0x4f8], r10d
41496a: call 0x421200
41496f: cmp r15, 0x1000
414976: mov r10d, dword ptr [rbp - 0x4f8]
41497d: mov r11d, dword ptr [rbp - 0x544]
414984: mov r8d, dword ptr [rbp - 0x554]
41498b: mov r9d, dword ptr [rbp - 0x558]
414992: jbe 0x41499c
414994: test eax, eax
414996: je 0x417038
41499c: lea rax, [r15 + 0x17]
4149a0: mov rsi, rsp
4149a3: mov rdx, rax
4149a6: and rax, 0xfffffffffffff000
4149ac: sub rsi, rax
4149af: and rdx, 0xfffffffffffffff0
4149b3: mov rax, rsi
4149b6: cmp rsp, rax
4149b9: je 0x4149d0
4149bb: sub rsp, 0x1000
4149c2: or qword ptr [rsp + 0xff8], 0
4149cb: cmp rsp, rax
4149ce: jne 0x4149bb
4149d0: and edx, 0xfff
4149d6: sub rsp, rdx
4149d9: test rdx, rdx
4149dc: je 0x4149e4
4149de: or qword ptr [rsp + rdx - 8], 0
4149e4: lea rax, [rsp + 0xf]
4149e9: and rax, 0xfffffffffffffff0
4149ed: add rax, r15
4149f0: mov qword ptr [rbp - 0x4f8], rax
4149f7: mov rax, qword ptr [rbp - 0x4c8]
4149fe: mov rsi, qword ptr [rbp - 0x510]
414a05: movzx r15d, byte ptr [rax + 1]
414a0a: mov qword ptr [rbp - 0x4c8], rsi
414a11: lea eax, [r15 - 0x20]
414a15: cmp al, 0x5a
414a17: ja 0x414288
414a1d: movsx eax, r15b
414a21: sub eax, 0x20
414a24: cdqe 
414a26: movzx edx, byte ptr [rbx + rax]
414a2a: lea rax, [rip + 0xa8bef]
414a31: jmp qword ptr [rax + rdx*8]
414a34: nop dword ptr [rax]
414a38: endbr64 
414a3c: cmp byte ptr [rbp - 0x545], 0
414a43: jne 0x416c40
414a49: mov edx, r11d
414a4c: and edx, 1
414a4f: movzx eax, byte ptr [rbp - 0x500]
414a56: movsx r15d, r15b
414a5a: mov dword ptr [rbp - 0x484], 0
414a64: mov dword ptr [rbp - 0x490], r8d
414a6b: add eax, eax
414a6d: mov dword ptr [rbp - 0x48c], r10d
414a74: or eax, edx
414a76: movzx edx, byte ptr [rbp - 0x4e8]
414a7d: mov dword ptr [rbp - 0x488], r15d
414a84: shl edx, 2
414a87: or eax, edx
414a89: movzx edx, byte ptr [rbp - 0x51c]
414a90: shl edx, 3
414a93: or eax, edx
414a95: movzx edx, byte ptr [rbp - 0x518]
414a9c: shl edx, 4
414a9f: or eax, edx
414aa1: movzx edx, byte ptr [rbp - 0x4f0]
414aa8: shl edx, 5
414aab: or eax, edx
414aad: movzx edx, byte ptr [rbp - 0x4d8]
414ab4: shl edx, 6
414ab7: or eax, edx
414ab9: movzx edx, byte ptr [rbp - 0x530]
414ac0: shl edx, 7
414ac3: or eax, edx
414ac5: mov byte ptr [rbp - 0x484], al
414acb: movzx eax, byte ptr [rbp - 0x508]
414ad2: mov dword ptr [rbp - 0x480], eax
414ad8: test r11d, r11d
414adb: jne 0x415e20
414ae1: mov eax, dword ptr [r14 + 4]
414ae5: and byte ptr [rbp - 0x483], 0xef
414aec: cmp eax, 0xaf
414af1: ja 0x4166b8
414af7: mov edx, eax
414af9: add eax, 0x10
414afc: add rdx, qword ptr [r14 + 0x10]
414b00: mov dword ptr [r14 + 4], eax
414b04: movsd xmm0, qword ptr [rdx]
414b08: movsd qword ptr [rbp - 0x4a0], xmm0
414b10: lea rax, [rbp - 0x4a0]
414b17: lea rdx, [rbp - 0x4a8]
414b1e: mov rdi, r12
414b21: mov dword ptr [rbp - 0x4e8], r9d
414b28: lea rsi, [rbp - 0x490]
414b2f: mov qword ptr [rbp - 0x4a8], rax
414b36: call 0x46a6f0
414b3b: test eax, eax
414b3d: js 0x4142a8
414b43: mov r9d, dword ptr [rbp - 0x4e8]
414b4a: cmp r9d, 0x7ffffffe
414b51: ja 0x4156f8
414b57: mov edx, 0x7fffffff
414b5c: sub edx, r9d
414b5f: cmp edx, eax
414b61: jb 0x414da8
414b67: add r9d, eax
414b6a: jmp 0x414550
414b6f: nop 
414b70: endbr64 
414b74: mov rax, qword ptr [rbp - 0x4c8]
414b7b: movzx r15d, byte ptr [rax + 1]
414b80: lea rdx, [rax + 1]
414b84: lea eax, [r15 - 0x20]
414b88: cmp al, 0x5a
414b8a: ja 0x414288
414b90: movsx eax, r15b
414b94: lea rsi, [rip + 0xa8b85]
414b9b: mov qword ptr [rbp - 0x4c8], rdx
414ba2: mov dword ptr [rbp - 0x520], 1
414bac: sub eax, 0x20
414baf: cdqe 
414bb1: movzx eax, byte ptr [rbx + rax]
414bb5: mov rax, qword ptr [rsi + rax*8]
414bb9: jmp rax
414bbb: nop dword ptr [rax + rax]
414bc0: endbr64 
414bc4: cmp qword ptr [rbp - 0x528], -1
414bcc: je 0x4163f5
414bd2: mov rax, qword ptr [rbp - 0x4c8]
414bd9: movzx r15d, byte ptr [rax + 1]
414bde: lea rdx, [rax + 1]
414be2: lea eax, [r15 - 0x20]
414be6: cmp al, 0x5a
414be8: ja 0x414288
414bee: movsx eax, r15b
414bf2: lea rsi, [rip + 0xa8b27]
414bf9: mov qword ptr [rbp - 0x4c8], rdx
414c00: mov dword ptr [rbp - 0x530], 1
414c0a: sub eax, 0x20
414c0d: cdqe 
414c0f: movzx eax, byte ptr [rbx + rax]
414c13: mov rax, qword ptr [rsi + rax*8]
414c17: jmp rax
414c19: nop dword ptr [rax]
414c20: endbr64 
414c24: mov ecx, dword ptr [rbp - 0x4f0]
414c2a: movzx esi, byte ptr [rbp - 0x508]
414c31: mov eax, 0x30
414c36: test ecx, ecx
414c38: cmove esi, eax
414c3b: mov byte ptr [rbp - 0x508], sil
414c42: mov rsi, qword ptr [rbp - 0x4c8]
414c49: movzx r15d, byte ptr [rsi + 1]
414c4e: add rsi, 1
414c52: mov qword ptr [rbp - 0x4c8], rsi
414c59: lea eax, [r15 - 0x20]
414c5d: cmp al, 0x5a
414c5f: ja 0x414288
414c65: movsx eax, r15b
414c69: lea rsi, [rip + 0xa8ab0]
414c70: sub eax, 0x20
414c73: cdqe 
414c75: movzx eax, byte ptr [rbx + rax]
414c79: jmp qword ptr [rsi + rax*8]
414c7c: nop dword ptr [rax]
414c80: endbr64 
414c84: mov rax, qword ptr [rbp - 0x4c8]
414c8b: movzx r15d, byte ptr [rax + 1]
414c90: lea rdx, [rax + 1]
414c94: lea eax, [r15 - 0x20]
414c98: cmp al, 0x5a
414c9a: ja 0x414288
414ca0: movsx eax, r15b
414ca4: lea rsi, [rip + 0xa8a75]
414cab: mov qword ptr [rbp - 0x4c8], rdx
414cb2: mov dword ptr [rbp - 0x51c], 1
414cbc: sub eax, 0x20
414cbf: cdqe 
414cc1: movzx eax, byte ptr [rbx + rax]
414cc5: mov rax, qword ptr [rsi + rax*8]
414cc9: jmp rax
414ccb: nop dword ptr [rax + rax]
414cd0: endbr64 
414cd4: mov edi, dword ptr [rbp - 0x4e8]
414cda: test edi, edi
414cdc: jne 0x414430
414ce2: lea ebx, [r10 - 1]
414ce6: mov esi, dword ptr [rbp - 0x4f0]
414cec: test ebx, ebx
414cee: setg r15b
414cf2: test esi, esi
414cf4: jne 0x414cff
414cf6: test r15b, r15b
414cf9: jne 0x41693e
414cff: mov eax, dword ptr [r14]
414d02: cmp eax, 0x2f
414d05: ja 0x416380
414d0b: mov edx, eax
414d0d: add eax, 8
414d10: add rdx, qword ptr [r14 + 0x10]
414d14: mov dword ptr [r14], eax
414d17: mov edx, dword ptr [rdx]
414d19: mov rax, qword ptr [r12 + 0x28]
414d1e: cmp rax, qword ptr [r12 + 0x30]
414d23: jae 0x416cfa
414d29: lea rcx, [rax + 1]
414d2d: mov qword ptr [r12 + 0x28], rcx
414d32: mov byte ptr [rax], dl
414d34: cmp r9d, 0x7fffffff
414d3b: je 0x4142a8
414d41: mov ecx, dword ptr [rbp - 0x4f0]
414d47: add r9d, 1
414d4b: test ecx, ecx
414d4d: je 0x414550
414d53: test r15b, r15b
414d56: je 0x414550
414d5c: movsxd r15, ebx
414d5f: mov esi, 0x20
414d64: mov rdi, r12
414d67: mov dword ptr [rbp - 0x4e8], r9d
414d6e: mov rdx, r15
414d71: call 0x418850
414d76: cmp r15, rax
414d79: jne 0x4142a8
414d7f: mov r9d, dword ptr [rbp - 0x4e8]
414d86: cmp r9d, 0x7ffffffe
414d8d: ja 0x417140
414d93: mov eax, 0x7fffffff
414d98: sub eax, r9d
414d9b: cmp eax, ebx
414d9d: jae 0x41470d
414da3: nop dword ptr [rax + rax]
414da8: mov rax, 0xffffffffffffffc0
414daf: mov dword ptr fs:[rax], 0x4b
414db6: jmp 0x4142a8
414dbb: nop dword ptr [rax + rax]
414dc0: endbr64 
414dc4: mov edi, dword ptr [rbp - 0x4d4]
414dca: lea rsi, [rbp - 0x420]
414dd1: mov edx, 0x3e8
414dd6: mov dword ptr [rbp - 0x508], r9d
414ddd: mov dword ptr [rbp - 0x500], r8d
414de4: mov dword ptr [rbp - 0x4f8], r10d
414deb: call 0x429060
414df0: mov r10d, dword ptr [rbp - 0x4f8]
414df7: mov dword ptr [rbp - 0x4e8], 0
414e01: mov r8d, dword ptr [rbp - 0x500]
414e08: mov r9d, dword ptr [rbp - 0x508]
414e0f: mov r11, rax
414e12: jmp 0x414637
414e17: nop word ptr [rax + rax]
414e20: endbr64 
414e24: mov r15d, dword ptr [rbp - 0x550]
414e2b: test r15d, r15d
414e2e: je 0x414e3e
414e30: mov ebx, dword ptr [rbp - 0x540]
414e36: test ebx, ebx
414e38: je 0x416795
414e3e: mov r11d, dword ptr [rbp - 0x4e8]
414e45: mov eax, dword ptr [r14]
414e48: test r11d, r11d
414e4b: je 0x415ee0
414e51: cmp eax, 0x2f
414e54: ja 0x4164cd
414e5a: mov edx, eax
414e5c: add eax, 8
414e5f: add rdx, qword ptr [r14 + 0x10]
414e63: mov dword ptr [r14], eax
414e66: mov rax, qword ptr [rdx]
414e69: movsxd rdx, r9d
414e6c: mov qword ptr [rax], rdx
414e6f: jmp 0x414550
414e74: nop dword ptr [rax]
414e78: endbr64 
414e7c: mov eax, dword ptr [r14]
414e7f: cmp eax, 0x2f
414e82: ja 0x415ec8
414e88: mov edx, eax
414e8a: add eax, 8
414e8d: add rdx, qword ptr [r14 + 0x10]
414e91: mov dword ptr [r14], eax
414e94: mov r11, qword ptr [rdx]
414e97: test r11, r11
414e9a: je 0x4163b2
414ea0: mov qword ptr [rbp - 0x500], r11
414ea7: mov r15d, 0x78
414ead: mov dword ptr [rbp - 0x530], 0
414eb7: mov dword ptr [rbp - 0x4e8], 0
414ec1: mov dword ptr [rbp - 0x51c], 1
414ecb: mov dword ptr [rbp - 0x510], 0x10
414ed5: nop dword ptr [rax]
414ed8: test r8d, r8d
414edb: js 0x415960
414ee1: je 0x415720
414ee7: mov byte ptr [rbp - 0x508], 0x20
414eee: movsxd rbx, r8d
414ef1: xor ecx, ecx
414ef3: mov edx, dword ptr [rbp - 0x510]
414ef9: cmp r15b, 0x58
414efd: mov rsi, qword ptr [rbp - 0x4f8]
414f04: mov rdi, qword ptr [rbp - 0x500]
414f0b: sete cl
414f0e: mov dword ptr [rbp - 0x544], r9d
414f15: mov dword ptr [rbp - 0x53c], r10d
414f1c: call 0x467040
414f21: mov rcx, qword ptr [rbp - 0x528]
414f28: mov r10d, dword ptr [rbp - 0x53c]
414f2f: mov r9d, dword ptr [rbp - 0x544]
414f36: mov r11, rax
414f39: test rcx, rcx
414f3c: je 0x414f84
414f3e: mov eax, dword ptr [rbp - 0x530]
414f44: test eax, eax
414f46: je 0x414f84
414f48: mov r8, qword ptr [rbp - 0x538]
414f4f: mov rdx, qword ptr [rbp - 0x4f8]
414f56: mov rsi, r11
414f59: lea rdi, [rbp - 0x420]
414f60: mov dword ptr [rbp - 0x53c], r9d
414f67: mov dword ptr [rbp - 0x530], r10d
414f6e: call 0x410e60
414f73: mov r9d, dword ptr [rbp - 0x53c]
414f7a: mov r10d, dword ptr [rbp - 0x530]
414f81: mov r11, rax
414f84: cmp dword ptr [rbp - 0x510], 0xa
414f8b: jne 0x414fc8
414f8d: mov eax, dword ptr [rbp - 0x520]
414f93: test eax, eax
414f95: je 0x414fc8
414f97: mov rsi, qword ptr [rbp - 0x4f8]
414f9e: mov rdi, r11
414fa1: mov dword ptr [rbp - 0x520], r9d
414fa8: mov dword ptr [rbp - 0x530], r10d
414faf: mov rdx, rsi
414fb2: call 0x410fb0
414fb7: mov r9d, dword ptr [rbp - 0x520]
414fbe: mov r10d, dword ptr [rbp - 0x530]
414fc5: mov r11, rax
414fc8: mov rcx, qword ptr [rbp - 0x4f8]
414fcf: sub rcx, r11
414fd2: cmp rcx, rbx
414fd5: jge 0x415790
414fdb: mov eax, 0
414fe0: sub rbx, rcx
414fe3: cmovs rbx, rax
414fe7: mov eax, dword ptr [rbp - 0x4f0]
414fed: mov r8d, ebx
414ff0: test eax, eax
414ff2: jne 0x415580
414ff8: mov eax, r10d
414ffb: mov dword ptr [rbp - 0x4f0], ecx
415001: sub eax, ecx
415003: sub eax, ebx
415005: cmp qword ptr [rbp - 0x500], 0
41500d: mov ebx, eax
41500f: je 0x41502c
415011: movzx eax, byte ptr [rbp - 0x51c]
415018: and eax, 1
41501b: cmp dword ptr [rbp - 0x510], 0x10
415022: jne 0x41502c
415024: lea edx, [rbx - 2]
415027: test al, al
415029: cmovne ebx, edx
41502c: mov eax, dword ptr [rbp - 0x4d8]
415032: or eax, dword ptr [rbp - 0x518]
415038: or eax, dword ptr [rbp - 0x4e8]
41503e: je 0x415970
415044: sub ebx, 1
415047: cmp byte ptr [rbp - 0x508], 0x20
41504e: je 0x417166
415054: mov eax, dword ptr [rbp - 0x4e8]
41505a: test eax, eax
41505c: je 0x415bb0
415062: mov rax, qword ptr [r12 + 0x28]
415067: cmp rax, qword ptr [r12 + 0x30]
41506c: jae 0x416b20
415072: lea rdx, [rax + 1]
415076: mov qword ptr [r12 + 0x28], rdx
41507b: mov byte ptr [rax], 0x2d
41507e: cmp r9d, 0x7fffffff
415085: je 0x4142a8
41508b: add r9d, 1
41508f: cmp qword ptr [rbp - 0x500], 0
415097: je 0x415102
415099: cmp dword ptr [rbp - 0x510], 0x10
4150a0: jne 0x415102
4150a2: mov esi, dword ptr [rbp - 0x51c]
4150a8: test esi, esi
4150aa: je 0x415102
4150ac: mov rax, qword ptr [r12 + 0x28]
4150b1: cmp rax, qword ptr [r12 + 0x30]
4150b6: jae 0x416ea0
4150bc: lea rdx, [rax + 1]
4150c0: mov qword ptr [r12 + 0x28], rdx
4150c5: mov byte ptr [rax], 0x30
4150c8: cmp r9d, 0x7fffffff
4150cf: je 0x4142a8
4150d5: mov rax, qword ptr [r12 + 0x28]
4150da: cmp rax, qword ptr [r12 + 0x30]
4150df: jae 0x416e46
4150e5: lea rdx, [rax + 1]
4150e9: mov qword ptr [r12 + 0x28], rdx
4150ee: mov byte ptr [rax], r15b
4150f1: cmp r9d, 0x7ffffffe
4150f8: je 0x4142a8
4150fe: add r9d, 2
415102: add ebx, r8d
415105: test ebx, ebx
415107: jg 0x415b28
41510d: test r9d, r9d
415110: js 0x416ffa
415116: mov rbx, qword ptr [r12 + 0xd8]
41511e: mov rax, rbx
415121: sub rax, 0x4c1b60
415128: cmp qword ptr [rbp - 0x4d0], rax
41512f: jbe 0x416684
415135: mov qword ptr [rbp - 0x4e8], rcx
41513c: mov rdx, rcx
41513f: mov rsi, r11
415142: mov rdi, r12
415145: mov dword ptr [rbp - 0x4f8], r9d
41514c: call qword ptr [rbx + 0x38]
41514f: mov rcx, qword ptr [rbp - 0x4e8]
415156: cmp rcx, rax
415159: jne 0x4142a8
41515f: mov r9d, dword ptr [rbp - 0x4f8]
415166: mov eax, 0x7fffffff
41516b: sub eax, r9d
41516e: cdqe 
415170: cmp rax, rcx
415173: jl 0x414da8
415179: add r9d, dword ptr [rbp - 0x4f0]
415180: jmp 0x414550
415185: nop dword ptr [rax]
415188: endbr64 
41518c: mov dword ptr [rbp - 0x510], 0xa
415196: mov edi, dword ptr [rbp - 0x4e8]
41519c: mov eax, dword ptr [r14]
41519f: test edi, edi
4151a1: je 0x415800
4151a7: cmp eax, 0x2f
4151aa: ja 0x415d08
4151b0: mov edx, eax
4151b2: add eax, 8
4151b5: add rdx, qword ptr [r14 + 0x10]
4151b9: mov dword ptr [r14], eax
4151bc: mov dword ptr [rbp - 0x4d8], 0
4151c6: mov rax, qword ptr [rdx]
4151c9: mov dword ptr [rbp - 0x518], 0
4151d3: mov qword ptr [rbp - 0x500], rax
4151da: mov dword ptr [rbp - 0x4e8], 0
4151e4: jmp 0x414ed8
4151e9: nop dword ptr [rax]
4151f0: endbr64 
4151f4: mov rax, qword ptr [r12 + 0x28]
4151f9: cmp rax, qword ptr [r12 + 0x30]
4151fe: jae 0x416c4a
415204: lea rdx, [rax + 1]
415208: mov qword ptr [r12 + 0x28], rdx
41520d: mov byte ptr [rax], 0x25
415210: cmp r9d, 0x7fffffff
415217: je 0x4142a8
41521d: add r9d, 1
415221: jmp 0x414550
415226: nop word ptr cs:[rax + rax]
415230: endbr64 
415234: mov rax, qword ptr [rbp - 0x4c8]
41523b: movzx r15d, byte ptr [rax + 1]
415240: lea rdx, [rax + 1]
415244: lea eax, [r15 - 0x20]
415248: cmp al, 0x5a
41524a: ja 0x414288
415250: movsx eax, r15b
415254: mov qword ptr [rbp - 0x4c8], rdx
41525b: mov dword ptr [rbp - 0x4e8], 1
415265: sub eax, 0x20
415268: cdqe 
41526a: movzx ecx, byte ptr [rbx + rax]
41526e: lea rax, [rip + 0xa7fab]
415275: mov rax, qword ptr [rax + rcx*8]
415279: jmp rax
41527b: nop dword ptr [rax + rax]
415280: endbr64 
415284: mov rax, qword ptr [rbp - 0x4c8]
41528b: movzx r15d, byte ptr [rax + 1]
415290: lea rdx, [rax + 1]
415294: lea eax, [r15 - 0x20]
415298: cmp al, 0x5a
41529a: ja 0x414288
4152a0: movsx eax, r15b
4152a4: lea rsi, [rip + 0xa8075]
4152ab: mov qword ptr [rbp - 0x4c8], rdx
4152b2: mov dword ptr [rbp - 0x500], 0
4152bc: sub eax, 0x20
4152bf: mov dword ptr [rbp - 0x53c], 1
4152c9: cdqe 
4152cb: movzx eax, byte ptr [rbx + rax]
4152cf: mov rax, qword ptr [rsi + rax*8]
4152d3: jmp rax
4152d5: nop dword ptr [rax]
4152d8: endbr64 
4152dc: mov rax, qword ptr [rbp - 0x4c8]
4152e3: movzx r15d, byte ptr [rax + 1]
4152e8: lea rdx, [rax + 1]
4152ec: lea eax, [r15 - 0x20]
4152f0: cmp al, 0x5a
4152f2: ja 0x414288
4152f8: movsx eax, r15b
4152fc: lea rsi, [rip + 0xa841d]
415303: mov qword ptr [rbp - 0x4c8], rdx
41530a: sub eax, 0x20
41530d: mov byte ptr [rbp - 0x508], 0x20
415314: mov dword ptr [rbp - 0x4f0], 1
41531e: cdqe 
415320: movzx eax, byte ptr [rbx + rax]
415324: mov rax, qword ptr [rsi + rax*8]
415328: jmp rax
41532a: nop word ptr [rax + rax]
415330: endbr64 
415334: mov rax, qword ptr [rbp - 0x4c8]
41533b: movzx r15d, byte ptr [rax + 1]
415340: lea rdx, [rax + 1]
415344: lea eax, [r15 - 0x20]
415348: cmp al, 0x5a
41534a: ja 0x414288
415350: movsx eax, r15b
415354: lea rsi, [rip + 0xa83c5]
41535b: mov qword ptr [rbp - 0x4c8], rdx
415362: mov dword ptr [rbp - 0x4d8], 1
41536c: sub eax, 0x20
41536f: cdqe 
415371: movzx eax, byte ptr [rbx + rax]
415375: mov rax, qword ptr [rsi + rax*8]
415379: jmp rax
41537b: nop dword ptr [rax + rax]
415380: endbr64 
415384: mov rax, qword ptr [rbp - 0x4c8]
41538b: movzx r15d, byte ptr [rax + 1]
415390: lea rdx, [rax + 1]
415394: lea eax, [r15 - 0x20]
415398: cmp al, 0x5a
41539a: ja 0x414288
4153a0: movsx eax, r15b
4153a4: lea rsi, [rip + 0xa8375]
4153ab: mov qword ptr [rbp - 0x4c8], rdx
4153b2: mov dword ptr [rbp - 0x518], 1
4153bc: sub eax, 0x20
4153bf: cdqe 
4153c1: movzx eax, byte ptr [rbx + rax]
4153c5: mov rax, qword ptr [rsi + rax*8]
4153c9: jmp rax
4153cb: nop dword ptr [rax + rax]
4153d0: endbr64 
4153d4: mov dword ptr [rbp - 0x510], 0x10
4153de: jmp 0x415196
4153e3: nop dword ptr [rax + rax]
4153e8: endbr64 
4153ec: mov dword ptr [rbp - 0x510], 8
4153f6: jmp 0x415196
4153fb: nop dword ptr [rax + rax]
415400: endbr64 
415404: cmp byte ptr [rbp - 0x545], 0
41540b: jne 0x416c78
415411: mov edx, r11d
415414: and edx, 1
415417: movzx eax, word ptr [rbp - 0x500]
41541e: movzx edx, dl
415421: movsx r15d, r15b
415425: mov dword ptr [rbp - 0x484], 0
41542f: mov dword ptr [rbp - 0x490], r8d
415436: add eax, eax
415438: mov dword ptr [rbp - 0x48c], r10d
41543f: or eax, edx
415441: movzx edx, word ptr [rbp - 0x4e8]
415448: mov dword ptr [rbp - 0x488], r15d
41544f: shl edx, 2
415452: or eax, edx
415454: movzx edx, word ptr [rbp - 0x51c]
41545b: shl edx, 3
41545e: or eax, edx
415460: movzx edx, word ptr [rbp - 0x518]
415467: shl edx, 4
41546a: or eax, edx
41546c: movzx edx, word ptr [rbp - 0x4f0]
415473: shl edx, 5
415476: or eax, edx
415478: movzx edx, word ptr [rbp - 0x4d8]
41547f: shl edx, 6
415482: or eax, edx
415484: movzx edx, word ptr [rbp - 0x530]
41548b: shl edx, 7
41548e: or eax, edx
415490: movzx edx, word ptr [rbp - 0x520]
415497: shl edx, 0xb
41549a: or eax, edx
41549c: mov word ptr [rbp - 0x484], ax
4154a3: movzx eax, byte ptr [rbp - 0x508]
4154aa: mov dword ptr [rbp - 0x480], eax
4154b0: test r11d, r11d
4154b3: jne 0x415e68
4154b9: mov eax, dword ptr [r14 + 4]
4154bd: and byte ptr [rbp - 0x483], 0xef
4154c4: cmp eax, 0xaf
4154c9: ja 0x4166c9
4154cf: mov edx, eax
4154d1: add eax, 0x10
4154d4: add rdx, qword ptr [r14 + 0x10]
4154d8: mov dword ptr [r14 + 4], eax
4154dc: movsd xmm0, qword ptr [rdx]
4154e0: movsd qword ptr [rbp - 0x4a0], xmm0
4154e8: lea rax, [rbp - 0x4a0]
4154ef: lea rdx, [rbp - 0x4b0]
4154f6: mov rdi, r12
4154f9: mov dword ptr [rbp - 0x4e8], r9d
415500: lea rsi, [rbp - 0x490]
415507: mov qword ptr [rbp - 0x4b0], rax
41550e: call 0x46a400
415513: test eax, eax
415515: jns 0x414b43
41551b: jmp 0x4142a8
415520: endbr64 
415524: mov edx, dword ptr [rbp - 0x4e8]
41552a: mov eax, dword ptr [r14]
41552d: test edx, edx
41552f: je 0x415f10
415535: cmp eax, 0x2f
415538: ja 0x4164de
41553e: mov edx, eax
415540: add eax, 8
415543: add rdx, qword ptr [r14 + 0x10]
415547: mov dword ptr [r14], eax
41554a: mov r11, qword ptr [rdx]
41554d: test r11, r11
415550: js 0x416090
415556: mov qword ptr [rbp - 0x500], r11
41555d: mov dword ptr [rbp - 0x4e8], 0
415567: mov dword ptr [rbp - 0x510], 0xa
415571: jmp 0x414ed8
415576: nop word ptr cs:[rax + rax]
415580: mov edx, dword ptr [rbp - 0x4e8]
415586: test edx, edx
415588: je 0x415a10
41558e: mov rax, qword ptr [r12 + 0x28]
415593: cmp rax, qword ptr [r12 + 0x30]
415598: jae 0x416aba
41559e: lea rdx, [rax + 1]
4155a2: mov qword ptr [r12 + 0x28], rdx
4155a7: mov byte ptr [rax], 0x2d
4155aa: cmp r9d, 0x7fffffff
4155b1: je 0x4142a8
4155b7: add r9d, 1
4155bb: sub r10d, 1
4155bf: cmp qword ptr [rbp - 0x500], 0
4155c7: je 0x415636
4155c9: cmp dword ptr [rbp - 0x510], 0x10
4155d0: jne 0x415636
4155d2: mov eax, dword ptr [rbp - 0x51c]
4155d8: test eax, eax
4155da: je 0x415636
4155dc: mov rax, qword ptr [r12 + 0x28]
4155e1: cmp rax, qword ptr [r12 + 0x30]
4155e6: jae 0x416d55
4155ec: lea rdx, [rax + 1]
4155f0: mov qword ptr [r12 + 0x28], rdx
4155f5: mov byte ptr [rax], 0x30
4155f8: cmp r9d, 0x7fffffff
4155ff: je 0x4142a8
415605: mov rax, qword ptr [r12 + 0x28]
41560a: cmp rax, qword ptr [r12 + 0x30]
41560f: jae 0x416dc0
415615: lea rdx, [rax + 1]
415619: mov qword ptr [r12 + 0x28], rdx
41561e: mov byte ptr [rax], r15b
415621: cmp r9d, 0x7ffffffe
415628: je 0x4142a8
41562e: add r9d, 2
415632: sub r10d, 2
415636: add ebx, ecx
415638: mov r15d, ecx
41563b: sub r10d, ebx
41563e: mov ebx, r10d
415641: test r8d, r8d
415644: jg 0x415aa0
41564a: test r9d, r9d
41564d: js 0x416ffa
415653: mov rax, qword ptr [r12 + 0xd8]
41565b: mov rdx, rax
41565e: sub rdx, 0x4c1b60
415665: cmp qword ptr [rbp - 0x4d0], rdx
41566c: jbe 0x416642
415672: mov qword ptr [rbp - 0x4e8], rcx
415679: mov rdx, rcx
41567c: mov rsi, r11
41567f: mov rdi, r12
415682: mov dword ptr [rbp - 0x4f0], r9d
415689: call qword ptr [rax + 0x38]
41568c: mov rcx, qword ptr [rbp - 0x4e8]
415693: cmp rcx, rax
415696: jne 0x4142a8
41569c: mov r9d, dword ptr [rbp - 0x4f0]
4156a3: mov eax, 0x7fffffff
4156a8: sub eax, r9d
4156ab: cdqe 
4156ad: cmp rax, rcx
4156b0: jl 0x414da8
4156b6: add r9d, r15d
4156b9: test ebx, ebx
4156bb: jle 0x414550
4156c1: movsxd r15, ebx
4156c4: mov esi, 0x20
4156c9: mov rdi, r12
4156cc: mov dword ptr [rbp - 0x4e8], r9d
4156d3: mov rdx, r15
4156d6: call 0x418850
4156db: cmp r15, rax
4156de: jne 0x4142a8
4156e4: mov r9d, dword ptr [rbp - 0x4e8]
4156eb: cmp r9d, 0x7ffffffe
4156f2: jbe 0x414d93
4156f8: lea rcx, [rip + 0x803a1]
4156ff: mov edx, 0x697
415704: lea rsi, [rip + 0x801d9]
41570b: lea rdi, [rip + 0x80256]
415712: call 0x4032a0
415717: nop word ptr [rax + rax]
415720: cmp qword ptr [rbp - 0x500], 0
415728: jne 0x415b98
41572e: cmp dword ptr [rbp - 0x510], 8
415735: jne 0x415f58
41573b: mov edx, dword ptr [rbp - 0x51c]
415741: test edx, edx
415743: je 0x415f58
415749: mov rax, qword ptr [rbp - 0x4f8]
415750: mov byte ptr [rbp - 0x508], 0x20
415757: xor ebx, ebx
415759: mov ecx, 1
41575e: mov byte ptr [rax - 1], 0x30
415762: lea r11, [rax - 1]
415766: mov eax, dword ptr [rbp - 0x4f0]
41576c: test eax, eax
41576e: jne 0x415580
415774: add ebx, ecx
415776: mov dword ptr [rbp - 0x4f0], ecx
41577c: sub r10d, ebx
41577f: mov ebx, r10d
415782: jmp 0x41502c
415787: nop word ptr [rax + rax]
415790: cmp qword ptr [rbp - 0x500], 0
415798: je 0x415e08
41579e: movzx eax, byte ptr [rbp - 0x51c]
4157a5: and eax, 1
4157a8: cmp dword ptr [rbp - 0x510], 8
4157af: jne 0x4157cb
4157b1: test al, al
4157b3: je 0x4157cb
4157b5: mov rcx, qword ptr [rbp - 0x4f8]
4157bc: lea rdx, [r11 - 1]
4157c0: mov byte ptr [r11 - 1], 0x30
4157c5: mov r11, rdx
4157c8: sub rcx, rdx
4157cb: mov edx, 0
4157d0: sub rbx, rcx
4157d3: cmovs rbx, rdx
4157d7: mov edx, dword ptr [rbp - 0x4f0]
4157dd: mov r8d, ebx
4157e0: test edx, edx
4157e2: jne 0x415580
4157e8: mov edx, r10d
4157eb: mov dword ptr [rbp - 0x4f0], ecx
4157f1: sub edx, ecx
4157f3: sub edx, ebx
4157f5: mov ebx, edx
4157f7: jmp 0x41501b
4157fc: nop dword ptr [rax]
415800: mov esi, dword ptr [rbp - 0x53c]
415806: test esi, esi
415808: je 0x415d20
41580e: cmp eax, 0x2f
415811: ja 0x416100
415817: mov edx, eax
415819: add eax, 8
41581c: add rdx, qword ptr [r14 + 0x10]
415820: mov dword ptr [r14], eax
415823: mov dword ptr [rbp - 0x4d8], 0
41582d: movzx eax, byte ptr [rdx]
415830: mov dword ptr [rbp - 0x518], 0
41583a: mov qword ptr [rbp - 0x500], rax
415841: jmp 0x414ed8
415846: nop word ptr cs:[rax + rax]
415850: mov dword ptr [rbp - 0x4f8], 0
41585a: cmp r8d, -1
41585e: je 0x416190
415864: cmp r8d, 5
415868: jg 0x416190
41586e: xor ebx, ebx
415870: lea r11, [rip + 0x9619e]
415877: xor r15d, r15d
41587a: mov r8d, dword ptr [rbp - 0x4f0]
415881: test r10d, r10d
415884: setne byte ptr [rbp - 0x4e8]
41588b: movzx eax, byte ptr [rbp - 0x4e8]
415892: test r8d, r8d
415895: jne 0x41589f
415897: test al, al
415899: jne 0x41654c
41589f: test r9d, r9d
4158a2: js 0x417121
4158a8: mov rax, qword ptr [r12 + 0xd8]
4158b0: mov rdx, rax
4158b3: sub rdx, 0x4c1b60
4158ba: cmp qword ptr [rbp - 0x4d0], rdx
4158c1: jbe 0x4169b1
4158c7: mov dword ptr [rbp - 0x510], r9d
4158ce: mov rdx, r15
4158d1: mov rsi, r11
4158d4: mov rdi, r12
4158d7: mov dword ptr [rbp - 0x508], r10d
4158de: mov qword ptr [rbp - 0x500], r11
4158e5: call qword ptr [rax + 0x38]
4158e8: cmp rax, r15
4158eb: jne 0x4142a8
4158f1: mov r9d, dword ptr [rbp - 0x510]
4158f8: mov eax, 0x7fffffff
4158fd: mov r11, qword ptr [rbp - 0x500]
415904: mov r10d, dword ptr [rbp - 0x508]
41590b: sub eax, r9d
41590e: cdqe 
415910: cmp rax, r15
415913: jb 0x414da8
415919: mov edi, dword ptr [rbp - 0x4f0]
41591f: add r9d, ebx
415922: test edi, edi
415924: je 0x415933
415926: cmp byte ptr [rbp - 0x4e8], 0
41592d: jne 0x416718
415933: mov esi, dword ptr [rbp - 0x4f8]
415939: test esi, esi
41593b: je 0x414550
415941: mov rdi, r11
415944: mov dword ptr [rbp - 0x4e8], r9d
41594b: call 0x426a00
415950: mov r9d, dword ptr [rbp - 0x4e8]
415957: jmp 0x414550
41595c: nop dword ptr [rax]
415960: mov ebx, 1
415965: jmp 0x414ef1
41596a: nop word ptr [rax + rax]
415970: cmp byte ptr [rbp - 0x508], 0x20
415977: jne 0x41508f
41597d: test ebx, ebx
41597f: jle 0x41715f
415985: movsxd rdx, ebx
415988: mov esi, 0x20
41598d: mov rdi, r12
415990: mov dword ptr [rbp - 0x53c], r9d
415997: mov qword ptr [rbp - 0x4f8], rdx
41599e: mov dword ptr [rbp - 0x520], r8d
4159a5: mov qword ptr [rbp - 0x530], r11
4159ac: mov qword ptr [rbp - 0x508], rcx
4159b3: call 0x418850
4159b8: mov rdx, qword ptr [rbp - 0x4f8]
4159bf: cmp rdx, rax
4159c2: jne 0x4142a8
4159c8: mov r9d, dword ptr [rbp - 0x53c]
4159cf: mov rcx, qword ptr [rbp - 0x508]
4159d6: mov r11, qword ptr [rbp - 0x530]
4159dd: mov r8d, dword ptr [rbp - 0x520]
4159e4: cmp r9d, 0x7ffffffe
4159eb: ja 0x4156f8
4159f1: mov eax, 0x7fffffff
4159f6: sub eax, r9d
4159f9: cmp eax, ebx
4159fb: jb 0x414da8
415a01: add r9d, ebx
415a04: xor ebx, ebx
415a06: jmp 0x415054
415a0b: nop dword ptr [rax + rax]
415a10: mov eax, dword ptr [rbp - 0x4d8]
415a16: test eax, eax
415a18: je 0x415db0
415a1e: mov rax, qword ptr [r12 + 0x28]
415a23: cmp rax, qword ptr [r12 + 0x30]
415a28: jae 0x416d28
415a2e: lea rdx, [rax + 1]
415a32: mov qword ptr [r12 + 0x28], rdx
415a37: mov byte ptr [rax], 0x2b
415a3a: jmp 0x4155aa
415a3f: nop 
415a40: mov dword ptr [rbp - 0x4e8], r9d
415a47: mov qword ptr [rbp - 0x4e0], rax
415a4e: mov qword ptr [rbp - 0x4c8], r8
415a55: call 0x41b240
415a5a: mov r9d, dword ptr [rbp - 0x4e8]
415a61: mov rax, qword ptr [rbp - 0x4e0]
415a68: mov r8, qword ptr [rbp - 0x4c8]
415a6f: jmp 0x4145c4
415a74: nop dword ptr [rax]
415a78: mov rdi, qword ptr [rbp - 0x4e0]
415a7f: mov dword ptr [rbp - 0x4e8], r9d
415a86: call 0x426a00
415a8b: mov r9d, dword ptr [rbp - 0x4e8]
415a92: jmp 0x414565
415a97: nop word ptr [rax + rax]
415aa0: movsxd rdx, r8d
415aa3: mov esi, 0x30
415aa8: mov rdi, r12
415aab: mov dword ptr [rbp - 0x508], r9d
415ab2: mov qword ptr [rbp - 0x4e8], rdx
415ab9: mov qword ptr [rbp - 0x500], r11
415ac0: mov qword ptr [rbp - 0x4f8], rcx
415ac7: mov dword ptr [rbp - 0x4f0], r8d
415ace: call 0x418850
415ad3: mov rdx, qword ptr [rbp - 0x4e8]
415ada: cmp rdx, rax
415add: jne 0x4142a8
415ae3: mov r9d, dword ptr [rbp - 0x508]
415aea: cmp r9d, 0x7ffffffe
415af1: ja 0x4156f8
415af7: mov r8d, dword ptr [rbp - 0x4f0]
415afe: mov eax, 0x7fffffff
415b03: mov rcx, qword ptr [rbp - 0x4f8]
415b0a: sub eax, r9d
415b0d: mov r11, qword ptr [rbp - 0x500]
415b14: cmp eax, r8d
415b17: jb 0x414da8
415b1d: add r9d, r8d
415b20: jmp 0x41564a
415b25: nop dword ptr [rax]
415b28: movsxd r15, ebx
415b2b: mov esi, 0x30
415b30: mov rdi, r12
415b33: mov dword ptr [rbp - 0x500], r9d
415b3a: mov rdx, r15
415b3d: mov qword ptr [rbp - 0x4f8], r11
415b44: mov qword ptr [rbp - 0x4e8], rcx
415b4b: call 0x418850
415b50: cmp r15, rax
415b53: jne 0x4142a8
415b59: mov r9d, dword ptr [rbp - 0x500]
415b60: cmp r9d, 0x7ffffffe
415b67: ja 0x4156f8
415b6d: mov eax, 0x7fffffff
415b72: mov rcx, qword ptr [rbp - 0x4e8]
415b79: mov r11, qword ptr [rbp - 0x4f8]
415b80: sub eax, r9d
415b83: cmp eax, ebx
415b85: jb 0x414da8
415b8b: add r9d, ebx
415b8e: jmp 0x41510d
415b93: nop dword ptr [rax + rax]
415b98: mov byte ptr [rbp - 0x508], 0x20
415b9f: xor ebx, ebx
415ba1: jmp 0x414ef1
415ba6: nop word ptr cs:[rax + rax]
415bb0: mov r10d, dword ptr [rbp - 0x4d8]
415bb7: test r10d, r10d
415bba: je 0x41643d
415bc0: mov rax, qword ptr [r12 + 0x28]
415bc5: cmp rax, qword ptr [r12 + 0x30]
415bca: jae 0x416e20
415bd0: lea rdx, [rax + 1]
415bd4: mov qword ptr [r12 + 0x28], rdx
415bd9: mov byte ptr [rax], 0x2b
415bdc: jmp 0x41507e
415be1: nop dword ptr [rax]
415be8: mov qword ptr [rbp - 0x4c8], rsi
415bef: cmp r10d, 0x7fffffde
415bf6: ja 0x414da8
415bfc: cmp r10d, 0x3c7
415c03: jle 0x415cca
415c09: movsxd rdx, r10d
415c0c: mov dword ptr [rbp - 0x558], r9d
415c13: add rdx, 0x20
415c17: mov dword ptr [rbp - 0x554], r8d
415c1e: mov rdi, rdx
415c21: mov dword ptr [rbp - 0x544], r11d
415c28: mov dword ptr [rbp - 0x510], r10d
415c2f: mov qword ptr [rbp - 0x4f8], rdx
415c36: call 0x421200
415c3b: mov rdx, qword ptr [rbp - 0x4f8]
415c42: mov r10d, dword ptr [rbp - 0x510]
415c49: test eax, eax
415c4b: mov r11d, dword ptr [rbp - 0x544]
415c52: mov r8d, dword ptr [rbp - 0x554]
415c59: mov r9d, dword ptr [rbp - 0x558]
415c60: jne 0x415c6f
415c62: cmp rdx, 0x1000
415c69: ja 0x4170c5
415c6f: lea rax, [rdx + 0x17]
415c73: mov rsi, rsp
415c76: mov rcx, rax
415c79: and rax, 0xfffffffffffff000
415c7f: sub rsi, rax
415c82: and rcx, 0xfffffffffffffff0
415c86: mov rax, rsi
415c89: cmp rsp, rax
415c8c: je 0x415ca3
415c8e: sub rsp, 0x1000
415c95: or qword ptr [rsp + 0xff8], 0
415c9e: cmp rsp, rax
415ca1: jne 0x415c8e
415ca3: and ecx, 0xfff
415ca9: sub rsp, rcx
415cac: test rcx, rcx
415caf: je 0x415cb7
415cb1: or qword ptr [rsp + rcx - 8], 0
415cb7: lea rax, [rsp + 0xf]
415cbc: and rax, 0xfffffffffffffff0
415cc0: add rax, rdx
415cc3: mov qword ptr [rbp - 0x4f8], rax
415cca: cmp r15b, 0x24
415cce: je 0x414400
415cd4: lea eax, [r15 - 0x20]
415cd8: cmp al, 0x5a
415cda: ja 0x414288
415ce0: jmp 0x414a1d
415ce5: nop dword ptr [rax]
415ce8: xor eax, eax
415cea: mov edx, 1
415cef: lock cmpxchg dword ptr [rdi], edx
415cf3: je 0x413fb7
415cf9: call 0x421250
415cfe: jmp 0x413fb7
415d03: nop dword ptr [rax + rax]
415d08: mov rdx, qword ptr [r14 + 8]
415d0c: lea rax, [rdx + 8]
415d10: mov qword ptr [r14 + 8], rax
415d14: jmp 0x4151bc
415d19: nop dword ptr [rax]
415d20: mov ecx, dword ptr [rbp - 0x500]
415d26: test ecx, ecx
415d28: jne 0x4160b8
415d2e: cmp eax, 0x2f
415d31: ja 0x4166da
415d37: mov edx, eax
415d39: add eax, 8
415d3c: add rdx, qword ptr [r14 + 0x10]
415d40: mov dword ptr [r14], eax
415d43: mov dword ptr [rbp - 0x4d8], 0
415d4d: mov eax, dword ptr [rdx]
415d4f: mov dword ptr [rbp - 0x518], 0
415d59: mov qword ptr [rbp - 0x500], rax
415d60: mov dword ptr [rbp - 0x4e8], 0
415d6a: jmp 0x414ed8
415d6f: nop 
415d70: mov rcx, qword ptr [r14 + 8]
415d74: lea rax, [rcx + 8]
415d78: mov qword ptr [r14 + 8], rax
415d7c: jmp 0x41445e
415d81: nop dword ptr [rax]
415d88: mov dword ptr [rbp - 0x540], 0
415d92: mov qword ptr [rbp - 0x538], 0
415d9d: mov qword ptr [rbp - 0x528], 0xffffffffffffffff
415da8: jmp 0x4141b5
415dad: nop dword ptr [rax]
415db0: mov eax, dword ptr [rbp - 0x518]
415db6: test eax, eax
415db8: je 0x4155bf
415dbe: mov rax, qword ptr [r12 + 0x28]
415dc3: cmp rax, qword ptr [r12 + 0x30]
415dc8: jae 0x416f41
415dce: lea rdx, [rax + 1]
415dd2: mov qword ptr [r12 + 0x28], rdx
415dd7: mov byte ptr [rax], 0x20
415dda: jmp 0x4155aa
415ddf: nop 
415de0: xchg dword ptr [rdi], eax
415de2: cmp eax, 1
415de5: jle 0x414229
415deb: xor r10d, r10d
415dee: mov edx, 1
415df3: mov esi, 0x81
415df8: mov eax, 0xca
415dfd: syscall 
415dff: jmp 0x414229
415e04: nop dword ptr [rax]
415e08: sub rbx, rcx
415e0b: cmovs rbx, qword ptr [rbp - 0x500]
415e13: mov r8d, ebx
415e16: jmp 0x415766
415e1b: nop dword ptr [rax + rax]
415e20: mov eax, dword ptr [rbp - 0x54c]
415e26: test eax, eax
415e28: je 0x416111
415e2e: mov edx, dword ptr [r14 + 4]
415e32: or byte ptr [rbp - 0x483], 0x10
415e39: cmp edx, 0xaf
415e3f: ja 0x416a77
415e45: mov eax, edx
415e47: add edx, 0x10
415e4a: add rax, qword ptr [r14 + 0x10]
415e4e: mov dword ptr [r14 + 4], edx
415e52: movdqa xmm3, xmmword ptr [rax]
415e56: movaps xmmword ptr [rbp - 0x4a0], xmm3
415e5d: jmp 0x414b10
415e62: nop word ptr [rax + rax]
415e68: mov eax, dword ptr [rbp - 0x54c]
415e6e: test eax, eax
415e70: je 0x416139
415e76: mov edx, dword ptr [r14 + 4]
415e7a: or byte ptr [rbp - 0x483], 0x10
415e81: cmp edx, 0xaf
415e87: ja 0x416a90
415e8d: mov eax, edx
415e8f: add edx, 0x10
415e92: add rax, qword ptr [r14 + 0x10]
415e96: mov dword ptr [r14 + 4], edx
415e9a: movdqa xmm2, xmmword ptr [rax]
415e9e: movaps xmmword ptr [rbp - 0x4a0], xmm2
415ea5: jmp 0x4154e8
415eaa: nop word ptr [rax + rax]
415eb0: mov rdx, qword ptr [r14 + 8]
415eb4: lea rax, [rdx + 8]
415eb8: mov qword ptr [r14 + 8], rax
415ebc: jmp 0x414634
415ec1: nop dword ptr [rax]
415ec8: mov rdx, qword ptr [r14 + 8]
415ecc: lea rax, [rdx + 8]
415ed0: mov qword ptr [r14 + 8], rax
415ed4: jmp 0x414e94
415ed9: nop dword ptr [rax]
415ee0: mov r10d, dword ptr [rbp - 0x53c]
415ee7: test r10d, r10d
415eea: je 0x41651c
415ef0: cmp eax, 0x2f
415ef3: ja 0x416aa9
415ef9: mov edx, eax
415efb: add eax, 8
415efe: add rdx, qword ptr [r14 + 0x10]
415f02: mov dword ptr [r14], eax
415f05: mov rax, qword ptr [rdx]
415f08: mov byte ptr [rax], r9b
415f0b: jmp 0x414550
415f10: mov ebx, dword ptr [rbp - 0x53c]
415f16: test ebx, ebx
415f18: je 0x4164ef
415f1e: cmp eax, 0x2f
415f21: ja 0x416a66
415f27: mov edx, eax
415f29: add eax, 8
415f2c: add rdx, qword ptr [r14 + 0x10]
415f30: mov dword ptr [r14], eax
415f33: movsx r11, byte ptr [rdx]
415f37: jmp 0x41554d
415f3c: nop dword ptr [rax]
415f40: mov edx, eax
415f42: add eax, 8
415f45: add rdx, qword ptr [r14 + 0x10]
415f49: mov dword ptr [r14], eax
415f4c: jmp 0x41490e
415f51: nop dword ptr [rax]
415f58: mov byte ptr [rbp - 0x508], 0x20
415f5f: mov r11, qword ptr [rbp - 0x4f8]
415f66: xor ebx, ebx
415f68: xor ecx, ecx
415f6a: jmp 0x415766
415f6f: nop 
415f70: mov qword ptr [rbp - 0x490], r11
415f77: lea rbx, [rbp - 0x450]
415f7e: mov qword ptr [rbp - 0x450], 0
415f89: test r8d, r8d
415f8c: js 0x4167e8
415f92: movsxd r15, r8d
415f95: mov dword ptr [rbp - 0x4f8], r9d
415f9c: mov rdi, r15
415f9f: mov dword ptr [rbp - 0x4e8], r10d
415fa6: mov dword ptr [rbp - 0x500], r8d
415fad: call 0x421200
415fb2: mov r10d, dword ptr [rbp - 0x4e8]
415fb9: mov r9d, dword ptr [rbp - 0x4f8]
415fc0: test eax, eax
415fc2: jne 0x415fd8
415fc4: mov r8d, dword ptr [rbp - 0x500]
415fcb: cmp r8d, 0x1000
415fd2: jg 0x41708d
415fd8: lea rax, [r15 + 0x17]
415fdc: mov rsi, rsp
415fdf: mov rdx, rax
415fe2: and rax, 0xfffffffffffff000
415fe8: sub rsi, rax
415feb: and rdx, 0xfffffffffffffff0
415fef: mov rax, rsi
415ff2: cmp rsp, rax
415ff5: je 0x41600c
415ff7: sub rsp, 0x1000
415ffe: or qword ptr [rsp + 0xff8], 0
416007: cmp rsp, rax
41600a: jne 0x415ff7
41600c: and edx, 0xfff
416012: sub rsp, rdx
416015: test rdx, rdx
416018: je 0x416020
41601a: or qword ptr [rsp + rdx - 8], 0
416020: mov dword ptr [rbp - 0x4f8], 0
41602a: lea r8, [rsp + 0xf]
41602f: mov r11, r8
416032: and r11, 0xfffffffffffffff0
416036: mov rdx, r15
416039: mov rdi, r11
41603c: lea rsi, [rbp - 0x490]
416043: mov rcx, rbx
416046: mov dword ptr [rbp - 0x508], r9d
41604d: mov dword ptr [rbp - 0x500], r10d
416054: mov qword ptr [rbp - 0x4e8], r11
41605b: call 0x44f240
416060: mov r11, qword ptr [rbp - 0x4e8]
416067: mov r10d, dword ptr [rbp - 0x500]
41606e: cmp rax, -1
416072: mov r9d, dword ptr [rbp - 0x508]
416079: mov r15, rax
41607c: je 0x4142a8
416082: mov ebx, r15d
416085: jmp 0x4146a6
41608a: nop word ptr [rax + rax]
416090: mov dword ptr [rbp - 0x510], 0xa
41609a: neg r11
41609d: mov qword ptr [rbp - 0x500], r11
4160a4: mov dword ptr [rbp - 0x4e8], 1
4160ae: jmp 0x414ed8
4160b3: nop dword ptr [rax + rax]
4160b8: cmp eax, 0x2f
4160bb: ja 0x4166eb
4160c1: mov edx, eax
4160c3: add eax, 8
4160c6: add rdx, qword ptr [r14 + 0x10]
4160ca: mov dword ptr [r14], eax
4160cd: mov dword ptr [rbp - 0x4d8], 0
4160d7: movzx eax, word ptr [rdx]
4160da: mov dword ptr [rbp - 0x518], 0
4160e4: mov qword ptr [rbp - 0x500], rax
4160eb: mov dword ptr [rbp - 0x4e8], 0
4160f5: jmp 0x414ed8
4160fa: nop word ptr [rax + rax]
416100: mov rdx, qword ptr [r14 + 8]
416104: lea rax, [rdx + 8]
416108: mov qword ptr [r14 + 8], rax
41610c: jmp 0x415823
416111: mov rax, qword ptr [r14 + 8]
416115: and byte ptr [rbp - 0x483], 0xef
41611c: add rax, 0xf
416120: and rax, 0xfffffffffffffff0
416124: lea rdx, [rax + 0x10]
416128: mov qword ptr [r14 + 8], rdx
41612c: fld xword ptr [rax]
41612e: fstp xword ptr [rbp - 0x4a0]
416134: jmp 0x414b10
416139: mov rax, qword ptr [r14 + 8]
41613d: and byte ptr [rbp - 0x483], 0xef
416144: add rax, 0xf
416148: and rax, 0xfffffffffffffff0
41614c: lea rdx, [rax + 0x10]
416150: mov qword ptr [r14 + 8], rdx
416154: fld xword ptr [rax]
416156: fstp xword ptr [rbp - 0x4a0]
41615c: jmp 0x4154e8
416161: nop dword ptr [rax]
416168: mov rdi, r11
41616b: mov dword ptr [rbp - 0x508], r9d
416172: mov dword ptr [rbp - 0x500], r10d
416179: mov qword ptr [rbp - 0x4e8], r11
416180: call 0x401180
416185: jmp 0x414682
41618a: nop word ptr [rax + rax]
416190: mov ebx, 6
416195: mov r15d, 6
41619b: lea r11, [rip + 0x7f76b]
4161a2: jmp 0x4146a6
4161a7: nop word ptr [rax + rax]
4161b0: mov rax, qword ptr [rbp - 0x4c8]
4161b7: lea r15, [rax + 2]
4161bb: movzx eax, byte ptr [rax + 2]
4161bf: sub eax, 0x30
4161c2: cmp eax, 9
4161c5: jbe 0x416b91
4161cb: mov eax, dword ptr [r14]
4161ce: cmp eax, 0x2f
4161d1: jbe 0x416784
4161d7: mov rdx, qword ptr [r14 + 8]
4161db: lea rax, [rdx + 8]
4161df: mov qword ptr [r14 + 8], rax
4161e3: mov eax, dword ptr [rdx]
4161e5: mov edx, 0xffffffff
4161ea: mov qword ptr [rbp - 0x4c8], r15
4161f1: test eax, eax
4161f3: cmovns edx, eax
4161f6: mov r8d, edx
4161f9: cmp r10d, 0x3c8
416200: mov eax, 0x3c8
416205: cmovge eax, r10d
416209: cmp eax, r8d
41620c: jge 0x414803
416212: cmp qword ptr [rbp - 0x4e0], 0
41621a: jne 0x416ef8
416220: cmp r8d, 0x7fffffde
416227: jg 0x414390
41622d: movsxd r15, r8d
416230: mov dword ptr [rbp - 0x544], r9d
416237: add r15, 0x20
41623b: mov dword ptr [rbp - 0x510], r10d
416242: mov rdi, r15
416245: mov dword ptr [rbp - 0x4f8], r11d
41624c: mov dword ptr [rbp - 0x4e0], r8d
416253: call 0x421200
416258: mov r8d, dword ptr [rbp - 0x4e0]
41625f: mov r11d, dword ptr [rbp - 0x4f8]
416266: test eax, eax
416268: mov r10d, dword ptr [rbp - 0x510]
41626f: mov r9d, dword ptr [rbp - 0x544]
416276: jne 0x416285
416278: cmp r15, 0x1000
41627f: ja 0x416fa5
416285: lea rax, [r15 + 0x17]
416289: mov rsi, rsp
41628c: mov rdx, rax
41628f: and rax, 0xfffffffffffff000
416295: sub rsi, rax
416298: and rdx, 0xfffffffffffffff0
41629c: mov rax, rsi
41629f: cmp rsp, rax
4162a2: je 0x4162b9
4162a4: sub rsp, 0x1000
4162ab: or qword ptr [rsp + 0xff8], 0
4162b4: cmp rsp, rax
4162b7: jne 0x4162a4
4162b9: and edx, 0xfff
4162bf: sub rsp, rdx
4162c2: test rdx, rdx
4162c5: je 0x4162cd
4162c7: or qword ptr [rsp + rdx - 8], 0
4162cd: mov qword ptr [rbp - 0x4e0], 0
4162d8: lea rax, [rsp + 0xf]
4162dd: and rax, 0xfffffffffffffff0
4162e1: add rax, r15
4162e4: mov qword ptr [rbp - 0x4f8], rax
4162eb: jmp 0x414803
4162f0: mov rsi, qword ptr [rbp - 0x4c8]
4162f7: lea rdx, [rsi + 2]
4162fb: mov rsi, qword ptr [rbp - 0x510]
416302: movzx ecx, byte ptr [rsi + 1]
416306: mov edi, ecx
416308: sub ecx, 0x30
41630b: cmp ecx, 9
41630e: jbe 0x41633b
416310: jmp 0x4143e7
416315: nop dword ptr [rax]
416318: lea eax, [rax + rax*4]
41631b: mov r15d, 0x7fffffff
416321: add eax, eax
416323: sub r15d, ecx
416326: cmp eax, r15d
416329: jg 0x416353
41632b: add eax, ecx
41632d: cmp esi, 9
416330: ja 0x4143de
416336: mov ecx, esi
416338: mov rdx, r10
41633b: movzx esi, byte ptr [rdx + 1]
41633f: lea r10, [rdx + 1]
416343: mov edi, esi
416345: sub esi, 0x30
416348: test eax, eax
41634a: js 0x41632d
41634c: cmp eax, 0xccccccc
416351: jle 0x416318
416353: cmp esi, 9
416356: ja 0x414da8
41635c: movzx ecx, byte ptr [rdx + 2]
416360: lea r10, [rdx + 2]
416364: sub ecx, 0x30
416367: cmp ecx, 9
41636a: ja 0x414da8
416370: mov eax, 0xffffffff
416375: jmp 0x416338
416377: nop word ptr [rax + rax]
416380: mov rdx, qword ptr [r14 + 8]
416384: lea rax, [rdx + 8]
416388: mov qword ptr [r14 + 8], rax
41638c: jmp 0x414d17
416391: mov rax, 0xffffffffffffffc0
416398: or r15d, 0x20
41639c: mov r9d, 0xffffffff
4163a2: mov dword ptr [r12], r15d
4163a6: mov dword ptr fs:[rax], 9
4163ad: jmp 0x414237
4163b2: cmp r8d, 5
4163b6: mov eax, 5
4163bb: lea r11, [rip + 0x7f51c]
4163c2: cmovl r8d, eax
4163c6: cmp r15b, 0x53
4163ca: jne 0x414662
4163d0: lea rax, [rip + 0x7f507]
4163d7: lea rbx, [rbp - 0x450]
4163de: mov qword ptr [rbp - 0x450], 0
4163e9: mov qword ptr [rbp - 0x490], rax
4163f0: jmp 0x415f92
4163f5: mov rax, 0xffffffffffffffa8
4163fc: mov rax, qword ptr fs:[rax]
416400: mov rax, qword ptr [rax]
416403: mov rdi, qword ptr [rax + 0x50]
416407: mov rsi, qword ptr [rax + 0x48]
41640b: movzx eax, byte ptr [rdi]
41640e: mov qword ptr [rbp - 0x538], rsi
416415: test al, al
416417: je 0x4167d8
41641d: cmp al, 0x7f
41641f: je 0x4167d8
416425: cmp byte ptr [rsi], 0
416428: mov eax, 0
41642d: cmovne rax, rdi
416431: mov qword ptr [rbp - 0x528], rax
416438: jmp 0x414bd2
41643d: mov edi, dword ptr [rbp - 0x518]
416443: test edi, edi
416445: je 0x41508f
41644b: mov rax, qword ptr [r12 + 0x28]
416450: cmp rax, qword ptr [r12 + 0x30]
416455: jae 0x416f6e
41645b: lea rdx, [rax + 1]
41645f: mov qword ptr [r12 + 0x28], rdx
416464: mov byte ptr [rax], 0x20
416467: jmp 0x41507e
41646c: movsxd rdx, ebx
41646f: mov esi, 0x20
416474: mov rdi, r12
416477: mov qword ptr [rbp - 0x508], r8
41647e: mov qword ptr [rbp - 0x4f8], rdx
416485: call 0x418850
41648a: mov rdx, qword ptr [rbp - 0x4f8]
416491: cmp rdx, rax
416494: jne 0x4142a8
41649a: mov r9d, dword ptr [rbp - 0x500]
4164a1: cmp r9d, 0x7ffffffe
4164a8: ja 0x417140
4164ae: mov eax, 0x7fffffff
4164b3: mov r8, qword ptr [rbp - 0x508]
4164ba: sub eax, r9d
4164bd: cmp eax, ebx
4164bf: jb 0x414da8
4164c5: add r9d, ebx
4164c8: jmp 0x4144d0
4164cd: mov rdx, qword ptr [r14 + 8]
4164d1: lea rax, [rdx + 8]
4164d5: mov qword ptr [r14 + 8], rax
4164d9: jmp 0x414e66
4164de: mov rdx, qword ptr [r14 + 8]
4164e2: lea rax, [rdx + 8]
4164e6: mov qword ptr [r14 + 8], rax
4164ea: jmp 0x41554a
4164ef: mov r11d, dword ptr [rbp - 0x500]
4164f6: test r11d, r11d
4164f9: jne 0x416a27
4164ff: cmp eax, 0x2f
416502: ja 0x416cb6
416508: mov edx, eax
41650a: add eax, 8
41650d: add rdx, qword ptr [r14 + 0x10]
416511: mov dword ptr [r14], eax
416514: movsxd r11, dword ptr [rdx]
416517: jmp 0x41554d
41651c: mov r8d, dword ptr [rbp - 0x500]
416523: test r8d, r8d
416526: jne 0x416a45
41652c: cmp eax, 0x2f
41652f: ja 0x416cd8
416535: mov edx, eax
416537: add eax, 8
41653a: add rdx, qword ptr [r14 + 0x10]
41653e: mov dword ptr [r14], eax
416541: mov rax, qword ptr [rdx]
416544: mov dword ptr [rax], r9d
416547: jmp 0x414550
41654c: movsxd rdx, r10d
41654f: mov esi, 0x20
416554: mov rdi, r12
416557: mov dword ptr [rbp - 0x4d8], r9d
41655e: mov qword ptr [rbp - 0x500], rdx
416565: mov qword ptr [rbp - 0x510], r11
41656c: mov dword ptr [rbp - 0x508], r10d
416573: call 0x418850
416578: mov rdx, qword ptr [rbp - 0x500]
41657f: cmp rdx, rax
416582: jne 0x4142a8
416588: mov r9d, dword ptr [rbp - 0x4d8]
41658f: cmp r9d, 0x7ffffffe
416596: ja 0x417140
41659c: mov r10d, dword ptr [rbp - 0x508]
4165a3: mov eax, 0x7fffffff
4165a8: mov r11, qword ptr [rbp - 0x510]
4165af: sub eax, r9d
4165b2: cmp eax, r10d
4165b5: jb 0x414da8
4165bb: add r9d, r10d
4165be: jmp 0x41589f
4165c3: movzx edx, byte ptr [rdx + 1]
4165c7: mov rax, qword ptr [rbp - 0x4c8]
4165ce: sub edx, 0x30
4165d1: add rax, 2
4165d5: cmp edx, 9
4165d8: jbe 0x416604
4165da: jmp 0x416f94
4165df: nop 
4165e0: lea r8d, [r8 + r8*4]
4165e4: mov edi, 0x7fffffff
4165e9: add r8d, r8d
4165ec: sub edi, edx
4165ee: cmp r8d, edi
4165f1: jg 0x41661d
4165f3: add r8d, edx
4165f6: cmp ecx, 9
4165f9: ja 0x4166fc
4165ff: mov edx, ecx
416601: mov rax, rsi
416604: movzx ecx, byte ptr [rax + 1]
416608: lea rsi, [rax + 1]
41660c: sub ecx, 0x30
41660f: test r8d, r8d
416612: js 0x4165f6
416614: cmp r8d, 0xccccccc
41661b: jle 0x4165e0
41661d: cmp ecx, 9
416620: ja 0x414da8
416626: movzx edx, byte ptr [rax + 2]
41662a: lea rsi, [rax + 2]
41662e: sub edx, 0x30
416631: cmp edx, 9
416634: ja 0x414da8
41663a: mov r8d, 0xffffffff
416640: jmp 0x416601
416642: mov dword ptr [rbp - 0x500], r9d
416649: mov qword ptr [rbp - 0x4f8], r11
416650: mov qword ptr [rbp - 0x4f0], rax
416657: mov qword ptr [rbp - 0x4e8], rcx
41665e: call 0x41b240
416663: mov r9d, dword ptr [rbp - 0x500]
41666a: mov r11, qword ptr [rbp - 0x4f8]
416671: mov rax, qword ptr [rbp - 0x4f0]
416678: mov rcx, qword ptr [rbp - 0x4e8]
41667f: jmp 0x415672
416684: mov dword ptr [rbp - 0x500], r9d
41668b: mov qword ptr [rbp - 0x4f8], r11
416692: mov qword ptr [rbp - 0x4e8], rcx
416699: call 0x41b240
41669e: mov r9d, dword ptr [rbp - 0x500]
4166a5: mov r11, qword ptr [rbp - 0x4f8]
4166ac: mov rcx, qword ptr [rbp - 0x4e8]
4166b3: jmp 0x415135
4166b8: mov rdx, qword ptr [r14 + 8]
4166bc: lea rax, [rdx + 8]
4166c0: mov qword ptr [r14 + 8], rax
4166c4: jmp 0x414b04
4166c9: mov rdx, qword ptr [r14 + 8]
4166cd: lea rax, [rdx + 8]
4166d1: mov qword ptr [r14 + 8], rax
4166d5: jmp 0x4154dc
4166da: mov rdx, qword ptr [r14 + 8]
4166de: lea rax, [rdx + 8]
4166e2: mov qword ptr [r14 + 8], rax
4166e6: jmp 0x415d43
4166eb: mov rdx, qword ptr [r14 + 8]
4166ef: lea rax, [rdx + 8]
4166f3: mov qword ptr [r14 + 8], rax
4166f7: jmp 0x4160cd
4166fc: mov qword ptr [rbp - 0x4c8], rsi
416703: cmp r8d, -1
416707: jne 0x4161f9
41670d: jmp 0x414da8
416712: nop word ptr [rax + rax]
416718: movsxd rbx, r10d
41671b: mov esi, 0x20
416720: mov rdi, r12
416723: mov dword ptr [rbp - 0x500], r9d
41672a: mov rdx, rbx
41672d: mov qword ptr [rbp - 0x4f0], r11
416734: mov dword ptr [rbp - 0x4e8], r10d
41673b: call 0x418850
416740: cmp rbx, rax
416743: jne 0x4142a8
416749: mov r9d, dword ptr [rbp - 0x500]
416750: cmp r9d, 0x7ffffffe
416757: ja 0x417140
41675d: mov r10d, dword ptr [rbp - 0x4e8]
416764: mov eax, 0x7fffffff
416769: mov r11, qword ptr [rbp - 0x4f0]
416770: sub eax, r9d
416773: cmp eax, r10d
416776: jb 0x414da8
41677c: add r9d, r10d
41677f: jmp 0x415933
416784: mov edx, eax
416786: add eax, 8
416789: add rdx, qword ptr [r14 + 0x10]
41678d: mov dword ptr [r14], eax
416790: jmp 0x4161e3
416795: mov rdi, r13
416798: mov dword ptr [rbp - 0x4f0], r9d
41679f: call 0x401180
4167a4: mov rdi, r13
4167a7: lea rsi, [rax + 1]
4167ab: call 0x454590
4167b0: mov r9d, dword ptr [rbp - 0x4f0]
4167b7: test eax, eax
4167b9: mov dword ptr [rbp - 0x540], eax
4167bf: jns 0x414e3e
4167c5: lea rdi, [rip + 0x7f1f4]
4167cc: call 0x41b220
4167d1: nop dword ptr [rax]
4167d8: mov qword ptr [rbp - 0x528], 0
4167e3: jmp 0x414bd2
4167e8: lea rsi, [rbp - 0x490]
4167ef: mov rcx, rbx
4167f2: xor edx, edx
4167f4: xor edi, edi
4167f6: mov dword ptr [rbp - 0x510], r9d
4167fd: mov dword ptr [rbp - 0x508], r10d
416804: mov qword ptr [rbp - 0x500], r11
41680b: mov qword ptr [rbp - 0x4e8], rsi
416812: call 0x44f240
416817: mov r15, rax
41681a: cmp rax, -1
41681e: je 0x4142a8
416824: mov eax, dword ptr [rbp - 0x450]
41682a: mov rsi, qword ptr [rbp - 0x4e8]
416831: mov r11, qword ptr [rbp - 0x500]
416838: mov r10d, dword ptr [rbp - 0x508]
41683f: test eax, eax
416841: mov dword ptr [rbp - 0x4f8], eax
416847: mov r9d, dword ptr [rbp - 0x510]
41684e: jne 0x417175
416854: lea rdx, [r15 + 1]
416858: mov qword ptr [rbp - 0x510], rsi
41685f: mov rdi, rdx
416862: mov dword ptr [rbp - 0x508], r9d
416869: mov dword ptr [rbp - 0x500], r10d
416870: mov qword ptr [rbp - 0x4e8], rdx
416877: mov qword ptr [rbp - 0x490], r11
41687e: call 0x421200
416883: mov rdx, qword ptr [rbp - 0x4e8]
41688a: mov r10d, dword ptr [rbp - 0x500]
416891: mov r9d, dword ptr [rbp - 0x508]
416898: mov rsi, qword ptr [rbp - 0x510]
41689f: cmp rdx, 0x1000
4168a6: jbe 0x4168b0
4168a8: test eax, eax
4168aa: je 0x417194
4168b0: lea rax, [rdx + 0x17]
4168b4: mov rdi, rsp
4168b7: mov rcx, rax
4168ba: and rax, 0xfffffffffffff000
4168c0: sub rdi, rax
4168c3: and rcx, 0xfffffffffffffff0
4168c7: mov rax, rdi
4168ca: cmp rsp, rax
4168cd: je 0x4168e4
4168cf: sub rsp, 0x1000
4168d6: or qword ptr [rsp + 0xff8], 0
4168df: cmp rsp, rax
4168e2: jne 0x4168cf
4168e4: and ecx, 0xfff
4168ea: sub rsp, rcx
4168ed: test rcx, rcx
4168f0: je 0x4168f8
4168f2: or qword ptr [rsp + rcx - 8], 0
4168f8: lea r8, [rsp + 0xf]
4168fd: mov r11, r8
416900: and r11, 0xfffffffffffffff0
416904: mov rdi, r11
416907: mov rcx, rbx
41690a: mov dword ptr [rbp - 0x508], r9d
416911: mov dword ptr [rbp - 0x500], r10d
416918: mov qword ptr [rbp - 0x4e8], r11
41691f: call 0x44f240
416924: mov r9d, dword ptr [rbp - 0x508]
41692b: mov r10d, dword ptr [rbp - 0x500]
416932: mov r11, qword ptr [rbp - 0x4e8]
416939: jmp 0x416082
41693e: movsxd rdx, ebx
416941: mov esi, 0x20
416946: mov rdi, r12
416949: mov dword ptr [rbp - 0x4f8], r9d
416950: mov qword ptr [rbp - 0x4e8], rdx
416957: call 0x418850
41695c: mov rdx, qword ptr [rbp - 0x4e8]
416963: cmp rdx, rax
416966: jne 0x4142a8
41696c: mov r9d, dword ptr [rbp - 0x4f8]
416973: cmp r9d, 0x7ffffffe
41697a: ja 0x417140
416980: mov eax, 0x7fffffff
416985: sub eax, r9d
416988: cmp eax, ebx
41698a: jb 0x414da8
416990: add r9d, ebx
416993: jmp 0x414cff
416998: mov rax, 0xffffffffffffffc0
41699f: mov r9d, 0xffffffff
4169a5: mov dword ptr fs:[rax], 0x16
4169ac: jmp 0x414237
4169b1: mov dword ptr [rbp - 0x4d8], r9d
4169b8: mov qword ptr [rbp - 0x510], rax
4169bf: mov dword ptr [rbp - 0x508], r10d
4169c6: mov qword ptr [rbp - 0x500], r11
4169cd: call 0x41b240
4169d2: mov r9d, dword ptr [rbp - 0x4d8]
4169d9: mov rax, qword ptr [rbp - 0x510]
4169e0: mov r10d, dword ptr [rbp - 0x508]
4169e7: mov r11, qword ptr [rbp - 0x500]
4169ee: jmp 0x4158c7
4169f3: mov qword ptr [rbp - 0x508], r8
4169fa: mov dword ptr [rbp - 0x500], r9d
416a01: mov qword ptr [rbp - 0x4f8], rax
416a08: call 0x41b240
416a0d: mov r8, qword ptr [rbp - 0x508]
416a14: mov r9d, dword ptr [rbp - 0x500]
416a1b: mov rax, qword ptr [rbp - 0x4f8]
416a22: jmp 0x4144f8
416a27: cmp eax, 0x2f
416a2a: ja 0x416ce9
416a30: mov edx, eax
416a32: add eax, 8
416a35: add rdx, qword ptr [r14 + 0x10]
416a39: mov dword ptr [r14], eax
416a3c: movsx r11, word ptr [rdx]
416a40: jmp 0x41554d
416a45: cmp eax, 0x2f
416a48: ja 0x416cc7
416a4e: mov edx, eax
416a50: add eax, 8
416a53: add rdx, qword ptr [r14 + 0x10]
416a57: mov dword ptr [r14], eax
416a5a: mov rax, qword ptr [rdx]
416a5d: mov word ptr [rax], r9w
416a61: jmp 0x414550
416a66: mov rdx, qword ptr [r14 + 8]
416a6a: lea rax, [rdx + 8]
416a6e: mov qword ptr [r14 + 8], rax
416a72: jmp 0x415f33
416a77: mov rax, qword ptr [r14 + 8]
416a7b: add rax, 0xf
416a7f: and rax, 0xfffffffffffffff0
416a83: lea rdx, [rax + 0x10]
416a87: mov qword ptr [r14 + 8], rdx
416a8b: jmp 0x415e52
416a90: mov rax, qword ptr [r14 + 8]
416a94: add rax, 0xf
416a98: and rax, 0xfffffffffffffff0
416a9c: lea rdx, [rax + 0x10]
416aa0: mov qword ptr [r14 + 8], rdx
416aa4: jmp 0x415e9a
416aa9: mov rdx, qword ptr [r14 + 8]
416aad: lea rax, [rdx + 8]
416ab1: mov qword ptr [r14 + 8], rax
416ab5: jmp 0x415f05
416aba: mov dword ptr [rbp - 0x4d8], r9d
416ac1: mov esi, 0x2d
416ac6: mov dword ptr [rbp - 0x508], r8d
416acd: mov dword ptr [rbp - 0x4f8], r10d
416ad4: mov qword ptr [rbp - 0x4f0], r11
416adb: mov qword ptr [rbp - 0x4e8], rcx
416ae2: mov rdi, r12
416ae5: call 0x41e8a0
416aea: mov rcx, qword ptr [rbp - 0x4e8]
416af1: mov r11, qword ptr [rbp - 0x4f0]
416af8: cmp eax, -1
416afb: mov r10d, dword ptr [rbp - 0x4f8]
416b02: mov r8d, dword ptr [rbp - 0x508]
416b09: mov r9d, dword ptr [rbp - 0x4d8]
416b10: jne 0x4155aa
416b16: jmp 0x4142a8
416b1b: nop dword ptr [rax + rax]
416b20: mov dword ptr [rbp - 0x4d8], r9d
416b27: mov esi, 0x2d
416b2c: mov dword ptr [rbp - 0x508], r8d
416b33: mov qword ptr [rbp - 0x4f8], r11
416b3a: mov qword ptr [rbp - 0x4e8], rcx
416b41: mov rdi, r12
416b44: call 0x41e8a0
416b49: mov rcx, qword ptr [rbp - 0x4e8]
416b50: mov r11, qword ptr [rbp - 0x4f8]
416b57: cmp eax, -1
416b5a: mov r8d, dword ptr [rbp - 0x508]
416b61: mov r9d, dword ptr [rbp - 0x4d8]
416b68: jne 0x41507e
416b6e: jmp 0x4142a8
416b73: nop dword ptr [rax + rax]
416b78: cmp r10d, 0x7fffffde
416b7f: ja 0x414da8
416b85: mov qword ptr [rbp - 0x4c8], rax
416b8c: jmp 0x415cca
416b91: movzx ecx, byte ptr [r15 + 1]
416b96: mov rdx, qword ptr [rbp - 0x4c8]
416b9d: mov r8d, ecx
416ba0: sub ecx, 0x30
416ba3: add rdx, 3
416ba7: cmp ecx, 9
416baa: ja 0x416c21
416bac: mov qword ptr [rbp - 0x4c8], r15
416bb3: jmp 0x416bd4
416bb5: lea eax, [rax + rax*4]
416bb8: mov r15d, 0x7fffffff
416bbe: add eax, eax
416bc0: sub r15d, ecx
416bc3: cmp eax, r15d
416bc6: jg 0x416bed
416bc8: add eax, ecx
416bca: cmp esi, 9
416bcd: ja 0x416c11
416bcf: mov ecx, esi
416bd1: mov rdx, rdi
416bd4: movzx esi, byte ptr [rdx + 1]
416bd8: lea rdi, [rdx + 1]
416bdc: mov r8d, esi
416bdf: sub esi, 0x30
416be2: test eax, eax
416be4: js 0x416bca
416be6: cmp eax, 0xccccccc
416beb: jle 0x416bb5
416bed: cmp esi, 9
416bf0: ja 0x414da8
416bf6: movzx ecx, byte ptr [rdx + 2]
416bfa: lea rdi, [rdx + 2]
416bfe: sub ecx, 0x30
416c01: cmp ecx, 9
416c04: ja 0x414da8
416c0a: mov eax, 0xffffffff
416c0f: jmp 0x416bd1
416c11: mov r15, qword ptr [rbp - 0x4c8]
416c18: cmp eax, -1
416c1b: je 0x414da8
416c21: test eax, eax
416c23: je 0x4161cb
416c29: cmp r8b, 0x24
416c2d: jne 0x4161cb
416c33: jmp 0x414400
416c38: nop dword ptr [rax + rax]
416c40: xor r11d, r11d
416c43: xor edx, edx
416c45: jmp 0x414a4f
416c4a: mov esi, 0x25
416c4f: mov rdi, r12
416c52: mov dword ptr [rbp - 0x4e8], r9d
416c59: call 0x41e8a0
416c5e: mov r9d, dword ptr [rbp - 0x4e8]
416c65: cmp eax, -1
416c68: jne 0x415210
416c6e: jmp 0x4142a8
416c73: nop dword ptr [rax + rax]
416c78: xor r11d, r11d
416c7b: xor edx, edx
416c7d: jmp 0x415417
416c82: mov dword ptr [rbp - 0x4f8], r9d
416c89: mov qword ptr [rbp - 0x4f0], rcx
416c90: mov qword ptr [rbp - 0x4e8], r11
416c97: call 0x41b240
416c9c: mov r9d, dword ptr [rbp - 0x4f8]
416ca3: mov rcx, qword ptr [rbp - 0x4f0]
416caa: mov r11, qword ptr [rbp - 0x4e8]
416cb1: jmp 0x4146d7
416cb6: mov rdx, qword ptr [r14 + 8]
416cba: lea rax, [rdx + 8]
416cbe: mov qword ptr [r14 + 8], rax
416cc2: jmp 0x416514
416cc7: mov rdx, qword ptr [r14 + 8]
416ccb: lea rax, [rdx + 8]
416ccf: mov qword ptr [r14 + 8], rax
416cd3: jmp 0x416a5a
416cd8: mov rdx, qword ptr [r14 + 8]
416cdc: lea rax, [rdx + 8]
416ce0: mov qword ptr [r14 + 8], rax
416ce4: jmp 0x416541
416ce9: mov rdx, qword ptr [r14 + 8]
416ced: lea rax, [rdx + 8]
416cf1: mov qword ptr [r14 + 8], rax
416cf5: jmp 0x416a3c
416cfa: movzx esi, dl
416cfd: mov rdi, r12
416d00: mov dword ptr [rbp - 0x4e8], r9d
416d07: call 0x41e8a0
416d0c: mov r9d, dword ptr [rbp - 0x4e8]
416d13: cmp eax, -1
416d16: jne 0x414d34
416d1c: jmp 0x4142a8
416d21: nop dword ptr [rax]
416d28: mov dword ptr [rbp - 0x4d8], r9d
416d2f: mov esi, 0x2b
416d34: mov dword ptr [rbp - 0x508], r8d
416d3b: mov dword ptr [rbp - 0x4f8], r10d
416d42: mov qword ptr [rbp - 0x4f0], r11
416d49: mov qword ptr [rbp - 0x4e8], rcx
416d50: jmp 0x416ae2
416d55: mov esi, 0x30
416d5a: mov rdi, r12
416d5d: mov dword ptr [rbp - 0x508], r9d
416d64: mov dword ptr [rbp - 0x500], r8d
416d6b: mov dword ptr [rbp - 0x4f8], r10d
416d72: mov qword ptr [rbp - 0x4f0], r11
416d79: mov qword ptr [rbp - 0x4e8], rcx
416d80: call 0x41e8a0
416d85: mov rcx, qword ptr [rbp - 0x4e8]
416d8c: mov r11, qword ptr [rbp - 0x4f0]
416d93: cmp eax, -1
416d96: mov r10d, dword ptr [rbp - 0x4f8]
416d9d: mov r8d, dword ptr [rbp - 0x500]
416da4: mov r9d, dword ptr [rbp - 0x508]
416dab: jne 0x4155f8
416db1: jmp 0x4142a8
416db6: nop word ptr cs:[rax + rax]
416dc0: movzx esi, r15b
416dc4: mov rdi, r12
416dc7: mov dword ptr [rbp - 0x508], r9d
416dce: mov dword ptr [rbp - 0x500], r8d
416dd5: mov dword ptr [rbp - 0x4f8], r10d
416ddc: mov qword ptr [rbp - 0x4f0], r11
416de3: mov qword ptr [rbp - 0x4e8], rcx
416dea: call 0x41e8a0
416def: mov rcx, qword ptr [rbp - 0x4e8]
416df6: mov r11, qword ptr [rbp - 0x4f0]
416dfd: cmp eax, -1
416e00: mov r10d, dword ptr [rbp - 0x4f8]
416e07: mov r8d, dword ptr [rbp - 0x500]
416e0e: mov r9d, dword ptr [rbp - 0x508]
416e15: jne 0x415621
416e1b: jmp 0x4142a8
416e20: mov dword ptr [rbp - 0x4d8], r9d
416e27: mov esi, 0x2b
416e2c: mov dword ptr [rbp - 0x508], r8d
416e33: mov qword ptr [rbp - 0x4f8], r11
416e3a: mov qword ptr [rbp - 0x4e8], rcx
416e41: jmp 0x416b41
416e46: movzx esi, r15b
416e4a: mov rdi, r12
416e4d: mov dword ptr [rbp - 0x508], r9d
416e54: mov dword ptr [rbp - 0x500], r8d
416e5b: mov qword ptr [rbp - 0x4f8], r11
416e62: mov qword ptr [rbp - 0x4e8], rcx
416e69: call 0x41e8a0
416e6e: mov rcx, qword ptr [rbp - 0x4e8]
416e75: mov r11, qword ptr [rbp - 0x4f8]
416e7c: cmp eax, -1
416e7f: mov r8d, dword ptr [rbp - 0x500]
416e86: mov r9d, dword ptr [rbp - 0x508]
416e8d: jne 0x4150f1
416e93: jmp 0x4142a8
416e98: nop dword ptr [rax + rax]
416ea0: mov esi, 0x30
416ea5: mov rdi, r12
416ea8: mov dword ptr [rbp - 0x508], r9d
416eaf: mov dword ptr [rbp - 0x500], r8d
416eb6: mov qword ptr [rbp - 0x4f8], r11
416ebd: mov qword ptr [rbp - 0x4e8], rcx
416ec4: call 0x41e8a0
416ec9: mov rcx, qword ptr [rbp - 0x4e8]
416ed0: mov r11, qword ptr [rbp - 0x4f8]
416ed7: cmp eax, -1
416eda: mov r8d, dword ptr [rbp - 0x500]
416ee1: mov r9d, dword ptr [rbp - 0x508]
416ee8: jne 0x4150c8
416eee: jmp 0x4142a8
416ef3: nop dword ptr [rax + rax]
416ef8: mov rdi, qword ptr [rbp - 0x4e0]
416eff: mov dword ptr [rbp - 0x554], r9d
416f06: mov dword ptr [rbp - 0x544], r8d
416f0d: mov dword ptr [rbp - 0x510], r10d
416f14: mov dword ptr [rbp - 0x4f8], r11d
416f1b: call 0x426a00
416f20: mov r9d, dword ptr [rbp - 0x554]
416f27: mov r8d, dword ptr [rbp - 0x544]
416f2e: mov r10d, dword ptr [rbp - 0x510]
416f35: mov r11d, dword ptr [rbp - 0x4f8]
416f3c: jmp 0x416220
416f41: mov dword ptr [rbp - 0x4d8], r9d
416f48: mov esi, 0x20
416f4d: mov dword ptr [rbp - 0x508], r8d
416f54: mov dword ptr [rbp - 0x4f8], r10d
416f5b: mov qword ptr [rbp - 0x4f0], r11
416f62: mov qword ptr [rbp - 0x4e8], rcx
416f69: jmp 0x416ae2
416f6e: mov dword ptr [rbp - 0x4d8], r9d
416f75: mov esi, 0x20
416f7a: mov dword ptr [rbp - 0x508], r8d
416f81: mov qword ptr [rbp - 0x4f8], r11
416f88: mov qword ptr [rbp - 0x4e8], rcx
416f8f: jmp 0x416b41
416f94: mov qword ptr [rbp - 0x4c8], rax
416f9b: jmp 0x414803
416fa0: call 0x4547a0
416fa5: mov rdi, r15
416fa8: mov dword ptr [rbp - 0x554], r9d
416faf: mov dword ptr [rbp - 0x544], r8d
416fb6: call 0x426410
416fbb: mov r11d, dword ptr [rbp - 0x4f8]
416fc2: mov r10d, dword ptr [rbp - 0x510]
416fc9: test rax, rax
416fcc: mov qword ptr [rbp - 0x4e0], rax
416fd3: mov r8d, dword ptr [rbp - 0x544]
416fda: mov r9d, dword ptr [rbp - 0x554]
416fe1: je 0x4142c0
416fe7: add r15, qword ptr [rbp - 0x4e0]
416fee: mov qword ptr [rbp - 0x4f8], r15
416ff5: jmp 0x414803
416ffa: lea rcx, [rip + 0x7ea9f]
417001: mov edx, 0x697
417006: lea rsi, [rip + 0x7e8d7]
41700d: lea rdi, [rip + 0x7e984]
417014: call 0x4032a0
417019: lea rcx, [rip + 0x7ea80]
417020: mov edx, 0x6b7
417025: lea rsi, [rip + 0x7e8b8]
41702c: lea rdi, [rip + 0x7e965]
417033: call 0x4032a0
417038: mov rdi, r15
41703b: mov dword ptr [rbp - 0x544], r10d
417042: mov dword ptr [rbp - 0x4f8], r11d
417049: call 0x426410
41704e: mov r11d, dword ptr [rbp - 0x4f8]
417055: mov r10d, dword ptr [rbp - 0x544]
41705c: test rax, rax
41705f: mov qword ptr [rbp - 0x4e0], rax
417066: mov r8d, dword ptr [rbp - 0x554]
41706d: mov r9d, dword ptr [rbp - 0x558]
417074: je 0x4142c0
41707a: add r15, qword ptr [rbp - 0x4e0]
417081: mov qword ptr [rbp - 0x4f8], r15
417088: jmp 0x4149f7
41708d: mov rdi, r15
417090: mov dword ptr [rbp - 0x500], r9d
417097: call 0x426410
41709c: mov r11, rax
41709f: test rax, rax
4170a2: je 0x4142a8
4170a8: mov r10d, dword ptr [rbp - 0x4e8]
4170af: mov r9d, dword ptr [rbp - 0x500]
4170b6: mov dword ptr [rbp - 0x4f8], 1
4170c0: jmp 0x416036
4170c5: mov rdi, rdx
4170c8: mov dword ptr [rbp - 0x544], r10d
4170cf: mov dword ptr [rbp - 0x510], r11d
4170d6: call 0x426410
4170db: mov rdx, qword ptr [rbp - 0x4f8]
4170e2: mov r11d, dword ptr [rbp - 0x510]
4170e9: test rax, rax
4170ec: mov qword ptr [rbp - 0x4e0], rax
4170f3: mov r10d, dword ptr [rbp - 0x544]
4170fa: mov r8d, dword ptr [rbp - 0x554]
417101: mov r9d, dword ptr [rbp - 0x558]
417108: je 0x4142c0
41710e: add rdx, qword ptr [rbp - 0x4e0]
417115: mov qword ptr [rbp - 0x4f8], rdx
41711c: jmp 0x415cca
417121: lea rcx, [rip + 0x7e978]
417128: mov edx, 0x698
41712d: lea rsi, [rip + 0x7e7b0]
417134: lea rdi, [rip + 0x7e85d]
41713b: call 0x4032a0
417140: lea rcx, [rip + 0x7e959]
417147: mov edx, 0x698
41714c: lea rsi, [rip + 0x7e791]
417153: lea rdi, [rip + 0x7e80e]
41715a: call 0x4032a0
41715f: xor ebx, ebx
417161: jmp 0x41508f
417166: test ebx, ebx
417168: jg 0x415985
41716e: xor ebx, ebx
417170: jmp 0x415054
417175: lea rcx, [rip + 0x7e924]
41717c: mov edx, 0x698
417181: lea rsi, [rip + 0x7e75c]
417188: lea rdi, [rip + 0x7e769]
41718f: call 0x4032a0
417194: mov rdi, rdx
417197: call 0x426410
41719c: mov r11, rax
41719f: test rax, rax
4171a2: je 0x4142a8
4171a8: mov rdx, qword ptr [rbp - 0x4e8]
4171af: mov r10d, dword ptr [rbp - 0x500]
4171b6: mov dword ptr [rbp - 0x4f8], 1
4171c0: mov r9d, dword ptr [rbp - 0x508]
4171c7: mov rsi, qword ptr [rbp - 0x510]
4171ce: jmp 0x416904
4171d3: nop word ptr cs:[rax + rax]
4171de: nop 
4171e0: push r14
4171e2: push r13
4171e4: push r12
4171e6: push rbp
4171e7: push rbx
4171e8: sub rsp, 0x1000
4171ef: or qword ptr [rsp], 0
4171f4: sub rsp, 0x1000
4171fb: or qword ptr [rsp], 0
417200: sub rsp, 0x130
417207: mov rax, qword ptr fs:[0x28]
417210: mov qword ptr [rsp + 0x2128], rax
417218: xor eax, eax
41721a: mov eax, dword ptr [rdi + 0xc0]
417220: mov rbx, rdi
417223: test eax, eax
417225: jne 0x4173f0
41722b: mov dword ptr [rdi + 0xc0], 0xffffffff
417235: lea rax, [rsp + 0x120]
41723d: lea rdi, [rsp + 0x20]
417242: mov qword ptr [rsp + 0x100], rbx
41724a: movq xmm0, rax
41724f: lea rax, [rsp + 0x2120]
417257: mov dword ptr [rsp + 0xe0], 0xffffffff
417262: mov qword ptr [rsp + 0x50], rax
417267: mov eax, dword ptr [rbx + 0x74]
41726a: punpcklqdq xmm0, xmm0
41726e: mov dword ptr [rsp + 0x20], 0xfbad8004
417276: mov dword ptr [rsp + 0x94], eax
41727d: lea rax, [rip + 0xaa8dc]
417284: mov qword ptr [rsp + 0xa8], 0
417290: mov qword ptr [rsp + 0xf8], rax
417298: movaps xmmword ptr [rsp + 0x40], xmm0
41729d: call 0x413e90
4172a2: mov rbp, 0
4172a9: mov r12d, eax
4172ac: test rbp, rbp
4172af: je 0x417408
4172b5: mov rsi, 0x46caa0
4172bc: mov rdi, rsp
4172bf: mov rdx, rbx
4172c2: call 0
4172c7: mov edx, dword ptr [rbx]
4172c9: and edx, 0x8000
4172cf: je 0x417398
4172d5: mov rsi, qword ptr [rsp + 0x40]
4172da: mov rax, qword ptr [rsp + 0x48]
4172df: sub rax, rsi
4172e2: mov r13d, eax
4172e5: test eax, eax
4172e7: jle 0x41735b
4172e9: mov r14, qword ptr [rbx + 0xd8]
4172f0: mov rdx, 0x4c1b60
4172f7: mov rax, 0x4c2208
4172fe: mov rcx, r14
417301: sub rax, rdx
417304: sub rcx, rdx
417307: cmp rax, rcx
41730a: jbe 0x417420
417310: movsxd rdx, r13d
417313: mov rdi, rbx
417316: call qword ptr [r14 + 0x38]
41731a: cmp r13d, eax
41731d: mov eax, 0xffffffff
417322: cmovne r12d, eax
417326: test dword ptr [rbx], 0x8000
41732c: jne 0x41735b
41732e: mov rdi, qword ptr [rbx + 0x88]
417335: mov eax, dword ptr [rdi + 4]
417338: sub eax, 1
41733b: mov dword ptr [rdi + 4], eax
41733e: jne 0x41735b
417340: mov qword ptr [rdi + 8], 0
417348: mov edx, dword ptr fs:[0x18]
417350: test edx, edx
417352: jne 0x417450
417358: sub dword ptr [rdi], 1
41735b: test rbp, rbp
41735e: je 0x41736a
417360: mov rdi, rsp
417363: xor esi, esi
417365: call 0
41736a: mov rax, qword ptr [rsp + 0x2128]
417372: xor rax, qword ptr fs:[0x28]
41737b: jne 0x417474
417381: add rsp, 0x2130
417388: mov eax, r12d
41738b: pop rbx
41738c: pop rbp
41738d: pop r12
41738f: pop r13
417391: pop r14
417393: ret 
417394: nop dword ptr [rax]
417398: mov rdi, qword ptr [rbx + 0x88]
41739f: mov r13, qword ptr fs:[0x10]
4173a8: cmp qword ptr [rdi + 8], r13
4173ac: je 0x4173cd
4173ae: mov eax, dword ptr fs:[0x18]
4173b6: test eax, eax
4173b8: jne 0x417430
4173ba: mov edx, 1
4173bf: cmpxchg dword ptr [rdi], edx
4173c2: mov rdi, qword ptr [rbx + 0x88]
4173c9: mov qword ptr [rdi + 8], r13
4173cd: mov rsi, qword ptr [rsp + 0x40]
4173d2: mov rax, qword ptr [rsp + 0x48]
4173d7: add dword ptr [rdi + 4], 1
4173db: sub rax, rsi
4173de: mov r13d, eax
4173e1: test eax, eax
4173e3: jg 0x4172e9
4173e9: jmp 0x417326
4173ee: nop 
4173f0: cmp eax, -1
4173f3: je 0x417235
4173f9: mov r12d, 0xffffffff
4173ff: jmp 0x41736a
417404: nop dword ptr [rax]
417408: mov rax, 0x46caa0
41740f: mov qword ptr [rsp + 8], rbx
417414: mov qword ptr [rsp], rax
417418: jmp 0x4172c7
41741d: nop dword ptr [rax]
417420: call 0x41b240
417425: mov rsi, qword ptr [rsp + 0x40]
41742a: jmp 0x417310
41742f: nop 
417430: mov ecx, 1
417435: mov eax, edx
417437: lock cmpxchg dword ptr [rdi], ecx
41743b: je 0x4173c2
417441: call 0x421250
417446: jmp 0x4173c2
41744b: nop dword ptr [rax + rax]
417450: xchg dword ptr [rdi], eax
417452: cmp eax, 1
417455: jle 0x41735b
41745b: xor r10d, r10d
41745e: mov edx, 1
417463: mov esi, 0x81
417468: mov eax, 0xca
41746d: syscall 
41746f: jmp 0x41735b
417474: call 0x4547a0
417479: nop dword ptr [rax]
417480: endbr64 
417484: push r13
417486: push r12
417488: push rbp
417489: mov rbp, rsi
41748c: push rbx
41748d: mov rbx, rdx
417490: lea rdx, [rdi + 1]
417494: sub rsp, 0x18
417498: mov dword ptr [rbx + 0x30], 0xffffffff
41749f: and word ptr [rbx + 0xc], 0xe207
4174a5: mov qword ptr [rsp + 8], rdx
4174aa: mov dword ptr [rbx + 0x10], 0x20
4174b1: movzx esi, byte ptr [rdi + 1]
4174b5: mov eax, esi
4174b7: sub esi, 0x30
4174ba: cmp esi, 9
4174bd: jbe 0x417760
4174c3: lea rsi, [rip + 0x7e5ea]
4174ca: nop word ptr [rax + rax]
4174d0: sub eax, 0x20
4174d3: cmp al, 0x29
4174d5: ja 0x417500
4174d7: movzx eax, al
4174da: movsxd rax, dword ptr [rsi + rax*4]
4174de: add rax, rsi
4174e1: notrack jmp rax
4174e4: nop dword ptr [rax]
4174e8: or byte ptr [rbx + 0xd], 8
4174ec: nop dword ptr [rax]
4174f0: add rdx, 1
4174f4: mov qword ptr [rsp + 8], rdx
4174f9: movzx eax, byte ptr [rdx]
4174fc: test al, al
4174fe: jne 0x4174d0
417500: test byte ptr [rbx + 0xc], 0x20
417504: je 0x41750d
417506: mov dword ptr [rbx + 0x10], 0x20
41750d: mov dword ptr [rbx + 0x2c], 0xffffffff
417514: mov dword ptr [rbx + 4], 0
41751b: movzx eax, byte ptr [rdx]
41751e: cmp al, 0x2a
417520: je 0x417720
417526: sub eax, 0x30
417529: mov r8d, 1
41752f: xor r12d, r12d
417532: cmp eax, 9
417535: jbe 0x417650
41753b: mov dword ptr [rbx + 0x28], 0xffffffff
417542: mov dword ptr [rbx], 0xffffffff
417548: cmp byte ptr [rdx], 0x2e
41754b: je 0x4176f0
417551: mov rax, qword ptr [rip + 0xac3f8]
417558: and dword ptr [rbx + 0xc], 0xfdf8
41755f: test rax, rax
417562: jne 0x417ab0
417568: lea rcx, [rdx + 1]
41756c: mov qword ptr [rsp + 8], rcx
417571: movzx eax, byte ptr [rdx]
417574: sub eax, 0x4c
417577: cmp al, 0x2e
417579: ja 0x4175a0
41757b: lea rsi, [rip + 0x7e5da]
417582: movzx eax, al
417585: movsxd rax, dword ptr [rsi + rax*4]
417589: add rax, rsi
41758c: notrack jmp rax
41758f: mov rdx, rcx
417592: or byte ptr [rbx + 0xc], 1
417596: lea rcx, [rdx + 1]
41759a: nop word ptr [rax + rax]
4175a0: mov qword ptr [rsp + 8], rcx
4175a5: movzx edx, byte ptr [rdx]
4175a8: cmp qword ptr [rip + 0xac398], 0
4175b0: mov dword ptr [rbx + 0x40], 0xffffffff
4175b7: mov dword ptr [rbx + 8], edx
4175ba: jne 0x417ae0
4175c0: lea eax, [rdx - 0x41]
4175c3: mov qword ptr [rbx + 0x38], 1
4175cb: mov esi, dword ptr [rbx + 0x30]
4175ce: cmp eax, 0x37
4175d1: ja 0x417820
4175d7: lea rcx, [rip + 0x7e63a]
4175de: movsxd rax, dword ptr [rcx + rax*4]
4175e2: add rax, rcx
4175e5: notrack jmp rax
4175e8: nop dword ptr [rax + rax]
4175f0: mov dword ptr [rbx + 0x10], 0x30
4175f7: jmp 0x4174f0
4175fc: nop dword ptr [rax]
417600: or byte ptr [rbx + 0xc], 0x20
417604: jmp 0x4174f0
417609: nop dword ptr [rax]
417610: or byte ptr [rbx + 0xc], 0x40
417614: jmp 0x4174f0
417619: nop dword ptr [rax]
417620: or byte ptr [rbx + 0xc], 0x80
417624: jmp 0x4174f0
417629: nop dword ptr [rax]
417630: or byte ptr [rbx + 0xc], 8
417634: jmp 0x4174f0
417639: nop dword ptr [rax]
417640: or byte ptr [rbx + 0xc], 0x10
417644: jmp 0x4174f0
417649: nop dword ptr [rax]
417650: lea rsi, [rdx + 1]
417654: mov qword ptr [rsp + 8], rsi
417659: movzx edx, byte ptr [rdx + 1]
41765d: sub edx, 0x30
417660: cmp edx, 9
417663: ja 0x4176d0
417665: mov r10d, 0xffffffff
41766b: mov r9d, 0x7fffffff
417671: jmp 0x4176a1
417673: nop dword ptr [rax + rax]
417678: lea edi, [rax + rax*4]
41767b: mov r8d, r9d
41767e: add edi, edi
417680: sub r8d, edx
417683: lea eax, [rdx + rdi]
417686: cmp edi, r8d
417689: cmovg eax, r10d
41768d: add rsi, 1
417691: mov qword ptr [rsp + 8], rsi
417696: movzx edx, byte ptr [rsi]
417699: sub edx, 0x30
41769c: cmp edx, 9
41769f: ja 0x4176d0
4176a1: test eax, eax
4176a3: js 0x41768d
4176a5: cmp eax, 0xccccccc
4176aa: jle 0x417678
4176ac: mov eax, 0xffffffff
4176b1: jmp 0x41768d
4176b3: nop dword ptr [rax + rax]
4176b8: or byte ptr [rbx + 0xc], 4
4176bc: lea rax, [rdx + 2]
4176c0: mov rdx, rcx
4176c3: mov rcx, rax
4176c6: jmp 0x4175a0
4176cb: nop dword ptr [rax + rax]
4176d0: cmp eax, -1
4176d3: je 0x417910
4176d9: mov dword ptr [rbx + 4], eax
4176dc: mov rdx, rsi
4176df: mov r8d, 1
4176e5: xor r12d, r12d
4176e8: jmp 0x41753b
4176ed: nop dword ptr [rax]
4176f0: lea rsi, [rdx + 1]
4176f4: mov qword ptr [rsp + 8], rsi
4176f9: movzx eax, byte ptr [rdx + 1]
4176fd: cmp al, 0x2a
4176ff: je 0x4179d0
417705: sub eax, 0x30
417708: cmp eax, 9
41770b: jbe 0x417898
417711: mov dword ptr [rbx], 0
417717: mov rdx, rsi
41771a: jmp 0x417551
41771f: nop 
417720: lea r8, [rdx + 1]
417724: mov qword ptr [rsp + 8], r8
417729: movzx eax, byte ptr [rdx + 1]
41772d: sub eax, 0x30
417730: cmp eax, 9
417733: jbe 0x417a00
417739: mov dword ptr [rbx + 0x2c], ebp
41773c: mov rdx, r8
41773f: add rbp, 1
417743: mov r12d, 1
417749: mov qword ptr [rsp + 8], r8
41774e: mov r8d, 2
417754: jmp 0x41753b
417759: nop dword ptr [rax]
417760: lea r8, [rdi + 2]
417764: mov qword ptr [rsp + 8], r8
417769: movzx eax, byte ptr [rdi + 2]
41776d: mov r9d, eax
417770: sub eax, 0x30
417773: cmp eax, 9
417776: ja 0x4177d8
417778: mov r11d, 0xffffffff
41777e: mov r10d, 0x7fffffff
417784: jmp 0x4177be
417786: nop word ptr cs:[rax + rax]
417790: lea esi, [rsi + rsi*4]
417793: mov r9d, r10d
417796: add esi, esi
417798: sub r9d, eax
41779b: add eax, esi
41779d: cmp esi, r9d
4177a0: cmovg eax, r11d
4177a4: mov esi, eax
4177a6: add r8, 1
4177aa: mov qword ptr [rsp + 8], r8
4177af: movzx eax, byte ptr [r8]
4177b3: mov r9d, eax
4177b6: sub eax, 0x30
4177b9: cmp eax, 9
4177bc: ja 0x4177d8
4177be: test esi, esi
4177c0: js 0x4177a6
4177c2: cmp esi, 0xccccccc
4177c8: jle 0x417790
4177ca: mov esi, 0xffffffff
4177cf: jmp 0x4177a6
4177d1: nop dword ptr [rax]
4177d8: cmp r9b, 0x24
4177dc: jne 0x417810
4177de: test esi, esi
4177e0: je 0x417810
4177e2: lea rdx, [r8 + 1]
4177e6: mov qword ptr [rsp + 8], rdx
4177eb: cmp esi, -1
4177ee: je 0x417802
4177f0: lea eax, [rsi - 1]
4177f3: mov dword ptr [rbx + 0x30], eax
4177f6: mov eax, esi
4177f8: cmp qword ptr [rcx], rax
4177fb: cmovae rax, qword ptr [rcx]
4177ff: mov qword ptr [rcx], rax
417802: movzx eax, byte ptr [r8 + 1]
417807: jmp 0x4174c3
41780c: nop dword ptr [rax]
417810: mov qword ptr [rsp + 8], rdx
417815: movzx eax, byte ptr [rdi + 1]
417819: jmp 0x4174c3
41781e: nop 
417820: mov qword ptr [rbx + 0x38], 0
417828: mov rdi, qword ptr [rsp + 8]
41782d: test edx, edx
41782f: jne 0x41796a
417835: sub rdi, 1
417839: mov rax, r12
41783c: mov qword ptr [rbx + 0x20], rdi
417840: mov qword ptr [rbx + 0x18], rdi
417844: add rsp, 0x18
417848: pop rbx
417849: pop rbp
41784a: pop r12
41784c: pop r13
41784e: ret 
41784f: nop 
417850: movzx eax, byte ptr [rbx + 0xc]
417854: and eax, 1
417857: cmp al, 1
417859: sbb eax, eax
41785b: xor al, al
41785d: add eax, 0x107
417862: mov dword ptr [rbx + 0x34], eax
417865: mov rdi, qword ptr [rsp + 8]
41786a: cmp esi, -1
41786d: jne 0x41782d
41786f: mov ecx, 1
417874: mov dword ptr [rbx + 0x30], ebp
417877: add r12, rcx
41787a: jmp 0x41782d
41787c: nop dword ptr [rax]
417880: movzx eax, byte ptr [rbx + 0xc]
417884: test al, 4
417886: je 0x417b50
41788c: mov dword ptr [rbx + 0x34], 0x200
417893: jmp 0x417865
417895: nop dword ptr [rax]
417898: lea rsi, [rdx + 2]
41789c: mov qword ptr [rsp + 8], rsi
4178a1: movzx ecx, byte ptr [rdx + 2]
4178a5: sub ecx, 0x30
4178a8: cmp ecx, 9
4178ab: ja 0x417b38
4178b1: lea rsi, [rdx + 3]
4178b5: mov r9d, 0xffffffff
4178bb: mov r8d, 0x7fffffff
4178c1: jmp 0x4178f6
4178c3: nop dword ptr [rax + rax]
4178c8: lea edx, [rax + rax*4]
4178cb: mov edi, r8d
4178ce: add edx, edx
4178d0: sub edi, ecx
4178d2: lea eax, [rdx + rcx]
4178d5: cmp edi, edx
4178d7: cmovl eax, r9d
4178db: mov qword ptr [rsp + 8], rsi
4178e0: movzx ecx, byte ptr [rsi]
4178e3: mov rdx, rsi
4178e6: add rsi, 1
4178ea: sub ecx, 0x30
4178ed: cmp ecx, 9
4178f0: ja 0x417b40
4178f6: test eax, eax
4178f8: js 0x4178db
4178fa: cmp eax, 0xccccccc
4178ff: jle 0x4178c8
417901: mov eax, 0xffffffff
417906: jmp 0x4178db
417908: nop dword ptr [rax + rax]
417910: mov rdx, rsi
417913: mov r8d, 1
417919: xor r12d, r12d
41791c: jmp 0x41753b
417921: cmp byte ptr [rdx + 1], 0x68
417925: je 0x417b71
41792b: lea rax, [rdx + 2]
41792f: or byte ptr [rbx + 0xc], 2
417933: mov rdx, rcx
417936: mov rcx, rax
417939: jmp 0x4175a0
41793e: or byte ptr [rbx + 0xc], 4
417942: cmp byte ptr [rdx + 1], 0x6c
417946: jne 0x4176bc
41794c: add rdx, 2
417950: jmp 0x417592
417955: mov dword ptr [rbx + 0x34], 5
41795c: mov rdi, qword ptr [rsp + 8]
417961: cmp esi, -1
417964: je 0x41786f
41796a: mov qword ptr [rbx + 0x18], rdi
41796e: mov esi, 0x25
417973: call 0x4010a0
417978: mov qword ptr [rbx + 0x20], rax
41797c: add rsp, 0x18
417980: mov rax, r12
417983: pop rbx
417984: pop rbp
417985: pop r12
417987: pop r13
417989: ret 
41798a: mov dword ptr [rbx + 0x34], 3
417991: jmp 0x41795c
417993: mov dword ptr [rbx + 0x34], 2
41799a: mov rdi, qword ptr [rsp + 8]
41799f: cmp esi, -1
4179a2: jne 0x41796a
4179a4: mov dword ptr [rbx + 0x30], ebp
4179a7: add r12, 1
4179ab: jmp 0x41796a
4179ad: mov dword ptr [rbx + 0x34], 4
4179b4: jmp 0x41795c
4179b6: mov dword ptr [rbx + 0x34], 1
4179bd: jmp 0x41795c
4179bf: mov dword ptr [rbx + 0x34], 0x800
4179c6: jmp 0x41795c
4179c8: nop dword ptr [rax + rax]
4179d0: lea r9, [rdx + 2]
4179d4: mov qword ptr [rsp + 8], r9
4179d9: movzx eax, byte ptr [rdx + 2]
4179dd: sub eax, 0x30
4179e0: cmp eax, 9
4179e3: jbe 0x417b82
4179e9: mov dword ptr [rbx + 0x28], ebp
4179ec: mov rdx, r9
4179ef: mov r12, r8
4179f2: add rbp, 1
4179f6: mov qword ptr [rsp + 8], r9
4179fb: jmp 0x417551
417a00: lea rsi, [rdx + 2]
417a04: mov qword ptr [rsp + 8], rsi
417a09: movzx edx, byte ptr [rdx + 2]
417a0d: mov edi, edx
417a0f: sub edx, 0x30
417a12: cmp edx, 9
417a15: ja 0x417a68
417a17: mov r11d, 0xffffffff
417a1d: mov r10d, 0x7fffffff
417a23: jmp 0x417a53
417a25: nop dword ptr [rax]
417a28: lea edi, [rax + rax*4]
417a2b: mov r9d, r10d
417a2e: add edi, edi
417a30: sub r9d, edx
417a33: lea eax, [rdi + rdx]
417a36: cmp edi, r9d
417a39: cmovg rax, r11
417a3d: add rsi, 1
417a41: mov qword ptr [rsp + 8], rsi
417a46: movzx edx, byte ptr [rsi]
417a49: mov edi, edx
417a4b: sub edx, 0x30
417a4e: cmp edx, 9
417a51: ja 0x417a68
417a53: test eax, eax
417a55: js 0x417a3d
417a57: cmp eax, 0xccccccc
417a5c: jle 0x417a28
417a5e: mov eax, 0xffffffff
417a63: jmp 0x417a3d
417a65: nop dword ptr [rax]
417a68: cmp dil, 0x24
417a6c: jne 0x417739
417a72: test eax, eax
417a74: je 0x417739
417a7a: cmp eax, -1
417a7d: je 0x417739
417a83: lea edi, [rax - 1]
417a86: cmp qword ptr [rcx], rax
417a89: lea rdx, [rsi + 1]
417a8d: cmovae rax, qword ptr [rcx]
417a91: mov dword ptr [rbx + 0x2c], edi
417a94: mov qword ptr [rsp + 8], rdx
417a99: mov qword ptr [rcx], rax
417a9c: test edi, edi
417a9e: jns 0x417913
417aa4: jmp 0x417739
417aa9: nop dword ptr [rax]
417ab0: movzx ecx, byte ptr [rdx]
417ab3: cmp qword ptr [rax + rcx*8], 0
417ab8: je 0x417568
417abe: lea rdi, [rsp + 8]
417ac3: mov rsi, rbx
417ac6: call 0x46c730
417acb: mov rdx, qword ptr [rsp + 8]
417ad0: test eax, eax
417ad2: jne 0x417568
417ad8: jmp 0x417596
417add: nop dword ptr [rax]
417ae0: mov rcx, qword ptr [rip + 0xabe81]
417ae7: mov rax, qword ptr [rcx + rdx*8]
417aeb: test rax, rax
417aee: je 0x4175c0
417af4: lea rcx, [rbx + 0x40]
417af8: lea rdx, [rbx + 0x34]
417afc: mov esi, 1
417b01: mov rdi, rbx
417b04: call rax
417b06: mov edx, dword ptr [rbx + 8]
417b09: movsxd rcx, eax
417b0c: mov qword ptr [rbx + 0x38], rcx
417b10: test eax, eax
417b12: js 0x4175c0
417b18: cmp dword ptr [rbx + 0x30], -1
417b1c: mov rdi, qword ptr [rsp + 8]
417b21: jne 0x41782d
417b27: test rcx, rcx
417b2a: je 0x41782d
417b30: jmp 0x417874
417b35: nop dword ptr [rax]
417b38: mov rdx, rsi
417b3b: nop dword ptr [rax + rax]
417b40: cmp eax, -1
417b43: je 0x417551
417b49: mov dword ptr [rbx], eax
417b4b: jmp 0x417551
417b50: test al, 2
417b52: je 0x417b60
417b54: mov dword ptr [rbx + 0x34], 0x400
417b5b: jmp 0x417865
417b60: xor eax, eax
417b62: test byte ptr [rbx + 0xd], 2
417b66: setne al
417b69: mov dword ptr [rbx + 0x34], eax
417b6c: jmp 0x417865
417b71: lea rcx, [rdx + 3]
417b75: or byte ptr [rbx + 0xd], 2
417b79: add rdx, 2
417b7d: jmp 0x4175a0
417b82: lea r10, [rdx + 3]
417b86: mov qword ptr [rsp + 8], r10
417b8b: movzx edi, byte ptr [rdx + 3]
417b8f: mov esi, edi
417b91: sub edi, 0x30
417b94: cmp edi, 9
417b97: ja 0x417bef
417b99: add rdx, 4
417b9d: mov r13d, 0xffffffff
417ba3: mov r11d, 0x7fffffff
417ba9: jmp 0x417bdd
417bab: nop dword ptr [rax + rax]
417bb0: lea esi, [rax + rax*4]
417bb3: mov eax, r11d
417bb6: add esi, esi
417bb8: sub eax, edi
417bba: add edi, esi
417bbc: cmp eax, esi
417bbe: mov eax, edi
417bc0: cmovl rax, r13
417bc4: mov qword ptr [rsp + 8], rdx
417bc9: movzx edi, byte ptr [rdx]
417bcc: mov r10, rdx
417bcf: add rdx, 1
417bd3: mov esi, edi
417bd5: sub edi, 0x30
417bd8: cmp edi, 9
417bdb: ja 0x417bef
417bdd: test eax, eax
417bdf: js 0x417bc4
417be1: cmp eax, 0xccccccc
417be6: jle 0x417bb0
417be8: mov eax, 0xffffffff
417bed: jmp 0x417bc4
417bef: cmp sil, 0x24
417bf3: jne 0x4179e9
417bf9: test eax, eax
417bfb: je 0x4179e9
417c01: cmp eax, -1
417c04: je 0x4179e9
417c0a: lea esi, [rax - 1]
417c0d: cmp qword ptr [rcx], rax
417c10: lea rdx, [r10 + 1]
417c14: cmovae rax, qword ptr [rcx]
417c18: mov dword ptr [rbx + 0x28], esi
417c1b: mov qword ptr [rsp + 8], rdx
417c20: mov qword ptr [rcx], rax
417c23: test esi, esi
417c25: jns 0x417551
417c2b: jmp 0x4179e9
417c30: push rbp
417c31: mov rbp, rsp
417c34: push r15
417c36: mov r15d, ecx
417c39: push r14
417c3b: mov r14, rdx
417c3e: push r13
417c40: mov r13, rdi
417c43: mov rdi, rsi
417c46: push r12
417c48: push rbx
417c49: sub rsp, 0x28
417c4d: mov qword ptr [rbp - 0x48], rsi
417c51: mov rax, qword ptr fs:[0x28]
417c5a: mov qword ptr [rbp - 0x38], rax
417c5e: xor eax, eax
417c60: mov eax, dword ptr [r13 + 0xc0]
417c67: test eax, eax
417c69: jle 0x417d60
417c6f: call 0x401180
417c74: lea rbx, [rax + 1]
417c78: movabs rax, 0x3fffffffffffffff
417c82: cmp rbx, rax
417c85: ja 0x417d70
417c8b: lea r12, [rbx*4]
417c93: mov rdi, r12
417c96: call 0x421200
417c9b: cmp r12, 0x1000
417ca2: jbe 0x417cac
417ca4: test eax, eax
417ca6: je 0x417d85
417cac: add r12, 0x17
417cb0: mov rdx, rsp
417cb3: mov rax, r12
417cb6: and r12, 0xfffffffffffff000
417cbd: sub rdx, r12
417cc0: and rax, 0xfffffffffffffff0
417cc4: cmp rsp, rdx
417cc7: je 0x417cde
417cc9: sub rsp, 0x1000
417cd0: or qword ptr [rsp + 0xff8], 0
417cd9: cmp rsp, rdx
417cdc: jne 0x417cc9
417cde: and eax, 0xfff
417ce3: sub rsp, rax
417ce6: test rax, rax
417ce9: jne 0x417d58
417ceb: lea r12, [rsp + 0xf]
417cf0: lea rcx, [rbp - 0x40]
417cf4: mov rdx, rbx
417cf7: mov qword ptr [rbp - 0x40], 0
417cff: and r12, 0xfffffffffffffff0
417d03: lea rsi, [rbp - 0x48]
417d07: mov rdi, r12
417d0a: call 0x44f210
417d0f: cmp eax, -1
417d12: jne 0x417d40
417d14: mov eax, 0xffffffff
417d19: mov rbx, qword ptr [rbp - 0x38]
417d1d: xor rbx, qword ptr fs:[0x28]
417d26: jne 0x417ddd
417d2c: lea rsp, [rbp - 0x28]
417d30: pop rbx
417d31: pop r12
417d33: pop r13
417d35: pop r14
417d37: pop r15
417d39: pop rbp
417d3a: ret 
417d3b: nop dword ptr [rax + rax]
417d40: mov ecx, r15d
417d43: mov rdx, r14
417d46: mov rsi, r12
417d49: mov rdi, r13
417d4c: call 0x46f9b0
417d51: jmp 0x417d19
417d53: nop dword ptr [rax + rax]
417d58: or qword ptr [rsp + rax - 8], 0
417d5e: jmp 0x417ceb
417d60: mov rdi, r13
417d63: call 0x413e90
417d68: jmp 0x417d19
417d6a: nop word ptr [rax + rax]
417d70: mov rax, 0xffffffffffffffc0
417d77: mov dword ptr fs:[rax], 0x4b
417d7e: mov eax, 0xffffffff
417d83: jmp 0x417d19
417d85: mov rdi, r12
417d88: call 0x426410
417d8d: mov r12, rax
417d90: test rax, rax
417d93: je 0x417d14
417d99: lea rcx, [rbp - 0x40]
417d9d: lea rsi, [rbp - 0x48]
417da1: mov rdx, rbx
417da4: mov rdi, rax
417da7: mov qword ptr [rbp - 0x40], 0
417daf: call 0x44f210
417db4: cmp eax, -1
417db7: je 0x417dca
417db9: mov ecx, r15d
417dbc: mov rdx, r14
417dbf: mov rsi, r12
417dc2: mov rdi, r13
417dc5: call 0x46f9b0
417dca: mov rdi, r12
417dcd: mov dword ptr [rbp - 0x4c], eax
417dd0: call 0x426a00
417dd5: mov eax, dword ptr [rbp - 0x4c]
417dd8: jmp 0x417d19
417ddd: call 0x4547a0
417de2: nop word ptr cs:[rax + rax]
417ded: nop dword ptr [rax]
417df0: endbr64 
417df4: push rbp
417df5: push rbx
417df6: mov rbx, rdi
417df9: sub rsp, 0x28
417dfd: test rdi, rdi
417e00: cmove rbx, qword ptr [rip + 0xa88c0]
417e08: mov edi, dword ptr [rbx]
417e0a: and edi, 0x8000
417e10: jne 0x417e4d
417e12: mov r8, qword ptr [rbx + 0x88]
417e19: mov rbp, qword ptr fs:[0x10]
417e22: cmp qword ptr [r8 + 8], rbp
417e26: je 0x417e48
417e28: mov eax, dword ptr fs:[0x18]
417e30: test eax, eax
417e32: jne 0x417e98
417e34: mov edi, 1
417e39: cmpxchg dword ptr [r8], edi
417e3d: mov r8, qword ptr [rbx + 0x88]
417e44: mov qword ptr [r8 + 8], rbp
417e48: add dword ptr [r8 + 4], 1
417e4d: mov rdi, rbx
417e50: call 0x417c30
417e55: mov r8d, eax
417e58: test dword ptr [rbx], 0x8000
417e5e: jne 0x417e89
417e60: mov rdi, qword ptr [rbx + 0x88]
417e67: mov eax, dword ptr [rdi + 4]
417e6a: sub eax, 1
417e6d: mov dword ptr [rdi + 4], eax
417e70: jne 0x417e89
417e72: mov qword ptr [rdi + 8], 0
417e7a: mov edx, dword ptr fs:[0x18]
417e82: test edx, edx
417e84: jne 0x417ed0
417e86: sub dword ptr [rdi], 1
417e89: add rsp, 0x28
417e8d: mov eax, r8d
417e90: pop rbx
417e91: pop rbp
417e92: ret 
417e93: nop dword ptr [rax + rax]
417e98: mov r9d, 1
417e9e: mov eax, edi
417ea0: lock cmpxchg dword ptr [r8], r9d
417ea5: je 0x417e3d
417ea7: mov rdi, r8
417eaa: mov dword ptr [rsp + 0x1c], ecx
417eae: mov qword ptr [rsp + 0x10], rdx
417eb3: mov qword ptr [rsp + 8], rsi
417eb8: call 0x421250
417ebd: mov ecx, dword ptr [rsp + 0x1c]
417ec1: mov rdx, qword ptr [rsp + 0x10]
417ec6: mov rsi, qword ptr [rsp + 8]
417ecb: jmp 0x417e3d
417ed0: xchg dword ptr [rdi], eax
417ed2: cmp eax, 1
417ed5: jle 0x417e89
417ed7: xor r10d, r10d
417eda: mov edx, 1
417edf: mov esi, 0x81
417ee4: mov eax, 0xca
417ee9: syscall 
417eeb: jmp 0x417e89
417eed: nop dword ptr [rax]
417ef0: endbr64 
417ef4: push rbp
417ef5: push rbx
417ef6: mov rbx, rdi
417ef9: sub rsp, 0xe8
417f00: mov qword ptr [rsp + 0x40], rdx
417f05: mov qword ptr [rsp + 0x48], rcx
417f0a: mov qword ptr [rsp + 0x50], r8
417f0f: mov qword ptr [rsp + 0x58], r9
417f14: test al, al
417f16: je 0x417f52
417f18: movaps xmmword ptr [rsp + 0x60], xmm0
417f1d: movaps xmmword ptr [rsp + 0x70], xmm1
417f22: movaps xmmword ptr [rsp + 0x80], xmm2
417f2a: movaps xmmword ptr [rsp + 0x90], xmm3
417f32: movaps xmmword ptr [rsp + 0xa0], xmm4
417f3a: movaps xmmword ptr [rsp + 0xb0], xmm5
417f42: movaps xmmword ptr [rsp + 0xc0], xmm6
417f4a: movaps xmmword ptr [rsp + 0xd0], xmm7
417f52: mov rax, qword ptr fs:[0x28]
417f5b: mov qword ptr [rsp + 0x28], rax
417f60: xor eax, eax
417f62: test rbx, rbx
417f65: cmove rbx, qword ptr [rip + 0xa875b]
417f6d: lea rax, [rsp + 0x100]
417f75: mov qword ptr [rsp + 0x18], rax
417f7a: lea rax, [rsp + 0x30]
417f7f: mov edx, dword ptr [rbx]
417f81: mov dword ptr [rsp + 0x10], 0x10
417f89: mov dword ptr [rsp + 0x14], 0x30
417f91: mov qword ptr [rsp + 0x20], rax
417f96: and edx, 0x8000
417f9c: jne 0x417fdb
417f9e: mov rdi, qword ptr [rbx + 0x88]
417fa5: mov rbp, qword ptr fs:[0x10]
417fae: cmp rbp, qword ptr [rdi + 8]
417fb2: je 0x417fd7
417fb4: mov eax, dword ptr fs:[0x18]
417fbc: test eax, eax
417fbe: jne 0x418040
417fc4: mov edx, 1
417fc9: cmpxchg dword ptr [rdi], edx
417fcc: mov rdi, qword ptr [rbx + 0x88]
417fd3: mov qword ptr [rdi + 8], rbp
417fd7: add dword ptr [rdi + 4], 1
417fdb: lea rdx, [rsp + 0x10]
417fe0: xor ecx, ecx
417fe2: mov rdi, rbx
417fe5: call 0x417c30
417fea: mov r8d, eax
417fed: test dword ptr [rbx], 0x8000
417ff3: jne 0x41801e
417ff5: mov rdi, qword ptr [rbx + 0x88]
417ffc: mov eax, dword ptr [rdi + 4]
417fff: sub eax, 1
418002: mov dword ptr [rdi + 4], eax
418005: jne 0x41801e
418007: mov qword ptr [rdi + 8], 0
41800f: mov edx, dword ptr fs:[0x18]
418017: test edx, edx
418019: jne 0x418068
41801b: sub dword ptr [rdi], 1
41801e: mov rax, qword ptr [rsp + 0x28]
418023: xor rax, qword ptr fs:[0x28]
41802c: jne 0x418085
41802e: add rsp, 0xe8
418035: mov eax, r8d
418038: pop rbx
418039: pop rbp
41803a: ret 
41803b: nop dword ptr [rax + rax]
418040: mov ecx, 1
418045: mov eax, edx
418047: lock cmpxchg dword ptr [rdi], ecx
41804b: je 0x417fcc
418051: mov qword ptr [rsp + 8], rsi
418056: call 0x421250
41805b: mov rsi, qword ptr [rsp + 8]
418060: jmp 0x417fcc
418065: nop dword ptr [rax]
418068: xchg dword ptr [rdi], eax
41806a: cmp eax, 1
41806d: jle 0x41801e
41806f: xor r10d, r10d
418072: mov edx, 1
418077: mov esi, 0x81
41807c: mov eax, 0xca
418081: syscall 
418083: jmp 0x41801e
418085: call 0x4547a0
41808a: nop word ptr [rax + rax]
418090: endbr64 
418094: push rbp
418095: push rbx
418096: mov rbx, rdi
418099: sub rsp, 0xe8
4180a0: mov qword ptr [rsp + 0x40], rdx
4180a5: mov qword ptr [rsp + 0x48], rcx
4180aa: mov qword ptr [rsp + 0x50], r8
4180af: mov qword ptr [rsp + 0x58], r9
4180b4: test al, al
4180b6: je 0x4180f2
4180b8: movaps xmmword ptr [rsp + 0x60], xmm0
4180bd: movaps xmmword ptr [rsp + 0x70], xmm1
4180c2: movaps xmmword ptr [rsp + 0x80], xmm2
4180ca: movaps xmmword ptr [rsp + 0x90], xmm3
4180d2: movaps xmmword ptr [rsp + 0xa0], xmm4
4180da: movaps xmmword ptr [rsp + 0xb0], xmm5
4180e2: movaps xmmword ptr [rsp + 0xc0], xmm6
4180ea: movaps xmmword ptr [rsp + 0xd0], xmm7
4180f2: mov rax, qword ptr fs:[0x28]
4180fb: mov qword ptr [rsp + 0x28], rax
418100: xor eax, eax
418102: test rbx, rbx
418105: cmove rbx, qword ptr [rip + 0xa85bb]
41810d: lea rax, [rsp + 0x100]
418115: mov qword ptr [rsp + 0x18], rax
41811a: lea rax, [rsp + 0x30]
41811f: mov edx, dword ptr [rbx]
418121: mov dword ptr [rsp + 0x10], 0x10
418129: mov dword ptr [rsp + 0x14], 0x30
418131: mov qword ptr [rsp + 0x20], rax
418136: and edx, 0x8000
41813c: jne 0x41817b
41813e: mov rdi, qword ptr [rbx + 0x88]
418145: mov rbp, qword ptr fs:[0x10]
41814e: cmp qword ptr [rdi + 8], rbp
418152: je 0x418177
418154: mov eax, dword ptr fs:[0x18]
41815c: test eax, eax
41815e: jne 0x4181f0
418164: mov edx, 1
418169: cmpxchg dword ptr [rdi], edx
41816c: mov rdi, qword ptr [rbx + 0x88]
418173: mov qword ptr [rdi + 8], rbp
418177: add dword ptr [rdi + 4], 1
41817b: mov ebp, dword ptr [rbx + 0x74]
41817e: lea rdx, [rsp + 0x10]
418183: xor ecx, ecx
418185: mov rdi, rbx
418188: mov eax, ebp
41818a: or eax, 2
41818d: mov dword ptr [rbx + 0x74], eax
418190: call 0x417c30
418195: mov dword ptr [rbx + 0x74], ebp
418198: mov r8d, eax
41819b: test dword ptr [rbx], 0x8000
4181a1: jne 0x4181cc
4181a3: mov rdi, qword ptr [rbx + 0x88]
4181aa: mov eax, dword ptr [rdi + 4]
4181ad: sub eax, 1
4181b0: mov dword ptr [rdi + 4], eax
4181b3: jne 0x4181cc
4181b5: mov qword ptr [rdi + 8], 0
4181bd: mov edx, dword ptr fs:[0x18]
4181c5: test edx, edx
4181c7: jne 0x418218
4181c9: sub dword ptr [rdi], 1
4181cc: mov rax, qword ptr [rsp + 0x28]
4181d1: xor rax, qword ptr fs:[0x28]
4181da: jne 0x418235
4181dc: add rsp, 0xe8
4181e3: mov eax, r8d
4181e6: pop rbx
4181e7: pop rbp
4181e8: ret 
4181e9: nop dword ptr [rax]
4181f0: mov ecx, 1
4181f5: mov eax, edx
4181f7: lock cmpxchg dword ptr [rdi], ecx
4181fb: je 0x41816c
418201: mov qword ptr [rsp + 8], rsi
418206: call 0x421250
41820b: mov rsi, qword ptr [rsp + 8]
418210: jmp 0x41816c
418215: nop dword ptr [rax]
418218: xchg dword ptr [rdi], eax
41821a: cmp eax, 1
41821d: jle 0x4181cc
41821f: xor r10d, r10d
418222: mov edx, 1
418227: mov esi, 0x81
41822c: mov eax, 0xca
418231: syscall 
418233: jmp 0x4181cc
418235: call 0x4547a0
41823a: nop word ptr [rax + rax]
418240: endbr64 
418244: push r12
418246: push rbp
418247: mov rbp, rdi
41824a: push rbx
41824b: mov eax, dword ptr [rdi]
41824d: test ah, 0x20
418250: jne 0x418348
418256: mov edx, eax
418258: and edx, 0x8000
41825e: je 0x418355
418264: shl eax, 0x1a
418267: sar eax, 0x1f
41826a: mov r12d, eax
41826d: test edx, edx
41826f: jne 0x418282
418271: mov rdi, qword ptr [rbp + 0x88]
418278: sub dword ptr [rdi + 4], 1
41827c: je 0x4183c0
418282: mov rbx, qword ptr [rbp + 0xd8]
418289: mov rdx, 0x4c1b60
418290: mov rax, 0x4c2208
418297: mov rcx, rbx
41829a: sub rax, rdx
41829d: sub rcx, rdx
4182a0: cmp rax, rcx
4182a3: jbe 0x418400
4182a9: xor esi, esi
4182ab: mov rdi, rbp
4182ae: call qword ptr [rbx + 0x10]
4182b1: mov eax, dword ptr [rbp + 0xc0]
4182b7: test eax, eax
4182b9: jle 0x4183e0
4182bf: mov rbx, qword ptr [rbp + 0x98]
4182c6: mov eax, dword ptr fs:[0x18]
4182ce: test eax, eax
4182d0: jne 0x418410
4182d6: mov edx, 1
4182db: cmpxchg dword ptr [rip + 0xab5ce], edx
4182e2: mov rdi, qword ptr [rbx]
4182e5: call 0x4583c0
4182ea: mov rdi, qword ptr [rbx + 0x38]
4182ee: call 0x4583c0
4182f3: mov eax, dword ptr fs:[0x18]
4182fb: test eax, eax
4182fd: jne 0x418440
418303: sub dword ptr [rip + 0xab5a6], 1
41830a: lea rax, [rip + 0xa800f]
418311: cmp rbp, rax
418314: lea rax, [rip + 0xa81e5]
41831b: sete dl
41831e: cmp rbp, rax
418321: sete al
418324: or dl, al
418326: jne 0x41833c
418328: lea rax, [rip + 0xa7e11]
41832f: cmp rbp, rax
418332: je 0x41833c
418334: mov rdi, rbp
418337: call 0x426a00
41833c: mov eax, r12d
41833f: pop rbx
418340: pop rbp
418341: pop r12
418343: ret 
418344: nop dword ptr [rax]
418348: call 0x41e440
41834d: mov eax, dword ptr [rbp]
418350: test ah, 0x80
418353: jne 0x418395
418355: mov rdi, qword ptr [rbp + 0x88]
41835c: mov rbx, qword ptr fs:[0x10]
418365: cmp qword ptr [rdi + 8], rbx
418369: je 0x418391
41836b: mov eax, dword ptr fs:[0x18]
418373: test eax, eax
418375: jne 0x418478
41837b: mov edx, 1
418380: cmpxchg dword ptr [rdi], edx
418383: mov rdi, qword ptr [rbp + 0x88]
41838a: mov eax, dword ptr [rbp]
41838d: mov qword ptr [rdi + 8], rbx
418391: add dword ptr [rdi + 4], 1
418395: mov edx, eax
418397: and edx, 0x8000
41839d: test ah, 0x20
4183a0: je 0x418264
4183a6: mov rdi, rbp
4183a9: call 0x41d240
4183ae: mov edx, dword ptr [rbp]
4183b1: mov r12d, eax
4183b4: and edx, 0x8000
4183ba: jmp 0x41826d
4183bf: nop 
4183c0: mov qword ptr [rdi + 8], 0
4183c8: mov eax, dword ptr fs:[0x18]
4183d0: test eax, eax
4183d2: jne 0x418498
4183d8: sub dword ptr [rdi], 1
4183db: jmp 0x418282
4183e0: cmp qword ptr [rbp + 0x48], 0
4183e5: je 0x41830a
4183eb: mov rdi, rbp
4183ee: call 0x41e850
4183f3: jmp 0x41830a
4183f8: nop dword ptr [rax + rax]
418400: call 0x41b240
418405: jmp 0x4182a9
41840a: nop word ptr [rax + rax]
418410: xor eax, eax
418412: mov edx, 1
418417: lock cmpxchg dword ptr [rip + 0xab491], edx
41841f: je 0x4182e2
418425: lea rdi, [rip + 0xab484]
41842c: call 0x421250
418431: jmp 0x4182e2
418436: nop word ptr cs:[rax + rax]
418440: xor eax, eax
418442: xchg dword ptr [rip + 0xab468], eax
418448: cmp eax, 1
41844b: jle 0x41830a
418451: xor r10d, r10d
418454: mov edx, 1
418459: mov esi, 0x81
41845e: mov eax, 0xca
418463: lea rdi, [rip + 0xab446]
41846a: syscall 
41846c: jmp 0x41830a
418471: nop dword ptr [rax]
418478: xor eax, eax
41847a: mov edx, 1
41847f: lock cmpxchg dword ptr [rdi], edx
418483: je 0x418383
418489: call 0x421250
41848e: jmp 0x418383
418493: nop dword ptr [rax + rax]
418498: xchg dword ptr [rdi], edx
41849a: cmp edx, 1
41849d: jle 0x418282
4184a3: xor r10d, r10d
4184a6: mov edx, 1
4184ab: mov esi, 0x81
4184b0: mov eax, 0xca
4184b5: syscall 
4184b7: jmp 0x418282
4184bc: endbr64 
4184c0: mov r8, rax
4184c3: jmp 0x4013e8
4184c8: nop dword ptr [rax + rax]
4184d0: endbr64 
4184d4: test rdi, rdi
4184d7: je 0x4185a0
4184dd: push rbp
4184de: push rbx
4184df: mov rbx, rdi
4184e2: sub rsp, 8
4184e6: mov edx, dword ptr [rdi]
4184e8: and edx, 0x8000
4184ee: jne 0x41852d
4184f0: mov rdi, qword ptr [rdi + 0x88]
4184f7: mov rbp, qword ptr fs:[0x10]
418500: cmp qword ptr [rdi + 8], rbp
418504: je 0x418529
418506: mov eax, dword ptr fs:[0x18]
41850e: test eax, eax
418510: jne 0x4185b0
418516: mov edx, 1
41851b: cmpxchg dword ptr [rdi], edx
41851e: mov rdi, qword ptr [rbx + 0x88]
418525: mov qword ptr [rdi + 8], rbp
418529: add dword ptr [rdi + 4], 1
41852d: mov rbp, qword ptr [rbx + 0xd8]
418534: mov rdx, 0x4c1b60
41853b: mov rax, 0x4c2208
418542: mov rsi, rbp
418545: sub rax, rdx
418548: sub rsi, rdx
41854b: cmp rax, rsi
41854e: jbe 0x4185a8
418550: mov rdi, rbx
418553: call qword ptr [rbp + 0x60]
418556: xor r8d, r8d
418559: test eax, eax
41855b: setne r8b
41855f: neg r8d
418562: test dword ptr [rbx], 0x8000
418568: jne 0x418593
41856a: mov rdi, qword ptr [rbx + 0x88]
418571: mov eax, dword ptr [rdi + 4]
418574: sub eax, 1
418577: mov dword ptr [rdi + 4], eax
41857a: jne 0x418593
41857c: mov qword ptr [rdi + 8], 0
418584: mov edx, dword ptr fs:[0x18]
41858c: test edx, edx
41858e: jne 0x4185d0
418590: sub dword ptr [rdi], 1
418593: add rsp, 8
418597: mov eax, r8d
41859a: pop rbx
41859b: pop rbp
41859c: ret 
41859d: nop dword ptr [rax]
4185a0: jmp 0x420030
4185a5: nop dword ptr [rax]
4185a8: call 0x41b240
4185ad: jmp 0x418550
4185af: nop 
4185b0: mov ecx, 1
4185b5: mov eax, edx
4185b7: lock cmpxchg dword ptr [rdi], ecx
4185bb: je 0x41851e
4185c1: call 0x421250
4185c6: jmp 0x41851e
4185cb: nop dword ptr [rax + rax]
4185d0: xchg dword ptr [rdi], eax
4185d2: cmp eax, 1
4185d5: jle 0x418593
4185d7: xor r10d, r10d
4185da: mov edx, 1
4185df: mov esi, 0x81
4185e4: mov eax, 0xca
4185e9: syscall 
4185eb: jmp 0x418593
4185ed: endbr64 
4185f1: mov r8, rax
4185f4: jmp 0x40143f
4185f9: nop dword ptr [rax]
418600: endbr64 
418604: mov rax, rdi
418607: test byte ptr [rdi + 0x74], 1
41860b: je 0x418641
41860d: test byte ptr [rdi], 8
418610: je 0x418641
418612: mov esi, dword ptr [rdi + 0xc0]
418618: lea rcx, [rip + 0xa9601]
41861f: lea rdx, [rip + 0xa983a]
418626: test esi, esi
418628: cmovg rdx, rcx
41862c: mov qword ptr [rdi + 0xd8], rdx
418633: mov rdx, qword ptr [rdi + 0xa0]
41863a: mov qword ptr [rdx + 0xe0], rcx
418641: ret 
418642: nop word ptr cs:[rax + rax]
41864d: nop dword ptr [rax]
418650: endbr64 
418654: push r14
418656: mov r14d, edx
418659: push r13
41865b: push r12
41865d: mov r12, rsi
418660: push rbp
418661: mov rbp, rdi
418664: mov edi, 0x1d8
418669: push rbx
41866a: call 0x426410
41866f: test rax, rax
418672: je 0x41873f
418678: mov rbx, rax
41867b: lea rax, [rax + 0xe0]
418682: xor edx, edx
418684: xor esi, esi
418686: mov qword ptr [rbx + 0x88], rax
41868d: lea rcx, [rbx + 0xf0]
418694: mov rdi, rbx
418697: mov r13, rbx
41869a: lea r8, [rip + 0xa96ff]
4186a1: call 0x41f710
4186a6: lea rax, [rip + 0xa9933]
4186ad: mov rdi, rbx
4186b0: mov qword ptr [rbx + 0xd8], rax
4186b7: call 0x41cec0
4186bc: mov ecx, r14d
4186bf: mov rdx, r12
4186c2: mov rsi, rbp
4186c5: mov rdi, rbx
4186c8: call 0x41d3a0
4186cd: test rax, rax
4186d0: je 0x418720
4186d2: test byte ptr [rbx + 0x74], 1
4186d6: je 0x41870c
4186d8: test byte ptr [rbx], 8
4186db: je 0x41870c
4186dd: mov ecx, dword ptr [rbx + 0xc0]
4186e3: lea rdx, [rip + 0xa9536]
4186ea: lea rax, [rip + 0xa976f]
4186f1: test ecx, ecx
4186f3: cmovg rax, rdx
4186f7: mov qword ptr [rbx + 0xd8], rax
4186fe: mov rax, qword ptr [rbx + 0xa0]
418705: mov qword ptr [rax + 0xe0], rdx
41870c: pop rbx
41870d: mov rax, r13
418710: pop rbp
418711: pop r12
418713: pop r13
418715: pop r14
418717: ret 
418718: nop dword ptr [rax + rax]
418720: mov rdi, rbx
418723: xor r13d, r13d
418726: call 0x41e440
41872b: mov rdi, rbx
41872e: call 0x426a00
418733: pop rbx
418734: mov rax, r13
418737: pop rbp
418738: pop r12
41873a: pop r13
41873c: pop r14
41873e: ret 
41873f: xor r13d, r13d
418742: jmp 0x41870c
418744: nop word ptr cs:[rax + rax]
41874f: nop 
418750: endbr64 
418754: push r13
418756: mov r13, rsi
418759: push r12
41875b: push rbp
41875c: mov rbp, rdi
41875f: mov edi, 0x1d8
418764: push rbx
418765: sub rsp, 8
418769: call 0x426410
41876e: test rax, rax
418771: je 0x418841
418777: mov rbx, rax
41877a: lea rax, [rax + 0xe0]
418781: xor edx, edx
418783: xor esi, esi
418785: mov qword ptr [rbx + 0x88], rax
41878c: lea rcx, [rbx + 0xf0]
418793: mov rdi, rbx
418796: mov r12, rbx
418799: lea r8, [rip + 0xa9600]
4187a0: call 0x41f710
4187a5: lea rax, [rip + 0xa9834]
4187ac: mov rdi, rbx
4187af: mov qword ptr [rbx + 0xd8], rax
4187b6: call 0x41cec0
4187bb: mov ecx, 1
4187c0: mov rdx, r13
4187c3: mov rsi, rbp
4187c6: mov rdi, rbx
4187c9: call 0x41d3a0
4187ce: test rax, rax
4187d1: je 0x418820
4187d3: test byte ptr [rbx + 0x74], 1
4187d7: je 0x41880d
4187d9: test byte ptr [rbx], 8
4187dc: je 0x41880d
4187de: mov ecx, dword ptr [rbx + 0xc0]
4187e4: lea rdx, [rip + 0xa9435]
4187eb: lea rax, [rip + 0xa966e]
4187f2: test ecx, ecx
4187f4: cmovg rax, rdx
4187f8: mov qword ptr [rbx + 0xd8], rax
4187ff: mov rax, qword ptr [rbx + 0xa0]
418806: mov qword ptr [rax + 0xe0], rdx
41880d: add rsp, 8
418811: mov rax, r12
418814: pop rbx
418815: pop rbp
418816: pop r12
418818: pop r13
41881a: ret 
41881b: nop dword ptr [rax + rax]
418820: mov rdi, rbx
418823: xor r12d, r12d
418826: call 0x41e440
41882b: mov rdi, rbx
41882e: call 0x426a00
418833: add rsp, 8
418837: mov rax, r12
41883a: pop rbx
41883b: pop rbp
41883c: pop r12
41883e: pop r13
418840: ret 
418841: xor r12d, r12d
418844: jmp 0x41880d
418846: nop word ptr cs:[rax + rax]
418850: endbr64 
418854: push r15
418856: mov rcx, rdx
418859: mov r15, rdi
41885c: push r14
41885e: push r13
418860: lea r13, [rip + 0x7d4b9]
418867: push r12
418869: push rbp
41886a: push rbx
41886b: sub rsp, 0x28
41886f: mov rdi, qword ptr fs:[0x28]
418878: mov qword ptr [rsp + 0x18], rdi
41887d: xor edi, edi
41887f: cmp esi, 0x20
418882: je 0x4188b7
418884: lea r13, [rip + 0x7d475]
41888b: cmp esi, 0x30
41888e: je 0x4188b7
418890: movzx eax, sil
418894: mov r13, rsp
418897: movabs rdx, 0x101010101010101
4188a1: mov rsi, rax
4188a4: imul rsi, rdx
4188a8: mul rdx
4188ab: add rdx, rsi
4188ae: mov qword ptr [rsp], rax
4188b2: mov qword ptr [rsp + 8], rdx
4188b7: mov ebx, ecx
4188b9: cmp ecx, 0xf
4188bc: jle 0x418915
4188be: mov rbp, 0x4c2208
4188c5: xor r12d, r12d
4188c8: sub rbp, 0x4c1b60
4188cf: jmp 0x4188f8
4188d1: nop dword ptr [rax]
4188d8: mov edx, 0x10
4188dd: mov rsi, r13
4188e0: mov rdi, r15
4188e3: call qword ptr [r14 + 0x38]
4188e7: add r12, rax
4188ea: cmp rax, 0x10
4188ee: jne 0x418956
4188f0: sub ebx, 0x10
4188f3: cmp ebx, 0xf
4188f6: jle 0x418920
4188f8: mov r14, qword ptr [r15 + 0xd8]
4188ff: mov rax, r14
418902: sub rax, 0x4c1b60
418909: cmp rbp, rax
41890c: ja 0x4188d8
41890e: call 0x41b240
418913: jmp 0x4188d8
418915: xor r12d, r12d
418918: nop dword ptr [rax + rax]
418920: test ebx, ebx
418922: jle 0x418956
418924: mov rbp, qword ptr [r15 + 0xd8]
41892b: mov rdx, 0x4c1b60
418932: mov rax, 0x4c2208
418939: mov rcx, rbp
41893c: sub rax, rdx
41893f: sub rcx, rdx
418942: cmp rax, rcx
418945: jbe 0x418978
418947: movsxd rdx, ebx
41894a: mov rsi, r13
41894d: mov rdi, r15
418950: call qword ptr [rbp + 0x38]
418953: add r12, rax
418956: mov rax, qword ptr [rsp + 0x18]
41895b: xor rax, qword ptr fs:[0x28]
418964: jne 0x41897f
418966: add rsp, 0x28
41896a: mov rax, r12
41896d: pop rbx
41896e: pop rbp
41896f: pop r12
418971: pop r13
418973: pop r14
418975: pop r15
418977: ret 
418978: call 0x41b240
41897d: jmp 0x418947
41897f: call 0x4547a0
418984: nop word ptr cs:[rax + rax]
41898e: nop 
418990: endbr64 
418994: push r13
418996: push r12
418998: mov r12, rdi
41899b: push rbp
41899c: push rbx
41899d: sub rsp, 8
4189a1: call 0x401180
4189a6: mov rbp, qword ptr [rip + 0xa7d23]
4189ad: mov rbx, rax
4189b0: mov edx, dword ptr [rbp]
4189b3: and edx, 0x8000
4189b9: jne 0x418a20
4189bb: mov r8, qword ptr [rbp + 0x88]
4189c2: mov r13, qword ptr fs:[0x10]
4189cb: cmp qword ptr [r8 + 8], r13
4189cf: je 0x418ae8
4189d5: mov eax, dword ptr fs:[0x18]
4189dd: test eax, eax
4189df: jne 0x418b20
4189e5: mov edx, 1
4189ea: cmpxchg dword ptr [r8], edx
4189ee: mov r8, qword ptr [rbp + 0x88]
4189f5: mov rdi, qword ptr [rip + 0xa7cd4]
4189fc: mov qword ptr [r8 + 8], r13
418a00: mov eax, dword ptr [rdi + 0xc0]
418a06: add dword ptr [r8 + 4], 1
418a0b: test eax, eax
418a0d: je 0x418a2d
418a0f: cmp eax, -1
418a12: je 0x418a37
418a14: mov r8d, 0xffffffff
418a1a: jmp 0x418aa2
418a1f: nop 
418a20: mov rdi, rbp
418a23: mov eax, dword ptr [rdi + 0xc0]
418a29: test eax, eax
418a2b: jne 0x418a0f
418a2d: mov dword ptr [rdi + 0xc0], 0xffffffff
418a37: mov r13, qword ptr [rdi + 0xd8]
418a3e: mov rdx, 0x4c1b60
418a45: mov rax, 0x4c2208
418a4c: mov rcx, r13
418a4f: sub rax, rdx
418a52: sub rcx, rdx
418a55: cmp rax, rcx
418a58: jbe 0x418af0
418a5e: mov rdx, rbx
418a61: mov rsi, r12
418a64: call qword ptr [r13 + 0x38]
418a68: cmp rbx, rax
418a6b: jne 0x418a14
418a6d: mov rdi, qword ptr [rip + 0xa7c5c]
418a74: mov rax, qword ptr [rdi + 0x28]
418a78: cmp rax, qword ptr [rdi + 0x30]
418a7c: jae 0x418b08
418a82: lea rdx, [rax + 1]
418a86: mov qword ptr [rdi + 0x28], rdx
418a8a: mov byte ptr [rax], 0xa
418a8d: add rbx, 1
418a91: mov r8d, 0x7fffffff
418a97: cmp rbx, 0x7fffffff
418a9e: cmovbe r8, rbx
418aa2: test dword ptr [rbp], 0x8000
418aa9: jne 0x418ad4
418aab: mov rdi, qword ptr [rbp + 0x88]
418ab2: mov eax, dword ptr [rdi + 4]
418ab5: sub eax, 1
418ab8: mov dword ptr [rdi + 4], eax
418abb: jne 0x418ad4
418abd: mov qword ptr [rdi + 8], 0
418ac5: mov edx, dword ptr fs:[0x18]
418acd: test edx, edx
418acf: jne 0x418b40
418ad1: sub dword ptr [rdi], 1
418ad4: add rsp, 8
418ad8: mov eax, r8d
418adb: pop rbx
418adc: pop rbp
418add: pop r12
418adf: pop r13
418ae1: ret 
418ae2: nop word ptr [rax + rax]
418ae8: mov rdi, rbp
418aeb: jmp 0x418a00
418af0: call 0x41b240
418af5: mov rdi, qword ptr [rip + 0xa7bd4]
418afc: jmp 0x418a5e
418b01: nop dword ptr [rax]
418b08: mov esi, 0xa
418b0d: call 0x41e8a0
418b12: cmp eax, -1
418b15: jne 0x418a8d
418b1b: jmp 0x418a14
418b20: mov ecx, 1
418b25: mov eax, edx
418b27: lock cmpxchg dword ptr [r8], ecx
418b2c: je 0x4189ee
418b32: mov rdi, r8
418b35: call 0x421250
418b3a: jmp 0x4189ee
418b3f: nop 
418b40: xchg dword ptr [rdi], eax
418b42: cmp eax, 1
418b45: jle 0x418ad4
418b47: xor r10d, r10d
418b4a: mov edx, 1
418b4f: mov esi, 0x81
418b54: mov eax, 0xca
418b59: syscall 
418b5b: jmp 0x418ad4
418b60: endbr64 
418b64: mov r8, rax
418b67: jmp 0x401495
418b6c: nop dword ptr [rax]
418b70: endbr64 
418b74: push r15
418b76: push r14
418b78: push r13
418b7a: push r12
418b7c: push rbp
418b7d: push rbx
418b7e: sub rsp, 0x68
418b82: mov rax, qword ptr fs:[0x28]
418b8b: mov qword ptr [rsp + 0x58], rax
418b90: xor eax, eax
418b92: mov eax, dword ptr [rdi]
418b94: test al, 0x10
418b96: jne 0x418d29
418b9c: mov rbx, rdi
418b9f: test al, 4
418ba1: jne 0x419160
418ba7: mov rax, qword ptr [rdi + 0xa0]
418bae: mov rdx, qword ptr [rax]
418bb1: cmp rdx, qword ptr [rax + 8]
418bb5: jb 0x418ce8
418bbb: mov rdx, qword ptr [rdi + 8]
418bbf: mov rcx, qword ptr [rdi + 0x10]
418bc3: mov r14, qword ptr [rdi + 0x98]
418bca: cmp rdx, rcx
418bcd: jb 0x419018
418bd3: mov rax, qword ptr [rdi + 0x38]
418bd7: mov qword ptr [rdi + 0x10], rax
418bdb: mov qword ptr [rdi + 8], rax
418bdf: mov qword ptr [rdi + 0x18], rax
418be3: test rax, rax
418be6: je 0x4190d8
418bec: movq xmm0, rax
418bf1: mov qword ptr [rbx + 0x30], rax
418bf5: mov rax, qword ptr [rbx + 0xa0]
418bfc: punpcklqdq xmm0, xmm0
418c00: cmp qword ptr [rax + 0x30], 0
418c05: movups xmmword ptr [rbx + 0x20], xmm0
418c09: je 0x4190b0
418c0f: test dword ptr [rbx], 0x202
418c15: je 0x418d42
418c1b: mov rbp, qword ptr [rip + 0xa7aae]
418c22: mov edx, dword ptr [rbp]
418c25: mov ecx, edx
418c27: and ecx, 0x8000
418c2d: jne 0x418d30
418c33: mov rdi, qword ptr [rbp + 0x88]
418c3a: mov r12, qword ptr fs:[0x10]
418c43: cmp qword ptr [rdi + 8], r12
418c47: je 0x419187
418c4d: mov eax, dword ptr fs:[0x18]
418c55: mov edx, 1
418c5a: test eax, eax
418c5c: jne 0x41918f
418c62: cmpxchg dword ptr [rdi], edx
418c65: mov rdi, qword ptr [rbp + 0x88]
418c6c: mov r8, qword ptr [rip + 0xa7a5d]
418c73: mov qword ptr [rdi + 8], r12
418c77: mov edx, dword ptr [r8]
418c7a: mov r15, 0x4c2208
418c81: and edx, 0x288
418c87: mov r12, 0x4c1b60
418c8e: add dword ptr [rdi + 4], 1
418c92: mov r13, r15
418c95: sub r13, r12
418c98: cmp edx, 0x280
418c9e: je 0x419131
418ca4: test dword ptr [rbp], 0x8000
418cab: jne 0x418d50
418cb1: mov rdi, qword ptr [rbp + 0x88]
418cb8: mov eax, dword ptr [rdi + 4]
418cbb: sub eax, 1
418cbe: mov dword ptr [rdi + 4], eax
418cc1: jne 0x418d50
418cc7: mov qword ptr [rdi + 8], 0
418ccf: mov edx, dword ptr fs:[0x18]
418cd7: test edx, edx
418cd9: jne 0x4191b3
418cdf: sub dword ptr [rdi], 1
418ce2: jmp 0x418d56
418ce4: nop dword ptr [rax]
418ce8: mov eax, dword ptr [rdx]
418cea: nop word ptr [rax + rax]
418cf0: mov rcx, qword ptr [rsp + 0x58]
418cf5: xor rcx, qword ptr fs:[0x28]
418cfe: jne 0x4191f6
418d04: add rsp, 0x68
418d08: pop rbx
418d09: pop rbp
418d0a: pop r12
418d0c: pop r13
418d0e: pop r14
418d10: pop r15
418d12: ret 
418d13: nop dword ptr [rax + rax]
418d18: mov rax, 0xffffffffffffffc0
418d1f: mov dword ptr fs:[rax], 0x54
418d26: or dword ptr [rbx], 0x20
418d29: mov eax, 0xffffffff
418d2e: jmp 0x418cf0
418d30: and edx, 0x288
418d36: cmp edx, 0x280
418d3c: je 0x41911a
418d42: mov r15, 0x4c2208
418d49: mov r12, 0x4c1b60
418d50: sub r15, r12
418d53: mov r13, r15
418d56: mov rdi, rbx
418d59: xor ebp, ebp
418d5b: lea r15, [rsp + 0x38]
418d60: call 0x41e7b0
418d65: mov rax, qword ptr [rbx + 0xa0]
418d6c: movq xmm0, qword ptr [rax + 0x30]
418d71: punpcklqdq xmm0, xmm0
418d75: movups xmmword ptr [rax], xmm0
418d78: movups xmmword ptr [rax + 0x10], xmm0
418d7c: movups xmmword ptr [rax + 0x20], xmm0
418d80: jmp 0x418dd2
418d82: nop word ptr [rax + rax]
418d88: mov rdx, qword ptr [rbx + 0x10]
418d8c: mov r8, qword ptr [rbx + 0x18]
418d90: sub rdx, rsi
418d93: cmp rsi, r8
418d96: ja 0x418ff0
418d9c: mov qword ptr [rsp], r8
418da0: cmp rdx, 0xf
418da4: ja 0x418d18
418daa: lea rdi, [rsp + 0x40]
418daf: mov qword ptr [rsp + 8], rdx
418db4: call 0x401060
418db9: mov rdx, qword ptr [rsp + 8]
418dbe: mov r8, qword ptr [rsp]
418dc2: mov rbp, rdx
418dc5: movq xmm0, r8
418dca: punpcklqdq xmm0, xmm0
418dce: movups xmmword ptr [rbx + 8], xmm0
418dd2: mov rax, qword ptr [rbx + 0xd8]
418dd9: mov rdx, rax
418ddc: sub rdx, r12
418ddf: cmp rdx, r13
418de2: jae 0x418f30
418de8: mov rsi, qword ptr [rbx + 0x10]
418dec: mov rdx, qword ptr [rbx + 0x40]
418df0: mov rdi, rbx
418df3: sub rdx, rsi
418df6: call qword ptr [rax + 0x70]
418df9: test rax, rax
418dfc: jle 0x418ed0
418e02: mov r11, qword ptr [rbx + 0x10]
418e06: mov rdx, qword ptr [rbx + 0x90]
418e0d: add r11, rax
418e10: mov qword ptr [rbx + 0x10], r11
418e14: cmp rdx, -1
418e18: je 0x418e24
418e1a: add rdx, rax
418e1d: mov qword ptr [rbx + 0x90], rdx
418e24: mov r8, qword ptr [rbx + 0xa0]
418e2b: mov rsi, qword ptr [rbx + 8]
418e2f: mov rdx, qword ptr [r8 + 0x58]
418e33: lea rcx, [r8 + 8]
418e37: lea r10, [r8 + 0x58]
418e3b: mov qword ptr [r8 + 0x60], rdx
418e3f: mov qword ptr [rbx + 0x18], rsi
418e43: test rbp, rbp
418e46: jne 0x418f48
418e4c: mov r9, qword ptr [r8 + 8]
418e50: push rcx
418e51: mov rdx, rsi
418e54: mov rcx, r11
418e57: push qword ptr [r8 + 0x38]
418e5b: mov rsi, r10
418e5e: mov r8, r15
418e61: mov rdi, r14
418e64: call 0x41a880
418e69: pop rdx
418e6a: pop rcx
418e6b: mov rsi, qword ptr [rsp + 0x38]
418e70: xor ebp, ebp
418e72: mov r8, rsi
418e75: mov rdx, qword ptr [rbx + 0xa0]
418e7c: mov qword ptr [rbx + 8], rsi
418e80: mov rcx, qword ptr [rdx + 0x30]
418e84: cmp qword ptr [rdx + 8], rcx
418e88: jne 0x419110
418e8e: cmp eax, 2
418e91: je 0x418d18
418e97: cmp eax, 1
418e9a: jne 0x4191d7
418ea0: test rbp, rbp
418ea3: je 0x418d88
418ea9: lea rdi, [rsp + 0x40]
418eae: mov rax, r8
418eb1: sub rax, rdi
418eb4: jne 0x418f20
418eb6: cmp rbp, 0x10
418eba: je 0x418d18
418ec0: mov r8, qword ptr [rbx + 0x18]
418ec4: jmp 0x418dc5
418ec9: nop dword ptr [rax]
418ed0: or rax, rbp
418ed3: mov edx, dword ptr [rbx]
418ed5: jne 0x418ef8
418ed7: or edx, 0x10
418eda: mov eax, 0xffffffff
418edf: mov qword ptr [rbx + 0x90], 0xffffffffffffffff
418eea: mov dword ptr [rbx], edx
418eec: jmp 0x418cf0
418ef1: nop dword ptr [rax]
418ef8: or edx, 0x20
418efb: mov dword ptr [rbx], edx
418efd: test rbp, rbp
418f00: je 0x418d29
418f06: mov rax, 0xffffffffffffffc0
418f0d: mov dword ptr fs:[rax], 0x54
418f14: mov eax, 0xffffffff
418f19: jmp 0x418cf0
418f1e: nop 
418f20: sub rbp, rax
418f23: mov rsi, r8
418f26: mov rdx, rbp
418f29: call 0x401040
418f2e: jmp 0x418eb6
418f30: mov qword ptr [rsp], rax
418f34: call 0x41b240
418f39: mov rax, qword ptr [rsp]
418f3d: jmp 0x418de8
418f42: nop word ptr [rax + rax]
418f48: mov edx, 0x10
418f4d: lea r11, [rsp + 0x40]
418f52: mov qword ptr [rsp + 0x28], rcx
418f57: sub rdx, rbp
418f5a: mov qword ptr [rsp + 0x20], r10
418f5f: cmp rdx, rax
418f62: mov qword ptr [rsp + 0x18], r8
418f67: cmova rdx, rax
418f6b: lea rax, [r11 + rbp]
418f6f: mov qword ptr [rsp + 0x10], r11
418f74: mov rdi, rax
418f77: mov qword ptr [rsp], rax
418f7b: mov qword ptr [rsp + 8], rdx
418f80: call 0x401150
418f85: mov r8, qword ptr [rsp + 0x18]
418f8a: mov rcx, qword ptr [rsp + 0x28]
418f8f: mov rdi, r14
418f92: mov rdx, qword ptr [rsp + 8]
418f97: mov r9, qword ptr [r8 + 8]
418f9b: push rcx
418f9c: mov rcx, rax
418f9f: push qword ptr [r8 + 0x38]
418fa3: mov r11, qword ptr [rsp + 0x20]
418fa8: add rbp, rdx
418fab: mov r8, r15
418fae: mov r10, qword ptr [rsp + 0x30]
418fb3: mov rdx, r11
418fb6: mov rsi, r10
418fb9: call 0x41a880
418fbe: pop rsi
418fbf: pop rdi
418fc0: test rbp, rbp
418fc3: je 0x418e6b
418fc9: mov r8, qword ptr [rsp + 0x38]
418fce: mov edx, 0
418fd3: mov rsi, r8
418fd6: sub rsi, qword ptr [rsp]
418fda: cmovs rsi, rdx
418fde: add rsi, qword ptr [rbx + 8]
418fe2: jmp 0x418e75
418fe7: nop word ptr [rax + rax]
418ff0: mov rdi, r8
418ff3: mov qword ptr [rsp], rdx
418ff7: call 0x401040
418ffc: mov rax, qword ptr [rbx + 0x18]
419000: mov rdx, qword ptr [rsp]
419004: sub qword ptr [rbx + 0x10], rdx
419008: mov qword ptr [rbx + 8], rax
41900c: jmp 0x418dd2
419011: nop dword ptr [rax]
419018: mov r9, qword ptr [rax + 0x30]
41901c: mov rsi, qword ptr [rax + 0x58]
419020: lea rdi, [rax + 8]
419024: mov qword ptr [rsp + 0x38], rdx
419029: mov qword ptr [rax + 0x60], rsi
41902d: lea rsi, [rax + 0x58]
419031: mov qword ptr [rax], r9
419034: mov qword ptr [rax + 0x10], r9
419038: push rdi
419039: mov rdi, r14
41903c: push qword ptr [rax + 0x38]
41903f: lea r8, [rsp + 0x48]
419044: call 0x41a880
419049: mov rdx, qword ptr [rbx + 8]
41904d: mov rsi, qword ptr [rsp + 0x48]
419052: mov qword ptr [rbx + 0x18], rdx
419056: mov rdx, qword ptr [rbx + 0xa0]
41905d: mov qword ptr [rbx + 8], rsi
419061: pop r8
419063: mov rcx, qword ptr [rdx]
419066: pop r9
419068: cmp rcx, qword ptr [rdx + 8]
41906c: jb 0x419180
419072: cmp eax, 2
419075: je 0x418d18
41907b: mov rdx, qword ptr [rbx + 0x10]
41907f: mov rdi, qword ptr [rbx + 0x38]
419083: sub rdx, rsi
419086: call 0x401040
41908b: mov rax, qword ptr [rbx + 0x38]
41908f: mov rdx, qword ptr [rbx + 0x10]
419093: add rdx, rax
419096: sub rdx, qword ptr [rbx + 8]
41909a: mov qword ptr [rbx + 0x18], rax
41909e: mov qword ptr [rbx + 0x10], rdx
4190a2: mov qword ptr [rbx + 8], rax
4190a6: jmp 0x418be3
4190ab: nop dword ptr [rax + rax]
4190b0: mov rdi, qword ptr [rax + 0x40]
4190b4: test rdi, rdi
4190b7: je 0x4190c4
4190b9: call 0x426a00
4190be: and dword ptr [rbx], 0xfffffeff
4190c4: mov rdi, rbx
4190c7: call 0x474b50
4190cc: jmp 0x418c0f
4190d1: nop dword ptr [rax]
4190d8: mov rdi, qword ptr [rbx + 0x48]
4190dc: test rdi, rdi
4190df: je 0x4190ec
4190e1: call 0x426a00
4190e6: and dword ptr [rbx], 0xfffffeff
4190ec: mov rdi, rbx
4190ef: call 0x41ed20
4190f4: mov rax, qword ptr [rbx + 0x38]
4190f8: mov qword ptr [rbx + 0x10], rax
4190fc: mov qword ptr [rbx + 8], rax
419100: mov qword ptr [rbx + 0x18], rax
419104: jmp 0x418bec
419109: nop dword ptr [rax]
419110: mov rax, qword ptr [rdx]
419113: mov eax, dword ptr [rax]
419115: jmp 0x418cf0
41911a: mov r15, 0x4c2208
419121: mov r12, 0x4c1b60
419128: mov r8, rbp
41912b: mov r13, r15
41912e: sub r13, r12
419131: mov rax, qword ptr [r8 + 0xd8]
419138: mov qword ptr [rsp], rax
41913c: sub rax, r12
41913f: cmp rax, r13
419142: jae 0x4191a5
419144: mov rax, qword ptr [rsp]
419148: mov esi, 0xffffffff
41914d: mov rdi, r8
419150: call qword ptr [rax + 0x18]
419153: jmp 0x418ca4
419158: nop dword ptr [rax + rax]
419160: or eax, 0x20
419163: mov dword ptr [rdi], eax
419165: mov rax, 0xffffffffffffffc0
41916c: mov dword ptr fs:[rax], 9
419173: mov eax, 0xffffffff
419178: jmp 0x418cf0
41917d: nop dword ptr [rax]
419180: mov eax, dword ptr [rcx]
419182: jmp 0x418cf0
419187: mov r8, rbp
41918a: jmp 0x418c7a
41918f: mov eax, ecx
419191: lock cmpxchg dword ptr [rdi], edx
419195: je 0x418c65
41919b: call 0x421250
4191a0: jmp 0x418c65
4191a5: call 0x41b240
4191aa: mov r8, qword ptr [rip + 0xa751f]
4191b1: jmp 0x419144
4191b3: xchg dword ptr [rdi], eax
4191b5: cmp eax, 1
4191b8: jle 0x418d50
4191be: xor r10d, r10d
4191c1: mov edx, 1
4191c6: mov esi, 0x81
4191cb: mov eax, 0xca
4191d0: syscall 
4191d2: jmp 0x418d56
4191d7: lea rcx, [rip + 0x7cb82]
4191de: mov edx, 0x122
4191e3: lea rsi, [rip + 0x7cb47]
4191ea: lea rdi, [rip + 0x7cb4b]
4191f1: call 0x4032a0
4191f6: call 0x4547a0
4191fb: endbr64 
4191ff: mov r8, rax
419202: jmp 0x4014ec
419207: nop word ptr [rax + rax]
419210: push r12
419212: push rbp
419213: mov ebp, esi
419215: push rbx
419216: mov rbx, rdi
419219: sub rsp, 0x10
41921d: mov r12, qword ptr [rdi + 0x98]
419224: mov rax, qword ptr fs:[0x28]
41922d: mov qword ptr [rsp + 8], rax
419232: xor eax, eax
419234: mov rdi, r12
419237: call 0x41a970
41923c: cmp bpl, 1
419240: je 0x419270
419242: movsxd rcx, eax
419245: test ecx, ecx
419247: jle 0x419270
419249: mov rax, qword ptr [rbx + 8]
41924d: sub rax, qword ptr [rbx + 0x18]
419251: cqo 
419253: mov rsi, qword ptr [rbx + 0xa0]
41925a: idiv rcx
41925d: mov rdx, qword ptr [rsi + 8]
419261: lea rax, [rdx + rax*4]
419265: mov qword ptr [rsi + 8], rax
419269: jmp 0x4192c0
41926b: nop dword ptr [rax + rax]
419270: mov rdx, qword ptr [rbx + 0x18]
419274: mov rbp, rsp
419277: mov qword ptr [rsp], rdx
41927b: mov rax, qword ptr [rbx + 0xa0]
419282: mov r8, rbp
419285: mov rcx, qword ptr [rax + 0x58]
419289: lea rdi, [rax + 8]
41928d: mov r9, qword ptr [rax + 0x10]
419291: lea rsi, [rax + 0x58]
419295: mov qword ptr [rax + 0x60], rcx
419299: mov rcx, qword ptr [rbx + 8]
41929d: push rdi
41929e: mov rdi, r12
4192a1: push qword ptr [rax + 0x38]
4192a4: call 0x41a880
4192a9: pop rdx
4192aa: pop rcx
4192ab: cmp eax, 2
4192ae: je 0x4192e0
4192b0: cmp eax, 1
4192b3: je 0x4192f0
4192b5: mov rsi, qword ptr [rbx + 0xa0]
4192bc: mov rax, qword ptr [rsi + 8]
4192c0: mov qword ptr [rsi], rax
4192c3: xor eax, eax
4192c5: mov rdx, qword ptr [rsp + 8]
4192ca: xor rdx, qword ptr fs:[0x28]
4192d3: jne 0x4192f6
4192d5: add rsp, 0x10
4192d9: pop rbx
4192da: pop rbp
4192db: pop r12
4192dd: ret 
4192de: nop 
4192e0: or dword ptr [rbx], 0x20
4192e3: mov eax, 0xffffffff
4192e8: jmp 0x4192c5
4192ea: nop word ptr [rax + rax]
4192f0: mov rdx, qword ptr [rbx + 0x18]
4192f4: jmp 0x41927b
4192f6: call 0x4547a0
4192fb: nop dword ptr [rax + rax]
419300: endbr64 
419304: push r15
419306: mov r15, rdi
419309: push r14
41930b: push r13
41930d: push r12
41930f: push rbp
419310: push rbx
419311: sub rsp, 0xd8
419318: mov rax, qword ptr fs:[0x28]
419321: mov qword ptr [rsp + 0xc8], rax
419329: xor eax, eax
41932b: mov rax, qword ptr [rdi + 0xa0]
419332: test ecx, ecx
419334: je 0x419728
41933a: mov r12d, edx
41933d: mov rcx, qword ptr [rax + 0x18]
419341: mov rdx, qword ptr [rax + 0x20]
419345: mov rbp, rsi
419348: mov rbx, qword ptr [rax + 8]
41934c: cmp qword ptr [rax + 0x10], rbx
419350: je 0x419588
419356: mov dword ptr [rsp + 8], 0
41935e: cmp rcx, rdx
419361: jae 0x4195a0
419367: mov rdi, r15
41936a: call 0x474c90
41936f: mov r8d, eax
419372: mov eax, 0xffffffff
419377: test r8d, r8d
41937a: jne 0x4196fb
419380: mov rax, qword ptr [r15 + 0xa0]
419387: cmp qword ptr [rax + 0x30], 0
41938c: je 0x4195b8
419392: cmp r12d, 1
419396: je 0x419613
41939c: cmp r12d, 2
4193a0: jne 0x419400
4193a2: mov r14, qword ptr [r15 + 0xd8]
4193a9: mov r13, 0x4c1b60
4193b0: mov rbx, 0x4c2208
4193b7: mov rax, r14
4193ba: sub rbx, r13
4193bd: sub rax, r13
4193c0: cmp rax, rbx
4193c3: jae 0x419aa0
4193c9: lea rsi, [rsp + 0x30]
4193ce: mov rdi, r15
4193d1: call qword ptr [r14 + 0x90]
4193d8: test eax, eax
4193da: jne 0x419688
4193e0: mov eax, dword ptr [rsp + 0x48]
4193e4: and eax, 0xf000
4193e9: cmp eax, 0x8000
4193ee: jne 0x419688
4193f4: add rbp, qword ptr [rsp + 0x60]
4193f9: xor r12d, r12d
4193fc: nop dword ptr [rax]
419400: mov rdi, r15
419403: call 0x475320
419408: mov rax, qword ptr [r15 + 0x90]
41940f: mov edx, dword ptr [r15]
419412: cmp rax, -1
419416: je 0x419440
419418: cmp qword ptr [r15 + 0x18], 0
41941d: je 0x419440
41941f: test dh, 1
419422: jne 0x419440
419424: mov rcx, qword ptr [r15 + 0x38]
419428: mov rsi, rcx
41942b: sub rsi, qword ptr [r15 + 0x10]
41942f: add rsi, rax
419432: cmp rax, rbp
419435: jle 0x419440
419437: cmp rbp, rsi
41943a: jge 0x4199e0
419440: mov r13, 0x4c1b60
419447: mov rbx, 0x4c2208
41944e: sub rbx, r13
419451: and edx, 4
419454: jne 0x419688
41945a: mov rdx, qword ptr [r15 + 0x38]
41945e: mov rax, qword ptr [r15 + 0x40]
419462: mov rcx, rbp
419465: mov rsi, rdx
419468: sub rsi, rax
41946b: sub rax, rdx
41946e: and rsi, rbp
419471: sub rcx, rsi
419474: cmp rax, rcx
419477: jl 0x419840
41947d: mov r14, qword ptr [r15 + 0xd8]
419484: mov rax, r14
419487: sub rax, r13
41948a: cmp rax, rbx
41948d: jae 0x419a80
419493: mov qword ptr [rsp + 0x10], rcx
419498: xor edx, edx
41949a: mov rdi, r15
41949d: call qword ptr [r14 + 0x80]
4194a4: mov r14, rax
4194a7: test rax, rax
4194aa: js 0x419833
4194b0: mov rcx, qword ptr [rsp + 0x10]
4194b5: test rcx, rcx
4194b8: je 0x4198e0
4194be: mov rax, qword ptr [r15 + 0xd8]
4194c5: mov rdx, rax
4194c8: sub rdx, r13
4194cb: cmp rdx, rbx
4194ce: jae 0x4199c0
4194d4: mov edi, dword ptr [rsp + 8]
4194d8: mov rax, qword ptr [rax + 0x70]
4194dc: mov rdx, rcx
4194df: mov rsi, qword ptr [r15 + 0x38]
4194e3: test edi, edi
4194e5: jne 0x4194ee
4194e7: mov rdx, qword ptr [r15 + 0x40]
4194eb: sub rdx, rsi
4194ee: mov qword ptr [rsp + 8], rcx
4194f3: mov rdi, r15
4194f6: call rax
4194f8: mov rcx, qword ptr [rsp + 8]
4194fd: mov r8, rax
419500: mov rdx, rax
419503: cmp rcx, rax
419506: jg 0x419850
41950c: mov rax, qword ptr [r15 + 0x38]
419510: mov esi, 1
419515: mov rdi, r15
419518: mov qword ptr [rsp + 8], r8
41951d: movdqu xmm0, xmmword ptr [r15 + 0x38]
419523: add rcx, rax
419526: add rax, rdx
419529: mov qword ptr [r15 + 0x10], rax
41952d: mov rax, qword ptr [r15 + 0xa0]
419534: punpcklqdq xmm0, xmm0
419538: movups xmmword ptr [r15 + 0x18], xmm0
41953d: movups xmmword ptr [r15 + 0x28], xmm0
419542: movq xmm0, qword ptr [rax + 0x30]
419547: mov qword ptr [r15 + 8], rcx
41954b: punpcklqdq xmm0, xmm0
41954f: movups xmmword ptr [rax], xmm0
419552: movups xmmword ptr [rax + 0x10], xmm0
419556: movups xmmword ptr [rax + 0x20], xmm0
41955a: call 0x419210
41955f: test eax, eax
419561: jne 0x419688
419567: mov r8, qword ptr [rsp + 8]
41956c: and dword ptr [r15], 0xffffffef
419570: mov rax, rbp
419573: add r14, r8
419576: mov qword ptr [r15 + 0x90], r14
41957d: jmp 0x4196fb
419582: nop word ptr [rax + rax]
419588: cmp rcx, rdx
41958b: jne 0x419356
419591: mov dword ptr [rsp + 8], 1
419599: nop dword ptr [rax]
4195a0: test dword ptr [r15], 0x800
4195a7: jne 0x419367
4195ad: cmp qword ptr [rax + 0x30], 0
4195b2: jne 0x419392
4195b8: mov rdi, qword ptr [rax + 0x10]
4195bc: test rdi, rdi
4195bf: je 0x4195cd
4195c1: call 0x426a00
4195c6: and dword ptr [r15], 0xfffffeff
4195cd: mov rdi, r15
4195d0: call 0x41ed20
4195d5: movdqu xmm0, xmmword ptr [r15 + 0x38]
4195db: mov rax, qword ptr [r15 + 0xa0]
4195e2: punpcklqdq xmm0, xmm0
4195e6: movups xmmword ptr [r15 + 8], xmm0
4195eb: movups xmmword ptr [r15 + 0x18], xmm0
4195f0: movups xmmword ptr [r15 + 0x28], xmm0
4195f5: movq xmm0, qword ptr [rax + 0x30]
4195fa: punpcklqdq xmm0, xmm0
4195fe: movups xmmword ptr [rax], xmm0
419601: movups xmmword ptr [rax + 0x10], xmm0
419605: movups xmmword ptr [rax + 0x20], xmm0
419609: cmp r12d, 1
41960d: jne 0x41939c
419613: mov r13, qword ptr [r15 + 0x98]
41961a: mov rdi, r13
41961d: call 0x41a970
419622: test eax, eax
419624: jle 0x419870
41962a: mov rcx, qword ptr [r15 + 0xa0]
419631: cdqe 
419633: mov rdx, qword ptr [rcx + 8]
419637: sub rdx, qword ptr [rcx]
41963a: sar rdx, 2
41963e: imul rax, rdx
419642: sub rbp, rax
419645: mov rax, qword ptr [r15 + 0x10]
419649: sub rax, qword ptr [r15 + 8]
41964d: sub rbp, rax
419650: mov rax, qword ptr [r15 + 0x90]
419657: cmp rax, -1
41965b: je 0x419670
41965d: add rbp, rax
419660: xor r12d, r12d
419663: jmp 0x419400
419668: nop dword ptr [rax + rax]
419670: mov r13, 0x4c1b60
419677: mov rbx, 0x4c2208
41967e: sub rbx, r13
419681: nop dword ptr [rax]
419688: mov rdi, r15
41968b: call 0x420540
419690: mov r14, qword ptr [r15 + 0xd8]
419697: mov rax, r14
41969a: sub rax, r13
41969d: cmp rax, rbx
4196a0: jae 0x419990
4196a6: mov edx, r12d
4196a9: mov rsi, rbp
4196ac: mov rdi, r15
4196af: call qword ptr [r14 + 0x80]
4196b6: cmp rax, -1
4196ba: je 0x4196fb
4196bc: movdqu xmm0, xmmword ptr [r15 + 0x38]
4196c2: mov rdx, qword ptr [r15 + 0xa0]
4196c9: mov qword ptr [r15 + 0x90], rax
4196d0: and dword ptr [r15], 0xffffffef
4196d4: punpcklqdq xmm0, xmm0
4196d8: movups xmmword ptr [r15 + 8], xmm0
4196dd: movups xmmword ptr [r15 + 0x18], xmm0
4196e2: movups xmmword ptr [r15 + 0x28], xmm0
4196e7: movq xmm0, qword ptr [rdx + 0x30]
4196ec: punpcklqdq xmm0, xmm0
4196f0: movups xmmword ptr [rdx], xmm0
4196f3: movups xmmword ptr [rdx + 0x10], xmm0
4196f7: movups xmmword ptr [rdx + 0x20], xmm0
4196fb: mov rbx, qword ptr [rsp + 0xc8]
419703: xor rbx, qword ptr fs:[0x28]
41970c: jne 0x419b99
419712: add rsp, 0xd8
419719: pop rbx
41971a: pop rbp
41971b: pop r12
41971d: pop r13
41971f: pop r14
419721: pop r15
419723: ret 
419724: nop dword ptr [rax]
419728: cmp qword ptr [rax + 0x30], 0
41972d: je 0x4198d0
419733: mov edx, dword ptr [rdi]
419735: mov rbp, qword ptr [rax + 0x20]
419739: mov rbx, qword ptr [rax + 0x18]
41973d: mov edi, edx
41973f: and edi, 0x1000
419745: mov dword ptr [rsp + 8], edi
419749: cmp rbp, rbx
41974c: jbe 0x4197a5
41974e: test edi, edi
419750: je 0x4197a5
419752: mov r13, qword ptr [r15 + 0xd8]
419759: mov rdx, 0x4c1b60
419760: mov rax, 0x4c2208
419767: mov rdi, r13
41976a: sub rax, rdx
41976d: sub rdi, rdx
419770: cmp rax, rdi
419773: jbe 0x419b62
419779: xor esi, esi
41977b: mov edx, 2
419780: mov rdi, r15
419783: call qword ptr [r13 + 0x80]
41978a: cmp rax, -1
41978e: je 0x419833
419794: mov qword ptr [r15 + 0x90], rax
41979b: mov edx, dword ptr [r15]
41979e: mov rax, qword ptr [r15 + 0xa0]
4197a5: mov r13, qword ptr [rax]
4197a8: mov r14, qword ptr [rax + 8]
4197ac: and dh, 1
4197af: je 0x4198f0
4197b5: cmp r14, r13
4197b8: ja 0x419825
4197ba: mov r13, qword ptr [rax + 0x40]
4197be: mov r14, qword ptr [rax + 0x50]
4197c2: mov qword ptr [rsp + 0x10], r13
4197c7: mov r12, qword ptr [r15 + 0x98]
4197ce: mov rdi, r12
4197d1: call 0x41a970
4197d6: mov edx, eax
4197d8: cmp rbp, rbx
4197db: ja 0x419900
4197e1: mov rcx, qword ptr [r15 + 0x10]
4197e5: test eax, eax
4197e7: jle 0x419b20
4197ed: mov rax, r14
4197f0: movsxd rbx, edx
4197f3: sub rcx, qword ptr [r15 + 8]
4197f7: sub rax, r13
4197fa: sar rax, 2
4197fe: imul rax, rbx
419802: neg rax
419805: sub rax, rcx
419808: mov rbx, rax
41980b: mov rax, qword ptr [r15 + 0x90]
419812: cmp rax, -1
419816: je 0x419948
41981c: add rax, rbx
41981f: jns 0x4196fb
419825: mov rax, 0xffffffffffffffc0
41982c: mov dword ptr fs:[rax], 0x16
419833: mov rax, 0xffffffffffffffff
41983a: jmp 0x4196fb
41983f: nop 
419840: mov rsi, rbp
419843: xor ecx, ecx
419845: jmp 0x41947d
41984a: nop word ptr [rax + rax]
419850: cmp rax, -1
419854: je 0x4199b0
41985a: sub rcx, rax
41985d: mov r12d, 1
419863: mov rbp, rcx
419866: jmp 0x419688
41986b: nop dword ptr [rax + rax]
419870: mov rsi, qword ptr [r15 + 0xa0]
419877: mov rcx, qword ptr [r15 + 0x10]
41987b: mov rdi, r13
41987e: mov rdx, qword ptr [r15 + 0x18]
419882: mov rax, qword ptr [rsi + 0x60]
419886: mov r8, qword ptr [rsi]
419889: add rsi, 0x58
41988d: sub r8, qword ptr [rsi - 0x48]
419891: mov qword ptr [rsi], rax
419894: sar r8, 2
419898: call 0x41a9a0
41989d: mov rcx, qword ptr [r15 + 0x18]
4198a1: movsxd rdx, eax
4198a4: lea rax, [rcx + rdx]
4198a8: mov qword ptr [r15 + 8], rax
4198ac: mov rax, qword ptr [r15 + 0xa0]
4198b3: mov rsi, qword ptr [rax]
4198b6: mov qword ptr [rax + 8], rsi
4198ba: mov rax, qword ptr [r15 + 0x10]
4198be: sub rax, rcx
4198c1: sub rax, rdx
4198c4: sub rbp, rax
4198c7: jmp 0x419650
4198cc: nop dword ptr [rax]
4198d0: xor ebx, ebx
4198d2: jmp 0x41980b
4198d7: nop word ptr [rax + rax]
4198e0: xor r8d, r8d
4198e3: xor edx, edx
4198e5: jmp 0x41950c
4198ea: nop word ptr [rax + rax]
4198f0: mov rax, qword ptr [rax + 0x10]
4198f4: mov qword ptr [rsp + 0x10], rax
4198f9: jmp 0x4197c7
4198fe: nop 
419900: mov rbp, qword ptr [r15 + 0xa0]
419907: mov rcx, qword ptr [rbp + 0x20]
41990b: mov r13, qword ptr [rbp + 0x18]
41990f: mov rbx, rcx
419912: sub rbx, r13
419915: test eax, eax
419917: jle 0x419ab0
41991d: sar rbx, 2
419921: cdqe 
419923: imul rbx, rax
419927: mov r8d, dword ptr [rsp + 8]
41992c: mov rax, qword ptr [r15 + 0x28]
419930: test r8d, r8d
419933: je 0x4199a0
419935: sub rax, qword ptr [r15 + 0x20]
419939: add rbx, rax
41993c: jmp 0x41980b
419941: nop dword ptr [rax]
419948: mov rbp, qword ptr [r15 + 0xd8]
41994f: mov rdx, 0x4c1b60
419956: mov rax, 0x4c2208
41995d: mov rdi, rbp
419960: sub rax, rdx
419963: sub rdi, rdx
419966: cmp rax, rdi
419969: jbe 0x419b6c
41996f: xor esi, esi
419971: mov edx, 1
419976: mov rdi, r15
419979: call qword ptr [rbp + 0x80]
41997f: cmp rax, -1
419983: jne 0x41981c
419989: jmp 0x419833
41998e: nop 
419990: call 0x41b240
419995: jmp 0x4196a6
41999a: nop word ptr [rax + rax]
4199a0: sub rax, qword ptr [r15 + 0x10]
4199a4: add rbx, rax
4199a7: jmp 0x41980b
4199ac: nop dword ptr [rax]
4199b0: mov rbp, rcx
4199b3: mov r12d, 1
4199b9: jmp 0x419688
4199be: nop 
4199c0: mov qword ptr [rsp + 0x18], rcx
4199c5: mov qword ptr [rsp + 0x10], rax
4199ca: call 0x41b240
4199cf: mov rcx, qword ptr [rsp + 0x18]
4199d4: mov rax, qword ptr [rsp + 0x10]
4199d9: jmp 0x4194d4
4199de: nop 
4199e0: mov rax, rbp
4199e3: movq xmm0, rcx
4199e8: mov rdi, r15
4199eb: sub rax, rsi
4199ee: punpcklqdq xmm0, xmm0
4199f2: xor esi, esi
4199f4: add rcx, rax
4199f7: mov rax, qword ptr [r15 + 0xa0]
4199fe: movups xmmword ptr [r15 + 0x18], xmm0
419a03: movups xmmword ptr [r15 + 0x28], xmm0
419a08: movq xmm0, qword ptr [rax + 0x30]
419a0d: mov qword ptr [r15 + 8], rcx
419a11: punpcklqdq xmm0, xmm0
419a15: movups xmmword ptr [rax], xmm0
419a18: movups xmmword ptr [rax + 0x10], xmm0
419a1c: movups xmmword ptr [rax + 0x20], xmm0
419a20: call 0x419210
419a25: test eax, eax
419a27: jne 0x419670
419a2d: mov rsi, qword ptr [r15 + 0x90]
419a34: and dword ptr [r15], 0xffffffef
419a38: test rsi, rsi
419a3b: js 0x419a6f
419a3d: mov rbx, qword ptr [r15 + 0xd8]
419a44: mov rdx, 0x4c1b60
419a4b: mov rax, 0x4c2208
419a52: mov rdi, rbx
419a55: sub rax, rdx
419a58: sub rdi, rdx
419a5b: cmp rax, rdi
419a5e: jbe 0x419b88
419a64: xor edx, edx
419a66: mov rdi, r15
419a69: call qword ptr [rbx + 0x80]
419a6f: mov rax, rbp
419a72: jmp 0x4196fb
419a77: nop word ptr [rax + rax]
419a80: mov qword ptr [rsp + 0x18], rsi
419a85: mov qword ptr [rsp + 0x10], rcx
419a8a: call 0x41b240
419a8f: mov rsi, qword ptr [rsp + 0x18]
419a94: mov rcx, qword ptr [rsp + 0x10]
419a99: jmp 0x419493
419a9e: nop 
419aa0: call 0x41b240
419aa5: jmp 0x4193c9
419aaa: nop word ptr [rax + rax]
419ab0: mov rdi, rbx
419ab3: mov qword ptr [rsp + 0x10], rcx
419ab8: call 0x426410
419abd: mov qword ptr [rsp + 0x28], r13
419ac2: mov rdx, r13
419ac5: mov rdi, r12
419ac8: mov qword ptr [rsp + 0x20], rax
419acd: mov r14, rax
419ad0: mov rax, qword ptr [rbp + 0x60]
419ad4: lea rsi, [rsp + 0x30]
419ad9: add rbx, r14
419adc: mov r9, r14
419adf: mov qword ptr [rsp + 0x30], rax
419ae4: lea rax, [rsp + 0x20]
419ae9: push rax
419aea: push rbx
419aeb: mov rcx, qword ptr [rsp + 0x20]
419af0: lea r8, [rsp + 0x38]
419af5: call 0x41a790
419afa: pop r9
419afc: pop r10
419afe: test eax, eax
419b00: jne 0x419b76
419b02: mov rbx, qword ptr [rsp + 0x20]
419b07: mov rdi, r14
419b0a: sub rbx, r14
419b0d: call 0x426a00
419b12: jmp 0x419927
419b17: nop word ptr [rax + rax]
419b20: mov rdx, qword ptr [r15 + 0x18]
419b24: mov r8, r13
419b27: sub r8, qword ptr [rsp + 0x10]
419b2c: mov rdi, r12
419b2f: mov rax, qword ptr [r15 + 0xa0]
419b36: lea rsi, [rsp + 0x30]
419b3b: sar r8, 2
419b3f: mov rax, qword ptr [rax + 0x60]
419b43: mov qword ptr [rsp + 0x30], rax
419b48: call 0x41a9a0
419b4d: mov rdx, qword ptr [r15 + 0x10]
419b51: sub rdx, qword ptr [r15 + 0x18]
419b55: cdqe 
419b57: sub rax, rdx
419b5a: mov rbx, rax
419b5d: jmp 0x41980b
419b62: call 0x41b240
419b67: jmp 0x419779
419b6c: call 0x41b240
419b71: jmp 0x41996f
419b76: mov rdi, r14
419b79: call 0x426a00
419b7e: mov eax, 0xffffffff
419b83: jmp 0x4196fb
419b88: call 0x41b240
419b8d: mov rsi, qword ptr [r15 + 0x90]
419b94: jmp 0x419a64
419b99: call 0x4547a0
419b9e: nop 
419ba0: endbr64 
419ba4: push rbp
419ba5: mov rbp, rdi
419ba8: call 0x41ca50
419bad: cmp eax, -1
419bb0: je 0x419bd0
419bb2: mov rax, qword ptr [rbp + 0xa0]
419bb9: mov rdi, rbp
419bbc: pop rbp
419bbd: mov rax, qword ptr [rax + 0xe0]
419bc4: mov rax, qword ptr [rax + 0x20]
419bc8: jmp rax
419bca: nop word ptr [rax + rax]
419bd0: mov eax, 0xffffffff
419bd5: pop rbp
419bd6: ret 
419bd7: nop word ptr [rax + rax]
419be0: endbr64 
419be4: push rbp
419be5: push rbx
419be6: mov rbx, rdi
419be9: sub rsp, 0x18
419bed: mov rax, qword ptr fs:[0x28]
419bf6: mov qword ptr [rsp + 8], rax
419bfb: xor eax, eax
419bfd: mov eax, dword ptr [rdi]
419bff: test al, 4
419c01: jne 0x419d20
419c07: mov rax, qword ptr [rdi + 0xa0]
419c0e: mov rdx, qword ptr [rax]
419c11: cmp rdx, qword ptr [rax + 8]
419c15: jb 0x419ca0
419c1b: mov rbp, qword ptr [rdi + 0x98]
419c22: mov rdx, qword ptr [rdi + 8]
419c26: cmp rdx, qword ptr [rdi + 0x10]
419c2a: jae 0x419cc0
419c30: mov r9, qword ptr [rax + 0x30]
419c34: mov qword ptr [rsp], rdx
419c38: test r9, r9
419c3b: je 0x419ce6
419c41: mov rcx, qword ptr [rax + 0x58]
419c45: lea rdi, [rax + 8]
419c49: mov qword ptr [rax], r9
419c4c: lea rsi, [rax + 0x58]
419c50: mov qword ptr [rax + 0x10], r9
419c54: mov qword ptr [rax + 0x60], rcx
419c58: mov rcx, qword ptr [rbx + 0x10]
419c5c: push rdi
419c5d: mov rdi, rbp
419c60: push qword ptr [rax + 0x38]
419c63: lea r8, [rsp + 0x10]
419c68: call 0x41a880
419c6d: mov rax, qword ptr [rsp + 0x10]
419c72: pop rcx
419c73: pop rsi
419c74: mov qword ptr [rbx + 8], rax
419c78: mov rax, qword ptr [rbx + 0xa0]
419c7f: mov rdx, qword ptr [rax]
419c82: cmp rdx, qword ptr [rax + 8]
419c86: jb 0x419ca0
419c88: mov rax, 0xffffffffffffffc0
419c8f: mov dword ptr fs:[rax], 0x54
419c96: mov eax, 0xffffffff
419c9b: or dword ptr [rbx], 0x20
419c9e: jmp 0x419ca2
419ca0: mov eax, dword ptr [rdx]
419ca2: mov rsi, qword ptr [rsp + 8]
419ca7: xor rsi, qword ptr fs:[0x28]
419cb0: jne 0x419d4a
419cb6: add rsp, 0x18
419cba: pop rbx
419cbb: pop rbp
419cbc: ret 
419cbd: nop dword ptr [rax]
419cc0: call 0x41cc30
419cc5: cmp eax, -1
419cc8: je 0x419d40
419cca: mov rax, qword ptr [rbx + 0xa0]
419cd1: mov rdx, qword ptr [rbx + 8]
419cd5: mov r9, qword ptr [rax + 0x30]
419cd9: mov qword ptr [rsp], rdx
419cdd: test r9, r9
419ce0: jne 0x419c41
419ce6: mov rdi, qword ptr [rax + 0x40]
419cea: test rdi, rdi
419ced: je 0x419cfa
419cef: call 0x426a00
419cf4: and dword ptr [rbx], 0xfffffeff
419cfa: mov rdi, rbx
419cfd: call 0x474b50
419d02: mov rax, qword ptr [rbx + 0xa0]
419d09: mov rdx, qword ptr [rbx + 8]
419d0d: mov r9, qword ptr [rax + 0x30]
419d11: jmp 0x419c41
419d16: nop word ptr cs:[rax + rax]
419d20: or eax, 0x20
419d23: mov dword ptr [rdi], eax
419d25: mov rax, 0xffffffffffffffc0
419d2c: mov dword ptr fs:[rax], 9
419d33: mov eax, 0xffffffff
419d38: jmp 0x419ca2
419d3d: nop dword ptr [rax]
419d40: mov eax, 0xffffffff
419d45: jmp 0x419ca2
419d4a: call 0x4547a0
419d4f: nop 
419d50: endbr64 
419d54: push r15
419d56: push r14
419d58: push r13
419d5a: push r12
419d5c: push rbp
419d5d: push rbx
419d5e: mov rbx, rdi
419d61: sub rsp, 0x58
419d65: mov rax, qword ptr fs:[0x28]
419d6e: mov qword ptr [rsp + 0x48], rax
419d73: xor eax, eax
419d75: test rdx, rdx
419d78: je 0x419e70
419d7e: mov r9, qword ptr [rdi + 0x28]
419d82: mov r14, qword ptr [rdi + 0x20]
419d86: mov rbp, rsi
419d89: mov r13, rdx
419d8c: mov r12, qword ptr [rdi + 0x98]
419d93: cmp qword ptr [rdi + 0x30], r9
419d97: je 0x419ed0
419d9d: lea rax, [rsp + 0x28]
419da2: lea r8, [rsp + 0x20]
419da7: mov qword ptr [rsp + 0x10], rax
419dac: lea rax, [rsp + 0x30]
419db1: mov qword ptr [rsp + 0x18], rax
419db6: jmp 0x419e4e
419dbb: nop dword ptr [rax + rax]
419dc0: mov rax, qword ptr [rbx + 0x40]
419dc4: mov qword ptr [rsp + 0x28], r9
419dc9: mov rdi, qword ptr [rbx + 0xa0]
419dd0: mov rdx, rbp
419dd3: lea rcx, [rbp + r13*4]
419dd8: push qword ptr [rsp + 0x10]
419ddc: push rax
419ddd: lea rsi, [rdi + 0x58]
419de1: mov rdi, r12
419de4: mov qword ptr [rsp + 0x18], r8
419de9: call 0x41a790
419dee: mov rsi, r14
419df1: mov rdi, rbx
419df4: mov r15d, eax
419df7: pop rax
419df8: pop rdx
419df9: mov rdx, qword ptr [rsp + 0x28]
419dfe: sub rdx, r14
419e01: call 0x41d0c0
419e06: cmp eax, -1
419e09: je 0x419e9f
419e0f: mov rdx, qword ptr [rsp + 0x20]
419e14: mov r8, qword ptr [rsp + 8]
419e19: mov rax, rdx
419e1c: sub rax, rbp
419e1f: sar rax, 2
419e23: sub r13, rax
419e26: test r15d, r15d
419e29: je 0x419e3e
419e2b: cmp rdx, rbp
419e2e: je 0x419f00
419e34: cmp r15d, 1
419e38: jne 0x419f00
419e3e: test r13, r13
419e41: je 0x419e70
419e43: mov r9, qword ptr [rbx + 0x28]
419e47: mov r14, qword ptr [rbx + 0x20]
419e4b: mov rbp, rdx
419e4e: mov rax, r9
419e51: sub rax, r14
419e54: cmp rax, 0xf
419e58: ja 0x419dc0
419e5e: mov r14, qword ptr [rsp + 0x18]
419e63: lea rax, [rsp + 0x40]
419e68: mov r9, r14
419e6b: jmp 0x419dc4
419e70: mov rdx, qword ptr [rbx + 0xa0]
419e77: mov eax, dword ptr [rbx]
419e79: mov rcx, qword ptr [rdx + 0x30]
419e7d: mov qword ptr [rdx + 0x10], rcx
419e81: mov qword ptr [rdx], rcx
419e84: mov qword ptr [rdx + 8], rcx
419e88: mov qword ptr [rdx + 0x20], rcx
419e8c: mov qword ptr [rdx + 0x18], rcx
419e90: and eax, 0x202
419e95: jne 0x419ec8
419e97: mov rcx, qword ptr [rdx + 0x38]
419e9b: mov qword ptr [rdx + 0x28], rcx
419e9f: mov rsi, qword ptr [rsp + 0x48]
419ea4: xor rsi, qword ptr fs:[0x28]
419ead: jne 0x419f39
419eb3: add rsp, 0x58
419eb7: pop rbx
419eb8: pop rbp
419eb9: pop r12
419ebb: pop r13
419ebd: pop r14
419ebf: pop r15
419ec1: ret 
419ec2: nop word ptr [rax + rax]
419ec8: mov qword ptr [rdx + 0x28], rcx
419ecc: xor eax, eax
419ece: jmp 0x419e9f
419ed0: cmp r9, r14
419ed3: je 0x419d9d
419ed9: mov rdx, r9
419edc: mov rsi, r14
419edf: sub rdx, r14
419ee2: call 0x41d0c0
419ee7: cmp eax, -1
419eea: je 0x419e9f
419eec: mov r9, qword ptr [rbx + 0x28]
419ef0: mov r14, qword ptr [rbx + 0x20]
419ef4: jmp 0x419d9d
419ef9: nop dword ptr [rax]
419f00: mov rdx, qword ptr [rbx + 0xa0]
419f07: xor eax, eax
419f09: test r13, r13
419f0c: setne al
419f0f: mov rcx, qword ptr [rdx + 0x30]
419f13: neg eax
419f15: mov qword ptr [rdx + 0x10], rcx
419f19: mov qword ptr [rdx], rcx
419f1c: mov qword ptr [rdx + 8], rcx
419f20: mov qword ptr [rdx + 0x20], rcx
419f24: mov qword ptr [rdx + 0x18], rcx
419f28: test dword ptr [rbx], 0x202
419f2e: jne 0x419e9b
419f34: jmp 0x419e97
419f39: call 0x4547a0
419f3e: nop 
419f40: endbr64 
419f44: push rbp
419f45: mov rbp, rdi
419f48: push rbx
419f49: sub rsp, 8
419f4d: mov eax, dword ptr [rdi]
419f4f: test al, 8
419f51: jne 0x41a068
419f57: mov ebx, esi
419f59: test ah, 8
419f5c: jne 0x419fe6
419f62: mov rdx, qword ptr [rdi + 0xa0]
419f69: cmp qword ptr [rdx + 0x18], 0
419f6e: je 0x41a180
419f74: mov rcx, qword ptr [rdx]
419f77: mov rsi, qword ptr [rdx + 0x38]
419f7b: cmp rcx, rsi
419f7e: je 0x41a130
419f84: movq xmm1, qword ptr [rdx + 8]
419f89: movq xmm2, qword ptr [rdi + 8]
419f8e: movq xmm0, qword ptr [rdi + 0x10]
419f93: movq xmm3, rcx
419f98: movq qword ptr [rdx], xmm1
419f9c: movq xmm4, rsi
419fa1: mov rsi, qword ptr [rbp + 0x40]
419fa5: punpcklqdq xmm1, xmm3
419fa9: movups xmmword ptr [rdx + 0x10], xmm1
419fad: movq xmm1, rcx
419fb2: punpcklqdq xmm1, xmm4
419fb6: movups xmmword ptr [rdx + 0x20], xmm1
419fba: mov qword ptr [rbp + 0x30], rsi
419fbe: mov esi, eax
419fc0: movq qword ptr [rbp + 8], xmm0
419fc5: or esi, 0x800
419fcb: punpcklqdq xmm0, xmm2
419fcf: mov dword ptr [rbp], esi
419fd2: movq qword ptr [rbp + 0x28], xmm2
419fd7: movups xmmword ptr [rbp + 0x18], xmm0
419fdb: test eax, 0x202
419fe0: jne 0x41a090
419fe6: cmp ebx, -1
419fe9: je 0x41a09d
419fef: mov rax, qword ptr [rbp + 0xa0]
419ff6: mov rdx, qword ptr [rax + 0x20]
419ffa: cmp rdx, qword ptr [rax + 0x38]
419ffe: je 0x41a0d0
41a004: lea rcx, [rdx + 4]
41a008: mov qword ptr [rax + 0x20], rcx
41a00c: mov dword ptr [rdx], ebx
41a00e: mov edx, dword ptr [rbp]
41a011: test dl, 2
41a014: je 0x41a050
41a016: mov edx, dword ptr [rbp + 0xc0]
41a01c: test edx, edx
41a01e: jle 0x41a110
41a024: mov rsi, qword ptr [rax + 0x18]
41a028: mov rdi, rbp
41a02b: sub rcx, rsi
41a02e: mov rdx, rcx
41a031: sar rdx, 2
41a035: call 0x419d50
41a03a: cmp eax, -1
41a03d: sete al
41a040: test al, al
41a042: je 0x41a05a
41a044: add rsp, 8
41a048: mov eax, 0xffffffff
41a04d: pop rbx
41a04e: pop rbp
41a04f: ret 
41a050: and dh, 2
41a053: je 0x41a05a
41a055: cmp ebx, 0xa
41a058: je 0x41a016
41a05a: add rsp, 8
41a05e: mov eax, ebx
41a060: pop rbx
41a061: pop rbp
41a062: ret 
41a063: nop dword ptr [rax + rax]
41a068: or eax, 0x20
41a06b: mov dword ptr [rdi], eax
41a06d: mov rax, 0xffffffffffffffc0
41a074: mov dword ptr fs:[rax], 9
41a07b: add rsp, 8
41a07f: mov eax, 0xffffffff
41a084: pop rbx
41a085: pop rbp
41a086: ret 
41a087: nop word ptr [rax + rax]
41a090: mov qword ptr [rdx + 0x28], rcx
41a094: cmp ebx, -1
41a097: jne 0x419fef
41a09d: mov esi, dword ptr [rbp + 0xc0]
41a0a3: test esi, esi
41a0a5: jle 0x41a1c8
41a0ab: mov rax, qword ptr [rbp + 0xa0]
41a0b2: mov rdi, rbp
41a0b5: mov rsi, qword ptr [rax + 0x18]
41a0b9: mov rdx, qword ptr [rax + 0x20]
41a0bd: add rsp, 8
41a0c1: pop rbx
41a0c2: pop rbp
41a0c3: sub rdx, rsi
41a0c6: sar rdx, 2
41a0ca: jmp 0x419d50
41a0cf: nop 
41a0d0: mov ecx, dword ptr [rbp + 0xc0]
41a0d6: test ecx, ecx
41a0d8: jle 0x41a160
41a0de: mov rsi, qword ptr [rax + 0x18]
41a0e2: mov rdi, rbp
41a0e5: sub rdx, rsi
41a0e8: sar rdx, 2
41a0ec: call 0x419d50
41a0f1: cmp eax, -1
41a0f4: sete al
41a0f7: test al, al
41a0f9: jne 0x41a044
41a0ff: mov rax, qword ptr [rbp + 0xa0]
41a106: mov rdx, qword ptr [rax + 0x20]
41a10a: jmp 0x41a004
41a10f: nop 
41a110: mov rsi, qword ptr [rbp + 0x20]
41a114: mov rdx, qword ptr [rbp + 0x28]
41a118: mov rdi, rbp
41a11b: sub rdx, rsi
41a11e: call 0x41d0c0
41a123: cmp eax, -1
41a126: sete al
41a129: jmp 0x41a040
41a12e: nop 
41a130: movq xmm2, qword ptr [rdi + 0x38]
41a135: mov rcx, qword ptr [rdx + 0x30]
41a139: movdqa xmm0, xmm2
41a13d: movq xmm1, rcx
41a142: punpcklqdq xmm0, xmm0
41a146: movups xmmword ptr [rdi + 8], xmm0
41a14a: movq xmm0, rcx
41a14f: punpcklqdq xmm0, xmm0
41a153: movups xmmword ptr [rdx], xmm0
41a156: movdqa xmm0, xmm2
41a15a: jmp 0x419f93
41a15f: nop 
41a160: mov rsi, qword ptr [rbp + 0x20]
41a164: mov rdx, qword ptr [rbp + 0x28]
41a168: mov rdi, rbp
41a16b: sub rdx, rsi
41a16e: call 0x41d0c0
41a173: cmp eax, -1
41a176: sete al
41a179: jmp 0x41a0f7
41a17e: nop 
41a180: call 0x474b50
41a185: mov rdi, rbp
41a188: call 0x475320
41a18d: mov rdx, qword ptr [rbp + 0xa0]
41a194: cmp qword ptr [rbp + 0x20], 0
41a199: mov rcx, qword ptr [rdx + 0x30]
41a19d: mov qword ptr [rdx + 0x10], rcx
41a1a1: mov qword ptr [rdx], rcx
41a1a4: mov qword ptr [rdx + 8], rcx
41a1a8: je 0x41a1e8
41a1aa: mov rsi, qword ptr [rdx + 0x38]
41a1ae: movq xmm2, qword ptr [rbp + 8]
41a1b3: movq xmm1, rcx
41a1b8: movq xmm0, qword ptr [rbp + 0x10]
41a1bd: mov eax, dword ptr [rbp]
41a1c0: jmp 0x419f93
41a1c5: nop dword ptr [rax]
41a1c8: mov rsi, qword ptr [rbp + 0x20]
41a1cc: mov rdx, qword ptr [rbp + 0x28]
41a1d0: add rsp, 8
41a1d4: mov rdi, rbp
41a1d7: pop rbx
41a1d8: pop rbp
41a1d9: sub rdx, rsi
41a1dc: jmp 0x41d0c0
41a1e1: nop dword ptr [rax]
41a1e8: mov rdi, rbp
41a1eb: call 0x41ed20
41a1f0: mov rdx, qword ptr [rbp + 0xa0]
41a1f7: movq xmm2, qword ptr [rbp + 0x38]
41a1fc: mov eax, dword ptr [rbp]
41a1ff: mov rcx, qword ptr [rdx]
41a202: mov rsi, qword ptr [rdx + 0x38]
41a206: movq qword ptr [rbp + 0x10], xmm2
41a20b: movdqa xmm0, xmm2
41a20f: movq xmm1, qword ptr [rdx + 8]
41a214: jmp 0x419f93
41a219: nop dword ptr [rax]
41a220: endbr64 
41a224: push r13
41a226: push r12
41a228: push rbp
41a229: push rbx
41a22a: mov rbx, rdi
41a22d: sub rsp, 0x18
41a231: mov rax, qword ptr [rdi + 0xa0]
41a238: mov rdx, qword ptr [rax + 0x20]
41a23c: mov rsi, qword ptr [rax + 0x18]
41a240: cmp rdx, rsi
41a243: jbe 0x41a273
41a245: mov eax, dword ptr [rdi + 0xc0]
41a24b: test eax, eax
41a24d: jle 0x41a310
41a253: sub rdx, rsi
41a256: sar rdx, 2
41a25a: call 0x419d50
41a25f: test eax, eax
41a261: setne al
41a264: test al, al
41a266: jne 0x41a32d
41a26c: mov rax, qword ptr [rbx + 0xa0]
41a273: mov rbp, qword ptr [rax]
41a276: mov r12, qword ptr [rax + 8]
41a27a: cmp rbp, r12
41a27d: je 0x41a2f5
41a27f: mov r13, qword ptr [rbx + 0x98]
41a286: mov rdi, r13
41a289: call 0x41a970
41a28e: test eax, eax
41a290: jle 0x41a350
41a296: sub rbp, r12
41a299: movsxd rsi, eax
41a29c: sar rbp, 2
41a2a0: imul rsi, rbp
41a2a4: mov rbp, qword ptr [rbx + 0xd8]
41a2ab: mov rdx, 0x4c1b60
41a2b2: mov rax, 0x4c2208
41a2b9: mov rcx, rbp
41a2bc: sub rax, rdx
41a2bf: sub rcx, rdx
41a2c2: cmp rax, rcx
41a2c5: jbe 0x41a3a0
41a2cb: mov edx, 1
41a2d0: mov rdi, rbx
41a2d3: call qword ptr [rbp + 0x80]
41a2d9: cmp rax, -1
41a2dd: je 0x41a340
41a2df: mov rax, qword ptr [rbx + 0xa0]
41a2e6: mov rdx, qword ptr [rax]
41a2e9: mov qword ptr [rax + 8], rdx
41a2ed: mov rax, qword ptr [rbx + 8]
41a2f1: mov qword ptr [rbx + 0x10], rax
41a2f5: mov qword ptr [rbx + 0x90], 0xffffffffffffffff
41a300: add rsp, 0x18
41a304: xor eax, eax
41a306: pop rbx
41a307: pop rbp
41a308: pop r12
41a30a: pop r13
41a30c: ret 
41a30d: nop dword ptr [rax]
41a310: mov rsi, qword ptr [rdi + 0x20]
41a314: mov rdx, qword ptr [rdi + 0x28]
41a318: sub rdx, rsi
41a31b: call 0x41d0c0
41a320: test eax, eax
41a322: setne al
41a325: test al, al
41a327: je 0x41a26c
41a32d: add rsp, 0x18
41a331: mov eax, 0xffffffff
41a336: pop rbx
41a337: pop rbp
41a338: pop r12
41a33a: pop r13
41a33c: ret 
41a33d: nop dword ptr [rax]
41a340: mov rax, 0xffffffffffffffc0
41a347: cmp dword ptr fs:[rax], 0x1d
41a34b: jne 0x41a32d
41a34d: jmp 0x41a2f5
41a34f: nop 
41a350: mov rsi, qword ptr [rbx + 0xa0]
41a357: mov rcx, qword ptr [rbx + 0x10]
41a35b: mov rdi, r13
41a35e: mov rdx, qword ptr [rbx + 0x18]
41a362: mov rax, qword ptr [rsi + 0x60]
41a366: mov r8, qword ptr [rsi]
41a369: add rsi, 0x58
41a36d: sub r8, qword ptr [rsi - 0x48]
41a371: mov qword ptr [rsi], rax
41a374: sar r8, 2
41a378: call 0x41a9a0
41a37d: mov rdx, qword ptr [rbx + 0x18]
41a381: cdqe 
41a383: lea rcx, [rdx + rax]
41a387: sub rdx, qword ptr [rbx + 0x10]
41a38b: mov qword ptr [rbx + 8], rcx
41a38f: lea rsi, [rdx + rax]
41a393: jmp 0x41a2a4
41a398: nop dword ptr [rax + rax]
41a3a0: mov qword ptr [rsp + 8], rsi
41a3a5: call 0x41b240
41a3aa: mov rsi, qword ptr [rsp + 8]
41a3af: jmp 0x41a2cb
41a3b4: nop word ptr cs:[rax + rax]
41a3bf: nop 
41a3c0: endbr64 
41a3c4: test rdx, rdx
41a3c7: je 0x41a520
41a3cd: push r15
41a3cf: push r14
41a3d1: push r13
41a3d3: mov r13, rdi
41a3d6: push r12
41a3d8: mov r12, rsi
41a3db: push rbp
41a3dc: mov rbp, rdx
41a3df: push rbx
41a3e0: sub rsp, 8
41a3e4: mov eax, dword ptr [r13]
41a3e8: mov r14, qword ptr [rdi + 0xa0]
41a3ef: and eax, 0xa00
41a3f4: mov rbx, qword ptr [r14 + 0x28]
41a3f8: mov rdi, qword ptr [r14 + 0x20]
41a3fc: cmp eax, 0xa00
41a401: je 0x41a4e0
41a407: sub rbx, rdi
41a40a: xor r15d, r15d
41a40d: sar rbx, 2
41a411: test rbx, rbx
41a414: je 0x41a528
41a41a: cmp rbp, rbx
41a41d: cmovbe rbx, rbp
41a421: cmp rbx, 0x14
41a425: ja 0x41a5c0
41a42b: lea rax, [r12 + 0xf]
41a430: lea edx, [rbx - 1]
41a433: sub rax, rdi
41a436: cmp rax, 0x1e
41a43a: jbe 0x41a600
41a440: cmp edx, 3
41a443: jbe 0x41a600
41a449: movdqu xmm0, xmmword ptr [r12]
41a44f: mov eax, ebx
41a451: shr eax, 2
41a454: movups xmmword ptr [rdi], xmm0
41a457: cmp eax, 1
41a45a: je 0x41a570
41a460: movdqu xmm1, xmmword ptr [r12 + 0x10]
41a467: movups xmmword ptr [rdi + 0x10], xmm1
41a46b: cmp eax, 2
41a46e: je 0x41a570
41a474: movdqu xmm2, xmmword ptr [r12 + 0x20]
41a47b: movups xmmword ptr [rdi + 0x20], xmm2
41a47f: cmp eax, 3
41a482: je 0x41a570
41a488: movdqu xmm3, xmmword ptr [r12 + 0x30]
41a48f: movups xmmword ptr [rdi + 0x30], xmm3
41a493: cmp eax, 5
41a496: jne 0x41a570
41a49c: movdqu xmm4, xmmword ptr [r12 + 0x40]
41a4a3: movups xmmword ptr [rdi + 0x40], xmm4
41a4a7: lea rax, [rdx*4 + 4]
41a4af: add rdi, rax
41a4b2: add r12, rax
41a4b5: mov qword ptr [r14 + 0x20], rdi
41a4b9: mov rax, rbp
41a4bc: sub rax, rbx
41a4bf: mov rbx, rax
41a4c2: jne 0x41a52b
41a4c4: test r15d, r15d
41a4c7: jne 0x41a544
41a4c9: add rsp, 8
41a4cd: mov rax, rbp
41a4d0: pop rbx
41a4d1: pop rbp
41a4d2: pop r12
41a4d4: pop r13
41a4d6: pop r14
41a4d8: pop r15
41a4da: ret 
41a4db: nop dword ptr [rax + rax]
41a4e0: mov rbx, qword ptr [r14 + 0x38]
41a4e4: xor r15d, r15d
41a4e7: sub rbx, rdi
41a4ea: sar rbx, 2
41a4ee: cmp rdx, rbx
41a4f1: ja 0x41a411
41a4f7: lea rax, [rsi + rdx*4]
41a4fb: jmp 0x41a50d
41a4fd: nop dword ptr [rax]
41a500: sub rax, 4
41a504: cmp dword ptr [rax], 0xa
41a507: je 0x41a5e0
41a50d: cmp r12, rax
41a510: jb 0x41a500
41a512: xor r15d, r15d
41a515: jmp 0x41a411
41a51a: nop word ptr [rax + rax]
41a520: xor eax, eax
41a522: ret 
41a523: nop dword ptr [rax + rax]
41a528: mov rbx, rbp
41a52b: mov rdx, rbx
41a52e: mov rsi, r12
41a531: mov rdi, r13
41a534: call 0x474910
41a539: sub rax, rbx
41a53c: add rbp, rax
41a53f: test r15d, r15d
41a542: je 0x41a4c9
41a544: mov rax, qword ptr [r13 + 0xa0]
41a54b: mov rdx, qword ptr [rax + 0x20]
41a54f: mov rsi, qword ptr [rax + 0x18]
41a553: cmp rdx, rsi
41a556: je 0x41a4c9
41a55c: sub rdx, rsi
41a55f: mov rdi, r13
41a562: sar rdx, 2
41a566: call 0x419d50
41a56b: jmp 0x41a4c9
41a570: mov ecx, ebx
41a572: mov r8d, edx
41a575: and ecx, 0xfffffffc
41a578: mov eax, ecx
41a57a: sub r8d, ecx
41a57d: shl rax, 2
41a581: lea rsi, [r12 + rax]
41a585: add rax, rdi
41a588: cmp ebx, ecx
41a58a: je 0x41a4a7
41a590: mov ecx, dword ptr [rsi]
41a592: mov dword ptr [rax], ecx
41a594: test r8d, r8d
41a597: je 0x41a4a7
41a59d: mov ecx, dword ptr [rsi + 4]
41a5a0: mov dword ptr [rax + 4], ecx
41a5a3: cmp r8d, 1
41a5a7: je 0x41a4a7
41a5ad: mov ecx, dword ptr [rsi + 8]
41a5b0: mov dword ptr [rax + 8], ecx
41a5b3: jmp 0x41a4a7
41a5b8: nop dword ptr [rax + rax]
41a5c0: mov rsi, r12
41a5c3: mov rdx, rbx
41a5c6: lea r12, [r12 + rbx*4]
41a5ca: call 0x44f010
41a5cf: mov qword ptr [r14 + 0x20], rax
41a5d3: jmp 0x41a4b9
41a5d8: nop dword ptr [rax + rax]
41a5e0: sub rax, r12
41a5e3: mov r15d, 1
41a5e9: sar rax, 2
41a5ed: lea rbx, [rax + 1]
41a5f1: jmp 0x41a411
41a5f6: nop word ptr cs:[rax + rax]
41a600: xor eax, eax
41a602: nop word ptr [rax + rax]
41a608: mov ecx, dword ptr [r12 + rax*4]
41a60c: mov dword ptr [rdi + rax*4], ecx
41a60f: mov rcx, rax
41a612: add rax, 1
41a616: cmp rcx, rdx
41a619: jne 0x41a608
41a61b: jmp 0x41a4a7
41a620: endbr64 
41a624: push rbp
41a625: push rbx
41a626: mov rbx, rdi
41a629: sub rsp, 0x38
41a62d: mov rax, qword ptr fs:[0x28]
41a636: mov qword ptr [rsp + 0x28], rax
41a63b: xor eax, eax
41a63d: mov eax, dword ptr [rdi + 0xc0]
41a643: test esi, esi
41a645: js 0x41a670
41a647: test eax, eax
41a649: jne 0x41a64f
41a64b: test esi, esi
41a64d: jne 0x41a688
41a64f: mov rcx, qword ptr [rsp + 0x28]
41a654: xor rcx, qword ptr fs:[0x28]
41a65d: jne 0x41a74c
41a663: add rsp, 0x38
41a667: pop rbx
41a668: pop rbp
41a669: ret 
41a66a: nop word ptr [rax + rax]
41a670: test eax, eax
41a672: jne 0x41a64f
41a674: mov eax, 0xffffffff
41a679: mov dword ptr [rbx + 0xc0], eax
41a67f: jmp 0x41a64f
41a681: nop dword ptr [rax]
41a688: mov rbp, qword ptr [rdi + 0xa0]
41a68f: lea rax, [rbp + 0x68]
41a693: mov qword ptr [rdi + 0x98], rax
41a69a: mov rax, qword ptr [rbp + 8]
41a69e: mov qword ptr [rbp + 0x58], 0
41a6a6: mov qword ptr [rbp], rax
41a6aa: mov rax, qword ptr [rbp + 0x18]
41a6ae: mov qword ptr [rbp + 0x20], rax
41a6b2: mov rax, qword ptr [rdi + 0xa0]
41a6b9: mov rdi, rsp
41a6bc: mov qword ptr [rax + 0x60], 0
41a6c4: call 0x44fa40
41a6c9: cmp qword ptr [rsp + 8], 1
41a6cf: jne 0x41a770
41a6d5: cmp qword ptr [rsp + 0x18], 1
41a6db: jne 0x41a751
41a6dd: mov rax, qword ptr [rsp]
41a6e1: mov rcx, qword ptr [rsp + 0x10]
41a6e6: mov qword ptr [rbp + 0x80], 1
41a6f1: mov dword ptr [rbp + 0x88], 1
41a6fb: mov qword ptr [rbp + 0x68], rax
41a6ff: mov rax, qword ptr [rbx + 0xa0]
41a706: mov qword ptr [rbp + 0xa0], rcx
41a70d: mov qword ptr [rbp + 0xb8], 9
41a718: lea rdx, [rax + 0x58]
41a71c: mov rax, qword ptr [rax + 0xe0]
41a723: mov qword ptr [rbp + 0x90], rdx
41a72a: mov dword ptr [rbp + 0xc0], 1
41a734: mov qword ptr [rbp + 0xc8], rdx
41a73b: mov qword ptr [rbx + 0xd8], rax
41a742: mov eax, 1
41a747: jmp 0x41a679
41a74c: call 0x4547a0
41a751: lea rcx, [rip + 0x7b658]
41a758: mov edx, 0x51
41a75d: lea rsi, [rip + 0x7b610]
41a764: lea rdi, [rip + 0x7b629]
41a76b: call 0x4032a0
41a770: lea rcx, [rip + 0x7b639]
41a777: mov edx, 0x50
41a77c: lea rsi, [rip + 0x7b5f1]
41a783: lea rdi, [rip + 0x7b5f4]
41a78a: call 0x4032a0
41a78f: nop 
41a790: endbr64 
41a794: push r15
41a796: movq xmm0, r9
41a79b: mov r15, rcx
41a79e: push r14
41a7a0: push r13
41a7a2: push r12
41a7a4: mov r12, r8
41a7a7: push rbp
41a7a8: push rbx
41a7a9: mov rbx, rdi
41a7ac: sub rsp, 0x28
41a7b0: mov r13, qword ptr [rdi + 0x38]
41a7b4: mov rax, qword ptr fs:[0x28]
41a7bd: mov qword ptr [rsp + 0x18], rax
41a7c2: xor eax, eax
41a7c4: movhps xmm0, qword ptr [rsp + 0x60]
41a7c9: mov qword ptr [rdi + 0x60], rsi
41a7cd: mov r14, qword ptr [rsp + 0x68]
41a7d2: cmp qword ptr [r13], 0
41a7d7: mov rbp, qword ptr [r13 + 0x28]
41a7db: mov qword ptr [rsp + 0x10], rdx
41a7e0: movups xmmword ptr [rdi + 0x40], xmm0
41a7e4: je 0x41a7f3
41a7e6: ror rbp, 0x11
41a7ea: xor rbp, qword ptr fs:[0x30]
41a7f3: mov rdi, rbp
41a7f6: call 0x456100
41a7fb: lea rdx, [rsp + 0x10]
41a800: push 0
41a802: mov rcx, r15
41a805: push 0
41a807: lea rsi, [rbx + 0x40]
41a80b: xor r8d, r8d
41a80e: mov rdi, r13
41a811: lea r9, [rsp + 0x18]
41a816: call rbp
41a818: mov rdx, qword ptr [rsp + 0x20]
41a81d: mov qword ptr [r12], rdx
41a821: mov rdx, qword ptr [rbx + 0x40]
41a825: mov qword ptr [r14], rdx
41a828: pop rdx
41a829: pop rcx
41a82a: cmp eax, 5
41a82d: je 0x41a870
41a82f: jg 0x41a860
41a831: and eax, 0xfffffffb
41a834: setne al
41a837: movzx eax, al
41a83a: add eax, eax
41a83c: mov rcx, qword ptr [rsp + 0x18]
41a841: xor rcx, qword ptr fs:[0x28]
41a84a: jne 0x41a877
41a84c: add rsp, 0x28
41a850: pop rbx
41a851: pop rbp
41a852: pop r12
41a854: pop r13
41a856: pop r14
41a858: pop r15
41a85a: ret 
41a85b: nop dword ptr [rax + rax]
41a860: cmp eax, 7
41a863: setne al
41a866: movzx eax, al
41a869: add eax, 1
41a86c: jmp 0x41a83c
41a86e: nop 
41a870: mov eax, 1
41a875: jmp 0x41a83c
41a877: call 0x4547a0
41a87c: nop dword ptr [rax]
41a880: endbr64 
41a884: push r15
41a886: movq xmm0, r9
41a88b: mov r15, rcx
41a88e: push r14
41a890: push r13
41a892: push r12
41a894: mov r12, r8
41a897: push rbp
41a898: push rbx
41a899: mov rbx, rdi
41a89c: sub rsp, 0x28
41a8a0: mov r13, qword ptr [rdi]
41a8a3: mov rax, qword ptr fs:[0x28]
41a8ac: mov qword ptr [rsp + 0x18], rax
41a8b1: xor eax, eax
41a8b3: movhps xmm0, qword ptr [rsp + 0x60]
41a8b8: mov qword ptr [rdi + 0x28], rsi
41a8bc: mov r14, qword ptr [rsp + 0x68]
41a8c1: cmp qword ptr [r13], 0
41a8c6: mov rbp, qword ptr [r13 + 0x28]
41a8ca: mov qword ptr [rsp + 0x10], rdx
41a8cf: movups xmmword ptr [rdi + 8], xmm0
41a8d3: je 0x41a8e2
41a8d5: ror rbp, 0x11
41a8d9: xor rbp, qword ptr fs:[0x30]
41a8e2: mov rdi, rbp
41a8e5: call 0x456100
41a8ea: lea rdx, [rsp + 0x10]
41a8ef: push 0
41a8f1: mov rcx, r15
41a8f4: push 0
41a8f6: lea rsi, [rbx + 8]
41a8fa: xor r8d, r8d
41a8fd: mov rdi, r13
41a900: lea r9, [rsp + 0x18]
41a905: call rbp
41a907: mov rdx, qword ptr [rsp + 0x20]
41a90c: mov qword ptr [r12], rdx
41a910: mov rdx, qword ptr [rbx + 8]
41a914: mov qword ptr [r14], rdx
41a917: pop rdx
41a918: pop rcx
41a919: cmp eax, 5
41a91c: je 0x41a960
41a91e: jg 0x41a950
41a920: and eax, 0xfffffffb
41a923: setne al
41a926: movzx eax, al
41a929: add eax, eax
41a92b: mov rcx, qword ptr [rsp + 0x18]
41a930: xor rcx, qword ptr fs:[0x28]
41a939: jne 0x41a967
41a93b: add rsp, 0x28
41a93f: pop rbx
41a940: pop rbp
41a941: pop r12
41a943: pop r13
41a945: pop r14
41a947: pop r15
41a949: ret 
41a94a: nop word ptr [rax + rax]
41a950: cmp eax, 7
41a953: setne al
41a956: movzx eax, al
41a959: add eax, 1
41a95c: jmp 0x41a92b
41a95e: nop 
41a960: mov eax, 1
41a965: jmp 0x41a92b
41a967: call 0x4547a0
41a96c: nop dword ptr [rax]
41a970: endbr64 
41a974: mov rdx, qword ptr [rdi]
41a977: mov ecx, dword ptr [rdx + 0x58]
41a97a: test ecx, ecx
41a97c: jne 0x41a990
41a97e: mov eax, dword ptr [rdx + 0x4c]
41a981: cmp dword ptr [rdx + 0x48], eax
41a984: cmovne eax, ecx
41a987: ret 
41a988: nop dword ptr [rax + rax]
41a990: mov eax, 0xffffffff
41a995: ret 
41a996: nop word ptr cs:[rax + rax]
41a9a0: endbr64 
41a9a4: push rbp
41a9a5: shl r8, 2
41a9a9: mov rbp, rsp
41a9ac: push r15
41a9ae: push r14
41a9b0: mov r14, rcx
41a9b3: push r13
41a9b5: mov r13, rdx
41a9b8: push r12
41a9ba: push rbx
41a9bb: mov rbx, rdi
41a9be: sub rsp, 0x28
41a9c2: mov rax, qword ptr fs:[0x28]
41a9cb: mov qword ptr [rbp - 0x38], rax
41a9cf: xor eax, eax
41a9d1: lea rax, [r8 + 0xf]
41a9d5: mov qword ptr [rbp - 0x48], rdx
41a9d9: mov rcx, rsp
41a9dc: mov rdx, rax
41a9df: and rax, 0xfffffffffffff000
41a9e5: sub rcx, rax
41a9e8: and rdx, 0xfffffffffffffff0
41a9ec: mov rax, rcx
41a9ef: cmp rsp, rax
41a9f2: je 0x41aa09
41a9f4: sub rsp, 0x1000
41a9fb: or qword ptr [rsp + 0xff8], 0
41aa04: cmp rsp, rax
41aa07: jne 0x41a9f4
41aa09: and edx, 0xfff
41aa0f: sub rsp, rdx
41aa12: test rdx, rdx
41aa15: jne 0x41aa90
41aa17: mov r15, qword ptr [rbx]
41aa1a: mov rax, rsp
41aa1d: mov qword ptr [rbx + 0x28], rsi
41aa21: add r8, rax
41aa24: mov qword ptr [rbx + 8], rax
41aa28: cmp qword ptr [r15], 0
41aa2c: mov r12, qword ptr [r15 + 0x28]
41aa30: mov qword ptr [rbx + 0x10], r8
41aa34: je 0x41aa43
41aa36: ror r12, 0x11
41aa3a: xor r12, qword ptr fs:[0x30]
41aa43: mov rdi, r12
41aa46: call 0x456100
41aa4b: push 0
41aa4d: lea rsi, [rbx + 8]
41aa51: xor r8d, r8d
41aa54: push 0
41aa56: lea rdx, [rbp - 0x48]
41aa5a: lea r9, [rbp - 0x40]
41aa5e: mov rcx, r14
41aa61: mov rdi, r15
41aa64: call r12
41aa67: mov rax, qword ptr [rbp - 0x48]
41aa6b: sub rax, r13
41aa6e: mov rbx, qword ptr [rbp - 0x38]
41aa72: xor rbx, qword ptr fs:[0x28]
41aa7b: jne 0x41aa9b
41aa7d: lea rsp, [rbp - 0x28]
41aa81: pop rbx
41aa82: pop r12
41aa84: pop r13
41aa86: pop r14
41aa88: pop r15
41aa8a: pop rbp
41aa8b: ret 
41aa8c: nop dword ptr [rax]
41aa90: or qword ptr [rsp + rdx - 8], 0
41aa96: jmp 0x41aa17
41aa9b: call 0x4547a0
41aaa0: endbr64 
41aaa4: push rbp
41aaa5: push rbx
41aaa6: sub rsp, 8
41aaaa: mov rbp, qword ptr [rip + 0xa5c27]
41aab1: test byte ptr [rbp + 0x74], 0x80
41aab5: je 0x41ab78
41aabb: mov edx, dword ptr [rbp]
41aabe: and edx, 0x8000
41aac4: jne 0x41ab18
41aac6: mov r8, qword ptr [rbp + 0x88]
41aacd: mov rbx, qword ptr fs:[0x10]
41aad6: cmp qword ptr [r8 + 8], rbx
41aada: je 0x41aba0
41aae0: mov eax, dword ptr fs:[0x18]
41aae8: test eax, eax
41aaea: jne 0x41abd0
41aaf0: mov edx, 1
41aaf5: cmpxchg dword ptr [r8], edx
41aaf9: mov r8, qword ptr [rbp + 0x88]
41ab00: mov rdi, qword ptr [rip + 0xa5bd1]
41ab07: mov qword ptr [r8 + 8], rbx
41ab0b: add dword ptr [r8 + 4], 1
41ab10: jmp 0x41ab1b
41ab12: nop word ptr [rax + rax]
41ab18: mov rdi, rbp
41ab1b: mov rax, qword ptr [rdi + 8]
41ab1f: cmp rax, qword ptr [rdi + 0x10]
41ab23: jae 0x41abb0
41ab29: lea rdx, [rax + 1]
41ab2d: mov qword ptr [rdi + 8], rdx
41ab31: movzx r8d, byte ptr [rax]
41ab35: test dword ptr [rbp], 0x8000
41ab3c: jne 0x41ab6b
41ab3e: mov rdi, qword ptr [rbp + 0x88]
41ab45: mov eax, dword ptr [rdi + 4]
41ab48: sub eax, 1
41ab4b: mov dword ptr [rdi + 4], eax
41ab4e: jne 0x41ab6b
41ab50: mov qword ptr [rdi + 8], 0
41ab58: mov edx, dword ptr fs:[0x18]
41ab60: test edx, edx
41ab62: jne 0x41abf0
41ab68: sub dword ptr [rdi], 1
41ab6b: add rsp, 8
41ab6f: mov eax, r8d
41ab72: pop rbx
41ab73: pop rbp
41ab74: ret 
41ab75: nop dword ptr [rax]
41ab78: mov rax, qword ptr [rbp + 8]
41ab7c: cmp rax, qword ptr [rbp + 0x10]
41ab80: jae 0x41abc0
41ab82: lea rdx, [rax + 1]
41ab86: mov qword ptr [rbp + 8], rdx
41ab8a: movzx r8d, byte ptr [rax]
41ab8e: add rsp, 8
41ab92: pop rbx
41ab93: pop rbp
41ab94: mov eax, r8d
41ab97: ret 
41ab98: nop dword ptr [rax + rax]
41aba0: mov rdi, rbp
41aba3: jmp 0x41ab0b
41aba8: nop dword ptr [rax + rax]
41abb0: call 0x41eae0
41abb5: mov r8d, eax
41abb8: jmp 0x41ab35
41abbd: nop dword ptr [rax]
41abc0: add rsp, 8
41abc4: mov rdi, rbp
41abc7: pop rbx
41abc8: pop rbp
41abc9: jmp 0x41eae0
41abce: nop 
41abd0: mov ecx, 1
41abd5: mov eax, edx
41abd7: lock cmpxchg dword ptr [r8], ecx
41abdc: je 0x41aaf9
41abe2: mov rdi, r8
41abe5: call 0x421250
41abea: jmp 0x41aaf9
41abef: nop 
41abf0: xchg dword ptr [rdi], eax
41abf2: cmp eax, 1
41abf5: jle 0x41ab6b
41abfb: xor r10d, r10d
41abfe: mov edx, 1
41ac03: mov esi, 0x81
41ac08: mov eax, 0xca
41ac0d: syscall 
41ac0f: jmp 0x41ab6b
41ac14: endbr64 
41ac18: mov r8, rax
41ac1b: jmp 0x401543
41ac20: endbr64 
41ac24: push r15
41ac26: push r14
41ac28: mov r14d, ecx
41ac2b: push r13
41ac2d: mov r13, rdx
41ac30: push r12
41ac32: mov r12, rsi
41ac35: push rbp
41ac36: push rbx
41ac37: mov rbx, rdi
41ac3a: mov edi, 0x64
41ac3f: sub rsp, 0x118
41ac46: mov rax, qword ptr fs:[0x28]
41ac4f: mov qword ptr [rsp + 0x108], rax
41ac57: xor eax, eax
41ac59: call 0x426410
41ac5e: test rax, rax
41ac61: je 0x41adb1
41ac67: lea r15, [rsp + 0x10]
41ac6c: mov rbp, rax
41ac6f: xor r8d, r8d
41ac72: xor ecx, ecx
41ac74: mov edx, 0xffffffff
41ac79: mov esi, 0x8000
41ac7e: mov rdi, r15
41ac81: movq xmm0, qword ptr [rip + 0xa52b7]
41ac89: mov qword ptr [rsp + 0x98], 0
41ac95: movhps xmm0, qword ptr [rip + 0xa5344]
41ac9c: movaps xmmword ptr [rsp], xmm0
41aca0: call 0x41f710
41aca5: mov rcx, rbp
41aca8: mov edx, 0x64
41acad: mov rsi, rbp
41acb0: lea rax, [rip + 0xa73e9]
41acb7: mov rdi, r15
41acba: mov qword ptr [rsp + 0xe8], rax
41acc2: call 0x420fc0
41acc7: movdqa xmm0, xmmword ptr [rsp]
41accc: mov rsi, r12
41accf: mov ecx, r14d
41acd2: mov rdx, r13
41acd5: mov rdi, r15
41acd8: and dword ptr [rsp + 0x10], 0xfffffffe
41acdd: movaps xmmword ptr [rsp + 0xf0], xmm0
41ace5: call 0x413e90
41acea: mov r12d, eax
41aced: test eax, eax
41acef: js 0x41ada0
41acf5: mov rax, qword ptr [rsp + 0x30]
41acfa: mov rcx, qword ptr [rsp + 0x40]
41acff: mov rbp, qword ptr [rsp + 0x38]
41ad04: mov r14, qword ptr [rsp + 0x48]
41ad09: sub rcx, rax
41ad0c: sub rbp, rax
41ad0f: mov rax, rcx
41ad12: lea r13, [rbp + 1]
41ad16: shr rax, 1
41ad19: cmp rax, r13
41ad1c: ja 0x41ad60
41ad1e: mov rsi, r13
41ad21: mov rdi, r14
41ad24: call 0x427100
41ad29: mov qword ptr [rbx], rax
41ad2c: test rax, rax
41ad2f: je 0x41ad8e
41ad31: mov byte ptr [rax + rbp], 0
41ad35: mov rax, qword ptr [rsp + 0x108]
41ad3d: xor rax, qword ptr fs:[0x28]
41ad46: jne 0x41adac
41ad48: add rsp, 0x118
41ad4f: mov eax, r12d
41ad52: pop rbx
41ad53: pop rbp
41ad54: pop r12
41ad56: pop r13
41ad58: pop r14
41ad5a: pop r15
41ad5c: ret 
41ad5d: nop dword ptr [rax]
41ad60: mov rdi, r13
41ad63: call 0x426410
41ad68: mov qword ptr [rbx], rax
41ad6b: mov rdi, rax
41ad6e: test rax, rax
41ad71: je 0x41ad1e
41ad73: mov rdx, rbp
41ad76: mov rsi, r14
41ad79: call 0x401060
41ad7e: mov rdi, r14
41ad81: call 0x426a00
41ad86: mov rax, qword ptr [rbx]
41ad89: test rax, rax
41ad8c: jne 0x41ad31
41ad8e: mov rax, qword ptr [rsp + 0x48]
41ad93: mov qword ptr [rbx], rax
41ad96: jmp 0x41ad31
41ad98: nop dword ptr [rax + rax]
41ada0: mov rdi, qword ptr [rsp + 0x48]
41ada5: call 0x426a00
41adaa: jmp 0x41ad35
41adac: call 0x4547a0
41adb1: or r12d, 0xffffffff
41adb5: jmp 0x41ad35
41adba: nop word ptr [rax + rax]
41adc0: endbr64 
41adc4: xor ecx, ecx
41adc6: jmp 0x41ac20
41adcb: nop dword ptr [rax + rax]
41add0: push rbp
41add1: mov rdi, rdx
41add4: mov rbp, rsp
41add7: push r13
41add9: push r12
41addb: mov r12, rdx
41adde: push rbx
41addf: sub rsp, 0x58
41ade3: mov qword ptr [rbp - 0x30], r8
41ade7: mov qword ptr [rbp - 0x40], rdx
41adeb: mov qword ptr [rbp - 0x38], rcx
41adef: mov qword ptr [rbp - 0x28], r9
41adf3: mov rax, qword ptr fs:[0x28]
41adfc: mov qword ptr [rbp - 0x58], rax
41ae00: xor eax, eax
41ae02: lea rax, [rbp + 0x10]
41ae06: mov dword ptr [rbp - 0x70], 0x18
41ae0d: mov qword ptr [rbp - 0x68], rax
41ae11: lea rax, [rbp - 0x50]
41ae15: mov qword ptr [rbp - 0x60], rax
41ae19: call 0x401180
41ae1e: mov r8, rax
41ae21: mov rax, rsp
41ae24: cmp rsp, rax
41ae27: je 0x41ae45
41ae29: nop dword ptr [rax]
41ae30: sub rsp, 0x1000
41ae37: or qword ptr [rsp + 0xff8], 0
41ae40: cmp rsp, rax
41ae43: jne 0x41ae30
41ae45: sub rsp, 0x20
41ae49: or qword ptr [rsp + 0x18], 0
41ae4f: lea rax, [rsp + 0xf]
41ae54: and rax, 0xfffffffffffffff0
41ae58: mov qword ptr [rax], r12
41ae5b: mov qword ptr [rax + 8], r8
41ae5f: mov qword ptr [rax + 0x10], 0
41ae67: mov rax, rsp
41ae6a: cmp rsp, rax
41ae6d: je 0x41ae84
41ae6f: sub rsp, 0x1000
41ae76: or qword ptr [rsp + 0xff8], 0
41ae7f: cmp rsp, rax
41ae82: jne 0x41ae6f
41ae84: sub rsp, 0x20
41ae88: or qword ptr [rsp + 0x18], 0
41ae8e: mov r9d, 0x14
41ae94: lea rbx, [rsp + 0xf]
41ae99: and rbx, 0xfffffffffffffff0
41ae9d: mov qword ptr [rbx], r12
41aea0: mov qword ptr [rbx + 8], r8
41aea4: nop dword ptr [rax]
41aea8: mov edx, 1
41aead: mov rsi, rbx
41aeb0: mov edi, 2
41aeb5: mov eax, r9d
41aeb8: syscall 
41aeba: cmp rax, -4
41aebe: je 0x41aea8
41aec0: xor r9d, r9d
41aec3: mov ecx, 0x22
41aec8: mov edx, 3
41aecd: xor edi, edi
41aecf: mov rax, qword ptr [rip + 0xa6242]
41aed6: lea r13, [rax + r8 + 4]
41aedb: neg rax
41aede: or r8d, 0xffffffff
41aee2: and r13, rax
41aee5: mov rsi, r13
41aee8: call 0x451bc0
41aeed: mov r12, rax
41aef0: cmp rax, -1
41aef4: je 0x41af22
41aef6: mov rdx, qword ptr [rbx + 8]
41aefa: mov rsi, qword ptr [rbx]
41aefd: mov dword ptr [rax], r13d
41af00: lea rdi, [rax + 4]
41af04: call 0x401150
41af09: mov rdi, r12
41af0c: mov byte ptr [rax], 0
41af0f: xchg qword ptr [rip + 0xa78aa], rdi
41af16: test rdi, rdi
41af19: je 0x41af22
41af1b: mov esi, dword ptr [rdi]
41af1d: call 0x451c70
41af22: call 0x4011b4
41af27: nop word ptr [rax + rax]
41af30: endbr64 
41af34: push rbp
41af35: and edi, 1
41af38: mov rbp, rsp
41af3b: push r15
41af3d: mov r15d, edi
41af40: push r14
41af42: xor r14d, r14d
41af45: push r13
41af47: push r12
41af49: xor r12d, r12d
41af4c: push rbx
41af4d: mov rbx, rsi
41af50: sub rsp, 0x68
41af54: mov qword ptr [rbp - 0x50], rdx
41af58: mov qword ptr [rbp - 0x48], rcx
41af5c: mov qword ptr [rbp - 0x40], r8
41af60: mov qword ptr [rbp - 0x38], r9
41af64: movzx r13d, byte ptr [rsi]
41af68: mov rax, qword ptr fs:[0x28]
41af71: mov qword ptr [rbp - 0x68], rax
41af75: xor eax, eax
41af77: lea rax, [rbp + 0x10]
41af7b: mov dword ptr [rbp - 0x80], 0x10
41af82: mov qword ptr [rbp - 0x78], rax
41af86: lea rax, [rbp - 0x60]
41af8a: mov qword ptr [rbp - 0x70], rax
41af8e: test r13b, r13b
41af91: je 0x41b1d0
41af97: nop word ptr [rax + rax]
41afa0: mov edx, r13d
41afa3: mov rax, rbx
41afa6: jmp 0x41afc5
41afa8: nop dword ptr [rax + rax]
41afb0: lea rdi, [rax + 1]
41afb4: mov esi, 0x25
41afb9: call 0x4010a0
41afbe: movzx edx, byte ptr [rax]
41afc1: test dl, dl
41afc3: je 0x41afd0
41afc5: cmp dl, 0x25
41afc8: jne 0x41afb0
41afca: cmp byte ptr [rax + 1], 0x73
41afce: jne 0x41afb0
41afd0: cmp r13b, 0x25
41afd4: je 0x41b038
41afd6: mov r8, rax
41afd9: mov rcx, rbx
41afdc: sub r8, rbx
41afdf: mov rbx, rax
41afe2: mov rax, rsp
41afe5: cmp rsp, rax
41afe8: je 0x41afff
41afea: sub rsp, 0x1000
41aff1: or qword ptr [rsp + 0xff8], 0
41affa: cmp rsp, rax
41affd: jne 0x41afea
41afff: sub rsp, 0x20
41b003: or qword ptr [rsp + 0x18], 0
41b009: lea rax, [rsp + 0xf]
41b00e: lea edx, [r14 + 1]
41b012: and rax, 0xfffffffffffffff0
41b016: mov qword ptr [rax], rcx
41b019: mov qword ptr [rax + 8], r8
41b01d: mov qword ptr [rax + 0x10], r12
41b021: movzx r13d, byte ptr [rbx]
41b025: test r13b, r13b
41b028: je 0x41b07b
41b02a: mov r14d, edx
41b02d: mov r12, rax
41b030: jmp 0x41afa0
41b035: nop dword ptr [rax]
41b038: cmp byte ptr [rbx + 1], 0x73
41b03c: jne 0x41afd6
41b03e: mov eax, dword ptr [rbp - 0x80]
41b041: cmp eax, 0x2f
41b044: ja 0x41b1f2
41b04a: mov edx, eax
41b04c: add eax, 8
41b04f: add rdx, qword ptr [rbp - 0x70]
41b053: mov dword ptr [rbp - 0x80], eax
41b056: mov rcx, qword ptr [rdx]
41b059: add rbx, 2
41b05d: mov rdi, rcx
41b060: mov qword ptr [rbp - 0x88], rcx
41b067: call 0x401180
41b06c: mov rcx, qword ptr [rbp - 0x88]
41b073: mov r8, rax
41b076: jmp 0x41afe2
41b07b: movsxd rdx, edx
41b07e: mov rbx, rsp
41b081: mov rax, rdx
41b084: shl rax, 4
41b088: add rax, 0x10
41b08c: mov rsi, rax
41b08f: and rsi, 0xfffffffffffff000
41b096: sub rbx, rsi
41b099: mov rsi, rbx
41b09c: cmp rsp, rsi
41b09f: je 0x41b0b6
41b0a1: sub rsp, 0x1000
41b0a8: or qword ptr [rsp + 0xff8], 0
41b0b1: cmp rsp, rsi
41b0b4: jne 0x41b0a1
41b0b6: and eax, 0xfff
41b0bb: sub rsp, rax
41b0be: test rax, rax
41b0c1: jne 0x41b203
41b0c7: movsxd r13, r14d
41b0ca: lea rbx, [rsp + 0xf]
41b0cf: mov rsi, r13
41b0d2: and rbx, 0xfffffffffffffff0
41b0d6: shl rsi, 4
41b0da: lea rax, [rbx + rsi]
41b0de: mov qword ptr [rax], rcx
41b0e1: mov qword ptr [rax + 8], r8
41b0e5: test r14d, r14d
41b0e8: je 0x41b11b
41b0ea: lea ecx, [r14 - 1]
41b0ee: lea rdi, [rbx + rsi - 0x10]
41b0f3: shl rcx, 4
41b0f7: sub rdi, rcx
41b0fa: mov rcx, qword ptr [r12 + 8]
41b0ff: mov rsi, qword ptr [r12]
41b103: sub rax, 0x10
41b107: mov r12, qword ptr [r12 + 0x10]
41b10c: add r8, rcx
41b10f: mov qword ptr [rax], rsi
41b112: mov qword ptr [rax + 8], rcx
41b116: cmp rdi, rax
41b119: jne 0x41b0fa
41b11b: mov r9d, 0x14
41b121: nop dword ptr [rax]
41b128: mov rsi, rbx
41b12b: mov edi, 2
41b130: mov eax, r9d
41b133: syscall 
41b135: cmp rax, -4
41b139: je 0x41b128
41b13b: test r15d, r15d
41b13e: je 0x41b1d4
41b144: xor r9d, r9d
41b147: mov ecx, 0x22
41b14c: mov edx, 3
41b151: xor edi, edi
41b153: mov rax, qword ptr [rip + 0xa5fbe]
41b15a: lea r14, [rax + r8 + 4]
41b15f: neg rax
41b162: mov r8d, 0xffffffff
41b168: and r14, rax
41b16b: mov rsi, r14
41b16e: call 0x451bc0
41b173: mov r12, rax
41b176: cmp rax, -1
41b17a: je 0x41b1c1
41b17c: mov dword ptr [rax], r14d
41b17f: shl r13, 4
41b183: lea rdi, [rax + 4]
41b187: lea r13, [rbx + r13 + 0x10]
41b18c: nop dword ptr [rax]
41b190: mov rdx, qword ptr [rbx + 8]
41b194: mov rsi, qword ptr [rbx]
41b197: add rbx, 0x10
41b19b: call 0x401150
41b1a0: mov rdi, rax
41b1a3: cmp rbx, r13
41b1a6: jne 0x41b190
41b1a8: mov byte ptr [rax], 0
41b1ab: mov rdi, r12
41b1ae: xchg qword ptr [rip + 0xa760b], rdi
41b1b5: test rdi, rdi
41b1b8: je 0x41b1c1
41b1ba: mov esi, dword ptr [rdi]
41b1bc: call 0x451c70
41b1c1: call 0x4011b4
41b1c6: nop word ptr cs:[rax + rax]
41b1d0: test edi, edi
41b1d2: jne 0x41b1c1
41b1d4: mov rax, qword ptr [rbp - 0x68]
41b1d8: xor rax, qword ptr fs:[0x28]
41b1e1: jne 0x41b20e
41b1e3: lea rsp, [rbp - 0x28]
41b1e7: pop rbx
41b1e8: pop r12
41b1ea: pop r13
41b1ec: pop r14
41b1ee: pop r15
41b1f0: pop rbp
41b1f1: ret 
41b1f2: mov rdx, qword ptr [rbp - 0x78]
41b1f6: lea rax, [rdx + 8]
41b1fa: mov qword ptr [rbp - 0x78], rax
41b1fe: jmp 0x41b056
41b203: or qword ptr [rsp + rax - 8], 0
41b209: jmp 0x41b0c7
41b20e: call 0x4547a0
41b213: nop word ptr cs:[rax + rax]
41b21e: nop 
41b220: endbr64 
41b224: push rax
41b225: pop rax
41b226: lea rsi, [rip + 0x94c79]
41b22d: xor eax, eax
41b22f: mov rdx, rdi
41b232: sub rsp, 8
41b236: mov edi, 1
41b23b: call 0x41add0
41b240: endbr64 
41b244: cmp qword ptr [rip + 0xa4d54], 0
41b24c: je 0x41b24f
41b24e: ret 
41b24f: push rax
41b250: lea rdi, [rip + 0x7ab69]
41b257: call 0x41b220
41b25c: nop dword ptr [rax]
41b260: endbr64 
41b264: test esi, esi
41b266: jle 0x41b2e8
41b26c: push r12
41b26e: push rbp
41b26f: mov rbp, rdi
41b272: push rbx
41b273: cmp esi, 1
41b276: je 0x41b2f0
41b278: mov eax, dword ptr [rdx]
41b27a: mov rbx, rdx
41b27d: sub esi, 1
41b280: mov r8d, 1
41b286: mov ecx, 0xa
41b28b: mov r12d, eax
41b28e: and eax, 0xffffffdf
41b291: mov dword ptr [rdx], eax
41b293: movsxd rdx, esi
41b296: mov rsi, rdi
41b299: mov rdi, rbx
41b29c: and r12d, 0x20
41b2a0: call 0x474140
41b2a5: mov edx, dword ptr [rbx]
41b2a7: xor r8d, r8d
41b2aa: test rax, rax
41b2ad: jne 0x41b2c0
41b2af: or r12d, edx
41b2b2: mov dword ptr [rbx], r12d
41b2b5: pop rbx
41b2b6: mov rax, r8
41b2b9: pop rbp
41b2ba: pop r12
41b2bc: ret 
41b2bd: nop dword ptr [rax]
41b2c0: test dl, 0x20
41b2c3: je 0x41b2d5
41b2c5: mov rcx, 0xffffffffffffffc0
41b2cc: xor r8d, r8d
41b2cf: cmp dword ptr fs:[rcx], 0xb
41b2d3: jne 0x41b2af
41b2d5: mov byte ptr [rbp + rax], 0
41b2da: mov r8, rbp
41b2dd: mov edx, dword ptr [rbx]
41b2df: jmp 0x41b2af
41b2e1: nop dword ptr [rax]
41b2e8: xor r8d, r8d
41b2eb: mov rax, r8
41b2ee: ret 
41b2ef: nop 
41b2f0: mov byte ptr [rdi], 0
41b2f3: mov r8, rdi
41b2f6: jmp 0x41b2b5
41b2f8: nop dword ptr [rax + rax]
41b300: endbr64 
41b304: push rbp
41b305: push rbx
41b306: mov rbx, rdi
41b309: sub rsp, 0x18
41b30d: mov rbp, qword ptr [rdi + 0xd8]
41b314: mov rcx, 0x4c1b60
41b31b: mov rax, 0x4c2208
41b322: mov rdi, rbp
41b325: sub rax, rcx
41b328: sub rdi, rcx
41b32b: cmp rax, rdi
41b32e: jbe 0x41b350
41b330: mov rdi, rbx
41b333: call qword ptr [rbp + 0x80]
41b339: test rax, rax
41b33c: js 0x41b367
41b33e: mov qword ptr [rbx + 0x90], rax
41b345: add rsp, 0x18
41b349: pop rbx
41b34a: pop rbp
41b34b: ret 
41b34c: nop dword ptr [rax]
41b350: mov dword ptr [rsp + 0xc], edx
41b354: mov qword ptr [rsp], rsi
41b358: call 0x41b240
41b35d: mov edx, dword ptr [rsp + 0xc]
41b361: mov rsi, qword ptr [rsp]
41b365: jmp 0x41b330
41b367: mov rax, 0xffffffffffffffff
41b36e: jmp 0x41b345
41b370: endbr64 
41b374: mov edi, dword ptr [rdi + 0x70]
41b377: jmp 0x451730
41b37c: nop dword ptr [rax]
41b380: endbr64 
41b384: push rbx
41b385: mov rbx, rdi
41b388: call 0x41f330
41b38d: test rax, rax
41b390: je 0x41b3aa
41b392: movq xmm0, qword ptr [rbx + 0x38]
41b397: mov rax, rbx
41b39a: punpcklqdq xmm0, xmm0
41b39e: movups xmmword ptr [rbx + 8], xmm0
41b3a2: movups xmmword ptr [rbx + 0x18], xmm0
41b3a6: movups xmmword ptr [rbx + 0x28], xmm0
41b3aa: pop rbx
41b3ab: ret 
41b3ac: nop dword ptr [rax]
41b3b0: endbr64 
41b3b4: lea rax, [rip + 0xa6c25]
41b3bb: lea rcx, [rip + 0xa69de]
41b3c2: push rbx
41b3c3: mov rbx, rdi
41b3c6: mov qword ptr [rdi + 0xd8], rax
41b3cd: mov rax, qword ptr [rdi + 0xa0]
41b3d4: mov qword ptr [rax + 0xe0], rcx
41b3db: call 0x41f330
41b3e0: test rax, rax
41b3e3: je 0x41b400
41b3e5: movq xmm0, qword ptr [rbx + 0x38]
41b3ea: mov rax, rbx
41b3ed: punpcklqdq xmm0, xmm0
41b3f1: movups xmmword ptr [rbx + 8], xmm0
41b3f5: movups xmmword ptr [rbx + 0x18], xmm0
41b3f9: movups xmmword ptr [rbx + 0x28], xmm0
41b3fd: pop rbx
41b3fe: ret 
41b3ff: nop 
41b400: mov rdx, qword ptr [rbx + 0xa0]
41b407: lea rcx, [rip + 0xa6b12]
41b40e: mov qword ptr [rbx + 0xd8], rcx
41b415: lea rcx, [rip + 0xa68c4]
41b41c: mov qword ptr [rdx + 0xe0], rcx
41b423: pop rbx
41b424: ret 
41b425: nop word ptr cs:[rax + rax]
41b430: endbr64 
41b434: mov eax, dword ptr [rdi]
41b436: test al, 0x10
41b438: jne 0x41b728
41b43e: push r15
41b440: push r14
41b442: push r13
41b444: push r12
41b446: push rbp
41b447: push rbx
41b448: mov rbx, rdi
41b44b: sub rsp, 8
41b44f: test al, 4
41b451: jne 0x41b730
41b457: mov rdx, qword ptr [rdi + 8]
41b45b: cmp rdx, qword ptr [rdi + 0x10]
41b45f: jb 0x41b5f0
41b465: cmp qword ptr [rdi + 0x38], 0
41b46a: je 0x41b640
41b470: test eax, 0x202
41b475: je 0x41b55a
41b47b: mov r12, qword ptr [rip + 0xa524e]
41b482: mov edx, dword ptr [r12]
41b486: mov ecx, edx
41b488: and ecx, 0x8000
41b48e: jne 0x41b548
41b494: mov rdi, qword ptr [r12 + 0x88]
41b49c: mov rbp, qword ptr fs:[0x10]
41b4a5: cmp qword ptr [rdi + 8], rbp
41b4a9: je 0x41b6b0
41b4af: mov eax, dword ptr fs:[0x18]
41b4b7: mov edx, 1
41b4bc: test eax, eax
41b4be: jne 0x41b6d0
41b4c4: cmpxchg dword ptr [rdi], edx
41b4c7: mov rdi, qword ptr [r12 + 0x88]
41b4cf: mov r8, qword ptr [rip + 0xa51fa]
41b4d6: mov qword ptr [rdi + 8], rbp
41b4da: mov edx, dword ptr [r8]
41b4dd: mov r14, 0x4c2208
41b4e4: and edx, 0x288
41b4ea: mov rbp, 0x4c1b60
41b4f1: add dword ptr [rdi + 4], 1
41b4f5: mov r13, r14
41b4f8: sub r13, rbp
41b4fb: cmp edx, 0x280
41b501: je 0x41b687
41b507: test dword ptr [r12], 0x8000
41b50f: jne 0x41b568
41b511: mov rdi, qword ptr [r12 + 0x88]
41b519: mov eax, dword ptr [rdi + 4]
41b51c: sub eax, 1
41b51f: mov dword ptr [rdi + 4], eax
41b522: jne 0x41b568
41b524: mov qword ptr [rdi + 8], 0
41b52c: mov edx, dword ptr fs:[0x18]
41b534: test edx, edx
41b536: jne 0x41b700
41b53c: sub dword ptr [rdi], 1
41b53f: jmp 0x41b56e
41b541: nop dword ptr [rax]
41b548: and edx, 0x288
41b54e: cmp edx, 0x280
41b554: je 0x41b670
41b55a: mov r14, 0x4c2208
41b561: mov rbp, 0x4c1b60
41b568: sub r14, rbp
41b56b: mov r13, r14
41b56e: mov rdi, rbx
41b571: call 0x41e7b0
41b576: mov r12, qword ptr [rbx + 0xd8]
41b57d: movdqu xmm0, xmmword ptr [rbx + 0x38]
41b582: mov rsi, qword ptr [rbx + 0x38]
41b586: mov rax, r12
41b589: punpcklqdq xmm0, xmm0
41b58d: sub rax, rbp
41b590: movups xmmword ptr [rbx + 8], xmm0
41b594: movups xmmword ptr [rbx + 0x18], xmm0
41b598: movups xmmword ptr [rbx + 0x28], xmm0
41b59c: cmp rax, r13
41b59f: jae 0x41b6c0
41b5a5: mov rdx, qword ptr [rbx + 0x40]
41b5a9: mov rdi, rbx
41b5ac: sub rdx, rsi
41b5af: call qword ptr [r12 + 0x70]
41b5b4: test rax, rax
41b5b7: jle 0x41b608
41b5b9: mov rdx, qword ptr [rbx + 0x90]
41b5c0: add qword ptr [rbx + 0x10], rax
41b5c4: cmp rdx, -1
41b5c8: je 0x41b5d4
41b5ca: add rax, rdx
41b5cd: mov qword ptr [rbx + 0x90], rax
41b5d4: mov rax, qword ptr [rbx + 8]
41b5d8: movzx eax, byte ptr [rax]
41b5db: add rsp, 8
41b5df: pop rbx
41b5e0: pop rbp
41b5e1: pop r12
41b5e3: pop r13
41b5e5: pop r14
41b5e7: pop r15
41b5e9: ret 
41b5ea: nop word ptr [rax + rax]
41b5f0: movzx eax, byte ptr [rdx]
41b5f3: add rsp, 8
41b5f7: pop rbx
41b5f8: pop rbp
41b5f9: pop r12
41b5fb: pop r13
41b5fd: pop r14
41b5ff: pop r15
41b601: ret 
41b602: nop word ptr [rax + rax]
41b608: mov qword ptr [rbx + 0x90], 0xffffffffffffffff
41b613: mov edx, dword ptr [rbx]
41b615: mov ecx, edx
41b617: or edx, 0x20
41b61a: or ecx, 0x10
41b61d: test rax, rax
41b620: mov eax, 0xffffffff
41b625: cmove edx, ecx
41b628: mov dword ptr [rbx], edx
41b62a: add rsp, 8
41b62e: pop rbx
41b62f: pop rbp
41b630: pop r12
41b632: pop r13
41b634: pop r14
41b636: pop r15
41b638: ret 
41b639: nop dword ptr [rax]
41b640: mov rdi, qword ptr [rdi + 0x48]
41b644: test rdi, rdi
41b647: je 0x41b654
41b649: call 0x426a00
41b64e: and dword ptr [rbx], 0xfffffeff
41b654: mov rdi, rbx
41b657: call 0x41ed20
41b65c: mov eax, dword ptr [rbx]
41b65e: test eax, 0x202
41b663: jne 0x41b47b
41b669: jmp 0x41b55a
41b66e: nop 
41b670: mov r14, 0x4c2208
41b677: mov rbp, 0x4c1b60
41b67e: mov r8, r12
41b681: mov r13, r14
41b684: sub r13, rbp
41b687: mov r15, qword ptr [r8 + 0xd8]
41b68e: mov rax, r15
41b691: sub rax, rbp
41b694: cmp rax, r13
41b697: jae 0x41b6f0
41b699: mov esi, 0xffffffff
41b69e: mov rdi, r8
41b6a1: call qword ptr [r15 + 0x18]
41b6a5: jmp 0x41b507
41b6aa: nop word ptr [rax + rax]
41b6b0: mov r8, r12
41b6b3: jmp 0x41b4dd
41b6b8: nop dword ptr [rax + rax]
41b6c0: call 0x41b240
41b6c5: mov rsi, qword ptr [rbx + 0x38]
41b6c9: jmp 0x41b5a5
41b6ce: nop 
41b6d0: mov eax, ecx
41b6d2: lock cmpxchg dword ptr [rdi], edx
41b6d6: je 0x41b4c7
41b6dc: call 0x421250
41b6e1: jmp 0x41b4c7
41b6e6: nop word ptr cs:[rax + rax]
41b6f0: call 0x41b240
41b6f5: mov r8, qword ptr [rip + 0xa4fd4]
41b6fc: jmp 0x41b699
41b6fe: nop 
41b700: xchg dword ptr [rdi], eax
41b702: cmp eax, 1
41b705: jle 0x41b568
41b70b: xor r10d, r10d
41b70e: mov edx, 1
41b713: mov esi, 0x81
41b718: mov eax, 0xca
41b71d: syscall 
41b71f: jmp 0x41b56e
41b724: nop dword ptr [rax]
41b728: mov eax, 0xffffffff
41b72d: ret 
41b72e: nop 
41b730: or eax, 0x20
41b733: mov dword ptr [rdi], eax
41b735: mov rax, 0xffffffffffffffc0
41b73c: mov dword ptr fs:[rax], 9
41b743: mov eax, 0xffffffff
41b748: jmp 0x41b5db
41b74d: endbr64 
41b751: mov r8, rax
41b754: jmp 0x40159a
41b759: nop dword ptr [rax]
41b760: endbr64 
41b764: push rbx
41b765: mov rbx, rdi
41b768: mov rdi, qword ptr [rdi + 0x38]
41b76c: mov rsi, qword ptr [rbx + 0x40]
41b770: sub rsi, rdi
41b773: call 0x451c70
41b778: mov edi, dword ptr [rbx + 0x70]
41b77b: pxor xmm0, xmm0
41b77f: movups xmmword ptr [rbx + 0x38], xmm0
41b783: pop rbx
41b784: jmp 0x451730
41b789: nop dword ptr [rax]
41b790: endbr64 
41b794: mov edi, dword ptr [rdi + 0x70]
41b797: jmp 0x450f00
41b79c: nop dword ptr [rax]
41b7a0: endbr64 
41b7a4: push rbx
41b7a5: mov rax, qword ptr [rdi + 8]
41b7a9: mov rbx, rdi
41b7ac: mov rsi, rax
41b7af: sub rsi, qword ptr [rdi + 0x38]
41b7b3: cmp rax, qword ptr [rdi + 0x10]
41b7b7: je 0x41b7d3
41b7b9: mov edi, dword ptr [rdi + 0x70]
41b7bc: xor edx, edx
41b7be: call 0x450f00
41b7c3: mov rsi, rax
41b7c6: mov rax, qword ptr [rbx + 8]
41b7ca: sub rax, qword ptr [rbx + 0x38]
41b7ce: cmp rax, rsi
41b7d1: jne 0x41b7f0
41b7d3: movq xmm0, qword ptr [rbx + 0x18]
41b7d8: mov qword ptr [rbx + 0x90], rsi
41b7df: xor eax, eax
41b7e1: punpcklqdq xmm0, xmm0
41b7e5: movups xmmword ptr [rbx + 8], xmm0
41b7e9: pop rbx
41b7ea: ret 
41b7eb: nop dword ptr [rax + rax]
41b7f0: or dword ptr [rbx], 0x20
41b7f3: mov eax, 0xffffffff
41b7f8: pop rbx
41b7f9: ret 
41b7fa: nop word ptr [rax + rax]
41b800: endbr64 
41b804: push r15
41b806: push r14
41b808: push r13
41b80a: mov r13, rdx
41b80d: push r12
41b80f: mov r12, rsi
41b812: push rbp
41b813: mov rbp, rdi
41b816: push rbx
41b817: sub rsp, 0xa8
41b81e: mov r15, qword ptr [rdi + 0xd8]
41b825: mov r14, 0x4c1b60
41b82c: mov rax, qword ptr fs:[0x28]
41b835: mov qword ptr [rsp + 0x98], rax
41b83d: xor eax, eax
41b83f: mov rbx, 0x4c2208
41b846: mov rax, r15
41b849: sub rbx, r14
41b84c: sub rax, r14
41b84f: cmp rbx, rax
41b852: jbe 0x41b988
41b858: mov rsi, rsp
41b85b: mov rdi, rbp
41b85e: call qword ptr [r15 + 0x90]
41b865: test eax, eax
41b867: jne 0x41b879
41b869: mov eax, dword ptr [rsp + 0x18]
41b86d: and eax, 0xf000
41b872: cmp eax, 0x8000
41b877: je 0x41b8f8
41b879: lea rax, [rip + 0xa6760]
41b880: lea rdx, [rip + 0xa6519]
41b887: mov ecx, dword ptr [rbp + 0xc0]
41b88d: test ecx, ecx
41b88f: cmovg rax, rdx
41b893: mov qword ptr [rbp + 0xd8], rax
41b89a: mov rax, qword ptr [rbp + 0xa0]
41b8a1: mov qword ptr [rax + 0xe0], rdx
41b8a8: mov r15, qword ptr [rbp + 0xd8]
41b8af: mov rax, r15
41b8b2: sub rax, r14
41b8b5: cmp rax, rbx
41b8b8: jae 0x41b978
41b8be: mov rdx, r13
41b8c1: mov rsi, r12
41b8c4: mov rdi, rbp
41b8c7: call qword ptr [r15 + 0x40]
41b8cb: mov rcx, qword ptr [rsp + 0x98]
41b8d3: xor rcx, qword ptr fs:[0x28]
41b8dc: jne 0x41b9e4
41b8e2: add rsp, 0xa8
41b8e9: pop rbx
41b8ea: pop rbp
41b8eb: pop r12
41b8ed: pop r13
41b8ef: pop r14
41b8f1: pop r15
41b8f3: ret 
41b8f4: nop dword ptr [rax]
41b8f8: mov rsi, qword ptr [rsp + 0x30]
41b8fd: test rsi, rsi
41b900: je 0x41b879
41b906: mov rax, qword ptr [rbp + 0x90]
41b90d: cmp rsi, rax
41b910: jge 0x41b91c
41b912: cmp rax, -1
41b916: jne 0x41b879
41b91c: mov r8d, dword ptr [rbp + 0x70]
41b920: xor r9d, r9d
41b923: mov ecx, 1
41b928: xor edi, edi
41b92a: mov edx, 1
41b92f: call 0x451bc0
41b934: mov r15, rax
41b937: cmp rax, -1
41b93b: je 0x41b879
41b941: mov rsi, qword ptr [rsp + 0x30]
41b946: mov edi, dword ptr [rbp + 0x70]
41b949: xor edx, edx
41b94b: call 0x450f00
41b950: mov rsi, qword ptr [rsp + 0x30]
41b955: cmp rax, rsi
41b958: je 0x41b992
41b95a: mov rdi, r15
41b95d: call 0x451c70
41b962: mov qword ptr [rbp + 0x90], 0xffffffffffffffff
41b96d: jmp 0x41b879
41b972: nop word ptr [rax + rax]
41b978: call 0x41b240
41b97d: jmp 0x41b8be
41b982: nop word ptr [rax + rax]
41b988: call 0x41b240
41b98d: jmp 0x41b858
41b992: lea rdx, [r15 + rax]
41b996: xor ecx, ecx
41b998: mov rsi, r15
41b99b: mov rdi, rbp
41b99e: call 0x41ecc0
41b9a3: mov rdx, qword ptr [rbp + 0x90]
41b9aa: mov qword ptr [rbp + 0x18], r15
41b9ae: lea rax, [r15 + rdx]
41b9b2: cmp rdx, -1
41b9b6: lea rdx, [rip + 0xa6323]
41b9bd: cmove rax, r15
41b9c1: mov qword ptr [rbp + 8], rax
41b9c5: mov rax, qword ptr [rsp + 0x30]
41b9ca: add r15, rax
41b9cd: mov qword ptr [rbp + 0x90], rax
41b9d4: lea rax, [rip + 0xa6545]
41b9db: mov qword ptr [rbp + 0x10], r15
41b9df: jmp 0x41b887
41b9e4: call 0x4547a0
41b9e9: nop dword ptr [rax]
41b9f0: endbr64 
41b9f4: push r15
41b9f6: push r14
41b9f8: push r13
41b9fa: push r12
41b9fc: push rbp
41b9fd: mov rbp, rdi
41ba00: push rbx
41ba01: sub rsp, 0xb8
41ba08: mov rax, qword ptr fs:[0x28]
41ba11: mov qword ptr [rsp + 0xa8], rax
41ba19: xor eax, eax
41ba1b: test ecx, ecx
41ba1d: je 0x41bd40
41ba23: mov r13d, edx
41ba26: mov rax, qword ptr [rdi + 0x28]
41ba2a: mov rdx, qword ptr [rdi + 0x20]
41ba2e: mov r12, rsi
41ba31: mov rbx, qword ptr [rdi + 0x10]
41ba35: cmp qword ptr [rdi + 0x18], rbx
41ba39: je 0x41bad8
41ba3f: xor r15d, r15d
41ba42: cmp rdx, rax
41ba45: jae 0x41baf0
41ba4b: mov rdi, rbp
41ba4e: call 0x41e7b0
41ba53: test eax, eax
41ba55: jne 0x41be0a
41ba5b: cmp qword ptr [rbp + 0x38], 0
41ba60: je 0x41bb08
41ba66: cmp r13d, 1
41ba6a: je 0x41bb44
41ba70: cmp r13d, 2
41ba74: jne 0x41bb6c
41ba7a: mov rax, qword ptr [rbp + 0xd8]
41ba81: mov r14, 0x4c1b60
41ba88: mov rbx, 0x4c2208
41ba8f: mov rdx, rax
41ba92: sub rbx, r14
41ba95: sub rdx, r14
41ba98: cmp rdx, rbx
41ba9b: jae 0x41bf68
41baa1: lea rsi, [rsp + 0x10]
41baa6: mov rdi, rbp
41baa9: call qword ptr [rax + 0x90]
41baaf: test eax, eax
41bab1: jne 0x41bcc0
41bab7: mov eax, dword ptr [rsp + 0x28]
41babb: and eax, 0xf000
41bac0: cmp eax, 0x8000
41bac5: jne 0x41bcc0
41bacb: add r12, qword ptr [rsp + 0x40]
41bad0: jmp 0x41bb69
41bad5: nop dword ptr [rax]
41bad8: cmp rdx, rax
41badb: jne 0x41ba3f
41bae1: mov r15d, 1
41bae7: nop word ptr [rax + rax]
41baf0: test dword ptr [rbp], 0x800
41baf7: jne 0x41ba4b
41bafd: cmp qword ptr [rbp + 0x38], 0
41bb02: jne 0x41ba66
41bb08: mov rdi, qword ptr [rbp + 0x18]
41bb0c: test rdi, rdi
41bb0f: je 0x41bb1d
41bb11: call 0x426a00
41bb16: and dword ptr [rbp], 0xfffffeff
41bb1d: mov rdi, rbp
41bb20: call 0x41ed20
41bb25: movq xmm0, qword ptr [rbp + 0x38]
41bb2a: punpcklqdq xmm0, xmm0
41bb2e: movups xmmword ptr [rbp + 8], xmm0
41bb32: movups xmmword ptr [rbp + 0x18], xmm0
41bb36: movups xmmword ptr [rbp + 0x28], xmm0
41bb3a: cmp r13d, 1
41bb3e: jne 0x41ba70
41bb44: mov rax, qword ptr [rbp + 0x10]
41bb48: sub rax, qword ptr [rbp + 8]
41bb4c: sub r12, rax
41bb4f: mov rax, qword ptr [rbp + 0x90]
41bb56: cmp rax, -1
41bb5a: je 0x41be90
41bb60: add r12, rax
41bb63: js 0x41bdfc
41bb69: xor r13d, r13d
41bb6c: mov rdi, rbp
41bb6f: call 0x41e850
41bb74: mov rsi, qword ptr [rbp + 0x90]
41bb7b: mov eax, dword ptr [rbp]
41bb7e: cmp rsi, -1
41bb82: je 0x41bbb0
41bb84: cmp qword ptr [rbp + 0x18], 0
41bb89: je 0x41bbb0
41bb8b: test ah, 1
41bb8e: jne 0x41bbb0
41bb90: mov rdx, qword ptr [rbp + 0x38]
41bb94: mov rcx, rdx
41bb97: sub rcx, qword ptr [rbp + 0x10]
41bb9b: add rcx, rsi
41bb9e: cmp rsi, r12
41bba1: jle 0x41bbb0
41bba3: cmp r12, rcx
41bba6: jge 0x41beb0
41bbac: nop dword ptr [rax]
41bbb0: mov r14, 0x4c1b60
41bbb7: mov rbx, 0x4c2208
41bbbe: sub rbx, r14
41bbc1: test al, 4
41bbc3: jne 0x41bcc0
41bbc9: mov rdx, qword ptr [rbp + 0x38]
41bbcd: mov rax, qword ptr [rbp + 0x40]
41bbd1: mov r13, r12
41bbd4: mov rsi, rdx
41bbd7: sub rsi, rax
41bbda: sub rax, rdx
41bbdd: and rsi, r12
41bbe0: sub r13, rsi
41bbe3: cmp rax, r13
41bbe6: jl 0x41bdc0
41bbec: mov rax, qword ptr [rbp + 0xd8]
41bbf3: mov rdx, rax
41bbf6: sub rdx, r14
41bbf9: cmp rdx, rbx
41bbfc: jae 0x41bf30
41bc02: xor edx, edx
41bc04: mov rdi, rbp
41bc07: call qword ptr [rax + 0x80]
41bc0d: mov rcx, rax
41bc10: test rax, rax
41bc13: js 0x41be0a
41bc19: test r13, r13
41bc1c: je 0x41bdd0
41bc22: mov rax, qword ptr [rbp + 0xd8]
41bc29: mov rdx, rax
41bc2c: sub rdx, r14
41bc2f: cmp rdx, rbx
41bc32: jae 0x41bf80
41bc38: mov rax, qword ptr [rax + 0x70]
41bc3c: mov rsi, qword ptr [rbp + 0x38]
41bc40: mov rdx, r13
41bc43: test r15d, r15d
41bc46: jne 0x41bc4f
41bc48: mov rdx, qword ptr [rbp + 0x40]
41bc4c: sub rdx, rsi
41bc4f: mov qword ptr [rsp], rcx
41bc53: mov rdi, rbp
41bc56: call rax
41bc58: cmp r13, rax
41bc5b: jg 0x41bca8
41bc5d: mov rcx, qword ptr [rsp]
41bc61: add rcx, rax
41bc64: mov rdx, qword ptr [rbp + 0x38]
41bc68: and dword ptr [rbp], 0xffffffef
41bc6c: mov qword ptr [rbp + 0x90], rcx
41bc73: movq xmm1, rdx
41bc78: lea rbx, [rdx + r13]
41bc7c: add rdx, rax
41bc7f: movq xmm0, rbx
41bc84: movq xmm2, rdx
41bc89: punpcklqdq xmm1, xmm1
41bc8d: punpcklqdq xmm0, xmm2
41bc91: movups xmmword ptr [rbp + 0x18], xmm1
41bc95: movups xmmword ptr [rbp + 8], xmm0
41bc99: movups xmmword ptr [rbp + 0x28], xmm1
41bc9d: mov rax, r12
41bca0: jmp 0x41bd14
41bca2: nop word ptr [rax + rax]
41bca8: mov r12, r13
41bcab: mov r13d, 1
41bcb1: cmp rax, -1
41bcb5: je 0x41bcc0
41bcb7: sub r12, rax
41bcba: mov r13d, 1
41bcc0: mov rdi, rbp
41bcc3: call 0x420540
41bcc8: mov r15, qword ptr [rbp + 0xd8]
41bccf: mov rax, r15
41bcd2: sub rax, r14
41bcd5: cmp rbx, rax
41bcd8: jbe 0x41bf20
41bcde: mov edx, r13d
41bce1: mov rsi, r12
41bce4: mov rdi, rbp
41bce7: call qword ptr [r15 + 0x80]
41bcee: cmp rax, -1
41bcf2: je 0x41bd14
41bcf4: movq xmm0, qword ptr [rbp + 0x38]
41bcf9: and dword ptr [rbp], 0xffffffef
41bcfd: mov qword ptr [rbp + 0x90], rax
41bd04: punpcklqdq xmm0, xmm0
41bd08: movups xmmword ptr [rbp + 8], xmm0
41bd0c: movups xmmword ptr [rbp + 0x18], xmm0
41bd10: movups xmmword ptr [rbp + 0x28], xmm0
41bd14: mov rcx, qword ptr [rsp + 0xa8]
41bd1c: xor rcx, qword ptr fs:[0x28]
41bd25: jne 0x41bfc1
41bd2b: add rsp, 0xb8
41bd32: pop rbx
41bd33: pop rbp
41bd34: pop r12
41bd36: pop r13
41bd38: pop r14
41bd3a: pop r15
41bd3c: ret 
41bd3d: nop dword ptr [rax]
41bd40: cmp qword ptr [rdi + 0x38], 0
41bd45: je 0x41bde0
41bd4b: mov edx, dword ptr [rdi]
41bd4d: mov rax, qword ptr [rdi + 0x28]
41bd51: mov rcx, qword ptr [rdi + 0x20]
41bd55: and edx, 0x1000
41bd5b: cmp rax, rcx
41bd5e: jbe 0x41be20
41bd64: test edx, edx
41bd66: je 0x41be20
41bd6c: mov rbx, qword ptr [rdi + 0xd8]
41bd73: mov rdx, 0x4c1b60
41bd7a: mov rax, 0x4c2208
41bd81: mov rdi, rbx
41bd84: sub rax, rdx
41bd87: sub rdi, rdx
41bd8a: cmp rax, rdi
41bd8d: jbe 0x41bf9c
41bd93: xor esi, esi
41bd95: mov edx, 2
41bd9a: mov rdi, rbp
41bd9d: call qword ptr [rbx + 0x80]
41bda3: mov rsi, rax
41bda6: cmp rax, -1
41bdaa: je 0x41be0a
41bdac: mov qword ptr [rbp + 0x90], rax
41bdb3: mov rax, qword ptr [rbp + 0x28]
41bdb7: sub rax, qword ptr [rbp + 0x20]
41bdbb: mov r12, rax
41bdbe: jmp 0x41bdea
41bdc0: mov rsi, r12
41bdc3: xor r13d, r13d
41bdc6: jmp 0x41bbec
41bdcb: nop dword ptr [rax + rax]
41bdd0: xor eax, eax
41bdd2: jmp 0x41bc64
41bdd7: nop word ptr [rax + rax]
41bde0: mov rsi, qword ptr [rdi + 0x90]
41bde7: xor r12d, r12d
41bdea: cmp rsi, -1
41bdee: je 0x41be40
41bdf0: mov rax, r12
41bdf3: add rax, rsi
41bdf6: jns 0x41bd14
41bdfc: mov rax, 0xffffffffffffffc0
41be03: mov dword ptr fs:[rax], 0x16
41be0a: mov rax, 0xffffffffffffffff
41be11: jmp 0x41bd14
41be16: nop word ptr cs:[rax + rax]
41be20: mov rsi, qword ptr [rbp + 0x90]
41be27: cmp rax, rcx
41be2a: ja 0x41bf50
41be30: mov rax, qword ptr [rbp + 8]
41be34: sub rax, qword ptr [rbp + 0x10]
41be38: mov r12, rax
41be3b: jmp 0x41bdea
41be3d: nop dword ptr [rax]
41be40: mov rbx, qword ptr [rbp + 0xd8]
41be47: mov rdx, 0x4c1b60
41be4e: mov rax, 0x4c2208
41be55: mov rcx, rbx
41be58: sub rax, rdx
41be5b: sub rcx, rdx
41be5e: cmp rax, rcx
41be61: jbe 0x41bfa6
41be67: xor esi, esi
41be69: mov edx, 1
41be6e: mov rdi, rbp
41be71: call qword ptr [rbx + 0x80]
41be77: mov rsi, rax
41be7a: cmp rax, -1
41be7e: jne 0x41bdf0
41be84: jmp 0x41be0a
41be86: nop word ptr cs:[rax + rax]
41be90: mov r14, 0x4c1b60
41be97: mov rbx, 0x4c2208
41be9e: sub rbx, r14
41bea1: jmp 0x41bcc0
41bea6: nop word ptr cs:[rax + rax]
41beb0: mov rdi, r12
41beb3: movq xmm0, rdx
41beb8: and eax, 0xffffffef
41bebb: sub rdi, rcx
41bebe: punpcklqdq xmm0, xmm0
41bec2: mov dword ptr [rbp], eax
41bec5: add rdx, rdi
41bec8: movups xmmword ptr [rbp + 0x18], xmm0
41becc: mov qword ptr [rbp + 8], rdx
41bed0: movups xmmword ptr [rbp + 0x28], xmm0
41bed4: test rsi, rsi
41bed7: js 0x41bc9d
41bedd: mov rbx, qword ptr [rbp + 0xd8]
41bee4: mov rdx, 0x4c1b60
41beeb: mov rax, 0x4c2208
41bef2: mov rcx, rbx
41bef5: sub rax, rdx
41bef8: sub rcx, rdx
41befb: cmp rax, rcx
41befe: jbe 0x41bfb0
41bf04: xor edx, edx
41bf06: mov rdi, rbp
41bf09: call qword ptr [rbx + 0x80]
41bf0f: mov rax, r12
41bf12: jmp 0x41bd14
41bf17: nop word ptr [rax + rax]
41bf20: call 0x41b240
41bf25: jmp 0x41bcde
41bf2a: nop word ptr [rax + rax]
41bf30: mov qword ptr [rsp + 8], rsi
41bf35: mov qword ptr [rsp], rax
41bf39: call 0x41b240
41bf3e: mov rsi, qword ptr [rsp + 8]
41bf43: mov rax, qword ptr [rsp]
41bf47: jmp 0x41bc02
41bf4c: nop dword ptr [rax]
41bf50: test edx, edx
41bf52: jne 0x41bdb7
41bf58: sub rax, qword ptr [rbp + 0x10]
41bf5c: mov r12, rax
41bf5f: jmp 0x41bdea
41bf64: nop dword ptr [rax]
41bf68: mov qword ptr [rsp], rax
41bf6c: call 0x41b240
41bf71: mov rax, qword ptr [rsp]
41bf75: jmp 0x41baa1
41bf7a: nop word ptr [rax + rax]
41bf80: mov qword ptr [rsp + 8], rcx
41bf85: mov qword ptr [rsp], rax
41bf89: call 0x41b240
41bf8e: mov rcx, qword ptr [rsp + 8]
41bf93: mov rax, qword ptr [rsp]
41bf97: jmp 0x41bc38
41bf9c: call 0x41b240
41bfa1: jmp 0x41bd93
41bfa6: call 0x41b240
41bfab: jmp 0x41be67
41bfb0: call 0x41b240
41bfb5: mov rsi, qword ptr [rbp + 0x90]
41bfbc: jmp 0x41bf04
41bfc1: call 0x4547a0
41bfc6: nop word ptr cs:[rax + rax]
41bfd0: endbr64 
41bfd4: mov rdx, rsi
41bfd7: mov esi, dword ptr [rdi + 0x70]
41bfda: mov edi, 1
41bfdf: jmp 0x450c30
41bfe4: nop word ptr cs:[rax + rax]
41bfef: nop 
41bff0: endbr64 
41bff4: push r13
41bff6: mov r13, rdi
41bff9: push r12
41bffb: push rbp
41bffc: push rbx
41bffd: sub rsp, 8
41c001: test rdx, rdx
41c004: jle 0x41c088
41c00a: mov rbp, rsi
41c00d: mov r12, rdx
41c010: mov rbx, rdx
41c013: jmp 0x41c02d
41c015: nop dword ptr [rax]
41c018: call 0x450e60
41c01d: test rax, rax
41c020: js 0x41c050
41c022: sub rbx, rax
41c025: add rbp, rax
41c028: test rbx, rbx
41c02b: jle 0x41c080
41c02d: mov edi, dword ptr [r13 + 0x70]
41c031: mov rdx, rbx
41c034: mov rsi, rbp
41c037: test byte ptr [r13 + 0x74], 2
41c03c: je 0x41c018
41c03e: call 0x451a20
41c043: test rax, rax
41c046: jns 0x41c022
41c048: nop dword ptr [rax + rax]
41c050: or dword ptr [r13], 0x20
41c055: mov rax, r12
41c058: sub rax, rbx
41c05b: mov rdx, qword ptr [r13 + 0x90]
41c062: test rdx, rdx
41c065: js 0x41c071
41c067: add rdx, rax
41c06a: mov qword ptr [r13 + 0x90], rdx
41c071: add rsp, 8
41c075: pop rbx
41c076: pop rbp
41c077: pop r12
41c079: pop r13
41c07b: ret 
41c07c: nop dword ptr [rax]
41c080: mov rax, r12
41c083: sub rax, rbx
41c086: jmp 0x41c05b
41c088: xor eax, eax
41c08a: jmp 0x41c05b
41c08c: nop dword ptr [rax]
41c090: endbr64 
41c094: push r15
41c096: mov r15, rsi
41c099: push r14
41c09b: push r13
41c09d: mov r13, rdx
41c0a0: push r12
41c0a2: mov r12, rsi
41c0a5: push rbp
41c0a6: mov rbp, rdi
41c0a9: push rbx
41c0aa: sub rsp, 0xb8
41c0b1: mov r14, qword ptr [rdi + 8]
41c0b5: mov rbx, qword ptr [rdi + 0x10]
41c0b9: mov rax, qword ptr fs:[0x28]
41c0c2: mov qword ptr [rsp + 0xa8], rax
41c0ca: xor eax, eax
41c0cc: sub rbx, r14
41c0cf: cmp rbx, rdx
41c0d2: jae 0x41c1f5
41c0d8: test dword ptr [rdi], 0x100
41c0de: jne 0x41c230
41c0e4: mov rax, qword ptr [rbp + 0xd8]
41c0eb: mov r14, 0x4c1b60
41c0f2: mov rbx, 0x4c2208
41c0f9: mov rdx, rax
41c0fc: sub rbx, r14
41c0ff: sub rdx, r14
41c102: cmp rbx, rdx
41c105: jbe 0x41c330
41c10b: lea rsi, [rsp + 0x10]
41c110: mov rdi, rbp
41c113: call qword ptr [rax + 0x90]
41c119: test eax, eax
41c11b: jne 0x41c288
41c121: mov eax, dword ptr [rsp + 0x28]
41c125: and eax, 0xf000
41c12a: cmp eax, 0x8000
41c12f: jne 0x41c288
41c135: mov r8, qword ptr [rsp + 0x40]
41c13a: test r8, r8
41c13d: mov qword ptr [rsp + 8], r8
41c142: je 0x41c288
41c148: call 0x451b30
41c14d: mov rdi, qword ptr [rbp + 0x38]
41c151: mov r8, qword ptr [rsp + 8]
41c156: cdqe 
41c158: mov rdx, rdi
41c15b: mov rcx, rax
41c15e: lea r9, [r8 + rax - 1]
41c163: not rdx
41c166: add rdx, qword ptr [rbp + 0x40]
41c16a: neg rcx
41c16d: lea rsi, [rdx + rax]
41c171: and r9, rcx
41c174: and rsi, rcx
41c177: cmp r9, rsi
41c17a: jb 0x41c348
41c180: ja 0x41c369
41c186: lea rdx, [rdi + r8]
41c18a: mov qword ptr [rbp + 0x40], rdx
41c18e: mov rcx, qword ptr [rbp + 0x90]
41c195: mov rax, qword ptr [rbp + 0x10]
41c199: mov qword ptr [rbp + 0x18], rdi
41c19d: sub rax, qword ptr [rbp + 8]
41c1a1: sub rcx, rax
41c1a4: mov qword ptr [rbp + 0x90], rcx
41c1ab: cmp r8, rcx
41c1ae: jle 0x41c310
41c1b4: add rdi, rcx
41c1b7: mov qword ptr [rbp + 0x10], rdx
41c1bb: mov rsi, r8
41c1be: xor edx, edx
41c1c0: mov qword ptr [rbp + 8], rdi
41c1c4: mov edi, dword ptr [rbp + 0x70]
41c1c7: call 0x450f00
41c1cc: mov rdx, qword ptr [rbp + 0x40]
41c1d0: sub rdx, qword ptr [rbp + 0x38]
41c1d4: cmp rax, rdx
41c1d7: je 0x41c39b
41c1dd: or dword ptr [rbp], 0x20
41c1e1: mov r14, qword ptr [rbp + 8]
41c1e5: mov rbx, qword ptr [rbp + 0x10]
41c1e9: sub rbx, r14
41c1ec: cmp rbx, r13
41c1ef: jae 0x41c260
41c1f1: or dword ptr [rbp], 0x10
41c1f5: test rbx, rbx
41c1f8: jne 0x41c260
41c1fa: mov rax, r12
41c1fd: sub rax, r15
41c200: mov rcx, qword ptr [rsp + 0xa8]
41c208: xor rcx, qword ptr fs:[0x28]
41c211: jne 0x41c3c4
41c217: add rsp, 0xb8
41c21e: pop rbx
41c21f: pop rbp
41c220: pop r12
41c222: pop r13
41c224: pop r14
41c226: pop r15
41c228: ret 
41c229: nop dword ptr [rax]
41c230: mov rdx, rbx
41c233: mov rsi, r14
41c236: mov rdi, r15
41c239: sub r13, rbx
41c23c: call 0x401150
41c241: mov rdi, rbp
41c244: mov r12, rax
41c247: call 0x41e750
41c24c: mov r14, qword ptr [rbp + 8]
41c250: mov rbx, qword ptr [rbp + 0x10]
41c254: sub rbx, r14
41c257: cmp r13, rbx
41c25a: ja 0x41c0e4
41c260: cmp rbx, r13
41c263: mov rdi, r12
41c266: mov rsi, r14
41c269: cmova rbx, r13
41c26d: mov rdx, rbx
41c270: add rbx, r14
41c273: call 0x401150
41c278: mov qword ptr [rbp + 8], rbx
41c27c: mov r12, rax
41c27f: jmp 0x41c1fa
41c284: nop dword ptr [rax]
41c288: mov rdi, qword ptr [rbp + 0x38]
41c28c: mov rsi, qword ptr [rbp + 0x40]
41c290: sub rsi, rdi
41c293: call 0x451c70
41c298: mov ecx, dword ptr [rbp + 0xc0]
41c29e: lea rdx, [rip + 0xa5afb]
41c2a5: lea rax, [rip + 0xa5d34]
41c2ac: pxor xmm0, xmm0
41c2b0: mov qword ptr [rbp + 0x18], 0
41c2b8: test ecx, ecx
41c2ba: movups xmmword ptr [rbp + 0x38], xmm0
41c2be: cmovg rax, rdx
41c2c2: movups xmmword ptr [rbp + 8], xmm0
41c2c6: mov qword ptr [rbp + 0xd8], rax
41c2cd: mov rax, qword ptr [rbp + 0xa0]
41c2d4: mov qword ptr [rax + 0xe0], rdx
41c2db: mov rax, qword ptr [rbp + 0xd8]
41c2e2: mov rdx, rax
41c2e5: sub rdx, r14
41c2e8: cmp rdx, rbx
41c2eb: jae 0x41c3b0
41c2f1: mov rdx, r13
41c2f4: mov rsi, r15
41c2f7: mov rdi, rbp
41c2fa: call qword ptr [rax + 0x40]
41c2fd: mov r8, rax
41c300: mov rax, r12
41c303: sub rax, r15
41c306: add rax, r8
41c309: jmp 0x41c200
41c30e: nop 
41c310: movq xmm0, rdx
41c315: or dword ptr [rbp], 0x10
41c319: punpcklqdq xmm0, xmm0
41c31d: movups xmmword ptr [rbp + 8], xmm0
41c321: jmp 0x41c1fa
41c326: nop word ptr cs:[rax + rax]
41c330: mov qword ptr [rsp + 8], rax
41c335: call 0x41b240
41c33a: mov rax, qword ptr [rsp + 8]
41c33f: jmp 0x41c10b
41c344: nop dword ptr [rax]
41c348: add rdi, r9
41c34b: sub rsi, r9
41c34e: call 0x451c70
41c353: mov rdi, qword ptr [rbp + 0x38]
41c357: mov r8, qword ptr [rsp + 0x40]
41c35c: lea rdx, [rdi + r8]
41c360: mov qword ptr [rbp + 0x40], rdx
41c364: jmp 0x41c18e
41c369: mov ecx, 1
41c36e: mov rdx, r9
41c371: xor eax, eax
41c373: call 0x454430
41c378: mov rdi, rax
41c37b: cmp rax, -1
41c37f: je 0x41c288
41c385: mov r8, qword ptr [rsp + 0x40]
41c38a: mov qword ptr [rbp + 0x38], rax
41c38e: lea rdx, [rax + r8]
41c392: mov qword ptr [rbp + 0x40], rdx
41c396: jmp 0x41c18e
41c39b: mov qword ptr [rbp + 0x90], rax
41c3a2: jmp 0x41c1e1
41c3a7: nop word ptr [rax + rax]
41c3b0: mov qword ptr [rsp + 8], rax
41c3b5: call 0x41b240
41c3ba: mov rax, qword ptr [rsp + 8]
41c3bf: jmp 0x41c2f1
41c3c4: call 0x4547a0
41c3c9: nop dword ptr [rax]
41c3d0: endbr64 
41c3d4: push r15
41c3d6: push r14
41c3d8: mov r14, rsi
41c3db: push r13
41c3dd: mov r13, rdx
41c3e0: push r12
41c3e2: push rbp
41c3e3: push rbx
41c3e4: mov rbx, rdi
41c3e7: sub rsp, 8
41c3eb: cmp qword ptr [rdi + 0x38], 0
41c3f0: je 0x41c568
41c3f6: mov r12, r13
41c3f9: test r13, r13
41c3fc: jne 0x41c4c4
41c402: jmp 0x41c540
41c407: nop word ptr [rax + rax]
41c410: test dword ptr [rbx], 0x100
41c416: jne 0x41c502
41c41c: mov rax, qword ptr [rbx + 0x38]
41c420: test rax, rax
41c423: je 0x41c510
41c429: mov rcx, qword ptr [rbx + 0x40]
41c42d: sub rcx, rax
41c430: cmp rcx, r12
41c433: ja 0x41c530
41c439: movq xmm0, rax
41c43e: punpcklqdq xmm0, xmm0
41c442: movups xmmword ptr [rbx + 8], xmm0
41c446: movups xmmword ptr [rbx + 0x18], xmm0
41c44a: movups xmmword ptr [rbx + 0x28], xmm0
41c44e: cmp rcx, 0x7f
41c452: jbe 0x41c520
41c458: mov rax, r12
41c45b: xor edx, edx
41c45d: mov r15, r12
41c460: div rcx
41c463: sub r15, rdx
41c466: mov rbp, qword ptr [rbx + 0xd8]
41c46d: mov rdx, 0x4c1b60
41c474: mov rax, 0x4c2208
41c47b: mov rcx, rbp
41c47e: sub rax, rdx
41c481: sub rcx, rdx
41c484: cmp rax, rcx
41c487: jbe 0x41c558
41c48d: mov rdx, r15
41c490: mov rsi, r14
41c493: mov rdi, rbx
41c496: call qword ptr [rbp + 0x70]
41c499: test rax, rax
41c49c: jle 0x41c5a8
41c4a2: mov rdx, qword ptr [rbx + 0x90]
41c4a9: add r14, rax
41c4ac: sub r12, rax
41c4af: cmp rdx, -1
41c4b3: je 0x41c4bf
41c4b5: add rax, rdx
41c4b8: mov qword ptr [rbx + 0x90], rax
41c4bf: test r12, r12
41c4c2: je 0x41c540
41c4c4: mov rsi, qword ptr [rbx + 8]
41c4c8: mov rbp, qword ptr [rbx + 0x10]
41c4cc: sub rbp, rsi
41c4cf: cmp rbp, r12
41c4d2: jae 0x41c590
41c4d8: test rbp, rbp
41c4db: je 0x41c410
41c4e1: mov rdi, r14
41c4e4: mov rdx, rbp
41c4e7: sub r12, rbp
41c4ea: call 0x401150
41c4ef: add qword ptr [rbx + 8], rbp
41c4f3: mov r14, rax
41c4f6: test dword ptr [rbx], 0x100
41c4fc: je 0x41c41c
41c502: mov rdi, rbx
41c505: call 0x41e750
41c50a: jmp 0x41c4bf
41c50c: nop dword ptr [rax]
41c510: pxor xmm1, xmm1
41c514: movups xmmword ptr [rbx + 8], xmm1
41c518: movups xmmword ptr [rbx + 0x18], xmm1
41c51c: movups xmmword ptr [rbx + 0x28], xmm1
41c520: mov r15, r12
41c523: jmp 0x41c466
41c528: nop dword ptr [rax + rax]
41c530: mov rdi, rbx
41c533: call 0x41e910
41c538: cmp eax, -1
41c53b: jne 0x41c4bf
41c53d: sub r13, r12
41c540: add rsp, 8
41c544: mov rax, r13
41c547: pop rbx
41c548: pop rbp
41c549: pop r12
41c54b: pop r13
41c54d: pop r14
41c54f: pop r15
41c551: ret 
41c552: nop word ptr [rax + rax]
41c558: call 0x41b240
41c55d: jmp 0x41c48d
41c562: nop word ptr [rax + rax]
41c568: mov rdi, qword ptr [rdi + 0x48]
41c56c: test rdi, rdi
41c56f: je 0x41c57c
41c571: call 0x426a00
41c576: and dword ptr [rbx], 0xfffffeff
41c57c: mov rdi, rbx
41c57f: call 0x41ed20
41c584: jmp 0x41c3f6
41c589: nop dword ptr [rax]
41c590: mov rdx, r12
41c593: mov rdi, r14
41c596: call 0x401060
41c59b: add qword ptr [rbx + 8], r12
41c59f: jmp 0x41c540
41c5a1: nop dword ptr [rax]
41c5a8: mov edx, dword ptr [rbx]
41c5aa: sub r13, r12
41c5ad: mov ecx, edx
41c5af: or edx, 0x10
41c5b2: or ecx, 0x20
41c5b5: test rax, rax
41c5b8: cmovne edx, ecx
41c5bb: mov dword ptr [rbx], edx
41c5bd: jmp 0x41c540
41c5bf: nop 
41c5c0: endbr64 
41c5c4: push r12
41c5c6: push rbp
41c5c7: push rbx
41c5c8: mov rbx, rdi
41c5cb: test ecx, ecx
41c5cd: je 0x41c6a0
41c5d3: mov rbp, rsi
41c5d6: cmp edx, 1
41c5d9: je 0x41c690
41c5df: cmp edx, 2
41c5e2: je 0x41c668
41c5e8: test rbp, rbp
41c5eb: js 0x41c6ca
41c5f1: mov r12, qword ptr [rbx + 0xd8]
41c5f8: mov rdx, 0x4c1b60
41c5ff: mov rax, 0x4c2208
41c606: mov rdi, r12
41c609: sub rax, rdx
41c60c: sub rdi, rdx
41c60f: cmp rax, rdi
41c612: jbe 0x41c6c0
41c618: xor edx, edx
41c61a: mov rsi, rbp
41c61d: mov rdi, rbx
41c620: call qword ptr [r12 + 0x80]
41c628: test rax, rax
41c62b: js 0x41c6e4
41c631: mov rcx, qword ptr [rbx + 0x40]
41c635: mov rdx, qword ptr [rbx + 0x38]
41c639: mov rsi, rcx
41c63c: mov qword ptr [rbx + 0x18], rdx
41c640: sub rsi, rdx
41c643: cmp rbp, rsi
41c646: jg 0x41c680
41c648: add rdx, rbp
41c64b: mov qword ptr [rbx + 8], rdx
41c64f: mov qword ptr [rbx + 0x10], rdx
41c653: and dword ptr [rbx], 0xffffffef
41c656: mov qword ptr [rbx + 0x90], rax
41c65d: mov rax, rbp
41c660: pop rbx
41c661: pop rbp
41c662: pop r12
41c664: ret 
41c665: nop dword ptr [rax]
41c668: mov rax, qword ptr [rdi + 0x40]
41c66c: sub rax, qword ptr [rdi + 0x38]
41c670: add rbp, rax
41c673: jmp 0x41c5e8
41c678: nop dword ptr [rax + rax]
41c680: movq xmm0, rcx
41c685: punpcklqdq xmm0, xmm0
41c689: movups xmmword ptr [rbx + 8], xmm0
41c68d: jmp 0x41c653
41c68f: nop 
41c690: mov rax, qword ptr [rdi + 8]
41c694: sub rax, qword ptr [rdi + 0x18]
41c698: add rbp, rax
41c69b: jmp 0x41c5e8
41c6a0: mov rax, qword ptr [rdi + 0x90]
41c6a7: mov rdx, qword ptr [rdi + 0x10]
41c6ab: sub rdx, qword ptr [rdi + 8]
41c6af: pop rbx
41c6b0: sub rax, rdx
41c6b3: pop rbp
41c6b4: pop r12
41c6b6: ret 
41c6b7: nop word ptr [rax + rax]
41c6c0: call 0x41b240
41c6c5: jmp 0x41c618
41c6ca: mov rax, 0xffffffffffffffc0
41c6d1: mov dword ptr fs:[rax], 0x16
41c6d8: mov rax, 0xffffffffffffffff
41c6df: jmp 0x41c660
41c6e4: mov rax, 0xffffffffffffffff
41c6eb: jmp 0x41c660
41c6f0: endbr64 
41c6f4: mov r8d, dword ptr [rdi + 0x70]
41c6f8: test byte ptr [rdi + 0x74], 2
41c6fc: mov edi, r8d
41c6ff: jne 0x41c710
41c701: jmp 0x450dc0
41c706: nop word ptr cs:[rax + rax]
41c710: jmp 0x4519f0
41c715: nop word ptr cs:[rax + rax]
41c720: endbr64 
41c724: push r15
41c726: push r14
41c728: push r13
41c72a: xor r13d, r13d
41c72d: push r12
41c72f: push rbp
41c730: push rbx
41c731: sub rsp, 0x18
41c735: test rdx, rdx
41c738: je 0x41c797
41c73a: mov rbp, rdi
41c73d: mov r12, rsi
41c740: mov rdi, qword ptr [rdi + 0x28]
41c744: mov rbx, rdx
41c747: mov eax, dword ptr [rbp]
41c74a: and eax, 0xa00
41c74f: cmp eax, 0xa00
41c754: je 0x41c7b0
41c756: mov rax, qword ptr [rbp + 0x30]
41c75a: cmp rax, rdi
41c75d: jbe 0x41c7d0
41c75f: sub rax, rdi
41c762: xor r15d, r15d
41c765: mov rdx, rax
41c768: test rdx, rdx
41c76b: je 0x41c7d0
41c76d: cmp rbx, rdx
41c770: mov rsi, r12
41c773: mov r14, rbx
41c776: cmovbe rdx, rbx
41c77a: mov r13, rdx
41c77d: call 0x401150
41c782: add r12, r13
41c785: sub r14, r13
41c788: mov qword ptr [rbp + 0x28], rax
41c78c: add r15, r14
41c78f: jne 0x41c7d3
41c791: sub rbx, r14
41c794: mov r13, rbx
41c797: add rsp, 0x18
41c79b: mov rax, r13
41c79e: pop rbx
41c79f: pop rbp
41c7a0: pop r12
41c7a2: pop r13
41c7a4: pop r14
41c7a6: pop r15
41c7a8: ret 
41c7a9: nop dword ptr [rax]
41c7b0: mov rdx, qword ptr [rbp + 0x40]
41c7b4: lea rax, [rsi + rbx]
41c7b8: sub rdx, rdi
41c7bb: cmp rbx, rdx
41c7be: jbe 0x41c865
41c7c4: xor r15d, r15d
41c7c7: test rdx, rdx
41c7ca: jne 0x41c76d
41c7cc: nop dword ptr [rax]
41c7d0: mov r14, rbx
41c7d3: mov rax, qword ptr [rbp + 0xd8]
41c7da: mov r15, 0x4c1b60
41c7e1: mov r13, 0x4c2208
41c7e8: mov rdx, rax
41c7eb: sub r13, r15
41c7ee: sub rdx, r15
41c7f1: cmp r13, rdx
41c7f4: jbe 0x41c9a0
41c7fa: mov esi, 0xffffffff
41c7ff: mov rdi, rbp
41c802: call qword ptr [rax + 0x18]
41c805: cmp eax, -1
41c808: je 0x41c958
41c80e: mov rcx, qword ptr [rbp + 0x40]
41c812: sub rcx, qword ptr [rbp + 0x38]
41c816: mov r8, r14
41c819: cmp rcx, 0x7f
41c81d: jbe 0x41c82a
41c81f: mov rax, r14
41c822: xor edx, edx
41c824: div rcx
41c827: sub r8, rdx
41c82a: test r8, r8
41c82d: jne 0x41c878
41c82f: mov r13, rbx
41c832: test r14, r14
41c835: je 0x41c797
41c83b: lea rsi, [r12 + r8]
41c83f: mov rdx, r14
41c842: mov rdi, rbp
41c845: call 0x41ee50
41c84a: sub rax, r14
41c84d: add r13, rax
41c850: jmp 0x41c797
41c855: nop dword ptr [rax]
41c858: sub rax, 1
41c85c: cmp byte ptr [rax], 0xa
41c85f: je 0x41c970
41c865: cmp r12, rax
41c868: jb 0x41c858
41c86a: xor r15d, r15d
41c86d: jmp 0x41c76d
41c872: nop word ptr [rax + rax]
41c878: mov rax, qword ptr [rbp + 0xd8]
41c87f: mov rdx, rax
41c882: sub rdx, r15
41c885: test dword ptr [rbp], 0x1000
41c88c: jne 0x41c990
41c892: mov rcx, qword ptr [rbp + 0x10]
41c896: mov rsi, qword ptr [rbp + 0x20]
41c89a: cmp rcx, rsi
41c89d: je 0x41c8df
41c89f: cmp r13, rdx
41c8a2: jbe 0x41ca1d
41c8a8: sub rsi, rcx
41c8ab: mov qword ptr [rsp], r8
41c8af: mov edx, 1
41c8b4: mov rdi, rbp
41c8b7: call qword ptr [rax + 0x80]
41c8bd: cmp rax, -1
41c8c1: je 0x41c9ca
41c8c7: mov qword ptr [rbp + 0x90], rax
41c8ce: mov rax, qword ptr [rbp + 0xd8]
41c8d5: mov r8, qword ptr [rsp]
41c8d9: mov rdx, rax
41c8dc: sub rdx, r15
41c8df: cmp r13, rdx
41c8e2: jbe 0x41ca01
41c8e8: mov qword ptr [rsp], r8
41c8ec: mov rdx, r8
41c8ef: mov rsi, r12
41c8f2: mov rdi, rbp
41c8f5: call qword ptr [rax + 0x78]
41c8f8: mov r8, qword ptr [rsp]
41c8fc: mov r13, rax
41c8ff: movzx eax, word ptr [rbp + 0x80]
41c906: test r13, r13
41c909: je 0x41c914
41c90b: test ax, ax
41c90e: jne 0x41c9e0
41c914: mov rax, qword ptr [rbp + 0x38]
41c918: mov edx, dword ptr [rbp + 0xc0]
41c91e: mov qword ptr [rbp + 0x18], rax
41c922: mov qword ptr [rbp + 8], rax
41c926: mov qword ptr [rbp + 0x10], rax
41c92a: mov qword ptr [rbp + 0x28], rax
41c92e: mov qword ptr [rbp + 0x20], rax
41c932: test edx, edx
41c934: jle 0x41c9b8
41c93a: mov rax, qword ptr [rbp + 0x40]
41c93e: mov qword ptr [rbp + 0x30], rax
41c942: cmp r8, r13
41c945: ja 0x41c9cd
41c94b: sub r14, r13
41c94e: jmp 0x41c82f
41c953: nop dword ptr [rax + rax]
41c958: sub rbx, r14
41c95b: mov r13, 0xffffffffffffffff
41c962: test r14, r14
41c965: cmovne r13, rbx
41c969: jmp 0x41c797
41c96e: nop 
41c970: sub rax, r12
41c973: add rax, 1
41c977: mov rdx, rax
41c97a: jne 0x41ca41
41c980: mov r14, rbx
41c983: mov r15d, 1
41c989: jmp 0x41c78c
41c98e: nop 
41c990: mov qword ptr [rbp + 0x90], 0xffffffffffffffff
41c99b: jmp 0x41c8df
41c9a0: mov qword ptr [rsp], rax
41c9a4: call 0x41b240
41c9a9: mov rax, qword ptr [rsp]
41c9ad: jmp 0x41c7fa
41c9b2: nop word ptr [rax + rax]
41c9b8: test dword ptr [rbp], 0x202
41c9bf: jne 0x41c93e
41c9c5: jmp 0x41c93a
41c9ca: xor r13d, r13d
41c9cd: sub rbx, r14
41c9d0: add r13, rbx
41c9d3: jmp 0x41c797
41c9d8: nop dword ptr [rax + rax]
41c9e0: lea edi, [rax - 1]
41c9e3: mov edx, r13d
41c9e6: mov rsi, r12
41c9e9: call 0x41f970
41c9ee: mov r8, qword ptr [rsp]
41c9f2: add eax, 1
41c9f5: mov word ptr [rbp + 0x80], ax
41c9fc: jmp 0x41c914
41ca01: mov qword ptr [rsp + 8], rax
41ca06: mov qword ptr [rsp], r8
41ca0a: call 0x41b240
41ca0f: mov rax, qword ptr [rsp + 8]
41ca14: mov r8, qword ptr [rsp]
41ca18: jmp 0x41c8e8
41ca1d: mov qword ptr [rsp + 8], rax
41ca22: mov qword ptr [rsp], r8
41ca26: call 0x41b240
41ca2b: mov rsi, qword ptr [rbp + 0x20]
41ca2f: mov rcx, qword ptr [rbp + 0x10]
41ca33: mov rax, qword ptr [rsp + 8]
41ca38: mov r8, qword ptr [rsp]
41ca3c: jmp 0x41c8a8
41ca41: mov r15d, 1
41ca47: jmp 0x41c76d
41ca4c: nop dword ptr [rax]
41ca50: endbr64 
41ca54: push r13
41ca56: push r12
41ca58: push rbp
41ca59: mov rbp, rdi
41ca5c: push rbx
41ca5d: sub rsp, 0xa8
41ca64: mov r13, qword ptr [rdi + 0xd8]
41ca6b: mov r12, 0x4c1b60
41ca72: mov rax, qword ptr fs:[0x28]
41ca7b: mov qword ptr [rsp + 0x98], rax
41ca83: xor eax, eax
41ca85: mov rbx, 0x4c2208
41ca8c: mov rax, r13
41ca8f: sub rbx, r12
41ca92: sub rax, r12
41ca95: cmp rbx, rax
41ca98: jbe 0x41cbc0
41ca9e: mov rsi, rsp
41caa1: mov rdi, rbp
41caa4: call qword ptr [r13 + 0x90]
41caab: test eax, eax
41caad: jne 0x41cabf
41caaf: mov eax, dword ptr [rsp + 0x18]
41cab3: and eax, 0xf000
41cab8: cmp eax, 0x8000
41cabd: je 0x41cb30
41cabf: lea rax, [rip + 0xa551a]
41cac6: lea rdx, [rip + 0xa52d3]
41cacd: mov ecx, dword ptr [rbp + 0xc0]
41cad3: test ecx, ecx
41cad5: cmovg rax, rdx
41cad9: mov qword ptr [rbp + 0xd8], rax
41cae0: mov rax, qword ptr [rbp + 0xa0]
41cae7: mov qword ptr [rax + 0xe0], rdx
41caee: mov r13, qword ptr [rbp + 0xd8]
41caf5: mov rax, r13
41caf8: sub rax, r12
41cafb: cmp rax, rbx
41cafe: jae 0x41cbb0
41cb04: mov rdi, rbp
41cb07: call qword ptr [r13 + 0x20]
41cb0b: mov rcx, qword ptr [rsp + 0x98]
41cb13: xor rcx, qword ptr fs:[0x28]
41cb1c: jne 0x41cc1e
41cb22: add rsp, 0xa8
41cb29: pop rbx
41cb2a: pop rbp
41cb2b: pop r12
41cb2d: pop r13
41cb2f: ret 
41cb30: mov rsi, qword ptr [rsp + 0x30]
41cb35: test rsi, rsi
41cb38: je 0x41cabf
41cb3a: mov rax, qword ptr [rbp + 0x90]
41cb41: cmp rsi, rax
41cb44: jge 0x41cb50
41cb46: cmp rax, -1
41cb4a: jne 0x41cabf
41cb50: mov r8d, dword ptr [rbp + 0x70]
41cb54: xor r9d, r9d
41cb57: mov ecx, 1
41cb5c: xor edi, edi
41cb5e: mov edx, 1
41cb63: call 0x451bc0
41cb68: mov r13, rax
41cb6b: cmp rax, -1
41cb6f: je 0x41cabf
41cb75: mov rsi, qword ptr [rsp + 0x30]
41cb7a: mov edi, dword ptr [rbp + 0x70]
41cb7d: xor edx, edx
41cb7f: call 0x450f00
41cb84: mov rsi, qword ptr [rsp + 0x30]
41cb89: cmp rax, rsi
41cb8c: je 0x41cbca
41cb8e: mov rdi, r13
41cb91: call 0x451c70
41cb96: mov qword ptr [rbp + 0x90], 0xffffffffffffffff
41cba1: jmp 0x41cabf
41cba6: nop word ptr cs:[rax + rax]
41cbb0: call 0x41b240
41cbb5: jmp 0x41cb04
41cbba: nop word ptr [rax + rax]
41cbc0: call 0x41b240
41cbc5: jmp 0x41ca9e
41cbca: lea rdx, [r13 + rax]
41cbcf: xor ecx, ecx
41cbd1: mov rsi, r13
41cbd4: mov rdi, rbp
41cbd7: call 0x41ecc0
41cbdc: mov rdx, qword ptr [rbp + 0x90]
41cbe3: mov qword ptr [rbp + 0x18], r13
41cbe7: lea rax, [r13 + rdx]
41cbec: cmp rdx, -1
41cbf0: lea rdx, [rip + 0xa50e9]
41cbf7: cmove rax, r13
41cbfb: mov qword ptr [rbp + 8], rax
41cbff: mov rax, qword ptr [rsp + 0x30]
41cc04: add r13, rax
41cc07: mov qword ptr [rbp + 0x90], rax
41cc0e: lea rax, [rip + 0xa530b]
41cc15: mov qword ptr [rbp + 0x10], r13
41cc19: jmp 0x41cacd
41cc1e: call 0x4547a0
41cc23: nop word ptr cs:[rax + rax]
41cc2e: nop 
41cc30: endbr64 
41cc34: push r13
41cc36: push r12
41cc38: push rbp
41cc39: push rbx
41cc3a: sub rsp, 0xa8
41cc41: mov rax, qword ptr fs:[0x28]
41cc4a: mov qword ptr [rsp + 0x98], rax
41cc52: xor eax, eax
41cc54: mov rax, qword ptr [rdi + 8]
41cc58: cmp rax, qword ptr [rdi + 0x10]
41cc5c: jae 0x41cc90
41cc5e: movzx eax, byte ptr [rax]
41cc61: mov rcx, qword ptr [rsp + 0x98]
41cc69: xor rcx, qword ptr fs:[0x28]
41cc72: jne 0x41ceba
41cc78: add rsp, 0xa8
41cc7f: pop rbx
41cc80: pop rbp
41cc81: pop r12
41cc83: pop r13
41cc85: ret 
41cc86: nop word ptr cs:[rax + rax]
41cc90: mov r13, qword ptr [rdi + 0xd8]
41cc97: mov r12, 0x4c1b60
41cc9e: mov rbp, rdi
41cca1: mov rbx, 0x4c2208
41cca8: mov rax, r13
41ccab: sub rbx, r12
41ccae: sub rax, r12
41ccb1: cmp rbx, rax
41ccb4: jbe 0x41ce48
41ccba: mov rsi, rsp
41ccbd: mov rdi, rbp
41ccc0: call qword ptr [r13 + 0x90]
41ccc7: test eax, eax
41ccc9: jne 0x41cda0
41cccf: mov eax, dword ptr [rsp + 0x18]
41ccd3: and eax, 0xf000
41ccd8: cmp eax, 0x8000
41ccdd: jne 0x41cda0
41cce3: mov r13, qword ptr [rsp + 0x30]
41cce8: test r13, r13
41cceb: je 0x41cda0
41ccf1: call 0x451b30
41ccf6: mov rdi, qword ptr [rbp + 0x38]
41ccfa: cdqe 
41ccfc: mov rcx, rdi
41ccff: mov r8, rax
41cd02: lea rdx, [r13 + rax - 1]
41cd07: not rcx
41cd0a: add rcx, qword ptr [rbp + 0x40]
41cd0e: neg r8
41cd11: lea rsi, [rcx + rax]
41cd15: and rdx, r8
41cd18: and rsi, r8
41cd1b: cmp rdx, rsi
41cd1e: jb 0x41ce58
41cd24: ja 0x41ce80
41cd2a: lea rdx, [rdi + r13]
41cd2e: mov qword ptr [rbp + 0x40], rdx
41cd32: mov rcx, qword ptr [rbp + 0x90]
41cd39: mov rax, qword ptr [rbp + 0x10]
41cd3d: mov qword ptr [rbp + 0x18], rdi
41cd41: sub rax, qword ptr [rbp + 8]
41cd45: sub rcx, rax
41cd48: mov qword ptr [rbp + 0x90], rcx
41cd4f: cmp rcx, r13
41cd52: jge 0x41ce18
41cd58: add rdi, rcx
41cd5b: mov qword ptr [rbp + 0x10], rdx
41cd5f: mov rsi, r13
41cd62: xor edx, edx
41cd64: mov qword ptr [rbp + 8], rdi
41cd68: mov edi, dword ptr [rbp + 0x70]
41cd6b: call 0x450f00
41cd70: mov rdx, qword ptr [rbp + 0x40]
41cd74: sub rdx, qword ptr [rbp + 0x38]
41cd78: cmp rax, rdx
41cd7b: je 0x41ce38
41cd81: or dword ptr [rbp], 0x20
41cd85: mov rax, qword ptr [rbp + 8]
41cd89: cmp rax, qword ptr [rbp + 0x10]
41cd8d: jb 0x41cc5e
41cd93: jmp 0x41ce25
41cd98: nop dword ptr [rax + rax]
41cda0: mov rdi, qword ptr [rbp + 0x38]
41cda4: mov rsi, qword ptr [rbp + 0x40]
41cda8: sub rsi, rdi
41cdab: call 0x451c70
41cdb0: mov ecx, dword ptr [rbp + 0xc0]
41cdb6: lea rdx, [rip + 0xa4fe3]
41cdbd: lea rax, [rip + 0xa521c]
41cdc4: pxor xmm0, xmm0
41cdc8: mov qword ptr [rbp + 0x18], 0
41cdd0: test ecx, ecx
41cdd2: movups xmmword ptr [rbp + 0x38], xmm0
41cdd6: cmovg rax, rdx
41cdda: movups xmmword ptr [rbp + 8], xmm0
41cdde: mov qword ptr [rbp + 0xd8], rax
41cde5: mov rax, qword ptr [rbp + 0xa0]
41cdec: mov qword ptr [rax + 0xe0], rdx
41cdf3: mov r13, qword ptr [rbp + 0xd8]
41cdfa: mov rax, r13
41cdfd: sub rax, r12
41ce00: cmp rbx, rax
41ce03: jbe 0x41ceb0
41ce09: mov rdi, rbp
41ce0c: call qword ptr [r13 + 0x20]
41ce10: jmp 0x41cc61
41ce15: nop dword ptr [rax]
41ce18: movq xmm0, rdx
41ce1d: punpcklqdq xmm0, xmm0
41ce21: movups xmmword ptr [rbp + 8], xmm0
41ce25: or dword ptr [rbp], 0x10
41ce29: mov eax, 0xffffffff
41ce2e: jmp 0x41cc61
41ce33: nop dword ptr [rax + rax]
41ce38: mov qword ptr [rbp + 0x90], rax
41ce3f: jmp 0x41cd85
41ce44: nop dword ptr [rax]
41ce48: call 0x41b240
41ce4d: jmp 0x41ccba
41ce52: nop word ptr [rax + rax]
41ce58: add rdi, rdx
41ce5b: sub rsi, rdx
41ce5e: call 0x451c70
41ce63: mov rdi, qword ptr [rbp + 0x38]
41ce67: mov r13, qword ptr [rsp + 0x30]
41ce6c: lea rdx, [rdi + r13]
41ce70: mov qword ptr [rbp + 0x40], rdx
41ce74: jmp 0x41cd32
41ce79: nop dword ptr [rax]
41ce80: mov ecx, 1
41ce85: xor eax, eax
41ce87: call 0x454430
41ce8c: mov rdi, rax
41ce8f: cmp rax, -1
41ce93: je 0x41cda0
41ce99: mov r13, qword ptr [rsp + 0x30]
41ce9e: mov qword ptr [rbp + 0x38], rax
41cea2: lea rdx, [rax + r13]
41cea6: mov qword ptr [rbp + 0x40], rdx
41ceaa: jmp 0x41cd32
41ceaf: nop 
41ceb0: call 0x41b240
41ceb5: jmp 0x41ce09
41ceba: call 0x4547a0
41cebf: nop 
41cec0: endbr64 
41cec4: or dword ptr [rdi], 0x240c
41ceca: push rbx
41cecb: mov rbx, rdi
41cece: mov qword ptr [rdi + 0x90], 0xffffffffffffffff
41ced9: call 0x41e460
41cede: mov dword ptr [rbx + 0x70], 0xffffffff
41cee5: pop rbx
41cee6: ret 
41cee7: nop word ptr [rax + rax]
41cef0: endbr64 
41cef4: or dword ptr [rdi], 0x240c
41cefa: push rbx
41cefb: mov rbx, rdi
41cefe: mov qword ptr [rdi + 0x90], 0xffffffffffffffff
41cf09: call 0x41e460
41cf0e: mov dword ptr [rbx + 0x70], 0xffffffff
41cf15: pop rbx
41cf16: ret 
41cf17: nop word ptr [rax + rax]
41cf20: endbr64 
41cf24: push r12
41cf26: xor eax, eax
41cf28: push rbp
41cf29: mov ebp, r8d
41cf2c: push rbx
41cf2d: mov rbx, rdi
41cf30: mov rdi, rsi
41cf33: mov esi, edx
41cf35: mov edx, ecx
41cf37: test byte ptr [rbx + 0x74], 2
41cf3b: jne 0x41cff0
41cf41: call 0x450c90
41cf46: mov r12d, eax
41cf49: test r12d, r12d
41cf4c: js 0x41cfe0
41cf52: mov edx, dword ptr [rbx]
41cf54: mov eax, ebp
41cf56: and ebp, 0x1004
41cf5c: mov dword ptr [rbx + 0x70], r12d
41cf60: and eax, 0x100c
41cf65: and edx, 0xffffeff3
41cf6b: or edx, eax
41cf6d: mov dword ptr [rbx], edx
41cf6f: cmp ebp, 0x1004
41cf75: jne 0x41cfb0
41cf77: mov rbp, qword ptr [rbx + 0xd8]
41cf7e: mov rdx, 0x4c1b60
41cf85: mov rax, 0x4c2208
41cf8c: mov rcx, rbp
41cf8f: sub rax, rdx
41cf92: sub rcx, rdx
41cf95: cmp rax, rcx
41cf98: jbe 0x41d000
41cf9a: xor esi, esi
41cf9c: mov edx, 2
41cfa1: mov rdi, rbx
41cfa4: call qword ptr [rbp + 0x80]
41cfaa: cmp rax, -1
41cfae: je 0x41cfc0
41cfb0: mov rdi, rbx
41cfb3: call 0x41e460
41cfb8: mov rax, rbx
41cfbb: pop rbx
41cfbc: pop rbp
41cfbd: pop r12
41cfbf: ret 
41cfc0: mov rax, 0xffffffffffffffc0
41cfc7: cmp dword ptr fs:[rax], 0x1d
41cfcb: je 0x41cfb0
41cfcd: mov edi, r12d
41cfd0: call 0x451730
41cfd5: xor eax, eax
41cfd7: jmp 0x41cfbb
41cfd9: nop dword ptr [rax]
41cfe0: pop rbx
41cfe1: xor eax, eax
41cfe3: pop rbp
41cfe4: pop r12
41cfe6: ret 
41cfe7: nop word ptr [rax + rax]
41cff0: call 0x4518a0
41cff5: mov r12d, eax
41cff8: jmp 0x41cf49
41cffd: nop dword ptr [rax]
41d000: call 0x41b240
41d005: jmp 0x41cf9a
41d007: nop word ptr [rax + rax]
41d010: endbr64 
41d014: cmp dword ptr [rdi + 0x70], -1
41d018: jne 0x41d0b0
41d01e: push r13
41d020: push r12
41d022: push rbp
41d023: push rbx
41d024: mov rbx, rdi
41d027: sub rsp, 8
41d02b: mov eax, dword ptr [rdi]
41d02d: mov rbp, qword ptr [rdi + 0xd8]
41d034: mov dword ptr [rdi + 0x70], esi
41d037: mov rdx, 0x4c1b60
41d03e: mov r12, 0xffffffffffffffc0
41d045: mov qword ptr [rdi + 0x90], 0xffffffffffffffff
41d050: and eax, 0xfffffff3
41d053: mov rcx, rbp
41d056: or eax, 0x40
41d059: sub rcx, rdx
41d05c: mov dword ptr [rdi], eax
41d05e: mov rax, 0x4c2208
41d065: mov r13d, dword ptr fs:[r12]
41d06a: sub rax, rdx
41d06d: cmp rax, rcx
41d070: jbe 0x41d0b8
41d072: xor esi, esi
41d074: mov ecx, 3
41d079: mov edx, 1
41d07e: mov rdi, rbx
41d081: call qword ptr [rbp + 0x48]
41d084: cmp rax, -1
41d088: je 0x41d0a0
41d08a: mov dword ptr fs:[r12], r13d
41d08f: mov rax, rbx
41d092: add rsp, 8
41d096: pop rbx
41d097: pop rbp
41d098: pop r12
41d09a: pop r13
41d09c: ret 
41d09d: nop dword ptr [rax]
41d0a0: xor eax, eax
41d0a2: cmp dword ptr fs:[r12], 0x1d
41d0a8: je 0x41d08a
41d0aa: jmp 0x41d092
41d0ac: nop dword ptr [rax]
41d0b0: xor eax, eax
41d0b2: ret 
41d0b3: nop dword ptr [rax + rax]
41d0b8: call 0x41b240
41d0bd: jmp 0x41d072
41d0bf: nop 
41d0c0: endbr64 
41d0c4: xor eax, eax
41d0c6: test rdx, rdx
41d0c9: jne 0x41d0d0
41d0cb: ret 
41d0cc: nop dword ptr [rax]
41d0d0: push r15
41d0d2: push r14
41d0d4: push r13
41d0d6: push r12
41d0d8: mov r12, rsi
41d0db: push rbp
41d0dc: mov rbp, rdx
41d0df: push rbx
41d0e0: mov rbx, rdi
41d0e3: sub rsp, 8
41d0e7: mov r14, qword ptr [rdi + 0xd8]
41d0ee: mov r15, 0x4c1b60
41d0f5: mov r13, 0x4c2208
41d0fc: mov rax, r14
41d0ff: sub r13, r15
41d102: sub rax, r15
41d105: test dword ptr [rdi], 0x1000
41d10b: jne 0x41d1d0
41d111: mov rdx, qword ptr [rdi + 0x10]
41d115: mov rsi, qword ptr [rdi + 0x20]
41d119: cmp rdx, rsi
41d11c: je 0x41d15b
41d11e: cmp r13, rax
41d121: jbe 0x41d220
41d127: sub rsi, rdx
41d12a: mov rdi, rbx
41d12d: mov edx, 1
41d132: call qword ptr [r14 + 0x80]
41d139: mov rdx, rax
41d13c: mov eax, 0xffffffff
41d141: cmp rdx, -1
41d145: je 0x41d1b9
41d147: mov r14, qword ptr [rbx + 0xd8]
41d14e: mov qword ptr [rbx + 0x90], rdx
41d155: mov rax, r14
41d158: sub rax, r15
41d15b: cmp r13, rax
41d15e: jbe 0x41d210
41d164: mov rdx, rbp
41d167: mov rsi, r12
41d16a: mov rdi, rbx
41d16d: call qword ptr [r14 + 0x78]
41d171: mov r13, rax
41d174: movzx eax, word ptr [rbx + 0x80]
41d17b: test r13, r13
41d17e: je 0x41d185
41d180: test ax, ax
41d183: jne 0x41d1f0
41d185: mov rax, qword ptr [rbx + 0x38]
41d189: mov edx, dword ptr [rbx + 0xc0]
41d18f: mov qword ptr [rbx + 0x18], rax
41d193: mov qword ptr [rbx + 8], rax
41d197: mov qword ptr [rbx + 0x10], rax
41d19b: mov qword ptr [rbx + 0x28], rax
41d19f: mov qword ptr [rbx + 0x20], rax
41d1a3: test edx, edx
41d1a5: jle 0x41d1e0
41d1a7: mov rax, qword ptr [rbx + 0x40]
41d1ab: mov qword ptr [rbx + 0x30], rax
41d1af: xor eax, eax
41d1b1: cmp rbp, r13
41d1b4: setne al
41d1b7: neg eax
41d1b9: add rsp, 8
41d1bd: pop rbx
41d1be: pop rbp
41d1bf: pop r12
41d1c1: pop r13
41d1c3: pop r14
41d1c5: pop r15
41d1c7: ret 
41d1c8: nop dword ptr [rax + rax]
41d1d0: mov qword ptr [rdi + 0x90], 0xffffffffffffffff
41d1db: jmp 0x41d15b
41d1e0: test dword ptr [rbx], 0x202
41d1e6: jne 0x41d1ab
41d1e8: jmp 0x41d1a7
41d1ea: nop word ptr [rax + rax]
41d1f0: lea edi, [rax - 1]
41d1f3: mov edx, r13d
41d1f6: mov rsi, r12
41d1f9: call 0x41f970
41d1fe: add eax, 1
41d201: mov word ptr [rbx + 0x80], ax
41d208: jmp 0x41d185
41d20d: nop dword ptr [rax]
41d210: call 0x41b240
41d215: jmp 0x41d164
41d21a: nop word ptr [rax + rax]
41d220: call 0x41b240
41d225: mov rsi, qword ptr [rbx + 0x20]
41d229: mov rdx, qword ptr [rbx + 0x10]
41d22d: jmp 0x41d127
41d232: nop word ptr cs:[rax + rax]
41d23d: nop dword ptr [rax]
41d240: endbr64 
41d244: push r12
41d246: push rbp
41d247: push rbx
41d248: mov r12d, dword ptr [rdi + 0x70]
41d24c: cmp r12d, -1
41d250: je 0x41d33c
41d256: mov eax, dword ptr [rdi]
41d258: mov rbx, rdi
41d25b: xor ebp, ebp
41d25d: and eax, 0x808
41d262: cmp eax, 0x800
41d267: je 0x41d348
41d26d: mov rdi, rbx
41d270: xor r12d, r12d
41d273: call 0x420540
41d278: test byte ptr [rbx + 0x74], 0x20
41d27c: jne 0x41d2b3
41d27e: mov r12, qword ptr [rbx + 0xd8]
41d285: mov rdx, 0x4c1b60
41d28c: mov rax, 0x4c2208
41d293: mov rcx, r12
41d296: sub rax, rdx
41d299: sub rcx, rdx
41d29c: cmp rax, rcx
41d29f: jbe 0x41d390
41d2a5: mov rdi, rbx
41d2a8: call qword ptr [r12 + 0x88]
41d2b0: mov r12d, eax
41d2b3: mov eax, dword ptr [rbx + 0xc0]
41d2b9: test eax, eax
41d2bb: jle 0x41d2f7
41d2bd: mov rax, qword ptr [rbx + 0xa0]
41d2c4: cmp qword ptr [rax + 0x40], 0
41d2c9: je 0x41d2d3
41d2cb: mov rdi, rbx
41d2ce: call 0x475320
41d2d3: xor ecx, ecx
41d2d5: xor edx, edx
41d2d7: xor esi, esi
41d2d9: mov rdi, rbx
41d2dc: call 0x474570
41d2e1: mov rax, qword ptr [rbx + 0xa0]
41d2e8: pxor xmm0, xmm0
41d2ec: movups xmmword ptr [rax], xmm0
41d2ef: movups xmmword ptr [rax + 0x10], xmm0
41d2f3: movups xmmword ptr [rax + 0x20], xmm0
41d2f7: xor ecx, ecx
41d2f9: xor edx, edx
41d2fb: xor esi, esi
41d2fd: mov rdi, rbx
41d300: call 0x41ecc0
41d305: pxor xmm0, xmm0
41d309: mov rdi, rbx
41d30c: movups xmmword ptr [rbx + 8], xmm0
41d310: movups xmmword ptr [rbx + 0x18], xmm0
41d314: movups xmmword ptr [rbx + 0x28], xmm0
41d318: call 0x41e440
41d31d: test r12d, r12d
41d320: mov dword ptr [rbx], 0xfbad240c
41d326: mov dword ptr [rbx + 0x70], 0xffffffff
41d32d: cmove r12d, ebp
41d331: mov qword ptr [rbx + 0x90], 0xffffffffffffffff
41d33c: mov eax, r12d
41d33f: pop rbx
41d340: pop rbp
41d341: pop r12
41d343: ret 
41d344: nop dword ptr [rax]
41d348: mov edx, dword ptr [rdi + 0xc0]
41d34e: test edx, edx
41d350: jle 0x41d378
41d352: mov rax, qword ptr [rdi + 0xa0]
41d359: mov rsi, qword ptr [rax + 0x18]
41d35d: mov rdx, qword ptr [rax + 0x20]
41d361: sub rdx, rsi
41d364: sar rdx, 2
41d368: call 0x419d50
41d36d: mov ebp, eax
41d36f: jmp 0x41d26d
41d374: nop dword ptr [rax]
41d378: mov rsi, qword ptr [rdi + 0x20]
41d37c: mov rdx, qword ptr [rdi + 0x28]
41d380: sub rdx, rsi
41d383: call 0x41d0c0
41d388: mov ebp, eax
41d38a: jmp 0x41d26d
41d38f: nop 
41d390: call 0x41b240
41d395: jmp 0x41d2a5
41d39a: nop word ptr [rax + rax]
41d3a0: endbr64 
41d3a4: push r15
41d3a6: push r14
41d3a8: push r13
41d3aa: push r12
41d3ac: push rbp
41d3ad: push rbx
41d3ae: sub rsp, 0x38
41d3b2: mov rax, qword ptr fs:[0x28]
41d3bb: mov qword ptr [rsp + 0x28], rax
41d3c0: xor eax, eax
41d3c2: cmp dword ptr [rdi + 0x70], -1
41d3c6: jne 0x41d700
41d3cc: movzx eax, byte ptr [rdx]
41d3cf: mov rbp, rdi
41d3d2: mov rbx, rdx
41d3d5: mov r9d, ecx
41d3d8: cmp al, 0x72
41d3da: je 0x41d990
41d3e0: cmp al, 0x77
41d3e2: je 0x41d430
41d3e4: cmp al, 0x61
41d3e6: je 0x41d570
41d3ec: mov rax, 0xffffffffffffffc0
41d3f3: xor r12d, r12d
41d3f6: mov dword ptr fs:[rax], 0x16
41d3fd: nop dword ptr [rax]
41d400: mov rax, qword ptr [rsp + 0x28]
41d405: xor rax, qword ptr fs:[0x28]
41d40e: jne 0x41da65
41d414: add rsp, 0x38
41d418: mov rax, r12
41d41b: pop rbx
41d41c: pop rbp
41d41d: pop r12
41d41f: pop r13
41d421: pop r14
41d423: pop r15
41d425: ret 
41d426: nop word ptr cs:[rax + rax]
41d430: mov r8d, 4
41d436: mov edx, 1
41d43b: mov ecx, 0x240
41d440: movzx eax, byte ptr [rbx + 1]
41d444: lea rdi, [rbx + 1]
41d448: cmp al, 0x78
41d44a: jg 0x41d46f
41d44c: cmp al, 0x61
41d44e: jle 0x41d6c8
41d454: sub eax, 0x62
41d457: cmp al, 0x16
41d459: ja 0x41d46f
41d45b: lea r10, [rip + 0x7899a]
41d462: movzx eax, al
41d465: movsxd rax, dword ptr [r10 + rax*4]
41d469: add rax, r10
41d46c: notrack jmp rax
41d46f: mov rdi, rbx
41d472: movzx eax, byte ptr [rbx + 2]
41d476: lea r10, [rbx + 2]
41d47a: cmp al, 0x78
41d47c: jg 0x41d4a1
41d47e: cmp al, 0x61
41d480: jle 0x41d710
41d486: sub eax, 0x62
41d489: cmp al, 0x16
41d48b: ja 0x41d4a1
41d48d: lea r11, [rip + 0x789c4]
41d494: movzx eax, al
41d497: movsxd rax, dword ptr [r11 + rax*4]
41d49b: add rax, r11
41d49e: notrack jmp rax
41d4a1: mov r10, rdi
41d4a4: movzx eax, byte ptr [rbx + 3]
41d4a8: lea rdi, [rbx + 3]
41d4ac: cmp al, 0x78
41d4ae: jg 0x41d4d3
41d4b0: cmp al, 0x61
41d4b2: jle 0x41d730
41d4b8: sub eax, 0x62
41d4bb: cmp al, 0x16
41d4bd: ja 0x41d4d3
41d4bf: lea r11, [rip + 0x789ee]
41d4c6: movzx eax, al
41d4c9: movsxd rax, dword ptr [r11 + rax*4]
41d4cd: add rax, r11
41d4d0: notrack jmp rax
41d4d3: mov rdi, r10
41d4d6: movzx eax, byte ptr [rbx + 4]
41d4da: lea r10, [rbx + 4]
41d4de: cmp al, 0x78
41d4e0: jg 0x41d505
41d4e2: cmp al, 0x61
41d4e4: jle 0x41d750
41d4ea: sub eax, 0x62
41d4ed: cmp al, 0x16
41d4ef: ja 0x41d505
41d4f1: lea r11, [rip + 0x78a18]
41d4f8: movzx eax, al
41d4fb: movsxd rax, dword ptr [r11 + rax*4]
41d4ff: add rax, r11
41d502: notrack jmp rax
41d505: mov r10, rdi
41d508: movzx eax, byte ptr [rbx + 5]
41d50c: lea rdi, [rbx + 5]
41d510: cmp al, 0x78
41d512: jg 0x41d537
41d514: cmp al, 0x61
41d516: jle 0x41d780
41d51c: sub eax, 0x62
41d51f: cmp al, 0x16
41d521: ja 0x41d537
41d523: lea r11, [rip + 0x78a42]
41d52a: movzx eax, al
41d52d: movsxd rax, dword ptr [r11 + rax*4]
41d531: add rax, r11
41d534: notrack jmp rax
41d537: mov rdi, r10
41d53a: movzx eax, byte ptr [rbx + 6]
41d53e: lea r11, [rbx + 6]
41d542: cmp al, 0x78
41d544: jg 0x41d585
41d546: cmp al, 0x61
41d548: jle 0x41d6a0
41d54e: sub eax, 0x62
41d551: cmp al, 0x16
41d553: ja 0x41d585
41d555: lea r10, [rip + 0x78a6c]
41d55c: movzx eax, al
41d55f: movsxd rax, dword ptr [r10 + rax*4]
41d563: add rax, r10
41d566: notrack jmp rax
41d569: nop dword ptr [rax]
41d570: mov r8d, 0x1004
41d576: mov edx, 1
41d57b: mov ecx, 0x440
41d580: jmp 0x41d440
41d585: mov r11, rdi
41d588: mov rbx, r11
41d58b: or edx, ecx
41d58d: mov rdi, rbp
41d590: mov ecx, 0x1b6
41d595: call 0x41cf20
41d59a: mov r12, rax
41d59d: test rax, rax
41d5a0: je 0x41d700
41d5a6: lea rdi, [rbx + 1]
41d5aa: lea rsi, [rip + 0x78844]
41d5b1: call 0x4010c0
41d5b6: mov rbx, rax
41d5b9: test rax, rax
41d5bc: je 0x41d400
41d5c2: lea r15, [rax + 5]
41d5c6: mov esi, 0x2c
41d5cb: mov rdi, r15
41d5ce: call 0x4010a0
41d5d3: sub rax, r15
41d5d6: lea rdi, [rax + 3]
41d5da: mov r14, rax
41d5dd: call 0x426410
41d5e2: mov r13, rax
41d5e5: test rax, rax
41d5e8: je 0x41d6e9
41d5ee: mov rdx, r14
41d5f1: mov rsi, r15
41d5f4: mov rdi, rax
41d5f7: call 0x401150
41d5fc: mov byte ptr [rax], 0
41d5ff: movzx edx, byte ptr [r13]
41d604: test dl, dl
41d606: je 0x41da58
41d60c: mov r10, qword ptr [rip + 0xa2815]
41d613: mov rsi, r13
41d616: mov rdi, r13
41d619: xor r9d, r9d
41d61c: mov r11, qword ptr [rip + 0xa2815]
41d623: movabs r14, 0x8000000004007
41d62d: jmp 0x41d64b
41d62f: nop 
41d630: mov eax, dword ptr [r11 + r8*4]
41d634: add rdi, 1
41d638: mov byte ptr [rdi - 1], al
41d63b: movzx edx, byte ptr [rsi + 1]
41d63f: add rsi, 1
41d643: test dl, dl
41d645: je 0x41d840
41d64b: movsx r8, dl
41d64f: lea ecx, [rdx - 0x2c]
41d652: movzx eax, word ptr [r10 + r8*2]
41d657: shr ax, 3
41d65b: and eax, 1
41d65e: cmp cl, 0x33
41d661: ja 0x41d671
41d663: mov r15, r14
41d666: shr r15, cl
41d669: mov rcx, r15
41d66c: and ecx, 1
41d66f: or eax, ecx
41d671: lea ecx, [r9 + 1]
41d675: test al, al
41d677: jne 0x41d630
41d679: cmp dl, 0x2f
41d67c: jne 0x41d63b
41d67e: cmp ecx, 3
41d681: je 0x41d872
41d687: lea eax, [r9 + 2]
41d68b: mov byte ptr [rdi], 0x2f
41d68e: mov r9d, ecx
41d691: add rdi, 1
41d695: mov ecx, eax
41d697: jmp 0x41d63b
41d699: nop dword ptr [rax]
41d6a0: mov rbx, rdi
41d6a3: test al, al
41d6a5: je 0x41d58b
41d6ab: cmp al, 0x2b
41d6ad: jne 0x41d585
41d6b3: and r8d, 0x1000
41d6ba: mov edx, 2
41d6bf: jmp 0x41d588
41d6c4: nop dword ptr [rax]
41d6c8: test al, al
41d6ca: je 0x41d58b
41d6d0: cmp al, 0x2b
41d6d2: jne 0x41d46f
41d6d8: and r8d, 0x1000
41d6df: mov edx, 2
41d6e4: jmp 0x41d472
41d6e9: mov rbx, 0xffffffffffffffc0
41d6f0: mov rdi, rbp
41d6f3: mov r12d, dword ptr fs:[rbx]
41d6f7: call 0x41d240
41d6fc: mov dword ptr fs:[rbx], r12d
41d700: xor r12d, r12d
41d703: jmp 0x41d400
41d708: nop dword ptr [rax + rax]
41d710: test al, al
41d712: je 0x41d770
41d714: cmp al, 0x2b
41d716: jne 0x41d4a1
41d71c: and r8d, 0x1000
41d723: mov edx, 2
41d728: jmp 0x41d4a4
41d72d: nop dword ptr [rax]
41d730: test al, al
41d732: je 0x41d7a0
41d734: cmp al, 0x2b
41d736: jne 0x41d4d3
41d73c: and r8d, 0x1000
41d743: mov edx, 2
41d748: jmp 0x41d4d6
41d74d: nop dword ptr [rax]
41d750: test al, al
41d752: je 0x41d770
41d754: cmp al, 0x2b
41d756: jne 0x41d505
41d75c: and r8d, 0x1000
41d763: mov edx, 2
41d768: jmp 0x41d508
41d76d: nop dword ptr [rax]
41d770: mov rbx, rdi
41d773: jmp 0x41d58b
41d778: nop dword ptr [rax + rax]
41d780: test al, al
41d782: je 0x41d7a0
41d784: cmp al, 0x2b
41d786: jne 0x41d537
41d78c: and r8d, 0x1000
41d793: mov edx, 2
41d798: jmp 0x41d53a
41d79d: nop dword ptr [rax]
41d7a0: mov rbx, r10
41d7a3: jmp 0x41d58b
41d7a8: or cl, 0x80
41d7ab: jmp 0x41d472
41d7b0: or dword ptr [rbp + 0x74], 1
41d7b4: mov rdi, rbx
41d7b7: jmp 0x41d472
41d7bc: or dword ptr [rbp + 0x74], 0x40
41d7c0: or ecx, 0x80000
41d7c6: mov rdi, rbx
41d7c9: jmp 0x41d472
41d7ce: or dword ptr [rbp + 0x74], 2
41d7d2: mov rdi, rbx
41d7d5: jmp 0x41d472
41d7da: or cl, 0x80
41d7dd: jmp 0x41d4a4
41d7e2: or dword ptr [rbp + 0x74], 1
41d7e6: mov r10, rdi
41d7e9: jmp 0x41d4a4
41d7ee: or dword ptr [rbp + 0x74], 0x40
41d7f2: or ecx, 0x80000
41d7f8: mov r10, rdi
41d7fb: jmp 0x41d4a4
41d800: or dword ptr [rbp + 0x74], 2
41d804: mov r10, rdi
41d807: jmp 0x41d4a4
41d80c: or cl, 0x80
41d80f: jmp 0x41d4d6
41d814: or dword ptr [rbp + 0x74], 1
41d818: mov rdi, r10
41d81b: jmp 0x41d4d6
41d820: or dword ptr [rbp + 0x74], 0x40
41d824: or ecx, 0x80000
41d82a: mov rdi, r10
41d82d: jmp 0x41d4d6
41d832: or dword ptr [rbp + 0x74], 2
41d836: mov rdi, r10
41d839: jmp 0x41d4d6
41d83e: nop 
41d840: cmp r9d, 1
41d844: jg 0x41d872
41d846: mov r14d, 2
41d84c: mov eax, 1
41d851: mov esi, 0x2f
41d856: sub r14d, ecx
41d859: add r14, 1
41d85d: cmp ecx, 2
41d860: cmovg r14, rax
41d864: mov rdx, r14
41d867: call 0x401110
41d86c: mov rdi, rax
41d86f: add rdi, r14
41d872: mov byte ptr [rdi], 0
41d875: cmp byte ptr [r13 + 2], 0
41d87a: jne 0x41d89e
41d87c: mov rcx, qword ptr [rip + 0xa25b5]
41d883: xor eax, eax
41d885: nop dword ptr [rax]
41d888: movsx rdx, byte ptr [rbx + rax + 5]
41d88e: mov edx, dword ptr [rcx + rdx*4]
41d891: mov byte ptr [r13 + rax], dl
41d896: add rax, 1
41d89a: test dl, dl
41d89c: jne 0x41d888
41d89e: mov rdi, rsp
41d8a1: mov rsi, r13
41d8a4: call 0x44fb90
41d8a9: test eax, eax
41d8ab: jne 0x41da35
41d8b1: mov rdi, r13
41d8b4: call 0x426a00
41d8b9: cmp qword ptr [rsp + 8], 1
41d8bf: jne 0x41da89
41d8c5: cmp qword ptr [rsp + 0x18], 1
41d8cb: jne 0x41da6a
41d8d1: mov rax, qword ptr [rbp + 0xa0]
41d8d8: mov rcx, qword ptr [rsp + 0x10]
41d8dd: mov rdx, qword ptr [rax + 8]
41d8e1: mov qword ptr [rax + 0x58], 0
41d8e9: mov qword ptr [rax], rdx
41d8ec: mov rdx, qword ptr [rax + 0x18]
41d8f0: mov qword ptr [rax + 0x20], rdx
41d8f4: mov rax, qword ptr [rbp + 0xa0]
41d8fb: mov qword ptr [rax + 0x60], 0
41d903: mov rax, qword ptr [rbp + 0xa0]
41d90a: mov rsi, qword ptr [r12 + 0xa0]
41d912: lea rdx, [rax + 0x68]
41d916: mov qword ptr [rbp + 0x98], rdx
41d91d: mov rdx, qword ptr [rsp]
41d921: mov qword ptr [rax + 0x80], 1
41d92c: mov qword ptr [rax + 0x68], rdx
41d930: lea rdx, [rsi + 0x58]
41d934: mov dword ptr [rax + 0x88], 1
41d93e: mov qword ptr [rax + 0x90], rdx
41d945: mov qword ptr [rax + 0xa0], rcx
41d94c: mov qword ptr [rax + 0xb8], 9
41d957: mov dword ptr [rax + 0xc0], 1
41d961: mov qword ptr [rax + 0xc8], rdx
41d968: mov rax, qword ptr [rax + 0xe0]
41d96f: mov qword ptr [rbp + 0xd8], rax
41d976: mov dword ptr [r12 + 0xc0], 1
41d982: jmp 0x41d400
41d987: nop word ptr [rax + rax]
41d990: mov r8d, 8
41d996: xor edx, edx
41d998: xor ecx, ecx
41d99a: jmp 0x41d440
41d99f: or cl, 0x80
41d9a2: jmp 0x41d508
41d9a7: or dword ptr [rbp + 0x74], 2
41d9ab: mov r10, rdi
41d9ae: jmp 0x41d508
41d9b3: or dword ptr [rbp + 0x74], 0x40
41d9b7: or ecx, 0x80000
41d9bd: mov r10, rdi
41d9c0: jmp 0x41d508
41d9c5: or dword ptr [rbp + 0x74], 1
41d9c9: mov r10, rdi
41d9cc: jmp 0x41d508
41d9d1: or cl, 0x80
41d9d4: jmp 0x41d53a
41d9d9: or dword ptr [rbp + 0x74], 2
41d9dd: mov rdi, r10
41d9e0: jmp 0x41d53a
41d9e5: or dword ptr [rbp + 0x74], 0x40
41d9e9: or ecx, 0x80000
41d9ef: mov rdi, r10
41d9f2: jmp 0x41d53a
41d9f7: or dword ptr [rbp + 0x74], 1
41d9fb: mov rdi, r10
41d9fe: jmp 0x41d53a
41da03: or cl, 0x80
41da06: jmp 0x41d588
41da0b: or dword ptr [rbp + 0x74], 2
41da0f: mov r11, rdi
41da12: jmp 0x41d588
41da17: or dword ptr [rbp + 0x74], 0x40
41da1b: or ecx, 0x80000
41da21: mov r11, rdi
41da24: jmp 0x41d588
41da29: or dword ptr [rbp + 0x74], 1
41da2d: mov r11, rdi
41da30: jmp 0x41d588
41da35: mov rdi, rbp
41da38: call 0x41d240
41da3d: mov rdi, r13
41da40: call 0x426a00
41da45: mov rax, 0xffffffffffffffc0
41da4c: mov dword ptr fs:[rax], 0x16
41da53: jmp 0x41d700
41da58: mov rdi, r13
41da5b: mov ecx, 1
41da60: jmp 0x41d846
41da65: call 0x4547a0
41da6a: lea rcx, [rip + 0x785bf]
41da71: mov edx, 0x143
41da76: lea rsi, [rip + 0x782b5]
41da7d: lea rdi, [rip + 0x78310]
41da84: call 0x4032a0
41da89: lea rcx, [rip + 0x785a0]
41da90: mov edx, 0x142
41da95: lea rsi, [rip + 0x78296]
41da9c: lea rdi, [rip + 0x782db]
41daa3: call 0x4032a0
41daa8: nop dword ptr [rax + rax]
41dab0: endbr64 
41dab4: push rbp
41dab5: mov rbp, rdi
41dab8: push rbx
41dab9: sub rsp, 8
41dabd: cmp dword ptr [rdi + 0x70], -1
41dac1: je 0x41db1a
41dac3: mov eax, dword ptr [rdi + 0xc0]
41dac9: test eax, eax
41dacb: jle 0x41db30
41dacd: mov rax, qword ptr [rdi + 0xa0]
41dad4: mov rsi, qword ptr [rax + 0x18]
41dad8: mov rdx, qword ptr [rax + 0x20]
41dadc: sub rdx, rsi
41dadf: sar rdx, 2
41dae3: call 0x419d50
41dae8: test byte ptr [rbp], 0x40
41daec: jne 0x41db1a
41daee: mov rbx, qword ptr [rbp + 0xd8]
41daf5: mov rdx, 0x4c1b60
41dafc: mov rax, 0x4c2208
41db03: mov rcx, rbx
41db06: sub rax, rdx
41db09: sub rcx, rdx
41db0c: cmp rax, rcx
41db0f: jbe 0x41db48
41db11: mov rdi, rbp
41db14: call qword ptr [rbx + 0x88]
41db1a: add rsp, 8
41db1e: mov rdi, rbp
41db21: xor esi, esi
41db23: pop rbx
41db24: pop rbp
41db25: jmp 0x41f7f0
41db2a: nop word ptr [rax + rax]
41db30: mov rsi, qword ptr [rdi + 0x20]
41db34: mov rdx, qword ptr [rdi + 0x28]
41db38: sub rdx, rsi
41db3b: call 0x41d0c0
41db40: jmp 0x41dae8
41db42: nop word ptr [rax + rax]
41db48: call 0x41b240
41db4d: jmp 0x41db11
41db4f: nop 
41db50: endbr64 
41db54: push r12
41db56: push rbp
41db57: mov rbp, rdi
41db5a: push rbx
41db5b: mov eax, dword ptr [rdi]
41db5d: test al, 8
41db5f: jne 0x41dd60
41db65: mov ebx, esi
41db67: mov rsi, qword ptr [rdi + 0x20]
41db6b: test ah, 8
41db6e: je 0x41dbc0
41db70: test rsi, rsi
41db73: je 0x41dcf8
41db79: mov rdx, qword ptr [rdi + 0x28]
41db7d: cmp ebx, -1
41db80: je 0x41dc3d
41db86: cmp qword ptr [rbp + 0x40], rdx
41db8a: je 0x41dc80
41db90: lea rax, [rdx + 1]
41db94: mov qword ptr [rbp + 0x28], rax
41db98: mov byte ptr [rdx], bl
41db9a: mov eax, dword ptr [rbp]
41db9d: test al, 2
41db9f: jne 0x41dc50
41dba5: test ah, 2
41dba8: je 0x41dbb3
41dbaa: cmp ebx, 0xa
41dbad: je 0x41dc50
41dbb3: movzx eax, bl
41dbb6: pop rbx
41dbb7: pop rbp
41dbb8: pop r12
41dbba: ret 
41dbbb: nop dword ptr [rax + rax]
41dbc0: test rsi, rsi
41dbc3: je 0x41dcf8
41dbc9: mov rdx, qword ptr [rdi + 8]
41dbcd: test ah, 1
41dbd0: jne 0x41dd20
41dbd6: mov rcx, qword ptr [rbp + 0x40]
41dbda: cmp rcx, rdx
41dbdd: je 0x41dcc0
41dbe3: movq xmm0, qword ptr [rbp + 0x10]
41dbe8: movq xmm2, rcx
41dbed: movq xmm1, rdx
41dbf2: mov ecx, eax
41dbf4: movq qword ptr [rbp + 8], xmm0
41dbf9: or ch, 8
41dbfc: punpcklqdq xmm0, xmm1
41dc00: mov rsi, rdx
41dc03: mov dword ptr [rbp], ecx
41dc06: mov ecx, dword ptr [rbp + 0xc0]
41dc0c: movups xmmword ptr [rbp + 0x18], xmm0
41dc10: movq xmm0, rdx
41dc15: punpcklqdq xmm0, xmm2
41dc19: movups xmmword ptr [rbp + 0x28], xmm0
41dc1d: test ecx, ecx
41dc1f: jg 0x41db7d
41dc25: test eax, 0x202
41dc2a: je 0x41db7d
41dc30: mov qword ptr [rbp + 0x30], rdx
41dc34: cmp ebx, -1
41dc37: jne 0x41db86
41dc3d: pop rbx
41dc3e: mov rdi, rbp
41dc41: sub rdx, rsi
41dc44: pop rbp
41dc45: pop r12
41dc47: jmp 0x41d0c0
41dc4c: nop dword ptr [rax]
41dc50: mov rsi, qword ptr [rbp + 0x20]
41dc54: mov rdx, qword ptr [rbp + 0x28]
41dc58: mov rdi, rbp
41dc5b: sub rdx, rsi
41dc5e: call 0x41d0c0
41dc63: cmp eax, -1
41dc66: jne 0x41dbb3
41dc6c: mov eax, 0xffffffff
41dc71: jmp 0x41dbb6
41dc76: nop word ptr cs:[rax + rax]
41dc80: mov eax, dword ptr [rbp + 0xc0]
41dc86: test eax, eax
41dc88: jle 0x41dce0
41dc8a: mov rax, qword ptr [rbp + 0xa0]
41dc91: mov rdi, rbp
41dc94: mov rsi, qword ptr [rax + 0x18]
41dc98: mov rdx, qword ptr [rax + 0x20]
41dc9c: sub rdx, rsi
41dc9f: sar rdx, 2
41dca3: call 0x419d50
41dca8: cmp eax, -1
41dcab: sete al
41dcae: test al, al
41dcb0: jne 0x41dc6c
41dcb2: mov rdx, qword ptr [rbp + 0x28]
41dcb6: jmp 0x41db90
41dcbb: nop dword ptr [rax + rax]
41dcc0: mov rdx, qword ptr [rbp + 0x38]
41dcc4: movq xmm0, rdx
41dcc9: punpcklqdq xmm0, xmm0
41dccd: movups xmmword ptr [rbp + 8], xmm0
41dcd1: movq xmm0, rdx
41dcd6: jmp 0x41dbe8
41dcdb: nop dword ptr [rax + rax]
41dce0: sub rdx, rsi
41dce3: mov rdi, rbp
41dce6: call 0x41d0c0
41dceb: cmp eax, -1
41dcee: sete al
41dcf1: jmp 0x41dcae
41dcf3: nop dword ptr [rax + rax]
41dcf8: mov rdi, rbp
41dcfb: call 0x41ed20
41dd00: mov rdx, qword ptr [rbp + 0x38]
41dd04: mov eax, dword ptr [rbp]
41dd07: mov qword ptr [rbp + 0x18], rdx
41dd0b: mov qword ptr [rbp + 8], rdx
41dd0f: mov qword ptr [rbp + 0x10], rdx
41dd13: jmp 0x41dbcd
41dd18: nop dword ptr [rax + rax]
41dd20: mov r12, qword ptr [rbp + 0x10]
41dd24: mov rdi, rbp
41dd27: sub r12, rdx
41dd2a: call 0x41e850
41dd2f: mov rdx, qword ptr [rbp + 0x18]
41dd33: mov rsi, r12
41dd36: neg rsi
41dd39: mov rcx, rdx
41dd3c: sub rcx, qword ptr [rbp + 0x38]
41dd40: mov rax, rcx
41dd43: neg rax
41dd46: cmp rcx, r12
41dd49: cmova rax, rsi
41dd4d: add rdx, rax
41dd50: mov eax, dword ptr [rbp]
41dd53: mov qword ptr [rbp + 0x18], rdx
41dd57: jmp 0x41dbd6
41dd5c: nop dword ptr [rax]
41dd60: or eax, 0x20
41dd63: mov dword ptr [rdi], eax
41dd65: mov rax, 0xffffffffffffffc0
41dd6c: mov dword ptr fs:[rax], 9
41dd73: mov eax, 0xffffffff
41dd78: jmp 0x41dbb6
41dd7d: nop dword ptr [rax]
41dd80: endbr64 
41dd84: push rbp
41dd85: push rbx
41dd86: mov rbx, rdi
41dd89: sub rsp, 0x18
41dd8d: mov rdx, qword ptr [rdi + 0x28]
41dd91: mov rsi, qword ptr [rdi + 0x20]
41dd95: cmp rdx, rsi
41dd98: jbe 0x41ddd0
41dd9a: mov eax, dword ptr [rdi + 0xc0]
41dda0: test eax, eax
41dda2: jle 0x41de30
41dda8: mov rax, qword ptr [rdi + 0xa0]
41ddaf: mov rsi, qword ptr [rax + 0x18]
41ddb3: mov rdx, qword ptr [rax + 0x20]
41ddb7: sub rdx, rsi
41ddba: sar rdx, 2
41ddbe: call 0x419d50
41ddc3: test eax, eax
41ddc5: setne al
41ddc8: test al, al
41ddca: jne 0x41de4d
41ddd0: mov rsi, qword ptr [rbx + 8]
41ddd4: sub rsi, qword ptr [rbx + 0x10]
41ddd8: je 0x41de19
41ddda: mov rbp, qword ptr [rbx + 0xd8]
41dde1: mov rdx, 0x4c1b60
41dde8: mov rax, 0x4c2208
41ddef: mov rcx, rbp
41ddf2: sub rax, rdx
41ddf5: sub rcx, rdx
41ddf8: cmp rax, rcx
41ddfb: jbe 0x41de58
41ddfd: mov edx, 1
41de02: mov rdi, rbx
41de05: call qword ptr [rbp + 0x80]
41de0b: cmp rax, -1
41de0f: je 0x41de40
41de11: mov rax, qword ptr [rbx + 8]
41de15: mov qword ptr [rbx + 0x10], rax
41de19: mov qword ptr [rbx + 0x90], 0xffffffffffffffff
41de24: xor eax, eax
41de26: add rsp, 0x18
41de2a: pop rbx
41de2b: pop rbp
41de2c: ret 
41de2d: nop dword ptr [rax]
41de30: sub rdx, rsi
41de33: call 0x41d0c0
41de38: test eax, eax
41de3a: setne al
41de3d: jmp 0x41ddc8
41de3f: nop 
41de40: mov rax, 0xffffffffffffffc0
41de47: cmp dword ptr fs:[rax], 0x1d
41de4b: je 0x41de19
41de4d: mov eax, 0xffffffff
41de52: jmp 0x41de26
41de54: nop dword ptr [rax]
41de58: mov qword ptr [rsp + 8], rsi
41de5d: call 0x41b240
41de62: mov rsi, qword ptr [rsp + 8]
41de67: jmp 0x41ddfd
41de69: nop dword ptr [rax]
41de70: push r15
41de72: push r14
41de74: push r13
41de76: mov r13, rsi
41de79: push r12
41de7b: mov r12, rsi
41de7e: push rbp
41de7f: mov rbp, rdi
41de82: push rbx
41de83: sub rsp, 0x28
41de87: mov r8, qword ptr [rdi + 0x18]
41de8b: mov rsi, qword ptr [rdi + 0x58]
41de8f: mov rax, qword ptr [rdi + 0x60]
41de93: mov r15, qword ptr [rdi + 0x48]
41de97: sub r13, r8
41de9a: mov r14, rsi
41de9d: sub r14, r15
41dea0: mov rbx, r13
41dea3: mov rdx, rax
41dea6: test rax, rax
41dea9: je 0x41e030
41deaf: nop 
41deb0: movsxd rcx, dword ptr [rdx + 0x10]
41deb4: mov rdx, qword ptr [rdx]
41deb7: cmp rbx, rcx
41deba: cmovg rbx, rcx
41debe: test rdx, rdx
41dec1: jne 0x41deb0
41dec3: mov rdx, r13
41dec6: sub rdx, rbx
41dec9: cmp rdx, r14
41decc: ja 0x41df10
41dece: sub r14, rdx
41ded1: lea rdi, [r15 + r14]
41ded5: test rbx, rbx
41ded8: js 0x41dfa0
41dede: test rdx, rdx
41dee1: jne 0x41e020
41dee7: mov qword ptr [rbp + 0x50], rdi
41deeb: mov edx, r13d
41deee: nop 
41def0: sub dword ptr [rax + 0x10], edx
41def3: mov rax, qword ptr [rax]
41def6: test rax, rax
41def9: jne 0x41def0
41defb: xor eax, eax
41defd: add rsp, 0x28
41df01: pop rbx
41df02: pop rbp
41df03: pop r12
41df05: pop r13
41df07: pop r14
41df09: pop r15
41df0b: ret 
41df0c: nop dword ptr [rax]
41df10: lea rax, [rdx + 0x64]
41df14: mov qword ptr [rsp + 0x18], rsi
41df19: mov rdi, rax
41df1c: mov qword ptr [rsp + 0x10], r8
41df21: mov qword ptr [rsp + 8], rdx
41df26: mov qword ptr [rsp], rax
41df2a: call 0x426410
41df2f: mov r14, rax
41df32: test rax, rax
41df35: je 0x41e042
41df3b: test rbx, rbx
41df3e: mov rdx, qword ptr [rsp + 8]
41df43: mov r8, qword ptr [rsp + 0x10]
41df48: lea rcx, [rax + 0x64]
41df4c: js 0x41dfe0
41df52: mov rdi, rcx
41df55: lea rsi, [r8 + rbx]
41df59: call 0x401060
41df5e: mov rcx, rax
41df61: mov rdi, r15
41df64: mov qword ptr [rsp + 8], rcx
41df69: call 0x426a00
41df6e: mov qword ptr [rbp + 0x48], r14
41df72: add r14, qword ptr [rsp]
41df76: sub r12, qword ptr [rbp + 0x18]
41df7a: mov rax, qword ptr [rbp + 0x60]
41df7e: mov qword ptr [rbp + 0x58], r14
41df82: mov rcx, qword ptr [rsp + 8]
41df87: mov r13, r12
41df8a: mov qword ptr [rbp + 0x50], rcx
41df8e: test rax, rax
41df91: jne 0x41deeb
41df97: jmp 0x41defb
41df9c: mov rdi, rsi
41df9f: nop 
41dfa0: mov rdx, rbx
41dfa3: add rsi, rbx
41dfa6: neg rdx
41dfa9: call 0x401040
41dfae: mov rsi, qword ptr [rbp + 0x18]
41dfb2: mov rdi, r14
41dfb5: mov rdx, r12
41dfb8: sub rdi, rbx
41dfbb: add rdi, qword ptr [rbp + 0x48]
41dfbf: sub rdx, rsi
41dfc2: call 0x401060
41dfc7: mov rcx, qword ptr [rbp + 0x48]
41dfcb: sub r12, qword ptr [rbp + 0x18]
41dfcf: mov rax, qword ptr [rbp + 0x60]
41dfd3: mov r13, r12
41dfd6: add rcx, r14
41dfd9: jmp 0x41df8a
41dfdb: nop dword ptr [rax + rax]
41dfe0: mov rsi, qword ptr [rsp + 0x18]
41dfe5: mov rdx, rbx
41dfe8: mov rdi, rcx
41dfeb: mov qword ptr [rsp + 8], rcx
41dff0: neg rdx
41dff3: add rsi, rbx
41dff6: call 0x401150
41dffb: mov r8, qword ptr [rsp + 0x10]
41e000: mov rdx, r13
41e003: mov rdi, rax
41e006: mov rsi, r8
41e009: call 0x401060
41e00e: mov rcx, qword ptr [rsp + 8]
41e013: jmp 0x41df61
41e018: nop dword ptr [rax + rax]
41e020: lea rsi, [r8 + rbx]
41e024: jmp 0x41dfc2
41e026: nop word ptr cs:[rax + rax]
41e030: test r13, r13
41e033: js 0x41df9c
41e039: mov qword ptr [rdi + 0x50], rsi
41e03d: jmp 0x41defb
41e042: or eax, 0xffffffff
41e045: jmp 0x41defd
41e04a: nop word ptr [rax + rax]
41e050: endbr64 
41e054: mov rax, qword ptr [rip + 0xa4bc5]
41e05b: test rax, rax
41e05e: je 0x41e068
41e060: test dword ptr [rax], 0x8000
41e066: je 0x41e0d0
41e068: mov eax, dword ptr [rip + 0xa4bc6]
41e06e: sub eax, 1
41e071: mov dword ptr [rip + 0xa4bbd], eax
41e077: jne 0x41e0c6
41e079: mov qword ptr [rip + 0xa4bb4], 0
41e084: mov edx, dword ptr fs:[0x18]
41e08c: test edx, edx
41e08e: jne 0x41e0a0
41e090: sub dword ptr [rip + 0xa4b99], 1
41e097: ret 
41e098: nop dword ptr [rax + rax]
41e0a0: xchg dword ptr [rip + 0xa4b8a], eax
41e0a6: cmp eax, 1
41e0a9: jle 0x41e0c6
41e0ab: xor r10d, r10d
41e0ae: mov edx, 1
41e0b3: mov esi, 0x81
41e0b8: mov eax, 0xca
41e0bd: lea rdi, [rip + 0xa4b6c]
41e0c4: syscall 
41e0c6: ret 
41e0c7: nop word ptr [rax + rax]
41e0d0: mov rdi, qword ptr [rax + 0x88]
41e0d7: mov eax, dword ptr [rdi + 4]
41e0da: sub eax, 1
41e0dd: mov dword ptr [rdi + 4], eax
41e0e0: jne 0x41e068
41e0e2: mov qword ptr [rdi + 8], 0
41e0ea: mov edx, dword ptr fs:[0x18]
41e0f2: test edx, edx
41e0f4: jne 0x41e100
41e0f6: sub dword ptr [rdi], 1
41e0f9: jmp 0x41e068
41e0fe: nop 
41e100: xchg dword ptr [rdi], eax
41e102: cmp eax, 1
41e105: jle 0x41e068
41e10b: xor r10d, r10d
41e10e: mov edx, 1
41e113: mov esi, 0x81
41e118: mov eax, 0xca
41e11d: syscall 
41e11f: jmp 0x41e068
41e124: nop word ptr cs:[rax + rax]
41e12f: nop 
41e130: push r12
41e132: push rbp
41e133: push rbx
41e134: mov rbx, rdi
41e137: sub rsp, 0x30
41e13b: mov rbp, 0
41e142: mov rax, qword ptr fs:[0x28]
41e14b: mov qword ptr [rsp + 0x28], rax
41e150: xor eax, eax
41e152: test rbp, rbp
41e155: je 0x41e358
41e15b: mov rdi, rsp
41e15e: xor edx, edx
41e160: lea rsi, [rip - 0x117]
41e167: call 0
41e16c: mov r12, qword ptr fs:[0x10]
41e175: cmp r12, qword ptr [rip + 0xa4abc]
41e17c: je 0x41e1a1
41e17e: mov eax, dword ptr fs:[0x18]
41e186: test eax, eax
41e188: jne 0x41e3c0
41e18e: mov edx, 1
41e193: cmpxchg dword ptr [rip + 0xa4a96], edx
41e19a: mov qword ptr [rip + 0xa4a97], r12
41e1a1: mov edx, dword ptr [rip + 0xa4a8d]
41e1a7: mov esi, dword ptr [rbx]
41e1a9: mov qword ptr [rip + 0xa4a70], rbx
41e1b0: add edx, 1
41e1b3: mov r8d, esi
41e1b6: mov dword ptr [rip + 0xa4a78], edx
41e1bc: and r8d, 0x8000
41e1c3: jne 0x41e2e8
41e1c9: mov rdi, qword ptr [rbx + 0x88]
41e1d0: mov r12, qword ptr fs:[0x10]
41e1d9: cmp r12, qword ptr [rdi + 8]
41e1dd: je 0x41e398
41e1e3: mov eax, dword ptr fs:[0x18]
41e1eb: mov edx, 1
41e1f0: test eax, eax
41e1f2: jne 0x41e41f
41e1f8: cmpxchg dword ptr [rdi], edx
41e1fb: mov esi, dword ptr [rbx]
41e1fd: mov rdi, qword ptr [rbx + 0x88]
41e204: mov rcx, qword ptr [rip + 0xa1f15]
41e20b: mov r8d, esi
41e20e: add dword ptr [rdi + 4], 1
41e212: mov qword ptr [rdi + 8], r12
41e216: and r8d, 0x8000
41e21d: test rcx, rcx
41e220: je 0x41e236
41e222: mov rdx, qword ptr [rcx + 0x68]
41e226: cmp rbx, rcx
41e229: jne 0x41e314
41e22f: mov qword ptr [rip + 0xa1eea], rdx
41e236: and sil, 0x7f
41e23a: mov dword ptr [rbx], esi
41e23c: test r8d, r8d
41e23f: jne 0x41e348
41e245: mov rdi, qword ptr [rbx + 0x88]
41e24c: mov eax, dword ptr [rdi + 4]
41e24f: sub eax, 1
41e252: mov dword ptr [rdi + 4], eax
41e255: mov edx, dword ptr [rip + 0xa49d9]
41e25b: jne 0x41e27e
41e25d: mov qword ptr [rdi + 8], 0
41e265: mov edx, dword ptr fs:[0x18]
41e26d: test edx, edx
41e26f: jne 0x41e31e
41e275: sub dword ptr [rdi], 1
41e278: mov edx, dword ptr [rip + 0xa49b6]
41e27e: mov qword ptr [rip + 0xa4997], 0
41e289: sub edx, 1
41e28c: mov dword ptr [rip + 0xa49a2], edx
41e292: jne 0x41e2b6
41e294: mov qword ptr [rip + 0xa4999], 0
41e29f: mov eax, dword ptr fs:[0x18]
41e2a7: test eax, eax
41e2a9: jne 0x41e3f0
41e2af: sub dword ptr [rip + 0xa497a], 1
41e2b6: test rbp, rbp
41e2b9: je 0x41e2c5
41e2bb: mov rdi, rsp
41e2be: xor esi, esi
41e2c0: call 0
41e2c5: mov rax, qword ptr [rsp + 0x28]
41e2ca: xor rax, qword ptr fs:[0x28]
41e2d3: jne 0x41e436
41e2d9: add rsp, 0x30
41e2dd: pop rbx
41e2de: pop rbp
41e2df: pop r12
41e2e1: ret 
41e2e2: nop word ptr [rax + rax]
41e2e8: mov rcx, qword ptr [rip + 0xa1e31]
41e2ef: test rcx, rcx
41e2f2: jne 0x41e222
41e2f8: and sil, 0x7f
41e2fc: mov dword ptr [rbx], esi
41e2fe: jmp 0x41e27e
41e303: nop dword ptr [rax + rax]
41e308: cmp rbx, rdx
41e30b: je 0x41e378
41e30d: mov rcx, rdx
41e310: mov rdx, qword ptr [rdx + 0x68]
41e314: test rdx, rdx
41e317: jne 0x41e308
41e319: jmp 0x41e236
41e31e: xchg dword ptr [rdi], eax
41e320: mov edx, dword ptr [rip + 0xa490e]
41e326: cmp eax, 1
41e329: jle 0x41e27e
41e32f: xor r10d, r10d
41e332: mov edx, 1
41e337: mov esi, 0x81
41e33c: mov eax, 0xca
41e341: syscall 
41e343: nop dword ptr [rax + rax]
41e348: mov edx, dword ptr [rip + 0xa48e6]
41e34e: jmp 0x41e27e
41e353: nop dword ptr [rax + rax]
41e358: mov qword ptr [rsp + 8], 0
41e361: lea rax, [rip - 0x318]
41e368: mov qword ptr [rsp], rax
41e36c: jmp 0x41e16c
41e371: nop dword ptr [rax]
41e378: mov rax, qword ptr [rbx + 0x68]
41e37c: and sil, 0x7f
41e380: add rcx, 0x68
41e384: mov qword ptr [rcx], rax
41e387: mov dword ptr [rbx], esi
41e389: test r8d, r8d
41e38c: je 0x41e245
41e392: jmp 0x41e348
41e394: nop dword ptr [rax]
41e398: mov rcx, qword ptr [rip + 0xa1d81]
41e39f: add dword ptr [rdi + 4], 1
41e3a3: test rcx, rcx
41e3a6: jne 0x41e222
41e3ac: and sil, 0x7f
41e3b0: mov dword ptr [rbx], esi
41e3b2: jmp 0x41e24c
41e3b7: nop word ptr [rax + rax]
41e3c0: xor eax, eax
41e3c2: mov edx, 1
41e3c7: lock cmpxchg dword ptr [rip + 0xa4861], edx
41e3cf: je 0x41e19a
41e3d5: lea rdi, [rip + 0xa4854]
41e3dc: call 0x421250
41e3e1: jmp 0x41e19a
41e3e6: nop word ptr cs:[rax + rax]
41e3f0: xchg dword ptr [rip + 0xa483a], edx
41e3f6: cmp edx, 1
41e3f9: jle 0x41e2b6
41e3ff: xor r10d, r10d
41e402: mov edx, 1
41e407: mov esi, 0x81
41e40c: mov eax, 0xca
41e411: lea rdi, [rip + 0xa4818]
41e418: syscall 
41e41a: jmp 0x41e2b6
41e41f: mov eax, r8d
41e422: lock cmpxchg dword ptr [rdi], edx
41e426: je 0x41e1fb
41e42c: call 0x421250
41e431: jmp 0x41e1fb
41e436: call 0x4547a0
41e43b: nop dword ptr [rax + rax]
41e440: endbr64 
41e444: test byte ptr [rdi], 0x80
41e447: je 0x41e450
41e449: jmp 0x41e130
41e44e: nop 
41e450: ret 
41e451: nop word ptr cs:[rax + rax]
41e45c: nop dword ptr [rax]
41e460: endbr64 
41e464: push r12
41e466: push rbp
41e467: push rbx
41e468: sub rsp, 0x30
41e46c: mov rax, qword ptr fs:[0x28]
41e475: mov qword ptr [rsp + 0x28], rax
41e47a: xor eax, eax
41e47c: mov eax, dword ptr [rdi]
41e47e: test al, 0x80
41e480: jne 0x41e5f9
41e486: mov rbp, 0
41e48d: or al, 0x80
41e48f: mov rbx, rdi
41e492: mov dword ptr [rdi], eax
41e494: test rbp, rbp
41e497: je 0x41e620
41e49d: mov rdi, rsp
41e4a0: xor edx, edx
41e4a2: lea rsi, [rip - 0x459]
41e4a9: call 0
41e4ae: mov r12, qword ptr fs:[0x10]
41e4b7: cmp qword ptr [rip + 0xa477a], r12
41e4be: je 0x41e4e3
41e4c0: mov eax, dword ptr fs:[0x18]
41e4c8: test eax, eax
41e4ca: jne 0x41e660
41e4d0: mov edx, 1
41e4d5: cmpxchg dword ptr [rip + 0xa4754], edx
41e4dc: mov qword ptr [rip + 0xa4755], r12
41e4e3: mov edx, dword ptr [rip + 0xa474b]
41e4e9: mov ecx, dword ptr [rbx]
41e4eb: mov qword ptr [rip + 0xa472e], rbx
41e4f2: add edx, 1
41e4f5: mov dword ptr [rip + 0xa4739], edx
41e4fb: and ecx, 0x8000
41e501: jne 0x41e5a0
41e507: mov rdi, qword ptr [rbx + 0x88]
41e50e: mov r12, qword ptr fs:[0x10]
41e517: cmp qword ptr [rdi + 8], r12
41e51b: je 0x41e640
41e521: mov eax, dword ptr fs:[0x18]
41e529: mov edx, 1
41e52e: test eax, eax
41e530: jne 0x41e6c0
41e536: cmpxchg dword ptr [rdi], edx
41e539: mov rdi, qword ptr [rbx + 0x88]
41e540: mov eax, dword ptr [rbx]
41e542: mov rdx, qword ptr [rip + 0xa1bd7]
41e549: add dword ptr [rdi + 4], 1
41e54d: mov qword ptr [rdi + 8], r12
41e551: mov qword ptr [rip + 0xa1bc8], rbx
41e558: mov qword ptr [rbx + 0x68], rdx
41e55c: test ah, 0x80
41e55f: jne 0x41e705
41e565: mov eax, dword ptr [rdi + 4]
41e568: sub eax, 1
41e56b: mov dword ptr [rdi + 4], eax
41e56e: mov edx, dword ptr [rip + 0xa46c0]
41e574: jne 0x41e5b2
41e576: mov qword ptr [rdi + 8], 0
41e57e: mov edx, dword ptr fs:[0x18]
41e586: test edx, edx
41e588: jne 0x41e6e0
41e58e: sub dword ptr [rdi], 1
41e591: mov edx, dword ptr [rip + 0xa469d]
41e597: jmp 0x41e5b2
41e599: nop dword ptr [rax]
41e5a0: mov rax, qword ptr [rip + 0xa1b79]
41e5a7: mov qword ptr [rip + 0xa1b72], rbx
41e5ae: mov qword ptr [rbx + 0x68], rax
41e5b2: mov qword ptr [rip + 0xa4663], 0
41e5bd: sub edx, 1
41e5c0: mov dword ptr [rip + 0xa466e], edx
41e5c6: jne 0x41e5ea
41e5c8: mov qword ptr [rip + 0xa4665], 0
41e5d3: mov eax, dword ptr fs:[0x18]
41e5db: test eax, eax
41e5dd: jne 0x41e690
41e5e3: sub dword ptr [rip + 0xa4646], 1
41e5ea: test rbp, rbp
41e5ed: je 0x41e5f9
41e5ef: mov rdi, rsp
41e5f2: xor esi, esi
41e5f4: call 0
41e5f9: mov rax, qword ptr [rsp + 0x28]
41e5fe: xor rax, qword ptr fs:[0x28]
41e607: jne 0x41e710
41e60d: add rsp, 0x30
41e611: pop rbx
41e612: pop rbp
41e613: pop r12
41e615: ret 
41e616: nop word ptr cs:[rax + rax]
41e620: mov qword ptr [rsp + 8], 0
41e629: lea rax, [rip - 0x5e0]
41e630: mov qword ptr [rsp], rax
41e634: jmp 0x41e4ae
41e639: nop dword ptr [rax]
41e640: mov rax, qword ptr [rip + 0xa1ad9]
41e647: add dword ptr [rdi + 4], 1
41e64b: mov qword ptr [rip + 0xa1ace], rbx
41e652: mov qword ptr [rbx + 0x68], rax
41e656: jmp 0x41e565
41e65b: nop dword ptr [rax + rax]
41e660: xor eax, eax
41e662: mov edx, 1
41e667: lock cmpxchg dword ptr [rip + 0xa45c1], edx
41e66f: je 0x41e4dc
41e675: lea rdi, [rip + 0xa45b4]
41e67c: call 0x421250
41e681: jmp 0x41e4dc
41e686: nop word ptr cs:[rax + rax]
41e690: xchg dword ptr [rip + 0xa459a], edx
41e696: cmp edx, 1
41e699: jle 0x41e5ea
41e69f: xor r10d, r10d
41e6a2: mov edx, 1
41e6a7: mov esi, 0x81
41e6ac: mov eax, 0xca
41e6b1: lea rdi, [rip + 0xa4578]
41e6b8: syscall 
41e6ba: jmp 0x41e5ea
41e6bf: nop 
41e6c0: mov eax, ecx
41e6c2: lock cmpxchg dword ptr [rdi], edx
41e6c6: je 0x41e539
41e6cc: call 0x421250
41e6d1: jmp 0x41e539
41e6d6: nop word ptr cs:[rax + rax]
41e6e0: xchg dword ptr [rdi], eax
41e6e2: mov edx, dword ptr [rip + 0xa454c]
41e6e8: cmp eax, 1
41e6eb: jle 0x41e5b2
41e6f1: xor r10d, r10d
41e6f4: mov edx, 1
41e6f9: mov esi, 0x81
41e6fe: mov eax, 0xca
41e703: syscall 
41e705: mov edx, dword ptr [rip + 0xa4529]
41e70b: jmp 0x41e5b2
41e710: call 0x4547a0
41e715: nop word ptr cs:[rax + rax]
41e720: endbr64 
41e724: mov rdx, qword ptr [rdi + 0x60]
41e728: mov rax, rsi
41e72b: sub rax, qword ptr [rdi + 0x18]
41e72f: test rdx, rdx
41e732: je 0x41e74b
41e734: nop dword ptr [rax]
41e738: movsxd rcx, dword ptr [rdx + 0x10]
41e73c: mov rdx, qword ptr [rdx]
41e73f: cmp rax, rcx
41e742: cmovg rax, rcx
41e746: test rdx, rdx
41e749: jne 0x41e738
41e74b: ret 
41e74c: nop dword ptr [rax]
41e750: endbr64 
41e754: mov rax, qword ptr [rdi + 0x10]
41e758: mov rdx, qword ptr [rdi + 0x58]
41e75c: and dword ptr [rdi], 0xfffffeff
41e762: mov qword ptr [rdi + 0x10], rdx
41e766: mov rdx, qword ptr [rdi + 0x18]
41e76a: mov qword ptr [rdi + 0x58], rax
41e76e: mov rax, qword ptr [rdi + 0x48]
41e772: mov qword ptr [rdi + 0x48], rdx
41e776: mov qword ptr [rdi + 0x18], rax
41e77a: mov qword ptr [rdi + 8], rax
41e77e: ret 
41e77f: nop 
41e780: endbr64 
41e784: mov rax, qword ptr [rdi + 0x10]
41e788: movdqu xmm0, xmmword ptr [rdi + 0x50]
41e78d: mov rdx, qword ptr [rdi + 0x48]
41e791: or dword ptr [rdi], 0x100
41e797: mov qword ptr [rdi + 0x58], rax
41e79b: mov rax, qword ptr [rdi + 0x18]
41e79f: punpckhqdq xmm0, xmm0
41e7a3: mov qword ptr [rdi + 0x18], rdx
41e7a7: mov qword ptr [rdi + 0x48], rax
41e7ab: movups xmmword ptr [rdi + 8], xmm0
41e7af: ret 
41e7b0: endbr64 
41e7b4: push rbp
41e7b5: push rbx
41e7b6: mov rbx, rdi
41e7b9: sub rsp, 8
41e7bd: mov rax, qword ptr [rdi + 0x28]
41e7c1: cmp rax, qword ptr [rdi + 0x20]
41e7c5: jbe 0x41e7fe
41e7c7: mov rbp, qword ptr [rdi + 0xd8]
41e7ce: mov rdx, 0x4c1b60
41e7d5: mov rax, 0x4c2208
41e7dc: mov rsi, rbp
41e7df: sub rax, rdx
41e7e2: sub rsi, rdx
41e7e5: cmp rax, rsi
41e7e8: jbe 0x41e848
41e7ea: mov esi, 0xffffffff
41e7ef: mov rdi, rbx
41e7f2: call qword ptr [rbp + 0x18]
41e7f5: cmp eax, -1
41e7f8: je 0x41e82a
41e7fa: mov rax, qword ptr [rbx + 0x28]
41e7fe: mov edx, dword ptr [rbx]
41e800: test dh, 1
41e803: jne 0x41e838
41e805: mov rcx, qword ptr [rbx + 0x38]
41e809: mov qword ptr [rbx + 0x18], rcx
41e80d: cmp qword ptr [rbx + 0x10], rax
41e811: jae 0x41e817
41e813: mov qword ptr [rbx + 0x10], rax
41e817: and dh, 0xf7
41e81a: mov qword ptr [rbx + 8], rax
41e81e: mov dword ptr [rbx], edx
41e820: mov qword ptr [rbx + 0x30], rax
41e824: mov qword ptr [rbx + 0x20], rax
41e828: xor eax, eax
41e82a: add rsp, 8
41e82e: pop rbx
41e82f: pop rbp
41e830: ret 
41e831: nop dword ptr [rax]
41e838: mov rcx, qword ptr [rbx + 0x50]
41e83c: mov qword ptr [rbx + 0x18], rcx
41e840: jmp 0x41e817
41e842: nop word ptr [rax + rax]
41e848: call 0x41b240
41e84d: jmp 0x41e7ea
41e84f: nop 
41e850: endbr64 
41e854: push rbx
41e855: mov eax, dword ptr [rdi]
41e857: mov rbx, rdi
41e85a: mov rdi, qword ptr [rdi + 0x48]
41e85e: test ah, 1
41e861: je 0x41e883
41e863: and ah, 0xfe
41e866: mov qword ptr [rbx + 8], rdi
41e86a: mov dword ptr [rbx], eax
41e86c: mov rax, qword ptr [rbx + 0x58]
41e870: mov qword ptr [rbx + 0x10], rax
41e874: mov rax, qword ptr [rbx + 0x18]
41e878: mov qword ptr [rbx + 0x18], rdi
41e87c: mov qword ptr [rbx + 0x48], rax
41e880: mov rdi, rax
41e883: call 0x426a00
41e888: pxor xmm0, xmm0
41e88c: mov qword ptr [rbx + 0x58], 0
41e894: movups xmmword ptr [rbx + 0x48], xmm0
41e898: pop rbx
41e899: ret 
41e89a: nop word ptr [rax + rax]
41e8a0: endbr64 
41e8a4: push rbx
41e8a5: sub rsp, 0x10
41e8a9: mov eax, dword ptr [rdi + 0xc0]
41e8af: test eax, eax
41e8b1: jne 0x41e8bd
41e8b3: mov dword ptr [rdi + 0xc0], 0xffffffff
41e8bd: mov rbx, qword ptr [rdi + 0xd8]
41e8c4: mov rdx, 0x4c1b60
41e8cb: mov rax, 0x4c2208
41e8d2: mov rcx, rbx
41e8d5: sub rax, rdx
41e8d8: sub rcx, rdx
41e8db: cmp rax, rcx
41e8de: jbe 0x41e8f0
41e8e0: mov rax, qword ptr [rbx + 0x18]
41e8e4: add rsp, 0x10
41e8e8: pop rbx
41e8e9: jmp rax
41e8eb: nop dword ptr [rax + rax]
41e8f0: mov dword ptr [rsp + 0xc], esi
41e8f4: mov qword ptr [rsp], rdi
41e8f8: call 0x41b240
41e8fd: mov rax, qword ptr [rbx + 0x18]
41e901: mov esi, dword ptr [rsp + 0xc]
41e905: mov rdi, qword ptr [rsp]
41e909: add rsp, 0x10
41e90d: pop rbx
41e90e: jmp rax
41e910: endbr64 
41e914: push rbp
41e915: mov rbp, rdi
41e918: push rbx
41e919: sub rsp, 8
41e91d: mov eax, dword ptr [rdi + 0xc0]
41e923: test eax, eax
41e925: jne 0x41ea00
41e92b: mov dword ptr [rdi + 0xc0], 0xffffffff
41e935: mov eax, dword ptr [rbp]
41e938: test ah, 8
41e93b: jne 0x41ea20
41e941: mov rdx, qword ptr [rbp + 8]
41e945: mov rsi, qword ptr [rbp + 0x10]
41e949: cmp rdx, rsi
41e94c: jb 0x41ea10
41e952: test ah, 1
41e955: je 0x41e989
41e957: and ah, 0xfe
41e95a: mov rdx, qword ptr [rbp + 0x58]
41e95e: mov rcx, qword ptr [rbp + 0x18]
41e962: mov qword ptr [rbp + 0x58], rsi
41e966: mov dword ptr [rbp], eax
41e969: mov rax, qword ptr [rbp + 0x48]
41e96d: mov qword ptr [rbp + 0x10], rdx
41e971: mov rsi, rdx
41e974: mov qword ptr [rbp + 0x18], rax
41e978: mov qword ptr [rbp + 0x48], rcx
41e97c: mov qword ptr [rbp + 8], rax
41e980: cmp rdx, rax
41e983: ja 0x41eab0
41e989: cmp qword ptr [rbp + 0x60], 0
41e98e: je 0x41e9d8
41e990: mov rdi, rbp
41e993: call 0x41de70
41e998: test eax, eax
41e99a: jne 0x41ea09
41e99c: mov rbx, qword ptr [rbp + 0xd8]
41e9a3: mov rdx, 0x4c1b60
41e9aa: mov rax, 0x4c2208
41e9b1: mov rcx, rbx
41e9b4: sub rax, rdx
41e9b7: sub rcx, rdx
41e9ba: cmp rax, rcx
41e9bd: jbe 0x41eac0
41e9c3: mov rax, qword ptr [rbx + 0x20]
41e9c7: add rsp, 8
41e9cb: mov rdi, rbp
41e9ce: pop rbx
41e9cf: pop rbp
41e9d0: jmp rax
41e9d2: nop word ptr [rax + rax]
41e9d8: mov rdi, qword ptr [rbp + 0x48]
41e9dc: test rdi, rdi
41e9df: je 0x41e99c
41e9e1: call 0x426a00
41e9e6: pxor xmm0, xmm0
41e9ea: mov qword ptr [rbp + 0x58], 0
41e9f2: movups xmmword ptr [rbp + 0x48], xmm0
41e9f6: jmp 0x41e99c
41e9f8: nop dword ptr [rax + rax]
41ea00: cmp eax, -1
41ea03: je 0x41e935
41ea09: mov eax, 0xffffffff
41ea0e: jmp 0x41ea13
41ea10: movzx eax, byte ptr [rdx]
41ea13: add rsp, 8
41ea17: pop rbx
41ea18: pop rbp
41ea19: ret 
41ea1a: nop word ptr [rax + rax]
41ea20: mov rdx, qword ptr [rbp + 0x28]
41ea24: cmp rdx, qword ptr [rbp + 0x20]
41ea28: jbe 0x41ea68
41ea2a: mov rbx, qword ptr [rbp + 0xd8]
41ea31: mov rdx, 0x4c1b60
41ea38: mov rax, 0x4c2208
41ea3f: mov rcx, rbx
41ea42: sub rax, rdx
41ea45: sub rcx, rdx
41ea48: cmp rax, rcx
41ea4b: jbe 0x41ead0
41ea51: mov esi, 0xffffffff
41ea56: mov rdi, rbp
41ea59: call qword ptr [rbx + 0x18]
41ea5c: cmp eax, -1
41ea5f: je 0x41ea09
41ea61: mov eax, dword ptr [rbp]
41ea64: mov rdx, qword ptr [rbp + 0x28]
41ea68: mov rsi, qword ptr [rbp + 0x10]
41ea6c: test ah, 1
41ea6f: jne 0x41eaa0
41ea71: mov rcx, qword ptr [rbp + 0x38]
41ea75: mov qword ptr [rbp + 0x18], rcx
41ea79: cmp rdx, rsi
41ea7c: jbe 0x41ea85
41ea7e: mov qword ptr [rbp + 0x10], rdx
41ea82: mov rsi, rdx
41ea85: and ah, 0xf7
41ea88: mov qword ptr [rbp + 8], rdx
41ea8c: mov qword ptr [rbp + 0x30], rdx
41ea90: mov qword ptr [rbp + 0x20], rdx
41ea94: mov dword ptr [rbp], eax
41ea97: jmp 0x41e949
41ea9c: nop dword ptr [rax]
41eaa0: mov rcx, qword ptr [rbp + 0x50]
41eaa4: mov qword ptr [rbp + 0x18], rcx
41eaa8: jmp 0x41ea85
41eaaa: nop word ptr [rax + rax]
41eab0: movzx eax, byte ptr [rax]
41eab3: add rsp, 8
41eab7: pop rbx
41eab8: pop rbp
41eab9: ret 
41eaba: nop word ptr [rax + rax]
41eac0: call 0x41b240
41eac5: jmp 0x41e9c3
41eaca: nop word ptr [rax + rax]
41ead0: call 0x41b240
41ead5: jmp 0x41ea51
41eada: nop word ptr [rax + rax]
41eae0: endbr64 
41eae4: push rbp
41eae5: mov rbp, rdi
41eae8: push rbx
41eae9: sub rsp, 8
41eaed: mov eax, dword ptr [rdi + 0xc0]
41eaf3: test eax, eax
41eaf5: jne 0x41ebd0
41eafb: mov dword ptr [rdi + 0xc0], 0xffffffff
41eb05: mov eax, dword ptr [rbp]
41eb08: test ah, 8
41eb0b: jne 0x41ebf8
41eb11: mov rdx, qword ptr [rbp + 8]
41eb15: mov rsi, qword ptr [rbp + 0x10]
41eb19: cmp rdx, rsi
41eb1c: jb 0x41ebe0
41eb22: test ah, 1
41eb25: je 0x41eb59
41eb27: and ah, 0xfe
41eb2a: mov rdx, qword ptr [rbp + 0x58]
41eb2e: mov rcx, qword ptr [rbp + 0x18]
41eb32: mov qword ptr [rbp + 0x58], rsi
41eb36: mov dword ptr [rbp], eax
41eb39: mov rax, qword ptr [rbp + 0x48]
41eb3d: mov qword ptr [rbp + 0x10], rdx
41eb41: mov qword ptr [rbp + 0x18], rax
41eb45: mov qword ptr [rbp + 0x48], rcx
41eb49: cmp rdx, rax
41eb4c: ja 0x41ec88
41eb52: mov qword ptr [rbp + 8], rax
41eb56: mov rsi, rdx
41eb59: cmp qword ptr [rbp + 0x60], 0
41eb5e: je 0x41eba8
41eb60: mov rdi, rbp
41eb63: call 0x41de70
41eb68: test eax, eax
41eb6a: jne 0x41ebd9
41eb6c: mov rbx, qword ptr [rbp + 0xd8]
41eb73: mov rdx, 0x4c1b60
41eb7a: mov rax, 0x4c2208
41eb81: mov rcx, rbx
41eb84: sub rax, rdx
41eb87: sub rcx, rdx
41eb8a: cmp rax, rcx
41eb8d: jbe 0x41eca0
41eb93: mov rax, qword ptr [rbx + 0x28]
41eb97: add rsp, 8
41eb9b: mov rdi, rbp
41eb9e: pop rbx
41eb9f: pop rbp
41eba0: jmp rax
41eba2: nop word ptr [rax + rax]
41eba8: mov rdi, qword ptr [rbp + 0x48]
41ebac: test rdi, rdi
41ebaf: je 0x41eb6c
41ebb1: call 0x426a00
41ebb6: pxor xmm0, xmm0
41ebba: mov qword ptr [rbp + 0x58], 0
41ebc2: movups xmmword ptr [rbp + 0x48], xmm0
41ebc6: jmp 0x41eb6c
41ebc8: nop dword ptr [rax + rax]
41ebd0: cmp eax, -1
41ebd3: je 0x41eb05
41ebd9: mov eax, 0xffffffff
41ebde: jmp 0x41ebeb
41ebe0: lea rax, [rdx + 1]
41ebe4: mov qword ptr [rbp + 8], rax
41ebe8: movzx eax, byte ptr [rdx]
41ebeb: add rsp, 8
41ebef: pop rbx
41ebf0: pop rbp
41ebf1: ret 
41ebf2: nop word ptr [rax + rax]
41ebf8: mov rdx, qword ptr [rbp + 0x28]
41ebfc: cmp rdx, qword ptr [rbp + 0x20]
41ec00: jbe 0x41ec40
41ec02: mov rbx, qword ptr [rbp + 0xd8]
41ec09: mov rdx, 0x4c1b60
41ec10: mov rax, 0x4c2208
41ec17: mov rcx, rbx
41ec1a: sub rax, rdx
41ec1d: sub rcx, rdx
41ec20: cmp rax, rcx
41ec23: jbe 0x41ecb0
41ec29: mov esi, 0xffffffff
41ec2e: mov rdi, rbp
41ec31: call qword ptr [rbx + 0x18]
41ec34: cmp eax, -1
41ec37: je 0x41ebd9
41ec39: mov eax, dword ptr [rbp]
41ec3c: mov rdx, qword ptr [rbp + 0x28]
41ec40: mov rsi, qword ptr [rbp + 0x10]
41ec44: test ah, 1
41ec47: jne 0x41ec78
41ec49: mov rcx, qword ptr [rbp + 0x38]
41ec4d: mov qword ptr [rbp + 0x18], rcx
41ec51: cmp rdx, rsi
41ec54: jbe 0x41ec5d
41ec56: mov qword ptr [rbp + 0x10], rdx
41ec5a: mov rsi, rdx
41ec5d: and ah, 0xf7
41ec60: mov qword ptr [rbp + 8], rdx
41ec64: mov qword ptr [rbp + 0x30], rdx
41ec68: mov qword ptr [rbp + 0x20], rdx
41ec6c: mov dword ptr [rbp], eax
41ec6f: jmp 0x41eb19
41ec74: nop dword ptr [rax]
41ec78: mov rcx, qword ptr [rbp + 0x50]
41ec7c: mov qword ptr [rbp + 0x18], rcx
41ec80: jmp 0x41ec5d
41ec82: nop word ptr [rax + rax]
41ec88: lea rdx, [rax + 1]
41ec8c: mov qword ptr [rbp + 8], rdx
41ec90: movzx eax, byte ptr [rax]
41ec93: add rsp, 8
41ec97: pop rbx
41ec98: pop rbp
41ec99: ret 
41ec9a: nop word ptr [rax + rax]
41eca0: call 0x41b240
41eca5: jmp 0x41eb93
41ecaa: nop word ptr [rax + rax]
41ecb0: call 0x41b240
41ecb5: jmp 0x41ec29
41ecba: nop word ptr [rax + rax]
41ecc0: endbr64 
41ecc4: push rbp
41ecc5: mov ebp, ecx
41ecc7: push rbx
41ecc8: mov rbx, rdi
41eccb: sub rsp, 0x18
41eccf: mov rdi, qword ptr [rdi + 0x38]
41ecd3: mov eax, dword ptr [rbx]
41ecd5: mov qword ptr [rsp], rsi
41ecd9: mov qword ptr [rsp + 8], rdx
41ecde: test rdi, rdi
41ece1: je 0x41ece7
41ece3: test al, 1
41ece5: je 0x41ed10
41ece7: mov edx, eax
41ece9: movq xmm0, qword ptr [rsp]
41ecee: or eax, 1
41ecf1: and edx, 0xfffffffe
41ecf4: test ebp, ebp
41ecf6: cmovne eax, edx
41ecf9: movhps xmm0, qword ptr [rsp + 8]
41ecfe: movups xmmword ptr [rbx + 0x38], xmm0
41ed02: mov dword ptr [rbx], eax
41ed04: add rsp, 0x18
41ed08: pop rbx
41ed09: pop rbp
41ed0a: ret 
41ed0b: nop dword ptr [rax + rax]
41ed10: call 0x426a00
41ed15: mov eax, dword ptr [rbx]
41ed17: jmp 0x41ece7
41ed19: nop dword ptr [rax]
41ed20: endbr64 
41ed24: cmp qword ptr [rdi + 0x38], 0
41ed29: je 0x41ed30
41ed2b: ret 
41ed2c: nop dword ptr [rax]
41ed30: push r12
41ed32: push rbp
41ed33: push rbx
41ed34: mov eax, dword ptr [rdi]
41ed36: mov rbx, rdi
41ed39: test al, 2
41ed3b: je 0x41ed47
41ed3d: mov edx, dword ptr [rdi + 0xc0]
41ed43: test edx, edx
41ed45: jle 0x41edb0
41ed47: mov rbp, qword ptr [rbx + 0xd8]
41ed4e: mov rdx, 0x4c1b60
41ed55: mov rax, 0x4c2208
41ed5c: mov rcx, rbp
41ed5f: sub rax, rdx
41ed62: sub rcx, rdx
41ed65: cmp rax, rcx
41ed68: jbe 0x41edd0
41ed6a: mov rdi, rbx
41ed6d: call qword ptr [rbp + 0x68]
41ed70: cmp eax, -1
41ed73: jne 0x41eda9
41ed75: mov rdi, qword ptr [rbx + 0x38]
41ed79: mov eax, dword ptr [rbx]
41ed7b: lea rbp, [rbx + 0x84]
41ed82: lea r12, [rbx + 0x83]
41ed89: test rdi, rdi
41ed8c: je 0x41ed92
41ed8e: test al, 1
41ed90: je 0x41edc0
41ed92: or eax, 1
41ed95: movq xmm0, r12
41ed9a: movq xmm1, rbp
41ed9f: mov dword ptr [rbx], eax
41eda1: punpcklqdq xmm0, xmm1
41eda5: movups xmmword ptr [rbx + 0x38], xmm0
41eda9: pop rbx
41edaa: pop rbp
41edab: pop r12
41edad: ret 
41edae: nop 
41edb0: lea rbp, [rdi + 0x84]
41edb7: lea r12, [rdi + 0x83]
41edbe: jmp 0x41ed92
41edc0: call 0x426a00
41edc5: mov eax, dword ptr [rbx]
41edc7: jmp 0x41ed92
41edc9: nop dword ptr [rax]
41edd0: call 0x41b240
41edd5: jmp 0x41ed6a
41edd7: nop word ptr [rax + rax]
41ede0: endbr64 
41ede4: mov eax, 0xffffffff
41ede9: ret 
41edea: nop word ptr [rax + rax]
41edf0: endbr64 
41edf4: push rbp
41edf5: push rbx
41edf6: mov rbx, rdi
41edf9: sub rsp, 8
41edfd: mov rbp, qword ptr [rdi + 0xd8]
41ee04: mov rdx, 0x4c1b60
41ee0b: mov rax, 0x4c2208
41ee12: mov rcx, rbp
41ee15: sub rax, rdx
41ee18: sub rcx, rdx
41ee1b: cmp rax, rcx
41ee1e: jbe 0x41ee48
41ee20: mov rdi, rbx
41ee23: call qword ptr [rbp + 0x20]
41ee26: cmp eax, -1
41ee29: je 0x41ee3a
41ee2b: mov rax, qword ptr [rbx + 8]
41ee2f: lea rdx, [rax + 1]
41ee33: mov qword ptr [rbx + 8], rdx
41ee37: movzx eax, byte ptr [rax]
41ee3a: add rsp, 8
41ee3e: pop rbx
41ee3f: pop rbp
41ee40: ret 
41ee41: nop dword ptr [rax]
41ee48: call 0x41b240
41ee4d: jmp 0x41ee20
41ee4f: nop 
41ee50: endbr64 
41ee54: test rdx, rdx
41ee57: je 0x41efa0
41ee5d: push r15
41ee5f: push r14
41ee61: mov r14, rsi
41ee64: push r13
41ee66: mov r13, rdx
41ee69: push r12
41ee6b: mov r12, rdi
41ee6e: push rbp
41ee6f: mov rbp, rdx
41ee72: push rbx
41ee73: sub rsp, 8
41ee77: jmp 0x41eecf
41ee79: nop dword ptr [rax]
41ee80: test rbx, rbx
41ee83: jne 0x41ef30
41ee89: sub rbp, rbx
41ee8c: test rbp, rbp
41ee8f: je 0x41ef0b
41ee91: mov rbx, qword ptr [r12 + 0xd8]
41ee99: mov rdx, 0x4c1b60
41eea0: mov rax, 0x4c2208
41eea7: mov rcx, rbx
41eeaa: sub rax, rdx
41eead: sub rcx, rdx
41eeb0: cmp rax, rcx
41eeb3: jbe 0x41ef20
41eeb5: movzx esi, byte ptr [r14]
41eeb9: lea r15, [r14 + 1]
41eebd: mov rdi, r12
41eec0: call qword ptr [rbx + 0x18]
41eec3: cmp eax, -1
41eec6: je 0x41ef08
41eec8: sub rbp, 1
41eecc: mov r14, r15
41eecf: mov rdi, qword ptr [r12 + 0x28]
41eed4: mov rbx, qword ptr [r12 + 0x30]
41eed9: cmp rdi, rbx
41eedc: jae 0x41ee8c
41eede: sub rbx, rdi
41eee1: cmp rbp, rbx
41eee4: cmovbe rbx, rbp
41eee8: cmp rbx, 0x14
41eeec: jbe 0x41ee80
41eeee: mov rsi, r14
41eef1: mov rdx, rbx
41eef4: add r14, rbx
41eef7: call 0x401150
41eefc: mov qword ptr [r12 + 0x28], rax
41ef01: jmp 0x41ee89
41ef03: nop dword ptr [rax + rax]
41ef08: sub r13, rbp
41ef0b: add rsp, 8
41ef0f: mov rax, r13
41ef12: pop rbx
41ef13: pop rbp
41ef14: pop r12
41ef16: pop r13
41ef18: pop r14
41ef1a: pop r15
41ef1c: ret 
41ef1d: nop dword ptr [rax]
41ef20: call 0x41b240
41ef25: jmp 0x41eeb5
41ef27: nop word ptr [rax + rax]
41ef30: lea rax, [rdi + 0xf]
41ef34: sub rax, r14
41ef37: cmp rax, 0x1e
41ef3b: jbe 0x41efa8
41ef3d: lea rax, [rbx - 1]
41ef41: cmp rax, 0xe
41ef45: jbe 0x41efa8
41ef47: movdqu xmm0, xmmword ptr [r14]
41ef4c: movups xmmword ptr [rdi], xmm0
41ef4f: cmp rbx, 0x10
41ef53: je 0x41ef8a
41ef55: movzx eax, byte ptr [r14 + 0x10]
41ef5a: mov byte ptr [rdi + 0x10], al
41ef5d: cmp rbx, 0x11
41ef61: je 0x41ef8a
41ef63: movzx eax, byte ptr [r14 + 0x11]
41ef68: mov byte ptr [rdi + 0x11], al
41ef6b: lea rax, [rbx - 0x13]
41ef6f: cmp rbx, 0x12
41ef73: je 0x41ef8a
41ef75: movzx edx, byte ptr [r14 + 0x12]
41ef7a: mov byte ptr [rdi + 0x12], dl
41ef7d: test rax, rax
41ef80: je 0x41ef8a
41ef82: movzx eax, byte ptr [r14 + 0x13]
41ef87: mov byte ptr [rdi + 0x13], al
41ef8a: add rdi, rbx
41ef8d: add r14, rbx
41ef90: mov qword ptr [r12 + 0x28], rdi
41ef95: jmp 0x41ee89
41ef9a: nop word ptr [rax + rax]
41efa0: xor eax, eax
41efa2: ret 
41efa3: nop dword ptr [rax + rax]
41efa8: xor eax, eax
41efaa: nop word ptr [rax + rax]
41efb0: movzx edx, byte ptr [r14 + rax]
41efb5: mov byte ptr [rdi + rax], dl
41efb8: add rax, 1
41efbc: cmp rax, rbx
41efbf: jne 0x41efb0
41efc1: jmp 0x41ef8a
41efc3: nop word ptr cs:[rax + rax]
41efce: nop 
41efd0: endbr64 
41efd4: push rbx
41efd5: sub rsp, 0x20
41efd9: mov rbx, qword ptr [rdi + 0xd8]
41efe0: mov rcx, 0x4c1b60
41efe7: mov rax, 0x4c2208
41efee: mov r8, rbx
41eff1: sub rax, rcx
41eff4: sub r8, rcx
41eff7: cmp rax, r8
41effa: jbe 0x41f010
41effc: mov rax, qword ptr [rbx + 0x40]
41f000: add rsp, 0x20
41f004: pop rbx
41f005: jmp rax
41f007: nop word ptr [rax + rax]
41f010: mov qword ptr [rsp + 0x18], rdx
41f015: mov qword ptr [rsp + 0x10], rsi
41f01a: mov qword ptr [rsp + 8], rdi
41f01f: call 0x41b240
41f024: mov rax, qword ptr [rbx + 0x40]
41f028: mov rdx, qword ptr [rsp + 0x18]
41f02d: mov rsi, qword ptr [rsp + 0x10]
41f032: mov rdi, qword ptr [rsp + 8]
41f037: add rsp, 0x20
41f03b: pop rbx
41f03c: jmp rax
41f03e: nop 
41f040: endbr64 
41f044: push r14
41f046: mov r14, rdx
41f049: push r13
41f04b: mov r13, rdx
41f04e: push r12
41f050: mov r12, rsi
41f053: push rbp
41f054: push rbx
41f055: mov r8, qword ptr [rdi + 8]
41f059: mov rbx, rdi
41f05c: mov rsi, qword ptr [rdi + 0x10]
41f060: cmp rsi, r8
41f063: jbe 0x41f088
41f065: sub rsi, r8
41f068: cmp r14, rsi
41f06b: cmovbe rsi, r14
41f06f: mov rbp, rsi
41f072: cmp rsi, 0x14
41f076: ja 0x41f220
41f07c: test rsi, rsi
41f07f: jne 0x41f260
41f085: sub r14, rbp
41f088: test r14, r14
41f08b: je 0x41f16c
41f091: mov eax, dword ptr [rbx + 0xc0]
41f097: test eax, eax
41f099: jne 0x41f160
41f09f: mov dword ptr [rbx + 0xc0], 0xffffffff
41f0a9: mov eax, dword ptr [rbx]
41f0ab: test ah, 8
41f0ae: jne 0x41f180
41f0b4: mov r8, qword ptr [rbx + 8]
41f0b8: mov rsi, qword ptr [rbx + 0x10]
41f0bc: cmp r8, rsi
41f0bf: jb 0x41f060
41f0c1: test ah, 1
41f0c4: je 0x41f0f7
41f0c6: and ah, 0xfe
41f0c9: mov r8, qword ptr [rbx + 0x48]
41f0cd: mov rdx, qword ptr [rbx + 0x18]
41f0d1: mov dword ptr [rbx], eax
41f0d3: mov rax, qword ptr [rbx + 0x58]
41f0d7: mov qword ptr [rbx + 0x18], r8
41f0db: mov qword ptr [rbx + 0x58], rsi
41f0df: mov rsi, rax
41f0e2: mov qword ptr [rbx + 0x10], rax
41f0e6: mov qword ptr [rbx + 0x48], rdx
41f0ea: mov qword ptr [rbx + 8], r8
41f0ee: cmp rax, r8
41f0f1: ja 0x41f060
41f0f7: cmp qword ptr [rbx + 0x60], 0
41f0fc: je 0x41f1f0
41f102: mov rdi, rbx
41f105: call 0x41de70
41f10a: test eax, eax
41f10c: jne 0x41f169
41f10e: mov rbp, qword ptr [rbx + 0xd8]
41f115: mov rdx, 0x4c1b60
41f11c: mov rax, 0x4c2208
41f123: mov rcx, rbp
41f126: sub rax, rdx
41f129: sub rcx, rdx
41f12c: cmp rax, rcx
41f12f: jbe 0x41f2d8
41f135: mov rdi, rbx
41f138: call qword ptr [rbp + 0x20]
41f13b: cmp eax, -1
41f13e: je 0x41f169
41f140: mov r8, qword ptr [rbx + 8]
41f144: mov rsi, qword ptr [rbx + 0x10]
41f148: cmp rsi, r8
41f14b: jbe 0x41f088
41f151: jmp 0x41f065
41f156: nop word ptr cs:[rax + rax]
41f160: cmp eax, -1
41f163: je 0x41f0a9
41f169: sub r13, r14
41f16c: pop rbx
41f16d: mov rax, r13
41f170: pop rbp
41f171: pop r12
41f173: pop r13
41f175: pop r14
41f177: ret 
41f178: nop dword ptr [rax + rax]
41f180: mov r8, qword ptr [rbx + 0x28]
41f184: cmp r8, qword ptr [rbx + 0x20]
41f188: jbe 0x41f1c7
41f18a: mov rbp, qword ptr [rbx + 0xd8]
41f191: mov rdx, 0x4c1b60
41f198: mov rax, 0x4c2208
41f19f: mov rdi, rbp
41f1a2: sub rax, rdx
41f1a5: sub rdi, rdx
41f1a8: cmp rax, rdi
41f1ab: jbe 0x41f320
41f1b1: mov esi, 0xffffffff
41f1b6: mov rdi, rbx
41f1b9: call qword ptr [rbp + 0x18]
41f1bc: cmp eax, -1
41f1bf: je 0x41f169
41f1c1: mov eax, dword ptr [rbx]
41f1c3: mov r8, qword ptr [rbx + 0x28]
41f1c7: mov rsi, qword ptr [rbx + 0x10]
41f1cb: test ah, 1
41f1ce: je 0x41f240
41f1d0: mov rdx, qword ptr [rbx + 0x50]
41f1d4: mov qword ptr [rbx + 0x18], rdx
41f1d8: and ah, 0xf7
41f1db: mov qword ptr [rbx + 8], r8
41f1df: mov qword ptr [rbx + 0x30], r8
41f1e3: mov qword ptr [rbx + 0x20], r8
41f1e7: mov dword ptr [rbx], eax
41f1e9: jmp 0x41f0bc
41f1ee: nop 
41f1f0: mov rdi, qword ptr [rbx + 0x48]
41f1f4: test rdi, rdi
41f1f7: je 0x41f10e
41f1fd: call 0x426a00
41f202: pxor xmm1, xmm1
41f206: mov qword ptr [rbx + 0x58], 0
41f20e: movups xmmword ptr [rbx + 0x48], xmm1
41f212: jmp 0x41f10e
41f217: nop word ptr [rax + rax]
41f220: mov rdx, rsi
41f223: mov rdi, r12
41f226: mov rsi, r8
41f229: call 0x401150
41f22e: add qword ptr [rbx + 8], rbp
41f232: mov r12, rax
41f235: jmp 0x41f085
41f23a: nop word ptr [rax + rax]
41f240: mov rdx, qword ptr [rbx + 0x38]
41f244: mov qword ptr [rbx + 0x18], rdx
41f248: cmp rsi, r8
41f24b: jae 0x41f1d8
41f24d: mov qword ptr [rbx + 0x10], r8
41f251: mov rsi, r8
41f254: jmp 0x41f1d8
41f259: nop dword ptr [rax]
41f260: lea rdx, [r12 + 0xf]
41f265: lea eax, [rsi - 1]
41f268: sub rdx, r8
41f26b: cmp rdx, 0x1e
41f26f: jbe 0x41f2e8
41f271: cmp eax, 0xe
41f274: jbe 0x41f2e8
41f276: movdqu xmm0, xmmword ptr [r8]
41f27b: movups xmmword ptr [r12], xmm0
41f280: cmp esi, 0x10
41f283: je 0x41f2be
41f285: movzx edx, byte ptr [r8 + 0x10]
41f28a: mov byte ptr [r12 + 0x10], dl
41f28f: cmp esi, 0x11
41f292: je 0x41f2be
41f294: movzx edx, byte ptr [r8 + 0x11]
41f299: mov byte ptr [r12 + 0x11], dl
41f29e: lea edx, [rsi - 0x13]
41f2a1: cmp esi, 0x12
41f2a4: je 0x41f2be
41f2a6: movzx ecx, byte ptr [r8 + 0x12]
41f2ab: mov byte ptr [r12 + 0x12], cl
41f2b0: test edx, edx
41f2b2: je 0x41f2be
41f2b4: movzx edx, byte ptr [r8 + 0x13]
41f2b9: mov byte ptr [r12 + 0x13], dl
41f2be: add rax, 1
41f2c2: add r12, rax
41f2c5: add rax, r8
41f2c8: mov qword ptr [rbx + 8], rax
41f2cc: jmp 0x41f085
41f2d1: nop dword ptr [rax]
41f2d8: call 0x41b240
41f2dd: jmp 0x41f135
41f2e2: nop word ptr [rax + rax]
41f2e8: xor edx, edx
41f2ea: nop word ptr [rax + rax]
41f2f0: movzx ecx, byte ptr [r8 + rdx]
41f2f5: mov byte ptr [r12 + rdx], cl
41f2f9: mov rcx, rdx
41f2fc: add rdx, 1
41f300: cmp rcx, rax
41f303: jne 0x41f2f0
41f305: add rax, 1
41f309: add r12, rax
41f30c: add rax, r8
41f30f: mov qword ptr [rbx + 8], rax
41f313: jmp 0x41f085
41f318: nop dword ptr [rax + rax]
41f320: call 0x41b240
41f325: jmp 0x41f1b1
41f32a: nop word ptr [rax + rax]
41f330: endbr64 
41f334: push r13
41f336: push r12
41f338: mov r12, rdx
41f33b: push rbp
41f33c: mov rbp, rsi
41f33f: push rbx
41f340: mov rbx, rdi
41f343: sub rsp, 8
41f347: mov r13, qword ptr [rdi + 0xd8]
41f34e: mov rdx, 0x4c1b60
41f355: mov rax, 0x4c2208
41f35c: mov rcx, r13
41f35f: sub rax, rdx
41f362: sub rcx, rdx
41f365: cmp rax, rcx
41f368: jbe 0x41f438
41f36e: mov rdi, rbx
41f371: call qword ptr [r13 + 0x60]
41f375: cmp eax, -1
41f378: je 0x41f448
41f37e: mov eax, dword ptr [rbx]
41f380: mov rdi, qword ptr [rbx + 0x38]
41f384: mov edx, eax
41f386: test rbp, rbp
41f389: je 0x41f3e0
41f38b: test r12, r12
41f38e: je 0x41f3e0
41f390: and edx, 0xfffffffd
41f393: add r12, rbp
41f396: mov dword ptr [rbx], edx
41f398: test rdi, rdi
41f39b: je 0x41f3a1
41f39d: test al, 1
41f39f: je 0x41f418
41f3a1: or edx, 1
41f3a4: movq xmm0, rbp
41f3a9: movq xmm2, r12
41f3ae: mov dword ptr [rbx], edx
41f3b0: punpcklqdq xmm0, xmm2
41f3b4: movups xmmword ptr [rbx + 0x38], xmm0
41f3b8: pxor xmm0, xmm0
41f3bc: mov rax, rbx
41f3bf: movups xmmword ptr [rbx + 8], xmm0
41f3c3: movups xmmword ptr [rbx + 0x18], xmm0
41f3c7: movups xmmword ptr [rbx + 0x28], xmm0
41f3cb: add rsp, 8
41f3cf: pop rbx
41f3d0: pop rbp
41f3d1: pop r12
41f3d3: pop r13
41f3d5: ret 
41f3d6: nop word ptr cs:[rax + rax]
41f3e0: or edx, 2
41f3e3: lea rbp, [rbx + 0x84]
41f3ea: lea r12, [rbx + 0x83]
41f3f1: mov dword ptr [rbx], edx
41f3f3: test rdi, rdi
41f3f6: je 0x41f3fc
41f3f8: test al, 1
41f3fa: je 0x41f428
41f3fc: movq xmm0, r12
41f401: movq xmm1, rbp
41f406: or edx, 1
41f409: punpcklqdq xmm0, xmm1
41f40d: mov dword ptr [rbx], edx
41f40f: movups xmmword ptr [rbx + 0x38], xmm0
41f413: jmp 0x41f3b8
41f415: nop dword ptr [rax]
41f418: call 0x426a00
41f41d: mov edx, dword ptr [rbx]
41f41f: jmp 0x41f3a1
41f421: nop dword ptr [rax]
41f428: call 0x426a00
41f42d: mov edx, dword ptr [rbx]
41f42f: jmp 0x41f3fc
41f431: nop dword ptr [rax]
41f438: call 0x41b240
41f43d: jmp 0x41f36e
41f442: nop word ptr [rax + rax]
41f448: xor eax, eax
41f44a: jmp 0x41f3cb
41f44f: nop 
41f450: endbr64 
41f454: push rbx
41f455: mov ecx, edx
41f457: sub rsp, 0x20
41f45b: mov rbx, qword ptr [rdi + 0xd8]
41f462: mov rdx, 0x4c1b60
41f469: mov rax, 0x4c2208
41f470: mov r8, rbx
41f473: sub rax, rdx
41f476: sub r8, rdx
41f479: cmp rax, r8
41f47c: jbe 0x41f490
41f47e: mov rax, qword ptr [rbx + 0x48]
41f482: add rsp, 0x20
41f486: xor edx, edx
41f488: pop rbx
41f489: jmp rax
41f48b: nop dword ptr [rax + rax]
41f490: mov dword ptr [rsp + 0x1c], ecx
41f494: mov qword ptr [rsp + 0x10], rsi
41f499: mov qword ptr [rsp + 8], rdi
41f49e: call 0x41b240
41f4a3: mov rax, qword ptr [rbx + 0x48]
41f4a7: mov ecx, dword ptr [rsp + 0x1c]
41f4ab: xor edx, edx
41f4ad: mov rsi, qword ptr [rsp + 0x10]
41f4b2: mov rdi, qword ptr [rsp + 8]
41f4b7: add rsp, 0x20
41f4bb: pop rbx
41f4bc: jmp rax
41f4be: nop 
41f4c0: endbr64 
41f4c4: push r12
41f4c6: push rbp
41f4c7: mov rbp, rdi
41f4ca: mov edi, 0x2000
41f4cf: push rbx
41f4d0: call 0x426410
41f4d5: test rax, rax
41f4d8: je 0x41f530
41f4da: mov rdi, qword ptr [rbp + 0x38]
41f4de: mov rbx, rax
41f4e1: lea r12, [rax + 0x2000]
41f4e8: mov eax, dword ptr [rbp]
41f4eb: test rdi, rdi
41f4ee: je 0x41f4f4
41f4f0: test al, 1
41f4f2: je 0x41f520
41f4f4: movq xmm0, rbx
41f4f9: movq xmm1, r12
41f4fe: and eax, 0xfffffffe
41f501: pop rbx
41f502: punpcklqdq xmm0, xmm1
41f506: mov dword ptr [rbp], eax
41f509: mov eax, 1
41f50e: movups xmmword ptr [rbp + 0x38], xmm0
41f512: pop rbp
41f513: pop r12
41f515: ret 
41f516: nop word ptr cs:[rax + rax]
41f520: call 0x426a00
41f525: mov eax, dword ptr [rbp]
41f528: jmp 0x41f4f4
41f52a: nop word ptr [rax + rax]
41f530: pop rbx
41f531: mov eax, 0xffffffff
41f536: pop rbp
41f537: pop r12
41f539: ret 
41f53a: nop word ptr [rax + rax]
41f540: endbr64 
41f544: mov edx, dword ptr [rip + 0xa36d2]
41f54a: or esi, 0xfbad0000
41f550: mov dword ptr [rdi + 0x74], 0
41f557: mov dword ptr [rdi], esi
41f559: test edx, edx
41f55b: je 0x41f564
41f55d: mov dword ptr [rdi + 0x74], 0x80
41f564: xor eax, eax
41f566: pxor xmm0, xmm0
41f56a: mov qword ptr [rdi + 0x68], 0
41f572: mov word ptr [rdi + 0x80], ax
41f579: mov rax, qword ptr [rdi + 0x88]
41f580: movups xmmword ptr [rdi + 8], xmm0
41f584: movups xmmword ptr [rdi + 0x18], xmm0
41f588: movups xmmword ptr [rdi + 0x28], xmm0
41f58c: movups xmmword ptr [rdi + 0x38], xmm0
41f590: movups xmmword ptr [rdi + 0x48], xmm0
41f594: movups xmmword ptr [rdi + 0x58], xmm0
41f598: test rax, rax
41f59b: je 0x41f5ac
41f59d: mov qword ptr [rax], 0
41f5a4: mov qword ptr [rax + 8], 0
41f5ac: movdqa xmm0, xmmword ptr [rip + 0x76a9c]
41f5b4: mov dword ptr [rdi + 0xc0], 0xffffffff
41f5be: movups xmmword ptr [rdi + 0xa0], xmm0
41f5c5: ret 
41f5c6: nop word ptr cs:[rax + rax]
41f5d0: endbr64 
41f5d4: mov edx, dword ptr [rip + 0xa3642]
41f5da: or esi, 0xfbad0000
41f5e0: mov dword ptr [rdi + 0x74], 0
41f5e7: mov dword ptr [rdi], esi
41f5e9: test edx, edx
41f5eb: je 0x41f5f4
41f5ed: mov dword ptr [rdi + 0x74], 0x80
41f5f4: xor eax, eax
41f5f6: pxor xmm0, xmm0
41f5fa: mov qword ptr [rdi + 0x68], 0
41f602: mov word ptr [rdi + 0x80], ax
41f609: mov rax, qword ptr [rdi + 0x88]
41f610: movups xmmword ptr [rdi + 8], xmm0
41f614: movups xmmword ptr [rdi + 0x18], xmm0
41f618: movups xmmword ptr [rdi + 0x28], xmm0
41f61c: movups xmmword ptr [rdi + 0x38], xmm0
41f620: movups xmmword ptr [rdi + 0x48], xmm0
41f624: movups xmmword ptr [rdi + 0x58], xmm0
41f628: test rax, rax
41f62b: je 0x41f63c
41f62d: mov qword ptr [rax], 0
41f634: mov qword ptr [rax + 8], 0
41f63c: movdqa xmm0, xmmword ptr [rip + 0x76a0c]
41f644: mov dword ptr [rdi + 0xc0], 0xffffffff
41f64e: movups xmmword ptr [rdi + 0xa0], xmm0
41f655: ret 
41f656: nop word ptr cs:[rax + rax]
41f660: endbr64 
41f664: mov eax, dword ptr [rip + 0xa35b2]
41f66a: test eax, eax
41f66c: jne 0x41f698
41f66e: mov rax, qword ptr [rip + 0xa0aab]
41f675: mov dword ptr [rip + 0xa359d], 1
41f67f: test rax, rax
41f682: je 0x41f698
41f684: nop dword ptr [rax]
41f688: or dword ptr [rax + 0x74], 0x80
41f68f: mov rax, qword ptr [rax + 0x68]
41f693: test rax, rax
41f696: jne 0x41f688
41f698: ret 
41f699: nop dword ptr [rax]
41f6a0: endbr64 
41f6a4: mov edx, dword ptr [rip + 0xa3572]
41f6aa: or esi, 0xfbad0000
41f6b0: mov dword ptr [rdi + 0x74], 0
41f6b7: mov dword ptr [rdi], esi
41f6b9: test edx, edx
41f6bb: je 0x41f6c4
41f6bd: mov dword ptr [rdi + 0x74], 0x80
41f6c4: xor eax, eax
41f6c6: pxor xmm0, xmm0
41f6ca: mov qword ptr [rdi + 0x68], 0
41f6d2: mov word ptr [rdi + 0x80], ax
41f6d9: mov rax, qword ptr [rdi + 0x88]
41f6e0: movups xmmword ptr [rdi + 8], xmm0
41f6e4: movups xmmword ptr [rdi + 0x18], xmm0
41f6e8: movups xmmword ptr [rdi + 0x28], xmm0
41f6ec: movups xmmword ptr [rdi + 0x38], xmm0
41f6f0: movups xmmword ptr [rdi + 0x48], xmm0
41f6f4: movups xmmword ptr [rdi + 0x58], xmm0
41f6f8: test rax, rax
41f6fb: je 0x41f70c
41f6fd: mov qword ptr [rax], 0
41f704: mov qword ptr [rax + 8], 0
41f70c: ret 
41f70d: nop dword ptr [rax]
41f710: endbr64 
41f714: or esi, 0xfbad0000
41f71a: mov dword ptr [rdi + 0x74], 0
41f721: mov dword ptr [rdi], esi
41f723: mov esi, dword ptr [rip + 0xa34f3]
41f729: test esi, esi
41f72b: je 0x41f734
41f72d: mov dword ptr [rdi + 0x74], 0x80
41f734: xor eax, eax
41f736: pxor xmm0, xmm0
41f73a: mov qword ptr [rdi + 0x68], 0
41f742: mov word ptr [rdi + 0x80], ax
41f749: mov rax, qword ptr [rdi + 0x88]
41f750: movups xmmword ptr [rdi + 8], xmm0
41f754: movups xmmword ptr [rdi + 0x18], xmm0
41f758: movups xmmword ptr [rdi + 0x28], xmm0
41f75c: movups xmmword ptr [rdi + 0x38], xmm0
41f760: movups xmmword ptr [rdi + 0x48], xmm0
41f764: movups xmmword ptr [rdi + 0x58], xmm0
41f768: test rax, rax
41f76b: je 0x41f77c
41f76d: mov qword ptr [rax], 0
41f774: mov qword ptr [rax + 8], 0
41f77c: mov dword ptr [rdi + 0xc0], edx
41f782: test edx, edx
41f784: js 0x41f7c0
41f786: pxor xmm0, xmm0
41f78a: mov qword ptr [rdi + 0xa0], rcx
41f791: mov qword ptr [rcx + 0x50], 0
41f799: mov qword ptr [rcx + 0xe0], r8
41f7a0: movups xmmword ptr [rcx], xmm0
41f7a3: movups xmmword ptr [rcx + 0x10], xmm0
41f7a7: movups xmmword ptr [rcx + 0x20], xmm0
41f7ab: movups xmmword ptr [rcx + 0x30], xmm0
41f7af: movups xmmword ptr [rcx + 0x40], xmm0
41f7b3: mov qword ptr [rdi + 0xa8], 0
41f7be: ret 
41f7bf: nop 
41f7c0: mov qword ptr [rdi + 0xa0], 0xffffffffffffffff
41f7cb: mov qword ptr [rdi + 0xa8], 0
41f7d6: ret 
41f7d7: nop word ptr [rax + rax]
41f7e0: endbr64 
41f7e4: xor eax, eax
41f7e6: ret 
41f7e7: nop word ptr [rax + rax]
41f7f0: endbr64 
41f7f4: push rbp
41f7f5: mov rbp, rdi
41f7f8: mov rdi, qword ptr [rdi + 0x38]
41f7fc: test rdi, rdi
41f7ff: je 0x41f807
41f801: test byte ptr [rbp], 1
41f805: je 0x41f850
41f807: mov rax, qword ptr [rbp + 0x60]
41f80b: test rax, rax
41f80e: je 0x41f820
41f810: mov qword ptr [rax + 8], 0
41f818: mov rax, qword ptr [rax]
41f81b: test rax, rax
41f81e: jne 0x41f810
41f820: mov rdi, qword ptr [rbp + 0x48]
41f824: test rdi, rdi
41f827: je 0x41f836
41f829: call 0x426a00
41f82e: mov qword ptr [rbp + 0x48], 0
41f836: test byte ptr [rbp], 0x80
41f83a: je 0x41f848
41f83c: mov rdi, rbp
41f83f: pop rbp
41f840: jmp 0x41e130
41f845: nop dword ptr [rax]
41f848: pop rbp
41f849: ret 
41f84a: nop word ptr [rax + rax]
41f850: call 0x426a00
41f855: pxor xmm0, xmm0
41f859: movups xmmword ptr [rbp + 0x38], xmm0
41f85d: jmp 0x41f807
41f85f: nop 
41f860: endbr64 
41f864: mov rax, 0xffffffffffffffff
41f86b: ret 
41f86c: nop dword ptr [rax]
41f870: endbr64 
41f874: push rbp
41f875: push rbx
41f876: mov rbx, rdi
41f879: sub rsp, 0x18
41f87d: mov rax, qword ptr [rdi + 8]
41f881: cmp rax, qword ptr [rdi + 0x18]
41f885: jbe 0x41f88d
41f887: cmp byte ptr [rax - 1], sil
41f88b: je 0x41f8c8
41f88d: mov rbp, qword ptr [rbx + 0xd8]
41f894: mov rdx, 0x4c1b60
41f89b: mov rax, 0x4c2208
41f8a2: mov rcx, rbp
41f8a5: sub rax, rdx
41f8a8: sub rcx, rdx
41f8ab: cmp rax, rcx
41f8ae: jbe 0x41f8e0
41f8b0: mov rdi, rbx
41f8b3: call qword ptr [rbp + 0x30]
41f8b6: cmp eax, -1
41f8b9: je 0x41f8be
41f8bb: and dword ptr [rbx], 0xffffffef
41f8be: add rsp, 0x18
41f8c2: pop rbx
41f8c3: pop rbp
41f8c4: ret 
41f8c5: nop dword ptr [rax]
41f8c8: sub rax, 1
41f8cc: mov qword ptr [rdi + 8], rax
41f8d0: movzx eax, sil
41f8d4: jmp 0x41f8bb
41f8d6: nop word ptr cs:[rax + rax]
41f8e0: mov dword ptr [rsp + 0xc], esi
41f8e4: call 0x41b240
41f8e9: mov esi, dword ptr [rsp + 0xc]
41f8ed: jmp 0x41f8b0
41f8ef: nop 
41f8f0: endbr64 
41f8f4: push rbp
41f8f5: push rbx
41f8f6: mov rbx, rdi
41f8f9: sub rsp, 8
41f8fd: mov rax, qword ptr [rdi + 8]
41f901: cmp rax, qword ptr [rdi + 0x18]
41f905: jbe 0x41f920
41f907: lea rdx, [rax - 1]
41f90b: mov qword ptr [rdi + 8], rdx
41f90f: movzx eax, byte ptr [rax - 1]
41f913: and dword ptr [rbx], 0xffffffef
41f916: add rsp, 8
41f91a: pop rbx
41f91b: pop rbp
41f91c: ret 
41f91d: nop dword ptr [rax]
41f920: mov rbp, qword ptr [rdi + 0xd8]
41f927: mov rdx, 0x4c1b60
41f92e: mov rax, 0x4c2208
41f935: mov rcx, rbp
41f938: sub rax, rdx
41f93b: sub rcx, rdx
41f93e: cmp rax, rcx
41f941: jbe 0x41f960
41f943: mov esi, 0xffffffff
41f948: mov rdi, rbx
41f94b: call qword ptr [rbp + 0x30]
41f94e: cmp eax, -1
41f951: jne 0x41f913
41f953: add rsp, 8
41f957: pop rbx
41f958: pop rbp
41f959: ret 
41f95a: nop word ptr [rax + rax]
41f960: call 0x41b240
41f965: jmp 0x41f943
41f967: nop word ptr [rax + rax]
41f970: endbr64 
41f974: movsxd rax, edx
41f977: add rax, rsi
41f97a: mov rcx, rax
41f97d: jmp 0x41f989
41f97f: nop 
41f980: sub rcx, 1
41f984: cmp byte ptr [rcx], 0xa
41f987: je 0x41f998
41f989: cmp rcx, rsi
41f98c: ja 0x41f980
41f98e: lea eax, [rdx + rdi]
41f991: ret 
41f992: nop word ptr [rax + rax]
41f998: sub rax, rcx
41f99b: sub eax, 1
41f99e: ret 
41f99f: nop 
41f9a0: endbr64 
41f9a4: push r15
41f9a6: push r14
41f9a8: push r13
41f9aa: push r12
41f9ac: push rbp
41f9ad: mov ebp, edi
41f9af: push rbx
41f9b0: sub rsp, 0x38
41f9b4: mov r13, 0
41f9bb: mov rax, qword ptr fs:[0x28]
41f9c4: mov qword ptr [rsp + 0x28], rax
41f9c9: xor eax, eax
41f9cb: test r13, r13
41f9ce: je 0x41fbd0
41f9d4: mov rdi, rsp
41f9d7: xor edx, edx
41f9d9: lea rsi, [rip - 0x1990]
41f9e0: call 0
41f9e5: mov rbx, qword ptr fs:[0x10]
41f9ee: cmp qword ptr [rip + 0xa3243], rbx
41f9f5: je 0x41fa1a
41f9f7: mov eax, dword ptr fs:[0x18]
41f9ff: test eax, eax
41fa01: jne 0x41fc6c
41fa07: mov edx, 1
41fa0c: cmpxchg dword ptr [rip + 0xa321d], edx
41fa13: mov qword ptr [rip + 0xa321e], rbx
41fa1a: mov eax, dword ptr [rip + 0xa3214]
41fa20: mov rbx, qword ptr [rip + 0xa06f9]
41fa27: xor r14d, r14d
41fa2a: lea edx, [rax + 1]
41fa2d: mov dword ptr [rip + 0xa3201], edx
41fa33: test rbx, rbx
41fa36: je 0x41fb69
41fa3c: mov r12, qword ptr fs:[0x10]
41fa45: jmp 0x41faf4
41fa4a: nop word ptr [rax + rax]
41fa50: mov rax, qword ptr [rbx + 0xa0]
41fa57: mov rsi, qword ptr [rax + 0x18]
41fa5b: cmp qword ptr [rax + 0x20], rsi
41fa5f: jbe 0x41faa0
41fa61: mov r15, qword ptr [rbx + 0xd8]
41fa68: mov rdx, 0x4c1b60
41fa6f: mov rax, 0x4c2208
41fa76: mov rcx, r15
41fa79: sub rax, rdx
41fa7c: sub rcx, rdx
41fa7f: cmp rax, rcx
41fa82: jbe 0x41fbf0
41fa88: mov esi, 0xffffffff
41fa8d: mov rdi, rbx
41fa90: call qword ptr [r15 + 0x18]
41fa94: cmp eax, -1
41fa97: mov eax, 0xffffffff
41fa9c: cmove r14d, eax
41faa0: test ebp, ebp
41faa2: je 0x41fae0
41faa4: test dword ptr [rbx], 0x8000
41faaa: jne 0x41fae0
41faac: mov rdi, qword ptr [rbx + 0x88]
41fab3: mov eax, dword ptr [rdi + 4]
41fab6: sub eax, 1
41fab9: mov dword ptr [rdi + 4], eax
41fabc: jne 0x41fae0
41fabe: mov qword ptr [rdi + 8], 0
41fac6: mov edx, dword ptr fs:[0x18]
41face: test edx, edx
41fad0: jne 0x41fc48
41fad6: sub dword ptr [rdi], 1
41fad9: nop dword ptr [rax]
41fae0: mov qword ptr [rip + 0xa3135], 0
41faeb: mov rbx, qword ptr [rbx + 0x68]
41faef: test rbx, rbx
41faf2: je 0x41fb60
41faf4: mov qword ptr [rip + 0xa3125], rbx
41fafb: test ebp, ebp
41fafd: je 0x41fb3d
41faff: mov edx, dword ptr [rbx]
41fb01: and edx, 0x8000
41fb07: jne 0x41fb3d
41fb09: mov rdi, qword ptr [rbx + 0x88]
41fb10: cmp qword ptr [rdi + 8], r12
41fb14: je 0x41fb39
41fb16: mov eax, dword ptr fs:[0x18]
41fb1e: test eax, eax
41fb20: jne 0x41fc28
41fb26: mov edx, 1
41fb2b: cmpxchg dword ptr [rdi], edx
41fb2e: mov rdi, qword ptr [rbx + 0x88]
41fb35: mov qword ptr [rdi + 8], r12
41fb39: add dword ptr [rdi + 4], 1
41fb3d: mov eax, dword ptr [rbx + 0xc0]
41fb43: test eax, eax
41fb45: jg 0x41fa50
41fb4b: mov rax, qword ptr [rbx + 0x20]
41fb4f: cmp qword ptr [rbx + 0x28], rax
41fb53: ja 0x41fa61
41fb59: jmp 0x41faa0
41fb5e: nop 
41fb60: mov eax, dword ptr [rip + 0xa30ce]
41fb66: sub eax, 1
41fb69: mov dword ptr [rip + 0xa30c5], eax
41fb6f: test eax, eax
41fb71: jne 0x41fb91
41fb73: mov qword ptr [rip + 0xa30ba], 0
41fb7e: mov edx, dword ptr fs:[0x18]
41fb86: test edx, edx
41fb88: jne 0x41fbfa
41fb8a: sub dword ptr [rip + 0xa309f], 1
41fb91: test r13, r13
41fb94: je 0x41fba0
41fb96: mov rdi, rsp
41fb99: xor esi, esi
41fb9b: call 0
41fba0: mov rax, qword ptr [rsp + 0x28]
41fba5: xor rax, qword ptr fs:[0x28]
41fbae: jne 0x41fc92
41fbb4: add rsp, 0x38
41fbb8: mov eax, r14d
41fbbb: pop rbx
41fbbc: pop rbp
41fbbd: pop r12
41fbbf: pop r13
41fbc1: pop r14
41fbc3: pop r15
41fbc5: ret 
41fbc6: nop word ptr cs:[rax + rax]
41fbd0: mov qword ptr [rsp + 8], 0
41fbd9: lea rax, [rip - 0x1b90]
41fbe0: mov qword ptr [rsp], rax
41fbe4: jmp 0x41f9e5
41fbe9: nop dword ptr [rax]
41fbf0: call 0x41b240
41fbf5: jmp 0x41fa88
41fbfa: xchg dword ptr [rip + 0xa3030], eax
41fc00: cmp eax, 1
41fc03: jle 0x41fb91
41fc05: xor r10d, r10d
41fc08: mov edx, 1
41fc0d: mov esi, 0x81
41fc12: mov eax, 0xca
41fc17: lea rdi, [rip + 0xa3012]
41fc1e: syscall 
41fc20: jmp 0x41fb91
41fc25: nop dword ptr [rax]
41fc28: mov ecx, 1
41fc2d: mov eax, edx
41fc2f: lock cmpxchg dword ptr [rdi], ecx
41fc33: je 0x41fb2e
41fc39: call 0x421250
41fc3e: jmp 0x41fb2e
41fc43: nop dword ptr [rax + rax]
41fc48: xchg dword ptr [rdi], eax
41fc4a: cmp eax, 1
41fc4d: jle 0x41fae0
41fc53: xor r10d, r10d
41fc56: mov edx, 1
41fc5b: mov esi, 0x81
41fc60: mov eax, 0xca
41fc65: syscall 
41fc67: jmp 0x41fae0
41fc6c: xor eax, eax
41fc6e: mov edx, 1
41fc73: lock cmpxchg dword ptr [rip + 0xa2fb5], edx
41fc7b: je 0x41fa13
41fc81: lea rdi, [rip + 0xa2fa8]
41fc88: call 0x421250
41fc8d: jmp 0x41fa13
41fc92: call 0x4547a0
41fc97: nop word ptr [rax + rax]
41fca0: endbr64 
41fca4: push r15
41fca6: xor edi, edi
41fca8: push r14
41fcaa: push r13
41fcac: push r12
41fcae: push rbp
41fcaf: push rbx
41fcb0: sub rsp, 0x38
41fcb4: mov rax, qword ptr fs:[0x28]
41fcbd: mov qword ptr [rsp + 0x28], rax
41fcc2: xor eax, eax
41fcc4: call 0x41f9a0
41fcc9: mov r13, 0
41fcd0: mov r12d, eax
41fcd3: test r13, r13
41fcd6: je 0x41ff18
41fcdc: mov rdi, rsp
41fcdf: xor edx, edx
41fce1: lea rsi, [rip - 0x1c98]
41fce8: call 0
41fced: mov rbx, qword ptr fs:[0x10]
41fcf6: cmp rbx, qword ptr [rip + 0xa2f3b]
41fcfd: je 0x41fd22
41fcff: mov eax, dword ptr fs:[0x18]
41fd07: test eax, eax
41fd09: jne 0x41ffa0
41fd0f: mov edx, 1
41fd14: cmpxchg dword ptr [rip + 0xa2f15], edx
41fd1b: mov qword ptr [rip + 0xa2f16], rbx
41fd22: mov eax, dword ptr [rip + 0xa2f0c]
41fd28: mov rbx, qword ptr [rip + 0xa03f1]
41fd2f: lea edx, [rax + 1]
41fd32: mov dword ptr [rip + 0xa2efc], edx
41fd38: test rbx, rbx
41fd3b: je 0x41fe79
41fd41: mov r14, qword ptr fs:[0x10]
41fd4a: jmp 0x41fd67
41fd4c: nop dword ptr [rax]
41fd50: mov dword ptr [rbx + 0xc0], 0xffffffff
41fd5a: mov rbx, qword ptr [rbx + 0x68]
41fd5e: test rbx, rbx
41fd61: je 0x41fe70
41fd67: mov ebp, dword ptr [rbx]
41fd69: and ebp, 2
41fd6c: jne 0x41fd50
41fd6e: mov edx, dword ptr [rbx + 0xc0]
41fd74: test edx, edx
41fd76: je 0x41fd50
41fd78: mov rdx, qword ptr [rbx + 0x88]
41fd7f: test rdx, rdx
41fd82: je 0x41fdc1
41fd84: cmp r14, qword ptr [rdx + 8]
41fd88: je 0x41ffd0
41fd8e: mov eax, dword ptr fs:[0x18]
41fd96: test eax, eax
41fd98: jne 0x41ff70
41fd9e: mov ecx, 1
41fda3: cmpxchg dword ptr [rdx], ecx
41fda6: test eax, eax
41fda8: je 0x41ffe0
41fdae: call 0x450b20
41fdb3: cmp ebp, 1
41fdb6: jne 0x41fee0
41fdbc: mov ebp, 2
41fdc1: cmp byte ptr [rip + 0xa2e50], 0
41fdc8: jne 0x41fdd4
41fdca: mov eax, dword ptr [rbx]
41fdcc: test al, 1
41fdce: je 0x41fef0
41fdd4: mov r15, qword ptr [rbx + 0xd8]
41fddb: mov rdx, 0x4c1b60
41fde2: mov rax, 0x4c2208
41fde9: mov rsi, r15
41fdec: sub rax, rdx
41fdef: sub rsi, rdx
41fdf2: cmp rax, rsi
41fdf5: jbe 0x41ff90
41fdfb: xor edx, edx
41fdfd: xor esi, esi
41fdff: mov rdi, rbx
41fe02: call qword ptr [r15 + 0x58]
41fe06: mov eax, dword ptr [rbx + 0xc0]
41fe0c: test eax, eax
41fe0e: jle 0x41fe1e
41fe10: xor ecx, ecx
41fe12: xor edx, edx
41fe14: xor esi, esi
41fe16: mov rdi, rbx
41fe19: call 0x474570
41fe1e: cmp ebp, 2
41fe21: je 0x41fd50
41fe27: mov rdi, qword ptr [rbx + 0x88]
41fe2e: test rdi, rdi
41fe31: je 0x41fd50
41fe37: mov eax, dword ptr [rdi + 4]
41fe3a: sub eax, 1
41fe3d: mov dword ptr [rdi + 4], eax
41fe40: jne 0x41fd50
41fe46: mov qword ptr [rdi + 8], 0
41fe4e: mov edx, dword ptr fs:[0x18]
41fe56: test edx, edx
41fe58: jne 0x420000
41fe5e: sub dword ptr [rdi], 1
41fe61: jmp 0x41fd50
41fe66: nop word ptr cs:[rax + rax]
41fe70: mov eax, dword ptr [rip + 0xa2dbe]
41fe76: sub eax, 1
41fe79: mov dword ptr [rip + 0xa2db5], eax
41fe7f: test eax, eax
41fe81: jne 0x41fea5
41fe83: mov qword ptr [rip + 0xa2daa], 0
41fe8e: mov edx, dword ptr fs:[0x18]
41fe96: test edx, edx
41fe98: jne 0x41ff38
41fe9e: sub dword ptr [rip + 0xa2d8b], 1
41fea5: test r13, r13
41fea8: je 0x41feb4
41feaa: mov rdi, rsp
41fead: xor esi, esi
41feaf: call 0
41feb4: mov rax, qword ptr [rsp + 0x28]
41feb9: xor rax, qword ptr fs:[0x28]
41fec2: jne 0x420024
41fec8: add rsp, 0x38
41fecc: mov eax, r12d
41fecf: pop rbx
41fed0: pop rbp
41fed1: pop r12
41fed3: pop r13
41fed5: pop r14
41fed7: pop r15
41fed9: ret 
41feda: nop word ptr [rax + rax]
41fee0: mov ebp, 1
41fee5: jmp 0x41fd78
41feea: nop word ptr [rax + rax]
41fef0: movq xmm0, qword ptr [rip + 0xa2d18]
41fef8: or eax, 1
41fefb: mov qword ptr [rip + 0xa2d0e], rbx
41ff02: mov dword ptr [rbx], eax
41ff04: movhps xmm0, qword ptr [rbx + 0x38]
41ff08: movups xmmword ptr [rbx + 0xa8], xmm0
41ff0f: jmp 0x41fdd4
41ff14: nop dword ptr [rax]
41ff18: mov qword ptr [rsp + 8], 0
41ff21: lea rax, [rip - 0x1ed8]
41ff28: mov qword ptr [rsp], rax
41ff2c: jmp 0x41fced
41ff31: nop dword ptr [rax]
41ff38: xchg dword ptr [rip + 0xa2cf2], eax
41ff3e: cmp eax, 1
41ff41: jle 0x41fea5
41ff47: xor r10d, r10d
41ff4a: mov edx, 1
41ff4f: mov esi, 0x81
41ff54: mov eax, 0xca
41ff59: lea rdi, [rip + 0xa2cd0]
41ff60: syscall 
41ff62: jmp 0x41fea5
41ff67: nop word ptr [rax + rax]
41ff70: xor eax, eax
41ff72: mov ecx, 1
41ff77: lock cmpxchg dword ptr [rdx], ecx
41ff7b: setne al
41ff7e: movzx eax, al
41ff81: jmp 0x41fda6
41ff86: nop word ptr cs:[rax + rax]
41ff90: call 0x41b240
41ff95: jmp 0x41fdfb
41ff9a: nop word ptr [rax + rax]
41ffa0: xor eax, eax
41ffa2: mov edx, 1
41ffa7: lock cmpxchg dword ptr [rip + 0xa2c81], edx
41ffaf: je 0x41fd1b
41ffb5: lea rdi, [rip + 0xa2c74]
41ffbc: call 0x421250
41ffc1: jmp 0x41fd1b
41ffc6: nop word ptr cs:[rax + rax]
41ffd0: add dword ptr [rdx + 4], 1
41ffd4: jmp 0x41fdc1
41ffd9: nop dword ptr [rax]
41ffe0: mov rax, qword ptr [rbx + 0x88]
41ffe7: mov qword ptr [rax + 8], r14
41ffeb: mov dword ptr [rax + 4], 1
41fff2: jmp 0x41fdc1
41fff7: nop word ptr [rax + rax]
420000: xchg dword ptr [rdi], eax
420002: cmp eax, 1
420005: jle 0x41fd50
42000b: xor r10d, r10d
42000e: mov edx, 1
420013: mov esi, 0x81
420018: mov eax, 0xca
42001d: syscall 
42001f: jmp 0x41fd50
420024: call 0x4547a0
420029: nop dword ptr [rax]
420030: endbr64 
420034: mov edi, 1
420039: jmp 0x41f9a0
42003e: nop 
420040: endbr64 
420044: push r13
420046: push r12
420048: push rbp
420049: push rbx
42004a: sub rsp, 0x38
42004e: mov rbp, 0
420055: mov rax, qword ptr fs:[0x28]
42005e: mov qword ptr [rsp + 0x28], rax
420063: xor eax, eax
420065: test rbp, rbp
420068: je 0x420238
42006e: mov rdi, rsp
420071: xor edx, edx
420073: lea rsi, [rip - 0x202a]
42007a: call 0
42007f: mov rbx, qword ptr fs:[0x10]
420088: cmp qword ptr [rip + 0xa2ba9], rbx
42008f: je 0x4200b4
420091: mov eax, dword ptr fs:[0x18]
420099: test eax, eax
42009b: jne 0x4202d8
4200a1: mov edx, 1
4200a6: cmpxchg dword ptr [rip + 0xa2b83], edx
4200ad: mov qword ptr [rip + 0xa2b84], rbx
4200b4: mov eax, dword ptr [rip + 0xa2b7a]
4200ba: mov rbx, qword ptr [rip + 0xa005f]
4200c1: lea edx, [rax + 1]
4200c4: mov dword ptr [rip + 0xa2b6a], edx
4200ca: test rbx, rbx
4200cd: je 0x4201d9
4200d3: mov r12, qword ptr fs:[0x10]
4200dc: jmp 0x420173
4200e1: nop dword ptr [rax]
4200e8: mov rdi, qword ptr [rbx + 0x88]
4200ef: cmp qword ptr [rdi + 8], r12
4200f3: je 0x420118
4200f5: mov eax, dword ptr fs:[0x18]
4200fd: mov edx, 1
420102: test eax, eax
420104: jne 0x420258
42010a: cmpxchg dword ptr [rdi], edx
42010d: mov rdi, qword ptr [rbx + 0x88]
420114: mov qword ptr [rdi + 8], r12
420118: mov eax, dword ptr [rbx]
42011a: add dword ptr [rdi + 4], 1
42011e: and eax, 0x208
420123: cmp eax, 0x200
420128: je 0x420198
42012a: test dword ptr [rbx], 0x8000
420130: jne 0x42015f
420132: mov rdi, qword ptr [rbx + 0x88]
420139: mov eax, dword ptr [rdi + 4]
42013c: sub eax, 1
42013f: mov dword ptr [rdi + 4], eax
420142: jne 0x42015f
420144: mov qword ptr [rdi + 8], 0
42014c: mov edx, dword ptr fs:[0x18]
420154: test edx, edx
420156: jne 0x420280
42015c: sub dword ptr [rdi], 1
42015f: mov qword ptr [rip + 0xa2ab6], 0
42016a: mov rbx, qword ptr [rbx + 0x68]
42016e: test rbx, rbx
420171: je 0x4201d0
420173: mov edx, dword ptr [rbx]
420175: mov qword ptr [rip + 0xa2aa4], rbx
42017c: mov ecx, edx
42017e: and ecx, 0x8000
420184: je 0x4200e8
42018a: and edx, 0x208
420190: cmp edx, 0x200
420196: jne 0x42015f
420198: mov r13, qword ptr [rbx + 0xd8]
42019f: mov rdx, 0x4c1b60
4201a6: mov rax, 0x4c2208
4201ad: mov rsi, r13
4201b0: sub rax, rdx
4201b3: sub rsi, rdx
4201b6: cmp rax, rsi
4201b9: jbe 0x420270
4201bf: mov esi, 0xffffffff
4201c4: mov rdi, rbx
4201c7: call qword ptr [r13 + 0x18]
4201cb: jmp 0x42012a
4201d0: mov eax, dword ptr [rip + 0xa2a5e]
4201d6: sub eax, 1
4201d9: mov dword ptr [rip + 0xa2a55], eax
4201df: test eax, eax
4201e1: jne 0x420205
4201e3: mov qword ptr [rip + 0xa2a4a], 0
4201ee: mov edx, dword ptr fs:[0x18]
4201f6: test edx, edx
4201f8: jne 0x4202a4
4201fe: sub dword ptr [rip + 0xa2a2b], 1
420205: test rbp, rbp
420208: je 0x420214
42020a: mov rdi, rsp
42020d: xor esi, esi
42020f: call 0
420214: mov rax, qword ptr [rsp + 0x28]
420219: xor rax, qword ptr fs:[0x28]
420222: jne 0x4202fe
420228: add rsp, 0x38
42022c: pop rbx
42022d: pop rbp
42022e: pop r12
420230: pop r13
420232: ret 
420233: nop dword ptr [rax + rax]
420238: mov qword ptr [rsp + 8], 0
420241: lea rax, [rip - 0x21f8]
420248: mov qword ptr [rsp], rax
42024c: jmp 0x42007f
420251: nop dword ptr [rax]
420258: mov eax, ecx
42025a: lock cmpxchg dword ptr [rdi], edx
42025e: je 0x42010d
420264: call 0x421250
420269: jmp 0x42010d
42026e: nop 
420270: call 0x41b240
420275: jmp 0x4201bf
42027a: nop word ptr [rax + rax]
420280: xchg dword ptr [rdi], eax
420282: cmp eax, 1
420285: jle 0x42015f
42028b: xor r10d, r10d
42028e: mov edx, 1
420293: mov esi, 0x81
420298: mov eax, 0xca
42029d: syscall 
42029f: jmp 0x42015f
4202a4: xchg dword ptr [rip + 0xa2986], eax
4202aa: cmp eax, 1
4202ad: jle 0x420205
4202b3: xor r10d, r10d
4202b6: mov edx, 1
4202bb: mov esi, 0x81
4202c0: mov eax, 0xca
4202c5: lea rdi, [rip + 0xa2964]
4202cc: syscall 
4202ce: jmp 0x420205
4202d3: nop dword ptr [rax + rax]
4202d8: xor eax, eax
4202da: mov edx, 1
4202df: lock cmpxchg dword ptr [rip + 0xa2949], edx
4202e7: je 0x4200ad
4202ed: lea rdi, [rip + 0xa293c]
4202f4: call 0x421250
4202f9: jmp 0x4200ad
4202fe: call 0x4547a0
420303: nop word ptr cs:[rax + rax]
42030e: nop 
420310: endbr64 
420314: push r12
420316: push rbp
420317: mov rbp, rdi
42031a: push rbx
42031b: mov edx, dword ptr [rsi]
42031d: mov rbx, rsi
420320: mov qword ptr [rdi + 8], rsi
420324: test dh, 8
420327: jne 0x420358
420329: mov ecx, edx
42032b: mov rax, qword ptr [rsi + 8]
42032f: and ecx, 0x100
420335: test ecx, ecx
420337: je 0x420350
420339: sub eax, dword ptr [rbx + 0x10]
42033c: mov dword ptr [rbp + 0x10], eax
42033f: mov rax, qword ptr [rbx + 0x60]
420343: mov qword ptr [rbp], rax
420347: mov qword ptr [rbx + 0x60], rbp
42034b: pop rbx
42034c: pop rbp
42034d: pop r12
42034f: ret 
420350: sub eax, dword ptr [rbx + 0x18]
420353: jmp 0x42033c
420355: nop dword ptr [rax]
420358: mov rax, qword ptr [rsi + 0x28]
42035c: cmp rax, qword ptr [rsi + 0x20]
420360: jbe 0x42039d
420362: mov r12, qword ptr [rsi + 0xd8]
420369: mov rdx, 0x4c1b60
420370: mov rax, 0x4c2208
420377: mov rdi, r12
42037a: sub rax, rdx
42037d: sub rdi, rdx
420380: cmp rax, rdi
420383: jbe 0x4203e0
420385: mov esi, 0xffffffff
42038a: mov rdi, rbx
42038d: call qword ptr [r12 + 0x18]
420392: cmp eax, -1
420395: je 0x4203e7
420397: mov edx, dword ptr [rbx]
420399: mov rax, qword ptr [rbx + 0x28]
42039d: mov ecx, edx
42039f: and ecx, 0x100
4203a5: jne 0x4203d0
4203a7: mov rsi, qword ptr [rbx + 0x38]
4203ab: mov qword ptr [rbx + 0x18], rsi
4203af: cmp qword ptr [rbx + 0x10], rax
4203b3: jae 0x4203b9
4203b5: mov qword ptr [rbx + 0x10], rax
4203b9: and dh, 0xf7
4203bc: mov qword ptr [rbx + 8], rax
4203c0: mov qword ptr [rbx + 0x30], rax
4203c4: mov qword ptr [rbx + 0x20], rax
4203c8: mov dword ptr [rbx], edx
4203ca: jmp 0x420335
4203cf: nop 
4203d0: mov rsi, qword ptr [rbx + 0x50]
4203d4: mov qword ptr [rbx + 0x18], rsi
4203d8: jmp 0x4203b9
4203da: nop word ptr [rax + rax]
4203e0: call 0x41b240
4203e5: jmp 0x420385
4203e7: mov ecx, dword ptr [rbx]
4203e9: mov rax, qword ptr [rbx + 8]
4203ed: and ecx, 0x100
4203f3: jmp 0x420335
4203f8: nop dword ptr [rax + rax]
420400: endbr64 
420404: mov rdx, qword ptr [rdi + 8]
420408: mov rax, qword ptr [rdx + 0x60]
42040c: test rax, rax
42040f: je 0x420430
420411: cmp rdi, rax
420414: jne 0x420425
420416: jmp 0x420431
420418: nop dword ptr [rax + rax]
420420: cmp rdi, rax
420423: je 0x420435
420425: mov rdx, rax
420428: mov rax, qword ptr [rax]
42042b: test rax, rax
42042e: jne 0x420420
420430: ret 
420431: add rdx, 0x60
420435: mov rax, qword ptr [rdi]
420438: mov qword ptr [rdx], rax
42043b: ret 
42043c: nop dword ptr [rax]
420440: endbr64 
420444: mov eax, dword ptr [rdi + 0x10]
420447: sub eax, dword ptr [rsi + 0x10]
42044a: ret 
42044b: nop dword ptr [rax + rax]
420450: endbr64 
420454: mov rax, qword ptr [rdi + 8]
420458: test rax, rax
42045b: je 0x420481
42045d: mov rdx, qword ptr [rax + 8]
420461: test dword ptr [rax], 0x100
420467: jne 0x420478
420469: sub edx, dword ptr [rax + 0x18]
42046c: mov eax, dword ptr [rdi + 0x10]
42046f: sub eax, edx
420471: ret 
420472: nop word ptr [rax + rax]
420478: sub edx, dword ptr [rax + 0x10]
42047b: mov eax, dword ptr [rdi + 0x10]
42047e: sub eax, edx
420480: ret 
420481: mov eax, 0xffffffff
420486: ret 
420487: nop word ptr [rax + rax]
420490: endbr64 
420494: cmp qword ptr [rsi + 8], rdi
420498: jne 0x420530
42049e: mov edx, dword ptr [rdi]
4204a0: movsxd rax, dword ptr [rsi + 0x10]
4204a4: mov esi, edx
4204a6: and esi, 0x100
4204ac: test eax, eax
4204ae: js 0x4204f0
4204b0: mov rcx, qword ptr [rdi + 0x18]
4204b4: test esi, esi
4204b6: je 0x4204dc
4204b8: and dh, 0xfe
4204bb: mov rsi, qword ptr [rdi + 0x58]
4204bf: mov dword ptr [rdi], edx
4204c1: mov rdx, qword ptr [rdi + 0x10]
4204c5: mov qword ptr [rdi + 0x10], rsi
4204c9: mov qword ptr [rdi + 0x58], rdx
4204cd: mov rdx, qword ptr [rdi + 0x48]
4204d1: mov qword ptr [rdi + 0x48], rcx
4204d5: mov qword ptr [rdi + 0x18], rdx
4204d9: mov rcx, rdx
4204dc: add rax, rcx
4204df: mov qword ptr [rdi + 8], rax
4204e3: xor eax, eax
4204e5: ret 
4204e6: nop word ptr cs:[rax + rax]
4204f0: mov rcx, qword ptr [rdi + 0x10]
4204f4: test esi, esi
4204f6: jne 0x4204dc
4204f8: or dh, 1
4204fb: mov rsi, qword ptr [rdi + 0x48]
4204ff: mov dword ptr [rdi], edx
420501: mov rdx, qword ptr [rdi + 0x58]
420505: mov qword ptr [rdi + 0x58], rcx
420509: mov rcx, qword ptr [rdi + 0x18]
42050d: mov qword ptr [rdi + 0x10], rdx
420511: mov qword ptr [rdi + 0x48], rcx
420515: mov rcx, rdx
420518: add rax, rcx
42051b: mov qword ptr [rdi + 0x18], rsi
42051f: mov qword ptr [rdi + 8], rax
420523: xor eax, eax
420525: ret 
420526: nop word ptr cs:[rax + rax]
420530: mov eax, 0xffffffff
420535: ret 
420536: nop word ptr cs:[rax + rax]
420540: endbr64 
420544: push rbx
420545: cmp qword ptr [rdi + 0x60], 0
42054a: mov rbx, rdi
42054d: je 0x420557
42054f: mov qword ptr [rdi + 0x60], 0
420557: mov rdi, qword ptr [rbx + 0x48]
42055b: test rdi, rdi
42055e: je 0x42059c
420560: mov eax, dword ptr [rbx]
420562: test ah, 1
420565: je 0x420587
420567: and ah, 0xfe
42056a: mov qword ptr [rbx + 8], rdi
42056e: mov dword ptr [rbx], eax
420570: mov rax, qword ptr [rbx + 0x58]
420574: mov qword ptr [rbx + 0x10], rax
420578: mov rax, qword ptr [rbx + 0x18]
42057c: mov qword ptr [rbx + 0x18], rdi
420580: mov qword ptr [rbx + 0x48], rax
420584: mov rdi, rax
420587: call 0x426a00
42058c: mov qword ptr [rbx + 0x58], 0
420594: pxor xmm0, xmm0
420598: movups xmmword ptr [rbx + 0x48], xmm0
42059c: pop rbx
42059d: ret 
42059e: nop 
4205a0: endbr64 
4205a4: push r15
4205a6: push r14
4205a8: push r13
4205aa: push r12
4205ac: push rbp
4205ad: mov ebp, esi
4205af: push rbx
4205b0: mov rbx, rdi
4205b3: sub rsp, 0x18
4205b7: mov r13d, dword ptr [rdi]
4205ba: mov r12, qword ptr [rdi + 8]
4205be: mov r14, qword ptr [rdi + 0x18]
4205c2: mov eax, r13d
4205c5: and eax, 0x100
4205ca: cmp r12, r14
4205cd: jbe 0x420600
4205cf: test eax, eax
4205d1: je 0x420670
4205d7: lea rax, [r12 - 1]
4205dc: mov qword ptr [rbx + 8], rax
4205e0: mov byte ptr [r12 - 1], bpl
4205e5: movzx eax, bpl
4205e9: add rsp, 0x18
4205ed: pop rbx
4205ee: pop rbp
4205ef: pop r12
4205f1: pop r13
4205f3: pop r14
4205f5: pop r15
4205f7: ret 
4205f8: nop dword ptr [rax + rax]
420600: test eax, eax
420602: je 0x4206b0
420608: mov r15, qword ptr [rbx + 0x10]
42060c: sub r15, r14
42060f: lea rcx, [r15 + r15]
420613: mov rdi, rcx
420616: mov qword ptr [rsp + 8], rcx
42061b: call 0x426410
420620: mov r13, rax
420623: test rax, rax
420626: je 0x420725
42062c: mov rcx, qword ptr [rsp + 8]
420631: mov rdx, r15
420634: mov rsi, r14
420637: mov r12, rcx
42063a: sub r12, r15
42063d: add r12, rax
420640: mov rdi, r12
420643: call 0x401060
420648: mov rdi, r14
42064b: call 0x426a00
420650: mov rcx, qword ptr [rsp + 8]
420655: mov qword ptr [rbx + 0x18], r13
420659: mov qword ptr [rbx + 0x50], r12
42065d: add r13, rcx
420660: mov qword ptr [rbx + 0x10], r13
420664: jmp 0x4205d7
420669: nop dword ptr [rax]
420670: movzx eax, byte ptr [r12 - 1]
420676: cmp eax, esi
420678: je 0x420718
42067e: cmp qword ptr [rdi + 0x48], 0
420683: je 0x4206f0
420685: mov rsi, r12
420688: mov rdi, rbx
42068b: call 0x41de70
420690: test eax, eax
420692: jne 0x420725
420698: mov rcx, qword ptr [rbx + 8]
42069c: mov r13d, dword ptr [rbx]
42069f: mov r12, qword ptr [rbx + 0x58]
4206a3: mov rax, qword ptr [rbx + 0x48]
4206a7: jmp 0x4206c0
4206a9: nop dword ptr [rax]
4206b0: mov rax, qword ptr [rbx + 0x48]
4206b4: test rax, rax
4206b7: je 0x4206f0
4206b9: mov rcx, r12
4206bc: mov r12, qword ptr [rbx + 0x58]
4206c0: mov rdx, qword ptr [rbx + 0x10]
4206c4: movq xmm0, r12
4206c9: or r13d, 0x100
4206d0: mov qword ptr [rbx + 0x18], rax
4206d4: punpcklqdq xmm0, xmm0
4206d8: mov dword ptr [rbx], r13d
4206db: mov qword ptr [rbx + 0x58], rdx
4206df: mov qword ptr [rbx + 0x48], rcx
4206e3: movups xmmword ptr [rbx + 8], xmm0
4206e7: jmp 0x4205d7
4206ec: nop dword ptr [rax]
4206f0: mov edi, 0x80
4206f5: call 0x426410
4206fa: test rax, rax
4206fd: je 0x420725
4206ff: lea rdx, [rax + 0x80]
420706: mov rcx, r12
420709: mov qword ptr [rbx + 0x50], rdx
42070d: mov r12, rdx
420710: jmp 0x4206c0
420712: nop word ptr [rax + rax]
420718: sub r12, 1
42071c: mov qword ptr [rdi + 8], r12
420720: jmp 0x4205e5
420725: mov eax, 0xffffffff
42072a: jmp 0x4205e9
42072f: nop 
420730: endbr64 
420734: mov rax, 0xffffffffffffffff
42073b: ret 
42073c: nop dword ptr [rax]
420740: endbr64 
420744: mov eax, 0xffffffff
420749: ret 
42074a: nop word ptr [rax + rax]
420750: endbr64 
420754: mov rax, 0xffffffffffffffff
42075b: ret 
42075c: nop dword ptr [rax]
420760: endbr64 
420764: xor eax, eax
420766: ret 
420767: nop word ptr [rax + rax]
420770: endbr64 
420774: mov eax, 0xffffffff
420779: ret 
42077a: nop word ptr [rax + rax]
420780: endbr64 
420784: ret 
420785: nop word ptr cs:[rax + rax]
420790: endbr64 
420794: mov rax, qword ptr [rip + 0x9f985]
42079b: ret 
42079c: nop dword ptr [rax]
4207a0: endbr64 
4207a4: xor eax, eax
4207a6: ret 
4207a7: nop word ptr [rax + rax]
4207b0: endbr64 
4207b4: mov rax, qword ptr [rdi + 0x68]
4207b8: ret 
4207b9: nop dword ptr [rax]
4207c0: endbr64 
4207c4: mov rax, rdi
4207c7: ret 
4207c8: nop dword ptr [rax + rax]
4207d0: endbr64 
4207d4: push rbx
4207d5: mov rbx, qword ptr fs:[0x10]
4207de: cmp qword ptr [rip + 0xa2453], rbx
4207e5: je 0x420806
4207e7: mov eax, dword ptr fs:[0x18]
4207ef: test eax, eax
4207f1: jne 0x420810
4207f3: mov edx, 1
4207f8: cmpxchg dword ptr [rip + 0xa2431], edx
4207ff: mov qword ptr [rip + 0xa2432], rbx
420806: add dword ptr [rip + 0xa2427], 1
42080d: pop rbx
42080e: ret 
42080f: nop 
420810: xor eax, eax
420812: mov edx, 1
420817: lock cmpxchg dword ptr [rip + 0xa2411], edx
42081f: je 0x4207ff
420821: lea rdi, [rip + 0xa2408]
420828: call 0x421250
42082d: jmp 0x4207ff
42082f: nop 
420830: endbr64 
420834: mov eax, dword ptr [rip + 0xa23fa]
42083a: sub eax, 1
42083d: mov dword ptr [rip + 0xa23f1], eax
420843: jne 0x42088e
420845: mov qword ptr [rip + 0xa23e8], 0
420850: mov edx, dword ptr fs:[0x18]
420858: test edx, edx
42085a: jne 0x420868
42085c: sub dword ptr [rip + 0xa23cd], 1
420863: ret 
420864: nop dword ptr [rax]
420868: xchg dword ptr [rip + 0xa23c2], eax
42086e: cmp eax, 1
420871: jle 0x42088e
420873: xor r10d, r10d
420876: mov edx, 1
42087b: mov esi, 0x81
420880: mov eax, 0xca
420885: lea rdi, [rip + 0xa23a4]
42088c: syscall 
42088e: ret 
42088f: nop 
420890: endbr64 
420894: mov qword ptr [rip + 0xa2391], 0
42089f: mov qword ptr [rip + 0xa238e], 0
4208aa: ret 
4208ab: nop dword ptr [rax + rax]
4208b0: endbr64 
4208b4: mov rax, qword ptr [rdi + 0x28]
4208b8: mov rdx, qword ptr [rdi + 0x10]
4208bc: cmp rax, rdx
4208bf: jbe 0x4208c8
4208c1: mov qword ptr [rdi + 0x10], rax
4208c5: mov rdx, rax
4208c8: mov ecx, dword ptr [rdi]
4208ca: mov esi, ecx
4208cc: and esi, 0xc00
4208d2: cmp esi, 0xc00
4208d8: je 0x4208f0
4208da: mov rax, qword ptr [rdi + 8]
4208de: cmp rax, rdx
4208e1: jae 0x420908
4208e3: movzx eax, byte ptr [rax]
4208e6: ret 
4208e7: nop word ptr [rax + rax]
4208f0: and ch, 0xf7
4208f3: mov qword ptr [rdi + 8], rax
4208f7: mov dword ptr [rdi], ecx
4208f9: mov rcx, qword ptr [rdi + 0x30]
4208fd: mov qword ptr [rdi + 0x28], rcx
420901: jmp 0x4208de
420903: nop dword ptr [rax + rax]
420908: mov eax, 0xffffffff
42090d: ret 
42090e: nop 
420910: endbr64 
420914: push r15
420916: push r14
420918: push r13
42091a: push r12
42091c: push rbp
42091d: mov ebp, esi
42091f: push rbx
420920: sub rsp, 0x28
420924: mov eax, dword ptr [rdi]
420926: test al, 8
420928: jne 0x420a90
42092e: mov edx, eax
420930: mov rbx, rdi
420933: and edx, 0xc00
420939: cmp edx, 0x400
42093f: je 0x420a70
420945: mov rdx, qword ptr [rdi + 0x28]
420949: mov r14, qword ptr [rbx + 0x38]
42094d: mov r12, qword ptr [rbx + 0x40]
420951: xor ecx, ecx
420953: mov rsi, rdx
420956: sub r12, r14
420959: cmp ebp, -1
42095c: sete cl
42095f: sub rsi, qword ptr [rbx + 0x20]
420963: add rcx, r12
420966: cmp rcx, rsi
420969: ja 0x420a3a
42096f: test al, 1
420971: jne 0x420ab0
420977: lea r15, [r12 + r12 + 0x64]
42097c: cmp r12, r15
42097f: ja 0x420ab0
420985: mov rdi, r15
420988: call 0x426410
42098d: mov r13, rax
420990: test rax, rax
420993: je 0x420ab0
420999: test r14, r14
42099c: je 0x4209bc
42099e: mov rdx, r12
4209a1: mov rsi, r14
4209a4: mov rdi, rax
4209a7: call 0x401060
4209ac: mov rdi, r14
4209af: call 0x426a00
4209b4: mov qword ptr [rbx + 0x38], 0
4209bc: movq xmm1, r13
4209c1: movq xmm2, r14
4209c6: mov rdx, r15
4209c9: xor esi, esi
4209cb: punpcklqdq xmm1, xmm1
4209cf: punpcklqdq xmm2, xmm2
4209d3: lea rdi, [r13 + r12]
4209d8: sub rdx, r12
4209db: movaps xmmword ptr [rsp], xmm1
4209df: movaps xmmword ptr [rsp + 0x10], xmm2
4209e4: call 0x401110
4209e9: lea rdx, [r13 + r15]
4209ee: mov rsi, r13
4209f1: mov rdi, rbx
4209f4: mov ecx, 1
4209f9: call 0x41ecc0
4209fe: mov rax, qword ptr [rbx + 0x18]
420a02: mov rdx, qword ptr [rbx + 0x28]
420a06: mov qword ptr [rbx + 0x20], r13
420a0a: movdqu xmm0, xmmword ptr [rbx + 8]
420a0f: psubq xmm0, xmmword ptr [rsp + 0x10]
420a15: sub rax, r14
420a18: sub rdx, r14
420a1b: paddq xmm0, xmmword ptr [rsp]
420a20: add rax, r13
420a23: add rdx, r13
420a26: mov qword ptr [rbx + 0x18], rax
420a2a: mov rax, qword ptr [rbx + 0x40]
420a2e: mov qword ptr [rbx + 0x28], rdx
420a32: mov qword ptr [rbx + 0x30], rax
420a36: movups xmmword ptr [rbx + 8], xmm0
420a3a: cmp ebp, -1
420a3d: je 0x420a4e
420a3f: lea rax, [rdx + 1]
420a43: mov qword ptr [rbx + 0x28], rax
420a47: mov byte ptr [rdx], bpl
420a4a: mov rdx, qword ptr [rbx + 0x28]
420a4e: mov eax, ebp
420a50: cmp qword ptr [rbx + 0x10], rdx
420a54: jae 0x420a5a
420a56: mov qword ptr [rbx + 0x10], rdx
420a5a: add rsp, 0x28
420a5e: pop rbx
420a5f: pop rbp
420a60: pop r12
420a62: pop r13
420a64: pop r14
420a66: pop r15
420a68: ret 
420a69: nop dword ptr [rax]
420a70: mov rdx, qword ptr [rdi + 8]
420a74: mov rcx, qword ptr [rdi + 0x10]
420a78: or ah, 8
420a7b: mov dword ptr [rdi], eax
420a7d: mov qword ptr [rdi + 0x28], rdx
420a81: mov qword ptr [rdi + 8], rcx
420a85: jmp 0x420949
420a8a: nop word ptr [rax + rax]
420a90: xor eax, eax
420a92: cmp esi, -1
420a95: setne al
420a98: add rsp, 0x28
420a9c: pop rbx
420a9d: neg eax
420a9f: pop rbp
420aa0: pop r12
420aa2: pop r13
420aa4: pop r14
420aa6: pop r15
420aa8: ret 
420aa9: nop dword ptr [rax]
420ab0: mov eax, 0xffffffff
420ab5: jmp 0x420a5a
420ab7: nop word ptr [rax + rax]
420ac0: push r15
420ac2: push r14
420ac4: push r13
420ac6: push r12
420ac8: push rbp
420ac9: push rbx
420aca: sub rsp, 0x28
420ace: mov r13, qword ptr [rdi + 0x38]
420ad2: mov dword ptr [rsp + 4], edx
420ad6: mov rdx, qword ptr [rdi + 0x40]
420ada: sub rdx, r13
420add: cmp rdx, rsi
420ae0: jge 0x420bf8
420ae6: mov r12d, dword ptr [rdi]
420ae9: mov rbx, rdi
420aec: and r12d, 1
420af0: je 0x420b10
420af2: mov r12d, 1
420af8: add rsp, 0x28
420afc: mov eax, r12d
420aff: pop rbx
420b00: pop rbp
420b01: pop r12
420b03: pop r13
420b05: pop r14
420b07: pop r15
420b09: ret 
420b0a: nop word ptr [rax + rax]
420b10: mov rax, qword ptr [rdi + 0x20]
420b14: lea rcx, [rsi + 0x64]
420b18: mov r14, qword ptr [rdi + 0x30]
420b1c: mov rbp, rsi
420b1f: mov rdi, rcx
420b22: mov qword ptr [rsp + 0x18], rdx
420b27: mov qword ptr [rsp + 8], rax
420b2c: mov qword ptr [rsp + 0x10], rcx
420b31: call 0x426410
420b36: mov r15, rax
420b39: test rax, rax
420b3c: je 0x420af2
420b3e: test r13, r13
420b41: mov rcx, qword ptr [rsp + 0x10]
420b46: je 0x420b6d
420b48: mov rdx, qword ptr [rsp + 0x18]
420b4d: mov rsi, r13
420b50: mov rdi, rax
420b53: call 0x401060
420b58: mov rdi, r13
420b5b: call 0x426a00
420b60: mov qword ptr [rbx + 0x38], 0
420b68: mov rcx, qword ptr [rsp + 0x10]
420b6d: lea rdx, [r15 + rcx]
420b71: mov rsi, r15
420b74: mov ecx, 1
420b79: mov rdi, rbx
420b7c: sub r14, qword ptr [rsp + 8]
420b81: call 0x41ecc0
420b86: mov eax, dword ptr [rsp + 4]
420b8a: test eax, eax
420b8c: je 0x420c00
420b8e: mov rax, qword ptr [rbx + 0x20]
420b92: mov qword ptr [rbx + 0x18], r15
420b96: sub rax, r13
420b99: add rax, r15
420b9c: mov qword ptr [rbx + 0x20], rax
420ba0: mov rax, qword ptr [rbx + 0x28]
420ba4: sub rax, r13
420ba7: add rax, r15
420baa: mov qword ptr [rbx + 0x28], rax
420bae: mov rax, qword ptr [rbx + 0x30]
420bb2: sub rax, r13
420bb5: add rax, r15
420bb8: mov qword ptr [rbx + 0x30], rax
420bbc: mov rax, qword ptr [rbx + 8]
420bc0: sub rax, r13
420bc3: add rax, r15
420bc6: mov qword ptr [rbx + 8], rax
420bca: mov rax, qword ptr [rbx + 0x40]
420bce: mov qword ptr [rbx + 0x10], rax
420bd2: cmp rbp, r14
420bd5: jl 0x420c6d
420bdb: mov rdx, rbp
420bde: lea rdi, [r15 + r14]
420be2: xor esi, esi
420be4: sub rdx, r14
420be7: call 0x401110
420bec: jmp 0x420af8
420bf1: nop dword ptr [rax]
420bf8: xor r12d, r12d
420bfb: jmp 0x420af8
420c00: mov rax, qword ptr [rbx + 0x18]
420c04: movdqu xmm2, xmmword ptr [rbx + 8]
420c09: movq xmm0, r13
420c0e: movq xmm1, r15
420c13: punpcklqdq xmm0, xmm0
420c17: punpcklqdq xmm1, xmm1
420c1b: mov qword ptr [rbx + 0x20], r15
420c1f: sub rax, r13
420c22: psubq xmm2, xmm0
420c26: add rax, r15
420c29: movdqa xmm0, xmm2
420c2d: mov qword ptr [rbx + 0x18], rax
420c31: mov rax, qword ptr [rbx + 0x28]
420c35: paddq xmm0, xmm1
420c39: movups xmmword ptr [rbx + 8], xmm0
420c3d: sub rax, r13
420c40: add rax, r15
420c43: mov qword ptr [rbx + 0x28], rax
420c47: mov rax, qword ptr [rbx + 0x40]
420c4b: mov qword ptr [rbx + 0x30], rax
420c4f: cmp rbp, r14
420c52: jl 0x420c6d
420c54: mov rdx, rbp
420c57: lea rdi, [r15 + r14]
420c5b: xor esi, esi
420c5d: xor r12d, r12d
420c60: sub rdx, r14
420c63: call 0x401110
420c68: jmp 0x420af8
420c6d: lea rcx, [rip + 0x7540c]
420c74: mov edx, 0xde
420c79: lea rsi, [rip + 0x753e0]
420c80: lea rdi, [rip + 0x753e2]
420c87: call 0x4032a0
420c8c: nop dword ptr [rax]
420c90: endbr64 
420c94: push r15
420c96: push r14
420c98: mov r14d, edx
420c9b: push r13
420c9d: mov r13, rsi
420ca0: push r12
420ca2: push rbp
420ca3: mov ebp, ecx
420ca5: sub rsp, 0x10
420ca9: mov eax, dword ptr [rdi]
420cab: mov rdx, qword ptr [rdi + 0x28]
420caf: mov rcx, qword ptr [rdi + 0x20]
420cb3: test ebp, ebp
420cb5: jne 0x420da0
420cbb: mov ebp, eax
420cbd: and ebp, 0x400
420cc3: je 0x420d50
420cc9: test ah, 8
420ccc: jne 0x420e50
420cd2: cmp rdx, rcx
420cd5: ja 0x420f30
420cdb: cmp qword ptr [rdi + 0x10], rdx
420cdf: cmovae rdx, qword ptr [rdi + 0x10]
420ce4: mov ebp, 1
420ce9: mov rcx, qword ptr [rdi + 0x18]
420ced: mov r15, rdx
420cf0: sub r15, rcx
420cf3: test r14d, r14d
420cf6: je 0x420eb0
420cfc: mov r12, r15
420cff: cmp r14d, 1
420d03: je 0x420e78
420d09: mov rax, r12
420d0c: neg rax
420d0f: cmp rax, r13
420d12: jg 0x420f40
420d18: movabs rax, 0x7fffffffffffffff
420d22: sub rax, r12
420d25: cmp rax, r13
420d28: jl 0x420f40
420d2e: add r12, r13
420d31: cmp r15, r12
420d34: jl 0x420ed8
420d3a: add rcx, r12
420d3d: mov qword ptr [rdi + 0x10], rdx
420d41: mov qword ptr [rdi + 8], rcx
420d45: jmp 0x420dce
420d4a: nop word ptr [rax + rax]
420d50: cmp rdx, rcx
420d53: jbe 0x420e60
420d59: nop dword ptr [rax]
420d60: test ah, 1
420d63: je 0x420e40
420d69: mov rcx, qword ptr [rdi + 0x50]
420d6d: movq xmm0, rdx
420d72: and ah, 0xf7
420d75: mov qword ptr [rdi + 0x18], rcx
420d79: punpcklqdq xmm0, xmm0
420d7d: mov dword ptr [rdi], eax
420d7f: movups xmmword ptr [rdi + 8], xmm0
420d83: test ebp, ebp
420d85: jne 0x420dae
420d87: mov r12, qword ptr [rdi + 8]
420d8b: sub r12, rcx
420d8e: add rsp, 0x10
420d92: mov rax, r12
420d95: pop rbp
420d96: pop r12
420d98: pop r13
420d9a: pop r14
420d9c: pop r15
420d9e: ret 
420d9f: nop 
420da0: cmp rdx, rcx
420da3: ja 0x420d60
420da5: test ah, 8
420da8: jne 0x420d60
420daa: mov rcx, qword ptr [rdi + 0x18]
420dae: cmp qword ptr [rdi + 0x10], rdx
420db2: cmovae rdx, qword ptr [rdi + 0x10]
420db7: mov r12, 0xffffffffffffffff
420dbe: mov r15, rdx
420dc1: sub r15, rcx
420dc4: test bpl, 1
420dc8: jne 0x420cf3
420dce: and ebp, 2
420dd1: je 0x420d8e
420dd3: test r14d, r14d
420dd6: je 0x420ec8
420ddc: cmp r14d, 1
420de0: jne 0x420e88
420de6: mov rdx, qword ptr [rdi + 0x28]
420dea: mov rax, qword ptr [rdi + 0x20]
420dee: mov r12, rdx
420df1: sub r12, rax
420df4: sub rax, rdx
420df7: movabs rdx, 0x7fffffffffffffff
420e01: sub rdx, r12
420e04: cmp r13, rdx
420e07: setg dl
420e0a: cmp r13, rax
420e0d: jl 0x420f40
420e13: test dl, dl
420e15: jne 0x420f40
420e1b: add r12, r13
420e1e: cmp r12, r15
420e21: jg 0x420f00
420e27: mov rax, qword ptr [rdi + 0x20]
420e2b: add rax, r12
420e2e: mov qword ptr [rdi + 0x28], rax
420e32: jmp 0x420d8e
420e37: nop word ptr [rax + rax]
420e40: mov rcx, qword ptr [rdi + 0x38]
420e44: jmp 0x420d6d
420e49: nop dword ptr [rax]
420e50: mov ebp, 2
420e55: jmp 0x420d60
420e5a: nop word ptr [rax + rax]
420e60: test ah, 8
420e63: jne 0x420d60
420e69: mov rcx, qword ptr [rdi + 0x18]
420e6d: jmp 0x420d87
420e72: nop word ptr [rax + rax]
420e78: mov r12, qword ptr [rdi + 8]
420e7c: sub r12, rcx
420e7f: jmp 0x420d09
420e84: nop dword ptr [rax]
420e88: movabs rdx, 0x7fffffffffffffff
420e92: mov rax, r15
420e95: mov r12, r15
420e98: sub rdx, r15
420e9b: neg rax
420e9e: cmp r13, rdx
420ea1: setg dl
420ea4: jmp 0x420e0a
420ea9: nop dword ptr [rax]
420eb0: test r13, r13
420eb3: js 0x420f40
420eb9: mov r12, r13
420ebc: jmp 0x420d31
420ec1: nop dword ptr [rax]
420ec8: xor edx, edx
420eca: xor eax, eax
420ecc: xor r12d, r12d
420ecf: jmp 0x420e0a
420ed4: nop dword ptr [rax]
420ed8: mov edx, 1
420edd: mov rsi, r12
420ee0: mov qword ptr [rsp + 8], rdi
420ee5: call 0x420ac0
420eea: mov rdi, qword ptr [rsp + 8]
420eef: test eax, eax
420ef1: jne 0x420f1c
420ef3: mov rcx, qword ptr [rdi + 0x18]
420ef7: lea rdx, [rcx + r15]
420efb: jmp 0x420d3a
420f00: xor edx, edx
420f02: mov rsi, r12
420f05: mov qword ptr [rsp + 8], rdi
420f0a: call 0x420ac0
420f0f: mov rdi, qword ptr [rsp + 8]
420f14: test eax, eax
420f16: je 0x420e27
420f1c: mov r12, 0xffffffffffffffff
420f23: jmp 0x420d8e
420f28: nop dword ptr [rax + rax]
420f30: mov ebp, 1
420f35: jmp 0x420d60
420f3a: nop word ptr [rax + rax]
420f40: mov rax, 0xffffffffffffffc0
420f47: mov r12, 0xffffffffffffffff
420f4e: mov dword ptr fs:[rax], 0x16
420f55: jmp 0x420d8e
420f5a: nop word ptr [rax + rax]
420f60: endbr64 
420f64: test byte ptr [rdi], 8
420f67: je 0x420f6e
420f69: cmp esi, -1
420f6c: jne 0x420f78
420f6e: jmp 0x4205a0
420f73: nop dword ptr [rax + rax]
420f78: mov eax, 0xffffffff
420f7d: ret 
420f7e: nop 
420f80: endbr64 
420f84: push rbp
420f85: mov rbp, rdi
420f88: mov rdi, qword ptr [rdi + 0x38]
420f8c: test rdi, rdi
420f8f: je 0x420f97
420f91: test byte ptr [rbp], 1
420f95: je 0x420fb0
420f97: mov qword ptr [rbp + 0x38], 0
420f9f: mov rdi, rbp
420fa2: xor esi, esi
420fa4: pop rbp
420fa5: jmp 0x41f7f0
420faa: nop word ptr [rax + rax]
420fb0: call 0x426a00
420fb5: jmp 0x420f97
420fb7: nop word ptr [rax + rax]
420fc0: endbr64 
420fc4: push r13
420fc6: mov r13, rsi
420fc9: push r12
420fcb: mov r12, rcx
420fce: push rbp
420fcf: mov rbp, rdi
420fd2: push rbx
420fd3: sub rsp, 0x18
420fd7: test rdx, rdx
420fda: jne 0x421048
420fdc: xor esi, esi
420fde: mov rdi, r13
420fe1: call 0x401050
420fe6: mov rbx, rax
420fe9: movq xmm0, r13
420fee: xor ecx, ecx
420ff0: mov rdx, rbx
420ff3: mov rsi, r13
420ff6: punpcklqdq xmm0, xmm0
420ffa: mov rdi, rbp
420ffd: movaps xmmword ptr [rsp], xmm0
421001: call 0x41ecc0
421006: movdqa xmm0, xmmword ptr [rsp]
42100b: mov qword ptr [rbp + 8], r13
42100f: movups xmmword ptr [rbp + 0x18], xmm0
421013: test r12, r12
421016: je 0x421060
421018: movq xmm0, r12
42101d: movq xmm1, rbx
421022: mov qword ptr [rbp + 0x10], r12
421026: punpcklqdq xmm0, xmm1
42102a: movups xmmword ptr [rbp + 0x28], xmm0
42102e: mov qword ptr [rbp + 0xe0], 0
421039: add rsp, 0x18
42103d: pop rbx
42103e: pop rbp
42103f: pop r12
421041: pop r13
421043: ret 
421044: nop dword ptr [rax]
421048: add rdx, rsi
42104b: mov rbx, 0xffffffffffffffff
421052: cmp rsi, rdx
421055: cmovb rbx, rdx
421059: jmp 0x420fe9
42105b: nop dword ptr [rax + rax]
421060: mov qword ptr [rbp + 0x10], rbx
421064: movups xmmword ptr [rbp + 0x28], xmm0
421068: jmp 0x42102e
42106a: nop word ptr [rax + rax]
421070: endbr64 
421074: push r13
421076: mov r13, rsi
421079: push r12
42107b: mov r12, rdi
42107e: push rbp
42107f: mov rbp, rcx
421082: push rbx
421083: mov ebx, 0xffffffff
421088: sub rsp, 0x18
42108c: test edx, edx
42108e: cmovs edx, ebx
421091: movsxd rdx, edx
421094: test rdx, rdx
421097: jne 0x421110
421099: xor esi, esi
42109b: mov rdi, r13
42109e: call 0x401050
4210a3: mov rbx, rax
4210a6: movq xmm0, r13
4210ab: xor ecx, ecx
4210ad: mov rdx, rbx
4210b0: mov rsi, r13
4210b3: punpcklqdq xmm0, xmm0
4210b7: mov rdi, r12
4210ba: movaps xmmword ptr [rsp], xmm0
4210be: call 0x41ecc0
4210c3: movdqa xmm0, xmmword ptr [rsp]
4210c8: mov qword ptr [r12 + 8], r13
4210cd: movups xmmword ptr [r12 + 0x18], xmm0
4210d3: test rbp, rbp
4210d6: je 0x421128
4210d8: movq xmm0, rbp
4210dd: movq xmm1, rbx
4210e2: mov qword ptr [r12 + 0x10], rbp
4210e7: punpcklqdq xmm0, xmm1
4210eb: movups xmmword ptr [r12 + 0x28], xmm0
4210f1: mov qword ptr [r12 + 0xe0], 0
4210fd: add rsp, 0x18
421101: pop rbx
421102: pop rbp
421103: pop r12
421105: pop r13
421107: ret 
421108: nop dword ptr [rax + rax]
421110: add rdx, rsi
421113: mov rbx, 0xffffffffffffffff
42111a: cmp rsi, rdx
42111d: cmovb rbx, rdx
421121: jmp 0x4210a6
421123: nop dword ptr [rax + rax]
421128: mov qword ptr [r12 + 0x10], rbx
42112d: movups xmmword ptr [r12 + 0x28], xmm0
421133: jmp 0x4210f1
421135: nop word ptr cs:[rax + rax]
421140: endbr64 
421144: push r12
421146: mov r12, rsi
421149: push rbp
42114a: mov rbp, rdi
42114d: push rbx
42114e: mov ebx, 0xffffffff
421153: sub rsp, 0x10
421157: test edx, edx
421159: cmovs edx, ebx
42115c: movsxd rdx, edx
42115f: test rdx, rdx
421162: jne 0x4211c8
421164: xor esi, esi
421166: mov rdi, r12
421169: call 0x401050
42116e: mov rbx, rax
421171: movq xmm1, r12
421176: mov rdx, rbx
421179: mov rsi, r12
42117c: mov rdi, rbp
42117f: punpcklqdq xmm1, xmm1
421183: xor ecx, ecx
421185: movaps xmmword ptr [rsp], xmm1
421189: call 0x41ecc0
42118e: movdqa xmm1, xmmword ptr [rsp]
421193: movq xmm0, r12
421198: movq xmm2, rbx
42119d: punpcklqdq xmm0, xmm2
4211a1: or dword ptr [rbp], 8
4211a5: mov qword ptr [rbp + 0xe0], 0
4211b0: movups xmmword ptr [rbp + 8], xmm0
4211b4: movups xmmword ptr [rbp + 0x18], xmm1
4211b8: movups xmmword ptr [rbp + 0x28], xmm1
4211bc: add rsp, 0x10
4211c0: pop rbx
4211c1: pop rbp
4211c2: pop r12
4211c4: ret 
4211c5: nop dword ptr [rax]
4211c8: add rdx, rsi
4211cb: mov rbx, 0xffffffffffffffff
4211d2: cmp rsi, rdx
4211d5: cmovb rbx, rdx
4211d9: jmp 0x421171
4211db: nop dword ptr [rax + rax]
4211e0: endbr64 
4211e4: mov rax, qword ptr [rdi + 0x28]
4211e8: cmp qword ptr [rdi + 0x10], rax
4211ec: cmovae rax, qword ptr [rdi + 0x10]
4211f1: sub rax, qword ptr [rdi + 0x18]
4211f5: ret 
4211f6: nop word ptr cs:[rax + rax]
421200: endbr64 
421204: mov rax, qword ptr fs:[0x698]
42120d: shr rax, 2
421211: mov edx, 0x10000
421216: sub rax, 1
42121a: cmp rax, 0xffff
421220: ja 0x42123f
421222: mov rax, qword ptr fs:[0x698]
42122b: mov rdx, rax
42122e: shr rdx, 2
421232: cmp rax, 3
421236: mov eax, 0x40000
42123b: cmovbe rdx, rax
42123f: xor eax, eax
421241: cmp rdx, rdi
421244: setae al
421247: ret 
421248: nop dword ptr [rax + rax]
421250: endbr64 
421254: mov eax, dword ptr [rdi]
421256: cmp eax, 2
421259: je 0x421266
42125b: mov eax, 2
421260: xchg dword ptr [rdi], eax
421262: test eax, eax
421264: je 0x421280
421266: nop 
421267: xor r10d, r10d
42126a: mov edx, 2
42126f: mov esi, 0x80
421274: mov eax, 0xca
421279: syscall 
42127b: jmp 0x42125b
42127d: nop dword ptr [rax]
421280: ret 
421281: nop word ptr cs:[rax + rax]
42128b: nop dword ptr [rax + rax]
421290: endbr64 
421294: mov rax, qword ptr [rdi]
421297: nop 
421298: mov qword ptr [rip + 0x9f481], rax
42129f: ret 
4212a0: endbr64 
4212a4: mov rax, qword ptr [rdi]
4212a7: nop 
4212a8: mov qword ptr [rip + 0x9f469], rax
4212af: ret 
4212b0: endbr64 
4212b4: mov rax, qword ptr [rdi]
4212b7: cmp rax, 0x408
4212bd: jbe 0x4212c0
4212bf: ret 
4212c0: nop 
4212c1: mov qword ptr [rip + 0x9f490], rax
4212c8: add rax, 0x17
4212cc: mov edx, 1
4212d1: cmp rax, 0x1f
4212d5: jbe 0x4212e7
4212d7: and rax, 0xfffffffffffffff0
4212db: sub rax, 0x11
4212df: shr rax, 4
4212e3: lea rdx, [rax + 1]
4212e7: mov qword ptr [rip + 0x9f462], rdx
4212ee: ret 
4212ef: nop 
4212f0: endbr64 
4212f4: mov rax, qword ptr [rdi]
4212f7: cmp rax, 0xffff
4212fd: jbe 0x421300
4212ff: ret 
421300: nop 
421301: mov qword ptr [rip + 0x9f458], rax
421308: ret 
421309: nop dword ptr [rax]
421310: endbr64 
421314: mov rax, qword ptr [rdi]
421317: nop 
421318: mov qword ptr [rip + 0x9f449], rax
42131f: ret 
421320: test dil, 0xf
421324: jne 0x421420
42132a: lea r8, [rdi - 0x10]
42132e: mov rcx, qword ptr [rdi - 8]
421332: mov r9, r8
421335: mov rax, r8
421338: shr rax, 0xb
42133c: shr r9, 3
421340: mov rdx, rcx
421343: xor r9d, eax
421346: and rdx, 0xfffffffffffffff8
42134a: mov eax, 2
42134f: cmp r9b, 1
421353: cmove r9d, eax
421357: test cl, 2
42135a: je 0x421430
421360: mov rax, qword ptr [rip + 0x9fdb1]
421367: mov r10, rdi
42136a: sub rax, 1
42136e: and r10, rax
421371: lea r11, [r10 - 0x10]
421375: test r11, -0x11
42137c: je 0x4213c0
42137e: lea r11, [r10 - 1]
421382: cmp r11, 0x1ffe
421389: ja 0x4213c0
42138b: lea r11, [r10 - 0x40]
42138f: test r11, -0x41
421396: je 0x4213c0
421398: lea r11, [r10 - 0x100]
42139f: test r11, -0x101
4213a6: je 0x4213c0
4213a8: lea r11, [r10 - 0x400]
4213af: test r11, -0x401
4213b6: jne 0x421500
4213bc: nop dword ptr [rax]
4213c0: and ecx, 3
4213c3: cmp rcx, 2
4213c7: jne 0x421420
4213c9: mov rcx, qword ptr [rdi - 0x10]
4213cd: mov rdi, r8
4213d0: sub rdi, rcx
4213d3: add rcx, rdx
4213d6: or rcx, rdi
4213d9: test rcx, rax
4213dc: jne 0x421420
4213de: lea rax, [rdx - 1]
4213e2: lea rcx, [r8 + rax]
4213e6: movzx edx, byte ptr [rcx]
4213e9: cmp r9b, dl
4213ec: jne 0x421414
4213ee: jmp 0x4214d0
4213f3: nop dword ptr [rax + rax]
4213f8: lea rcx, [rdx + 0x10]
4213fc: cmp rcx, rax
4213ff: ja 0x421420
421401: sub rax, rdx
421404: lea rcx, [r8 + rax]
421408: movzx edx, byte ptr [rcx]
42140b: cmp dl, r9b
42140e: je 0x4214d0
421414: test rdx, rdx
421417: jne 0x4213f8
421419: nop dword ptr [rax]
421420: xor r8d, r8d
421423: mov rax, r8
421426: ret 
421427: nop word ptr [rax + rax]
421430: mov eax, dword ptr [rip + 0x9f36e]
421436: and eax, 2
421439: jne 0x421457
42143b: mov r10, qword ptr [rip + 0x9f306]
421442: cmp r10, r8
421445: ja 0x421420
421447: lea r11, [r8 + rdx]
42144b: add r10, qword ptr [rip + 0x9fbd6]
421452: cmp r11, r10
421455: jae 0x421420
421457: cmp rdx, 0x1f
42145b: jbe 0x421420
42145d: test cl, 8
421460: jne 0x421420
421462: test byte ptr [r8 + rdx + 8], 1
421468: je 0x421420
42146a: and ecx, 1
42146d: jne 0x42148f
42146f: mov rcx, qword ptr [rdi - 0x10]
421473: test cl, 0xf
421476: jne 0x421420
421478: mov rdi, r8
42147b: sub rdi, rcx
42147e: test eax, eax
421480: je 0x4214f0
421482: mov rax, qword ptr [rdi + 8]
421486: and rax, 0xfffffffffffffff8
42148a: cmp rcx, rax
42148d: jne 0x421420
42148f: add rdx, 7
421493: lea rcx, [r8 + rdx]
421497: movzx eax, byte ptr [rcx]
42149a: cmp r9b, al
42149d: jne 0x4214c4
42149f: jmp 0x4214d0
4214a1: nop dword ptr [rax]
4214a8: lea rcx, [rax + 0x10]
4214ac: cmp rcx, rdx
4214af: ja 0x421420
4214b5: sub rdx, rax
4214b8: lea rcx, [r8 + rdx]
4214bc: movzx eax, byte ptr [rcx]
4214bf: cmp al, r9b
4214c2: je 0x4214d0
4214c4: test rax, rax
4214c7: jne 0x4214a8
4214c9: jmp 0x421420
4214ce: nop 
4214d0: mov eax, r9d
4214d3: not eax
4214d5: mov byte ptr [rcx], al
4214d7: test rsi, rsi
4214da: je 0x421423
4214e0: mov qword ptr [rsi], rcx
4214e3: jmp 0x421423
4214e8: nop dword ptr [rax + rax]
4214f0: cmp qword ptr [rip + 0x9f251], rdi
4214f7: jbe 0x421482
4214f9: jmp 0x421420
4214fe: nop 
421500: cmp r10, 0x1000
421507: je 0x4213c0
42150d: jmp 0x421420
421512: nop word ptr cs:[rax + rax]
42151d: nop dword ptr [rax]
421520: push rbp
421521: mov r11, rsi
421524: xor r9d, r9d
421527: lea rsi, [rdi + 0x10]
42152b: push rbx
42152c: mov rax, qword ptr [rdi + 0x60]
421530: mov rbx, rdi
421533: xor r8d, r8d
421536: lea rdi, [rdi + 0x60]
42153a: mov rbp, qword ptr [rax + 8]
42153e: mov rcx, rbp
421541: and rcx, 0xfffffffffffffff8
421545: nop dword ptr [rax]
421548: mov rax, qword ptr [rsi]
42154b: test rax, rax
42154e: je 0x421568
421550: mov rdx, qword ptr [rax + 8]
421554: mov rax, qword ptr [rax + 0x10]
421558: add r9d, 1
42155c: and rdx, 0xfffffffffffffff8
421560: add r8, rdx
421563: test rax, rax
421566: jne 0x421550
421568: add rsi, 8
42156c: cmp rdi, rsi
42156f: jne 0x421548
421571: add rcx, r8
421574: lea r10, [rbx + 0x850]
42157b: mov esi, 1
421580: mov rax, qword ptr [rdi + 0x18]
421584: cmp rax, rdi
421587: je 0x4215a7
421589: nop dword ptr [rax]
421590: mov rdx, qword ptr [rax + 8]
421594: mov rax, qword ptr [rax + 0x18]
421598: add esi, 1
42159b: and rdx, 0xfffffffffffffff8
42159f: add rcx, rdx
4215a2: cmp rax, rdi
4215a5: jne 0x421590
4215a7: add rdi, 0x10
4215ab: cmp r10, rdi
4215ae: jne 0x421580
4215b0: mov rdx, qword ptr [rbx + 0x888]
4215b7: mov eax, dword ptr [r11 + 0x1c]
4215bb: add dword ptr [r11 + 8], r9d
4215bf: add eax, edx
4215c1: add dword ptr [r11 + 4], esi
4215c5: sub eax, ecx
4215c7: add dword ptr [r11 + 0x20], ecx
4215cb: mov dword ptr [r11 + 0x1c], eax
4215cf: lea rax, [rip + 0x9f1ca]
4215d6: add dword ptr [r11], edx
4215d9: add dword ptr [r11 + 0x18], r8d
4215dd: cmp rbx, rax
4215e0: je 0x4215e5
4215e2: pop rbx
4215e3: pop rbp
4215e4: ret 
4215e5: mov eax, dword ptr [rip + 0x9f13d]
4215eb: and ebp, 0xfffffff8
4215ee: pop rbx
4215ef: mov dword ptr [r11 + 0xc], eax
4215f3: mov rax, qword ptr [rip + 0x9f13e]
4215fa: mov dword ptr [r11 + 0x24], ebp
4215fe: pop rbp
4215ff: mov dword ptr [r11 + 0x10], eax
421603: mov dword ptr [r11 + 0x14], 0
42160b: ret 
42160c: nop dword ptr [rax]
421610: endbr64 
421614: mov rax, qword ptr [rdi]
421617: nop 
421618: mov dword ptr [rip + 0x9f112], 1
421622: mov qword ptr [rip + 0x9f0d7], rax
421629: ret 
42162a: nop word ptr [rax + rax]
421630: endbr64 
421634: mov rax, qword ptr [rdi]
421637: nop 
421638: mov dword ptr [rip + 0x9f0f2], 1
421642: mov qword ptr [rip + 0x9f0bf], rax
421649: ret 
42164a: nop word ptr [rax + rax]
421650: endbr64 
421654: mov rax, qword ptr [rdi]
421657: cmp rax, 0x2000000
42165d: jbe 0x421660
42165f: ret 
421660: nop 
421661: mov dword ptr [rip + 0x9f0c9], 1
42166b: mov qword ptr [rip + 0x9f09e], rax
421672: ret 
421673: nop word ptr cs:[rax + rax]
42167e: nop 
421680: endbr64 
421684: mov rax, qword ptr [rdi]
421687: nop 
421688: mov dword ptr [rip + 0x9f0a2], 1
421692: mov dword ptr [rip + 0x9f094], eax
421698: ret 
421699: nop dword ptr [rax]
4216a0: endbr64 
4216a4: mov rax, qword ptr [rdi]
4216a7: nop 
4216a8: mov dword ptr [rip + 0xa1606], eax
4216ae: ret 
4216af: nop 
4216b0: endbr64 
4216b4: mov rax, qword ptr [rdi]
4216b7: cmp rax, 0xa0
4216bd: jbe 0x4216c0
4216bf: ret 
4216c0: nop 
4216c1: lea rdx, [rax + 8]
4216c5: and rdx, 0xfffffffffffffff0
4216c9: test rax, rax
4216cc: mov eax, 0x10
4216d1: cmovne rax, rdx
4216d5: mov qword ptr [rip + 0xa15dc], rax
4216dc: ret 
4216dd: nop dword ptr [rax]
4216e0: push rax
4216e1: pop rax
4216e2: lea rax, [rip + 0x73be4]
4216e9: sub rsp, 0x10
4216ed: mov r9d, edx
4216f0: mov r10, rcx
4216f3: mov r8, rsi
4216f6: mov rdx, qword ptr [rip + 0x9f98b]
4216fd: lea rcx, [rip + 0x8a311]
421704: lea rsi, [rip + 0x74c85]
42170b: cmp byte ptr [rdx], 0
42170e: push rdi
42170f: push rax
421710: cmovne rcx, rax
421714: xor edi, edi
421716: xor eax, eax
421718: push r10
42171a: call 0x417ef0
42171f: mov rdi, qword ptr [rip + 0x9efa2]
421726: add rsp, 0x20
42172a: call 0x4184d0
42172f: call 0x4011b4
421734: nop word ptr cs:[rax + rax]
42173f: nop 
421740: push rax
421741: pop rax
421742: lea rsi, [rip + 0x89d36]
421749: xor eax, eax
42174b: mov rdx, rdi
42174e: sub rsp, 8
421752: mov edi, 1
421757: call 0x41af30
42175c: nop dword ptr [rax]
421760: push r13
421762: add rsi, rdi
421765: push r12
421767: push rbp
421768: push rbx
421769: sub rsp, 8
42176d: mov rbx, qword ptr [rip + 0x9f9a4]
421774: cmp rsi, 0x7fff
42177b: jbe 0x421880
421781: cmp rsi, 0x4000000
421788: ja 0x421890
42178e: mov rdi, qword ptr [rip + 0xa1503]
421795: lea rax, [rsi + rbx - 1]
42179a: neg rbx
42179d: and rbx, rax
4217a0: test rdi, rdi
4217a3: je 0x4217e7
4217a5: xor r9d, r9d
4217a8: mov r8d, 0xffffffff
4217ae: mov ecx, 0x4022
4217b3: xor edx, edx
4217b5: mov esi, 0x4000000
4217ba: call 0x451bc0
4217bf: mov qword ptr [rip + 0xa14ce], 0
4217ca: mov r12, rax
4217cd: cmp rax, -1
4217d1: je 0x4217e7
4217d3: test eax, 0x3ffffff
4217d8: je 0x421846
4217da: mov esi, 0x4000000
4217df: mov rdi, rax
4217e2: call 0x451c70
4217e7: xor r9d, r9d
4217ea: xor edx, edx
4217ec: xor edi, edi
4217ee: mov r8d, 0xffffffff
4217f4: mov ecx, 0x4022
4217f9: mov esi, 0x8000000
4217fe: call 0x451bc0
421803: cmp rax, -1
421807: je 0x4218b8
42180d: lea r12, [rax + 0x3ffffff]
421814: and r12, 0xfffffffffc000000
42181b: mov r13, r12
42181e: lea rbp, [r12 + 0x4000000]
421826: sub r13, rax
421829: jne 0x421900
42182f: mov qword ptr [rip + 0xa1462], rbp
421836: mov esi, 0x4000000
42183b: mov rdi, rbp
42183e: sub rsi, r13
421841: call 0x451c70
421846: mov edx, 3
42184b: mov rsi, rbx
42184e: mov rdi, r12
421851: call 0x451ca0
421856: test eax, eax
421858: jne 0x4218f0
42185e: movq xmm0, rbx
421863: punpcklqdq xmm0, xmm0
421867: movups xmmword ptr [r12 + 0x10], xmm0
42186d: nop 
42186e: add rsp, 8
421872: mov rax, r12
421875: pop rbx
421876: pop rbp
421877: pop r12
421879: pop r13
42187b: ret 
42187c: nop dword ptr [rax]
421880: mov esi, 0x8000
421885: jmp 0x42178e
42188a: nop word ptr [rax + rax]
421890: mov esi, 0x4000000
421895: cmp rdi, 0x4000000
42189c: jbe 0x42178e
4218a2: add rsp, 8
4218a6: xor r12d, r12d
4218a9: pop rbx
4218aa: mov rax, r12
4218ad: pop rbp
4218ae: pop r12
4218b0: pop r13
4218b2: ret 
4218b3: nop dword ptr [rax + rax]
4218b8: xor r9d, r9d
4218bb: mov r8d, 0xffffffff
4218c1: mov ecx, 0x4022
4218c6: xor edx, edx
4218c8: mov esi, 0x4000000
4218cd: xor edi, edi
4218cf: call 0x451bc0
4218d4: mov r12, rax
4218d7: cmp rax, -1
4218db: je 0x4218a2
4218dd: test eax, 0x3ffffff
4218e2: je 0x421846
4218e8: nop dword ptr [rax + rax]
4218f0: mov esi, 0x4000000
4218f5: mov rdi, r12
4218f8: call 0x451c70
4218fd: jmp 0x4218a2
4218ff: nop 
421900: mov rsi, r13
421903: mov rdi, rax
421906: call 0x451c70
42190b: jmp 0x421836
421910: sub rsp, 8
421914: mov rdx, qword ptr [rdi + 8]
421918: mov rax, qword ptr [rip + 0x9f7f9]
42191f: mov rcx, rdx
421922: and rcx, 0xfffffffffffffff8
421926: and edx, 2
421929: je 0x42198c
42192b: mov rsi, qword ptr [rdi]
42192e: mov r8, rdi
421931: sub rax, 1
421935: add rdi, 0x10
421939: and rdi, rax
42193c: sub r8, rsi
42193f: add rsi, rcx
421942: mov rdx, r8
421945: or rdx, rsi
421948: and rax, rdx
42194b: lea rdx, [rdi - 1]
42194f: and rdi, rdx
421952: or rax, rdi
421955: jne 0x421980
421957: lock dec dword ptr [rip + 0x9edca]
42195e: mov rax, rsi
421961: neg rax
421964: lock add qword ptr [rip + 0x9edcc], rax
42196c: mov rdi, r8
42196f: add rsp, 8
421973: jmp 0x451c70
421978: nop dword ptr [rax + rax]
421980: lea rdi, [rip + 0x74a31]
421987: call 0x421740
42198c: lea rcx, [rip + 0x75845]
421993: mov edx, 0xafd
421998: lea rsi, [rip + 0x746f1]
42199f: lea rdi, [rip + 0x746f3]
4219a6: call 0x4216e0
4219ab: nop dword ptr [rax + rax]
4219b0: push r12
4219b2: mov rax, qword ptr [rip + 0x9f75f]
4219b9: push rbp
4219ba: push rbx
4219bb: mov rdx, qword ptr [rdi + 8]
4219bf: mov r12, qword ptr [rdi]
4219c2: mov rbp, rdx
4219c5: and rbp, 0xfffffffffffffff8
4219c9: and edx, 2
4219cc: je 0x421aad
4219d2: mov r9, rdi
4219d5: lea rcx, [rax - 1]
4219d9: lea rdx, [rdi + 0x10]
4219dd: add rbp, r12
4219e0: sub r9, r12
4219e3: and rdx, rcx
4219e6: mov r8, r9
4219e9: or r8, rbp
4219ec: and r8, rcx
4219ef: lea rcx, [rdx - 1]
4219f3: and rdx, rcx
4219f6: or r8, rdx
4219f9: jne 0x421a98
4219ff: lea rbx, [rax + rsi + 7]
421a04: neg rax
421a07: add rbx, r12
421a0a: and rbx, rax
421a0d: cmp rbp, rbx
421a10: je 0x421a88
421a12: xor eax, eax
421a14: mov ecx, 1
421a19: mov rdx, rbx
421a1c: mov rsi, rbp
421a1f: mov rdi, r9
421a22: call 0x454430
421a27: cmp rax, -1
421a2b: je 0x421aa8
421a2d: lea r8, [rax + r12]
421a31: test r8b, 0xf
421a35: jne 0x421acc
421a3b: cmp qword ptr [r8], r12
421a3e: jne 0x421aeb
421a44: mov rax, rbx
421a47: sub rbx, rbp
421a4a: sub rax, r12
421a4d: or rax, 2
421a51: mov qword ptr [r8 + 8], rax
421a55: mov rax, rbx
421a58: lock xadd qword ptr [rip + 0x9ecd7], rax
421a61: add rbx, rax
421a64: mov rax, qword ptr [rip + 0x9ecd5]
421a6b: cmp rbx, rax
421a6e: jbe 0x421a7b
421a70: lock cmpxchg qword ptr [rip + 0x9ecc7], rbx
421a79: jne 0x421a64
421a7b: pop rbx
421a7c: mov rax, r8
421a7f: pop rbp
421a80: pop r12
421a82: ret 
421a83: nop dword ptr [rax + rax]
421a88: mov r8, rdi
421a8b: pop rbx
421a8c: pop rbp
421a8d: mov rax, r8
421a90: pop r12
421a92: ret 
421a93: nop dword ptr [rax + rax]
421a98: lea rdi, [rip + 0x74939]
421a9f: call 0x421740
421aa4: nop dword ptr [rax]
421aa8: xor r8d, r8d
421aab: jmp 0x421a7b
421aad: lea rcx, [rip + 0x75714]
421ab4: mov edx, 0xb23
421ab9: lea rsi, [rip + 0x745d0]
421ac0: lea rdi, [rip + 0x745d2]
421ac7: call 0x4216e0
421acc: lea rcx, [rip + 0x756f5]
421ad3: mov edx, 0xb3b
421ad8: lea rsi, [rip + 0x745b1]
421adf: lea rdi, [rip + 0x745c8]
421ae6: call 0x4216e0
421aeb: lea rcx, [rip + 0x756d6]
421af2: mov edx, 0xb3d
421af7: lea rsi, [rip + 0x74592]
421afe: lea rdi, [rip + 0x745c4]
421b05: call 0x4216e0
421b0a: nop word ptr [rax + rax]
421b10: push rax
421b11: pop rax
421b12: lea rcx, [rip + 0x7566f]
421b19: mov edx, 0x2a4
421b1e: lea rsi, [rip + 0x745bc]
421b25: lea rdi, [rip + 0x748cc]
421b2c: sub rsp, 8
421b30: call 0x4216e0
421b35: nop word ptr cs:[rax + rax]
421b40: cmp qword ptr [rip + 0xa1160], 0
421b48: push r12
421b4a: push rbp
421b4b: push rbx
421b4c: je 0x421c10
421b52: mov rbx, 0xffffffffffffffd8
421b59: mov rbp, qword ptr fs:[rbx]
421b5d: mov eax, dword ptr fs:[0x18]
421b65: test eax, eax
421b67: jne 0x421c20
421b6d: mov edx, 1
421b72: cmpxchg dword ptr [rip + 0xa1137], edx
421b79: mov r12, qword ptr [rip + 0xa1128]
421b80: test r12, r12
421b83: je 0x421bcf
421b85: mov rax, qword ptr [r12 + 0x878]
421b8d: cmp qword ptr [r12 + 0x880], 0
421b96: mov qword ptr [rip + 0xa110b], rax
421b9d: jne 0x421ca0
421ba3: mov qword ptr [r12 + 0x880], 1
421baf: test rbp, rbp
421bb2: je 0x421bcf
421bb4: mov rax, qword ptr [rbp + 0x880]
421bbb: test rax, rax
421bbe: je 0x421cbf
421bc4: sub rax, 1
421bc8: mov qword ptr [rbp + 0x880], rax
421bcf: mov eax, dword ptr fs:[0x18]
421bd7: test eax, eax
421bd9: jne 0x421c50
421bdb: sub dword ptr [rip + 0xa10ce], 1
421be2: test r12, r12
421be5: je 0x421c10
421be7: nop 
421be8: mov eax, dword ptr fs:[0x18]
421bf0: test eax, eax
421bf2: jne 0x421c80
421bf8: mov edx, 1
421bfd: cmpxchg dword ptr [r12], edx
421c02: mov qword ptr fs:[rbx], r12
421c06: mov rax, r12
421c09: pop rbx
421c0a: pop rbp
421c0b: pop r12
421c0d: ret 
421c0e: nop 
421c10: xor r12d, r12d
421c13: pop rbx
421c14: pop rbp
421c15: mov rax, r12
421c18: pop r12
421c1a: ret 
421c1b: nop dword ptr [rax + rax]
421c20: xor eax, eax
421c22: mov edx, 1
421c27: lock cmpxchg dword ptr [rip + 0xa1081], edx
421c2f: je 0x421b79
421c35: lea rdi, [rip + 0xa1074]
421c3c: call 0x421250
421c41: jmp 0x421b79
421c46: nop word ptr cs:[rax + rax]
421c50: xor eax, eax
421c52: xchg dword ptr [rip + 0xa1058], eax
421c58: cmp eax, 1
421c5b: jle 0x421be2
421c5d: xor r10d, r10d
421c60: mov edx, 1
421c65: mov esi, 0x81
421c6a: mov eax, 0xca
421c6f: lea rdi, [rip + 0xa103a]
421c76: syscall 
421c78: jmp 0x421be2
421c7d: nop dword ptr [rax]
421c80: xor eax, eax
421c82: mov edx, 1
421c87: lock cmpxchg dword ptr [r12], edx
421c8d: je 0x421c02
421c93: mov rdi, r12
421c96: call 0x421250
421c9b: jmp 0x421c02
421ca0: lea rcx, [rip + 0x754f1]
421ca7: mov edx, 0x302
421cac: lea rsi, [rip + 0x7442e]
421cb3: lea rdi, [rip + 0x7442f]
421cba: call 0x4216e0
421cbf: call 0x421b10
421cc4: nop word ptr cs:[rax + rax]
421ccf: nop 
421cd0: sub rsp, 8
421cd4: mov rcx, qword ptr [rdi + 8]
421cd8: mov rax, rcx
421cdb: and rax, 0xfffffffffffffff8
421cdf: cmp rax, qword ptr [rdi + rax]
421ce3: jne 0x421d8f
421ce9: mov rax, qword ptr [rdi + 0x10]
421ced: mov rdx, qword ptr [rdi + 0x18]
421cf1: cmp rdi, qword ptr [rax + 0x18]
421cf5: jne 0x421d70
421cf7: cmp rdi, qword ptr [rdx + 0x10]
421cfb: jne 0x421d70
421cfd: mov qword ptr [rax + 0x18], rdx
421d01: mov qword ptr [rdx + 0x10], rax
421d05: cmp rcx, 0x3ff
421d0c: jbe 0x421d3a
421d0e: mov rdx, qword ptr [rdi + 0x20]
421d12: test rdx, rdx
421d15: je 0x421d3a
421d17: cmp rdi, qword ptr [rdx + 0x28]
421d1b: jne 0x421d9b
421d1d: mov rcx, qword ptr [rdi + 0x28]
421d21: cmp rdi, qword ptr [rcx + 0x20]
421d25: jne 0x421d9b
421d27: cmp qword ptr [rax + 0x20], 0
421d2c: je 0x421d40
421d2e: mov qword ptr [rdx + 0x28], rcx
421d32: mov rax, qword ptr [rdi + 0x28]
421d36: mov qword ptr [rax + 0x20], rdx
421d3a: add rsp, 8
421d3e: ret 
421d3f: nop 
421d40: cmp rdi, rdx
421d43: je 0x421d80
421d45: movq xmm0, rdx
421d4a: movq xmm1, rcx
421d4f: punpcklqdq xmm0, xmm1
421d53: movups xmmword ptr [rax + 0x20], xmm0
421d57: mov rdx, qword ptr [rdi + 0x20]
421d5b: mov qword ptr [rdx + 0x28], rax
421d5f: mov rdx, qword ptr [rdi + 0x28]
421d63: mov qword ptr [rdx + 0x20], rax
421d67: jmp 0x421d3a
421d69: nop dword ptr [rax]
421d70: lea rdi, [rip + 0x743ad]
421d77: call 0x421740
421d7c: nop dword ptr [rax]
421d80: movq xmm0, rax
421d85: punpcklqdq xmm0, xmm0
421d89: movups xmmword ptr [rax + 0x20], xmm0
421d8d: jmp 0x421d3a
421d8f: lea rdi, [rip + 0x74371]
421d96: call 0x421740
421d9b: lea rdi, [rip + 0x7467e]
421da2: call 0x421740
421da7: nop word ptr [rax + rax]
421db0: push r15
421db2: lea rax, [rdi + 0x60]
421db6: mov r15, rdi
421db9: push r14
421dbb: push r13
421dbd: lea r13, [rdi + 0x10]
421dc1: push r12
421dc3: push rbp
421dc4: push rbx
421dc5: sub rsp, 0x18
421dc9: mov dword ptr [rdi + 8], 0
421dd0: mov qword ptr [rsp + 8], rax
421dd5: xor ebx, ebx
421dd7: xchg qword ptr [r13], rbx
421ddb: test rbx, rbx
421dde: jne 0x421e54
421de0: add r13, 8
421de4: cmp qword ptr [rsp + 8], r13
421de9: jne 0x421dd5
421deb: add rsp, 0x18
421def: pop rbx
421df0: pop rbp
421df1: pop r12
421df3: pop r13
421df5: pop r14
421df7: pop r15
421df9: ret 
421dfa: nop word ptr [rax + rax]
421e00: test byte ptr [r12 + r14 + 8], 1
421e06: je 0x421ed0
421e0c: and qword ptr [r12 + 8], 0xfffffffffffffffe
421e12: mov rax, qword ptr [r15 + 0x70]
421e16: mov qword ptr [r15 + 0x70], rbx
421e1a: mov qword ptr [rax + 0x18], rbx
421e1e: cmp rbp, 0x3ff
421e25: jbe 0x421e2f
421e27: pxor xmm1, xmm1
421e2b: movups xmmword ptr [rbx + 0x20], xmm1
421e2f: mov rsi, rbp
421e32: movq xmm0, rax
421e37: or rsi, 1
421e3b: movhps xmm0, qword ptr [rsp + 8]
421e40: mov qword ptr [rbx + 8], rsi
421e44: movups xmmword ptr [rbx + 0x10], xmm0
421e48: mov qword ptr [r12], rbp
421e4c: test rdx, rdx
421e4f: je 0x421de0
421e51: mov rbx, rdx
421e54: mov rax, qword ptr [rbx + 8]
421e58: mov edx, eax
421e5a: shr edx, 4
421e5d: sub edx, 2
421e60: lea rdx, [r15 + rdx*8 + 0x10]
421e65: cmp r13, rdx
421e68: jne 0x421efc
421e6e: mov rbp, rax
421e71: mov rdx, qword ptr [rbx + 0x10]
421e75: and rbp, 0xfffffffffffffff8
421e79: lea r12, [rbx + rbp]
421e7d: mov r14, qword ptr [r12 + 8]
421e82: and r14, 0xfffffffffffffff8
421e86: test al, 1
421e88: jne 0x421eb0
421e8a: mov rax, qword ptr [rbx]
421e8d: sub rbx, rax
421e90: add rbp, rax
421e93: mov rsi, qword ptr [rbx + 8]
421e97: and rsi, 0xfffffffffffffff8
421e9b: cmp rsi, rax
421e9e: jne 0x421ef0
421ea0: mov rdi, rbx
421ea3: mov qword ptr [rsp], rdx
421ea7: call 0x421cd0
421eac: mov rdx, qword ptr [rsp]
421eb0: cmp qword ptr [r15 + 0x60], r12
421eb4: jne 0x421e00
421eba: add rbp, r14
421ebd: or rbp, 1
421ec1: mov qword ptr [rbx + 8], rbp
421ec5: mov qword ptr [r15 + 0x60], rbx
421ec9: jmp 0x421e4c
421ecb: nop dword ptr [rax + rax]
421ed0: mov rdi, r12
421ed3: add rbp, r14
421ed6: mov qword ptr [rsp], rdx
421eda: call 0x421cd0
421edf: lea r12, [rbx + rbp]
421ee3: mov rdx, qword ptr [rsp]
421ee7: jmp 0x421e12
421eec: nop dword ptr [rax]
421ef0: lea rdi, [rip + 0x74589]
421ef7: call 0x421740
421efc: lea rdi, [rip + 0x7454d]
421f03: call 0x421740
421f08: nop dword ptr [rax + rax]
421f10: push r13
421f12: push r12
421f14: push rbp
421f15: mov rbp, rdi
421f18: push rbx
421f19: mov rbx, rsi
421f1c: sub rsp, 8
421f20: mov rax, qword ptr [rip + 0xa0d61]
421f27: mov rdx, qword ptr [rip + 0x9e7ba]
421f2e: test rax, rax
421f31: jne 0x421f4a
421f33: mov rax, qword ptr [rip + 0x9e7e6]
421f3a: test rax, rax
421f3d: je 0x422080
421f43: mov qword ptr [rip + 0xa0d3e], rax
421f4a: sub rax, 1
421f4e: cmp rax, rdx
421f51: jae 0x422108
421f57: mov r12, qword ptr [rip + 0xa0d22]
421f5e: test r12, r12
421f61: je 0x4220e0
421f67: xor esi, esi
421f69: mov ecx, 1
421f6e: jmp 0x421f91
421f70: cmpxchg dword ptr [r12], ecx
421f75: test eax, eax
421f77: je 0x421fb0
421f79: mov r12, qword ptr [r12 + 0x870]
421f81: mov rdx, qword ptr [rip + 0xa0cf8]
421f88: cmp r12, rdx
421f8b: je 0x4220b8
421f91: mov eax, dword ptr fs:[0x18]
421f99: test eax, eax
421f9b: je 0x421f70
421f9d: mov eax, esi
421f9f: lock cmpxchg dword ptr [r12], ecx
421fa5: setne al
421fa8: movzx eax, al
421fab: test eax, eax
421fad: jne 0x421f79
421faf: nop 
421fb0: mov rbp, 0xffffffffffffffd8
421fb7: mov r13, qword ptr fs:[rbp]
421fbc: mov eax, dword ptr fs:[0x18]
421fc4: test eax, eax
421fc6: jne 0x422140
421fcc: mov edx, 1
421fd1: cmpxchg dword ptr [rip + 0xa0cd8], edx
421fd8: test r13, r13
421fdb: je 0x421ff8
421fdd: mov rax, qword ptr [r13 + 0x880]
421fe4: test rax, rax
421fe7: je 0x42249e
421fed: sub rax, 1
421ff1: mov qword ptr [r13 + 0x880], rax
421ff8: mov rax, qword ptr [rip + 0xa0ca9]
421fff: lea rcx, [rip + 0xa0ca2]
422006: test rax, rax
422009: jne 0x42201f
42200b: jmp 0x42203c
42200d: nop dword ptr [rax]
422010: lea rcx, [rax + 0x878]
422017: test rdx, rdx
42201a: je 0x42203c
42201c: mov rax, rdx
42201f: cmp qword ptr [rax + 0x880], 0
422027: jne 0x422369
42202d: mov rdx, qword ptr [rax + 0x878]
422034: cmp rax, r12
422037: jne 0x422010
422039: mov qword ptr [rcx], rdx
42203c: add qword ptr [r12 + 0x880], 1
422045: mov eax, dword ptr fs:[0x18]
42204d: test eax, eax
42204f: jne 0x422170
422055: sub dword ptr [rip + 0xa0c54], 1
42205c: nop 
42205d: mov qword ptr fs:[rbp], r12
422062: mov rax, qword ptr [r12 + 0x870]
42206a: mov qword ptr [rip + 0xa0c0f], rax
422071: add rsp, 8
422075: mov rax, r12
422078: pop rbx
422079: pop rbp
42207a: pop r12
42207c: pop r13
42207e: ret 
42207f: nop 
422080: cmp qword ptr [rip + 0x9e691], rdx
422087: jae 0x421f4a
42208d: call 0x453e80
422092: test eax, eax
422094: jle 0x4221a8
42209a: shl eax, 3
42209d: mov rdx, qword ptr [rip + 0x9e644]
4220a4: cdqe 
4220a6: mov qword ptr [rip + 0xa0bdb], rax
4220ad: jmp 0x421f4a
4220b2: nop word ptr [rax + rax]
4220b8: cmp rbx, rdx
4220bb: je 0x4220f8
4220bd: nop 
4220be: mov eax, dword ptr fs:[0x18]
4220c6: test eax, eax
4220c8: jne 0x4221c8
4220ce: mov ecx, 1
4220d3: cmpxchg dword ptr [rdx], ecx
4220d6: mov r12, rdx
4220d9: jmp 0x421fb0
4220de: nop 
4220e0: lea r12, [rip + 0x9e6b9]
4220e7: mov qword ptr [rip + 0xa0b92], r12
4220ee: jmp 0x421f67
4220f3: nop dword ptr [rax + rax]
4220f8: mov rdx, qword ptr [rbx + 0x870]
4220ff: jmp 0x4220bd
422101: nop dword ptr [rax]
422108: lea rcx, [rdx + 1]
42210c: mov rax, rdx
42210f: cmp dword ptr fs:[0x18], 0
422118: je 0x42211b
42211b: cmpxchg qword ptr [rip + 0x9e5c5], rcx
422123: cmp rax, rdx
422126: je 0x4221e9
42212c: mov rdx, qword ptr [rip + 0x9e5b5]
422133: mov rax, qword ptr [rip + 0xa0b4e]
42213a: jmp 0x421f4a
42213f: nop 
422140: xor eax, eax
422142: mov edx, 1
422147: lock cmpxchg dword ptr [rip + 0xa0b61], edx
42214f: je 0x421fd8
422155: lea rdi, [rip + 0xa0b54]
42215c: call 0x421250
422161: jmp 0x421fd8
422166: nop word ptr cs:[rax + rax]
422170: xor eax, eax
422172: xchg dword ptr [rip + 0xa0b38], eax
422178: cmp eax, 1
42217b: jle 0x42205c
422181: xor r10d, r10d
422184: mov edx, 1
422189: mov esi, 0x81
42218e: mov eax, 0xca
422193: lea rdi, [rip + 0xa0b16]
42219a: syscall 
42219c: jmp 0x42205c
4221a1: nop dword ptr [rax]
4221a8: mov qword ptr [rip + 0xa0ad5], 0x10
4221b3: mov rdx, qword ptr [rip + 0x9e52e]
4221ba: mov eax, 0x10
4221bf: jmp 0x421f4a
4221c4: nop dword ptr [rax]
4221c8: xor eax, eax
4221ca: mov ecx, 1
4221cf: lock cmpxchg dword ptr [rdx], ecx
4221d3: mov r12, rdx
4221d6: je 0x421fb0
4221dc: mov rdi, rdx
4221df: call 0x421250
4221e4: jmp 0x421fb0
4221e9: mov rsi, qword ptr [rip + 0x9e518]
4221f0: lea rdi, [rbp + 0x8c8]
4221f7: call 0x421760
4221fc: mov rbx, rax
4221ff: test rax, rax
422202: je 0x422388
422208: lea r12, [rbx + 0x20]
42220c: lea rax, [rbx + 0x80]
422213: mov qword ptr [rbx], r12
422216: lea rdx, [rbx + 0x870]
42221d: nop dword ptr [rax]
422220: movq xmm0, rax
422225: add rax, 0x10
422229: punpcklqdq xmm0, xmm0
42222d: movups xmmword ptr [rax], xmm0
422230: cmp rdx, rax
422233: jne 0x422220
422235: lea rax, [rip + 0x9e564]
42223c: cmp r12, rax
42223f: je 0x4223c0
422245: or dword ptr [rbx + 0x24], 2
422249: mov dword ptr [rbx + 0x28], 0
422250: lea rcx, [rbx + 0x8c8]
422257: lea rdx, [rbx + 0x8b8]
42225e: mov qword ptr [rbx + 0x8a0], 1
422269: mov rax, qword ptr [rbx + 0x10]
42226d: mov qword ptr [rbx + 0x8b0], rax
422274: mov qword ptr [rbx + 0x8a8], rax
42227b: and ecx, 0xf
42227e: je 0x422287
422280: sub rdx, rcx
422283: add rdx, 0x10
422287: add rax, rbx
42228a: mov qword ptr [rbx + 0x80], rdx
422291: sub rax, rdx
422294: or rax, 1
422298: mov qword ptr [rdx + 8], rax
42229c: nop 
42229d: mov rax, 0xffffffffffffffd8
4222a4: mov rbp, qword ptr fs:[rax]
4222a8: mov qword ptr fs:[rax], r12
4222ac: mov dword ptr [rbx + 0x20], 0
4222b3: mov eax, dword ptr fs:[0x18]
4222bb: test eax, eax
4222bd: jne 0x422452
4222c3: mov edx, 1
4222c8: cmpxchg dword ptr [rip + 0xa09d1], edx
4222cf: mov rax, qword ptr [rip + 0x9ed3a]
4222d6: mov qword ptr [rbx + 0x890], rax
4222dd: mov qword ptr [rip + 0x9ed2c], r12
4222e4: mov eax, dword ptr fs:[0x18]
4222ec: test eax, eax
4222ee: jne 0x422421
4222f4: sub dword ptr [rip + 0xa09a5], 1
4222fb: mov eax, dword ptr fs:[0x18]
422303: test eax, eax
422305: jne 0x422478
42230b: mov edx, 1
422310: cmpxchg dword ptr [rip + 0xa0999], edx
422317: test rbp, rbp
42231a: je 0x422337
42231c: mov rax, qword ptr [rbp + 0x880]
422323: test rax, rax
422326: je 0x42249e
42232c: sub rax, 1
422330: mov qword ptr [rbp + 0x880], rax
422337: mov eax, dword ptr fs:[0x18]
42233f: test eax, eax
422341: jne 0x4223f0
422347: sub dword ptr [rip + 0xa0962], 1
42234e: mov eax, dword ptr fs:[0x18]
422356: test eax, eax
422358: jne 0x4223d0
42235a: mov edx, 1
42235f: cmpxchg dword ptr [r12], edx
422364: jmp 0x422071
422369: lea rcx, [rip + 0x74ef0]
422370: mov edx, 0x31c
422375: lea rsi, [rip + 0x73d65]
42237c: lea rdi, [rip + 0x73dbe]
422383: call 0x4216e0
422388: mov rsi, qword ptr [rip + 0x9e379]
42238f: mov edi, 0x8c8
422394: call 0x421760
422399: mov rbx, rax
42239c: test rax, rax
42239f: jne 0x422208
4223a5: cmp dword ptr fs:[0x18], 0
4223ae: je 0x4223b1
4223b1: dec qword ptr [rip + 0x9e330]
4223b8: xor r12d, r12d
4223bb: jmp 0x422071
4223c0: mov qword ptr [rip + 0xa08ed], 0x80
4223cb: jmp 0x422249
4223d0: xor eax, eax
4223d2: mov edx, 1
4223d7: lock cmpxchg dword ptr [r12], edx
4223dd: je 0x422071
4223e3: mov rdi, r12
4223e6: call 0x421250
4223eb: jmp 0x422071
4223f0: xor eax, eax
4223f2: xchg dword ptr [rip + 0xa08b8], eax
4223f8: sub eax, 1
4223fb: jle 0x42234e
422401: xor r10d, r10d
422404: mov edx, 1
422409: mov esi, 0x81
42240e: mov eax, 0xca
422413: lea rdi, [rip + 0xa0896]
42241a: syscall 
42241c: jmp 0x42234e
422421: xor eax, eax
422423: xchg dword ptr [rip + 0xa0877], eax
422429: sub eax, 1
42242c: jle 0x4222fb
422432: xor r10d, r10d
422435: mov edx, 1
42243a: mov esi, 0x81
42243f: mov eax, 0xca
422444: lea rdi, [rip + 0xa0855]
42244b: syscall 
42244d: jmp 0x4222fb
422452: xor eax, eax
422454: mov edx, 1
422459: lock cmpxchg dword ptr [rip + 0xa083f], edx
422461: je 0x4222cf
422467: lea rdi, [rip + 0xa0832]
42246e: call 0x421250
422473: jmp 0x4222cf
422478: xor eax, eax
42247a: mov edx, 1
42247f: lock cmpxchg dword ptr [rip + 0xa0829], edx
422487: je 0x422317
42248d: lea rdi, [rip + 0xa081c]
422494: call 0x421250
422499: jmp 0x422317
42249e: call 0x421b10
4224a3: nop word ptr cs:[rax + rax]
4224ae: nop 
4224b0: push rbp
4224b1: sub rsp, 0x10
4224b5: nop 
4224b6: lea rax, [rip + 0x9e2e3]
4224bd: cmp rdi, rax
4224c0: je 0x422500
4224c2: mov eax, dword ptr fs:[0x18]
4224ca: test eax, eax
4224cc: jne 0x422530
4224ce: sub dword ptr [rdi], 1
4224d1: mov eax, dword ptr fs:[0x18]
4224d9: test eax, eax
4224db: jne 0x422550
4224dd: mov edx, 1
4224e2: cmpxchg dword ptr [rip + 0x9e2b7], edx
4224e9: lea rax, [rip + 0x9e2b0]
4224f0: add rsp, 0x10
4224f4: pop rbp
4224f5: ret 
4224f6: nop word ptr cs:[rax + rax]
422500: mov rbp, rsi
422503: mov eax, dword ptr fs:[0x18]
42250b: test eax, eax
42250d: jne 0x422580
42250f: sub dword ptr [rdi], 1
422512: call 0x421b40
422517: test rax, rax
42251a: jne 0x4224f0
42251c: add rsp, 0x10
422520: mov rdi, rbp
422523: lea rsi, [rip + 0x9e276]
42252a: pop rbp
42252b: jmp 0x421f10
422530: xor eax, eax
422532: xchg dword ptr [rdi], eax
422534: cmp eax, 1
422537: jle 0x4224d1
422539: xor r10d, r10d
42253c: mov edx, 1
422541: mov esi, 0x81
422546: mov eax, 0xca
42254b: syscall 
42254d: jmp 0x4224d1
42254f: nop 
422550: xor eax, eax
422552: mov edx, 1
422557: lock cmpxchg dword ptr [rip + 0x9e241], edx
42255f: lea rax, [rip + 0x9e23a]
422566: je 0x4224f0
422568: mov rdi, rax
42256b: mov qword ptr [rsp + 8], rax
422570: call 0x421250
422575: mov rax, qword ptr [rsp + 8]
42257a: jmp 0x4224f0
42257f: nop 
422580: xor eax, eax
422582: xchg dword ptr [rdi], eax
422584: cmp eax, 1
422587: jle 0x422512
422589: xor r10d, r10d
42258c: mov edx, 1
422591: mov esi, 0x81
422596: mov eax, 0xca
42259b: syscall 
42259d: jmp 0x422512
4225a2: nop word ptr cs:[rax + rax]
4225ad: nop dword ptr [rax]
4225b0: endbr64 
4225b4: mov eax, dword ptr [rdi]
4225b6: test eax, eax
4225b8: je 0x4225fc
4225ba: lea rax, [rip + 0x2fef]
4225c1: mov dword ptr [rip + 0xa06c5], 1
4225cb: mov qword ptr [rip + 0x9e1be], rax
4225d2: lea rax, [rip + 0x2a77]
4225d9: mov qword ptr [rip + 0xa0698], rax
4225e0: lea rax, [rip + 0x3429]
4225e7: mov qword ptr [rip + 0x9e19a], rax
4225ee: lea rax, [rip + 0x319b]
4225f5: mov qword ptr [rip + 0x9e184], rax
4225fc: ret 
4225fd: nop dword ptr [rax]
422600: push r15
422602: push r14
422604: push r13
422606: push r12
422608: push rbp
422609: push rbx
42260a: sub rsp, 0x1000
422611: or qword ptr [rsp], 0
422616: sub rsp, 0x1c8
42261d: xor edx, edx
42261f: mov rax, qword ptr fs:[0x28]
422628: mov qword ptr [rsp + 0x11b8], rax
422630: xor eax, eax
422632: lea rax, [rip + 0x9e167]
422639: mov qword ptr [rsp + 0x60], 0
422642: mov r15, rdi
422645: mov qword ptr [rsp], rax
422649: lea rax, [rsp + 0x1d0]
422651: lea r14, [rsp + 0x90]
422659: mov qword ptr [rsp + 0x80], rax
422661: lea rax, [rsp + 0x1e0]
422669: lea r13, [rsp + 0xa8]
422671: mov qword ptr [rsp + 0x58], 0
42267a: mov qword ptr [rsp + 0x50], 0
422683: mov qword ptr [rsp + 0x48], 0
42268c: mov qword ptr [rsp + 0x30], 0
422695: mov qword ptr [rsp + 0x40], 0
42269e: mov qword ptr [rsp + 0x28], 0
4226a7: mov qword ptr [rsp + 0x38], 0
4226b0: mov qword ptr [rsp + 0x88], rax
4226b8: lea eax, [rdx + 1]
4226bb: lea rsi, [rip + 0x73a98]
4226c2: mov rdi, r15
4226c5: mov dword ptr [rsp + 0x1c], eax
4226c9: xor eax, eax
4226cb: call 0x46c9e0
4226d0: mov eax, dword ptr fs:[0x18]
4226d8: test eax, eax
4226da: mov rbx, qword ptr [rsp]
4226de: movdqa xmm2, xmmword ptr [rip + 0x7396a]
4226e6: pxor xmm1, xmm1
4226ea: jne 0x422b53
4226f0: mov edi, 1
4226f5: cmpxchg dword ptr [rbx], edi
4226f8: mov rax, qword ptr [rsp]
4226fc: mov rcx, r14
4226ff: xor r9d, r9d
422702: xor r11d, r11d
422705: mov r8, qword ptr [rsp + 0x80]
42270d: mov r12, qword ptr [rax + 0x60]
422711: lea rsi, [rax + 0x10]
422715: mov r10, qword ptr [r12 + 8]
42271a: and r10, 0xfffffffffffffff8
42271e: jmp 0x422743
422720: mov qword ptr [rcx + 0x18], 0
422728: xor edx, edx
42272a: movaps xmmword ptr [rcx], xmm1
42272d: imul rdx, qword ptr [rcx + 8]
422732: add rcx, 0x20
422736: add rsi, 8
42273a: mov qword ptr [rcx - 0x10], rdx
42273e: cmp rcx, r8
422741: je 0x422783
422743: mov rax, qword ptr [rsi]
422746: test rax, rax
422749: je 0x422720
42274b: mov rdi, qword ptr [rax + 8]
42274f: xor edx, edx
422751: and rdi, 0xfffffffffffffff8
422755: nop dword ptr [rax]
422758: mov rax, qword ptr [rax + 0x10]
42275c: add rdx, 1
422760: test rax, rax
422763: jne 0x422758
422765: mov rax, rdi
422768: mov qword ptr [rcx + 8], rdi
42276c: add r9, rdx
42276f: imul rax, rdx
422773: mov qword ptr [rcx + 0x18], rdx
422777: add r11, rax
42277a: lea rax, [rdi - 0xf]
42277e: mov qword ptr [rcx], rax
422781: jmp 0x42272d
422783: mov rax, qword ptr [rsp]
422787: mov qword ptr [rsp + 8], r9
42278c: mov ebx, 1
422791: mov qword ptr [rsp + 0x10], r11
422796: mov r8, qword ptr [rsp + 0x88]
42279e: lea r11, [r14 + 0x1130]
4227a5: lea r9, [rax + 0x60]
4227a9: jmp 0x4227d4
4227ab: nop dword ptr [rax + rax]
4227b0: mov qword ptr [r8 - 0x10], 0
4227b8: xor eax, eax
4227ba: add r10, qword ptr [r8]
4227bd: add r8, 0x20
4227c1: add rbx, rax
4227c4: add r9, 0x10
4227c8: mov rbp, r10
4227cb: cmp r11, r8
4227ce: je 0x422860
4227d4: mov rdx, qword ptr [r9 + 0x10]
4227d8: movaps xmmword ptr [r8 - 0x10], xmm2
4227dd: movaps xmmword ptr [r8], xmm1
4227e1: test rdx, rdx
4227e4: je 0x4227b0
4227e6: cmp rdx, r9
4227e9: je 0x4227b0
4227eb: mov ebp, 1
4227f0: xor esi, esi
4227f2: mov rcx, 0xffffffffffffffff
4227f9: xor edi, edi
4227fb: nop dword ptr [rax + rax]
422800: mov rax, qword ptr [rdx + 8]
422804: mov rdx, qword ptr [rdx + 0x10]
422808: add rdi, rax
42280b: cmp rcx, rax
42280e: cmova rcx, rax
422812: cmp rsi, rax
422815: cmovb rsi, rax
422819: mov rax, rbp
42281c: lea rbp, [rbp + 1]
422820: cmp rdx, r9
422823: jne 0x422800
422825: movq xmm0, rcx
42282a: movq xmm3, rsi
42282f: movq xmm4, rax
422834: punpcklqdq xmm0, xmm3
422838: movaps xmmword ptr [r8 - 0x10], xmm0
42283d: movq xmm0, rdi
422842: punpcklqdq xmm0, xmm4
422846: movaps xmmword ptr [r8], xmm0
42284a: test rax, rax
42284d: jne 0x4227ba
422853: jmp 0x4227b0
422858: nop dword ptr [rax + rax]
422860: lea rdi, [rip + 0x9df39]
422867: cmp qword ptr [rsp], rdi
42286b: jne 0x4229f8
422871: mov qword ptr [rsp + 0x78], 0
42287a: mov qword ptr [rsp + 0x20], 0
422883: mov qword ptr [rsp + 0x70], 0
42288c: mov eax, dword ptr fs:[0x18]
422894: test eax, eax
422896: jne 0x422b29
42289c: mov rax, qword ptr [rsp]
4228a0: sub dword ptr [rax], 1
4228a3: mov rdi, qword ptr [rsp + 8]
4228a8: lea rax, [rsp + 0xa0]
4228b0: add qword ptr [rsp + 0x28], rdi
4228b5: xor r12d, r12d
4228b8: mov rdi, qword ptr [rsp + 0x10]
4228bd: add qword ptr [rsp + 0x30], rdi
4228c2: mov rdi, r13
4228c5: mov r13, rbp
4228c8: add qword ptr [rsp + 0x38], rbx
4228cd: add qword ptr [rsp + 0x40], rbp
4228d2: mov rbp, rdi
4228d5: mov qword ptr [rsp + 0x68], rbx
4228da: mov rbx, rax
4228dd: nop dword ptr [rax]
4228e0: mov rax, r12
4228e3: shl rax, 5
4228e7: mov r9, qword ptr [rbp + rax]
4228ec: cmp r12, 0xa
4228f0: je 0x422918
4228f2: test r9, r9
4228f5: je 0x422918
4228f7: mov rdx, qword ptr [r14 + rax]
4228fb: mov r8, qword ptr [rbx + rax]
4228ff: mov rdi, r15
422902: lea rsi, [rip + 0x73ba7]
422909: mov rcx, qword ptr [rsp + rax + 0x98]
422911: xor eax, eax
422913: call 0x46c9e0
422918: add r12, 1
42291c: cmp r12, 0x89
422923: jne 0x4228e0
422925: mov r9, qword ptr [rsp + 0x1e8]
42292d: mov rax, rbp
422930: mov rbx, qword ptr [rsp + 0x68]
422935: mov rbp, r13
422938: mov r13, rax
42293b: test r9, r9
42293e: jne 0x422a34
422944: mov r12, qword ptr [rsp]
422948: mov r9, rbp
42294b: mov r8, rbx
42294e: mov rdi, r15
422951: lea rsi, [rip + 0x73bd0]
422958: lea rbp, [rip + 0x9de41]
42295f: mov rax, qword ptr [r12 + 0x888]
422967: mov rdx, qword ptr [r12 + 0x890]
42296f: mov rbx, r12
422972: add qword ptr [rsp + 0x48], rax
422977: add qword ptr [rsp + 0x50], rdx
42297c: push rdx
42297d: push rax
42297e: mov rcx, qword ptr [rsp + 0x20]
422983: xor eax, eax
422985: mov rdx, qword ptr [rsp + 0x18]
42298a: call 0x46c9e0
42298f: pop rax
422990: pop rdx
422991: cmp r12, rbp
422994: je 0x422a62
42299a: mov r12, qword ptr [rsp + 0x70]
42299f: mov r8, qword ptr [rsp + 0x78]
4229a4: mov rdi, r15
4229a7: xor eax, eax
4229a9: mov rcx, qword ptr [rsp + 0x20]
4229ae: lea rsi, [rip + 0x73c1b]
4229b5: mov rdx, r12
4229b8: call 0x46c9e0
4229bd: mov rdi, qword ptr [rsp + 0x20]
4229c2: mov rsi, r15
4229c5: add qword ptr [rsp + 0x60], rdi
4229ca: lea rdi, [rip + 0x737a1]
4229d1: add qword ptr [rsp + 0x58], r12
4229d6: call 0x4738d0
4229db: mov rax, qword ptr [rbx + 0x870]
4229e2: mov qword ptr [rsp], rax
4229e6: cmp rax, rbp
4229e9: je 0x422abc
4229ef: mov edx, dword ptr [rsp + 0x1c]
4229f3: jmp 0x4226b8
4229f8: and r12, 0xfffffffffc000000
4229ff: xor ecx, ecx
422a01: xor edx, edx
422a03: xor eax, eax
422a05: nop dword ptr [rax]
422a08: add rax, qword ptr [r12 + 0x10]
422a0d: add rdx, qword ptr [r12 + 0x18]
422a12: add rcx, 1
422a16: mov r12, qword ptr [r12 + 8]
422a1b: test r12, r12
422a1e: jne 0x422a08
422a20: mov qword ptr [rsp + 0x70], rax
422a25: mov qword ptr [rsp + 0x20], rdx
422a2a: mov qword ptr [rsp + 0x78], rcx
422a2f: jmp 0x42288c
422a34: mov r8, qword ptr [rsp + 0x1e0]
422a3c: lea rsi, [rip + 0x73aa5]
422a43: mov rdi, r15
422a46: xor eax, eax
422a48: mov rcx, qword ptr [rsp + 0x1d8]
422a50: mov rdx, qword ptr [rsp + 0x1d0]
422a58: call 0x46c9e0
422a5d: jmp 0x422944
422a62: mov rbx, qword ptr [rsp]
422a66: lea rsi, [rip + 0x73bd3]
422a6d: mov rdi, r15
422a70: xor eax, eax
422a72: mov rdx, qword ptr [rbx + 0x888]
422a79: mov rcx, rdx
422a7c: call 0x46c9e0
422a81: mov rsi, r15
422a84: lea rdi, [rip + 0x736e7]
422a8b: mov rax, qword ptr [rbx + 0x888]
422a92: add qword ptr [rsp + 0x58], rax
422a97: add qword ptr [rsp + 0x60], rax
422a9c: call 0x4738d0
422aa1: mov rax, qword ptr [rbx + 0x870]
422aa8: lea rbx, [rip + 0x9dcf1]
422aaf: mov qword ptr [rsp], rax
422ab3: cmp rax, rbx
422ab6: jne 0x4229ef
422abc: mov eax, dword ptr [rip + 0x9dc66]
422ac2: push qword ptr [rsp + 0x60]
422ac6: lea rsi, [rip + 0x73bbb]
422acd: mov rdi, r15
422ad0: push qword ptr [rsp + 0x60]
422ad4: push qword ptr [rsp + 0x60]
422ad8: push qword ptr [rsp + 0x60]
422adc: push qword ptr [rip + 0x9dc56]
422ae2: push rax
422ae3: xor eax, eax
422ae5: mov r9, qword ptr [rsp + 0x70]
422aea: mov r8, qword ptr [rsp + 0x68]
422aef: mov rcx, qword ptr [rsp + 0x60]
422af4: mov rdx, qword ptr [rsp + 0x58]
422af9: call 0x46c9e0
422afe: add rsp, 0x30
422b02: mov rax, qword ptr [rsp + 0x11b8]
422b0a: xor rax, qword ptr fs:[0x28]
422b13: jne 0x422b7e
422b15: add rsp, 0x11c8
422b1c: xor eax, eax
422b1e: pop rbx
422b1f: pop rbp
422b20: pop r12
422b22: pop r13
422b24: pop r14
422b26: pop r15
422b28: ret 
422b29: mov rdi, qword ptr [rsp]
422b2d: xor eax, eax
422b2f: xchg dword ptr [rdi], eax
422b31: cmp eax, 1
422b34: jle 0x4228a3
422b3a: xor r10d, r10d
422b3d: mov edx, 1
422b42: mov esi, 0x81
422b47: mov eax, 0xca
422b4c: syscall 
422b4e: jmp 0x4228a3
422b53: xor eax, eax
422b55: mov edi, 1
422b5a: lock cmpxchg dword ptr [rbx], edi
422b5e: je 0x4226f8
422b64: mov rdi, qword ptr [rsp]
422b68: call 0x421250
422b6d: movdqa xmm2, xmmword ptr [rip + 0x734db]
422b75: pxor xmm1, xmm1
422b79: jmp 0x4226f8
422b7e: call 0x4547a0
422b83: nop word ptr cs:[rax + rax]
422b8e: nop 
422b90: mov rax, qword ptr [rip + 0x9dc69]
422b97: push r12
422b99: push rbp
422b9a: push rbx
422b9b: mov rbx, qword ptr [rax + 8]
422b9f: and rbx, 0xfffffffffffffff8
422ba3: lea rax, [rbx - 0x21]
422ba7: cmp rax, rdi
422baa: jbe 0x422bdb
422bac: mov rdx, qword ptr [rip + 0x9e565]
422bb3: sub rax, rdi
422bb6: neg rdx
422bb9: and rdx, rax
422bbc: mov r12, rdx
422bbf: je 0x422bdb
422bc1: xor edi, edi
422bc3: call qword ptr [rip + 0x9e46f]
422bc9: mov rbp, rax
422bcc: mov rax, qword ptr [rip + 0x9dc2d]
422bd3: add rax, rbx
422bd6: cmp rbp, rax
422bd9: je 0x422be8
422bdb: xor eax, eax
422bdd: pop rbx
422bde: pop rbp
422bdf: pop r12
422be1: ret 
422be2: nop word ptr [rax + rax]
422be8: mov rdi, r12
422beb: neg rdi
422bee: call qword ptr [rip + 0x9e444]
422bf4: mov rax, qword ptr [rip + 0xa0075]
422bfb: test rax, rax
422bfe: jne 0x422c38
422c00: xor edi, edi
422c02: call qword ptr [rip + 0x9e430]
422c08: nop 
422c09: test rax, rax
422c0c: je 0x422bdb
422c0e: sub rbp, rax
422c11: je 0x422bdb
422c13: mov rax, qword ptr [rip + 0x9dbe6]
422c1a: sub rbx, rbp
422c1d: sub qword ptr [rip + 0x9e404], rbp
422c24: or rbx, 1
422c28: mov qword ptr [rax + 8], rbx
422c2c: mov eax, 1
422c31: jmp 0x422bdd
422c33: nop dword ptr [rax + rax]
422c38: call rax
422c3a: jmp 0x422c00
422c3c: nop dword ptr [rax]
422c40: push r15
422c42: push r14
422c44: push r13
422c46: mov r13d, edx
422c49: push r12
422c4b: push rbp
422c4c: push rbx
422c4d: sub rsp, 0x48
422c51: mov rax, qword ptr fs:[0x28]
422c5a: mov qword ptr [rsp + 0x38], rax
422c5f: xor eax, eax
422c61: mov rax, qword ptr [rsi + 8]
422c65: mov rbx, rax
422c68: and rbx, 0xfffffffffffffff8
422c6c: mov rdx, rbx
422c6f: neg rdx
422c72: cmp rsi, rdx
422c75: ja 0x422f20
422c7b: mov r12, rsi
422c7e: test sil, 0xf
422c82: jne 0x422f20
422c88: cmp rbx, 0x1f
422c8c: jbe 0x422f30
422c92: test al, 8
422c94: jne 0x422f30
422c9a: mov rdx, qword ptr fs:[0xffffffffffffffc8]
422ca3: mov rbp, rdi
422ca6: test rdx, rdx
422ca9: je 0x422ce3
422cab: lea rax, [rbx - 0x11]
422caf: shr rax, 4
422cb3: cmp qword ptr [rip + 0x9da96], rax
422cba: jbe 0x422ce3
422cbc: lea rsi, [rsi + 0x10]
422cc0: cmp rdx, qword ptr [r12 + 0x18]
422cc5: je 0x423338
422ccb: lea rdi, [rdx + rax*2]
422ccf: movzx r8d, word ptr [rdi]
422cd3: cmp r8, qword ptr [rip + 0x9da86]
422cda: mov rcx, r8
422cdd: jb 0x422ef8
422ce3: cmp rbx, qword ptr [rip + 0x9ffce]
422cea: ja 0x422da0
422cf0: lea r14, [r12 + rbx]
422cf4: mov rax, qword ptr [r14 + 8]
422cf8: cmp rax, 0x10
422cfc: jbe 0x422f40
422d02: and rax, 0xfffffffffffffff8
422d06: cmp rax, qword ptr [rbp + 0x888]
422d0d: jae 0x422f40
422d13: mov eax, dword ptr [rip + 0x9ff9b]
422d19: test eax, eax
422d1b: jne 0x423240
422d21: mov dword ptr [rbp + 8], 1
422d28: shr ebx, 4
422d2b: lea ecx, [rbx - 2]
422d2e: lea rax, [rbp + rcx*8]
422d33: mov rdx, qword ptr [rax + 0x10]
422d37: mov esi, dword ptr fs:[0x18]
422d3f: test esi, esi
422d41: jne 0x423020
422d47: cmp r12, rdx
422d4a: je 0x423059
422d50: mov qword ptr [r12 + 0x10], rdx
422d55: mov qword ptr [rax + 0x10], r12
422d59: test rdx, rdx
422d5c: je 0x422d73
422d5e: and r13d, 1
422d62: je 0x422d73
422d64: mov rax, qword ptr [rdx + 8]
422d68: shr eax, 4
422d6b: cmp ebx, eax
422d6d: jne 0x422fc0
422d73: mov rax, qword ptr [rsp + 0x38]
422d78: xor rax, qword ptr fs:[0x28]
422d81: jne 0x4235c7
422d87: add rsp, 0x48
422d8b: pop rbx
422d8c: pop rbp
422d8d: pop r12
422d8f: pop r13
422d91: pop r14
422d93: pop r15
422d95: ret 
422d96: nop word ptr cs:[rax + rax]
422da0: test byte ptr [r12 + 8], 2
422da6: jne 0x422ee8
422dac: mov eax, dword ptr fs:[0x18]
422db4: test eax, eax
422db6: je 0x422dc2
422db8: and r13d, 1
422dbc: je 0x423422
422dc2: mov dword ptr [rsp + 0x1c], 1
422dca: mov rax, qword ptr [rbp + 0x60]
422dce: lea r13, [r12 + rbx]
422dd2: cmp rax, r12
422dd5: je 0x423378
422ddb: test byte ptr [rbp + 4], 2
422ddf: je 0x423388
422de5: mov rax, qword ptr [r13 + 8]
422de9: test al, 1
422deb: je 0x4233b0
422df1: mov r14, rax
422df4: and r14, 0xfffffffffffffff8
422df8: cmp rax, 0x10
422dfc: jbe 0x423230
422e02: cmp qword ptr [rbp + 0x888], r14
422e09: jbe 0x423230
422e0f: mov esi, dword ptr [rip + 0x9fe9f]
422e15: test esi, esi
422e17: jne 0x4233c0
422e1d: test byte ptr [r12 + 8], 1
422e23: jne 0x422e49
422e25: mov rax, qword ptr [r12]
422e29: sub r12, rax
422e2c: add rbx, rax
422e2f: mov rdx, qword ptr [r12 + 8]
422e34: and rdx, 0xfffffffffffffff8
422e38: cmp rdx, rax
422e3b: jne 0x423452
422e41: mov rdi, r12
422e44: call 0x421cd0
422e49: cmp qword ptr [rbp + 0x60], r13
422e4d: je 0x423210
422e53: test byte ptr [r13 + r14 + 8], 1
422e59: je 0x423280
422e5f: and qword ptr [r13 + 8], 0xfffffffffffffffe
422e64: mov rax, qword ptr [rbp + 0x70]
422e68: lea rdx, [rbp + 0x60]
422e6c: cmp qword ptr [rax + 0x18], rdx
422e70: jne 0x423446
422e76: movq xmm0, rax
422e7b: movq xmm1, rdx
422e80: punpcklqdq xmm0, xmm1
422e84: movups xmmword ptr [r12 + 0x10], xmm0
422e8a: cmp rbx, 0x3ff
422e91: ja 0x422fb0
422e97: mov qword ptr [rbp + 0x70], r12
422e9b: mov qword ptr [rax + 0x18], r12
422e9f: mov rax, rbx
422ea2: or rax, 1
422ea6: mov qword ptr [r12 + 8], rax
422eab: mov qword ptr [r12 + rbx], rbx
422eaf: cmp rbx, 0xffff
422eb6: ja 0x423068
422ebc: mov eax, dword ptr [rsp + 0x1c]
422ec0: test eax, eax
422ec2: jne 0x422d73
422ec8: mov eax, dword ptr fs:[0x18]
422ed0: test eax, eax
422ed2: jne 0x422fcc
422ed8: sub dword ptr [rbp], 1
422edc: jmp 0x422d73
422ee1: nop dword ptr [rax]
422ee8: mov rdi, r12
422eeb: call 0x421910
422ef0: jmp 0x422d73
422ef5: nop dword ptr [rax]
422ef8: lea rax, [rdx + rax*8]
422efc: mov qword ptr [r12 + 0x18], rdx
422f01: add ecx, 1
422f04: mov rdx, qword ptr [rax + 0x80]
422f0b: mov qword ptr [r12 + 0x10], rdx
422f10: mov qword ptr [rax + 0x80], rsi
422f17: mov word ptr [rdi], cx
422f1a: jmp 0x422d73
422f1f: nop 
422f20: lea rdi, [rip + 0x73254]
422f27: call 0x421740
422f2c: nop dword ptr [rax]
422f30: lea rdi, [rip + 0x7325c]
422f37: call 0x421740
422f3c: nop dword ptr [rax]
422f40: test r13d, r13d
422f43: jne 0x422fa0
422f45: mov eax, dword ptr fs:[0x18]
422f4d: test eax, eax
422f4f: jne 0x422ffb
422f55: mov eax, r13d
422f58: mov edx, 1
422f5d: cmpxchg dword ptr [rbp], edx
422f61: mov rax, qword ptr [r14 + 8]
422f65: mov r8d, 1
422f6b: cmp rax, 0x10
422f6f: jbe 0x422f83
422f71: xor r8d, r8d
422f74: and rax, 0xfffffffffffffff8
422f78: cmp rax, qword ptr [rbp + 0x888]
422f7f: setae r8b
422f83: mov eax, dword ptr fs:[0x18]
422f8b: test eax, eax
422f8d: jne 0x42345e
422f93: sub dword ptr [rbp], 1
422f97: test r8d, r8d
422f9a: je 0x422d13
422fa0: lea rdi, [rip + 0x73831]
422fa7: call 0x421740
422fac: nop dword ptr [rax]
422fb0: pxor xmm0, xmm0
422fb4: movups xmmword ptr [r12 + 0x20], xmm0
422fba: jmp 0x422e97
422fbf: nop 
422fc0: lea rdi, [rip + 0x731e1]
422fc7: call 0x421740
422fcc: mov r15d, dword ptr [rsp + 0x1c]
422fd1: xchg dword ptr [rbp], r15d
422fd5: cmp r15d, 1
422fd9: jle 0x422d73
422fdf: xor r10d, r10d
422fe2: mov edx, 1
422fe7: mov esi, 0x81
422fec: mov rdi, rbp
422fef: mov eax, 0xca
422ff4: syscall 
422ff6: jmp 0x422d73
422ffb: mov edx, 1
423000: mov eax, r13d
423003: lock cmpxchg dword ptr [rbp], edx
423008: je 0x422f61
42300e: mov rdi, rbp
423011: call 0x421250
423016: jmp 0x422f61
42301b: nop dword ptr [rax + rax]
423020: lea rcx, [rbp + rcx*8 + 0x10]
423025: jmp 0x423054
423027: nop word ptr [rax + rax]
423030: mov qword ptr [r12 + 0x10], rdx
423035: mov rax, rdx
423038: cmp dword ptr fs:[0x18], 0
423041: je 0x423044
423044: cmpxchg qword ptr [rcx], r12
423048: cmp rdx, rax
42304b: je 0x422d59
423051: mov rdx, rax
423054: cmp rdx, r12
423057: jne 0x423030
423059: lea rdi, [rip + 0x737a0]
423060: call 0x421740
423065: nop dword ptr [rax]
423068: mov eax, dword ptr [rbp + 8]
42306b: test eax, eax
42306d: jne 0x4233e8
423073: lea rax, [rip + 0x9d726]
42307a: cmp rbp, rax
42307d: je 0x4233f8
423083: mov r15, qword ptr [rbp + 0x60]
423087: mov r14, r15
42308a: and r14, 0xfffffffffc000000
423091: cmp qword ptr [r14], rbp
423094: jne 0x4235eb
42309a: mov rbx, qword ptr [rip + 0x9d667]
4230a1: mov rdi, qword ptr [rip + 0x9e070]
4230a8: lea rax, [r14 + 0x20]
4230ac: mov qword ptr [rsp + 0x20], rbx
4230b1: mov qword ptr [rsp + 0x28], rdi
4230b6: cmp r15, rax
4230b9: jne 0x423290
4230bf: mov rax, rdi
4230c2: lea rdi, [rbx + rdi + 0x20]
4230c7: sub rax, 1
4230cb: mov qword ptr [rsp + 8], rdi
4230d0: mov qword ptr [rsp + 0x10], rax
4230d5: jmp 0x423186
4230da: nop word ptr [rax + rax]
4230e0: mov rcx, qword ptr [rdx]
4230e3: add rcx, r12
4230e6: lea rsi, [rcx - 1]
4230ea: mov r12, rcx
4230ed: mov rbx, rcx
4230f0: cmp rsi, 0x3fffffe
4230f7: ja 0x4235cc
4230fd: mov ecx, 0x4000000
423102: sub rcx, rax
423105: mov rax, rcx
423108: add rax, r12
42310b: cmp rax, qword ptr [rsp + 8]
423110: jb 0x4233d8
423116: mov rax, qword ptr [rdi + 0x10]
42311a: sub qword ptr [rbp + 0x888], rax
423121: nop 
423122: lea rax, [rdi + 0x4000000]
423129: cmp qword ptr [rip + 0x9fb68], rax
423130: je 0x423200
423136: mov esi, 0x4000000
42313b: mov r15, r13
42313e: call 0x451c70
423143: test byte ptr [r13 + 8], 1
423148: je 0x4231e8
42314e: lea rcx, [r15 + r12]
423152: test qword ptr [rsp + 0x10], rcx
423157: jne 0x4235a8
42315d: mov rax, qword ptr [r14 + 0x10]
423161: add rax, r14
423164: cmp rcx, rax
423167: jne 0x423589
42316d: or rbx, 1
423171: lea rax, [r14 + 0x20]
423175: mov qword ptr [rbp + 0x60], r15
423179: mov qword ptr [r15 + 8], rbx
42317d: cmp r15, rax
423180: jne 0x423298
423186: mov rdi, r14
423189: mov r14, qword ptr [r14 + 8]
42318d: mov rax, qword ptr [r14 + 0x10]
423191: lea rdx, [rax - 0x10]
423195: lea rsi, [r14 + rdx]
423199: and esi, 0xf
42319c: sub rdx, rsi
42319f: add rdx, r14
4231a2: cmp qword ptr [rdx + 8], 1
4231a7: jne 0x42356a
4231ad: sub rdx, qword ptr [rdx]
4231b0: mov r8, qword ptr [rdx + 8]
4231b4: mov r13, rdx
4231b7: mov rcx, r8
4231ba: and rcx, 0xfffffffffffffff8
4231be: add rsi, rcx
4231c1: lea r12, [rsi + 0x10]
4231c5: add rsi, 0xf
4231c9: cmp rsi, 0x3e
4231cd: ja 0x42354b
4231d3: and r8d, 1
4231d7: je 0x4230e0
4231dd: mov rbx, r12
4231e0: jmp 0x4230fd
4231e5: nop dword ptr [rax]
4231e8: sub r15, qword ptr [r13]
4231ec: mov rdi, r15
4231ef: call 0x421cd0
4231f4: jmp 0x42314e
4231f9: nop dword ptr [rax]
423200: mov qword ptr [rip + 0x9fa8d], 0
42320b: jmp 0x423136
423210: add rbx, r14
423213: mov rax, rbx
423216: or rax, 1
42321a: mov qword ptr [r12 + 8], rax
42321f: mov qword ptr [rbp + 0x60], r12
423223: jmp 0x422eaf
423228: nop dword ptr [rax + rax]
423230: lea rdi, [rip + 0x73659]
423237: call 0x421740
42323c: nop dword ptr [rax]
423240: lea rdi, [r12 + 0x18]
423245: lea rcx, [r12 + 0x10]
42324a: movzx eax, al
42324d: movabs rsi, 0x101010101010101
423257: and rdi, 0xfffffffffffffff8
42325b: imul rax, rsi
42325f: lea rdx, [rbx - 0x10]
423263: sub rcx, rdi
423266: mov esi, edx
423268: add ecx, edx
42326a: shr ecx, 3
42326d: mov qword ptr [r12 + 0x10], rax
423272: mov qword ptr [r12 + rsi + 8], rax
423277: rep stosq qword ptr [rdi], rax
42327a: jmp 0x422d21
42327f: nop 
423280: mov rdi, r13
423283: add rbx, r14
423286: call 0x421cd0
42328b: jmp 0x422e64
423290: mov rbx, qword ptr [r15 + 8]
423294: nop dword ptr [rax]
423298: and rbx, 0xfffffffffffffff8
42329c: cmp qword ptr [rip + 0x9d45d], rbx
4232a3: ja 0x422ebc
4232a9: mov rax, rbx
4232ac: sub rax, 0x21
4232b0: js 0x422ebc
4232b6: mov rdi, qword ptr [rsp + 0x20]
4232bb: cmp rdi, rax
4232be: jae 0x422ebc
4232c4: sub rax, rdi
4232c7: mov r12, rax
4232ca: mov rax, qword ptr [rsp + 0x28]
4232cf: neg rax
4232d2: and r12, rax
4232d5: je 0x422ebc
4232db: mov r13, qword ptr [r14 + 0x10]
4232df: sub r13, r12
4232e2: cmp r13, 0x1f
4232e6: jle 0x422ebc
4232ec: mov edx, dword ptr [rip + 0x9d3ee]
4232f2: test edx, edx
4232f4: js 0x4234d8
4232fa: setne al
4232fd: lea rdi, [r14 + r13]
423301: test al, al
423303: jne 0x4234af
423309: mov edx, 4
42330e: mov rsi, r12
423311: call 0x451cd0
423316: mov qword ptr [r14 + 0x10], r13
42331a: nop 
42331b: sub rbx, r12
42331e: sub qword ptr [rbp + 0x888], r12
423325: or rbx, 1
423329: mov qword ptr [r15 + 8], rbx
42332d: jmp 0x422ebc
423332: nop word ptr [rax + rax]
423338: nop 
423339: mov rdx, qword ptr fs:[0xffffffffffffffc8]
423342: mov rcx, qword ptr [rdx + rax*8 + 0x80]
42334a: test rcx, rcx
42334d: jne 0x423364
42334f: jmp 0x422ccb
423354: nop dword ptr [rax]
423358: mov rcx, qword ptr [rcx]
42335b: test rcx, rcx
42335e: je 0x422ccb
423364: cmp rsi, rcx
423367: jne 0x423358
423369: lea rdi, [rip + 0x73438]
423370: call 0x421740
423375: nop dword ptr [rax]
423378: lea rdi, [rip + 0x734a9]
42337f: call 0x421740
423384: nop dword ptr [rax]
423388: mov rdx, qword ptr [rax + 8]
42338c: and rdx, 0xfffffffffffffff8
423390: add rax, rdx
423393: cmp r13, rax
423396: jb 0x422de5
42339c: lea rdi, [rip + 0x734a5]
4233a3: call 0x421740
4233a8: nop dword ptr [rax + rax]
4233b0: lea rdi, [rip + 0x734b1]
4233b7: call 0x421740
4233bc: nop dword ptr [rax]
4233c0: lea rdx, [rbx - 0x10]
4233c4: lea rdi, [r12 + 0x10]
4233c9: call 0x401110
4233ce: jmp 0x422e1d
4233d3: nop dword ptr [rax + rax]
4233d8: mov rbx, qword ptr [r15 + 8]
4233dc: mov r14, rdi
4233df: jmp 0x423298
4233e4: nop dword ptr [rax]
4233e8: mov rdi, rbp
4233eb: call 0x421db0
4233f0: jmp 0x423073
4233f5: nop dword ptr [rax]
4233f8: mov rax, qword ptr [rbp + 0x60]
4233fc: mov rax, qword ptr [rax + 8]
423400: and rax, 0xfffffffffffffff8
423404: cmp rax, qword ptr [rip + 0x9d2f5]
42340b: jb 0x422ebc
423411: mov rdi, qword ptr [rip + 0x9d2f0]
423418: call 0x422b90
42341d: jmp 0x422ebc
423422: mov r15d, dword ptr fs:[0x18]
42342b: mov dword ptr [rsp + 0x1c], r15d
423430: mov eax, r15d
423433: test r15d, r15d
423436: jne 0x423488
423438: mov edx, 1
42343d: cmpxchg dword ptr [rbp], edx
423441: jmp 0x422dca
423446: lea rdi, [rip + 0x734a3]
42344d: call 0x421740
423452: lea rdi, [rip + 0x7345f]
423459: call 0x421740
42345e: xor eax, eax
423460: xchg dword ptr [rbp], eax
423463: cmp eax, 1
423466: jle 0x422f97
42346c: xor r10d, r10d
42346f: mov edx, 1
423474: mov esi, 0x81
423479: mov rdi, rbp
42347c: mov eax, 0xca
423481: syscall 
423483: jmp 0x422f97
423488: xor eax, eax
42348a: mov edx, 1
42348f: lock cmpxchg dword ptr [rbp], edx
423494: mov dword ptr [rsp + 0x1c], 0
42349c: je 0x422dca
4234a2: mov rdi, rbp
4234a5: call 0x421250
4234aa: jmp 0x422dca
4234af: xor r9d, r9d
4234b2: or r8d, 0xffffffff
4234b6: xor edx, edx
4234b8: mov ecx, 0x32
4234bd: mov rsi, r12
4234c0: call 0x451bc0
4234c5: add rax, 1
4234c9: je 0x422ebc
4234cf: mov qword ptr [r14 + 0x18], r13
4234d3: jmp 0x423316
4234d8: mov ecx, dword ptr [rip + 0x9c5c2]
4234de: test ecx, ecx
4234e0: mov dword ptr [rip + 0x9d1fa], ecx
4234e6: mov dword ptr [rsp + 0x10], ecx
4234ea: jne 0x423505
4234ec: lea rdi, [rip + 0x7352d]
4234f3: mov esi, 0x80000
4234f8: xor eax, eax
4234fa: call 0x4518a0
4234ff: mov edi, eax
423501: test eax, eax
423503: jns 0x423514
423505: cmp dword ptr [rip + 0x9d1d4], 0
42350c: setne al
42350f: jmp 0x4232fd
423514: lea rsi, [rsp + 0x37]
423519: mov edx, 1
42351e: mov dword ptr [rsp + 8], eax
423522: call 0x4519f0
423527: mov edi, dword ptr [rsp + 8]
42352b: mov ecx, dword ptr [rsp + 0x10]
42352f: test rax, rax
423532: jle 0x42353e
423534: xor ecx, ecx
423536: cmp byte ptr [rsp + 0x37], 0x32
42353b: sete cl
42353e: mov dword ptr [rip + 0x9d19c], ecx
423544: call 0x451730
423549: jmp 0x423505
42354b: lea rcx, [rip + 0x73c96]
423552: mov edx, 0x268
423557: lea rsi, [rip + 0x72b83]
42355e: lea rdi, [rip + 0x733e3]
423565: call 0x4216e0
42356a: lea rcx, [rip + 0x73c77]
423571: mov edx, 0x265
423576: lea rsi, [rip + 0x72b64]
42357d: lea rdi, [rip + 0x73394]
423584: call 0x4216e0
423589: lea rcx, [rip + 0x73c58]
423590: mov edx, 0x278
423595: lea rsi, [rip + 0x72b45]
42359c: lea rdi, [rip + 0x73445]
4235a3: call 0x4216e0
4235a8: lea rcx, [rip + 0x73c39]
4235af: mov edx, 0x277
4235b4: lea rsi, [rip + 0x72b26]
4235bb: lea rdi, [rip + 0x733e6]
4235c2: call 0x4216e0
4235c7: call 0x4547a0
4235cc: lea rcx, [rip + 0x73c15]
4235d3: mov edx, 0x26b
4235d8: lea rsi, [rip + 0x72b02]
4235df: lea rdi, [rip + 0x73392]
4235e6: call 0x4216e0
4235eb: lea rcx, [rip + 0x73c06]
4235f2: mov edx, 0x113d
4235f7: lea rsi, [rip + 0x72a92]
4235fe: lea rdi, [rip + 0x72bc0]
423605: call 0x4216e0
42360a: nop word ptr [rax + rax]
423610: push r15
423612: push r14
423614: push r13
423616: push r12
423618: push rbp
423619: mov rbp, rdi
42361c: push rbx
42361d: sub rsp, 0x38
423621: mov r14, qword ptr [rip + 0x9daf0]
423628: test rsi, rsi
42362b: je 0x4238a0
423631: cmp qword ptr [rip + 0x9d0d8], rdi
423638: mov rbx, rsi
42363b: jbe 0x4237a0
423641: mov byte ptr [rsp], 0
423645: mov rdx, r14
423648: lea rax, [r14 + rbp + 7]
42364d: lea r10, [rbx + 0x60]
423651: neg rdx
423654: mov r15, r10
423657: and rax, rdx
42365a: mov qword ptr [rsp + 0x10], rax
42365f: mov r13, qword ptr [rbx + 0x60]
423663: mov rax, qword ptr [r13 + 8]
423667: mov r12, rax
42366a: and r12, 0xfffffffffffffff8
42366e: lea r11, [r13 + r12]
423673: cmp r13, r15
423676: jne 0x42367d
423678: test r12, r12
42367b: je 0x42369c
42367d: cmp r12, 0x1f
423681: jbe 0x423d46
423687: test al, 1
423689: je 0x423d46
42368f: lea rax, [r14 - 1]
423693: test r11, rax
423696: jne 0x423d46
42369c: lea r10, [rbp + 0x20]
4236a0: cmp r10, r12
4236a3: jbe 0x423d65
4236a9: lea rax, [rip + 0x9d0f0]
4236b0: cmp rbx, rax
4236b3: je 0x423948
4236b9: mov rdx, r10
4236bc: mov r8, r13
4236bf: sub rdx, r12
4236c2: and r8, 0xfffffffffc000000
4236c9: test rdx, rdx
4236cc: jle 0x4237d8
4236d2: mov rax, qword ptr [rip + 0x9da3f]
4236d9: mov r9, qword ptr [r8 + 0x10]
4236dd: lea rcx, [rdx + rax - 1]
4236e2: neg rax
4236e5: and rax, rcx
4236e8: lea rcx, [rax + r9]
4236ec: cmp rcx, 0x4000000
4236f3: ja 0x4237d8
4236f9: mov rdi, qword ptr [r8 + 0x18]
4236fd: cmp rcx, rdi
423700: ja 0x423ab0
423706: mov r15, r10
423709: mov qword ptr [r8 + 0x10], rcx
42370d: nop 
42370e: mov rax, qword ptr [r8 + 0x10]
423712: mov rcx, qword ptr [rbx + 0x888]
423719: add r8, rax
42371c: add rcx, rax
42371f: sub r8, r13
423722: sub rcx, r9
423725: or r8, 1
423729: mov qword ptr [rbx + 0x888], rcx
423730: mov qword ptr [r13 + 8], r8
423734: mov r8, qword ptr [rbx + 0x60]
423738: cmp qword ptr [rbx + 0x890], rcx
42373f: jae 0x423748
423741: mov qword ptr [rbx + 0x890], rcx
423748: mov rax, qword ptr [r8 + 8]
42374c: and rax, 0xfffffffffffffff8
423750: cmp r15, rax
423753: ja 0x423880
423759: mov rsi, rbp
42375c: lea rdi, [rip + 0x9d03d]
423763: lea rcx, [r8 + rbp]
423767: sub rax, rbp
42376a: or rsi, 4
42376e: cmp rbx, rdi
423771: mov qword ptr [rbx + 0x60], rcx
423775: cmovne rbp, rsi
423779: or rax, 1
42377d: add r8, 0x10
423781: or rbp, 1
423785: mov qword ptr [r8 - 8], rbp
423789: mov qword ptr [rcx + 8], rax
42378d: add rsp, 0x38
423791: mov rax, r8
423794: pop rbx
423795: pop rbp
423796: pop r12
423798: pop r13
42379a: pop r14
42379c: pop r15
42379e: ret 
42379f: nop 
4237a0: mov eax, dword ptr [rip + 0x9cf86]
4237a6: cmp dword ptr [rip + 0x9cf7c], eax
4237ac: jge 0x423641
4237b2: mov rax, r14
4237b5: lea r12, [r14 + rdi + 7]
4237ba: neg rax
4237bd: and r12, rax
4237c0: cmp rdi, r12
4237c3: jb 0x423d84
4237c9: mov byte ptr [rsp], 1
4237cd: jmp 0x423645
4237d2: nop word ptr [rax + rax]
4237d8: mov rsi, qword ptr [rip + 0x9cf29]
4237df: lea rdi, [rbp + 0x40]
4237e3: mov qword ptr [rsp + 8], r10
4237e8: mov qword ptr [rsp + 0x18], r8
4237ed: call 0x421760
4237f2: mov r10, qword ptr [rsp + 8]
4237f7: test rax, rax
4237fa: je 0x423a90
423800: mov r8, qword ptr [rsp + 0x18]
423805: mov rsi, qword ptr [rax + 0x10]
423809: sub r12, 0x20
42380d: mov r15, r10
423810: movq xmm0, rbx
423815: and r12, 0xfffffffffffffff0
423819: movq xmm1, r8
42381e: lea r8, [rax + 0x20]
423822: punpcklqdq xmm0, xmm1
423826: movups xmmword ptr [rax], xmm0
423829: mov rcx, qword ptr [rbx + 0x888]
423830: mov qword ptr [rbx + 0x60], r8
423834: add rcx, rsi
423837: sub rsi, 0x20
42383b: or rsi, 1
42383f: mov qword ptr [rbx + 0x888], rcx
423846: mov qword ptr [rax + 0x28], rsi
42384a: lea rax, [r12 + 0x10]
42384f: lea rsi, [r13 + rax]
423854: mov qword ptr [rsi + 8], 1
42385c: cmp r12, 0x1f
423860: ja 0x423a50
423866: mov rdi, rax
423869: or rdi, 1
42386d: mov qword ptr [r13 + 8], rdi
423871: mov qword ptr [rsi], rax
423874: jmp 0x423738
423879: nop dword ptr [rax]
423880: mov rax, 0xffffffffffffffc0
423887: mov dword ptr fs:[rax], 0xc
42388e: xor r8d, r8d
423891: jmp 0x42378d
423896: nop word ptr cs:[rax + rax]
4238a0: lea r12, [r14 + rdi + 7]
4238a5: neg r14
4238a8: and r12, r14
4238ab: cmp rdi, r12
4238ae: jae 0x42388e
4238b0: xor r9d, r9d
4238b3: xor edi, edi
4238b5: mov r8d, 0xffffffff
4238bb: mov ecx, 0x22
4238c0: mov edx, 3
4238c5: mov rsi, r12
4238c8: call 0x451bc0
4238cd: cmp rax, -1
4238d1: je 0x42388e
4238d3: lea r8, [rax + 0x10]
4238d7: test al, 0xf
4238d9: jne 0x423e61
4238df: mov rdx, r12
4238e2: mov qword ptr [rax], 0
4238e9: or rdx, 2
4238ed: mov qword ptr [rax + 8], rdx
4238f1: mov edx, 1
4238f6: lock xadd dword ptr [rip + 0x9ce2a], edx
4238fe: add edx, 1
423901: mov eax, dword ptr [rip + 0x9ce29]
423907: cmp edx, eax
423909: jle 0x423915
42390b: lock cmpxchg dword ptr [rip + 0x9ce1d], edx
423913: jne 0x423901
423915: mov r14, r12
423918: lock xadd qword ptr [rip + 0x9ce17], r14
423921: add r14, r12
423924: mov rax, qword ptr [rip + 0x9ce15]
42392b: cmp r14, rax
42392e: jbe 0x42378d
423934: lock cmpxchg qword ptr [rip + 0x9ce03], r14
42393d: je 0x42378d
423943: jmp 0x423924
423945: nop dword ptr [rax]
423948: lea rax, [r14 - 1]
42394c: mov r15, r10
42394f: mov r10, r14
423952: mov qword ptr [rsp], rax
423956: mov rax, qword ptr [rip + 0x9cdab]
42395d: neg r10
423960: lea rsi, [r14 + rax + 0x1f]
423965: add rsi, rbp
423968: test byte ptr [rbx + 4], 2
42396c: jne 0x423a10
423972: sub rsi, r12
423975: and rsi, r10
423978: mov r14, rsi
42397b: jle 0x423b0d
423981: mov qword ptr [rsp + 0x10], r10
423986: mov rdi, r14
423989: mov qword ptr [rsp + 8], r11
42398e: call qword ptr [rip + 0x9d6a4]
423994: mov r8, rax
423997: nop 
423998: test rax, rax
42399b: mov r11, qword ptr [rsp + 8]
4239a0: mov r10, qword ptr [rsp + 0x10]
4239a5: je 0x423b00
4239ab: mov rax, qword ptr [rip + 0x9f2be]
4239b2: test rax, rax
4239b5: jne 0x423d08
4239bb: mov rcx, qword ptr [rip + 0x9d666]
4239c2: mov rax, qword ptr [rip + 0x9cd7f]
4239c9: mov edi, 1
4239ce: add rcx, r14
4239d1: test rax, rax
4239d4: je 0x423b2a
4239da: xor eax, eax
4239dc: mov qword ptr [rip + 0x9d645], rcx
4239e3: cmp r11, r8
4239e6: jne 0x423c30
4239ec: test dil, dil
4239ef: je 0x423c30
4239f5: add r12, r14
4239f8: mov r8, qword ptr [rip + 0x9ce01]
4239ff: or r12, 1
423a03: mov qword ptr [r13 + 8], r12
423a07: jmp 0x423738
423a0c: nop dword ptr [rax]
423a10: and rsi, r10
423a13: mov r14, rsi
423a16: jg 0x423981
423a1c: cmp r14, 0x100000
423a23: mov eax, 0x100000
423a28: cmovb r14, rax
423a2c: cmp rbp, r14
423a2f: jb 0x423b40
423a35: mov rcx, qword ptr [rip + 0x9d5ec]
423a3c: mov r8, qword ptr [rip + 0x9cdbd]
423a43: jmp 0x423738
423a48: nop dword ptr [rax + rax]
423a50: movdqa xmm0, xmmword ptr [rip + 0x73848]
423a58: mov edx, 1
423a5d: mov rsi, r13
423a60: mov rdi, rbx
423a63: movups xmmword ptr [r13 + r12 + 8], xmm0
423a69: or r12, 5
423a6d: mov qword ptr [r13 + 8], r12
423a71: call 0x422c40
423a76: mov rcx, qword ptr [rbx + 0x888]
423a7d: mov r8, qword ptr [rbx + 0x60]
423a81: jmp 0x423738
423a86: nop word ptr cs:[rax + rax]
423a90: cmp byte ptr [rsp], 0
423a94: je 0x423dcd
423a9a: mov rcx, qword ptr [rbx + 0x888]
423aa1: mov r8, qword ptr [rbx + 0x60]
423aa5: mov r15, r10
423aa8: jmp 0x423738
423aad: nop dword ptr [rax]
423ab0: mov rsi, rcx
423ab3: mov edx, 3
423ab8: mov qword ptr [rsp + 0x18], r10
423abd: sub rsi, rdi
423ac0: add rdi, r8
423ac3: mov qword ptr [rsp + 8], r8
423ac8: mov qword ptr [rsp + 0x28], r9
423acd: mov qword ptr [rsp + 0x20], rcx
423ad2: call 0x451ca0
423ad7: mov r8, qword ptr [rsp + 8]
423adc: mov r10, qword ptr [rsp + 0x18]
423ae1: test eax, eax
423ae3: jne 0x4237d8
423ae9: mov rcx, qword ptr [rsp + 0x20]
423aee: mov r9, qword ptr [rsp + 0x28]
423af3: mov r15, r10
423af6: mov qword ptr [r8 + 0x18], rcx
423afa: jmp 0x423709
423aff: nop 
423b00: test byte ptr [rip + 0x9cc9d], 2
423b07: jne 0x423a1c
423b0d: mov rax, qword ptr [rsp]
423b11: add rax, r12
423b14: lea rsi, [rax + r14]
423b18: and rsi, r10
423b1b: mov r14, rsi
423b1e: jmp 0x423a1c
423b23: nop dword ptr [rax + rax]
423b28: xor edi, edi
423b2a: mov qword ptr [rip + 0x9cc17], r8
423b31: jmp 0x4239dc
423b36: nop word ptr cs:[rax + rax]
423b40: xor r9d, r9d
423b43: mov r8d, 0xffffffff
423b49: xor edi, edi
423b4b: mov ecx, 0x22
423b50: mov edx, 3
423b55: mov rsi, r14
423b58: mov qword ptr [rsp + 0x10], r10
423b5d: mov qword ptr [rsp + 8], r11
423b62: call 0x451bc0
423b67: mov r11, qword ptr [rsp + 8]
423b6c: mov r10, qword ptr [rsp + 0x10]
423b71: cmp rax, -1
423b75: mov r8, rax
423b78: je 0x423a35
423b7e: or dword ptr [rip + 0x9cc1f], 2
423b85: lea rax, [rax + r14]
423b89: test r8, r8
423b8c: je 0x423a35
423b92: mov rcx, qword ptr [rip + 0x9d48f]
423b99: add rcx, r14
423b9c: cmp qword ptr [rip + 0x9cba4], 0
423ba4: je 0x423b28
423ba6: mov qword ptr [rip + 0x9d47b], rcx
423bad: xor r14d, r14d
423bb0: test r8b, 0xf
423bb4: jne 0x423dae
423bba: sub rax, r8
423bbd: mov qword ptr [rip + 0x9cc3c], r8
423bc4: add rax, r14
423bc7: or rax, 1
423bcb: mov qword ptr [r8 + 8], rax
423bcf: mov qword ptr [rip + 0x9d452], rcx
423bd6: test r12, r12
423bd9: je 0x423738
423bdf: sub r12, 0x20
423be3: and r12, 0xfffffffffffffff0
423be7: mov rax, r12
423bea: or rax, 1
423bee: mov qword ptr [r13 + 8], rax
423bf2: mov qword ptr [r13 + r12 + 8], 0x11
423bfb: mov qword ptr [r13 + r12 + 0x18], 0x11
423c04: cmp r12, 0x1f
423c08: jbe 0x423738
423c0e: mov edx, 1
423c13: mov rsi, r13
423c16: lea rdi, [rip + 0x9cb83]
423c1d: call 0x422c40
423c22: jmp 0x423a35
423c27: nop word ptr [rax + rax]
423c30: test byte ptr [rip + 0x9cb6d], 2
423c37: jne 0x423de3
423c3d: test r12, r12
423c40: je 0x423c60
423c42: cmp r11, r8
423c45: ja 0x423e2b
423c4b: test r12, r12
423c4e: je 0x423c60
423c50: mov rax, r8
423c53: sub rax, r11
423c56: add rcx, rax
423c59: mov qword ptr [rip + 0x9d3c8], rcx
423c60: mov rax, r8
423c63: and eax, 0xf
423c66: je 0x423cd0
423c68: mov ecx, 0x10
423c6d: sub rcx, rax
423c70: lea rax, [r8 + rcx]
423c74: add rcx, r12
423c77: mov qword ptr [rsp + 8], rax
423c7c: lea rsi, [rcx + r14]
423c80: mov rdi, qword ptr [rsp]
423c84: lea rdx, [r8 + rsi]
423c88: add rdi, rdx
423c8b: sub rcx, rdx
423c8e: mov rax, rdi
423c91: and rax, r10
423c94: lea rdi, [rax + rcx]
423c98: mov r14, rdi
423c9b: test rdi, rdi
423c9e: js 0x423e0c
423ca4: call qword ptr [rip + 0x9d38e]
423caa: test rax, rax
423cad: je 0x423ce0
423caf: mov rdx, qword ptr [rip + 0x9efba]
423cb6: test rdx, rdx
423cb9: jne 0x423d28
423cbb: mov rcx, qword ptr [rip + 0x9d366]
423cc2: mov r8, qword ptr [rsp + 8]
423cc7: add rcx, r14
423cca: jmp 0x423bba
423ccf: nop 
423cd0: mov qword ptr [rsp + 8], r8
423cd5: mov rcx, r12
423cd8: jmp 0x423c7c
423cda: nop word ptr [rax + rax]
423ce0: xor edi, edi
423ce2: call qword ptr [rip + 0x9d350]
423ce8: mov rcx, qword ptr [rip + 0x9d339]
423cef: test rax, rax
423cf2: je 0x423a3c
423cf8: mov r8, qword ptr [rsp + 8]
423cfd: xor r14d, r14d
423d00: jmp 0x423bba
423d05: nop dword ptr [rax]
423d08: mov qword ptr [rsp + 0x18], r10
423d0d: mov qword ptr [rsp + 0x10], r8
423d12: call rax
423d14: mov r11, qword ptr [rsp + 8]
423d19: mov r8, qword ptr [rsp + 0x10]
423d1e: mov r10, qword ptr [rsp + 0x18]
423d23: jmp 0x4239bb
423d28: mov qword ptr [rsp], rax
423d2c: call rdx
423d2e: mov rcx, qword ptr [rip + 0x9d2f3]
423d35: mov r8, qword ptr [rsp + 8]
423d3a: mov rax, qword ptr [rsp]
423d3e: add rcx, r14
423d41: jmp 0x423bba
423d46: lea rcx, [rip + 0x734bb]
423d4d: mov edx, 0x94b
423d52: lea rsi, [rip + 0x72337]
423d59: lea rdi, [rip + 0x72d20]
423d60: call 0x4216e0
423d65: lea rcx, [rip + 0x7349c]
423d6c: mov edx, 0x951
423d71: lea rsi, [rip + 0x72318]
423d78: lea rdi, [rip + 0x72da9]
423d7f: call 0x4216e0
423d84: xor r9d, r9d
423d87: or r8d, 0xffffffff
423d8b: xor edi, edi
423d8d: mov ecx, 0x22
423d92: mov edx, 3
423d97: mov rsi, r12
423d9a: call 0x451bc0
423d9f: cmp rax, -1
423da3: jne 0x4238d3
423da9: jmp 0x4237c9
423dae: lea rcx, [rip + 0x73453]
423db5: mov edx, 0xa48
423dba: lea rsi, [rip + 0x722cf]
423dc1: lea rdi, [rip + 0x72dc8]
423dc8: call 0x4216e0
423dcd: mov rax, qword ptr [rsp + 0x10]
423dd2: mov r12, rax
423dd5: cmp rax, rbp
423dd8: ja 0x423e37
423dda: mov byte ptr [rsp], 1
423dde: jmp 0x42365f
423de3: test r8b, 0xf
423de7: jne 0x423dae
423de9: test dil, dil
423dec: je 0x423e80
423df2: mov qword ptr [rsp], r8
423df6: xor edi, edi
423df8: call qword ptr [rip + 0x9d23a]
423dfe: mov r8, qword ptr [rsp]
423e02: mov qword ptr [rsp + 8], r8
423e07: jmp 0x423ce8
423e0c: lea rcx, [rip + 0x733f5]
423e13: mov edx, 0xa28
423e18: lea rsi, [rip + 0x72271]
423e1f: lea rdi, [rip + 0x723b2]
423e26: call 0x4216e0
423e2b: lea rdi, [rip + 0x72d36]
423e32: call 0x421740
423e37: xor r9d, r9d
423e3a: or r8d, 0xffffffff
423e3e: xor edi, edi
423e40: mov ecx, 0x22
423e45: mov edx, 3
423e4a: mov rsi, rax
423e4d: call 0x451bc0
423e52: cmp rax, -1
423e56: jne 0x4238d3
423e5c: jmp 0x423dda
423e61: lea rcx, [rip + 0x733a0]
423e68: mov edx, 0x917
423e6d: lea rsi, [rip + 0x7221c]
423e74: lea rdi, [rip + 0x72bc5]
423e7b: call 0x4216e0
423e80: xor r14d, r14d
423e83: jmp 0x423bba
423e88: nop dword ptr [rax + rax]
423e90: test rsi, rsi
423e93: js 0x4244a0
423e99: push r15
423e9b: lea rax, [rsi + 0x17]
423e9f: push r14
423ea1: push r13
423ea3: push r12
423ea5: push rbp
423ea6: mov rbp, rsi
423ea9: push rbx
423eaa: mov rbx, rdi
423ead: sub rsp, 0x88
423eb4: cmp rax, 0x1f
423eb8: ja 0x423fc0
423ebe: test rdi, rdi
423ec1: je 0x4244c8
423ec7: cmp qword ptr [rip + 0x9ede9], 0x1f
423ecf: ja 0x4240b0
423ed5: mov r14d, 2
423edb: mov eax, 0x80
423ee0: mov r13d, 0x20
423ee6: add rax, rbx
423ee9: mov r8, qword ptr [rax + 8]
423eed: lea rcx, [rax - 0x10]
423ef1: cmp rcx, r8
423ef4: je 0x424268
423efa: mov rdx, qword ptr [r8 + 0x18]
423efe: cmp qword ptr [rdx + 0x10], r8
423f02: jne 0x424938
423f08: lea r9, [rip + 0x9c891]
423f0f: or qword ptr [r8 + r13 + 8], 1
423f15: mov qword ptr [rax + 8], rdx
423f19: mov qword ptr [rdx + 0x10], rcx
423f1d: cmp rbx, r9
423f20: je 0x423f27
423f22: or qword ptr [r8 + 8], 4
423f27: mov rdi, qword ptr fs:[0xffffffffffffffc8]
423f30: test rdi, rdi
423f33: je 0x424220
423f39: lea rsi, [r13 - 0x11]
423f3d: shr rsi, 4
423f41: cmp qword ptr [rip + 0x9c808], rsi
423f48: jbe 0x424220
423f4e: lea r14, [rdi + rsi*2]
423f52: mov r11, qword ptr [rip + 0x9c807]
423f59: lea r12, [rdi + rsi*8]
423f5d: movzx r10d, word ptr [r14]
423f61: movzx esi, r10w
423f65: cmp rsi, r11
423f68: jae 0x424220
423f6e: cmp rcx, rdx
423f71: je 0x424220
423f77: mov rsi, qword ptr [rdx + 0x18]
423f7b: or qword ptr [rdx + r13 + 8], 1
423f81: cmp rbx, r9
423f84: je 0x423f8b
423f86: or qword ptr [rdx + 8], 4
423f8b: mov r15, qword ptr [r12 + 0x80]
423f93: mov qword ptr [rax + 8], rsi
423f97: add rdx, 0x10
423f9b: add r10d, 1
423f9f: mov qword ptr [rsi + 0x10], rcx
423fa3: mov qword ptr [rdx + 8], rdi
423fa7: mov qword ptr [rdx], r15
423faa: mov qword ptr [r12 + 0x80], rdx
423fb2: mov rdx, rsi
423fb5: mov word ptr [r14], r10w
423fb9: jmp 0x423f61
423fbb: nop dword ptr [rax + rax]
423fc0: and rax, 0xfffffffffffffff0
423fc4: mov r13, rax
423fc7: test rdi, rdi
423fca: je 0x4244ce
423fd0: mov r14d, eax
423fd3: shr r14d, 4
423fd7: cmp rax, qword ptr [rip + 0x9ecda]
423fde: jbe 0x424250
423fe4: cmp rax, 0x3ff
423fea: jbe 0x4241e0
423ff0: mov rcx, rax
423ff3: mov rdi, rax
423ff6: mov rsi, rax
423ff9: mov r15, rax
423ffc: shr rsi, 0xc
424000: shr r15, 0xf
424004: mov edx, 2
424009: shr rcx, 6
42400d: shr rdi, 9
424011: lea r10d, [r15 + 0x77]
424015: mov qword ptr [rsp + 0x58], rsi
42401a: shr rax, 0x12
42401e: cmp r13, 0xbffff
424025: mov qword ptr [rsp + 0x60], r15
42402a: lea r11d, [rcx + 0x30]
42402e: cmova rax, rdx
424032: mov rdx, r15
424035: lea r15d, [rsi + 0x6e]
424039: mov qword ptr [rsp + 0x40], rcx
42403e: mov qword ptr [rsp + 0x50], rdi
424043: lea r9d, [rax + 0x7c]
424047: mov rax, rsi
42404a: mov esi, edi
42404c: mov dword ptr [rsp + 0x4c], r11d
424051: add esi, 0x5b
424054: mov dword ptr [rsp + 0x68], r9d
424059: mov dword ptr [rsp + 0x6c], r10d
42405e: mov dword ptr [rsp + 0x70], r15d
424063: mov dword ptr [rsp + 0x74], esi
424067: mov dword ptr [rsp + 0x28], r11d
42406c: cmp rcx, 0x30
424070: jbe 0x424090
424072: mov dword ptr [rsp + 0x28], esi
424076: cmp rdi, 0x14
42407a: jbe 0x424090
42407c: mov dword ptr [rsp + 0x28], r15d
424081: cmp rax, 0xa
424085: ja 0x424720
42408b: nop dword ptr [rax + rax]
424090: mov eax, dword ptr [rbx + 8]
424093: test eax, eax
424095: je 0x4242bd
42409b: mov rdi, rbx
42409e: call 0x421db0
4240a3: jmp 0x4242bd
4240a8: nop dword ptr [rax + rax]
4240b0: mov ecx, 0x10
4240b5: mov r14d, 2
4240bb: mov r13d, 0x20
4240c1: xor eax, eax
4240c3: lea rdi, [rbx + rax*8]
4240c7: mov r8, qword ptr [rdi + 0x10]
4240cb: test r8, r8
4240ce: je 0x4241e0
4240d4: add rcx, rbx
4240d7: mov eax, dword ptr fs:[0x18]
4240df: mov rdx, qword ptr [r8 + 0x10]
4240e3: test eax, eax
4240e5: jne 0x4241b7
4240eb: mov qword ptr [rdi + 0x10], rdx
4240ef: mov eax, dword ptr [r8 + 8]
4240f3: shr eax, 4
4240f6: cmp eax, r14d
4240f9: jne 0x424830
4240ff: mov r12, qword ptr fs:[0xffffffffffffffc8]
424108: test r12, r12
42410b: je 0x424220
424111: lea rax, [r13 - 0x11]
424115: shr rax, 4
424119: cmp qword ptr [rip + 0x9c630], rax
424120: jbe 0x424220
424126: movzx edx, word ptr [r12 + rax*2]
42412b: cmp rdx, qword ptr [rip + 0x9c62e]
424132: jae 0x424220
424138: lea r10, [r12 + rax*8]
42413c: lea r9, [r12 + rax*2]
424140: mov rbx, r12
424143: jmp 0x424187
424145: nop dword ptr [rax]
424148: mov qword ptr [rdi + 0x10], rsi
42414c: movq xmm0, qword ptr [r10 + 0x80]
424155: movq xmm5, rbx
42415a: add rdx, 0x10
42415e: punpcklqdq xmm0, xmm5
424162: movups xmmword ptr [rdx], xmm0
424165: mov qword ptr [r10 + 0x80], rdx
42416c: movzx eax, word ptr [r9]
424170: add eax, 1
424173: mov word ptr [r9], ax
424177: movzx eax, ax
42417a: cmp rax, qword ptr [rip + 0x9c5df]
424181: jae 0x424220
424187: mov rdx, qword ptr [rdi + 0x10]
42418b: test rdx, rdx
42418e: je 0x424220
424194: mov eax, dword ptr fs:[0x18]
42419c: mov rsi, qword ptr [rdx + 0x10]
4241a0: test eax, eax
4241a2: je 0x424148
4241a4: jmp 0x4241ff
4241a6: nop word ptr cs:[rax + rax]
4241b0: mov rdx, qword ptr [rax + 0x10]
4241b4: mov r8, rax
4241b7: mov rax, r8
4241ba: cmp dword ptr fs:[0x18], 0
4241c3: je 0x4241c6
4241c6: cmpxchg qword ptr [rcx], rdx
4241ca: cmp rax, r8
4241cd: je 0x4240ef
4241d3: test rax, rax
4241d6: jne 0x4241b0
4241d8: nop dword ptr [rax + rax]
4241e0: lea eax, [r14 + r14 - 2]
4241e5: lea rax, [rax*8 + 0x70]
4241ed: jmp 0x423ee6
4241f2: nop word ptr [rax + rax]
4241f8: mov rsi, qword ptr [rax + 0x10]
4241fc: mov rdx, rax
4241ff: mov rax, rdx
424202: cmp dword ptr fs:[0x18], 0
42420b: je 0x42420e
42420e: cmpxchg qword ptr [rcx], rsi
424212: cmp rax, rdx
424215: je 0x42414c
42421b: test rax, rax
42421e: jne 0x4241f8
424220: mov esi, dword ptr [rip + 0x9ea8e]
424226: add r8, 0x10
42422a: test esi, esi
42422c: jne 0x4244f8
424232: add rsp, 0x88
424239: mov rax, r8
42423c: pop rbx
42423d: pop rbp
42423e: pop r12
424240: pop r13
424242: pop r14
424244: pop r15
424246: ret 
424247: nop word ptr [rax + rax]
424250: lea eax, [r14 - 2]
424254: lea rcx, [rax*8 + 0x10]
42425c: jmp 0x4240c3
424261: nop dword ptr [rax]
424268: mov rax, r13
42426b: mov rdi, r13
42426e: mov dword ptr [rsp + 0x28], r14d
424273: shr rax, 6
424277: shr rdi, 9
42427b: mov dword ptr [rsp + 0x70], 0x6e
424283: mov qword ptr [rsp + 0x40], rax
424288: add eax, 0x30
42428b: mov qword ptr [rsp + 0x50], rdi
424290: add edi, 0x5b
424293: mov dword ptr [rsp + 0x74], edi
424297: mov dword ptr [rsp + 0x4c], eax
42429b: mov dword ptr [rsp + 0x6c], 0x77
4242a3: mov dword ptr [rsp + 0x68], 0x7c
4242ab: mov qword ptr [rsp + 0x60], 0
4242b4: mov qword ptr [rsp + 0x58], 0
4242bd: lea rax, [r13 - 0x11]
4242c1: shr rax, 4
4242c5: mov r15, rax
4242c8: xor eax, eax
4242ca: mov qword ptr [rsp + 0x10], rax
4242cf: cmp qword ptr fs:[0xffffffffffffffc8], 0
4242d9: je 0x4242eb
4242db: cmp qword ptr [rip + 0x9c46e], r15
4242e2: cmova rax, r13
4242e6: mov qword ptr [rsp + 0x10], rax
4242eb: mov qword ptr [rsp + 8], 0
4242f4: lea r11, [rbx + 0x60]
4242f8: mov dword ptr [rsp + 0x48], r14d
4242fd: mov qword ptr [rsp + 0x20], rbp
424302: mov r10, qword ptr [rbx + 0x78]
424306: cmp r10, r11
424309: je 0x424640
42430f: mov rdi, qword ptr [rip + 0x9c452]
424316: mov rax, qword ptr [rip + 0x9c443]
42431d: test rdi, rdi
424320: setne byte ptr [rsp + 0x2f]
424325: xor esi, esi
424327: xor r8d, r8d
42432a: mov r12, qword ptr fs:[0xffffffffffffffc8]
424333: mov qword ptr [rsp + 0x18], rax
424338: lea rax, [r13 + 0x20]
42433c: mov qword ptr [rsp + 0x38], rax
424341: lea rax, [r12 + r15*8]
424345: lea r14, [r12 + r15*2]
424349: mov qword ptr [rsp + 0x30], rax
42434e: mov rax, qword ptr [r10 + 8]
424352: and rax, 0xfffffffffffffff8
424356: lea r9, [r10 + rax]
42435a: cmp rax, 0x10
42435e: jbe 0x4244b8
424364: mov rcx, qword ptr [rbx + 0x888]
42436b: cmp rcx, rax
42436e: jb 0x4244b8
424374: mov rdx, qword ptr [r9 + 8]
424378: cmp rdx, 0xf
42437c: jbe 0x424510
424382: cmp rcx, rdx
424385: jb 0x424510
42438b: mov rcx, qword ptr [r9]
42438e: and rcx, 0xfffffffffffffff8
424392: cmp rcx, rax
424395: jne 0x424750
42439b: mov rcx, qword ptr [r10 + 0x18]
42439f: cmp r10, qword ptr [rcx + 0x10]
4243a3: jne 0x4246e0
4243a9: cmp qword ptr [r10 + 0x10], r11
4243ad: jne 0x4246e0
4243b3: test dl, 1
4243b6: jne 0x424820
4243bc: cmp r13, 0x3ff
4243c3: ja 0x4243ce
4243c5: cmp rcx, r11
4243c8: je 0x424760
4243ce: mov qword ptr [rbx + 0x78], rcx
4243d2: mov qword ptr [rcx + 0x10], r11
4243d6: cmp rax, r13
4243d9: je 0x424520
4243df: cmp rax, 0x3ff
4243e5: ja 0x424560
4243eb: mov ecx, eax
4243ed: shr ecx, 4
4243f0: lea eax, [rcx + rcx - 2]
4243f4: cdqe 
4243f6: lea rax, [rbx + rax*8 + 0x70]
4243fb: mov r9, qword ptr [rax]
4243fe: lea rbp, [rax - 0x10]
424402: mov eax, ecx
424404: movq xmm0, r9
424409: movq xmm2, rbp
42440e: mov edx, 1
424413: sar eax, 5
424416: punpcklqdq xmm0, xmm2
42441a: add qword ptr [rsp + 8], 1
424420: shl edx, cl
424422: cdqe 
424424: or dword ptr [rbx + rax*4 + 0x860], edx
42442b: mov rax, qword ptr [rsp + 8]
424430: movups xmmword ptr [r10 + 0x10], xmm0
424435: mov qword ptr [r9 + 0x18], r10
424439: mov qword ptr [rbp + 0x10], r10
42443d: test r8d, r8d
424440: je 0x424628
424446: cmp rdi, rax
424449: jae 0x424480
42444b: cmp byte ptr [rsp + 0x2f], 0
424450: je 0x424480
424452: lea rax, [r12 + r15*8]
424456: mov r8, qword ptr [rax + 0x80]
42445d: mov rdx, qword ptr [r8]
424460: mov qword ptr [rax + 0x80], rdx
424467: sub word ptr [r12 + r15*2], 1
42446d: mov qword ptr [r8 + 8], 0
424475: jmp 0x424232
42447a: nop word ptr [rax + rax]
424480: add esi, 1
424483: cmp esi, 0x270f
424489: jg 0x424452
42448b: mov r10, qword ptr [rbx + 0x78]
42448f: cmp r11, r10
424492: je 0x424452
424494: mov r8d, 1
42449a: jmp 0x42434e
42449f: nop 
4244a0: mov rax, 0xffffffffffffffc0
4244a7: xor r8d, r8d
4244aa: mov dword ptr fs:[rax], 0xc
4244b1: mov rax, r8
4244b4: ret 
4244b5: nop dword ptr [rax]
4244b8: lea rdi, [rip + 0x72769]
4244bf: call 0x421740
4244c4: nop dword ptr [rax]
4244c8: mov r13d, 0x20
4244ce: xor esi, esi
4244d0: mov rdi, r13
4244d3: call 0x423610
4244d8: mov r8, rax
4244db: test rax, rax
4244de: je 0x424818
4244e4: mov esi, dword ptr [rip + 0x9e7ca]
4244ea: test esi, esi
4244ec: je 0x424232
4244f2: nop word ptr [rax + rax]
4244f8: mov rdi, r8
4244fb: xor sil, 0xff
4244ff: mov rdx, rbp
424502: call 0x401110
424507: mov r8, rax
42450a: jmp 0x424232
42450f: nop 
424510: lea rdi, [rip + 0x72739]
424517: call 0x421740
42451c: nop dword ptr [rax]
424520: or rdx, 1
424524: lea rax, [rip + 0x9c275]
42452b: mov qword ptr [r9 + 8], rdx
42452f: cmp rbx, rax
424532: je 0x424539
424534: or qword ptr [r10 + 8], 4
424539: cmp qword ptr [rsp + 0x10], 0
42453f: lea r8, [r10 + 0x10]
424543: je 0x424557
424545: movzx edx, word ptr [r14]
424549: mov rax, rdx
42454c: cmp rdx, qword ptr [rsp + 0x18]
424551: jb 0x4246f0
424557: mov rbp, qword ptr [rsp + 0x20]
42455c: jmp 0x4244e4
42455e: nop 
424560: mov rcx, rax
424563: shr rcx, 6
424567: add ecx, 0x30
42456a: cmp rax, 0xc3f
424570: jbe 0x4245c8
424572: mov rcx, rax
424575: shr rcx, 9
424579: add ecx, 0x5b
42457c: cmp rax, 0x29ff
424582: jbe 0x4245c8
424584: mov rcx, rax
424587: shr rcx, 0xc
42458b: add ecx, 0x6e
42458e: cmp rax, 0xafff
424594: jbe 0x4245c8
424596: mov rcx, rax
424599: shr rcx, 0xf
42459d: add ecx, 0x77
4245a0: cmp rax, 0x27fff
4245a6: jbe 0x4245c8
4245a8: mov rcx, rax
4245ab: mov edx, 2
4245b0: shr rcx, 0x12
4245b4: cmp rax, 0xbffff
4245ba: cmova rcx, rdx
4245be: add ecx, 0x7c
4245c1: nop dword ptr [rax]
4245c8: lea edx, [rcx + rcx - 2]
4245cc: movsxd rdx, edx
4245cf: lea rbp, [rbx + rdx*8 + 0x70]
4245d4: mov rdx, qword ptr [rbp]
4245d8: lea r9, [rbp - 0x10]
4245dc: cmp r9, rdx
4245df: je 0x424738
4245e5: mov rbp, qword ptr [rbp + 8]
4245e9: or rax, 1
4245ed: mov qword ptr [rsp + 0x78], rax
4245f2: mov rax, qword ptr [rbp + 8]
4245f6: test al, 4
4245f8: jne 0x424c84
4245fe: cmp rax, qword ptr [rsp + 0x78]
424603: jbe 0x424948
424609: mov rax, qword ptr [rdx + 0x28]
42460d: mov qword ptr [r10 + 0x20], rdx
424611: mov qword ptr [r10 + 0x28], rax
424615: mov qword ptr [rax + 0x20], r10
424619: mov qword ptr [rdx + 0x28], r10
42461d: jmp 0x424402
424622: nop word ptr [rax + rax]
424628: add esi, 1
42462b: cmp esi, 0x270f
424631: jg 0x424640
424633: mov r10, qword ptr [rbx + 0x78]
424637: cmp r10, r11
42463a: jne 0x42434e
424640: cmp r13, 0x3ff
424647: jbe 0x42466c
424649: mov eax, dword ptr [rsp + 0x28]
42464d: lea eax, [rax + rax - 2]
424651: lea rax, [rbx + rax*8 + 0x70]
424656: mov rdx, qword ptr [rax]
424659: lea rcx, [rax - 0x10]
42465d: cmp rdx, rcx
424660: je 0x42466c
424662: cmp qword ptr [rdx + 8], r13
424666: jae 0x424b90
42466c: mov eax, dword ptr [rsp + 0x28]
424670: lea ecx, [rax + 1]
424673: add eax, eax
424675: mov edi, ecx
424677: lea rdx, [rbx + rax*8 + 0x60]
42467c: shr edi, 5
42467f: mov eax, edi
424681: mov esi, dword ptr [rbx + rax*4 + 0x860]
424688: mov eax, 1
42468d: shl eax, cl
42468f: nop 
424690: cmp eax, esi
424692: ja 0x424840
424698: test eax, eax
42469a: jne 0x4246b4
42469c: jmp 0x424840
4246a1: nop dword ptr [rax]
4246a8: add rdx, 0x10
4246ac: add eax, eax
4246ae: je 0x424ae8
4246b4: test eax, esi
4246b6: je 0x4246a8
4246b8: mov rcx, qword ptr [rdx + 0x18]
4246bc: cmp rdx, rcx
4246bf: jne 0x4249c6
4246c5: mov ecx, eax
4246c7: add rdx, 0x10
4246cb: add eax, eax
4246cd: not ecx
4246cf: and esi, ecx
4246d1: mov ecx, edi
4246d3: mov dword ptr [rbx + rcx*4 + 0x860], esi
4246da: jmp 0x424690
4246dc: nop dword ptr [rax]
4246e0: lea rdi, [rip + 0x725c9]
4246e7: call 0x421740
4246ec: nop dword ptr [rax]
4246f0: mov r9, qword ptr [rsp + 0x30]
4246f5: add eax, 1
4246f8: mov qword ptr [r10 + 0x18], r12
4246fc: mov rdx, qword ptr [r9 + 0x80]
424703: mov qword ptr [r10 + 0x10], rdx
424707: mov r10, rcx
42470a: mov qword ptr [r9 + 0x80], r8
424711: mov word ptr [r14], ax
424715: jmp 0x42448f
42471a: nop word ptr [rax + rax]
424720: cmp rdx, 5
424724: cmovb r9d, r10d
424728: mov dword ptr [rsp + 0x28], r9d
42472d: jmp 0x424090
424732: nop word ptr [rax + rax]
424738: movq xmm0, r10
42473d: mov rbp, r9
424740: punpcklqdq xmm0, xmm0
424744: movups xmmword ptr [r10 + 0x20], xmm0
424749: jmp 0x424402
42474e: nop 
424750: lea rdi, [rip + 0x72521]
424757: call 0x421740
42475c: nop dword ptr [rax]
424760: cmp r10, qword ptr [rbx + 0x68]
424764: jne 0x4243ce
42476a: cmp qword ptr [rsp + 0x38], rax
42476f: jae 0x4243ce
424775: movq xmm1, r10
42477a: movq xmm0, r13
42477f: lea rcx, [r10 + r13]
424783: sub rax, r13
424786: punpcklqdq xmm1, xmm1
42478a: punpcklqdq xmm0, xmm0
42478e: mov qword ptr [rbx + 0x78], rcx
424792: mov rbp, qword ptr [rsp + 0x20]
424797: paddq xmm0, xmm1
42479b: movups xmmword ptr [rbx + 0x68], xmm0
42479f: movq xmm0, r11
4247a4: punpcklqdq xmm0, xmm0
4247a8: movups xmmword ptr [rcx + 0x10], xmm0
4247ac: cmp rax, 0x3ff
4247b2: jbe 0x4247bc
4247b4: pxor xmm0, xmm0
4247b8: movups xmmword ptr [rcx + 0x20], xmm0
4247bc: lea rdx, [rip + 0x9bfdd]
4247c3: lea r8, [r10 + 0x10]
4247c7: cmp rbx, rdx
4247ca: setne dl
4247cd: movzx edx, dl
4247d0: shl rdx, 2
4247d4: or rdx, r13
4247d7: or rdx, 1
4247db: mov qword ptr [r10 + 8], rdx
4247df: mov rdx, rax
4247e2: or rdx, 1
4247e6: mov qword ptr [rcx + 8], rdx
4247ea: mov qword ptr [r9], rax
4247ed: mov eax, dword ptr [rip + 0x9e4c1]
4247f3: test eax, eax
4247f5: je 0x424232
4247fb: xor al, 0xff
4247fd: mov rdi, r8
424800: mov rdx, rbp
424803: mov esi, eax
424805: call 0x401110
42480a: mov r8, rax
42480d: jmp 0x424232
424812: nop word ptr [rax + rax]
424818: xor r8d, r8d
42481b: jmp 0x424232
424820: lea rdi, [rip + 0x724b9]
424827: call 0x421740
42482c: nop dword ptr [rax]
424830: lea rdi, [rip + 0x72399]
424837: call 0x421740
42483c: nop dword ptr [rax]
424840: lea eax, [rdi + 1]
424843: cmp edi, 3
424846: je 0x424885
424848: mov edx, eax
42484a: mov esi, dword ptr [rbx + rdx*4 + 0x860]
424851: test esi, esi
424853: jne 0x424a97
424859: lea eax, [rdi + 2]
42485c: cmp edi, 2
42485f: je 0x424885
424861: mov edx, eax
424863: mov esi, dword ptr [rbx + rdx*4 + 0x860]
42486a: test esi, esi
42486c: jne 0x424a97
424872: cmp edi, 1
424875: je 0x424885
424877: mov esi, dword ptr [rbx + 0x86c]
42487d: test esi, esi
42487f: jne 0x424ac8
424885: mov r8, qword ptr [rbx + 0x60]
424889: mov rax, qword ptr [r8 + 8]
42488d: and rax, 0xfffffffffffffff8
424891: cmp qword ptr [rbx + 0x888], rax
424898: jb 0x424ab0
42489e: lea rdx, [r13 + 0x20]
4248a2: cmp rdx, rax
4248a5: jbe 0x424b07
4248ab: mov qword ptr [rsp + 0x18], r11
4248b0: mov eax, dword ptr [rbx + 8]
4248b3: test eax, eax
4248b5: je 0x424b55
4248bb: mov rdi, rbx
4248be: call 0x421db0
4248c3: mov eax, dword ptr [rsp + 0x48]
4248c7: mov r11, qword ptr [rsp + 0x18]
4248cc: cmp r13, 0x3ff
4248d3: mov dword ptr [rsp + 0x28], eax
4248d7: jbe 0x424302
4248dd: mov eax, dword ptr [rsp + 0x4c]
4248e1: cmp qword ptr [rsp + 0x40], 0x30
4248e7: mov dword ptr [rsp + 0x28], eax
4248eb: jbe 0x424302
4248f1: mov eax, dword ptr [rsp + 0x74]
4248f5: cmp qword ptr [rsp + 0x50], 0x14
4248fb: mov dword ptr [rsp + 0x28], eax
4248ff: jbe 0x424302
424905: mov eax, dword ptr [rsp + 0x70]
424909: cmp qword ptr [rsp + 0x58], 0xa
42490f: mov dword ptr [rsp + 0x28], eax
424913: jbe 0x424302
424919: mov eax, dword ptr [rsp + 0x6c]
42491d: cmp qword ptr [rsp + 0x60], 4
424923: cmova eax, dword ptr [rsp + 0x68]
424928: mov dword ptr [rsp + 0x28], eax
42492c: jmp 0x424302
424931: nop dword ptr [rax]
424938: lea rdi, [rip + 0x722b9]
42493f: call 0x421740
424944: nop dword ptr [rax]
424948: mov r9, qword ptr [rdx + 8]
42494c: test r9b, 4
424950: jne 0x424cc8
424956: mov rax, qword ptr [rsp + 0x78]
42495b: jmp 0x424972
42495d: nop dword ptr [rax]
424960: mov rdx, qword ptr [rdx + 0x20]
424964: mov r9, qword ptr [rdx + 8]
424968: test r9b, 4
42496c: jne 0x424c65
424972: cmp rax, r9
424975: jb 0x424960
424977: je 0x4249c0
424979: mov rax, qword ptr [rdx + 0x28]
42497d: mov qword ptr [r10 + 0x20], rdx
424981: mov qword ptr [r10 + 0x28], rax
424985: mov rax, qword ptr [rdx + 0x28]
424989: cmp qword ptr [rax + 0x20], rdx
42498d: jne 0x424abc
424993: mov qword ptr [rdx + 0x28], r10
424997: mov rax, qword ptr [r10 + 0x28]
42499b: mov r9, rdx
42499e: mov qword ptr [rax + 0x20], r10
4249a2: mov rbp, qword ptr [r9 + 0x18]
4249a6: cmp qword ptr [rbp + 0x10], r9
4249aa: je 0x424402
4249b0: lea rdi, [rip + 0x72399]
4249b7: call 0x421740
4249bc: nop dword ptr [rax]
4249c0: mov r9, qword ptr [rdx + 0x10]
4249c4: jmp 0x4249a2
4249c6: mov r14, qword ptr [rcx + 8]
4249ca: mov rbp, qword ptr [rsp + 0x20]
4249cf: and r14, 0xfffffffffffffff8
4249d3: cmp r14, r13
4249d6: jb 0x424ce7
4249dc: mov r12, r14
4249df: mov rdi, rcx
4249e2: mov qword ptr [rsp + 0x10], r11
4249e7: sub r12, r13
4249ea: mov qword ptr [rsp + 8], rcx
4249ef: call 0x421cd0
4249f4: cmp r12, 0x1f
4249f8: mov rcx, qword ptr [rsp + 8]
4249fd: mov r11, qword ptr [rsp + 0x10]
424a02: jbe 0x424acf
424a08: mov rax, qword ptr [rbx + 0x70]
424a0c: lea rdx, [rcx + r13]
424a10: cmp qword ptr [rax + 0x18], r11
424a14: jne 0x424b84
424a1a: movq xmm0, rax
424a1f: movq xmm4, r11
424a24: punpcklqdq xmm0, xmm4
424a28: movups xmmword ptr [rdx + 0x10], xmm0
424a2c: mov qword ptr [rbx + 0x70], rdx
424a30: mov qword ptr [rax + 0x18], rdx
424a34: cmp r13, 0x3ff
424a3b: ja 0x424a41
424a3d: mov qword ptr [rbx + 0x68], rdx
424a41: cmp r12, 0x3ff
424a48: jbe 0x424a52
424a4a: pxor xmm0, xmm0
424a4e: movups xmmword ptr [rdx + 0x20], xmm0
424a52: lea rax, [rip + 0x9bd47]
424a59: cmp rbx, rax
424a5c: setne al
424a5f: movzx eax, al
424a62: shl rax, 2
424a66: or rax, r13
424a69: or rax, 1
424a6d: mov qword ptr [rcx + 8], rax
424a71: mov rax, r12
424a74: or rax, 1
424a78: mov qword ptr [rdx + 8], rax
424a7c: mov qword ptr [rcx + r14], r12
424a80: mov eax, dword ptr [rip + 0x9e22e]
424a86: lea r8, [rcx + 0x10]
424a8a: test eax, eax
424a8c: je 0x424232
424a92: jmp 0x4247fb
424a97: mov edi, eax
424a99: mov eax, edi
424a9b: shl eax, 6
424a9e: sub eax, 2
424aa1: lea rdx, [rbx + rax*8 + 0x60]
424aa6: mov eax, 1
424aab: jmp 0x4246b4
424ab0: lea rdi, [rip + 0x7176c]
424ab7: call 0x421740
424abc: lea rdi, [rip + 0x7224d]
424ac3: call 0x421740
424ac8: mov edi, 3
424acd: jmp 0x424a99
424acf: lea rax, [rip + 0x9bcca]
424ad6: or qword ptr [rcx + r14 + 8], 1
424adc: cmp rbx, rax
424adf: je 0x424a80
424ae1: or qword ptr [rcx + 8], 4
424ae6: jmp 0x424a80
424ae8: lea rcx, [rip + 0x72729]
424aef: mov edx, 0xfb1
424af4: lea rsi, [rip + 0x71595]
424afb: lea rdi, [rip + 0x71718]
424b02: call 0x4216e0
424b07: lea rdx, [rip + 0x9bc92]
424b0e: sub rax, r13
424b11: lea rcx, [r8 + r13]
424b15: mov rbp, qword ptr [rsp + 0x20]
424b1a: cmp rbx, rdx
424b1d: mov qword ptr [rbx + 0x60], rcx
424b21: setne dl
424b24: or rax, 1
424b28: add r8, 0x10
424b2c: movzx edx, dl
424b2f: shl rdx, 2
424b33: or rdx, r13
424b36: or rdx, 1
424b3a: mov qword ptr [r8 - 8], rdx
424b3e: mov qword ptr [rcx + 8], rax
424b42: mov eax, dword ptr [rip + 0x9e16c]
424b48: test eax, eax
424b4a: je 0x424232
424b50: jmp 0x4247fb
424b55: mov rsi, rbx
424b58: mov rdi, r13
424b5b: mov rbp, qword ptr [rsp + 0x20]
424b60: call 0x423610
424b65: mov r8, rax
424b68: test rax, rax
424b6b: je 0x424818
424b71: mov eax, dword ptr [rip + 0x9e13d]
424b77: test eax, eax
424b79: je 0x424232
424b7f: jmp 0x4247fb
424b84: lea rdi, [rip + 0x72255]
424b8b: call 0x421740
424b90: mov rbp, qword ptr [rsp + 0x20]
424b95: mov r14, qword ptr [rdx + 0x28]
424b99: jmp 0x424b9f
424b9b: mov r14, qword ptr [r14 + 0x28]
424b9f: mov rdx, qword ptr [r14 + 8]
424ba3: mov r15, rdx
424ba6: and r15, 0xfffffffffffffff8
424baa: cmp r15, r13
424bad: jb 0x424b9b
424baf: cmp qword ptr [rax + 8], r14
424bb3: je 0x424bc1
424bb5: mov rax, qword ptr [r14 + 0x10]
424bb9: cmp rdx, qword ptr [rax + 8]
424bbd: cmove r14, rax
424bc1: mov r12, r15
424bc4: mov rdi, r14
424bc7: mov qword ptr [rsp + 8], r11
424bcc: call 0x421cd0
424bd1: sub r12, r13
424bd4: mov r11, qword ptr [rsp + 8]
424bd9: cmp r12, 0x1f
424bdd: jbe 0x424caf
424be3: mov rax, qword ptr [rbx + 0x70]
424be7: lea rdx, [r14 + r13]
424beb: cmp qword ptr [rax + 0x18], r11
424bef: jne 0x424ca3
424bf5: movq xmm0, rax
424bfa: movq xmm3, r11
424bff: punpcklqdq xmm0, xmm3
424c03: movups xmmword ptr [rdx + 0x10], xmm0
424c07: mov qword ptr [rbx + 0x70], rdx
424c0b: mov qword ptr [rax + 0x18], rdx
424c0f: cmp r12, 0x3ff
424c16: jbe 0x424c20
424c18: pxor xmm0, xmm0
424c1c: movups xmmword ptr [rdx + 0x20], xmm0
424c20: lea rax, [rip + 0x9bb79]
424c27: cmp rbx, rax
424c2a: setne al
424c2d: movzx eax, al
424c30: shl rax, 2
424c34: or rax, r13
424c37: or rax, 1
424c3b: mov qword ptr [r14 + 8], rax
424c3f: mov rax, r12
424c42: or rax, 1
424c46: mov qword ptr [rdx + 8], rax
424c4a: mov qword ptr [r14 + r15], r12
424c4e: mov eax, dword ptr [rip + 0x9e060]
424c54: lea r8, [r14 + 0x10]
424c58: test eax, eax
424c5a: je 0x424232
424c60: jmp 0x4247fb
424c65: lea rcx, [rip + 0x725ac]
424c6c: mov edx, 0xf10
424c71: lea rsi, [rip + 0x71418]
424c78: lea rdi, [rip + 0x71584]
424c7f: call 0x4216e0
424c84: lea rcx, [rip + 0x7258d]
424c8b: mov edx, 0xeff
424c90: lea rsi, [rip + 0x713f9]
424c97: lea rdi, [rip + 0x7154a]
424c9e: call 0x4216e0
424ca3: lea rdi, [rip + 0x720de]
424caa: call 0x421740
424caf: lea rax, [rip + 0x9baea]
424cb6: or qword ptr [r14 + r15 + 8], 1
424cbc: cmp rbx, rax
424cbf: je 0x424c4e
424cc1: or qword ptr [r14 + 8], 4
424cc6: jmp 0x424c4e
424cc8: lea rcx, [rip + 0x72549]
424ccf: mov edx, 0xf0c
424cd4: lea rsi, [rip + 0x713b5]
424cdb: lea rdi, [rip + 0x71521]
424ce2: call 0x4216e0
424ce7: lea rcx, [rip + 0x7252a]
424cee: mov edx, 0xfc4
424cf3: lea rsi, [rip + 0x71396]
424cfa: lea rdi, [rip + 0x720af]
424d01: call 0x4216e0
424d06: nop word ptr cs:[rax + rax]
424d10: mov rax, 0xffffffffffffffd8
424d17: push rbp
424d18: mov rbp, qword ptr fs:[rax]
424d1c: test rbp, rbp
424d1f: je 0x424db0
424d25: mov eax, dword ptr fs:[0x18]
424d2d: test eax, eax
424d2f: jne 0x424e20
424d35: mov edx, 1
424d3a: cmpxchg dword ptr [rbp], edx
424d3e: mov esi, 0x280
424d43: mov rdi, rbp
424d46: call 0x423e90
424d4b: mov r8, rax
424d4e: test rax, rax
424d51: je 0x424df0
424d57: mov eax, dword ptr fs:[0x18]
424d5f: test eax, eax
424d61: jne 0x424e40
424d67: sub dword ptr [rbp], 1
424d6b: test r8, r8
424d6e: je 0x424da5
424d70: mov qword ptr fs:[0xffffffffffffffc8], r8
424d79: lea rdi, [r8 + 8]
424d7d: xor eax, eax
424d7f: and rdi, 0xfffffffffffffff8
424d83: mov qword ptr [r8], 0
424d8a: mov qword ptr [r8 + 0x278], 0
424d95: sub r8, rdi
424d98: lea ecx, [r8 + 0x280]
424d9f: shr ecx, 3
424da2: rep stosq qword ptr [rdi], rax
424da5: pop rbp
424da6: ret 
424da7: nop word ptr [rax + rax]
424db0: call 0x421b40
424db5: mov rbp, rax
424db8: test rax, rax
424dbb: jne 0x424d3e
424dbd: xor esi, esi
424dbf: mov edi, 0x280
424dc4: call 0x421f10
424dc9: mov esi, 0x280
424dce: mov rdi, rax
424dd1: mov rbp, rax
424dd4: call 0x423e90
424dd9: mov r8, rax
424ddc: test rax, rax
424ddf: jne 0x424e10
424de1: test rbp, rbp
424de4: je 0x424d6b
424de6: nop word ptr cs:[rax + rax]
424df0: mov rdi, rbp
424df3: mov esi, 0x280
424df8: call 0x4224b0
424dfd: mov esi, 0x280
424e02: mov rdi, rax
424e05: mov rbp, rax
424e08: call 0x423e90
424e0d: mov r8, rax
424e10: test rbp, rbp
424e13: je 0x424d6b
424e19: jmp 0x424d57
424e1e: nop 
424e20: xor eax, eax
424e22: mov edx, 1
424e27: lock cmpxchg dword ptr [rbp], edx
424e2c: je 0x424d3e
424e32: mov rdi, rbp
424e35: call 0x421250
424e3a: jmp 0x424d3e
424e3f: nop 
424e40: xor eax, eax
424e42: xchg dword ptr [rbp], eax
424e45: cmp eax, 1
424e48: jle 0x424d6b
424e4e: xor r10d, r10d
424e51: mov edx, 1
424e56: mov esi, 0x81
424e5b: mov rdi, rbp
424e5e: mov eax, 0xca
424e63: syscall 
424e65: jmp 0x424d6b
424e6a: nop word ptr [rax + rax]
424e70: push r15
424e72: push r14
424e74: push r13
424e76: push r12
424e78: push rbp
424e79: push rbx
424e7a: sub rsp, 8
424e7e: test rdx, rdx
424e81: js 0x424fe0
424e87: add rdx, 0x17
424e8b: mov eax, 0x20
424e90: mov rbx, rsi
424e93: mov rbp, rdi
424e96: mov r15, rdx
424e99: and r15, 0xfffffffffffffff0
424e9d: cmp rdx, 0x1f
424ea1: cmovbe r15, rax
424ea5: lea rsi, [r15 + rsi + 0x20]
424eaa: call 0x423e90
424eaf: mov r12, rax
424eb2: test rax, rax
424eb5: je 0x424fc5
424ebb: xor edx, edx
424ebd: lea rsi, [rax - 0x10]
424ec1: div rbx
424ec4: test rdx, rdx
424ec7: je 0x424f6e
424ecd: mov rax, rbx
424ed0: lea r13, [r12 + rbx - 1]
424ed5: neg rax
424ed8: and r13, rax
424edb: sub r13, 0x10
424edf: mov rcx, r13
424ee2: sub rcx, rsi
424ee5: cmp rcx, 0x1f
424ee9: jbe 0x424ff8
424eef: mov rax, qword ptr [r12 - 8]
424ef4: mov r14, rax
424ef7: and r14, 0xfffffffffffffff8
424efb: sub r14, rcx
424efe: and eax, 2
424f01: jne 0x425010
424f07: lea rdi, [rip + 0x9b892]
424f0e: mov rdx, r14
424f11: cmp rbp, rdi
424f14: je 0x424f1f
424f16: or rdx, 4
424f1a: mov eax, 4
424f1f: or rdx, 1
424f23: mov rdi, rbp
424f26: mov qword ptr [r13 + 8], rdx
424f2a: or qword ptr [r13 + r14 + 8], 1
424f30: mov rdx, qword ptr [r12 - 8]
424f35: and edx, 7
424f38: or rdx, rcx
424f3b: or rax, rdx
424f3e: mov edx, 1
424f43: mov qword ptr [r12 - 8], rax
424f48: call 0x422c40
424f4d: cmp r14, r15
424f50: jb 0x425027
424f56: lea r12, [r13 + 0x10]
424f5a: xor edx, edx
424f5c: mov rax, r12
424f5f: div rbx
424f62: test rdx, rdx
424f65: jne 0x425027
424f6b: mov rsi, r13
424f6e: mov rax, qword ptr [rsi + 8]
424f72: test al, 2
424f74: jne 0x424fc5
424f76: and rax, 0xfffffffffffffff8
424f7a: lea rdx, [r15 + 0x20]
424f7e: cmp rdx, rax
424f81: jae 0x424fc5
424f83: sub rax, r15
424f86: lea rcx, [rip + 0x9b813]
424f8d: lea r8, [rsi + r15]
424f91: mov rdi, rbp
424f94: mov rdx, rax
424f97: or rdx, 4
424f9b: cmp rbp, rcx
424f9e: cmovne rax, rdx
424fa2: mov edx, 1
424fa7: or rax, 1
424fab: mov qword ptr [r8 + 8], rax
424faf: mov rax, qword ptr [rsi + 8]
424fb3: and eax, 7
424fb6: or r15, rax
424fb9: mov qword ptr [rsi + 8], r15
424fbd: mov rsi, r8
424fc0: call 0x422c40
424fc5: add rsp, 8
424fc9: mov rax, r12
424fcc: pop rbx
424fcd: pop rbp
424fce: pop r12
424fd0: pop r13
424fd2: pop r14
424fd4: pop r15
424fd6: ret 
424fd7: nop word ptr [rax + rax]
424fe0: mov rax, 0xffffffffffffffc0
424fe7: xor r12d, r12d
424fea: mov dword ptr fs:[rax], 0xc
424ff1: jmp 0x424fc5
424ff3: nop dword ptr [rax + rax]
424ff8: add r13, rbx
424ffb: mov rcx, r13
424ffe: sub rcx, rsi
425001: jmp 0x424eef
425006: nop word ptr cs:[rax + rax]
425010: add rcx, qword ptr [r12 - 0x10]
425015: or r14, 2
425019: lea r12, [r13 + 0x10]
42501d: mov qword ptr [r13], rcx
425021: mov qword ptr [r13 + 8], r14
425025: jmp 0x424fc5
425027: lea rcx, [rip + 0x721fa]
42502e: mov edx, 0x1275
425033: lea rsi, [rip + 0x71056]
42503a: lea rdi, [rip + 0x71dc7]
425041: call 0x4216e0
425046: nop word ptr cs:[rax + rax]
425050: endbr64 
425054: test rdi, rdi
425057: je 0x4250e8
42505d: push rbp
42505e: mov rbp, rdi
425061: mov eax, dword ptr fs:[0x18]
425069: test eax, eax
42506b: jne 0x4250f0
425071: mov edx, 1
425076: cmpxchg dword ptr [rip + 0x9b723], edx
42507d: xor esi, esi
42507f: mov rdi, rbp
425082: call 0x421320
425087: mov r8, rax
42508a: test rax, rax
42508d: je 0x425186
425093: test byte ptr [rax + 8], 2
425097: je 0x4250b8
425099: mov eax, dword ptr fs:[0x18]
4250a1: test eax, eax
4250a3: jne 0x425120
4250a5: sub dword ptr [rip + 0x9b6f4], 1
4250ac: mov rdi, r8
4250af: pop rbp
4250b0: jmp 0x421910
4250b5: nop dword ptr [rax]
4250b8: mov edx, 1
4250bd: mov rsi, rax
4250c0: lea rdi, [rip + 0x9b6d9]
4250c7: call 0x422c40
4250cc: mov eax, dword ptr fs:[0x18]
4250d4: test eax, eax
4250d6: jne 0x425158
4250dc: sub dword ptr [rip + 0x9b6bd], 1
4250e3: pop rbp
4250e4: ret 
4250e5: nop dword ptr [rax]
4250e8: ret 
4250e9: nop dword ptr [rax]
4250f0: xor eax, eax
4250f2: mov edx, 1
4250f7: lock cmpxchg dword ptr [rip + 0x9b6a1], edx
4250ff: je 0x42507d
425105: lea rdi, [rip + 0x9b694]
42510c: call 0x421250
425111: jmp 0x42507d
425116: nop word ptr cs:[rax + rax]
425120: xor eax, eax
425122: xchg dword ptr [rip + 0x9b678], eax
425128: cmp eax, 1
42512b: jle 0x4250ac
425131: xor r10d, r10d
425134: mov edx, 1
425139: mov esi, 0x81
42513e: mov eax, 0xca
425143: lea rdi, [rip + 0x9b656]
42514a: syscall 
42514c: jmp 0x4250ac
425151: nop dword ptr [rax]
425158: xor eax, eax
42515a: xchg dword ptr [rip + 0x9b640], eax
425160: cmp eax, 1
425163: jle 0x4250e3
425169: xor r10d, r10d
42516c: mov edx, 1
425171: mov esi, 0x81
425176: mov eax, 0xca
42517b: lea rdi, [rip + 0x9b61e]
425182: syscall 
425184: pop rbp
425185: ret 
425186: lea rdi, [rip + 0x70fee]
42518d: call 0x421740
425192: nop word ptr cs:[rax + rax]
42519d: nop dword ptr [rax]
4251a0: push r15
4251a2: push r14
4251a4: push r13
4251a6: push r12
4251a8: push rbp
4251a9: push rbx
4251aa: mov rbx, rdx
4251ad: sub rsp, 0x18
4251b1: mov rdx, qword ptr [rsi + 8]
4251b5: cmp rdx, 0x10
4251b9: jbe 0x425360
4251bf: mov r12, rcx
4251c2: mov rcx, qword ptr [rdi + 0x888]
4251c9: mov r13, rdi
4251cc: cmp rcx, rbx
4251cf: jbe 0x425360
4251d5: mov r15, rdx
4251d8: and r15d, 2
4251dc: jne 0x4253d5
4251e2: lea r14, [rsi + rbx]
4251e6: mov rbp, rsi
4251e9: mov rsi, qword ptr [r14 + 8]
4251ed: mov rax, rsi
4251f0: and rax, 0xfffffffffffffff8
4251f4: cmp rcx, rax
4251f7: jbe 0x425370
4251fd: cmp rsi, 0x10
425201: jbe 0x425370
425207: cmp rbx, r12
42520a: jae 0x425261
42520c: cmp qword ptr [rdi + 0x60], r14
425210: je 0x425380
425216: test byte ptr [r14 + rax + 8], 1
42521c: je 0x4252f8
425222: lea rsi, [r12 - 0xf]
425227: mov rdi, r13
42522a: call 0x423e90
42522f: mov r8, rax
425232: test rax, rax
425235: je 0x425296
425237: lea rax, [rax - 0x10]
42523b: cmp r14, rax
42523e: jne 0x425330
425244: mov rax, qword ptr [r8 - 8]
425248: and rax, 0xfffffffffffffff8
42524c: add rbx, rax
42524f: cmp r12, rbx
425252: ja 0x4253f4
425258: mov rdx, qword ptr [rbp + 8]
42525c: lea r14, [rbp + rbx]
425261: mov rax, rbx
425264: and edx, 7
425267: sub rax, r12
42526a: cmp rax, 0x1f
42526e: ja 0x4252b0
425270: lea rax, [rip + 0x9b529]
425277: cmp r13, rax
42527a: mov eax, 4
42527f: cmovne r15, rax
425283: or rbx, rdx
425286: or rbx, r15
425289: mov qword ptr [rbp + 8], rbx
42528d: or qword ptr [r14 + 8], 1
425292: lea r8, [rbp + 0x10]
425296: add rsp, 0x18
42529a: mov rax, r8
42529d: pop rbx
42529e: pop rbp
42529f: pop r12
4252a1: pop r13
4252a3: pop r14
4252a5: pop r15
4252a7: ret 
4252a8: nop dword ptr [rax + rax]
4252b0: lea rcx, [rip + 0x9b4e9]
4252b7: lea rsi, [rbp + r12]
4252bc: cmp r13, rcx
4252bf: je 0x4252cb
4252c1: or rax, 4
4252c5: mov r15d, 4
4252cb: mov rbx, r12
4252ce: or rax, 1
4252d2: mov rdi, r13
4252d5: or rbx, rdx
4252d8: mov edx, 1
4252dd: or rbx, r15
4252e0: mov qword ptr [rbp + 8], rbx
4252e4: mov qword ptr [rsi + 8], rax
4252e8: or qword ptr [r14 + 8], 1
4252ed: call 0x422c40
4252f2: jmp 0x425292
4252f4: nop dword ptr [rax]
4252f8: add rax, rbx
4252fb: cmp r12, rax
4252fe: ja 0x425222
425304: mov rdi, r14
425307: mov qword ptr [rsp + 8], rax
42530c: call 0x421cd0
425311: mov rax, qword ptr [rsp + 8]
425316: mov rdx, qword ptr [rbp + 8]
42531a: lea r14, [rbp + rax]
42531f: mov rbx, rax
425322: jmp 0x425261
425327: nop word ptr [rax + rax]
425330: mov rdi, r8
425333: lea rdx, [rbx - 8]
425337: lea rsi, [rbp + 0x10]
42533b: mov qword ptr [rsp + 8], r8
425340: call 0x401060
425345: mov edx, 1
42534a: mov rsi, rbp
42534d: mov rdi, r13
425350: call 0x422c40
425355: mov r8, qword ptr [rsp + 8]
42535a: jmp 0x425296
42535f: nop 
425360: lea rdi, [rip + 0x70ed9]
425367: call 0x421740
42536c: nop dword ptr [rax]
425370: lea rdi, [rip + 0x70efe]
425377: call 0x421740
42537c: nop dword ptr [rax]
425380: lea rcx, [rbx + rax]
425384: lea rax, [r12 + 0x20]
425389: cmp rax, rcx
42538c: ja 0x425222
425392: mov rax, rdx
425395: lea rdx, [rip + 0x9b404]
42539c: lea r8, [rbp + 0x10]
4253a0: and eax, 7
4253a3: cmp rdi, rdx
4253a6: mov edx, 4
4253ab: cmovne r15, rdx
4253af: or rax, r12
4253b2: lea rdx, [rbp + r12]
4253b7: or rax, r15
4253ba: mov qword ptr [rbp + 8], rax
4253be: mov rax, rcx
4253c1: sub rax, r12
4253c4: mov qword ptr [rdi + 0x60], rdx
4253c8: or rax, 1
4253cc: mov qword ptr [rdx + 8], rax
4253d0: jmp 0x425296
4253d5: lea rcx, [rip + 0x71ddc]
4253dc: mov edx, 0x11ce
4253e1: lea rsi, [rip + 0x70ca8]
4253e8: lea rdi, [rip + 0x70e6d]
4253ef: call 0x4216e0
4253f4: lea rcx, [rip + 0x71dbd]
4253fb: mov edx, 0x1213
425400: lea rsi, [rip + 0x70c89]
425407: lea rdi, [rip + 0x71a42]
42540e: call 0x4216e0
425413: nop word ptr cs:[rax + rax]
42541e: nop 
425420: push rbp
425421: lea rcx, [rip + 0x9b378]
425428: lea rdx, [rcx + 0x60]
42542c: sub rsp, 0x10
425430: mov rax, qword ptr fs:[0x28]
425439: mov qword ptr [rsp + 8], rax
42543e: xor eax, eax
425440: mov rax, 0xffffffffffffffd8
425447: mov dword ptr [rip + 0x9b293], 0
425451: mov qword ptr fs:[rax], rcx
425455: mov rax, rdx
425458: add rcx, 0x850
42545f: nop 
425460: movq xmm0, rax
425465: add rax, 0x10
425469: punpcklqdq xmm0, xmm0
42546d: movaps xmmword ptr [rax], xmm0
425470: cmp rax, rcx
425473: jne 0x425460
425475: mov qword ptr [rip + 0x9d838], 0x80
425480: mov rbp, rsp
425483: mov edi, 0x19
425488: mov dword ptr [rip + 0x9b316], 0
425492: mov rsi, rbp
425495: mov qword ptr [rip + 0x9b364], rdx
42549c: lea rdx, [rip - 0x2ef3]
4254a3: call 0x454ed0
4254a8: lea rdx, [rip - 0x3e7f]
4254af: mov rsi, rbp
4254b2: mov edi, 8
4254b7: call 0x454ed0
4254bc: lea rdx, [rip - 0x3e23]
4254c3: mov rsi, rbp
4254c6: mov edi, 2
4254cb: call 0x454ed0
4254d0: lea rdx, [rip - 0x3e87]
4254d7: mov rsi, rbp
4254da: mov edi, 0x13
4254df: call 0x454ed0
4254e4: lea rdx, [rip - 0x3edb]
4254eb: mov rsi, rbp
4254ee: mov edi, 1
4254f3: call 0x454ed0
4254f8: lea rdx, [rip - 0x3e7f]
4254ff: mov rsi, rbp
425502: mov edi, 0xc
425507: call 0x454ed0
42550c: lea rdx, [rip - 0x4283]
425513: mov rsi, rbp
425516: mov edi, 0x12
42551b: call 0x454ed0
425520: lea rdx, [rip - 0x4287]
425527: mov rsi, rbp
42552a: mov edi, 0x16
42552f: call 0x454ed0
425534: lea rdx, [rip - 0x428b]
42553b: mov rsi, rbp
42553e: mov edi, 0x18
425543: call 0x454ed0
425548: lea rdx, [rip - 0x425f]
42554f: mov rsi, rbp
425552: mov edi, 0x15
425557: call 0x454ed0
42555c: lea rdx, [rip - 0x4253]
425563: mov rsi, rbp
425566: mov edi, 0xe
42556b: call 0x454ed0
425570: lea rdx, [rip - 0x3ec7]
425577: mov rsi, rbp
42557a: mov edi, 6
42557f: call 0x454ed0
425584: mov dword ptr [rip + 0x9b156], 1
42558e: mov rax, qword ptr [rsp + 8]
425593: xor rax, qword ptr fs:[0x28]
42559c: jne 0x4255a4
42559e: add rsp, 0x10
4255a2: pop rbp
4255a3: ret 
4255a4: call 0x4547a0
4255a9: nop dword ptr [rax]
4255b0: endbr64 
4255b4: mov rsi, rdi
4255b7: add rsi, 1
4255bb: jb 0x42576d
4255c1: push rbx
4255c2: mov rbx, rdi
4255c5: sub rsp, 0x10
4255c9: mov eax, dword ptr fs:[0x18]
4255d1: test eax, eax
4255d3: jne 0x4256f8
4255d9: mov edx, 1
4255de: cmpxchg dword ptr [rip + 0x9b1bb], edx
4255e5: mov rax, qword ptr [rip + 0x9b214]
4255ec: lea rdx, [rip + 0x9b20d]
4255f3: cmp rax, rdx
4255f6: je 0x425642
4255f8: mov rdx, qword ptr [rax + 8]
4255fc: test dl, 2
4255ff: jne 0x425761
425605: mov rcx, rdx
425608: and rcx, 0xfffffffffffffff8
42560c: cmp rcx, 0x1f
425610: jbe 0x425761
425616: and edx, 1
425619: je 0x425761
42561f: test byte ptr [rip + 0x9b17e], 2
425626: jne 0x425642
425628: mov rdx, qword ptr [rip + 0x9b9f9]
42562f: add rax, rcx
425632: add rdx, qword ptr [rip + 0x9b10f]
425639: cmp rax, rdx
42563c: jne 0x425761
425642: lea rdi, [rip + 0x9b157]
425649: call 0x423e90
42564e: mov r8, rax
425651: mov eax, dword ptr fs:[0x18]
425659: test eax, eax
42565b: jne 0x425730
425661: sub dword ptr [rip + 0x9b138], 1
425668: test r8, r8
42566b: je 0x4256e8
42566d: lea rax, [r8 - 0x10]
425671: mov rsi, qword ptr [r8 - 8]
425675: mov r9d, 0xff
42567b: mov rcx, rax
42567e: shr rax, 0xb
425682: shr rcx, 3
425686: mov rdx, rsi
425689: xor ecx, eax
42568b: mov eax, 2
425690: cmp cl, 1
425693: cmove ecx, eax
425696: and rdx, 0xfffffffffffffff8
42569a: and esi, 2
42569d: lea rdi, [rdx - 0x10]
4256a1: lea rax, [rdx - 8]
4256a5: cmovne rax, rdi
4256a9: movzx esi, cl
4256ac: lea rdi, [rsi - 1]
4256b0: sub rax, 1
4256b4: cmp rbx, rax
4256b7: jae 0x4256e4
4256b9: nop dword ptr [rax]
4256c0: mov rdx, rax
4256c3: sub rdx, rbx
4256c6: cmp rdx, 0xff
4256cd: cmova rdx, r9
4256d1: cmp rsi, rdx
4256d4: cmove rdx, rdi
4256d8: mov byte ptr [r8 + rax], dl
4256dc: sub rax, rdx
4256df: cmp rbx, rax
4256e2: jb 0x4256c0
4256e4: mov byte ptr [r8 + rbx], cl
4256e8: add rsp, 0x10
4256ec: mov rax, r8
4256ef: pop rbx
4256f0: ret 
4256f1: nop dword ptr [rax]
4256f8: xor eax, eax
4256fa: mov edx, 1
4256ff: lock cmpxchg dword ptr [rip + 0x9b099], edx
425707: je 0x4255e5
42570d: lea rdi, [rip + 0x9b08c]
425714: mov qword ptr [rsp + 8], rsi
425719: call 0x421250
42571e: mov rsi, qword ptr [rsp + 8]
425723: jmp 0x4255e5
425728: nop dword ptr [rax + rax]
425730: xor eax, eax
425732: xchg dword ptr [rip + 0x9b068], eax
425738: cmp eax, 1
42573b: jle 0x425668
425741: xor r10d, r10d
425744: mov edx, 1
425749: mov esi, 0x81
42574e: mov eax, 0xca
425753: lea rdi, [rip + 0x9b046]
42575a: syscall 
42575c: jmp 0x425668
425761: lea rdi, [rip + 0x70b2a]
425768: call 0x421740
42576d: mov rax, 0xffffffffffffffc0
425774: xor r8d, r8d
425777: mov dword ptr fs:[rax], 0xc
42577e: mov rax, r8
425781: ret 
425782: nop word ptr cs:[rax + rax]
42578d: nop dword ptr [rax]
425790: endbr64 
425794: push rbp
425795: mov rbp, rsi
425798: sub rsp, 0x10
42579c: cmp rdi, 0x10
4257a0: jbe 0x425940
4257a6: cmp rdi, 0x1f
4257aa: ja 0x4258f0
4257b0: mov esi, 0x20
4257b5: cmp rbp, -0x41
4257b9: ja 0x425950
4257bf: mov eax, dword ptr fs:[0x18]
4257c7: test eax, eax
4257c9: jne 0x4259c8
4257cf: mov edx, 1
4257d4: cmpxchg dword ptr [rip + 0x9afc5], edx
4257db: mov rax, qword ptr [rip + 0x9b01e]
4257e2: lea rdx, [rip + 0x9b017]
4257e9: cmp rax, rdx
4257ec: je 0x425838
4257ee: mov rdx, qword ptr [rax + 8]
4257f2: test dl, 2
4257f5: jne 0x4259f8
4257fb: mov rcx, rdx
4257fe: and rcx, 0xfffffffffffffff8
425802: cmp rcx, 0x1f
425806: jbe 0x4259f8
42580c: and edx, 1
42580f: je 0x4259f8
425815: test byte ptr [rip + 0x9af88], 2
42581c: jne 0x425838
42581e: mov rdx, qword ptr [rip + 0x9b803]
425825: add rax, rcx
425828: add rdx, qword ptr [rip + 0x9af19]
42582f: cmp rax, rdx
425832: jne 0x4259f8
425838: lea rdx, [rbp + 1]
42583c: lea rdi, [rip + 0x9af5d]
425843: call 0x424e70
425848: mov r8, rax
42584b: mov eax, dword ptr fs:[0x18]
425853: test eax, eax
425855: jne 0x425990
42585b: sub dword ptr [rip + 0x9af3e], 1
425862: test r8, r8
425865: je 0x4258df
425867: lea rax, [r8 - 0x10]
42586b: mov rsi, qword ptr [r8 - 8]
42586f: mov r9d, 0xff
425875: mov rcx, rax
425878: shr rax, 0xb
42587c: shr rcx, 3
425880: xor ecx, eax
425882: mov eax, 2
425887: cmp cl, 1
42588a: cmove ecx, eax
42588d: mov rax, rsi
425890: and rax, 0xfffffffffffffff8
425894: and esi, 2
425897: lea rdi, [rax - 0x10]
42589b: lea rdx, [rax - 8]
42589f: movzx esi, cl
4258a2: cmovne rdx, rdi
4258a6: lea rdi, [rsi - 1]
4258aa: sub rdx, 1
4258ae: cmp rbp, rdx
4258b1: jae 0x4258db
4258b3: nop dword ptr [rax + rax]
4258b8: mov rax, rdx
4258bb: sub rax, rbp
4258be: cmp rax, 0xff
4258c4: cmova rax, r9
4258c8: cmp rsi, rax
4258cb: cmove rax, rdi
4258cf: mov byte ptr [r8 + rdx], al
4258d3: sub rdx, rax
4258d6: cmp rbp, rdx
4258d9: jb 0x4258b8
4258db: mov byte ptr [r8 + rbp], cl
4258df: add rsp, 0x10
4258e3: mov rax, r8
4258e6: pop rbp
4258e7: ret 
4258e8: nop dword ptr [rax + rax]
4258f0: movabs rax, 0x8000000000000000
4258fa: cmp rdi, rax
4258fd: ja 0x425970
4258ff: mov rax, 0xffffffffffffffdf
425906: sub rax, rdi
425909: cmp rax, rsi
42590c: jb 0x425950
42590e: lea rax, [rdi - 1]
425912: test rax, rdi
425915: je 0x425a04
42591b: mov esi, 0x20
425920: cmp rdi, 0x20
425924: je 0x4257bf
42592a: nop word ptr [rax + rax]
425930: add rsi, rsi
425933: cmp rdi, rsi
425936: ja 0x425930
425938: jmp 0x4257bf
42593d: nop dword ptr [rax]
425940: add rsp, 0x10
425944: mov rdi, rbp
425947: xor esi, esi
425949: pop rbp
42594a: jmp 0x4255b0
42594f: nop 
425950: mov rax, 0xffffffffffffffc0
425957: xor r8d, r8d
42595a: mov dword ptr fs:[rax], 0xc
425961: add rsp, 0x10
425965: mov rax, r8
425968: pop rbp
425969: ret 
42596a: nop word ptr [rax + rax]
425970: mov rax, 0xffffffffffffffc0
425977: xor r8d, r8d
42597a: mov dword ptr fs:[rax], 0x16
425981: jmp 0x4258df
425986: nop word ptr cs:[rax + rax]
425990: xor eax, eax
425992: xchg dword ptr [rip + 0x9ae08], eax
425998: cmp eax, 1
42599b: jle 0x425862
4259a1: xor r10d, r10d
4259a4: mov edx, 1
4259a9: mov esi, 0x81
4259ae: mov eax, 0xca
4259b3: lea rdi, [rip + 0x9ade6]
4259ba: syscall 
4259bc: jmp 0x425862
4259c1: nop dword ptr [rax]
4259c8: xor eax, eax
4259ca: mov edx, 1
4259cf: lock cmpxchg dword ptr [rip + 0x9adc9], edx
4259d7: je 0x4257db
4259dd: lea rdi, [rip + 0x9adbc]
4259e4: mov qword ptr [rsp + 8], rsi
4259e9: call 0x421250
4259ee: mov rsi, qword ptr [rsp + 8]
4259f3: jmp 0x4257db
4259f8: lea rdi, [rip + 0x70893]
4259ff: call 0x421740
425a04: mov rsi, rdi
425a07: jmp 0x4257bf
425a0c: nop dword ptr [rax]
425a10: endbr64 
425a14: push r15
425a16: mov r15, rsi
425a19: push r14
425a1b: push r13
425a1d: push r12
425a1f: push rbp
425a20: push rbx
425a21: sub rsp, 0x28
425a25: mov rax, qword ptr fs:[0x28]
425a2e: mov qword ptr [rsp + 0x18], rax
425a33: xor eax, eax
425a35: add r15, 1
425a39: jb 0x425e18
425a3f: mov r13, rdi
425a42: mov rbp, rsi
425a45: test rdi, rdi
425a48: je 0x425d20
425a4e: test rsi, rsi
425a51: je 0x425d38
425a57: mov eax, dword ptr fs:[0x18]
425a5f: test eax, eax
425a61: jne 0x425d88
425a67: mov edx, 1
425a6c: cmpxchg dword ptr [rip + 0x9ad2d], edx
425a73: lea rsi, [rsp + 0x10]
425a78: mov rdi, r13
425a7b: call 0x421320
425a80: mov r14, rax
425a83: mov eax, dword ptr fs:[0x18]
425a8b: test eax, eax
425a8d: jne 0x425d50
425a93: sub dword ptr [rip + 0x9ad06], 1
425a9a: test r14, r14
425a9d: je 0x425e3f
425aa3: test r15, r15
425aa6: js 0x425c5b
425aac: lea rax, [r15 + 0x17]
425ab0: mov ecx, 0x20
425ab5: mov rdx, rax
425ab8: mov rbx, rcx
425abb: and rdx, 0xfffffffffffffff0
425abf: cmp rax, 0x1f
425ac3: cmova rbx, rdx
425ac7: mov rdx, qword ptr [r14 + 8]
425acb: mov eax, dword ptr fs:[0x18]
425ad3: test eax, eax
425ad5: jne 0x425de8
425adb: mov ecx, 1
425ae0: cmpxchg dword ptr [rip + 0x9acb9], ecx
425ae7: and rdx, 0xfffffffffffffff8
425aeb: test byte ptr [r14 + 8], 2
425af0: je 0x425be0
425af6: mov rsi, rbx
425af9: mov rdi, r14
425afc: mov qword ptr [rsp + 8], rdx
425b01: call 0x4219b0
425b06: mov rdx, qword ptr [rsp + 8]
425b0b: test rax, rax
425b0e: lea r12, [rax + 0x10]
425b12: je 0x425c70
425b18: mov eax, dword ptr fs:[0x18]
425b20: test eax, eax
425b22: jne 0x425db0
425b28: sub dword ptr [rip + 0x9ac71], 1
425b2f: test r12, r12
425b32: je 0x425bb0
425b34: lea rdx, [r12 - 0x10]
425b39: mov rsi, qword ptr [r12 - 8]
425b3e: mov r8d, 0xff
425b44: mov rax, rdx
425b47: shr rdx, 0xb
425b4b: shr rax, 3
425b4f: mov rcx, rsi
425b52: xor eax, edx
425b54: mov edx, 2
425b59: cmp al, 1
425b5b: cmove eax, edx
425b5e: and rcx, 0xfffffffffffffff8
425b62: and esi, 2
425b65: lea rdi, [rcx - 0x10]
425b69: lea rdx, [rcx - 8]
425b6d: cmovne rdx, rdi
425b71: movzx esi, al
425b74: lea rdi, [rsi - 1]
425b78: sub rdx, 1
425b7c: cmp rbp, rdx
425b7f: jae 0x425bac
425b81: nop dword ptr [rax]
425b88: mov rcx, rdx
425b8b: sub rcx, rbp
425b8e: cmp rcx, 0xff
425b95: cmova rcx, r8
425b99: cmp rsi, rcx
425b9c: cmove rcx, rdi
425ba0: mov byte ptr [r12 + rdx], cl
425ba4: sub rdx, rcx
425ba7: cmp rbp, rdx
425baa: jb 0x425b88
425bac: mov byte ptr [r12 + rbp], al
425bb0: mov rax, qword ptr [rsp + 0x18]
425bb5: xor rax, qword ptr fs:[0x28]
425bbe: jne 0x425e2e
425bc4: add rsp, 0x28
425bc8: mov rax, r12
425bcb: pop rbx
425bcc: pop rbp
425bcd: pop r12
425bcf: pop r13
425bd1: pop r14
425bd3: pop r15
425bd5: ret 
425bd6: nop word ptr cs:[rax + rax]
425be0: mov rax, qword ptr [rip + 0x9ac19]
425be7: lea rcx, [rip + 0x9ac12]
425bee: cmp rax, rcx
425bf1: je 0x425c3d
425bf3: mov rcx, qword ptr [rax + 8]
425bf7: test cl, 2
425bfa: jne 0x425e33
425c00: mov rsi, rcx
425c03: and rsi, 0xfffffffffffffff8
425c07: cmp rsi, 0x1f
425c0b: jbe 0x425e33
425c11: and ecx, 1
425c14: je 0x425e33
425c1a: test byte ptr [rip + 0x9ab83], 2
425c21: jne 0x425c3d
425c23: mov rcx, qword ptr [rip + 0x9b3fe]
425c2a: add rax, rsi
425c2d: add rcx, qword ptr [rip + 0x9ab14]
425c34: cmp rax, rcx
425c37: jne 0x425e33
425c3d: mov rcx, rbx
425c40: mov rsi, r14
425c43: lea rdi, [rip + 0x9ab56]
425c4a: call 0x4251a0
425c4f: mov r12, rax
425c52: test rax, rax
425c55: jne 0x425b18
425c5b: mov rax, qword ptr [rsp + 0x10]
425c60: xor r12d, r12d
425c63: not byte ptr [rax]
425c65: jmp 0x425b18
425c6a: nop word ptr [rax + rax]
425c70: lea rax, [rdx - 8]
425c74: mov r12, r13
425c77: cmp rbx, rax
425c7a: jbe 0x425b18
425c80: mov rax, qword ptr [rip + 0x9ab79]
425c87: lea rcx, [rip + 0x9ab72]
425c8e: cmp rax, rcx
425c91: je 0x425cdd
425c93: mov rcx, qword ptr [rax + 8]
425c97: test cl, 2
425c9a: jne 0x425e33
425ca0: mov rsi, rcx
425ca3: and rsi, 0xfffffffffffffff8
425ca7: cmp rsi, 0x1f
425cab: jbe 0x425e33
425cb1: and ecx, 1
425cb4: je 0x425e33
425cba: test byte ptr [rip + 0x9aae3], 2
425cc1: jne 0x425cdd
425cc3: mov rcx, qword ptr [rip + 0x9b35e]
425cca: add rax, rsi
425ccd: add rcx, qword ptr [rip + 0x9aa74]
425cd4: cmp rax, rcx
425cd7: jne 0x425e33
425cdd: mov rsi, r15
425ce0: lea rdi, [rip + 0x9aab9]
425ce7: mov qword ptr [rsp + 8], rdx
425cec: call 0x423e90
425cf1: mov r12, rax
425cf4: test rax, rax
425cf7: je 0x425c5b
425cfd: mov rdx, qword ptr [rsp + 8]
425d02: mov rsi, r13
425d05: mov rdi, rax
425d08: sub rdx, 0x10
425d0c: call 0x401060
425d11: mov rdi, r14
425d14: call 0x421910
425d19: jmp 0x425b18
425d1e: nop 
425d20: xor esi, esi
425d22: mov rdi, rbp
425d25: call 0x4255b0
425d2a: mov r12, rax
425d2d: jmp 0x425bb0
425d32: nop word ptr [rax + rax]
425d38: xor esi, esi
425d3a: xor r12d, r12d
425d3d: call 0x425050
425d42: jmp 0x425bb0
425d47: nop word ptr [rax + rax]
425d50: xor eax, eax
425d52: xchg dword ptr [rip + 0x9aa48], eax
425d58: cmp eax, 1
425d5b: jle 0x425a9a
425d61: xor r10d, r10d
425d64: mov edx, 1
425d69: mov esi, 0x81
425d6e: mov eax, 0xca
425d73: lea rdi, [rip + 0x9aa26]
425d7a: syscall 
425d7c: jmp 0x425a9a
425d81: nop dword ptr [rax]
425d88: xor eax, eax
425d8a: mov edx, 1
425d8f: lock cmpxchg dword ptr [rip + 0x9aa09], edx
425d97: je 0x425a73
425d9d: lea rdi, [rip + 0x9a9fc]
425da4: call 0x421250
425da9: jmp 0x425a73
425dae: nop 
425db0: xor eax, eax
425db2: xchg dword ptr [rip + 0x9a9e8], eax
425db8: cmp eax, 1
425dbb: jle 0x425b2f
425dc1: xor r10d, r10d
425dc4: mov edx, 1
425dc9: mov esi, 0x81
425dce: mov eax, 0xca
425dd3: lea rdi, [rip + 0x9a9c6]
425dda: syscall 
425ddc: jmp 0x425b2f
425de1: nop dword ptr [rax]
425de8: xor eax, eax
425dea: mov ecx, 1
425def: lock cmpxchg dword ptr [rip + 0x9a9a9], ecx
425df7: je 0x425ae7
425dfd: lea rdi, [rip + 0x9a99c]
425e04: mov qword ptr [rsp + 8], rdx
425e09: call 0x421250
425e0e: mov rdx, qword ptr [rsp + 8]
425e13: jmp 0x425ae7
425e18: mov rax, 0xffffffffffffffc0
425e1f: xor r12d, r12d
425e22: mov dword ptr fs:[rax], 0xc
425e29: jmp 0x425bb0
425e2e: call 0x4547a0
425e33: lea rdi, [rip + 0x70458]
425e3a: call 0x421740
425e3f: lea rdi, [rip + 0x70469]
425e46: call 0x421740
425e4b: nop dword ptr [rax + rax]
425e50: endbr64 
425e54: mov eax, dword ptr [rip + 0x9a88a]
425e5a: push r12
425e5c: mov qword ptr [rip + 0x9a929], 0
425e67: push rbp
425e68: mov rbp, rdi
425e6b: push rbx
425e6c: test eax, eax
425e6e: js 0x425fa0
425e74: xor eax, eax
425e76: test rax, rax
425e79: jne 0x425fb5
425e7f: test rbp, rbp
425e82: js 0x425fd8
425e88: lea rax, [rbp + 0x17]
425e8c: xor ebx, ebx
425e8e: cmp rax, 0x1f
425e92: ja 0x425f10
425e94: mov rax, qword ptr fs:[0xffffffffffffffc8]
425e9d: test rax, rax
425ea0: je 0x425f28
425ea6: cmp qword ptr [rip + 0x9a8a3], rbx
425ead: ja 0x425f60
425eb3: mov eax, dword ptr fs:[0x18]
425ebb: test eax, eax
425ebd: jne 0x425ff8
425ec3: mov rsi, rbp
425ec6: lea rdi, [rip + 0x9a8d3]
425ecd: call 0x423e90
425ed2: mov r8, rax
425ed5: test rax, rax
425ed8: je 0x425fc8
425ede: mov rax, qword ptr [rax - 8]
425ee2: test al, 2
425ee4: jne 0x425f04
425ee6: test al, 4
425ee8: je 0x425f04
425eea: lea rax, [r8 - 0x10]
425eee: lea rdx, [rip + 0x9a8ab]
425ef5: and rax, 0xfffffffffc000000
425efb: cmp qword ptr [rax], rdx
425efe: jne 0x426166
425f04: pop rbx
425f05: mov rax, r8
425f08: pop rbp
425f09: pop r12
425f0b: ret 
425f0c: nop dword ptr [rax]
425f10: and rax, 0xfffffffffffffff0
425f14: lea rbx, [rax - 0x11]
425f18: shr rbx, 4
425f1c: jmp 0x425e94
425f21: nop dword ptr [rax]
425f28: cmp byte ptr fs:[0xffffffffffffffd0], 0
425f31: jne 0x425eb3
425f37: call 0x424d10
425f3c: cmp qword ptr [rip + 0x9a80d], rbx
425f43: jbe 0x425eb3
425f49: mov rax, qword ptr fs:[0xffffffffffffffc8]
425f52: test rax, rax
425f55: je 0x425eb3
425f5b: nop dword ptr [rax + rax]
425f60: lea rcx, [rax + rbx*2]
425f64: movzx edx, word ptr [rcx]
425f67: test dx, dx
425f6a: je 0x425eb3
425f70: lea rax, [rax + rbx*8]
425f74: sub edx, 1
425f77: mov r8, qword ptr [rax + 0x80]
425f7e: mov rsi, qword ptr [r8]
425f81: mov qword ptr [rax + 0x80], rsi
425f88: mov word ptr [rcx], dx
425f8b: mov qword ptr [r8 + 8], 0
425f93: jmp 0x425f04
425f98: nop dword ptr [rax + rax]
425fa0: call 0x425420
425fa5: mov rax, qword ptr [rip + 0x9a7e4]
425fac: test rax, rax
425faf: je 0x425e7f
425fb5: mov rsi, qword ptr [rsp + 0x18]
425fba: mov rdi, rbp
425fbd: pop rbx
425fbe: pop rbp
425fbf: pop r12
425fc1: jmp rax
425fc3: nop dword ptr [rax + rax]
425fc8: xor r8d, r8d
425fcb: pop rbx
425fcc: pop rbp
425fcd: mov rax, r8
425fd0: pop r12
425fd2: ret 
425fd3: nop dword ptr [rax + rax]
425fd8: mov rax, 0xffffffffffffffc0
425fdf: xor r8d, r8d
425fe2: mov dword ptr fs:[rax], 0xc
425fe9: mov rax, r8
425fec: pop rbx
425fed: pop rbp
425fee: pop r12
425ff0: ret 
425ff1: nop dword ptr [rax]
425ff8: mov rax, 0xffffffffffffffd8
425fff: mov r12, qword ptr fs:[rax]
426003: test r12, r12
426006: je 0x4260d0
42600c: mov eax, dword ptr fs:[0x18]
426014: test eax, eax
426016: jne 0x4260b0
42601c: mov edx, 1
426021: cmpxchg dword ptr [r12], edx
426026: mov rsi, rbp
426029: mov rdi, r12
42602c: call 0x423e90
426031: mov r8, rax
426034: test rax, rax
426037: je 0x426110
42603d: mov eax, dword ptr fs:[0x18]
426045: test eax, eax
426047: jne 0x42613b
42604d: sub dword ptr [r12], 1
426052: test r8, r8
426055: je 0x425fc8
42605b: mov rax, qword ptr [r8 - 8]
42605f: test al, 2
426061: jne 0x425f04
426067: lea rdx, [rip + 0x9a732]
42606e: test al, 4
426070: je 0x42607f
426072: lea rax, [r8 - 0x10]
426076: and rax, 0xfffffffffc000000
42607c: mov rdx, qword ptr [rax]
42607f: cmp rdx, r12
426082: je 0x425f04
426088: lea rcx, [rip + 0x71119]
42608f: mov edx, 0xc07
426094: lea rsi, [rip + 0x6fff5]
42609b: lea rdi, [rip + 0x70e4e]
4260a2: call 0x4216e0
4260a7: nop word ptr [rax + rax]
4260b0: xor eax, eax
4260b2: mov edx, 1
4260b7: lock cmpxchg dword ptr [r12], edx
4260bd: je 0x426026
4260c3: mov rdi, r12
4260c6: call 0x421250
4260cb: jmp 0x426026
4260d0: call 0x421b40
4260d5: mov r12, rax
4260d8: test rax, rax
4260db: jne 0x426026
4260e1: xor esi, esi
4260e3: mov rdi, rbp
4260e6: call 0x421f10
4260eb: mov rsi, rbp
4260ee: mov rdi, rax
4260f1: mov r12, rax
4260f4: call 0x423e90
4260f9: mov r8, rax
4260fc: test rax, rax
4260ff: jne 0x42612d
426101: test r12, r12
426104: je 0x426052
42610a: nop word ptr [rax + rax]
426110: nop 
426111: mov rdi, r12
426114: mov rsi, rbp
426117: call 0x4224b0
42611c: mov rsi, rbp
42611f: mov rdi, rax
426122: mov r12, rax
426125: call 0x423e90
42612a: mov r8, rax
42612d: test r12, r12
426130: je 0x426052
426136: jmp 0x42603d
42613b: xor eax, eax
42613d: xchg dword ptr [r12], eax
426141: cmp eax, 1
426144: jle 0x426052
42614a: xor r10d, r10d
42614d: mov edx, 1
426152: mov esi, 0x81
426157: mov rdi, r12
42615a: mov eax, 0xca
42615f: syscall 
426161: jmp 0x426052
426166: lea rcx, [rip + 0x7103b]
42616d: mov edx, 0xbf3
426172: lea rsi, [rip + 0x6ff17]
426179: lea rdi, [rip + 0x70d08]
426180: call 0x4216e0
426185: nop word ptr cs:[rax + rax]
426190: endbr64 
426194: mov eax, dword ptr [rip + 0x9a54a]
42619a: test eax, eax
42619c: jle 0x426210
42619e: push r12
4261a0: push rbp
4261a1: push rbx
4261a2: mov eax, dword ptr fs:[0x18]
4261aa: test eax, eax
4261ac: jne 0x426218
4261ae: mov edx, 1
4261b3: cmpxchg dword ptr [rip + 0x9cae6], edx
4261ba: lea rbp, [rip + 0x9a5df]
4261c1: xor r12d, r12d
4261c4: mov rbx, rbp
4261c7: nop word ptr [rax + rax]
4261d0: mov eax, dword ptr fs:[0x18]
4261d8: mov edx, 1
4261dd: test eax, eax
4261df: jne 0x4261f8
4261e1: cmpxchg dword ptr [rbx], edx
4261e4: mov rbx, qword ptr [rbx + 0x870]
4261eb: cmp rbx, rbp
4261ee: jne 0x4261d0
4261f0: pop rbx
4261f1: pop rbp
4261f2: pop r12
4261f4: ret 
4261f5: nop dword ptr [rax]
4261f8: mov eax, r12d
4261fb: lock cmpxchg dword ptr [rbx], edx
4261ff: je 0x4261e4
426201: mov rdi, rbx
426204: call 0x421250
426209: jmp 0x4261e4
42620b: nop dword ptr [rax + rax]
426210: ret 
426211: nop dword ptr [rax]
426218: xor eax, eax
42621a: mov edx, 1
42621f: lock cmpxchg dword ptr [rip + 0x9ca79], edx
426227: je 0x4261ba
426229: lea rdi, [rip + 0x9ca70]
426230: call 0x421250
426235: jmp 0x4261ba
426237: nop word ptr [rax + rax]
426240: endbr64 
426244: mov eax, dword ptr [rip + 0x9a49a]
42624a: test eax, eax
42624c: jle 0x4262c0
42624e: lea r8, [rip + 0x9a54b]
426255: push rbx
426256: xor r9d, r9d
426259: mov ebx, 0xca
42625e: mov rdi, r8
426261: nop dword ptr [rax]
426268: mov eax, dword ptr fs:[0x18]
426270: test eax, eax
426272: jne 0x4262a0
426274: sub dword ptr [rdi], 1
426277: mov rdi, qword ptr [rdi + 0x870]
42627e: cmp rdi, r8
426281: jne 0x426268
426283: mov eax, dword ptr fs:[0x18]
42628b: test eax, eax
42628d: jne 0x4262c8
42628f: sub dword ptr [rip + 0x9ca0a], 1
426296: pop rbx
426297: ret 
426298: nop dword ptr [rax + rax]
4262a0: mov eax, r9d
4262a3: xchg dword ptr [rdi], eax
4262a5: cmp eax, 1
4262a8: jle 0x426277
4262aa: xor r10d, r10d
4262ad: mov edx, 1
4262b2: mov esi, 0x81
4262b7: mov eax, ebx
4262b9: syscall 
4262bb: jmp 0x426277
4262bd: nop dword ptr [rax]
4262c0: ret 
4262c1: nop dword ptr [rax]
4262c8: xor eax, eax
4262ca: xchg dword ptr [rip + 0x9c9d0], eax
4262d0: cmp eax, 1
4262d3: jle 0x426296
4262d5: xor r10d, r10d
4262d8: mov edx, 1
4262dd: mov esi, 0x81
4262e2: mov eax, 0xca
4262e7: lea rdi, [rip + 0x9c9b2]
4262ee: syscall 
4262f0: pop rbx
4262f1: ret 
4262f2: nop word ptr cs:[rax + rax]
4262fd: nop dword ptr [rax]
426300: endbr64 
426304: mov eax, dword ptr [rip + 0x9a3da]
42630a: test eax, eax
42630c: jle 0x4263a8
426312: mov rax, 0xffffffffffffffd8
426319: mov dword ptr [rip + 0x9c98d], 0
426323: mov rsi, qword ptr fs:[rax]
426327: test rsi, rsi
42632a: je 0x426337
42632c: mov qword ptr [rsi + 0x880], 1
426337: lea rdi, [rip + 0x9a462]
42633e: xor r8d, r8d
426341: xor ecx, ecx
426343: mov qword ptr [rip + 0x9c95a], 0
42634e: mov rax, rdi
426351: jmp 0x426382
426353: nop dword ptr [rax + rax]
426358: mov rdx, qword ptr [rax + 0x870]
42635f: mov qword ptr [rax + 0x878], rcx
426366: mov qword ptr [rax + 0x880], 0
426371: cmp rdx, rdi
426374: je 0x4263b0
426376: mov rcx, rax
426379: mov r8d, 1
42637f: mov rax, rdx
426382: mov dword ptr [rax], 0
426388: cmp rsi, rax
42638b: jne 0x426358
42638d: mov rdx, qword ptr [rax + 0x870]
426394: cmp rdx, rdi
426397: jne 0x42637f
426399: test r8b, r8b
42639c: jne 0x4263a9
42639e: mov dword ptr [rip + 0x9c8f8], 0
4263a8: ret 
4263a9: mov rax, rcx
4263ac: nop dword ptr [rax]
4263b0: mov qword ptr [rip + 0x9c8f1], rax
4263b7: jmp 0x42639e
4263b9: nop dword ptr [rax]
4263c0: endbr64 
4263c4: lea rax, [rip - 0xe1b]
4263cb: mov dword ptr [rip + 0x9c8bb], 1
4263d5: mov qword ptr [rip + 0x9a3b4], rax
4263dc: lea rax, [rip - 0x1393]
4263e3: mov qword ptr [rip + 0x9c88e], rax
4263ea: lea rax, [rip - 0x9e1]
4263f1: mov qword ptr [rip + 0x9a390], rax
4263f8: lea rax, [rip - 0xc6f]
4263ff: mov qword ptr [rip + 0x9a37a], rax
426406: ret 
426407: nop word ptr [rax + rax]
426410: endbr64 
426414: push r12
426416: mov rax, qword ptr [rip + 0x9a373]
42641d: push rbp
42641e: mov rbp, rdi
426421: push rbx
426422: test rax, rax
426425: jne 0x426580
42642b: test rdi, rdi
42642e: js 0x426560
426434: lea rax, [rdi + 0x17]
426438: xor ebx, ebx
42643a: cmp rax, 0x1f
42643e: ja 0x4264c0
426444: mov rax, qword ptr fs:[0xffffffffffffffc8]
42644d: test rax, rax
426450: je 0x4264d8
426456: cmp rbx, qword ptr [rip + 0x9a2f3]
42645d: jb 0x426510
426463: mov eax, dword ptr fs:[0x18]
42646b: test eax, eax
42646d: jne 0x426590
426473: mov rsi, rbp
426476: lea rdi, [rip + 0x9a323]
42647d: call 0x423e90
426482: mov r8, rax
426485: test rax, rax
426488: je 0x426550
42648e: mov rax, qword ptr [rax - 8]
426492: test al, 2
426494: jne 0x4264b4
426496: test al, 4
426498: je 0x4264b4
42649a: lea rax, [r8 - 0x10]
42649e: lea rdx, [rip + 0x9a2fb]
4264a5: and rax, 0xfffffffffc000000
4264ab: cmp qword ptr [rax], rdx
4264ae: jne 0x4266f6
4264b4: pop rbx
4264b5: mov rax, r8
4264b8: pop rbp
4264b9: pop r12
4264bb: ret 
4264bc: nop dword ptr [rax]
4264c0: and rax, 0xfffffffffffffff0
4264c4: lea rbx, [rax - 0x11]
4264c8: shr rbx, 4
4264cc: jmp 0x426444
4264d1: nop dword ptr [rax]
4264d8: cmp byte ptr fs:[0xffffffffffffffd0], 0
4264e1: jne 0x426463
4264e7: call 0x424d10
4264ec: cmp qword ptr [rip + 0x9a25d], rbx
4264f3: jbe 0x426463
4264f9: mov rax, qword ptr fs:[0xffffffffffffffc8]
426502: test rax, rax
426505: je 0x426463
42650b: nop dword ptr [rax + rax]
426510: lea rcx, [rax + rbx*2]
426514: movzx edx, word ptr [rcx]
426517: test dx, dx
42651a: je 0x426463
426520: lea rax, [rax + rbx*8]
426524: sub edx, 1
426527: mov r8, qword ptr [rax + 0x80]
42652e: mov rsi, qword ptr [r8]
426531: mov qword ptr [rax + 0x80], rsi
426538: mov word ptr [rcx], dx
42653b: mov qword ptr [r8 + 8], 0
426543: jmp 0x4264b4
426548: nop dword ptr [rax + rax]
426550: xor r8d, r8d
426553: pop rbx
426554: pop rbp
426555: mov rax, r8
426558: pop r12
42655a: ret 
42655b: nop dword ptr [rax + rax]
426560: mov rax, 0xffffffffffffffc0
426567: xor r8d, r8d
42656a: mov dword ptr fs:[rax], 0xc
426571: mov rax, r8
426574: pop rbx
426575: pop rbp
426576: pop r12
426578: ret 
426579: nop dword ptr [rax]
426580: mov rsi, qword ptr [rsp + 0x18]
426585: pop rbx
426586: pop rbp
426587: pop r12
426589: jmp rax
42658b: nop dword ptr [rax + rax]
426590: mov rax, 0xffffffffffffffd8
426597: mov r12, qword ptr fs:[rax]
42659b: test r12, r12
42659e: je 0x426660
4265a4: mov eax, dword ptr fs:[0x18]
4265ac: test eax, eax
4265ae: jne 0x426640
4265b4: mov edx, 1
4265b9: cmpxchg dword ptr [r12], edx
4265be: mov rsi, rbp
4265c1: mov rdi, r12
4265c4: call 0x423e90
4265c9: mov r8, rax
4265cc: test rax, rax
4265cf: je 0x4266a0
4265d5: mov eax, dword ptr fs:[0x18]
4265dd: test eax, eax
4265df: jne 0x4266cb
4265e5: sub dword ptr [r12], 1
4265ea: test r8, r8
4265ed: je 0x426550
4265f3: mov rax, qword ptr [r8 - 8]
4265f7: test al, 2
4265f9: jne 0x4264b4
4265ff: lea rdx, [rip + 0x9a19a]
426606: test al, 4
426608: je 0x426617
42660a: lea rax, [r8 - 0x10]
42660e: and rax, 0xfffffffffc000000
426614: mov rdx, qword ptr [rax]
426617: cmp rdx, r12
42661a: je 0x4264b4
426620: lea rcx, [rip + 0x70b81]
426627: mov edx, 0xc07
42662c: lea rsi, [rip + 0x6fa5d]
426633: lea rdi, [rip + 0x708b6]
42663a: call 0x4216e0
42663f: nop 
426640: xor eax, eax
426642: mov edx, 1
426647: lock cmpxchg dword ptr [r12], edx
42664d: je 0x4265be
426653: mov rdi, r12
426656: call 0x421250
42665b: jmp 0x4265be
426660: call 0x421b40
426665: mov r12, rax
426668: test rax, rax
42666b: jne 0x4265be
426671: xor esi, esi
426673: mov rdi, rbp
426676: call 0x421f10
42667b: mov rsi, rbp
42667e: mov rdi, rax
426681: mov r12, rax
426684: call 0x423e90
426689: mov r8, rax
42668c: test rax, rax
42668f: jne 0x4266bd
426691: test r12, r12
426694: je 0x4265ea
42669a: nop word ptr [rax + rax]
4266a0: nop 
4266a1: mov rdi, r12
4266a4: mov rsi, rbp
4266a7: call 0x4224b0
4266ac: mov rsi, rbp
4266af: mov rdi, rax
4266b2: mov r12, rax
4266b5: call 0x423e90
4266ba: mov r8, rax
4266bd: test r12, r12
4266c0: je 0x4265ea
4266c6: jmp 0x4265d5
4266cb: xor eax, eax
4266cd: xchg dword ptr [r12], eax
4266d1: cmp eax, 1
4266d4: jle 0x4265ea
4266da: xor r10d, r10d
4266dd: mov edx, 1
4266e2: mov esi, 0x81
4266e7: mov rdi, r12
4266ea: mov eax, 0xca
4266ef: syscall 
4266f1: jmp 0x4265ea
4266f6: lea rcx, [rip + 0x70aab]
4266fd: mov edx, 0xbf3
426702: lea rsi, [rip + 0x6f987]
426709: lea rdi, [rip + 0x70778]
426710: call 0x4216e0
426715: nop word ptr cs:[rax + rax]
426720: endbr64 
426724: mov eax, dword ptr [rip + 0x99fba]
42672a: push r13
42672c: mov r13, rsi
42672f: push r12
426731: mov qword ptr [rip + 0x9a044], 0
42673c: push rbp
42673d: mov rbp, rdi
426740: test eax, eax
426742: jns 0x426749
426744: call 0x425420
426749: mov rax, qword ptr [rip + 0x9a030]
426750: mov rdx, qword ptr [rsp + 0x18]
426755: test rax, rax
426758: jne 0x426840
42675e: cmp rbp, 0x10
426762: jbe 0x426820
426768: cmp rbp, 0x1f
42676c: ja 0x4267d8
42676e: mov r12d, 0x20
426774: mov eax, dword ptr fs:[0x18]
42677c: test eax, eax
42677e: jne 0x426850
426784: mov rdx, r13
426787: mov rsi, r12
42678a: lea rdi, [rip + 0x9a00f]
426791: call 0x424e70
426796: mov r8, rax
426799: test rax, rax
42679c: je 0x426830
4267a2: mov rax, qword ptr [rax - 8]
4267a6: test al, 2
4267a8: jne 0x4267c8
4267aa: test al, 4
4267ac: je 0x4267c8
4267ae: lea rax, [r8 - 0x10]
4267b2: lea rdx, [rip + 0x99fe7]
4267b9: and rax, 0xfffffffffc000000
4267bf: cmp qword ptr [rax], rdx
4267c2: jne 0x4269d8
4267c8: pop rbp
4267c9: mov rax, r8
4267cc: pop r12
4267ce: pop r13
4267d0: ret 
4267d1: nop dword ptr [rax]
4267d8: movabs rax, 0x8000000000000000
4267e2: cmp rbp, rax
4267e5: ja 0x426900
4267eb: lea rax, [rbp - 1]
4267ef: test rax, rbp
4267f2: je 0x4269f7
4267f8: mov r12d, 0x20
4267fe: cmp rbp, 0x20
426802: je 0x426774
426808: nop dword ptr [rax + rax]
426810: add r12, r12
426813: cmp rbp, r12
426816: ja 0x426810
426818: jmp 0x426774
42681d: nop dword ptr [rax]
426820: pop rbp
426821: mov rdi, r13
426824: pop r12
426826: pop r13
426828: jmp 0x426410
42682d: nop dword ptr [rax]
426830: xor r8d, r8d
426833: pop rbp
426834: pop r12
426836: mov rax, r8
426839: pop r13
42683b: ret 
42683c: nop dword ptr [rax]
426840: mov rsi, r13
426843: mov rdi, rbp
426846: pop rbp
426847: pop r12
426849: pop r13
42684b: jmp rax
42684d: nop dword ptr [rax]
426850: mov rax, 0xffffffffffffffd8
426857: mov rbp, qword ptr fs:[rax]
42685b: test rbp, rbp
42685e: je 0x426938
426864: mov eax, dword ptr fs:[0x18]
42686c: test eax, eax
42686e: jne 0x426916
426874: mov edx, 1
426879: cmpxchg dword ptr [rbp], edx
42687d: mov rdx, r13
426880: mov rsi, r12
426883: mov rdi, rbp
426886: call 0x424e70
42688b: mov r8, rax
42688e: test rax, rax
426891: je 0x426980
426897: mov eax, dword ptr fs:[0x18]
42689f: test eax, eax
4268a1: jne 0x4269ae
4268a7: sub dword ptr [rbp], 1
4268ab: test r8, r8
4268ae: je 0x426830
4268b0: mov rax, qword ptr [r8 - 8]
4268b4: test al, 2
4268b6: jne 0x4267c8
4268bc: lea rdx, [rip + 0x99edd]
4268c3: test al, 4
4268c5: je 0x4268d4
4268c7: lea rax, [r8 - 0x10]
4268cb: and rax, 0xfffffffffc000000
4268d1: mov rdx, qword ptr [rax]
4268d4: cmp rdx, rbp
4268d7: je 0x4267c8
4268dd: lea rcx, [rip + 0x70884]
4268e4: mov edx, 0xcfb
4268e9: lea rsi, [rip + 0x6f7a0]
4268f0: lea rdi, [rip + 0x706c1]
4268f7: call 0x4216e0
4268fc: nop dword ptr [rax]
426900: mov rax, 0xffffffffffffffc0
426907: xor r8d, r8d
42690a: mov dword ptr fs:[rax], 0x16
426911: jmp 0x4267c8
426916: xor eax, eax
426918: mov edx, 1
42691d: lock cmpxchg dword ptr [rbp], edx
426922: je 0x42687d
426928: mov rdi, rbp
42692b: call 0x421250
426930: jmp 0x42687d
426935: nop dword ptr [rax]
426938: call 0x421b40
42693d: mov rbp, rax
426940: test rax, rax
426943: jne 0x42687d
426949: lea rdi, [r12 + r13 + 0x20]
42694e: xor esi, esi
426950: call 0x421f10
426955: mov rdx, r13
426958: mov rsi, r12
42695b: mov rdi, rax
42695e: mov rbp, rax
426961: call 0x424e70
426966: mov r8, rax
426969: test rax, rax
42696c: jne 0x4269a0
42696e: test rbp, rbp
426971: je 0x4268ab
426977: nop word ptr [rax + rax]
426980: nop 
426981: mov rdi, rbp
426984: mov rsi, r13
426987: call 0x4224b0
42698c: mov rdx, r13
42698f: mov rsi, r12
426992: mov rdi, rax
426995: mov rbp, rax
426998: call 0x424e70
42699d: mov r8, rax
4269a0: test rbp, rbp
4269a3: je 0x4268ab
4269a9: jmp 0x426897
4269ae: xor eax, eax
4269b0: xchg dword ptr [rbp], eax
4269b3: cmp eax, 1
4269b6: jle 0x4268ab
4269bc: xor r10d, r10d
4269bf: mov edx, 1
4269c4: mov esi, 0x81
4269c9: mov rdi, rbp
4269cc: mov eax, 0xca
4269d1: syscall 
4269d3: jmp 0x4268ab
4269d8: lea rcx, [rip + 0x70789]
4269df: mov edx, 0xce8
4269e4: lea rsi, [rip + 0x6f6a5]
4269eb: lea rdi, [rip + 0x70566]
4269f2: call 0x4216e0
4269f7: mov r12, rbp
4269fa: jmp 0x426774
4269ff: nop 
426a00: endbr64 
426a04: sub rsp, 0x18
426a08: mov rax, qword ptr [rip + 0x9c269]
426a0f: test rax, rax
426a12: jne 0x426a98
426a18: test rdi, rdi
426a1b: je 0x426a90
426a1d: mov rax, qword ptr [rdi - 8]
426a21: lea rsi, [rdi - 0x10]
426a25: test al, 2
426a27: jne 0x426a60
426a29: cmp qword ptr fs:[0xffffffffffffffc8], 0
426a33: je 0x426ac8
426a39: lea rdi, [rip + 0x99d60]
426a40: test al, 4
426a42: je 0x426a50
426a44: mov rax, rsi
426a47: and rax, 0xfffffffffc000000
426a4d: mov rdi, qword ptr [rax]
426a50: xor edx, edx
426a52: add rsp, 0x18
426a56: jmp 0x422c40
426a5b: nop dword ptr [rax + rax]
426a60: mov edx, dword ptr [rip + 0x99cce]
426a66: test edx, edx
426a68: jne 0x426a7b
426a6a: cmp rax, qword ptr [rip + 0x99c9f]
426a71: jbe 0x426a7b
426a73: cmp rax, 0x2000000
426a79: jbe 0x426aa8
426a7b: mov rdi, rsi
426a7e: add rsp, 0x18
426a82: jmp 0x421910
426a87: nop word ptr [rax + rax]
426a90: add rsp, 0x18
426a94: ret 
426a95: nop dword ptr [rax]
426a98: mov rsi, qword ptr [rsp + 0x18]
426a9d: add rsp, 0x18
426aa1: jmp rax
426aa3: nop dword ptr [rax + rax]
426aa8: and rax, 0xfffffffffffffff8
426aac: lea rdx, [rax + rax]
426ab0: mov qword ptr [rip + 0x99c59], rax
426ab7: mov qword ptr [rip + 0x99c42], rdx
426abe: nop 
426abf: jmp 0x426a7b
426ac1: nop dword ptr [rax]
426ac8: mov qword ptr [rsp], rdi
426acc: cmp byte ptr fs:[0xffffffffffffffd0], 0
426ad5: jne 0x426a39
426adb: mov qword ptr [rsp + 8], rsi
426ae0: call 0x424d10
426ae5: mov rdi, qword ptr [rsp]
426ae9: mov rsi, qword ptr [rsp + 8]
426aee: mov rax, qword ptr [rdi - 8]
426af2: jmp 0x426a39
426af7: nop word ptr [rax + rax]
426b00: endbr64 
426b04: push r15
426b06: push r14
426b08: push r13
426b0a: push r12
426b0c: push rbp
426b0d: push rbx
426b0e: sub rsp, 8
426b12: mov rbp, qword ptr fs:[0xffffffffffffffc8]
426b1b: test rbp, rbp
426b1e: je 0x426bc4
426b24: mov byte ptr fs:[0xffffffffffffffd0], 1
426b2d: lea rbx, [rbp + 0x80]
426b34: lea r13, [rbp + 0x280]
426b3b: mov qword ptr fs:[0xffffffffffffffc8], 0
426b48: lea r12, [rip + 0x99c51]
426b4f: nop 
426b50: mov r14, qword ptr [rbx]
426b53: test r14, r14
426b56: je 0x426bb3
426b58: mov rax, qword ptr [r14]
426b5b: mov qword ptr [rbx], rax
426b5e: mov rax, qword ptr [rip + 0x9c113]
426b65: test rax, rax
426b68: jne 0x426cb0
426b6e: mov rax, qword ptr [r14 - 8]
426b72: lea r15, [r14 - 0x10]
426b76: test al, 2
426b78: jne 0x426c40
426b7e: cmp qword ptr fs:[0xffffffffffffffc8], 0
426b88: je 0x426c90
426b8e: mov rdi, r12
426b91: test al, 4
426b93: je 0x426ba1
426b95: mov rax, r15
426b98: and rax, 0xfffffffffc000000
426b9e: mov rdi, qword ptr [rax]
426ba1: xor edx, edx
426ba3: mov rsi, r15
426ba6: call 0x422c40
426bab: mov r14, qword ptr [rbx]
426bae: test r14, r14
426bb1: jne 0x426b58
426bb3: add rbx, 8
426bb7: cmp r13, rbx
426bba: jne 0x426b50
426bbc: mov rdi, rbp
426bbf: call 0x426a00
426bc4: mov rax, 0xffffffffffffffd8
426bcb: mov rbx, qword ptr fs:[rax]
426bcf: mov qword ptr fs:[rax], 0
426bd7: test rbx, rbx
426bda: je 0x426c30
426bdc: mov eax, dword ptr fs:[0x18]
426be4: test eax, eax
426be6: jne 0x426ce0
426bec: mov edx, 1
426bf1: cmpxchg dword ptr [rip + 0x9c0b8], edx
426bf8: mov rax, qword ptr [rbx + 0x880]
426bff: test rax, rax
426c02: je 0x426d41
426c08: sub rax, 1
426c0c: mov qword ptr [rbx + 0x880], rax
426c13: je 0x426cc0
426c19: mov eax, dword ptr fs:[0x18]
426c21: test eax, eax
426c23: jne 0x426d10
426c29: sub dword ptr [rip + 0x9c080], 1
426c30: add rsp, 8
426c34: pop rbx
426c35: pop rbp
426c36: pop r12
426c38: pop r13
426c3a: pop r14
426c3c: pop r15
426c3e: ret 
426c3f: nop 
426c40: mov edx, dword ptr [rip + 0x99aee]
426c46: test edx, edx
426c48: jne 0x426c60
426c4a: cmp rax, qword ptr [rip + 0x99abf]
426c51: jbe 0x426c60
426c53: cmp rax, 0x2000000
426c59: jbe 0x426c70
426c5b: nop dword ptr [rax + rax]
426c60: mov rdi, r15
426c63: call 0x421910
426c68: jmp 0x426b50
426c6d: nop dword ptr [rax]
426c70: and rax, 0xfffffffffffffff8
426c74: lea rdx, [rax + rax]
426c78: mov qword ptr [rip + 0x99a91], rax
426c7f: mov qword ptr [rip + 0x99a7a], rdx
426c86: nop 
426c87: jmp 0x426c60
426c89: nop dword ptr [rax]
426c90: cmp byte ptr fs:[0xffffffffffffffd0], 0
426c99: jne 0x426b8e
426c9f: call 0x424d10
426ca4: mov rax, qword ptr [r14 - 8]
426ca8: jmp 0x426b8e
426cad: nop dword ptr [rax]
426cb0: mov rsi, qword ptr [rsp + 0x38]
426cb5: mov rdi, r14
426cb8: call rax
426cba: jmp 0x426b50
426cbf: nop 
426cc0: mov rax, qword ptr [rip + 0x9bfe1]
426cc7: mov qword ptr [rip + 0x9bfda], rbx
426cce: mov qword ptr [rbx + 0x878], rax
426cd5: jmp 0x426c19
426cda: nop word ptr [rax + rax]
426ce0: xor eax, eax
426ce2: mov edx, 1
426ce7: lock cmpxchg dword ptr [rip + 0x9bfc1], edx
426cef: je 0x426bf8
426cf5: lea rdi, [rip + 0x9bfb4]
426cfc: call 0x421250
426d01: jmp 0x426bf8
426d06: nop word ptr cs:[rax + rax]
426d10: xor eax, eax
426d12: xchg dword ptr [rip + 0x9bf98], eax
426d18: cmp eax, 1
426d1b: jle 0x426c30
426d21: xor r10d, r10d
426d24: mov edx, 1
426d29: mov esi, 0x81
426d2e: mov eax, 0xca
426d33: lea rdi, [rip + 0x9bf76]
426d3a: syscall 
426d3c: jmp 0x426c30
426d41: lea rcx, [rip + 0x70538]
426d48: mov edx, 0x3c1
426d4d: lea rsi, [rip + 0x6f38d]
426d54: lea rdi, [rip + 0x6f56f]
426d5b: call 0x4216e0
426d60: endbr64 
426d64: push r15
426d66: push r14
426d68: push r13
426d6a: push r12
426d6c: mov r12, rsi
426d6f: push rbp
426d70: mov rbp, rdi
426d73: push rbx
426d74: sub rsp, 0x18
426d78: mov eax, dword ptr [rip + 0x99966]
426d7e: mov qword ptr [rip + 0x99a07], 0
426d89: mov qword ptr [rip + 0x999f4], 0
426d94: test eax, eax
426d96: js 0x426e80
426d9c: xor eax, eax
426d9e: test rax, rax
426da1: jne 0x426e95
426da7: test r12, r12
426daa: jne 0x426dd0
426dac: test rbp, rbp
426daf: jne 0x426fa0
426db5: add rsp, 0x18
426db9: mov rdi, r12
426dbc: pop rbx
426dbd: pop rbp
426dbe: pop r12
426dc0: pop r13
426dc2: pop r14
426dc4: pop r15
426dc6: jmp 0x426410
426dcb: nop dword ptr [rax + rax]
426dd0: test rbp, rbp
426dd3: je 0x426db5
426dd5: mov rax, qword ptr [rbp - 8]
426dd9: lea r14, [rbp - 0x10]
426ddd: xor ebx, ebx
426ddf: mov r15, rax
426de2: and r15, 0xfffffffffffffff8
426de6: test al, 2
426de8: jne 0x426e09
426dea: cmp qword ptr fs:[0xffffffffffffffc8], 0
426df4: je 0x426fb0
426dfa: lea rbx, [rip + 0x9999f]
426e01: test al, 4
426e03: jne 0x426f20
426e09: mov rdx, r15
426e0c: neg rdx
426e0f: cmp rdx, r14
426e12: jb 0x4270e7
426e18: test r14b, 0xf
426e1c: jne 0x4270e7
426e22: test r12, r12
426e25: js 0x426f80
426e2b: lea rdx, [r12 + 0x17]
426e30: mov ecx, 0x20
426e35: mov rsi, rdx
426e38: and rsi, 0xfffffffffffffff0
426e3c: cmp rdx, 0x1f
426e40: cmova rcx, rsi
426e44: test al, 2
426e46: je 0x426eb0
426e48: mov rsi, rcx
426e4b: mov rdi, r14
426e4e: mov qword ptr [rsp + 8], rcx
426e53: call 0x4219b0
426e58: mov rcx, qword ptr [rsp + 8]
426e5d: test rax, rax
426e60: lea r13, [rax + 0x10]
426e64: je 0x426f38
426e6a: add rsp, 0x18
426e6e: mov rax, r13
426e71: pop rbx
426e72: pop rbp
426e73: pop r12
426e75: pop r13
426e77: pop r14
426e79: pop r15
426e7b: ret 
426e7c: nop dword ptr [rax]
426e80: call 0x425420
426e85: mov rax, qword ptr [rip + 0x998fc]
426e8c: test rax, rax
426e8f: je 0x426da7
426e95: mov rdx, qword ptr [rsp + 0x48]
426e9a: add rsp, 0x18
426e9e: mov rsi, r12
426ea1: mov rdi, rbp
426ea4: pop rbx
426ea5: pop rbp
426ea6: pop r12
426ea8: pop r13
426eaa: pop r14
426eac: pop r15
426eae: jmp rax
426eb0: mov eax, dword ptr fs:[0x18]
426eb8: test eax, eax
426eba: jne 0x426fd0
426ec0: mov rdx, r15
426ec3: mov rsi, r14
426ec6: mov rdi, rbx
426ec9: call 0x4251a0
426ece: mov r13, rax
426ed1: test rax, rax
426ed4: je 0x426e6a
426ed6: mov rax, qword ptr [rax - 8]
426eda: test al, 2
426edc: jne 0x426e6a
426ede: lea rdx, [rip + 0x998bb]
426ee5: test al, 4
426ee7: je 0x426ef6
426ee9: lea rax, [r13 - 0x10]
426eed: and rax, 0xfffffffffc000000
426ef3: mov rdx, qword ptr [rax]
426ef6: cmp rbx, rdx
426ef9: je 0x426e6a
426eff: lea rcx, [rip + 0x70272]
426f06: mov edx, 0xc9b
426f0b: lea rsi, [rip + 0x6f17e]
426f12: lea rdi, [rip + 0x700f7]
426f19: call 0x4216e0
426f1e: nop 
426f20: mov rdx, r14
426f23: and rdx, 0xfffffffffc000000
426f2a: mov rbx, qword ptr [rdx]
426f2d: jmp 0x426e09
426f32: nop word ptr [rax + rax]
426f38: lea rax, [r15 - 8]
426f3c: mov r13, rbp
426f3f: cmp rax, rcx
426f42: jae 0x426e6a
426f48: mov rdi, r12
426f4b: call 0x426410
426f50: mov r13, rax
426f53: test rax, rax
426f56: je 0x426e6a
426f5c: lea rdx, [r15 - 0x10]
426f60: mov rsi, rbp
426f63: mov rdi, rax
426f66: call 0x401060
426f6b: mov rdi, r14
426f6e: call 0x421910
426f73: jmp 0x426e6a
426f78: nop dword ptr [rax + rax]
426f80: mov rax, 0xffffffffffffffc0
426f87: xor r13d, r13d
426f8a: mov dword ptr fs:[rax], 0xc
426f91: jmp 0x426e6a
426f96: nop word ptr cs:[rax + rax]
426fa0: mov rdi, rbp
426fa3: xor r13d, r13d
426fa6: call 0x426a00
426fab: jmp 0x426e6a
426fb0: cmp byte ptr fs:[0xffffffffffffffd0], 0
426fb9: jne 0x426dfa
426fbf: call 0x424d10
426fc4: mov rax, qword ptr [rbp - 8]
426fc8: jmp 0x426dfa
426fcd: nop dword ptr [rax]
426fd0: mov eax, dword ptr fs:[0x18]
426fd8: test eax, eax
426fda: jne 0x4270bf
426fe0: mov edx, 1
426fe5: cmpxchg dword ptr [rbx], edx
426fe8: mov rdx, r15
426feb: mov rsi, r14
426fee: mov rdi, rbx
426ff1: call 0x4251a0
426ff6: mov r13, rax
426ff9: mov eax, dword ptr fs:[0x18]
427001: test eax, eax
427003: jne 0x427096
427009: sub dword ptr [rbx], 1
42700c: test r13, r13
42700f: je 0x427060
427011: mov rax, qword ptr [r13 - 8]
427015: test al, 2
427017: jne 0x426e6a
42701d: lea rdx, [rip + 0x9977c]
427024: test al, 4
427026: je 0x427035
427028: lea rax, [r13 - 0x10]
42702c: and rax, 0xfffffffffc000000
427032: mov rdx, qword ptr [rax]
427035: cmp rbx, rdx
427038: je 0x426e6a
42703e: lea rcx, [rip + 0x70133]
427045: mov edx, 0xca6
42704a: lea rsi, [rip + 0x6f03f]
427051: lea rdi, [rip + 0x6ffb8]
427058: call 0x4216e0
42705d: nop dword ptr [rax]
427060: nop 
427061: mov rdi, r12
427064: call 0x426410
427069: mov r13, rax
42706c: test rax, rax
42706f: je 0x426e6a
427075: lea rdx, [r15 - 8]
427079: mov rsi, rbp
42707c: mov rdi, rax
42707f: call 0x401060
427084: xor edx, edx
427086: mov rsi, r14
427089: mov rdi, rbx
42708c: call 0x422c40
427091: jmp 0x426e6a
427096: xor eax, eax
427098: xchg dword ptr [rbx], eax
42709a: cmp eax, 1
42709d: jle 0x42700c
4270a3: xor r10d, r10d
4270a6: mov edx, 1
4270ab: mov esi, 0x81
4270b0: mov rdi, rbx
4270b3: mov eax, 0xca
4270b8: syscall 
4270ba: jmp 0x42700c
4270bf: xor eax, eax
4270c1: mov edx, 1
4270c6: lock cmpxchg dword ptr [rbx], edx
4270ca: je 0x426fe8
4270d0: mov rdi, rbx
4270d3: mov qword ptr [rsp + 8], rcx
4270d8: call 0x421250
4270dd: mov rcx, qword ptr [rsp + 8]
4270e2: jmp 0x426fe8
4270e7: lea rdi, [rip + 0x6f1c1]
4270ee: call 0x421740
4270f3: nop word ptr cs:[rax + rax]
4270fe: nop 
427100: endbr64 
427104: push r15
427106: push r14
427108: push r13
42710a: push r12
42710c: mov r12, rsi
42710f: push rbp
427110: mov rbp, rdi
427113: push rbx
427114: sub rsp, 0x18
427118: mov rax, qword ptr [rip + 0x99669]
42711f: test rax, rax
427122: jne 0x4272f0
427128: test rsi, rsi
42712b: jne 0x427150
42712d: test rdi, rdi
427130: jne 0x427308
427136: add rsp, 0x18
42713a: mov rdi, r12
42713d: pop rbx
42713e: pop rbp
42713f: pop r12
427141: pop r13
427143: pop r14
427145: pop r15
427147: jmp 0x426410
42714c: nop dword ptr [rax]
427150: test rdi, rdi
427153: je 0x427136
427155: mov rax, qword ptr [rdi - 8]
427159: lea r14, [rdi - 0x10]
42715d: xor ebx, ebx
42715f: mov r15, rax
427162: and r15, 0xfffffffffffffff8
427166: test al, 2
427168: jne 0x427189
42716a: cmp qword ptr fs:[0xffffffffffffffc8], 0
427174: je 0x427318
42717a: lea rbx, [rip + 0x9961f]
427181: test al, 4
427183: jne 0x427270
427189: mov rdx, r15
42718c: neg rdx
42718f: cmp rdx, r14
427192: jb 0x42744f
427198: test r14b, 0xf
42719c: jne 0x42744f
4271a2: test r12, r12
4271a5: js 0x4272d0
4271ab: lea rdx, [r12 + 0x17]
4271b0: mov ecx, 0x20
4271b5: mov rsi, rdx
4271b8: and rsi, 0xfffffffffffffff0
4271bc: cmp rdx, 0x1f
4271c0: cmova rcx, rsi
4271c4: test al, 2
4271c6: je 0x427200
4271c8: mov rsi, rcx
4271cb: mov rdi, r14
4271ce: mov qword ptr [rsp + 8], rcx
4271d3: call 0x4219b0
4271d8: mov rcx, qword ptr [rsp + 8]
4271dd: test rax, rax
4271e0: lea r13, [rax + 0x10]
4271e4: je 0x427288
4271ea: add rsp, 0x18
4271ee: mov rax, r13
4271f1: pop rbx
4271f2: pop rbp
4271f3: pop r12
4271f5: pop r13
4271f7: pop r14
4271f9: pop r15
4271fb: ret 
4271fc: nop dword ptr [rax]
427200: mov eax, dword ptr fs:[0x18]
427208: test eax, eax
42720a: jne 0x427338
427210: mov rdx, r15
427213: mov rsi, r14
427216: mov rdi, rbx
427219: call 0x4251a0
42721e: mov r13, rax
427221: test rax, rax
427224: je 0x4271ea
427226: mov rax, qword ptr [rax - 8]
42722a: test al, 2
42722c: jne 0x4271ea
42722e: lea rdx, [rip + 0x9956b]
427235: test al, 4
427237: je 0x427246
427239: lea rax, [r13 - 0x10]
42723d: and rax, 0xfffffffffc000000
427243: mov rdx, qword ptr [rax]
427246: cmp rbx, rdx
427249: je 0x4271ea
42724b: lea rcx, [rip + 0x6ff26]
427252: mov edx, 0xc9b
427257: lea rsi, [rip + 0x6ee32]
42725e: lea rdi, [rip + 0x6fdab]
427265: call 0x4216e0
42726a: nop word ptr [rax + rax]
427270: mov rdx, r14
427273: and rdx, 0xfffffffffc000000
42727a: mov rbx, qword ptr [rdx]
42727d: jmp 0x427189
427282: nop word ptr [rax + rax]
427288: lea rax, [r15 - 8]
42728c: mov r13, rbp
42728f: cmp rax, rcx
427292: jae 0x4271ea
427298: mov rdi, r12
42729b: call 0x426410
4272a0: mov r13, rax
4272a3: test rax, rax
4272a6: je 0x4271ea
4272ac: lea rdx, [r15 - 0x10]
4272b0: mov rsi, rbp
4272b3: mov rdi, rax
4272b6: call 0x401060
4272bb: mov rdi, r14
4272be: call 0x421910
4272c3: jmp 0x4271ea
4272c8: nop dword ptr [rax + rax]
4272d0: mov rax, 0xffffffffffffffc0
4272d7: xor r13d, r13d
4272da: mov dword ptr fs:[rax], 0xc
4272e1: jmp 0x4271ea
4272e6: nop word ptr cs:[rax + rax]
4272f0: mov rdx, qword ptr [rsp + 0x48]
4272f5: add rsp, 0x18
4272f9: pop rbx
4272fa: pop rbp
4272fb: pop r12
4272fd: pop r13
4272ff: pop r14
427301: pop r15
427303: jmp rax
427305: nop dword ptr [rax]
427308: call 0x426a00
42730d: xor r13d, r13d
427310: jmp 0x4271ea
427315: nop dword ptr [rax]
427318: cmp byte ptr fs:[0xffffffffffffffd0], 0
427321: jne 0x42717a
427327: call 0x424d10
42732c: mov rax, qword ptr [rbp - 8]
427330: jmp 0x42717a
427335: nop dword ptr [rax]
427338: mov eax, dword ptr fs:[0x18]
427340: test eax, eax
427342: jne 0x427427
427348: mov edx, 1
42734d: cmpxchg dword ptr [rbx], edx
427350: mov rdx, r15
427353: mov rsi, r14
427356: mov rdi, rbx
427359: call 0x4251a0
42735e: mov r13, rax
427361: mov eax, dword ptr fs:[0x18]
427369: test eax, eax
42736b: jne 0x4273fe
427371: sub dword ptr [rbx], 1
427374: test r13, r13
427377: je 0x4273c8
427379: mov rax, qword ptr [r13 - 8]
42737d: test al, 2
42737f: jne 0x4271ea
427385: lea rdx, [rip + 0x99414]
42738c: test al, 4
42738e: je 0x42739d
427390: lea rax, [r13 - 0x10]
427394: and rax, 0xfffffffffc000000
42739a: mov rdx, qword ptr [rax]
42739d: cmp rbx, rdx
4273a0: je 0x4271ea
4273a6: lea rcx, [rip + 0x6fdcb]
4273ad: mov edx, 0xca6
4273b2: lea rsi, [rip + 0x6ecd7]
4273b9: lea rdi, [rip + 0x6fc50]
4273c0: call 0x4216e0
4273c5: nop dword ptr [rax]
4273c8: nop 
4273c9: mov rdi, r12
4273cc: call 0x426410
4273d1: mov r13, rax
4273d4: test rax, rax
4273d7: je 0x4271ea
4273dd: lea rdx, [r15 - 8]
4273e1: mov rsi, rbp
4273e4: mov rdi, rax
4273e7: call 0x401060
4273ec: xor edx, edx
4273ee: mov rsi, r14
4273f1: mov rdi, rbx
4273f4: call 0x422c40
4273f9: jmp 0x4271ea
4273fe: xor eax, eax
427400: xchg dword ptr [rbx], eax
427402: cmp eax, 1
427405: jle 0x427374
42740b: xor r10d, r10d
42740e: mov edx, 1
427413: mov esi, 0x81
427418: mov rdi, rbx
42741b: mov eax, 0xca
427420: syscall 
427422: jmp 0x427374
427427: xor eax, eax
427429: mov edx, 1
42742e: lock cmpxchg dword ptr [rbx], edx
427432: je 0x427350
427438: mov rdi, rbx
42743b: mov qword ptr [rsp + 8], rcx
427440: call 0x421250
427445: mov rcx, qword ptr [rsp + 8]
42744a: jmp 0x427350
42744f: lea rdi, [rip + 0x6ee59]
427456: call 0x421740
42745b: nop dword ptr [rax + rax]
427460: endbr64 
427464: push r13
427466: mov rax, qword ptr [rip + 0x99313]
42746d: push r12
42746f: mov r12, rsi
427472: push rbp
427473: mov rdx, qword ptr [rsp + 0x18]
427478: test rax, rax
42747b: jne 0x427560
427481: cmp rdi, 0x10
427485: jbe 0x427540
42748b: cmp rdi, 0x1f
42748f: ja 0x4274f8
427491: mov ebp, 0x20
427496: mov eax, dword ptr fs:[0x18]
42749e: test eax, eax
4274a0: jne 0x427570
4274a6: mov rdx, r12
4274a9: mov rsi, rbp
4274ac: lea rdi, [rip + 0x992ed]
4274b3: call 0x424e70
4274b8: mov r8, rax
4274bb: test rax, rax
4274be: je 0x427550
4274c4: mov rax, qword ptr [rax - 8]
4274c8: test al, 2
4274ca: jne 0x4274ea
4274cc: test al, 4
4274ce: je 0x4274ea
4274d0: lea rax, [r8 - 0x10]
4274d4: lea rdx, [rip + 0x992c5]
4274db: and rax, 0xfffffffffc000000
4274e1: cmp qword ptr [rax], rdx
4274e4: jne 0x4276f9
4274ea: pop rbp
4274eb: mov rax, r8
4274ee: pop r12
4274f0: pop r13
4274f2: ret 
4274f3: nop dword ptr [rax + rax]
4274f8: movabs rax, 0x8000000000000000
427502: cmp rdi, rax
427505: ja 0x427628
42750b: lea rax, [rdi - 1]
42750f: test rax, rdi
427512: je 0x427718
427518: mov ebp, 0x20
42751d: cmp rdi, 0x20
427521: je 0x427496
427527: nop word ptr [rax + rax]
427530: add rbp, rbp
427533: cmp rdi, rbp
427536: ja 0x427530
427538: jmp 0x427496
42753d: nop dword ptr [rax]
427540: pop rbp
427541: mov rdi, rsi
427544: pop r12
427546: pop r13
427548: jmp 0x426410
42754d: nop dword ptr [rax]
427550: xor r8d, r8d
427553: pop rbp
427554: pop r12
427556: mov rax, r8
427559: pop r13
42755b: ret 
42755c: nop dword ptr [rax]
427560: pop rbp
427561: pop r12
427563: pop r13
427565: jmp rax
427567: nop word ptr [rax + rax]
427570: mov rax, 0xffffffffffffffd8
427577: mov r13, qword ptr fs:[rax]
42757b: test r13, r13
42757e: je 0x427660
427584: mov eax, dword ptr fs:[0x18]
42758c: test eax, eax
42758e: jne 0x42763e
427594: mov edx, 1
427599: cmpxchg dword ptr [r13], edx
42759e: mov rdx, r12
4275a1: mov rsi, rbp
4275a4: mov rdi, r13
4275a7: call 0x424e70
4275ac: mov r8, rax
4275af: test rax, rax
4275b2: je 0x4276a0
4275b8: mov eax, dword ptr fs:[0x18]
4275c0: test eax, eax
4275c2: jne 0x4276ce
4275c8: sub dword ptr [r13], 1
4275cd: test r8, r8
4275d0: je 0x427550
4275d6: mov rax, qword ptr [r8 - 8]
4275da: test al, 2
4275dc: jne 0x4274ea
4275e2: lea rdx, [rip + 0x991b7]
4275e9: test al, 4
4275eb: je 0x4275fa
4275ed: lea rax, [r8 - 0x10]
4275f1: and rax, 0xfffffffffc000000
4275f7: mov rdx, qword ptr [rax]
4275fa: cmp rdx, r13
4275fd: je 0x4274ea
427603: lea rcx, [rip + 0x6fb5e]
42760a: mov edx, 0xcfb
42760f: lea rsi, [rip + 0x6ea7a]
427616: lea rdi, [rip + 0x6f99b]
42761d: call 0x4216e0
427622: nop word ptr [rax + rax]
427628: mov rax, 0xffffffffffffffc0
42762f: xor r8d, r8d
427632: mov dword ptr fs:[rax], 0x16
427639: jmp 0x4274ea
42763e: xor eax, eax
427640: mov edx, 1
427645: lock cmpxchg dword ptr [r13], edx
42764b: je 0x42759e
427651: mov rdi, r13
427654: call 0x421250
427659: jmp 0x42759e
42765e: nop 
427660: call 0x421b40
427665: mov r13, rax
427668: test rax, rax
42766b: jne 0x42759e
427671: lea rdi, [rbp + r12 + 0x20]
427676: xor esi, esi
427678: call 0x421f10
42767d: mov rdx, r12
427680: mov rsi, rbp
427683: mov rdi, rax
427686: mov r13, rax
427689: call 0x424e70
42768e: mov r8, rax
427691: test rax, rax
427694: jne 0x4276c0
427696: test r13, r13
427699: je 0x4275cd
42769f: nop 
4276a0: nop 
4276a1: mov rdi, r13
4276a4: mov rsi, r12
4276a7: call 0x4224b0
4276ac: mov rdx, r12
4276af: mov rsi, rbp
4276b2: mov rdi, rax
4276b5: mov r13, rax
4276b8: call 0x424e70
4276bd: mov r8, rax
4276c0: test r13, r13
4276c3: je 0x4275cd
4276c9: jmp 0x4275b8
4276ce: xor eax, eax
4276d0: xchg dword ptr [r13], eax
4276d4: cmp eax, 1
4276d7: jle 0x4275cd
4276dd: xor r10d, r10d
4276e0: mov edx, 1
4276e5: mov esi, 0x81
4276ea: mov rdi, r13
4276ed: mov eax, 0xca
4276f2: syscall 
4276f4: jmp 0x4275cd
4276f9: lea rcx, [rip + 0x6fa68]
427700: mov edx, 0xce8
427705: lea rsi, [rip + 0x6e984]
42770c: lea rdi, [rip + 0x6f845]
427713: call 0x4216e0
427718: mov rbp, rdi
42771b: jmp 0x427496
427720: endbr64 
427724: mov eax, dword ptr [rip + 0x98fba]
42772a: push r13
42772c: push r12
42772e: mov r12, rdi
427731: push rbp
427732: test eax, eax
427734: js 0x427810
42773a: mov rax, qword ptr [rip + 0x9903f]
427741: mov rdx, qword ptr [rsp + 0x18]
427746: mov rdi, qword ptr [rip + 0x999cb]
42774d: test rax, rax
427750: jne 0x427840
427756: cmp rdi, 0x10
42775a: jbe 0x427820
427760: cmp rdi, 0x1f
427764: ja 0x4277d0
427766: mov ebp, 0x20
42776b: mov eax, dword ptr fs:[0x18]
427773: test eax, eax
427775: jne 0x427850
42777b: mov rdx, r12
42777e: mov rsi, rbp
427781: lea rdi, [rip + 0x99018]
427788: call 0x424e70
42778d: mov r8, rax
427790: test rax, rax
427793: je 0x427830
427799: mov rax, qword ptr [rax - 8]
42779d: test al, 2
42779f: jne 0x4277bf
4277a1: test al, 4
4277a3: je 0x4277bf
4277a5: lea rax, [r8 - 0x10]
4277a9: lea rdx, [rip + 0x98ff0]
4277b0: and rax, 0xfffffffffc000000
4277b6: cmp qword ptr [rax], rdx
4277b9: jne 0x4279d9
4277bf: pop rbp
4277c0: mov rax, r8
4277c3: pop r12
4277c5: pop r13
4277c7: ret 
4277c8: nop dword ptr [rax + rax]
4277d0: movabs rax, 0x8000000000000000
4277da: cmp rdi, rax
4277dd: ja 0x427908
4277e3: lea rax, [rdi - 1]
4277e7: test rax, rdi
4277ea: je 0x4279f8
4277f0: mov ebp, 0x20
4277f5: cmp rdi, 0x20
4277f9: je 0x42776b
4277ff: nop 
427800: add rbp, rbp
427803: cmp rdi, rbp
427806: ja 0x427800
427808: jmp 0x42776b
42780d: nop dword ptr [rax]
427810: call 0x425420
427815: jmp 0x42773a
42781a: nop word ptr [rax + rax]
427820: pop rbp
427821: mov rdi, r12
427824: pop r12
427826: pop r13
427828: jmp 0x426410
42782d: nop dword ptr [rax]
427830: xor r8d, r8d
427833: pop rbp
427834: pop r12
427836: mov rax, r8
427839: pop r13
42783b: ret 
42783c: nop dword ptr [rax]
427840: pop rbp
427841: mov rsi, r12
427844: pop r12
427846: pop r13
427848: jmp rax
42784a: nop word ptr [rax + rax]
427850: mov rax, 0xffffffffffffffd8
427857: mov r13, qword ptr fs:[rax]
42785b: test r13, r13
42785e: je 0x427940
427864: mov eax, dword ptr fs:[0x18]
42786c: test eax, eax
42786e: jne 0x42791e
427874: mov edx, 1
427879: cmpxchg dword ptr [r13], edx
42787e: mov rdx, r12
427881: mov rsi, rbp
427884: mov rdi, r13
427887: call 0x424e70
42788c: mov r8, rax
42788f: test rax, rax
427892: je 0x427980
427898: mov eax, dword ptr fs:[0x18]
4278a0: test eax, eax
4278a2: jne 0x4279ae
4278a8: sub dword ptr [r13], 1
4278ad: test r8, r8
4278b0: je 0x427830
4278b6: mov rax, qword ptr [r8 - 8]
4278ba: test al, 2
4278bc: jne 0x4277bf
4278c2: lea rdx, [rip + 0x98ed7]
4278c9: test al, 4
4278cb: je 0x4278da
4278cd: lea rax, [r8 - 0x10]
4278d1: and rax, 0xfffffffffc000000
4278d7: mov rdx, qword ptr [rax]
4278da: cmp rdx, r13
4278dd: je 0x4277bf
4278e3: lea rcx, [rip + 0x6f87e]
4278ea: mov edx, 0xcfb
4278ef: lea rsi, [rip + 0x6e79a]
4278f6: lea rdi, [rip + 0x6f6bb]
4278fd: call 0x4216e0
427902: nop word ptr [rax + rax]
427908: mov rax, 0xffffffffffffffc0
42790f: xor r8d, r8d
427912: mov dword ptr fs:[rax], 0x16
427919: jmp 0x4277bf
42791e: xor eax, eax
427920: mov edx, 1
427925: lock cmpxchg dword ptr [r13], edx
42792b: je 0x42787e
427931: mov rdi, r13
427934: call 0x421250
427939: jmp 0x42787e
42793e: nop 
427940: call 0x421b40
427945: mov r13, rax
427948: test rax, rax
42794b: jne 0x42787e
427951: lea rdi, [rbp + r12 + 0x20]
427956: xor esi, esi
427958: call 0x421f10
42795d: mov rdx, r12
427960: mov rsi, rbp
427963: mov rdi, rax
427966: mov r13, rax
427969: call 0x424e70
42796e: mov r8, rax
427971: test rax, rax
427974: jne 0x4279a0
427976: test r13, r13
427979: je 0x4278ad
42797f: nop 
427980: nop 
427981: mov rdi, r13
427984: mov rsi, r12
427987: call 0x4224b0
42798c: mov rdx, r12
42798f: mov rsi, rbp
427992: mov rdi, rax
427995: mov r13, rax
427998: call 0x424e70
42799d: mov r8, rax
4279a0: test r13, r13
4279a3: je 0x4278ad
4279a9: jmp 0x427898
4279ae: xor eax, eax
4279b0: xchg dword ptr [r13], eax
4279b4: cmp eax, 1
4279b7: jle 0x4278ad
4279bd: xor r10d, r10d
4279c0: mov edx, 1
4279c5: mov esi, 0x81
4279ca: mov rdi, r13
4279cd: mov eax, 0xca
4279d2: syscall 
4279d4: jmp 0x4278ad
4279d9: lea rcx, [rip + 0x6f788]
4279e0: mov edx, 0xce8
4279e5: lea rsi, [rip + 0x6e6a4]
4279ec: lea rdi, [rip + 0x6f565]
4279f3: call 0x4216e0
4279f8: mov rbp, rdi
4279fb: jmp 0x42776b
427a00: endbr64 
427a04: mov eax, dword ptr [rip + 0x98cda]
427a0a: push r12
427a0c: push rbp
427a0d: push rbx
427a0e: mov rbx, rdi
427a11: test eax, eax
427a13: js 0x427b00
427a19: mov rdi, qword ptr [rip + 0x996f8]
427a20: mov r8, qword ptr [rsp + 0x18]
427a25: lea rdx, [rdi - 1]
427a29: add rbx, rdx
427a2c: jb 0x427ceb
427a32: mov eax, 1
427a37: sub rax, rdi
427a3a: and rbx, rax
427a3d: mov rax, qword ptr [rip + 0x98d3c]
427a44: test rax, rax
427a47: jne 0x427b30
427a4d: cmp rdi, 0x10
427a51: jbe 0x427b10
427a57: cmp rdi, 0x1f
427a5b: ja 0x427ac0
427a5d: mov ebp, 0x20
427a62: mov eax, dword ptr fs:[0x18]
427a6a: test eax, eax
427a6c: jne 0x427b40
427a72: mov rdx, rbx
427a75: mov rsi, rbp
427a78: lea rdi, [rip + 0x98d21]
427a7f: call 0x424e70
427a84: mov r8, rax
427a87: test rax, rax
427a8a: je 0x427b20
427a90: mov rax, qword ptr [rax - 8]
427a94: test al, 2
427a96: jne 0x427ab6
427a98: test al, 4
427a9a: je 0x427ab6
427a9c: lea rax, [r8 - 0x10]
427aa0: lea rdx, [rip + 0x98cf9]
427aa7: and rax, 0xfffffffffc000000
427aad: cmp qword ptr [rax], rdx
427ab0: jne 0x427c7e
427ab6: pop rbx
427ab7: mov rax, r8
427aba: pop rbp
427abb: pop r12
427abd: ret 
427abe: nop 
427ac0: movabs rax, 0x8000000000000000
427aca: cmp rdi, rax
427acd: ja 0x427bf8
427ad3: test rdx, rdi
427ad6: je 0x427d01
427adc: mov ebp, 0x20
427ae1: cmp rdi, 0x20
427ae5: je 0x427a62
427aeb: nop dword ptr [rax + rax]
427af0: add rbp, rbp
427af3: cmp rdi, rbp
427af6: ja 0x427af0
427af8: jmp 0x427a62
427afd: nop dword ptr [rax]
427b00: call 0x425420
427b05: jmp 0x427a19
427b0a: nop word ptr [rax + rax]
427b10: mov rdi, rbx
427b13: pop rbx
427b14: pop rbp
427b15: pop r12
427b17: jmp 0x426410
427b1c: nop dword ptr [rax]
427b20: xor r8d, r8d
427b23: pop rbx
427b24: pop rbp
427b25: mov rax, r8
427b28: pop r12
427b2a: ret 
427b2b: nop dword ptr [rax + rax]
427b30: mov rsi, rbx
427b33: mov rdx, r8
427b36: pop rbx
427b37: pop rbp
427b38: pop r12
427b3a: jmp rax
427b3c: nop dword ptr [rax]
427b40: mov rax, 0xffffffffffffffd8
427b47: mov r12, qword ptr fs:[rax]
427b4b: test r12, r12
427b4e: je 0x427c10
427b54: mov eax, dword ptr fs:[0x18]
427b5c: test eax, eax
427b5e: jne 0x427ca0
427b64: mov edx, 1
427b69: cmpxchg dword ptr [r12], edx
427b6e: mov rdx, rbx
427b71: mov rsi, rbp
427b74: mov rdi, r12
427b77: call 0x424e70
427b7c: mov r8, rax
427b7f: test rax, rax
427b82: je 0x427c50
427b88: mov eax, dword ptr fs:[0x18]
427b90: test eax, eax
427b92: jne 0x427cc0
427b98: sub dword ptr [r12], 1
427b9d: test r8, r8
427ba0: je 0x427b20
427ba6: mov rax, qword ptr [r8 - 8]
427baa: test al, 2
427bac: jne 0x427ab6
427bb2: lea rdx, [rip + 0x98be7]
427bb9: test al, 4
427bbb: je 0x427bca
427bbd: lea rax, [r8 - 0x10]
427bc1: and rax, 0xfffffffffc000000
427bc7: mov rdx, qword ptr [rax]
427bca: cmp rdx, r12
427bcd: je 0x427ab6
427bd3: lea rcx, [rip + 0x6f58e]
427bda: mov edx, 0xcfb
427bdf: lea rsi, [rip + 0x6e4aa]
427be6: lea rdi, [rip + 0x6f3cb]
427bed: call 0x4216e0
427bf2: nop word ptr [rax + rax]
427bf8: mov rax, 0xffffffffffffffc0
427bff: xor r8d, r8d
427c02: mov dword ptr fs:[rax], 0x16
427c09: jmp 0x427ab6
427c0e: nop 
427c10: call 0x421b40
427c15: mov r12, rax
427c18: test rax, rax
427c1b: jne 0x427b6e
427c21: lea rdi, [rbx + rbp + 0x20]
427c26: xor esi, esi
427c28: call 0x421f10
427c2d: mov rdx, rbx
427c30: mov rsi, rbp
427c33: mov rdi, rax
427c36: mov r12, rax
427c39: call 0x424e70
427c3e: mov r8, rax
427c41: test rax, rax
427c44: jne 0x427c70
427c46: test r12, r12
427c49: je 0x427b9d
427c4f: nop 
427c50: nop 
427c51: mov rdi, r12
427c54: mov rsi, rbx
427c57: call 0x4224b0
427c5c: mov rdx, rbx
427c5f: mov rsi, rbp
427c62: mov rdi, rax
427c65: mov r12, rax
427c68: call 0x424e70
427c6d: mov r8, rax
427c70: test r12, r12
427c73: je 0x427b9d
427c79: jmp 0x427b88
427c7e: lea rcx, [rip + 0x6f4e3]
427c85: mov edx, 0xce8
427c8a: lea rsi, [rip + 0x6e3ff]
427c91: lea rdi, [rip + 0x6f2c0]
427c98: call 0x4216e0
427c9d: nop dword ptr [rax]
427ca0: xor eax, eax
427ca2: mov edx, 1
427ca7: lock cmpxchg dword ptr [r12], edx
427cad: je 0x427b6e
427cb3: mov rdi, r12
427cb6: call 0x421250
427cbb: jmp 0x427b6e
427cc0: xor eax, eax
427cc2: xchg dword ptr [r12], eax
427cc6: cmp eax, 1
427cc9: jle 0x427b9d
427ccf: xor r10d, r10d
427cd2: mov edx, 1
427cd7: mov esi, 0x81
427cdc: mov rdi, r12
427cdf: mov eax, 0xca
427ce4: syscall 
427ce6: jmp 0x427b9d
427ceb: mov rax, 0xffffffffffffffc0
427cf2: xor r8d, r8d
427cf5: mov dword ptr fs:[rax], 0xc
427cfc: jmp 0x427ab6
427d01: mov rbp, rdi
427d04: jmp 0x427a62
427d09: nop dword ptr [rax]
427d10: endbr64 
427d14: push r13
427d16: mov rax, rdi
427d19: push r12
427d1b: push rbp
427d1c: push rbx
427d1d: sub rsp, 8
427d21: mul rsi
427d24: mov r12, rax
427d27: seto al
427d2a: test r12, r12
427d2d: js 0x427ea0
427d33: movzx eax, al
427d36: test rax, rax
427d39: jne 0x427ea0
427d3f: mov rax, qword ptr [rip + 0x98a4a]
427d46: test rax, rax
427d49: jne 0x427ed0
427d4f: cmp qword ptr fs:[0xffffffffffffffc8], 0
427d59: je 0x427f50
427d5f: mov eax, dword ptr fs:[0x18]
427d67: test eax, eax
427d69: jne 0x427f70
427d6f: mov r13, qword ptr [rip + 0x98a8a]
427d76: lea rbp, [rip + 0x98a23]
427d7d: mov rbx, qword ptr [r13 + 8]
427d81: and rbx, 0xfffffffffffffff8
427d85: mov rsi, r12
427d88: mov rdi, rbp
427d8b: call 0x423e90
427d90: mov r8, rax
427d93: test rax, rax
427d96: je 0x427da4
427d98: mov rax, qword ptr [rax - 8]
427d9c: test al, 2
427d9e: je 0x427e40
427da4: mov eax, dword ptr fs:[0x18]
427dac: test eax, eax
427dae: jne 0x427f00
427db4: test r8, r8
427db7: je 0x427ec0
427dbd: mov rdx, qword ptr [r8 - 8]
427dc1: mov eax, dword ptr [rip + 0x9aeed]
427dc7: test dl, 2
427dca: je 0x427de8
427dcc: test eax, eax
427dce: jne 0x427ff0
427dd4: add rsp, 8
427dd8: mov rax, r8
427ddb: pop rbx
427ddc: pop rbp
427ddd: pop r12
427ddf: pop r13
427de1: ret 
427de2: nop word ptr [rax + rax]
427de8: and rdx, 0xfffffffffffffff8
427dec: test eax, eax
427dee: je 0x427e80
427df4: sub rdx, 8
427df8: cmp rdx, 0x17
427dfc: jbe 0x428076
427e02: cmp rdx, 0x4f
427e06: ja 0x427fd8
427e0c: pxor xmm0, xmm0
427e10: mov qword ptr [r8 + 0x10], 0
427e18: movups xmmword ptr [r8], xmm0
427e1c: cmp rdx, 0x27
427e20: jbe 0x427dd4
427e22: movups xmmword ptr [r8 + 0x18], xmm0
427e27: cmp rdx, 0x37
427e2b: jbe 0x427dd4
427e2d: movups xmmword ptr [r8 + 0x28], xmm0
427e32: cmp rdx, 0x47
427e36: jbe 0x427dd4
427e38: movups xmmword ptr [r8 + 0x38], xmm0
427e3d: jmp 0x427dd4
427e3f: nop 
427e40: lea rdx, [rip + 0x98959]
427e47: test al, 4
427e49: je 0x427e58
427e4b: lea rax, [r8 - 0x10]
427e4f: and rax, 0xfffffffffc000000
427e55: mov rdx, qword ptr [rax]
427e58: cmp rdx, rbp
427e5b: je 0x427da4
427e61: lea rcx, [rip + 0x6f2f0]
427e68: mov edx, 0xd66
427e6d: lea rsi, [rip + 0x6e21c]
427e74: lea rdi, [rip + 0x6f1f5]
427e7b: call 0x4216e0
427e80: lea rax, [r8 - 0x10]
427e84: cmp r13, rax
427e87: jne 0x427df4
427e8d: cmp rbx, rdx
427e90: cmovb rdx, rbx
427e94: jmp 0x427df4
427e99: nop dword ptr [rax]
427ea0: mov rax, 0xffffffffffffffc0
427ea7: xor r8d, r8d
427eaa: mov dword ptr fs:[rax], 0xc
427eb1: add rsp, 8
427eb5: mov rax, r8
427eb8: pop rbx
427eb9: pop rbp
427eba: pop r12
427ebc: pop r13
427ebe: ret 
427ebf: nop 
427ec0: xor r8d, r8d
427ec3: jmp 0x427dd4
427ec8: nop dword ptr [rax + rax]
427ed0: mov rsi, qword ptr [rsp + 0x28]
427ed5: mov rdi, r12
427ed8: call rax
427eda: mov rdx, r12
427edd: xor esi, esi
427edf: mov rdi, rax
427ee2: test rax, rax
427ee5: je 0x427ec0
427ee7: add rsp, 8
427eeb: pop rbx
427eec: pop rbp
427eed: pop r12
427eef: pop r13
427ef1: jmp 0x401110
427ef6: nop word ptr cs:[rax + rax]
427f00: test r8, r8
427f03: jne 0x427f2b
427f05: test rbp, rbp
427f08: je 0x427db4
427f0e: nop 
427f0f: mov rdi, rbp
427f12: mov rsi, r12
427f15: call 0x4224b0
427f1a: mov rsi, r12
427f1d: mov rdi, rax
427f20: mov rbp, rax
427f23: call 0x423e90
427f28: mov r8, rax
427f2b: test rbp, rbp
427f2e: je 0x427db4
427f34: mov eax, dword ptr fs:[0x18]
427f3c: test eax, eax
427f3e: jne 0x42804c
427f44: sub dword ptr [rbp], 1
427f48: jmp 0x427db4
427f4d: nop dword ptr [rax]
427f50: cmp byte ptr fs:[0xffffffffffffffd0], 0
427f59: jne 0x427d5f
427f5f: call 0x424d10
427f64: jmp 0x427d5f
427f69: nop dword ptr [rax]
427f70: mov rax, 0xffffffffffffffd8
427f77: mov rbp, qword ptr fs:[rax]
427f7b: test rbp, rbp
427f7e: je 0x428000
427f84: mov eax, dword ptr fs:[0x18]
427f8c: test eax, eax
427f8e: jne 0x42802d
427f94: mov edx, 1
427f99: cmpxchg dword ptr [rbp], edx
427f9d: mov r13, qword ptr [rbp + 0x60]
427fa1: lea rax, [rip + 0x987f8]
427fa8: mov rbx, qword ptr [r13 + 8]
427fac: and rbx, 0xfffffffffffffff8
427fb0: cmp rbp, rax
427fb3: je 0x427d85
427fb9: mov rax, r13
427fbc: and rax, 0xfffffffffc000000
427fc2: add rax, qword ptr [rax + 0x18]
427fc6: sub rax, r13
427fc9: cmp rbx, rax
427fcc: cmovb rbx, rax
427fd0: jmp 0x427d85
427fd5: nop dword ptr [rax]
427fd8: mov rdi, r8
427fdb: xor esi, esi
427fdd: call 0x401110
427fe2: mov r8, rax
427fe5: jmp 0x427dd4
427fea: nop word ptr [rax + rax]
427ff0: mov rdx, r12
427ff3: xor esi, esi
427ff5: mov rdi, r8
427ff8: jmp 0x427ee7
427ffd: nop dword ptr [rax]
428000: call 0x421b40
428005: mov rbp, rax
428008: test rax, rax
42800b: jne 0x427f9d
42800d: xor esi, esi
42800f: mov rdi, r12
428012: call 0x421f10
428017: mov rbp, rax
42801a: test rax, rax
42801d: jne 0x427f9d
428023: xor r13d, r13d
428026: xor ebx, ebx
428028: jmp 0x427d85
42802d: xor eax, eax
42802f: mov edx, 1
428034: lock cmpxchg dword ptr [rbp], edx
428039: je 0x427f9d
42803f: mov rdi, rbp
428042: call 0x421250
428047: jmp 0x427f9d
42804c: xor eax, eax
42804e: xchg dword ptr [rbp], eax
428051: cmp eax, 1
428054: jle 0x427db4
42805a: xor r10d, r10d
42805d: mov edx, 1
428062: mov esi, 0x81
428067: mov rdi, rbp
42806a: mov eax, 0xca
42806f: syscall 
428071: jmp 0x427db4
428076: lea rcx, [rip + 0x6f0db]
42807d: mov edx, 0xd95
428082: lea rsi, [rip + 0x6e007]
428089: lea rdi, [rip + 0x6e252]
428090: call 0x4216e0
428095: nop word ptr cs:[rax + rax]
4280a0: endbr64 
4280a4: push r15
4280a6: push r14
4280a8: push r13
4280aa: push r12
4280ac: push rbp
4280ad: push rbx
4280ae: sub rsp, 0x28
4280b2: mov eax, dword ptr [rip + 0x9862c]
4280b8: mov qword ptr [rsp + 0x18], rdi
4280bd: test eax, eax
4280bf: js 0x428340
4280c5: mov dword ptr [rsp + 0x14], 0
4280cd: lea r15, [rip + 0x986cc]
4280d4: mov eax, dword ptr fs:[0x18]
4280dc: mov edx, 1
4280e1: test eax, eax
4280e3: jne 0x4282f0
4280e9: cmpxchg dword ptr [r15], edx
4280ed: mov rdi, r15
4280f0: call 0x421db0
4280f5: mov rbx, qword ptr [rip + 0x9901c]
4280fc: cmp rbx, 0x3ff
428103: ja 0x428228
428109: mov eax, ebx
42810b: shr eax, 4
42810e: mov dword ptr [rsp + 0x10], eax
428112: lea r13, [rbx + 0x2f]
428116: lea rax, [rbx - 1]
42811a: mov ebp, 1
42811f: neg rbx
428122: lea r12, [r15 + 0x60]
428126: mov r14, rbx
428129: mov qword ptr [rsp + 8], rax
42812e: mov rbx, r13
428131: xor edx, edx
428133: mov r13, r12
428136: mov r12d, ebp
428139: jmp 0x428158
42813b: nop dword ptr [rax + rax]
428140: cmp dword ptr [rsp + 0x10], r12d
428145: jle 0x42815e
428147: add r12d, 1
42814b: add r13, 0x10
42814f: cmp r12d, 0x80
428156: je 0x4281d0
428158: cmp r12d, 1
42815c: jne 0x428140
42815e: mov rbp, qword ptr [r13 + 0x18]
428162: cmp rbp, r13
428165: jne 0x428179
428167: jmp 0x428147
428169: nop dword ptr [rax]
428170: mov rbp, qword ptr [rbp + 0x18]
428174: cmp rbp, r13
428177: je 0x428147
428179: mov rsi, qword ptr [rbp + 8]
42817d: and rsi, 0xfffffffffffffff8
428181: cmp rsi, rbx
428184: jbe 0x428170
428186: lea rdi, [rbp + rbx]
42818b: lea rax, [rbp + 0x30]
42818f: and rdi, r14
428192: cmp rdi, rax
428195: jb 0x4282d0
42819b: lea rax, [rbp + rsi]
4281a0: cmp rdi, rax
4281a3: jae 0x4282b0
4281a9: mov rax, rdi
4281ac: sub rax, rbp
4281af: sub rsi, rax
4281b2: cmp qword ptr [rsp + 8], rsi
4281b7: jae 0x428170
4281b9: mov edx, 4
4281be: and rsi, r14
4281c1: call 0x451cd0
4281c6: mov edx, 1
4281cb: jmp 0x428170
4281cd: nop dword ptr [rax]
4281d0: lea rax, [rip + 0x985c9]
4281d7: cmp r15, rax
4281da: je 0x428290
4281e0: or dword ptr [rsp + 0x14], edx
4281e4: mov eax, dword ptr fs:[0x18]
4281ec: test eax, eax
4281ee: jne 0x428310
4281f4: sub dword ptr [r15], 1
4281f8: mov r15, qword ptr [r15 + 0x870]
4281ff: lea rax, [rip + 0x9859a]
428206: cmp r15, rax
428209: jne 0x4280d4
42820f: mov eax, dword ptr [rsp + 0x14]
428213: add rsp, 0x28
428217: pop rbx
428218: pop rbp
428219: pop r12
42821b: pop r13
42821d: pop r14
42821f: pop r15
428221: ret 
428222: nop word ptr [rax + rax]
428228: mov rbp, rbx
42822b: shr rbp, 6
42822f: cmp rbx, 0xc3f
428236: ja 0x428248
428238: lea eax, [rbp + 0x30]
42823b: mov dword ptr [rsp + 0x10], eax
42823f: jmp 0x428112
428244: nop dword ptr [rax]
428248: mov rbp, rbx
42824b: shr rbp, 9
42824f: cmp rbx, 0x29ff
428256: jbe 0x428280
428258: mov rbp, rbx
42825b: shr rbp, 0xc
42825f: cmp rbx, 0xafff
428266: ja 0x428350
42826c: lea eax, [rbp + 0x6e]
42826f: mov dword ptr [rsp + 0x10], eax
428273: jmp 0x428112
428278: nop dword ptr [rax + rax]
428280: lea eax, [rbp + 0x5b]
428283: mov dword ptr [rsp + 0x10], eax
428287: jmp 0x428112
42828c: nop dword ptr [rax]
428290: mov rdi, qword ptr [rsp + 0x18]
428295: mov dword ptr [rsp + 8], edx
428299: call 0x422b90
42829e: mov edx, dword ptr [rsp + 8]
4282a2: or edx, eax
4282a4: jmp 0x4281e0
4282a9: nop dword ptr [rax]
4282b0: lea rcx, [rip + 0x6e0d3]
4282b7: mov edx, 0x12ad
4282bc: lea rsi, [rip + 0x6ddcd]
4282c3: lea rdi, [rip + 0x6ee36]
4282ca: call 0x4216e0
4282cf: nop 
4282d0: lea rcx, [rip + 0x6e0b3]
4282d7: mov edx, 0x12ac
4282dc: lea rsi, [rip + 0x6ddad]
4282e3: lea rdi, [rip + 0x6edde]
4282ea: call 0x4216e0
4282ef: nop 
4282f0: xor eax, eax
4282f2: lock cmpxchg dword ptr [r15], edx
4282f7: je 0x4280ed
4282fd: mov rdi, r15
428300: call 0x421250
428305: jmp 0x4280ed
42830a: nop word ptr [rax + rax]
428310: xor eax, eax
428312: xchg dword ptr [r15], eax
428315: cmp eax, 1
428318: jle 0x4281f8
42831e: xor r10d, r10d
428321: mov edx, 1
428326: mov esi, 0x81
42832b: mov rdi, r15
42832e: mov eax, 0xca
428333: syscall 
428335: jmp 0x4281f8
42833a: nop word ptr [rax + rax]
428340: call 0x425420
428345: jmp 0x4280c5
42834a: nop word ptr [rax + rax]
428350: mov rbp, rbx
428353: shr rbp, 0xf
428357: cmp rbx, 0x27fff
42835e: ja 0x428370
428360: lea eax, [rbp + 0x77]
428363: mov dword ptr [rsp + 0x10], eax
428367: jmp 0x428112
42836c: nop dword ptr [rax]
428370: mov rbp, rbx
428373: mov eax, 2
428378: shr rbp, 0x12
42837c: cmp rbx, 0xbffff
428383: cmova rbp, rax
428387: lea eax, [rbp + 0x7c]
42838a: mov dword ptr [rsp + 0x10], eax
42838e: jmp 0x428112
428393: nop word ptr cs:[rax + rax]
42839e: nop 
4283a0: endbr64 
4283a4: test rdi, rdi
4283a7: je 0x4283f0
4283a9: mov rax, qword ptr [rdi - 8]
4283ad: lea rcx, [rdi - 0x10]
4283b1: mov rsi, rax
4283b4: and rax, 0xfffffffffffffff8
4283b8: and esi, 2
4283bb: cmp dword ptr [rip + 0x9a8ce], 1
4283c2: mov rdx, rax
4283c5: je 0x4283f8
4283c7: test rsi, rsi
4283ca: je 0x4283d8
4283cc: lea rax, [rax - 0x10]
4283d0: ret 
4283d1: nop dword ptr [rax]
4283d8: mov rax, qword ptr [rcx + rax + 8]
4283dd: sub rdx, 8
4283e1: and eax, 1
4283e4: cmovne rax, rdx
4283e8: ret 
4283e9: nop dword ptr [rax]
4283f0: xor eax, eax
4283f2: ret 
4283f3: nop dword ptr [rax + rax]
4283f8: mov r8, rcx
4283fb: mov rax, rcx
4283fe: shr rax, 0xb
428402: shr r8, 3
428406: xor r8d, eax
428409: mov eax, 2
42840e: cmp r8b, 1
428412: cmove r8d, eax
428416: xor eax, eax
428418: test rsi, rsi
42841b: sete al
42841e: lea rax, [rdx + rax*8 - 1]
428423: movzx edx, byte ptr [rdi + rax - 0x10]
428428: cmp dl, r8b
42842b: je 0x428449
42842d: nop dword ptr [rax]
428430: test dl, dl
428432: je 0x42844e
428434: lea rsi, [rdx + 0x10]
428438: cmp rax, rsi
42843b: jb 0x42844e
42843d: sub rax, rdx
428440: movzx edx, byte ptr [rcx + rax]
428444: cmp dl, r8b
428447: jne 0x428430
428449: sub rax, 0x10
42844d: ret 
42844e: sub rsp, 8
428452: lea rdi, [rip + 0x6eccf]
428459: call 0x421740
42845e: nop 
428460: endbr64 
428464: push r14
428466: push r13
428468: mov r13, rdi
42846b: push r12
42846d: push rbp
42846e: push rbx
42846f: sub rsp, 0x30
428473: mov rax, qword ptr fs:[0x28]
42847c: mov qword ptr [rsp + 0x28], rax
428481: xor eax, eax
428483: mov eax, dword ptr [rip + 0x9825b]
428489: test eax, eax
42848b: js 0x428588
428491: mov qword ptr [rsp + 0x20], 0
42849a: pxor xmm0, xmm0
42849e: mov r12, rsp
4284a1: xor r14d, r14d
4284a4: lea rbp, [rip + 0x982f5]
4284ab: movaps xmmword ptr [rsp], xmm0
4284af: movaps xmmword ptr [rsp + 0x10], xmm0
4284b4: mov rbx, rbp
4284b7: nop word ptr [rax + rax]
4284c0: mov eax, dword ptr fs:[0x18]
4284c8: mov edx, 1
4284cd: test eax, eax
4284cf: jne 0x428568
4284d5: cmpxchg dword ptr [rbx], edx
4284d8: mov rsi, r12
4284db: mov rdi, rbx
4284de: call 0x421520
4284e3: mov eax, dword ptr fs:[0x18]
4284eb: test eax, eax
4284ed: jne 0x428540
4284ef: sub dword ptr [rbx], 1
4284f2: mov rbx, qword ptr [rbx + 0x870]
4284f9: cmp rbx, rbp
4284fc: jne 0x4284c0
4284fe: mov rax, qword ptr [rsp + 0x20]
428503: movdqa xmm1, xmmword ptr [rsp]
428508: movdqa xmm2, xmmword ptr [rsp + 0x10]
42850e: mov qword ptr [r13 + 0x20], rax
428512: movups xmmword ptr [r13], xmm1
428517: movups xmmword ptr [r13 + 0x10], xmm2
42851c: mov rax, qword ptr [rsp + 0x28]
428521: xor rax, qword ptr fs:[0x28]
42852a: jne 0x428592
42852c: add rsp, 0x30
428530: mov rax, r13
428533: pop rbx
428534: pop rbp
428535: pop r12
428537: pop r13
428539: pop r14
42853b: ret 
42853c: nop dword ptr [rax]
428540: mov eax, r14d
428543: xchg dword ptr [rbx], eax
428545: cmp eax, 1
428548: jle 0x4284f2
42854a: xor r10d, r10d
42854d: mov edx, 1
428552: mov esi, 0x81
428557: mov rdi, rbx
42855a: mov eax, 0xca
42855f: syscall 
428561: jmp 0x4284f2
428563: nop dword ptr [rax + rax]
428568: mov eax, r14d
42856b: lock cmpxchg dword ptr [rbx], edx
42856f: je 0x4284d8
428575: mov rdi, rbx
428578: call 0x421250
42857d: jmp 0x4284d8
428582: nop word ptr [rax + rax]
428588: call 0x425420
42858d: jmp 0x428491
428592: call 0x4547a0
428597: nop word ptr [rax + rax]
4285a0: endbr64 
4285a4: push r15
4285a6: push r14
4285a8: push r13
4285aa: push r12
4285ac: push rbp
4285ad: push rbx
4285ae: sub rsp, 0x48
4285b2: mov r13, qword ptr [rip + 0x9817f]
4285b9: mov rax, qword ptr fs:[0x28]
4285c2: mov qword ptr [rsp + 0x38], rax
4285c7: xor eax, eax
4285c9: mov eax, dword ptr [rip + 0x98115]
4285cf: mov r15d, r13d
4285d2: test eax, eax
4285d4: js 0x4287d8
4285da: mov rax, qword ptr [rip + 0x980e7]
4285e1: lea rbx, [rip + 0x981b8]
4285e8: xor r12d, r12d
4285eb: lea rbp, [rsp + 0x10]
4285f0: mov ecx, dword ptr [rax + 0x74]
4285f3: mov edx, ecx
4285f5: mov dword ptr [rsp + 8], ecx
4285f9: or edx, 2
4285fc: mov dword ptr [rax + 0x74], edx
4285ff: jmp 0x42860c
428601: nop dword ptr [rax]
428608: add r12d, 1
42860c: pxor xmm0, xmm0
428610: mov qword ptr [rbp + 0x20], 0
428618: movaps xmmword ptr [rbp], xmm0
42861c: movaps xmmword ptr [rbp + 0x10], xmm0
428620: mov eax, dword ptr fs:[0x18]
428628: mov edx, 1
42862d: test eax, eax
42862f: jne 0x4287b8
428635: cmpxchg dword ptr [rbx], edx
428638: mov rsi, rbp
42863b: mov rdi, rbx
42863e: call 0x421520
428643: mov rdi, qword ptr [rip + 0x9807e]
42864a: mov edx, r12d
42864d: xor eax, eax
42864f: lea rsi, [rip + 0x6dc99]
428656: call 0x46c9e0
42865b: mov edx, dword ptr [rsp + 0x10]
42865f: mov rdi, qword ptr [rip + 0x98062]
428666: xor eax, eax
428668: lea rsi, [rip + 0x6dc8b]
42866f: call 0x46c9e0
428674: mov edx, dword ptr [rsp + 0x2c]
428678: mov rdi, qword ptr [rip + 0x98049]
42867f: xor eax, eax
428681: lea rsi, [rip + 0x6dc8b]
428688: call 0x46c9e0
42868d: mov r14d, dword ptr [rsp + 0x2c]
428692: add r15d, dword ptr [rsp + 0x10]
428697: mov r8d, r15d
42869a: add r14d, r13d
42869d: mov r13d, r14d
4286a0: mov eax, dword ptr fs:[0x18]
4286a8: test eax, eax
4286aa: jne 0x428788
4286b0: sub dword ptr [rbx], 1
4286b3: mov rbx, qword ptr [rbx + 0x870]
4286ba: lea rax, [rip + 0x980df]
4286c1: cmp rbx, rax
4286c4: jne 0x428608
4286ca: mov edx, 0x14
4286cf: mov rcx, qword ptr [rip + 0x97ff2]
4286d6: mov esi, 1
4286db: lea rdi, [rip + 0x6dc4a]
4286e2: mov dword ptr [rsp + 0xc], r8d
4286e7: call 0x473ae0
4286ec: mov r8d, dword ptr [rsp + 0xc]
4286f1: mov rdi, qword ptr [rip + 0x97fd0]
4286f8: xor eax, eax
4286fa: lea rsi, [rip + 0x6dbf9]
428701: mov edx, r8d
428704: call 0x46c9e0
428709: mov rdi, qword ptr [rip + 0x97fb8]
428710: mov edx, r14d
428713: xor eax, eax
428715: lea rsi, [rip + 0x6dbf7]
42871c: call 0x46c9e0
428721: mov edx, dword ptr [rip + 0x98009]
428727: mov rdi, qword ptr [rip + 0x97f9a]
42872e: xor eax, eax
428730: lea rsi, [rip + 0x6dc0a]
428737: call 0x46c9e0
42873c: mov rdx, qword ptr [rip + 0x97ffd]
428743: xor eax, eax
428745: mov rdi, qword ptr [rip + 0x97f7c]
42874c: lea rsi, [rip + 0x6dc07]
428753: call 0x46c9e0
428758: mov rax, qword ptr [rip + 0x97f69]
42875f: mov ecx, dword ptr [rsp + 8]
428763: mov dword ptr [rax + 0x74], ecx
428766: mov rax, qword ptr [rsp + 0x38]
42876b: xor rax, qword ptr fs:[0x28]
428774: jne 0x4287e2
428776: add rsp, 0x48
42877a: pop rbx
42877b: pop rbp
42877c: pop r12
42877e: pop r13
428780: pop r14
428782: pop r15
428784: ret 
428785: nop dword ptr [rax]
428788: xor eax, eax
42878a: xchg dword ptr [rbx], eax
42878c: cmp eax, 1
42878f: jle 0x4286b3
428795: xor r10d, r10d
428798: mov edx, 1
42879d: mov esi, 0x81
4287a2: mov rdi, rbx
4287a5: mov eax, 0xca
4287aa: syscall 
4287ac: jmp 0x4286b3
4287b1: nop dword ptr [rax]
4287b8: xor eax, eax
4287ba: lock cmpxchg dword ptr [rbx], edx
4287be: je 0x428638
4287c4: mov rdi, rbx
4287c7: call 0x421250
4287cc: jmp 0x428638
4287d1: nop dword ptr [rax]
4287d8: call 0x425420
4287dd: jmp 0x4285da
4287e2: call 0x4547a0
4287e7: nop word ptr [rax + rax]
4287f0: endbr64 
4287f4: push rbp
4287f5: mov ebp, edi
4287f7: push rbx
4287f8: movsxd rbx, esi
4287fb: sub rsp, 8
4287ff: mov eax, dword ptr [rip + 0x97edf]
428805: test eax, eax
428807: js 0x428850
428809: mov eax, dword ptr fs:[0x18]
428811: test eax, eax
428813: jne 0x428988
428819: mov edx, 1
42881e: cmpxchg dword ptr [rip + 0x97f7b], edx
428825: nop 
428826: lea rdi, [rip + 0x97f73]
42882d: call 0x421db0
428832: lea eax, [rbp + 8]
428835: cmp eax, 9
428838: ja 0x428898
42883a: lea rdx, [rip + 0x6e9f7]
428841: movsxd rax, dword ptr [rdx + rax*4]
428845: add rax, rdx
428848: notrack jmp rax
42884b: nop dword ptr [rax + rax]
428850: call 0x425420
428855: jmp 0x428809
428857: nop word ptr [rax + rax]
428860: xor r8d, r8d
428863: cmp rbx, 0xa0
42886a: jbe 0x4289e8
428870: mov eax, dword ptr fs:[0x18]
428878: test eax, eax
42887a: jne 0x4289b0
428880: sub dword ptr [rip + 0x97f19], 1
428887: add rsp, 8
42888b: mov eax, r8d
42888e: pop rbx
42888f: pop rbp
428890: ret 
428891: nop dword ptr [rax]
428898: mov r8d, 1
42889e: jmp 0x428870
4288a0: nop 
4288a1: mov dword ptr [rip + 0x97e89], 1
4288ab: mov r8d, 1
4288b1: mov dword ptr [rip + 0x97e75], ebx
4288b7: jmp 0x428870
4288b9: nop dword ptr [rax]
4288c0: xor r8d, r8d
4288c3: cmp rbx, 0x2000000
4288ca: ja 0x428870
4288cc: nop 
4288cd: mov dword ptr [rip + 0x97e5d], 1
4288d7: mov r8d, 1
4288dd: mov qword ptr [rip + 0x97e2c], rbx
4288e4: jmp 0x428870
4288e6: nop word ptr cs:[rax + rax]
4288f0: nop 
4288f1: mov dword ptr [rip + 0x97e39], 1
4288fb: mov r8d, 1
428901: mov qword ptr [rip + 0x97e00], rbx
428908: jmp 0x428870
42890d: nop dword ptr [rax]
428910: nop 
428911: mov dword ptr [rip + 0x97e19], 1
42891b: mov r8d, 1
428921: mov qword ptr [rip + 0x97dd8], rbx
428928: jmp 0x428870
42892d: nop dword ptr [rax]
428930: mov r8d, 1
428936: test ebx, ebx
428938: jle 0x428870
42893e: nop 
42893f: mov qword ptr [rip + 0x97dd2], rbx
428946: jmp 0x428870
42894b: nop dword ptr [rax + rax]
428950: nop 
428951: mov r8d, 1
428957: mov dword ptr [rip + 0x9a357], ebx
42895d: jmp 0x428870
428962: nop word ptr [rax + rax]
428968: mov r8d, 1
42896e: test ebx, ebx
428970: jle 0x428870
428976: nop 
428977: mov qword ptr [rip + 0x97da2], rbx
42897e: jmp 0x428870
428983: nop dword ptr [rax + rax]
428988: xor eax, eax
42898a: mov edx, 1
42898f: lock cmpxchg dword ptr [rip + 0x97e09], edx
428997: je 0x428825
42899d: lea rdi, [rip + 0x97dfc]
4289a4: call 0x421250
4289a9: jmp 0x428825
4289ae: nop 
4289b0: xor eax, eax
4289b2: xchg dword ptr [rip + 0x97de8], eax
4289b8: cmp eax, 1
4289bb: jle 0x428887
4289c1: xor r10d, r10d
4289c4: mov edx, 1
4289c9: mov esi, 0x81
4289ce: mov eax, 0xca
4289d3: lea rdi, [rip + 0x97dc6]
4289da: syscall 
4289dc: jmp 0x428887
4289e1: nop dword ptr [rax]
4289e8: nop 
4289e9: lea rax, [rbx + 8]
4289ed: mov edx, 0x10
4289f2: mov r8d, ebp
4289f5: and rax, 0xfffffffffffffff0
4289f9: test rbx, rbx
4289fc: cmove rax, rdx
428a00: mov qword ptr [rip + 0x9a2b1], rax
428a07: jmp 0x428870
428a0c: nop dword ptr [rax]
428a10: endbr64 
428a14: push r13
428a16: push r12
428a18: mov r12, rdx
428a1b: mov rdx, rsi
428a1e: shr rdx, 3
428a22: push rbp
428a23: lea rax, [rdx - 1]
428a27: push rbx
428a28: and rax, rdx
428a2b: mov rdx, rsi
428a2e: and edx, 7
428a31: sub rsp, 8
428a35: or rax, rdx
428a38: jne 0x428ae0
428a3e: mov rbx, rdi
428a41: mov rdi, rsi
428a44: test rsi, rsi
428a47: je 0x428ae0
428a4d: mov rax, qword ptr [rip + 0x97d2c]
428a54: mov rdx, qword ptr [rsp + 0x28]
428a59: test rax, rax
428a5c: jne 0x428b50
428a62: cmp rsi, 0x10
428a66: jbe 0x428b30
428a6c: cmp rsi, 0x1f
428a70: ja 0x428af0
428a72: mov ebp, 0x20
428a77: mov eax, dword ptr fs:[0x18]
428a7f: test eax, eax
428a81: jne 0x428b60
428a87: mov rdx, r12
428a8a: mov rsi, rbp
428a8d: lea rdi, [rip + 0x97d0c]
428a94: call 0x424e70
428a99: mov r8, rax
428a9c: test rax, rax
428a9f: je 0x428b40
428aa5: mov rax, qword ptr [rax - 8]
428aa9: test al, 2
428aab: jne 0x428acb
428aad: test al, 4
428aaf: je 0x428acb
428ab1: lea rax, [r8 - 0x10]
428ab5: lea rdx, [rip + 0x97ce4]
428abc: and rax, 0xfffffffffc000000
428ac2: cmp qword ptr [rax], rdx
428ac5: jne 0x428ce8
428acb: mov qword ptr [rbx], r8
428ace: add rsp, 8
428ad2: xor eax, eax
428ad4: pop rbx
428ad5: pop rbp
428ad6: pop r12
428ad8: pop r13
428ada: ret 
428adb: nop dword ptr [rax + rax]
428ae0: mov eax, 0x16
428ae5: add rsp, 8
428ae9: pop rbx
428aea: pop rbp
428aeb: pop r12
428aed: pop r13
428aef: ret 
428af0: movabs rax, 0x8000000000000000
428afa: cmp rsi, rax
428afd: ja 0x428c18
428b03: lea rax, [rsi - 1]
428b07: test rax, rsi
428b0a: je 0x428d07
428b10: mov ebp, 0x20
428b15: cmp rsi, 0x20
428b19: je 0x428a77
428b1f: nop 
428b20: add rbp, rbp
428b23: cmp rdi, rbp
428b26: ja 0x428b20
428b28: jmp 0x428a77
428b2d: nop dword ptr [rax]
428b30: mov rdi, r12
428b33: call 0x426410
428b38: mov r8, rax
428b3b: test r8, r8
428b3e: jne 0x428acb
428b40: mov eax, 0xc
428b45: jmp 0x428ae5
428b47: nop word ptr [rax + rax]
428b50: mov rsi, r12
428b53: call rax
428b55: mov r8, rax
428b58: jmp 0x428b3b
428b5a: nop word ptr [rax + rax]
428b60: mov rax, 0xffffffffffffffd8
428b67: mov r13, qword ptr fs:[rax]
428b6b: test r13, r13
428b6e: je 0x428c30
428b74: mov eax, dword ptr fs:[0x18]
428b7c: test eax, eax
428b7e: jne 0x428c9d
428b84: mov edx, 1
428b89: cmpxchg dword ptr [r13], edx
428b8e: mov rdx, r12
428b91: mov rsi, rbp
428b94: mov rdi, r13
428b97: call 0x424e70
428b9c: mov r8, rax
428b9f: test rax, rax
428ba2: je 0x428c6f
428ba8: mov eax, dword ptr fs:[0x18]
428bb0: test eax, eax
428bb2: jne 0x428cbd
428bb8: sub dword ptr [r13], 1
428bbd: test r8, r8
428bc0: je 0x428b40
428bc6: mov rax, qword ptr [r8 - 8]
428bca: test al, 2
428bcc: jne 0x428acb
428bd2: lea rdx, [rip + 0x97bc7]
428bd9: test al, 4
428bdb: je 0x428bea
428bdd: lea rax, [r8 - 0x10]
428be1: and rax, 0xfffffffffc000000
428be7: mov rdx, qword ptr [rax]
428bea: cmp rdx, r13
428bed: je 0x428acb
428bf3: lea rcx, [rip + 0x6e56e]
428bfa: mov edx, 0xcfb
428bff: lea rsi, [rip + 0x6d48a]
428c06: lea rdi, [rip + 0x6e3ab]
428c0d: call 0x4216e0
428c12: nop word ptr [rax + rax]
428c18: mov rax, 0xffffffffffffffc0
428c1f: mov dword ptr fs:[rax], 0x16
428c26: mov eax, 0xc
428c2b: jmp 0x428ae5
428c30: call 0x421b40
428c35: mov r13, rax
428c38: test rax, rax
428c3b: jne 0x428b8e
428c41: lea rdi, [rbp + r12 + 0x20]
428c46: xor esi, esi
428c48: call 0x421f10
428c4d: mov rdx, r12
428c50: mov rsi, rbp
428c53: mov rdi, rax
428c56: mov r13, rax
428c59: call 0x424e70
428c5e: mov r8, rax
428c61: test rax, rax
428c64: jne 0x428c8f
428c66: test r13, r13
428c69: je 0x428bbd
428c6f: nop 
428c70: mov rdi, r13
428c73: mov rsi, r12
428c76: call 0x4224b0
428c7b: mov rdx, r12
428c7e: mov rsi, rbp
428c81: mov rdi, rax
428c84: mov r13, rax
428c87: call 0x424e70
428c8c: mov r8, rax
428c8f: test r13, r13
428c92: je 0x428bbd
428c98: jmp 0x428ba8
428c9d: xor eax, eax
428c9f: mov edx, 1
428ca4: lock cmpxchg dword ptr [r13], edx
428caa: je 0x428b8e
428cb0: mov rdi, r13
428cb3: call 0x421250
428cb8: jmp 0x428b8e
428cbd: xor eax, eax
428cbf: xchg dword ptr [r13], eax
428cc3: cmp eax, 1
428cc6: jle 0x428bbd
428ccc: xor r10d, r10d
428ccf: mov edx, 1
428cd4: mov esi, 0x81
428cd9: mov rdi, r13
428cdc: mov eax, 0xca
428ce1: syscall 
428ce3: jmp 0x428bbd
428ce8: lea rcx, [rip + 0x6e479]
428cef: mov edx, 0xce8
428cf4: lea rsi, [rip + 0x6d395]
428cfb: lea rdi, [rip + 0x6e256]
428d02: call 0x4216e0
428d07: mov rbp, rsi
428d0a: jmp 0x428a77
428d0f: nop 
428d10: endbr64 
428d14: test edi, edi
428d16: jne 0x428d40
428d18: mov eax, dword ptr [rip + 0x979c6]
428d1e: push rbp
428d1f: mov rbp, rsi
428d22: test eax, eax
428d24: js 0x428d50
428d26: mov rsi, rbp
428d29: lea rdi, [rip + 0x6d644]
428d30: call 0x4738d0
428d35: mov rdi, rbp
428d38: pop rbp
428d39: jmp 0x422600
428d3e: nop 
428d40: mov eax, 0x16
428d45: ret 
428d46: nop word ptr cs:[rax + rax]
428d50: call 0x425420
428d55: jmp 0x428d26
428d57: nop word ptr [rax + rax]
428d60: endbr64 
428d64: sub rsp, 8
428d68: call 0x451a90
428d6d: mov edx, 0
428d72: cmp rax, -1
428d76: cmove rax, rdx
428d7a: add rsp, 8
428d7e: ret 
428d7f: nop 
428d80: endbr64 
428d84: push r14
428d86: lea r14, [rdi + 0x10]
428d8a: push r13
428d8c: push r12
428d8e: push rbp
428d8f: push rbx
428d90: mov r13, qword ptr [rdi + 8]
428d94: mov rbx, rdi
428d97: mov r12, qword ptr [rdi]
428d9a: lea rbp, [r13 + r13]
428d9f: cmp r12, r14
428da2: je 0x428dd8
428da4: cmp r13, rbp
428da7: ja 0x428e00
428da9: mov rsi, rbp
428dac: mov rdi, r12
428daf: call 0x427100
428db4: mov rcx, rax
428db7: test rax, rax
428dba: je 0x428e28
428dbc: mov qword ptr [rbx], rcx
428dbf: mov eax, 1
428dc4: mov qword ptr [rbx + 8], rbp
428dc8: pop rbx
428dc9: pop rbp
428dca: pop r12
428dcc: pop r13
428dce: pop r14
428dd0: ret 
428dd1: nop dword ptr [rax]
428dd8: mov rdi, rbp
428ddb: call 0x426410
428de0: test rax, rax
428de3: je 0x428e2d
428de5: mov rdx, r13
428de8: mov rsi, r12
428deb: mov rdi, rax
428dee: call 0x401060
428df3: mov rcx, rax
428df6: jmp 0x428dbc
428df8: nop dword ptr [rax + rax]
428e00: mov rax, 0xffffffffffffffc0
428e07: mov dword ptr fs:[rax], 0xc
428e0e: mov rdi, r12
428e11: call 0x426a00
428e16: mov qword ptr [rbx], r14
428e19: xor eax, eax
428e1b: mov qword ptr [rbx + 8], 0x400
428e23: jmp 0x428dc8
428e25: nop dword ptr [rax]
428e28: mov r12, qword ptr [rbx]
428e2b: jmp 0x428e0e
428e2d: xor eax, eax
428e2f: jmp 0x428dc8
428e31: nop word ptr cs:[rax + rax]
428e3b: nop dword ptr [rax + rax]
428e40: endbr64 
428e44: mov rax, rsi
428e47: push r12
428e49: mov r12, rsi
428e4c: or rax, rdx
428e4f: imul r12, rdx
428e53: push rbp
428e54: shr rax, 0x20
428e58: push rbx
428e59: mov rbx, rdi
428e5c: je 0x428e63
428e5e: test rsi, rsi
428e61: jne 0x428ea0
428e63: mov eax, 1
428e68: cmp qword ptr [rbx + 8], r12
428e6c: jae 0x428e98
428e6e: mov rdi, qword ptr [rbx]
428e71: lea rbp, [rbx + 0x10]
428e75: cmp rdi, rbp
428e78: je 0x428e7f
428e7a: call 0x426a00
428e7f: mov rdi, r12
428e82: call 0x426410
428e87: test rax, rax
428e8a: je 0x428ee1
428e8c: mov qword ptr [rbx + 8], r12
428e90: mov qword ptr [rbx], rax
428e93: mov eax, 1
428e98: pop rbx
428e99: pop rbp
428e9a: pop r12
428e9c: ret 
428e9d: nop dword ptr [rax]
428ea0: mov rcx, rdx
428ea3: mov rax, r12
428ea6: xor edx, edx
428ea8: div rsi
428eab: cmp rax, rcx
428eae: je 0x428e63
428eb0: mov rdi, qword ptr [rdi]
428eb3: lea rbp, [rbx + 0x10]
428eb7: cmp rdi, rbp
428eba: je 0x428ec1
428ebc: call 0x426a00
428ec1: mov rax, 0xffffffffffffffc0
428ec8: mov qword ptr [rbx], rbp
428ecb: mov qword ptr [rbx + 8], 0x400
428ed3: mov dword ptr fs:[rax], 0xc
428eda: xor eax, eax
428edc: pop rbx
428edd: pop rbp
428ede: pop r12
428ee0: ret 
428ee1: mov qword ptr [rbx], rbp
428ee4: mov qword ptr [rbx + 8], 0x400
428eec: jmp 0x428e98
428eee: nop 
428ef0: endbr64 
428ef4: movabs rdx, 0x90000000002
428efe: and rdx, qword ptr [rip + 0x99e7b]
428f05: movabs rcx, 0x10000000002
428f0f: lea rax, [rip + 0x1d1ba]
428f16: cmp rdx, rcx
428f19: je 0x428f34
428f1b: test byte ptr [rip + 0x99e62], 0x40
428f22: lea rax, [rip + 0x1cd67]
428f29: lea rdx, [rip + 0x22410]
428f30: cmovne rax, rdx
428f34: ret 
428f35: nop word ptr cs:[rax + rax]
428f3f: nop 
428f40: endbr64 
428f44: movabs rdx, 0x90000000002
428f4e: and rdx, qword ptr [rip + 0x99e2b]
428f55: movabs rcx, 0x10000000002
428f5f: lea rax, [rip + 0x396a]
428f66: cmp rdx, rcx
428f69: je 0x428f94
428f6b: lea rax, [rip + 0x243e]
428f72: test byte ptr [rip + 0x99e0b], 0x10
428f79: jne 0x428f94
428f7b: test byte ptr [rip + 0x99da7], 2
428f82: lea rax, [rip + 0xfd7]
428f89: lea rdx, [rip + 0x26d0]
428f90: cmovne rax, rdx
428f94: ret 
428f95: nop word ptr cs:[rax + rax]
428f9f: nop 
428fa0: endbr64 
428fa4: movabs rdx, 0x90000000002
428fae: and rdx, qword ptr [rip + 0x99dcb]
428fb5: movabs rcx, 0x10000000002
428fbf: lea rax, [rip + 0x1ddaa]
428fc6: cmp rdx, rcx
428fc9: je 0x428ff4
428fcb: lea rax, [rip + 0x212ce]
428fd2: test byte ptr [rip + 0x99dab], 0x10
428fd9: jne 0x428ff4
428fdb: test byte ptr [rip + 0x99d47], 2
428fe2: lea rax, [rip + 0x1e117]
428fe9: lea rdx, [rip + 0x1e2f0]
428ff0: cmovne rax, rdx
428ff4: ret 
428ff5: nop word ptr cs:[rax + rax]
428fff: nop 
429000: endbr64 
429004: test byte ptr [rip + 0x99d1f], 0x10
42900b: lea rdx, [rip + 0x2430e]
429012: lea rax, [rip + 0x24257]
429019: cmovne rax, rdx
42901d: ret 
42901e: nop 
429020: endbr64 
429024: push r12
429026: push rbp
429027: mov rbp, rdi
42902a: sub rsp, 8
42902e: call 0x401180
429033: lea r12, [rax + 1]
429037: mov rdi, r12
42903a: call 0x426410
42903f: test rax, rax
429042: je 0x429059
429044: add rsp, 8
429048: mov rdx, r12
42904b: mov rsi, rbp
42904e: mov rdi, rax
429051: pop rbp
429052: pop r12
429054: jmp 0x401060
429059: pop rdx
42905a: xor eax, eax
42905c: pop rbp
42905d: pop r12
42905f: ret 
429060: endbr64 
429064: push r15
429066: push r14
429068: push r13
42906a: mov r13, rsi
42906d: push r12
42906f: mov r12, rdx
429072: push rbp
429073: push rbx
429074: mov ebx, edi
429076: sub rsp, 0x28
42907a: mov rax, qword ptr fs:[0x28]
429083: mov qword ptr [rsp + 0x18], rax
429088: xor eax, eax
42908a: test edi, edi
42908c: js 0x4290e8
42908e: cmp dword ptr [rip + 0x80efc], edi
429094: movsxd rbp, edi
429097: jle 0x429188
42909d: lea rax, [rip + 0x9521c]
4290a4: mov rsi, qword ptr [rax + rbp*8]
4290a8: test rsi, rsi
4290ab: je 0x429188
4290b1: mov edx, 5
4290b6: lea rdi, [rip + 0x7fe5f]
4290bd: call 0x4032f0
4290c2: mov rcx, qword ptr [rsp + 0x18]
4290c7: xor rcx, qword ptr fs:[0x28]
4290d0: jne 0x4291f2
4290d6: add rsp, 0x28
4290da: pop rbx
4290db: pop rbp
4290dc: pop r12
4290de: pop r13
4290e0: pop r14
4290e2: pop r15
4290e4: ret 
4290e5: nop dword ptr [rax]
4290e8: mov edx, 5
4290ed: lea rsi, [rip + 0x6e1bc]
4290f4: lea rdi, [rip + 0x7fe21]
4290fb: neg ebx
4290fd: call 0x4032f0
429102: mov rdi, rax
429105: mov r15, rax
429108: call 0x401180
42910d: lea rsi, [rsp + 0x14]
429112: movsxd rdi, ebx
429115: xor ecx, ecx
429117: mov rbp, rax
42911a: mov edx, 0xa
42911f: mov byte ptr [rsp + 0x14], 0
429124: call 0x467040
429129: cmp rbp, r12
42912c: mov rdx, r12
42912f: mov rsi, r15
429132: cmovbe rdx, rbp
429136: mov rdi, r13
429139: mov r14, rax
42913c: call 0x401150
429141: cmp rbp, r12
429144: jae 0x4291eb
42914a: lea rbx, [rbp + 1]
42914e: mov byte ptr [rax], 0x2d
429151: lea rdi, [rax + 1]
429155: cmp r12, rbx
429158: jbe 0x429177
42915a: mov rdx, r12
42915d: lea rax, [rsp + 0x15]
429162: mov rsi, r14
429165: sub rdx, rbx
429168: sub rax, r14
42916b: cmp rdx, rax
42916e: cmova rdx, rax
429172: call 0x401060
429177: mov byte ptr [r13 + r12 - 1], 0
42917d: mov rax, r13
429180: jmp 0x4290c2
429185: nop dword ptr [rax]
429188: mov edx, 5
42918d: lea rsi, [rip + 0x6e11c]
429194: lea rdi, [rip + 0x7fd81]
42919b: call 0x4032f0
4291a0: mov rdi, rax
4291a3: mov r15, rax
4291a6: call 0x401180
4291ab: xor ecx, ecx
4291ad: lea rsi, [rsp + 0x14]
4291b2: mov rdi, rbp
4291b5: mov rbx, rax
4291b8: mov edx, 0xa
4291bd: mov byte ptr [rsp + 0x14], 0
4291c2: call 0x467040
4291c7: cmp r12, rbx
4291ca: mov rdx, rbx
4291cd: mov rdi, r13
4291d0: cmovbe rdx, r12
4291d4: mov rsi, r15
4291d7: mov r14, rax
4291da: call 0x401150
4291df: mov rdi, rax
4291e2: cmp r12, rbx
4291e5: ja 0x42915a
4291eb: test r12, r12
4291ee: je 0x42917d
4291f0: jmp 0x429177
4291f2: call 0x4547a0
4291f7: nop word ptr [rax + rax]
429200: endbr64 
429204: movabs rdx, 0x10000000002
42920e: movabs rax, 0x90000000002
429218: and rax, qword ptr [rip + 0x99b61]
42921f: cmp rax, rdx
429222: lea rdx, [rip + 0x1d687]
429229: lea rax, [rip + 0x1d2c0]
429230: cmove rax, rdx
429234: ret 
429235: nop word ptr cs:[rax + rax]
42923f: nop 
429240: endbr64 
429244: movabs rdx, 0x10000000002
42924e: movabs rax, 0x90000000002
429258: and rax, qword ptr [rip + 0x99b21]
42925f: cmp rax, rdx
429262: lea rdx, [rip + 0x1d7e7]
429269: lea rax, [rip + 0x1d420]
429270: cmove rax, rdx
429274: ret 
429275: nop word ptr cs:[rax + rax]
42927f: nop 
429280: endbr64 
429284: movabs rdx, 0x90000000002
42928e: and rdx, qword ptr [rip + 0x99aeb]
429295: movabs rcx, 0x10000000002
42929f: lea rax, [rip + 0x7a1a]
4292a6: cmp rdx, rcx
4292a9: je 0x4292de
4292ab: mov edx, dword ptr [rip + 0x99a77]
4292b1: test edx, 0x100000
4292b7: je 0x4292c9
4292b9: lea rax, [rip + 0x6a20]
4292c0: test byte ptr [rip + 0x99abd], 0x80
4292c7: je 0x4292de
4292c9: and dh, 2
4292cc: lea rax, [rip + 0x3a3d]
4292d3: lea rdx, [rip + 0x5296]
4292da: cmovne rax, rdx
4292de: ret 
4292df: nop 
4292e0: push r15
4292e2: mov r8, rsi
4292e5: push r14
4292e7: push r13
4292e9: mov r13, rdi
4292ec: push r12
4292ee: push rbp
4292ef: push rbx
4292f0: mov rbx, rdx
4292f3: sub rsp, 0x858
4292fa: mov rax, qword ptr fs:[0x28]
429303: mov qword ptr [rsp + 0x848], rax
42930b: xor eax, eax
42930d: cmp rcx, 1
429311: jbe 0x42974a
429317: xor esi, esi
429319: mov r10d, 1
42931f: mov edx, 1
429324: mov rbp, 0xffffffffffffffff
42932b: mov eax, 1
429330: jmp 0x42934f
429332: nop word ptr [rax + rax]
429338: mov r10, rax
42933b: mov rsi, rax
42933e: mov edx, 1
429343: sub r10, rbp
429346: lea rax, [rsi + rdx]
42934a: cmp rcx, rax
42934d: jbe 0x42937e
42934f: lea rdi, [rbx + rdx]
429353: movzx edi, byte ptr [rdi + rbp]
429357: cmp byte ptr [rbx + rax], dil
42935b: jb 0x429338
42935d: je 0x429568
429363: mov rbp, rsi
429366: mov edx, 1
42936b: add rsi, 1
42936f: mov r10d, 1
429375: lea rax, [rsi + rdx]
429379: cmp rcx, rax
42937c: ja 0x42934f
42937e: xor esi, esi
429380: mov r12d, 1
429386: mov edx, 1
42938b: mov rdi, 0xffffffffffffffff
429392: mov eax, 1
429397: jmp 0x4293b7
429399: nop dword ptr [rax]
4293a0: mov r12, rax
4293a3: mov rsi, rax
4293a6: mov edx, 1
4293ab: sub r12, rdi
4293ae: lea rax, [rdx + rsi]
4293b2: cmp rax, rcx
4293b5: jae 0x4293e7
4293b7: lea r9, [rbx + rdx]
4293bb: movzx r11d, byte ptr [rbx + rax]
4293c0: cmp byte ptr [r9 + rdi], r11b
4293c4: jb 0x4293a0
4293c6: je 0x429580
4293cc: mov rdi, rsi
4293cf: mov edx, 1
4293d4: add rsi, 1
4293d8: mov r12d, 1
4293de: lea rax, [rdx + rsi]
4293e2: cmp rax, rcx
4293e5: jb 0x4293b7
4293e7: add rdi, 1
4293eb: add rbp, 1
4293ef: cmp rbp, rdi
4293f2: ja 0x4293fa
4293f4: mov r10, r12
4293f7: mov rbp, rdi
4293fa: movq xmm0, rcx
4293ff: lea rax, [rsp + 0x40]
429404: lea rdx, [rsp + 0x840]
42940c: punpcklqdq xmm0, xmm0
429410: movaps xmmword ptr [rax], xmm0
429413: add rax, 0x10
429417: cmp rax, rdx
42941a: jne 0x429410
42941c: test rcx, rcx
42941f: je 0x429447
429421: lea r11, [rcx + rbx]
429425: mov rax, rbx
429428: lea rdi, [rbx + rcx - 1]
42942d: nop dword ptr [rax]
429430: movzx edx, byte ptr [rax]
429433: mov rsi, rdi
429436: sub rsi, rax
429439: add rax, 1
42943d: mov qword ptr [rsp + rdx*8 + 0x40], rsi
429442: cmp r11, rax
429445: jne 0x429430
429447: lea rsi, [rbx + r10]
42944b: mov rdx, rbp
42944e: mov rdi, rbx
429451: mov qword ptr [rsp + 0x10], rcx
429456: mov qword ptr [rsp + 8], r8
42945b: mov qword ptr [rsp], r10
42945f: call 0x4010e0
429464: mov r10, qword ptr [rsp]
429468: mov r8, qword ptr [rsp + 8]
42946d: test eax, eax
42946f: mov rcx, qword ptr [rsp + 0x10]
429474: jne 0x429627
42947a: lea rax, [rcx + 0x200]
429481: xor r12d, r12d
429484: lea r15, [rcx - 1]
429488: xor r14d, r14d
42948b: mov qword ptr [rsp + 0x20], rax
429490: mov eax, 1
429495: sub rax, rbp
429498: mov qword ptr [rsp + 0x30], rax
42949d: lea rax, [rbp - 1]
4294a1: mov qword ptr [rsp + 0x38], rax
4294a6: mov rax, rcx
4294a9: sub rax, r10
4294ac: mov qword ptr [rsp + 0x28], rax
4294b1: mov rax, r8
4294b4: mov r8, rbp
4294b7: mov rbp, rax
4294ba: jmp 0x4294d4
4294bc: nop dword ptr [rax]
4294c0: cmp rax, r10
4294c3: jae 0x4294ce
4294c5: test r12, r12
4294c8: cmovne rax, qword ptr [rsp + 0x28]
4294ce: add r14, rax
4294d1: xor r12d, r12d
4294d4: lea rdx, [r14 + rcx]
4294d8: cmp rdx, rbp
4294db: jbe 0x42951e
4294dd: mov rsi, qword ptr [rsp + 0x20]
4294e2: lea rdi, [r13 + rbp]
4294e7: mov qword ptr [rsp + 0x18], rcx
4294ec: mov qword ptr [rsp + 0x10], r8
4294f1: mov qword ptr [rsp + 8], r10
4294f6: mov qword ptr [rsp], rdx
4294fa: call 0x401030
4294ff: mov rdx, qword ptr [rsp]
429503: mov r10, qword ptr [rsp + 8]
429508: add rbp, rax
42950b: mov r8, qword ptr [rsp + 0x10]
429510: mov rcx, qword ptr [rsp + 0x18]
429515: cmp rdx, rbp
429518: ja 0x4295f7
42951e: movzx eax, byte ptr [r13 + rdx - 1]
429524: mov rax, qword ptr [rsp + rax*8 + 0x40]
429529: test rax, rax
42952c: jne 0x4294c0
42952e: cmp r12, r8
429531: mov rax, r8
429534: lea rdx, [r13 + r14]
429539: cmovae rax, r12
42953d: cmp rax, r15
429540: jb 0x429551
429542: jmp 0x429598
429544: nop dword ptr [rax]
429548: add rax, 1
42954c: cmp rax, r15
42954f: jae 0x429598
429551: movzx edi, byte ptr [rdx + rax]
429555: cmp byte ptr [rbx + rax], dil
429559: je 0x429548
42955b: add r14, qword ptr [rsp + 0x30]
429560: jmp 0x4294ce
429565: nop dword ptr [rax]
429568: cmp rdx, r10
42956b: je 0x429730
429571: add rdx, 1
429575: jmp 0x429346
42957a: nop word ptr [rax + rax]
429580: cmp r12, rdx
429583: je 0x42973d
429589: add rdx, 1
42958d: jmp 0x4293ae
429592: nop word ptr [rax + rax]
429598: mov rsi, qword ptr [rsp + 0x38]
42959d: lea rdi, [rbx - 1]
4295a1: mov rdx, r8
4295a4: mov rax, rsi
4295a7: add rsi, r14
4295aa: sub rsi, r8
4295ad: add rsi, r13
4295b0: cmp r12, r8
4295b3: jb 0x4295cc
4295b5: jmp 0x4295dd
4295b7: nop word ptr [rax + rax]
4295c0: lea rdx, [rax - 1]
4295c4: cmp r12, rax
4295c7: je 0x429622
4295c9: mov rax, rdx
4295cc: movzx r11d, byte ptr [rax + rsi + 1]
4295d2: lea rdx, [rax + 1]
4295d6: cmp byte ptr [rdi + rax + 1], r11b
4295db: je 0x4295c0
4295dd: add r12, 1
4295e1: cmp r12, rdx
4295e4: ja 0x429761
4295ea: mov r12, qword ptr [rsp + 0x28]
4295ef: add r14, r10
4295f2: jmp 0x4294d4
4295f7: xor eax, eax
4295f9: mov rcx, qword ptr [rsp + 0x848]
429601: xor rcx, qword ptr fs:[0x28]
42960a: jne 0x42976b
429610: add rsp, 0x858
429617: pop rbx
429618: pop rbp
429619: pop r12
42961b: pop r13
42961d: pop r14
42961f: pop r15
429621: ret 
429622: mov rdx, r12
429625: jmp 0x4295dd
429627: mov rax, rcx
42962a: lea r14, [rcx - 1]
42962e: sub rax, rbp
429631: cmp rax, rbp
429634: cmovb rax, rbp
429638: xor r15d, r15d
42963b: add rax, 1
42963f: mov qword ptr [rsp + 0x28], rax
429644: lea rax, [rbp - 1]
429648: mov qword ptr [rsp + 0x20], rax
42964d: lea rax, [rcx + 0x200]
429654: mov qword ptr [rsp + 0x10], rax
429659: mov eax, 1
42965e: sub rax, rbp
429661: mov qword ptr [rsp + 0x18], rax
429666: mov rax, r8
429669: mov r8, rbp
42966c: mov rbp, rax
42966f: jmp 0x42967b
429671: nop dword ptr [rax]
429678: add r15, rax
42967b: lea r12, [r15 + rcx]
42967f: cmp r12, rbp
429682: jbe 0x4296b1
429684: mov rsi, qword ptr [rsp + 0x10]
429689: lea rdi, [r13 + rbp]
42968e: mov qword ptr [rsp + 8], rcx
429693: mov qword ptr [rsp], r8
429697: call 0x401030
42969c: mov r8, qword ptr [rsp]
4296a0: mov rcx, qword ptr [rsp + 8]
4296a5: add rbp, rax
4296a8: cmp r12, rbp
4296ab: ja 0x4295f7
4296b1: movzx eax, byte ptr [r13 + r12 - 1]
4296b7: mov rax, qword ptr [rsp + rax*8 + 0x40]
4296bc: test rax, rax
4296bf: jne 0x429678
4296c1: mov rax, r8
4296c4: lea rdx, [r13 + r15]
4296c9: cmp r8, r14
4296cc: jb 0x4296d9
4296ce: jmp 0x4296f0
4296d0: add rax, 1
4296d4: cmp rax, r14
4296d7: jae 0x4296f0
4296d9: movzx esi, byte ptr [rdx + rax]
4296dd: cmp byte ptr [rbx + rax], sil
4296e1: je 0x4296d0
4296e3: add r15, qword ptr [rsp + 0x18]
4296e8: jmp 0x429678
4296ea: nop word ptr [rax + rax]
4296f0: mov rax, qword ptr [rsp + 0x20]
4296f5: lea rdx, [r15 + rax]
4296f9: cmp rax, -1
4296fd: je 0x429757
4296ff: sub rdx, r8
429702: lea rsi, [rbx - 1]
429706: add rdx, r13
429709: jmp 0x42971a
42970b: nop dword ptr [rax + rax]
429710: sub rax, 1
429714: cmp rax, -1
429718: je 0x429757
42971a: movzx edi, byte ptr [rax + rdx + 1]
42971f: cmp byte ptr [rsi + rax + 1], dil
429724: je 0x429710
429726: add r15, qword ptr [rsp + 0x28]
42972b: jmp 0x42967b
429730: add rsi, rdx
429733: mov edx, 1
429738: jmp 0x429346
42973d: add rsi, r12
429740: mov edx, 1
429745: jmp 0x4293ae
42974a: mov r10d, 1
429750: xor ebp, ebp
429752: jmp 0x4293fa
429757: lea rax, [r13 + r15]
42975c: jmp 0x4295f9
429761: lea rax, [r13 + r14]
429766: jmp 0x4295f9
42976b: call 0x4547a0
429770: endbr64 
429774: push r15
429776: push r14
429778: push r13
42977a: push r12
42977c: push rbp
42977d: push rbx
42977e: sub rsp, 0x128
429785: movzx ebx, byte ptr [rsi]
429788: mov rax, qword ptr fs:[0x28]
429791: mov qword ptr [rsp + 0x118], rax
429799: xor eax, eax
42979b: test bl, bl
42979d: je 0x4299e0
4297a3: movzx ebp, bl
4297a6: mov r13, rsi
4297a9: mov esi, ebp
4297ab: call 0x401190
4297b0: mov r12, rax
4297b3: test rax, rax
4297b6: je 0x4299b1
4297bc: movzx eax, byte ptr [r13 + 1]
4297c1: test al, al
4297c3: je 0x4299b4
4297c9: movzx edx, byte ptr [r13 + 2]
4297ce: test dl, dl
4297d0: je 0x4299e5
4297d6: cmp byte ptr [r13 + 3], 0
4297db: je 0x429a25
4297e1: mov rdi, r13
4297e4: call 0x401180
4297e9: mov rdi, r12
4297ec: mov rsi, rax
4297ef: mov qword ptr [rsp + 8], rax
4297f4: mov r14, rax
4297f7: or rsi, 0x200
4297fe: call 0x401030
429803: mov r15, rax
429806: cmp r14, rax
429809: ja 0x4299b1
42980f: mov rdx, r14
429812: mov rsi, r13
429815: mov rdi, r12
429818: call 0x4010e0
42981d: test eax, eax
42981f: je 0x4299b4
429825: cmp r14, 0x100
42982c: ja 0x429a74
429832: lea rdx, [rsp + 0x10]
429837: sub r15, r14
42983a: mov rsi, r14
42983d: mov ecx, 0x20
429842: xor eax, eax
429844: mov rdi, rdx
429847: lea r14, [r14 - 1]
42984b: add r15, r12
42984e: rep stosq qword ptr [rdi], rax
429851: cmp r14, 1
429855: jbe 0x4298e9
42985b: cmp r14, 3
42985f: jbe 0x429aa9
429865: lea rax, [rsi - 5]
429869: mov edx, 1
42986e: and rax, 0xfffffffffffffffe
429872: add rax, 3
429876: movzx ecx, byte ptr [r13 + rdx]
42987c: shl rbx, 3
429880: mov rsi, rcx
429883: shl rcx, 3
429887: sub rsi, rbx
42988a: movzx ebx, byte ptr [r13 + rdx + 1]
429890: movzx esi, sil
429894: mov rdi, rbx
429897: mov byte ptr [rsp + rsi + 0x10], dl
42989b: lea esi, [rdx + 1]
42989e: sub rdi, rcx
4298a1: movzx ecx, dil
4298a5: mov byte ptr [rsp + rcx + 0x10], sil
4298aa: lea esi, [rdx + 2]
4298ad: add rdx, 2
4298b1: cmp rax, rdx
4298b4: jne 0x429876
4298b6: movsxd rcx, esi
4298b9: add rcx, 1
4298bd: sub esi, ecx
4298bf: nop 
4298c0: movzx eax, byte ptr [r13 + rdx]
4298c6: movzx edx, byte ptr [r13 + rdx - 1]
4298cc: shl rdx, 3
4298d0: sub rax, rdx
4298d3: lea edx, [rsi + rcx]
4298d6: movzx eax, al
4298d9: mov byte ptr [rsp + rax + 0x10], dl
4298dd: mov rdx, rcx
4298e0: add rcx, 1
4298e4: cmp r14, rdx
4298e7: ja 0x4298c0
4298e9: mov rcx, qword ptr [rsp + 8]
4298ee: mov rbx, r14
4298f1: xor ebp, ebp
4298f3: movzx edx, byte ptr [r13 + rcx - 2]
4298f9: movzx eax, byte ptr [r13 + rcx - 1]
4298ff: shl rdx, 3
429903: sub rax, rdx
429906: movzx eax, al
429909: movzx edx, byte ptr [rsp + rax + 0x10]
42990e: mov byte ptr [rsp + rax + 0x10], r14b
429913: lea rax, [rcx - 9]
429917: mov qword ptr [rsp], rax
42991b: sub rbx, rdx
42991e: nop 
429920: cmp r12, r15
429923: ja 0x429992
429925: nop dword ptr [rax]
429928: add r12, r14
42992b: movzx edx, byte ptr [r12 - 1]
429931: movzx eax, byte ptr [r12]
429936: shl rdx, 3
42993a: sub rax, rdx
42993d: movzx eax, al
429940: movzx eax, byte ptr [rsp + rax + 0x10]
429945: test rax, rax
429948: jne 0x42994f
42994a: cmp r12, r15
42994d: jbe 0x429928
42994f: sub r12, rax
429952: cmp r14, rax
429955: ja 0x429920
429957: cmp r14, 0xe
42995b: jbe 0x429968
42995d: mov rax, qword ptr [r12 + rbp]
429961: cmp qword ptr [r13 + rbp], rax
429966: jne 0x42998a
429968: mov rdx, r14
42996b: mov rsi, r13
42996e: mov rdi, r12
429971: call 0x4010e0
429976: test eax, eax
429978: je 0x4299b4
42997a: lea rax, [rbp - 8]
42997e: cmp rbp, 8
429982: cmovb rax, qword ptr [rsp]
429987: mov rbp, rax
42998a: add r12, rbx
42998d: cmp r12, r15
429990: jbe 0x429928
429992: mov rax, qword ptr [rsp + 8]
429997: mov esi, 0x800
42999c: lea rdi, [r15 + rax]
4299a0: call 0x401030
4299a5: add r15, rax
4299a8: cmp r12, r15
4299ab: jbe 0x429928
4299b1: xor r12d, r12d
4299b4: mov rax, qword ptr [rsp + 0x118]
4299bc: xor rax, qword ptr fs:[0x28]
4299c5: jne 0x429ab8
4299cb: add rsp, 0x128
4299d2: mov rax, r12
4299d5: pop rbx
4299d6: pop rbp
4299d7: pop r12
4299d9: pop r13
4299db: pop r14
4299dd: pop r15
4299df: ret 
4299e0: mov r12, rdi
4299e3: jmp 0x4299b4
4299e5: movzx edx, byte ptr [r12]
4299ea: shl ebp, 0x10
4299ed: or ebp, eax
4299ef: test edx, edx
4299f1: je 0x4299b1
4299f3: xor eax, eax
4299f5: jmp 0x429a04
4299f7: nop word ptr [rax + rax]
429a00: test edx, edx
429a02: je 0x429a1f
429a04: shl eax, 0x10
429a07: mov rcx, r12
429a0a: add r12, 1
429a0e: or eax, edx
429a10: movzx edx, byte ptr [r12]
429a15: cmp ebp, eax
429a17: jne 0x429a00
429a19: lea r12, [rcx - 1]
429a1d: jmp 0x4299b4
429a1f: cmp ebp, eax
429a21: jne 0x4299b1
429a23: jmp 0x429a19
429a25: shl edx, 8
429a28: shl eax, 0x10
429a2b: or eax, edx
429a2d: movzx edx, byte ptr [r12]
429a32: shl ebp, 0x18
429a35: or ebp, eax
429a37: test edx, edx
429a39: je 0x4299b1
429a3f: xor eax, eax
429a41: jmp 0x429a4c
429a43: nop dword ptr [rax + rax]
429a48: test edx, edx
429a4a: je 0x429a6a
429a4c: or eax, edx
429a4e: mov rcx, r12
429a51: add r12, 1
429a55: movzx edx, byte ptr [r12]
429a5a: shl eax, 8
429a5d: cmp ebp, eax
429a5f: jne 0x429a48
429a61: lea r12, [rcx - 2]
429a65: jmp 0x4299b4
429a6a: cmp ebp, eax
429a6c: jne 0x4299b1
429a72: jmp 0x429a61
429a74: mov rax, qword ptr [rsp + 0x118]
429a7c: xor rax, qword ptr fs:[0x28]
429a85: jne 0x429ab8
429a87: add rsp, 0x128
429a8e: mov rcx, r14
429a91: mov rdx, r13
429a94: mov rsi, r15
429a97: pop rbx
429a98: mov rdi, r12
429a9b: pop rbp
429a9c: pop r12
429a9e: pop r13
429aa0: pop r14
429aa2: pop r15
429aa4: jmp 0x4292e0
429aa9: mov esi, 1
429aae: mov edx, 1
429ab3: jmp 0x4298b6
429ab8: call 0x4547a0
429abd: nop dword ptr [rax]
429ac0: endbr64 
429ac4: test byte ptr [rip + 0x992b9], 0x10
429acb: lea rdx, [rip - 0x362]
429ad2: lea rax, [rip + 0x232f7]
429ad9: cmove rax, rdx
429add: ret 
429ade: nop 
429ae0: endbr64 
429ae4: movabs rax, 0x80000000002
429aee: mov edx, dword ptr [rip + 0x99234]
429af4: and rax, qword ptr [rip + 0x99285]
429afb: cmp rax, 2
429aff: je 0x429b30
429b01: lea rax, [rip + 0x8228]
429b08: test edx, 0x80000
429b0e: jne 0x429b25
429b10: and dh, 2
429b13: lea rax, [rip + 0x7a36]
429b1a: lea rdx, [rip + 0x21b3f]
429b21: cmovne rax, rdx
429b25: ret 
429b26: nop word ptr cs:[rax + rax]
429b30: test edx, 0x400000
429b36: je 0x429b01
429b38: lea rax, [rip + 0x7e11]
429b3f: test byte ptr [rip + 0x9923f], 1
429b46: je 0x429b01
429b48: ret 
429b49: nop dword ptr [rax]
429b50: endbr64 
429b54: mov edx, dword ptr [rip + 0x9922a]
429b5a: lea rax, [rip + 0x23c0f]
429b61: test dh, 0x30
429b64: jne 0x429bc3
429b66: movabs rax, 0x400000000004
429b70: and rax, qword ptr [rip + 0x99209]
429b77: cmp rax, 4
429b7b: je 0x429bc8
429b7d: test dh, 1
429b80: je 0x429ba0
429b82: test byte ptr [rip + 0x991ac], 2
429b89: lea rdx, [rip + 0x23f40]
429b90: lea rax, [rip + 0x23f89]
429b97: cmove rax, rdx
429b9b: ret 
429b9c: nop dword ptr [rax]
429ba0: test byte ptr [rip + 0x99182], 2
429ba7: je 0x429bf0
429ba9: test dl, 0x20
429bac: jne 0x429bf0
429bae: and edx, 8
429bb1: lea rax, [rip + 0xc1c8]
429bb8: lea rdx, [rip + 0x11861]
429bbf: cmovne rax, rdx
429bc3: ret 
429bc4: nop dword ptr [rax]
429bc8: lea rax, [rip + 0x143a1]
429bcf: and dh, 8
429bd2: jne 0x429bc3
429bd4: test byte ptr [rip + 0x9915a], 2
429bdb: lea rdx, [rip + 0x2432e]
429be2: lea rax, [rip + 0x24377]
429be9: cmove rax, rdx
429bed: ret 
429bee: nop 
429bf0: test byte ptr [rip + 0x9913e], 2
429bf7: lea rdx, [rip + 0x23b02]
429bfe: lea rax, [rip + 0x23bbb]
429c05: cmove rax, rdx
429c09: ret 
429c0a: nop word ptr [rax + rax]
429c10: endbr64 
429c14: mov edx, dword ptr [rip + 0x9916a]
429c1a: lea rax, [rip + 0x2489f]
429c21: test dh, 0x10
429c24: jne 0x429c84
429c26: movabs rax, 0x400000000004
429c30: and rax, qword ptr [rip + 0x99149]
429c37: cmp rax, 4
429c3b: je 0x429c88
429c3d: mov eax, dword ptr [rip + 0x990f1]
429c43: and eax, 0x200
429c48: test byte ptr [rip + 0x99131], 2
429c4f: je 0x429c70
429c51: test eax, eax
429c53: lea rdx, [rip + 0x24996]
429c5a: lea rax, [rip + 0x249df]
429c61: cmove rax, rdx
429c65: ret 
429c66: nop word ptr cs:[rax + rax]
429c70: test eax, eax
429c72: lea rdx, [rip + 0x24867]
429c79: lea rax, [rip + 0x247f0]
429c80: cmovne rax, rdx
429c84: ret 
429c85: nop dword ptr [rax]
429c88: lea rax, [rip + 0x237e1]
429c8f: and dh, 8
429c92: jne 0x429c84
429c94: test byte ptr [rip + 0x9909a], 2
429c9b: lea rdx, [rip + 0x24ace]
429ca2: lea rax, [rip + 0x24b27]
429ca9: cmove rax, rdx
429cad: ret 
429cae: nop 
429cb0: endbr64 
429cb4: mov edx, dword ptr [rip + 0x990ca]
429cba: lea rax, [rip + 0x23a7f]
429cc1: test dh, 0x30
429cc4: jne 0x429d23
429cc6: movabs rax, 0x400000000004
429cd0: and rax, qword ptr [rip + 0x990a9]
429cd7: cmp rax, 4
429cdb: je 0x429d28
429cdd: test dh, 1
429ce0: je 0x429d00
429ce2: test byte ptr [rip + 0x9904c], 2
429ce9: lea rdx, [rip + 0x23dd0]
429cf0: lea rax, [rip + 0x23e19]
429cf7: cmove rax, rdx
429cfb: ret 
429cfc: nop dword ptr [rax]
429d00: test byte ptr [rip + 0x99022], 2
429d07: je 0x429d50
429d09: test dl, 0x20
429d0c: jne 0x429d50
429d0e: and edx, 8
429d11: lea rax, [rip + 0x9668]
429d18: lea rdx, [rip + 0xebf1]
429d1f: cmovne rax, rdx
429d23: ret 
429d24: nop dword ptr [rax]
429d28: lea rax, [rip + 0x14221]
429d2f: and dh, 8
429d32: jne 0x429d23
429d34: test byte ptr [rip + 0x98ffa], 2
429d3b: lea rdx, [rip + 0x241be]
429d42: lea rax, [rip + 0x24207]
429d49: cmove rax, rdx
429d4d: ret 
429d4e: nop 
429d50: test byte ptr [rip + 0x98fde], 2
429d57: lea rdx, [rip + 0x23992]
429d5e: lea rax, [rip + 0x23a4b]
429d65: cmove rax, rdx
429d69: ret 
429d6a: nop word ptr [rax + rax]
429d70: endbr64 
429d74: movabs rdx, 0x90000000002
429d7e: and rdx, qword ptr [rip + 0x98ffb]
429d85: movabs rcx, 0x10000000002
429d8f: lea rax, [rip + 0x211fa]
429d96: cmp rdx, rcx
429d99: je 0x429dc4
429d9b: lea rax, [rip + 0x20b2e]
429da2: test byte ptr [rip + 0x98fdb], 0x10
429da9: jne 0x429dc4
429dab: test byte ptr [rip + 0x98f77], 2
429db2: lea rax, [rip + 0x1d437]
429db9: lea rdx, [rip + 0x1ecd0]
429dc0: cmovne rax, rdx
429dc4: ret 
429dc5: nop word ptr cs:[rax + rax]
429dcf: nop 
429dd0: endbr64 
429dd4: lea rax, [rip + 0x1a849]
429ddb: test byte ptr [rip + 0x98f9e], 1
429de2: jne 0x429e17
429de4: mov edx, dword ptr [rip + 0x98f3e]
429dea: test edx, 0x100000
429df0: je 0x429e02
429df2: lea rax, [rip + 0x18c7b]
429df9: test byte ptr [rip + 0x98f84], 0x80
429e00: je 0x429e17
429e02: and dh, 2
429e05: lea rax, [rip + 0x148c4]
429e0c: lea rdx, [rip + 0x16b0d]
429e13: cmovne rax, rdx
429e17: ret 
429e18: nop dword ptr [rax + rax]
429e20: endbr64 
429e24: mov edx, dword ptr [rip + 0x98f5a]
429e2a: lea rax, [rip + 0x2393f]
429e31: test dh, 0x30
429e34: jne 0x429e93
429e36: movabs rax, 0x400000000004
429e40: and rax, qword ptr [rip + 0x98f39]
429e47: cmp rax, 4
429e4b: je 0x429e98
429e4d: test dh, 1
429e50: je 0x429e70
429e52: test byte ptr [rip + 0x98edc], 2
429e59: lea rdx, [rip + 0x23c70]
429e60: lea rax, [rip + 0x23cb9]
429e67: cmove rax, rdx
429e6b: ret 
429e6c: nop dword ptr [rax]
429e70: test byte ptr [rip + 0x98eb2], 2
429e77: je 0x429ec0
429e79: test dl, 0x20
429e7c: jne 0x429ec0
429e7e: and edx, 8
429e81: lea rax, [rip + 0x9518]
429e88: lea rdx, [rip + 0xeaa1]
429e8f: cmovne rax, rdx
429e93: ret 
429e94: nop dword ptr [rax]
429e98: lea rax, [rip + 0x140d1]
429e9f: and dh, 8
429ea2: jne 0x429e93
429ea4: test byte ptr [rip + 0x98e8a], 2
429eab: lea rdx, [rip + 0x2405e]
429eb2: lea rax, [rip + 0x240a7]
429eb9: cmove rax, rdx
429ebd: ret 
429ebe: nop 
429ec0: test byte ptr [rip + 0x98e6e], 2
429ec7: lea rdx, [rip + 0x23832]
429ece: lea rax, [rip + 0x238eb]
429ed5: cmove rax, rdx
429ed9: ret 
429eda: nop word ptr [rax + rax]
429ee0: endbr64 
429ee4: movabs rdx, 0x10000000002
429eee: movabs rax, 0x90000000002
429ef8: and rax, qword ptr [rip + 0x98e81]
429eff: cmp rax, rdx
429f02: lea rdx, [rip + 0x74f7]
429f09: lea rax, [rip + 0x72e0]
429f10: cmove rax, rdx
429f14: ret 
429f15: nop word ptr cs:[rax + rax]
429f1f: nop 
429f20: endbr64 
429f24: movabs rdx, 0x10000000002
429f2e: movabs rax, 0x90000000002
429f38: and rax, qword ptr [rip + 0x98e41]
429f3f: cmp rax, rdx
429f42: lea rdx, [rip + 0x1c3b7]
429f49: lea rax, [rip + 0x1bf70]
429f50: cmove rax, rdx
429f54: ret 
429f55: nop word ptr cs:[rax + rax]
429f5f: nop 
429f60: endbr64 
429f64: mov ecx, esi
429f66: mov eax, edi
429f68: and rcx, 0x3f
429f6c: and rax, 0x3f
429f70: cmp ecx, 0x30
429f73: ja 0x429fc0
429f75: cmp eax, 0x30
429f78: ja 0x429fc0
429f7a: movlpd xmm1, qword ptr [rdi]
429f7e: movlpd xmm2, qword ptr [rsi]
429f82: movhpd xmm1, qword ptr [rdi + 8]
429f87: movhpd xmm2, qword ptr [rsi + 8]
429f8c: pxor xmm0, xmm0
429f90: pcmpeqb xmm0, xmm1
429f94: pcmpeqb xmm1, xmm2
429f98: psubb xmm1, xmm0
429f9c: pmovmskb edx, xmm1
429fa0: sub edx, 0xffff
429fa6: jne 0x42b380
429fac: add rsi, 0x10
429fb0: add rdi, 0x10
429fb4: nop word ptr cs:[rax + rax]
429fbf: nop 
429fc0: and rsi, 0xfffffffffffffff0
429fc4: and rdi, 0xfffffffffffffff0
429fc8: mov edx, 0xffff
429fcd: xor r8d, r8d
429fd0: and ecx, 0xf
429fd3: and eax, 0xf
429fd6: cmp ecx, eax
429fd8: je 0x42a000
429fda: ja 0x429fe3
429fdc: mov r8d, edx
429fdf: xchg ecx, eax
429fe0: xchg rdi, rsi
429fe3: lea r9, [rax + 0xf]
429fe7: sub r9, rcx
429fea: lea r10, [rip + 0x6d2cf]
429ff1: movsxd r9, dword ptr [r10 + r9*4]
429ff5: lea r10, [r10 + r9]
429ff9: notrack jmp r10
429ffd: nop dword ptr [rax]
42a000: movdqa xmm1, xmmword ptr [rsi]
42a004: pxor xmm0, xmm0
42a008: pcmpeqb xmm0, xmm1
42a00c: pcmpeqb xmm1, xmmword ptr [rdi]
42a010: psubb xmm1, xmm0
42a014: pmovmskb r9d, xmm1
42a019: shr edx, cl
42a01b: shr r9d, cl
42a01e: sub edx, r9d
42a021: jne 0x42b365
42a027: mov rcx, 0x10
42a02e: mov r9, 0x10
42a035: pxor xmm0, xmm0
42a039: nop dword ptr [rax]
42a040: movdqa xmm1, xmmword ptr [rsi + rcx]
42a045: movdqa xmm2, xmmword ptr [rdi + rcx]
42a04a: pcmpeqb xmm0, xmm1
42a04e: pcmpeqb xmm1, xmm2
42a052: psubb xmm1, xmm0
42a056: pmovmskb edx, xmm1
42a05a: sub edx, 0xffff
42a060: jne 0x42b360
42a066: add rcx, 0x10
42a06a: movdqa xmm1, xmmword ptr [rsi + rcx]
42a06f: movdqa xmm2, xmmword ptr [rdi + rcx]
42a074: pcmpeqb xmm0, xmm1
42a078: pcmpeqb xmm1, xmm2
42a07c: psubb xmm1, xmm0
42a080: pmovmskb edx, xmm1
42a084: sub edx, 0xffff
42a08a: jne 0x42b360
42a090: add rcx, 0x10
42a094: jmp 0x42a040
42a096: nop word ptr cs:[rax + rax]
42a0a0: pxor xmm0, xmm0
42a0a4: movdqa xmm2, xmmword ptr [rdi]
42a0a8: movdqa xmm1, xmmword ptr [rsi]
42a0ac: pcmpeqb xmm0, xmm1
42a0b0: pslldq xmm2, 0xf
42a0b5: pcmpeqb xmm2, xmm1
42a0b9: psubb xmm2, xmm0
42a0bd: pmovmskb r9d, xmm2
42a0c2: shr edx, cl
42a0c4: shr r9d, cl
42a0c7: sub edx, r9d
42a0ca: jne 0x42b365
42a0d0: movdqa xmm3, xmmword ptr [rdi]
42a0d4: pxor xmm0, xmm0
42a0d8: mov rcx, 0x10
42a0df: mov r9d, 1
42a0e5: lea r10, [rdi + 1]
42a0e9: and r10, 0xfff
42a0f0: sub r10, 0x1000
42a0f7: nop word ptr [rax + rax]
42a100: add r10, 0x10
42a104: jg 0x42a1a0
42a10a: movdqa xmm1, xmmword ptr [rsi + rcx]
42a10f: movdqa xmm2, xmmword ptr [rdi + rcx]
42a114: movdqa xmm4, xmm2
42a118: psrldq xmm3, 1
42a11d: pslldq xmm2, 0xf
42a122: por xmm2, xmm3
42a126: pcmpeqb xmm0, xmm1
42a12a: pcmpeqb xmm1, xmm2
42a12e: psubb xmm1, xmm0
42a132: pmovmskb edx, xmm1
42a136: sub edx, 0xffff
42a13c: jne 0x42b360
42a142: add rcx, 0x10
42a146: movdqa xmm3, xmm4
42a14a: add r10, 0x10
42a14e: jg 0x42a1a0
42a150: movdqa xmm1, xmmword ptr [rsi + rcx]
42a155: movdqa xmm2, xmmword ptr [rdi + rcx]
42a15a: movdqa xmm4, xmm2
42a15e: psrldq xmm3, 1
42a163: pslldq xmm2, 0xf
42a168: por xmm2, xmm3
42a16c: pcmpeqb xmm0, xmm1
42a170: pcmpeqb xmm1, xmm2
42a174: psubb xmm1, xmm0
42a178: pmovmskb edx, xmm1
42a17c: sub edx, 0xffff
42a182: jne 0x42b360
42a188: add rcx, 0x10
42a18c: movdqa xmm3, xmm4
42a190: jmp 0x42a100
42a195: nop word ptr cs:[rax + rax]
42a1a0: pcmpeqb xmm0, xmm3
42a1a4: pmovmskb edx, xmm0
42a1a8: test edx, 0xfffe
42a1ae: jne 0x42a1c0
42a1b0: pxor xmm0, xmm0
42a1b4: sub r10, 0x1000
42a1bb: jmp 0x42a10a
42a1c0: movdqa xmm1, xmmword ptr [rsi + rcx]
42a1c5: psrldq xmm0, 1
42a1ca: psrldq xmm3, 1
42a1cf: jmp 0x42b350
42a1d4: nop word ptr cs:[rax + rax]
42a1df: nop 
42a1e0: pxor xmm0, xmm0
42a1e4: movdqa xmm2, xmmword ptr [rdi]
42a1e8: movdqa xmm1, xmmword ptr [rsi]
42a1ec: pcmpeqb xmm0, xmm1
42a1f0: pslldq xmm2, 0xe
42a1f5: pcmpeqb xmm2, xmm1
42a1f9: psubb xmm2, xmm0
42a1fd: pmovmskb r9d, xmm2
42a202: shr edx, cl
42a204: shr r9d, cl
42a207: sub edx, r9d
42a20a: jne 0x42b365
42a210: movdqa xmm3, xmmword ptr [rdi]
42a214: pxor xmm0, xmm0
42a218: mov rcx, 0x10
42a21f: mov r9d, 2
42a225: lea r10, [rdi + 2]
42a229: and r10, 0xfff
42a230: sub r10, 0x1000
42a237: nop word ptr [rax + rax]
42a240: add r10, 0x10
42a244: jg 0x42a2e0
42a24a: movdqa xmm1, xmmword ptr [rsi + rcx]
42a24f: movdqa xmm2, xmmword ptr [rdi + rcx]
42a254: movdqa xmm4, xmm2
42a258: psrldq xmm3, 2
42a25d: pslldq xmm2, 0xe
42a262: por xmm2, xmm3
42a266: pcmpeqb xmm0, xmm1
42a26a: pcmpeqb xmm1, xmm2
42a26e: psubb xmm1, xmm0
42a272: pmovmskb edx, xmm1
42a276: sub edx, 0xffff
42a27c: jne 0x42b360
42a282: add rcx, 0x10
42a286: movdqa xmm3, xmm4
42a28a: add r10, 0x10
42a28e: jg 0x42a2e0
42a290: movdqa xmm1, xmmword ptr [rsi + rcx]
42a295: movdqa xmm2, xmmword ptr [rdi + rcx]
42a29a: movdqa xmm4, xmm2
42a29e: psrldq xmm3, 2
42a2a3: pslldq xmm2, 0xe
42a2a8: por xmm2, xmm3
42a2ac: pcmpeqb xmm0, xmm1
42a2b0: pcmpeqb xmm1, xmm2
42a2b4: psubb xmm1, xmm0
42a2b8: pmovmskb edx, xmm1
42a2bc: sub edx, 0xffff
42a2c2: jne 0x42b360
42a2c8: add rcx, 0x10
42a2cc: movdqa xmm3, xmm4
42a2d0: jmp 0x42a240
42a2d5: nop word ptr cs:[rax + rax]
42a2e0: pcmpeqb xmm0, xmm3
42a2e4: pmovmskb edx, xmm0
42a2e8: test edx, 0xfffc
42a2ee: jne 0x42a300
42a2f0: pxor xmm0, xmm0
42a2f4: sub r10, 0x1000
42a2fb: jmp 0x42a24a
42a300: movdqa xmm1, xmmword ptr [rsi + rcx]
42a305: psrldq xmm0, 2
42a30a: psrldq xmm3, 2
42a30f: jmp 0x42b350
42a314: nop word ptr cs:[rax + rax]
42a31f: nop 
42a320: pxor xmm0, xmm0
42a324: movdqa xmm2, xmmword ptr [rdi]
42a328: movdqa xmm1, xmmword ptr [rsi]
42a32c: pcmpeqb xmm0, xmm1
42a330: pslldq xmm2, 0xd
42a335: pcmpeqb xmm2, xmm1
42a339: psubb xmm2, xmm0
42a33d: pmovmskb r9d, xmm2
42a342: shr edx, cl
42a344: shr r9d, cl
42a347: sub edx, r9d
42a34a: jne 0x42b365
42a350: movdqa xmm3, xmmword ptr [rdi]
42a354: pxor xmm0, xmm0
42a358: mov rcx, 0x10
42a35f: mov r9d, 3
42a365: lea r10, [rdi + 3]
42a369: and r10, 0xfff
42a370: sub r10, 0x1000
42a377: nop word ptr [rax + rax]
42a380: add r10, 0x10
42a384: jg 0x42a420
42a38a: movdqa xmm1, xmmword ptr [rsi + rcx]
42a38f: movdqa xmm2, xmmword ptr [rdi + rcx]
42a394: movdqa xmm4, xmm2
42a398: psrldq xmm3, 3
42a39d: pslldq xmm2, 0xd
42a3a2: por xmm2, xmm3
42a3a6: pcmpeqb xmm0, xmm1
42a3aa: pcmpeqb xmm1, xmm2
42a3ae: psubb xmm1, xmm0
42a3b2: pmovmskb edx, xmm1
42a3b6: sub edx, 0xffff
42a3bc: jne 0x42b360
42a3c2: add rcx, 0x10
42a3c6: movdqa xmm3, xmm4
42a3ca: add r10, 0x10
42a3ce: jg 0x42a420
42a3d0: movdqa xmm1, xmmword ptr [rsi + rcx]
42a3d5: movdqa xmm2, xmmword ptr [rdi + rcx]
42a3da: movdqa xmm4, xmm2
42a3de: psrldq xmm3, 3
42a3e3: pslldq xmm2, 0xd
42a3e8: por xmm2, xmm3
42a3ec: pcmpeqb xmm0, xmm1
42a3f0: pcmpeqb xmm1, xmm2
42a3f4: psubb xmm1, xmm0
42a3f8: pmovmskb edx, xmm1
42a3fc: sub edx, 0xffff
42a402: jne 0x42b360
42a408: add rcx, 0x10
42a40c: movdqa xmm3, xmm4
42a410: jmp 0x42a380
42a415: nop word ptr cs:[rax + rax]
42a420: pcmpeqb xmm0, xmm3
42a424: pmovmskb edx, xmm0
42a428: test edx, 0xfff8
42a42e: jne 0x42a440
42a430: pxor xmm0, xmm0
42a434: sub r10, 0x1000
42a43b: jmp 0x42a38a
42a440: movdqa xmm1, xmmword ptr [rsi + rcx]
42a445: psrldq xmm0, 3
42a44a: psrldq xmm3, 3
42a44f: jmp 0x42b350
42a454: nop word ptr cs:[rax + rax]
42a45f: nop 
42a460: pxor xmm0, xmm0
42a464: movdqa xmm2, xmmword ptr [rdi]
42a468: movdqa xmm1, xmmword ptr [rsi]
42a46c: pcmpeqb xmm0, xmm1
42a470: pslldq xmm2, 0xc
42a475: pcmpeqb xmm2, xmm1
42a479: psubb xmm2, xmm0
42a47d: pmovmskb r9d, xmm2
42a482: shr edx, cl
42a484: shr r9d, cl
42a487: sub edx, r9d
42a48a: jne 0x42b365
42a490: movdqa xmm3, xmmword ptr [rdi]
42a494: pxor xmm0, xmm0
42a498: mov rcx, 0x10
42a49f: mov r9d, 4
42a4a5: lea r10, [rdi + 4]
42a4a9: and r10, 0xfff
42a4b0: sub r10, 0x1000
42a4b7: nop word ptr [rax + rax]
42a4c0: add r10, 0x10
42a4c4: jg 0x42a560
42a4ca: movdqa xmm1, xmmword ptr [rsi + rcx]
42a4cf: movdqa xmm2, xmmword ptr [rdi + rcx]
42a4d4: movdqa xmm4, xmm2
42a4d8: psrldq xmm3, 4
42a4dd: pslldq xmm2, 0xc
42a4e2: por xmm2, xmm3
42a4e6: pcmpeqb xmm0, xmm1
42a4ea: pcmpeqb xmm1, xmm2
42a4ee: psubb xmm1, xmm0
42a4f2: pmovmskb edx, xmm1
42a4f6: sub edx, 0xffff
42a4fc: jne 0x42b360
42a502: add rcx, 0x10
42a506: movdqa xmm3, xmm4
42a50a: add r10, 0x10
42a50e: jg 0x42a560
42a510: movdqa xmm1, xmmword ptr [rsi + rcx]
42a515: movdqa xmm2, xmmword ptr [rdi + rcx]
42a51a: movdqa xmm4, xmm2
42a51e: psrldq xmm3, 4
42a523: pslldq xmm2, 0xc
42a528: por xmm2, xmm3
42a52c: pcmpeqb xmm0, xmm1
42a530: pcmpeqb xmm1, xmm2
42a534: psubb xmm1, xmm0
42a538: pmovmskb edx, xmm1
42a53c: sub edx, 0xffff
42a542: jne 0x42b360
42a548: add rcx, 0x10
42a54c: movdqa xmm3, xmm4
42a550: jmp 0x42a4c0
42a555: nop word ptr cs:[rax + rax]
42a560: pcmpeqb xmm0, xmm3
42a564: pmovmskb edx, xmm0
42a568: test edx, 0xfff0
42a56e: jne 0x42a580
42a570: pxor xmm0, xmm0
42a574: sub r10, 0x1000
42a57b: jmp 0x42a4ca
42a580: movdqa xmm1, xmmword ptr [rsi + rcx]
42a585: psrldq xmm0, 4
42a58a: psrldq xmm3, 4
42a58f: jmp 0x42b350
42a594: nop word ptr cs:[rax + rax]
42a59f: nop 
42a5a0: pxor xmm0, xmm0
42a5a4: movdqa xmm2, xmmword ptr [rdi]
42a5a8: movdqa xmm1, xmmword ptr [rsi]
42a5ac: pcmpeqb xmm0, xmm1
42a5b0: pslldq xmm2, 0xb
42a5b5: pcmpeqb xmm2, xmm1
42a5b9: psubb xmm2, xmm0
42a5bd: pmovmskb r9d, xmm2
42a5c2: shr edx, cl
42a5c4: shr r9d, cl
42a5c7: sub edx, r9d
42a5ca: jne 0x42b365
42a5d0: movdqa xmm3, xmmword ptr [rdi]
42a5d4: pxor xmm0, xmm0
42a5d8: mov rcx, 0x10
42a5df: mov r9d, 5
42a5e5: lea r10, [rdi + 5]
42a5e9: and r10, 0xfff
42a5f0: sub r10, 0x1000
42a5f7: nop word ptr [rax + rax]
42a600: add r10, 0x10
42a604: jg 0x42a6a0
42a60a: movdqa xmm1, xmmword ptr [rsi + rcx]
42a60f: movdqa xmm2, xmmword ptr [rdi + rcx]
42a614: movdqa xmm4, xmm2
42a618: psrldq xmm3, 5
42a61d: pslldq xmm2, 0xb
42a622: por xmm2, xmm3
42a626: pcmpeqb xmm0, xmm1
42a62a: pcmpeqb xmm1, xmm2
42a62e: psubb xmm1, xmm0
42a632: pmovmskb edx, xmm1
42a636: sub edx, 0xffff
42a63c: jne 0x42b360
42a642: add rcx, 0x10
42a646: movdqa xmm3, xmm4
42a64a: add r10, 0x10
42a64e: jg 0x42a6a0
42a650: movdqa xmm1, xmmword ptr [rsi + rcx]
42a655: movdqa xmm2, xmmword ptr [rdi + rcx]
42a65a: movdqa xmm4, xmm2
42a65e: psrldq xmm3, 5
42a663: pslldq xmm2, 0xb
42a668: por xmm2, xmm3
42a66c: pcmpeqb xmm0, xmm1
42a670: pcmpeqb xmm1, xmm2
42a674: psubb xmm1, xmm0
42a678: pmovmskb edx, xmm1
42a67c: sub edx, 0xffff
42a682: jne 0x42b360
42a688: add rcx, 0x10
42a68c: movdqa xmm3, xmm4
42a690: jmp 0x42a600
42a695: nop word ptr cs:[rax + rax]
42a6a0: pcmpeqb xmm0, xmm3
42a6a4: pmovmskb edx, xmm0
42a6a8: test edx, 0xffe0
42a6ae: jne 0x42a6c0
42a6b0: pxor xmm0, xmm0
42a6b4: sub r10, 0x1000
42a6bb: jmp 0x42a60a
42a6c0: movdqa xmm1, xmmword ptr [rsi + rcx]
42a6c5: psrldq xmm0, 5
42a6ca: psrldq xmm3, 5
42a6cf: jmp 0x42b350
42a6d4: nop word ptr cs:[rax + rax]
42a6df: nop 
42a6e0: pxor xmm0, xmm0
42a6e4: movdqa xmm2, xmmword ptr [rdi]
42a6e8: movdqa xmm1, xmmword ptr [rsi]
42a6ec: pcmpeqb xmm0, xmm1
42a6f0: pslldq xmm2, 0xa
42a6f5: pcmpeqb xmm2, xmm1
42a6f9: psubb xmm2, xmm0
42a6fd: pmovmskb r9d, xmm2
42a702: shr edx, cl
42a704: shr r9d, cl
42a707: sub edx, r9d
42a70a: jne 0x42b365
42a710: movdqa xmm3, xmmword ptr [rdi]
42a714: pxor xmm0, xmm0
42a718: mov rcx, 0x10
42a71f: mov r9d, 6
42a725: lea r10, [rdi + 6]
42a729: and r10, 0xfff
42a730: sub r10, 0x1000
42a737: nop word ptr [rax + rax]
42a740: add r10, 0x10
42a744: jg 0x42a7e0
42a74a: movdqa xmm1, xmmword ptr [rsi + rcx]
42a74f: movdqa xmm2, xmmword ptr [rdi + rcx]
42a754: movdqa xmm4, xmm2
42a758: psrldq xmm3, 6
42a75d: pslldq xmm2, 0xa
42a762: por xmm2, xmm3
42a766: pcmpeqb xmm0, xmm1
42a76a: pcmpeqb xmm1, xmm2
42a76e: psubb xmm1, xmm0
42a772: pmovmskb edx, xmm1
42a776: sub edx, 0xffff
42a77c: jne 0x42b360
42a782: add rcx, 0x10
42a786: movdqa xmm3, xmm4
42a78a: add r10, 0x10
42a78e: jg 0x42a7e0
42a790: movdqa xmm1, xmmword ptr [rsi + rcx]
42a795: movdqa xmm2, xmmword ptr [rdi + rcx]
42a79a: movdqa xmm4, xmm2
42a79e: psrldq xmm3, 6
42a7a3: pslldq xmm2, 0xa
42a7a8: por xmm2, xmm3
42a7ac: pcmpeqb xmm0, xmm1
42a7b0: pcmpeqb xmm1, xmm2
42a7b4: psubb xmm1, xmm0
42a7b8: pmovmskb edx, xmm1
42a7bc: sub edx, 0xffff
42a7c2: jne 0x42b360
42a7c8: add rcx, 0x10
42a7cc: movdqa xmm3, xmm4
42a7d0: jmp 0x42a740
42a7d5: nop word ptr cs:[rax + rax]
42a7e0: pcmpeqb xmm0, xmm3
42a7e4: pmovmskb edx, xmm0
42a7e8: test edx, 0xffc0
42a7ee: jne 0x42a800
42a7f0: pxor xmm0, xmm0
42a7f4: sub r10, 0x1000
42a7fb: jmp 0x42a74a
42a800: movdqa xmm1, xmmword ptr [rsi + rcx]
42a805: psrldq xmm0, 6
42a80a: psrldq xmm3, 6
42a80f: jmp 0x42b350
42a814: nop word ptr cs:[rax + rax]
42a81f: nop 
42a820: pxor xmm0, xmm0
42a824: movdqa xmm2, xmmword ptr [rdi]
42a828: movdqa xmm1, xmmword ptr [rsi]
42a82c: pcmpeqb xmm0, xmm1
42a830: pslldq xmm2, 9
42a835: pcmpeqb xmm2, xmm1
42a839: psubb xmm2, xmm0
42a83d: pmovmskb r9d, xmm2
42a842: shr edx, cl
42a844: shr r9d, cl
42a847: sub edx, r9d
42a84a: jne 0x42b365
42a850: movdqa xmm3, xmmword ptr [rdi]
42a854: pxor xmm0, xmm0
42a858: mov rcx, 0x10
42a85f: mov r9d, 7
42a865: lea r10, [rdi + 7]
42a869: and r10, 0xfff
42a870: sub r10, 0x1000
42a877: nop word ptr [rax + rax]
42a880: add r10, 0x10
42a884: jg 0x42a920
42a88a: movdqa xmm1, xmmword ptr [rsi + rcx]
42a88f: movdqa xmm2, xmmword ptr [rdi + rcx]
42a894: movdqa xmm4, xmm2
42a898: psrldq xmm3, 7
42a89d: pslldq xmm2, 9
42a8a2: por xmm2, xmm3
42a8a6: pcmpeqb xmm0, xmm1
42a8aa: pcmpeqb xmm1, xmm2
42a8ae: psubb xmm1, xmm0
42a8b2: pmovmskb edx, xmm1
42a8b6: sub edx, 0xffff
42a8bc: jne 0x42b360
42a8c2: add rcx, 0x10
42a8c6: movdqa xmm3, xmm4
42a8ca: add r10, 0x10
42a8ce: jg 0x42a920
42a8d0: movdqa xmm1, xmmword ptr [rsi + rcx]
42a8d5: movdqa xmm2, xmmword ptr [rdi + rcx]
42a8da: movdqa xmm4, xmm2
42a8de: psrldq xmm3, 7
42a8e3: pslldq xmm2, 9
42a8e8: por xmm2, xmm3
42a8ec: pcmpeqb xmm0, xmm1
42a8f0: pcmpeqb xmm1, xmm2
42a8f4: psubb xmm1, xmm0
42a8f8: pmovmskb edx, xmm1
42a8fc: sub edx, 0xffff
42a902: jne 0x42b360
42a908: add rcx, 0x10
42a90c: movdqa xmm3, xmm4
42a910: jmp 0x42a880
42a915: nop word ptr cs:[rax + rax]
42a920: pcmpeqb xmm0, xmm3
42a924: pmovmskb edx, xmm0
42a928: test edx, 0xff80
42a92e: jne 0x42a940
42a930: pxor xmm0, xmm0
42a934: sub r10, 0x1000
42a93b: jmp 0x42a88a
42a940: movdqa xmm1, xmmword ptr [rsi + rcx]
42a945: psrldq xmm0, 7
42a94a: psrldq xmm3, 7
42a94f: jmp 0x42b350
42a954: nop word ptr cs:[rax + rax]
42a95f: nop 
42a960: pxor xmm0, xmm0
42a964: movdqa xmm2, xmmword ptr [rdi]
42a968: movdqa xmm1, xmmword ptr [rsi]
42a96c: pcmpeqb xmm0, xmm1
42a970: pslldq xmm2, 8
42a975: pcmpeqb xmm2, xmm1
42a979: psubb xmm2, xmm0
42a97d: pmovmskb r9d, xmm2
42a982: shr edx, cl
42a984: shr r9d, cl
42a987: sub edx, r9d
42a98a: jne 0x42b365
42a990: movdqa xmm3, xmmword ptr [rdi]
42a994: pxor xmm0, xmm0
42a998: mov rcx, 0x10
42a99f: mov r9d, 8
42a9a5: lea r10, [rdi + 8]
42a9a9: and r10, 0xfff
42a9b0: sub r10, 0x1000
42a9b7: nop word ptr [rax + rax]
42a9c0: add r10, 0x10
42a9c4: jg 0x42aa60
42a9ca: movdqa xmm1, xmmword ptr [rsi + rcx]
42a9cf: movdqa xmm2, xmmword ptr [rdi + rcx]
42a9d4: movdqa xmm4, xmm2
42a9d8: psrldq xmm3, 8
42a9dd: pslldq xmm2, 8
42a9e2: por xmm2, xmm3
42a9e6: pcmpeqb xmm0, xmm1
42a9ea: pcmpeqb xmm1, xmm2
42a9ee: psubb xmm1, xmm0
42a9f2: pmovmskb edx, xmm1
42a9f6: sub edx, 0xffff
42a9fc: jne 0x42b360
42aa02: add rcx, 0x10
42aa06: movdqa xmm3, xmm4
42aa0a: add r10, 0x10
42aa0e: jg 0x42aa60
42aa10: movdqa xmm1, xmmword ptr [rsi + rcx]
42aa15: movdqa xmm2, xmmword ptr [rdi + rcx]
42aa1a: movdqa xmm4, xmm2
42aa1e: psrldq xmm3, 8
42aa23: pslldq xmm2, 8
42aa28: por xmm2, xmm3
42aa2c: pcmpeqb xmm0, xmm1
42aa30: pcmpeqb xmm1, xmm2
42aa34: psubb xmm1, xmm0
42aa38: pmovmskb edx, xmm1
42aa3c: sub edx, 0xffff
42aa42: jne 0x42b360
42aa48: add rcx, 0x10
42aa4c: movdqa xmm3, xmm4
42aa50: jmp 0x42a9c0
42aa55: nop word ptr cs:[rax + rax]
42aa60: pcmpeqb xmm0, xmm3
42aa64: pmovmskb edx, xmm0
42aa68: test edx, 0xff00
42aa6e: jne 0x42aa80
42aa70: pxor xmm0, xmm0
42aa74: sub r10, 0x1000
42aa7b: jmp 0x42a9ca
42aa80: movdqa xmm1, xmmword ptr [rsi + rcx]
42aa85: psrldq xmm0, 8
42aa8a: psrldq xmm3, 8
42aa8f: jmp 0x42b350
42aa94: nop word ptr cs:[rax + rax]
42aa9f: nop 
42aaa0: pxor xmm0, xmm0
42aaa4: movdqa xmm2, xmmword ptr [rdi]
42aaa8: movdqa xmm1, xmmword ptr [rsi]
42aaac: pcmpeqb xmm0, xmm1
42aab0: pslldq xmm2, 7
42aab5: pcmpeqb xmm2, xmm1
42aab9: psubb xmm2, xmm0
42aabd: pmovmskb r9d, xmm2
42aac2: shr edx, cl
42aac4: shr r9d, cl
42aac7: sub edx, r9d
42aaca: jne 0x42b365
42aad0: movdqa xmm3, xmmword ptr [rdi]
42aad4: pxor xmm0, xmm0
42aad8: mov rcx, 0x10
42aadf: mov r9d, 9
42aae5: lea r10, [rdi + 9]
42aae9: and r10, 0xfff
42aaf0: sub r10, 0x1000
42aaf7: nop word ptr [rax + rax]
42ab00: add r10, 0x10
42ab04: jg 0x42aba0
42ab0a: movdqa xmm1, xmmword ptr [rsi + rcx]
42ab0f: movdqa xmm2, xmmword ptr [rdi + rcx]
42ab14: movdqa xmm4, xmm2
42ab18: psrldq xmm3, 9
42ab1d: pslldq xmm2, 7
42ab22: por xmm2, xmm3
42ab26: pcmpeqb xmm0, xmm1
42ab2a: pcmpeqb xmm1, xmm2
42ab2e: psubb xmm1, xmm0
42ab32: pmovmskb edx, xmm1
42ab36: sub edx, 0xffff
42ab3c: jne 0x42b360
42ab42: add rcx, 0x10
42ab46: movdqa xmm3, xmm4
42ab4a: add r10, 0x10
42ab4e: jg 0x42aba0
42ab50: movdqa xmm1, xmmword ptr [rsi + rcx]
42ab55: movdqa xmm2, xmmword ptr [rdi + rcx]
42ab5a: movdqa xmm4, xmm2
42ab5e: psrldq xmm3, 9
42ab63: pslldq xmm2, 7
42ab68: por xmm2, xmm3
42ab6c: pcmpeqb xmm0, xmm1
42ab70: pcmpeqb xmm1, xmm2
42ab74: psubb xmm1, xmm0
42ab78: pmovmskb edx, xmm1
42ab7c: sub edx, 0xffff
42ab82: jne 0x42b360
42ab88: add rcx, 0x10
42ab8c: movdqa xmm3, xmm4
42ab90: jmp 0x42ab00
42ab95: nop word ptr cs:[rax + rax]
42aba0: pcmpeqb xmm0, xmm3
42aba4: pmovmskb edx, xmm0
42aba8: test edx, 0xfe00
42abae: jne 0x42abc0
42abb0: pxor xmm0, xmm0
42abb4: sub r10, 0x1000
42abbb: jmp 0x42ab0a
42abc0: movdqa xmm1, xmmword ptr [rsi + rcx]
42abc5: psrldq xmm0, 9
42abca: psrldq xmm3, 9
42abcf: jmp 0x42b350
42abd4: nop word ptr cs:[rax + rax]
42abdf: nop 
42abe0: pxor xmm0, xmm0
42abe4: movdqa xmm2, xmmword ptr [rdi]
42abe8: movdqa xmm1, xmmword ptr [rsi]
42abec: pcmpeqb xmm0, xmm1
42abf0: pslldq xmm2, 6
42abf5: pcmpeqb xmm2, xmm1
42abf9: psubb xmm2, xmm0
42abfd: pmovmskb r9d, xmm2
42ac02: shr edx, cl
42ac04: shr r9d, cl
42ac07: sub edx, r9d
42ac0a: jne 0x42b365
42ac10: movdqa xmm3, xmmword ptr [rdi]
42ac14: pxor xmm0, xmm0
42ac18: mov rcx, 0x10
42ac1f: mov r9d, 0xa
42ac25: lea r10, [rdi + 0xa]
42ac29: and r10, 0xfff
42ac30: sub r10, 0x1000
42ac37: nop word ptr [rax + rax]
42ac40: add r10, 0x10
42ac44: jg 0x42ace0
42ac4a: movdqa xmm1, xmmword ptr [rsi + rcx]
42ac4f: movdqa xmm2, xmmword ptr [rdi + rcx]
42ac54: movdqa xmm4, xmm2
42ac58: psrldq xmm3, 0xa
42ac5d: pslldq xmm2, 6
42ac62: por xmm2, xmm3
42ac66: pcmpeqb xmm0, xmm1
42ac6a: pcmpeqb xmm1, xmm2
42ac6e: psubb xmm1, xmm0
42ac72: pmovmskb edx, xmm1
42ac76: sub edx, 0xffff
42ac7c: jne 0x42b360
42ac82: add rcx, 0x10
42ac86: movdqa xmm3, xmm4
42ac8a: add r10, 0x10
42ac8e: jg 0x42ace0
42ac90: movdqa xmm1, xmmword ptr [rsi + rcx]
42ac95: movdqa xmm2, xmmword ptr [rdi + rcx]
42ac9a: movdqa xmm4, xmm2
42ac9e: psrldq xmm3, 0xa
42aca3: pslldq xmm2, 6
42aca8: por xmm2, xmm3
42acac: pcmpeqb xmm0, xmm1
42acb0: pcmpeqb xmm1, xmm2
42acb4: psubb xmm1, xmm0
42acb8: pmovmskb edx, xmm1
42acbc: sub edx, 0xffff
42acc2: jne 0x42b360
42acc8: add rcx, 0x10
42accc: movdqa xmm3, xmm4
42acd0: jmp 0x42ac40
42acd5: nop word ptr cs:[rax + rax]
42ace0: pcmpeqb xmm0, xmm3
42ace4: pmovmskb edx, xmm0
42ace8: test edx, 0xfc00
42acee: jne 0x42ad00
42acf0: pxor xmm0, xmm0
42acf4: sub r10, 0x1000
42acfb: jmp 0x42ac4a
42ad00: movdqa xmm1, xmmword ptr [rsi + rcx]
42ad05: psrldq xmm0, 0xa
42ad0a: psrldq xmm3, 0xa
42ad0f: jmp 0x42b350
42ad14: nop word ptr cs:[rax + rax]
42ad1f: nop 
42ad20: pxor xmm0, xmm0
42ad24: movdqa xmm2, xmmword ptr [rdi]
42ad28: movdqa xmm1, xmmword ptr [rsi]
42ad2c: pcmpeqb xmm0, xmm1
42ad30: pslldq xmm2, 5
42ad35: pcmpeqb xmm2, xmm1
42ad39: psubb xmm2, xmm0
42ad3d: pmovmskb r9d, xmm2
42ad42: shr edx, cl
42ad44: shr r9d, cl
42ad47: sub edx, r9d
42ad4a: jne 0x42b365
42ad50: movdqa xmm3, xmmword ptr [rdi]
42ad54: pxor xmm0, xmm0
42ad58: mov rcx, 0x10
42ad5f: mov r9d, 0xb
42ad65: lea r10, [rdi + 0xb]
42ad69: and r10, 0xfff
42ad70: sub r10, 0x1000
42ad77: nop word ptr [rax + rax]
42ad80: add r10, 0x10
42ad84: jg 0x42ae20
42ad8a: movdqa xmm1, xmmword ptr [rsi + rcx]
42ad8f: movdqa xmm2, xmmword ptr [rdi + rcx]
42ad94: movdqa xmm4, xmm2
42ad98: psrldq xmm3, 0xb
42ad9d: pslldq xmm2, 5
42ada2: por xmm2, xmm3
42ada6: pcmpeqb xmm0, xmm1
42adaa: pcmpeqb xmm1, xmm2
42adae: psubb xmm1, xmm0
42adb2: pmovmskb edx, xmm1
42adb6: sub edx, 0xffff
42adbc: jne 0x42b360
42adc2: add rcx, 0x10
42adc6: movdqa xmm3, xmm4
42adca: add r10, 0x10
42adce: jg 0x42ae20
42add0: movdqa xmm1, xmmword ptr [rsi + rcx]
42add5: movdqa xmm2, xmmword ptr [rdi + rcx]
42adda: movdqa xmm4, xmm2
42adde: psrldq xmm3, 0xb
42ade3: pslldq xmm2, 5
42ade8: por xmm2, xmm3
42adec: pcmpeqb xmm0, xmm1
42adf0: pcmpeqb xmm1, xmm2
42adf4: psubb xmm1, xmm0
42adf8: pmovmskb edx, xmm1
42adfc: sub edx, 0xffff
42ae02: jne 0x42b360
42ae08: add rcx, 0x10
42ae0c: movdqa xmm3, xmm4
42ae10: jmp 0x42ad80
42ae15: nop word ptr cs:[rax + rax]
42ae20: pcmpeqb xmm0, xmm3
42ae24: pmovmskb edx, xmm0
42ae28: test edx, 0xf800
42ae2e: jne 0x42ae40
42ae30: pxor xmm0, xmm0
42ae34: sub r10, 0x1000
42ae3b: jmp 0x42ad8a
42ae40: movdqa xmm1, xmmword ptr [rsi + rcx]
42ae45: psrldq xmm0, 0xb
42ae4a: psrldq xmm3, 0xb
42ae4f: jmp 0x42b350
42ae54: nop word ptr cs:[rax + rax]
42ae5f: nop 
42ae60: pxor xmm0, xmm0
42ae64: movdqa xmm2, xmmword ptr [rdi]
42ae68: movdqa xmm1, xmmword ptr [rsi]
42ae6c: pcmpeqb xmm0, xmm1
42ae70: pslldq xmm2, 4
42ae75: pcmpeqb xmm2, xmm1
42ae79: psubb xmm2, xmm0
42ae7d: pmovmskb r9d, xmm2
42ae82: shr edx, cl
42ae84: shr r9d, cl
42ae87: sub edx, r9d
42ae8a: jne 0x42b365
42ae90: movdqa xmm3, xmmword ptr [rdi]
42ae94: pxor xmm0, xmm0
42ae98: mov rcx, 0x10
42ae9f: mov r9d, 0xc
42aea5: lea r10, [rdi + 0xc]
42aea9: and r10, 0xfff
42aeb0: sub r10, 0x1000
42aeb7: nop word ptr [rax + rax]
42aec0: add r10, 0x10
42aec4: jg 0x42af60
42aeca: movdqa xmm1, xmmword ptr [rsi + rcx]
42aecf: movdqa xmm2, xmmword ptr [rdi + rcx]
42aed4: movdqa xmm4, xmm2
42aed8: psrldq xmm3, 0xc
42aedd: pslldq xmm2, 4
42aee2: por xmm2, xmm3
42aee6: pcmpeqb xmm0, xmm1
42aeea: pcmpeqb xmm1, xmm2
42aeee: psubb xmm1, xmm0
42aef2: pmovmskb edx, xmm1
42aef6: sub edx, 0xffff
42aefc: jne 0x42b360
42af02: add rcx, 0x10
42af06: movdqa xmm3, xmm4
42af0a: add r10, 0x10
42af0e: jg 0x42af60
42af10: movdqa xmm1, xmmword ptr [rsi + rcx]
42af15: movdqa xmm2, xmmword ptr [rdi + rcx]
42af1a: movdqa xmm4, xmm2
42af1e: psrldq xmm3, 0xc
42af23: pslldq xmm2, 4
42af28: por xmm2, xmm3
42af2c: pcmpeqb xmm0, xmm1
42af30: pcmpeqb xmm1, xmm2
42af34: psubb xmm1, xmm0
42af38: pmovmskb edx, xmm1
42af3c: sub edx, 0xffff
42af42: jne 0x42b360
42af48: add rcx, 0x10
42af4c: movdqa xmm3, xmm4
42af50: jmp 0x42aec0
42af55: nop word ptr cs:[rax + rax]
42af60: pcmpeqb xmm0, xmm3
42af64: pmovmskb edx, xmm0
42af68: test edx, 0xf000
42af6e: jne 0x42af80
42af70: pxor xmm0, xmm0
42af74: sub r10, 0x1000
42af7b: jmp 0x42aeca
42af80: movdqa xmm1, xmmword ptr [rsi + rcx]
42af85: psrldq xmm0, 0xc
42af8a: psrldq xmm3, 0xc
42af8f: jmp 0x42b350
42af94: nop word ptr cs:[rax + rax]
42af9f: nop 
42afa0: pxor xmm0, xmm0
42afa4: movdqa xmm2, xmmword ptr [rdi]
42afa8: movdqa xmm1, xmmword ptr [rsi]
42afac: pcmpeqb xmm0, xmm1
42afb0: pslldq xmm2, 3
42afb5: pcmpeqb xmm2, xmm1
42afb9: psubb xmm2, xmm0
42afbd: pmovmskb r9d, xmm2
42afc2: shr edx, cl
42afc4: shr r9d, cl
42afc7: sub edx, r9d
42afca: jne 0x42b365
42afd0: movdqa xmm3, xmmword ptr [rdi]
42afd4: pxor xmm0, xmm0
42afd8: mov rcx, 0x10
42afdf: mov r9d, 0xd
42afe5: lea r10, [rdi + 0xd]
42afe9: and r10, 0xfff
42aff0: sub r10, 0x1000
42aff7: nop word ptr [rax + rax]
42b000: add r10, 0x10
42b004: jg 0x42b0a0
42b00a: movdqa xmm1, xmmword ptr [rsi + rcx]
42b00f: movdqa xmm2, xmmword ptr [rdi + rcx]
42b014: movdqa xmm4, xmm2
42b018: psrldq xmm3, 0xd
42b01d: pslldq xmm2, 3
42b022: por xmm2, xmm3
42b026: pcmpeqb xmm0, xmm1
42b02a: pcmpeqb xmm1, xmm2
42b02e: psubb xmm1, xmm0
42b032: pmovmskb edx, xmm1
42b036: sub edx, 0xffff
42b03c: jne 0x42b360
42b042: add rcx, 0x10
42b046: movdqa xmm3, xmm4
42b04a: add r10, 0x10
42b04e: jg 0x42b0a0
42b050: movdqa xmm1, xmmword ptr [rsi + rcx]
42b055: movdqa xmm2, xmmword ptr [rdi + rcx]
42b05a: movdqa xmm4, xmm2
42b05e: psrldq xmm3, 0xd
42b063: pslldq xmm2, 3
42b068: por xmm2, xmm3
42b06c: pcmpeqb xmm0, xmm1
42b070: pcmpeqb xmm1, xmm2
42b074: psubb xmm1, xmm0
42b078: pmovmskb edx, xmm1
42b07c: sub edx, 0xffff
42b082: jne 0x42b360
42b088: add rcx, 0x10
42b08c: movdqa xmm3, xmm4
42b090: jmp 0x42b000
42b095: nop word ptr cs:[rax + rax]
42b0a0: pcmpeqb xmm0, xmm3
42b0a4: pmovmskb edx, xmm0
42b0a8: test edx, 0xe000
42b0ae: jne 0x42b0c0
42b0b0: pxor xmm0, xmm0
42b0b4: sub r10, 0x1000
42b0bb: jmp 0x42b00a
42b0c0: movdqa xmm1, xmmword ptr [rsi + rcx]
42b0c5: psrldq xmm0, 0xd
42b0ca: psrldq xmm3, 0xd
42b0cf: jmp 0x42b350
42b0d4: nop word ptr cs:[rax + rax]
42b0df: nop 
42b0e0: pxor xmm0, xmm0
42b0e4: movdqa xmm2, xmmword ptr [rdi]
42b0e8: movdqa xmm1, xmmword ptr [rsi]
42b0ec: pcmpeqb xmm0, xmm1
42b0f0: pslldq xmm2, 2
42b0f5: pcmpeqb xmm2, xmm1
42b0f9: psubb xmm2, xmm0
42b0fd: pmovmskb r9d, xmm2
42b102: shr edx, cl
42b104: shr r9d, cl
42b107: sub edx, r9d
42b10a: jne 0x42b365
42b110: movdqa xmm3, xmmword ptr [rdi]
42b114: pxor xmm0, xmm0
42b118: mov rcx, 0x10
42b11f: mov r9d, 0xe
42b125: lea r10, [rdi + 0xe]
42b129: and r10, 0xfff
42b130: sub r10, 0x1000
42b137: nop word ptr [rax + rax]
42b140: add r10, 0x10
42b144: jg 0x42b1e0
42b14a: movdqa xmm1, xmmword ptr [rsi + rcx]
42b14f: movdqa xmm2, xmmword ptr [rdi + rcx]
42b154: movdqa xmm4, xmm2
42b158: psrldq xmm3, 0xe
42b15d: pslldq xmm2, 2
42b162: por xmm2, xmm3
42b166: pcmpeqb xmm0, xmm1
42b16a: pcmpeqb xmm1, xmm2
42b16e: psubb xmm1, xmm0
42b172: pmovmskb edx, xmm1
42b176: sub edx, 0xffff
42b17c: jne 0x42b360
42b182: add rcx, 0x10
42b186: movdqa xmm3, xmm4
42b18a: add r10, 0x10
42b18e: jg 0x42b1e0
42b190: movdqa xmm1, xmmword ptr [rsi + rcx]
42b195: movdqa xmm2, xmmword ptr [rdi + rcx]
42b19a: movdqa xmm4, xmm2
42b19e: psrldq xmm3, 0xe
42b1a3: pslldq xmm2, 2
42b1a8: por xmm2, xmm3
42b1ac: pcmpeqb xmm0, xmm1
42b1b0: pcmpeqb xmm1, xmm2
42b1b4: psubb xmm1, xmm0
42b1b8: pmovmskb edx, xmm1
42b1bc: sub edx, 0xffff
42b1c2: jne 0x42b360
42b1c8: add rcx, 0x10
42b1cc: movdqa xmm3, xmm4
42b1d0: jmp 0x42b140
42b1d5: nop word ptr cs:[rax + rax]
42b1e0: pcmpeqb xmm0, xmm3
42b1e4: pmovmskb edx, xmm0
42b1e8: test edx, 0xc000
42b1ee: jne 0x42b200
42b1f0: pxor xmm0, xmm0
42b1f4: sub r10, 0x1000
42b1fb: jmp 0x42b14a
42b200: movdqa xmm1, xmmword ptr [rsi + rcx]
42b205: psrldq xmm0, 0xe
42b20a: psrldq xmm3, 0xe
42b20f: jmp 0x42b350
42b214: nop word ptr cs:[rax + rax]
42b21f: nop 
42b220: pxor xmm0, xmm0
42b224: movdqa xmm2, xmmword ptr [rdi]
42b228: movdqa xmm1, xmmword ptr [rsi]
42b22c: pcmpeqb xmm0, xmm1
42b230: pslldq xmm2, 1
42b235: pcmpeqb xmm2, xmm1
42b239: psubb xmm2, xmm0
42b23d: pmovmskb r9d, xmm2
42b242: shr edx, cl
42b244: shr r9d, cl
42b247: sub edx, r9d
42b24a: jne 0x42b365
42b250: movdqa xmm3, xmmword ptr [rdi]
42b254: pxor xmm0, xmm0
42b258: mov rcx, 0x10
42b25f: mov r9d, 0xf
42b265: lea r10, [rdi + 0xf]
42b269: and r10, 0xfff
42b270: sub r10, 0x1000
42b277: nop word ptr [rax + rax]
42b280: add r10, 0x10
42b284: jg 0x42b320
42b28a: movdqa xmm1, xmmword ptr [rsi + rcx]
42b28f: movdqa xmm2, xmmword ptr [rdi + rcx]
42b294: movdqa xmm4, xmm2
42b298: psrldq xmm3, 0xf
42b29d: pslldq xmm2, 1
42b2a2: por xmm2, xmm3
42b2a6: pcmpeqb xmm0, xmm1
42b2aa: pcmpeqb xmm1, xmm2
42b2ae: psubb xmm1, xmm0
42b2b2: pmovmskb edx, xmm1
42b2b6: sub edx, 0xffff
42b2bc: jne 0x42b360
42b2c2: add rcx, 0x10
42b2c6: movdqa xmm3, xmm4
42b2ca: add r10, 0x10
42b2ce: jg 0x42b320
42b2d0: movdqa xmm1, xmmword ptr [rsi + rcx]
42b2d5: movdqa xmm2, xmmword ptr [rdi + rcx]
42b2da: movdqa xmm4, xmm2
42b2de: psrldq xmm3, 0xf
42b2e3: pslldq xmm2, 1
42b2e8: por xmm2, xmm3
42b2ec: pcmpeqb xmm0, xmm1
42b2f0: pcmpeqb xmm1, xmm2
42b2f4: psubb xmm1, xmm0
42b2f8: pmovmskb edx, xmm1
42b2fc: sub edx, 0xffff
42b302: jne 0x42b360
42b304: add rcx, 0x10
42b308: movdqa xmm3, xmm4
42b30c: jmp 0x42b280
42b311: nop word ptr cs:[rax + rax]
42b31c: nop dword ptr [rax]
42b320: pcmpeqb xmm0, xmm3
42b324: pmovmskb edx, xmm0
42b328: test edx, 0x8000
42b32e: jne 0x42b340
42b330: pxor xmm0, xmm0
42b334: sub r10, 0x1000
42b33b: jmp 0x42b28a
42b340: movdqa xmm1, xmmword ptr [rsi + rcx]
42b345: psrldq xmm3, 0xf
42b34a: psrldq xmm0, 0xf
42b34f: nop 
42b350: pcmpeqb xmm1, xmm3
42b354: psubb xmm1, xmm0
42b358: pmovmskb edx, xmm1
42b35c: not edx
42b35e: nop 
42b360: lea rax, [r9 + rcx - 0x10]
42b365: lea rdi, [rdi + rax]
42b369: lea rsi, [rsi + rcx]
42b36d: test r8d, r8d
42b370: je 0x42b380
42b372: xchg rdi, rsi
42b375: nop word ptr cs:[rax + rax]
42b380: bsf rdx, rdx
42b384: movzx ecx, byte ptr [rsi + rdx]
42b388: movzx eax, byte ptr [rdi + rdx]
42b38c: sub eax, ecx
42b38e: ret 
42b38f: xor eax, eax
42b391: ret 
42b392: nop word ptr cs:[rax + rax]
42b39d: nop dword ptr [rax]
42b3a0: movzx ecx, byte ptr [rsi]
42b3a3: movzx eax, byte ptr [rdi]
42b3a6: sub eax, ecx
42b3a8: ret 
42b3a9: nop dword ptr [rax]
42b3b0: endbr64 
42b3b4: mov eax, edi
42b3b6: xor edx, edx
42b3b8: pxor xmm7, xmm7
42b3bc: or eax, esi
42b3be: and eax, 0xfff
42b3c3: cmp eax, 0xfc0
42b3c8: jg 0x42b642
42b3ce: movdqu xmm1, xmmword ptr [rdi]
42b3d2: movdqu xmm0, xmmword ptr [rsi]
42b3d6: pcmpeqb xmm0, xmm1
42b3da: pminub xmm0, xmm1
42b3de: pxor xmm1, xmm1
42b3e2: pcmpeqb xmm0, xmm1
42b3e6: pmovmskb eax, xmm0
42b3ea: test rax, rax
42b3ed: je 0x42b400
42b3ef: bsf rdx, rax
42b3f3: movzx eax, byte ptr [rdi + rdx]
42b3f7: movzx edx, byte ptr [rsi + rdx]
42b3fb: sub eax, edx
42b3fd: ret 
42b3fe: nop 
42b400: movdqu xmm6, xmmword ptr [rdi + 0x10]
42b405: movdqu xmm3, xmmword ptr [rsi + 0x10]
42b40a: movdqu xmm5, xmmword ptr [rdi + 0x20]
42b40f: pcmpeqb xmm3, xmm6
42b413: movdqu xmm2, xmmword ptr [rsi + 0x20]
42b418: pminub xmm3, xmm6
42b41c: pcmpeqb xmm3, xmm1
42b420: movdqu xmm4, xmmword ptr [rdi + 0x30]
42b425: pcmpeqb xmm2, xmm5
42b429: pmovmskb edx, xmm3
42b42d: movdqu xmm0, xmmword ptr [rsi + 0x30]
42b432: pminub xmm2, xmm5
42b436: pcmpeqb xmm2, xmm1
42b43a: pcmpeqb xmm0, xmm4
42b43e: pmovmskb eax, xmm2
42b442: shl rdx, 0x10
42b446: pminub xmm0, xmm4
42b44a: pcmpeqb xmm0, xmm1
42b44e: shl rax, 0x20
42b452: or rax, rdx
42b455: pmovmskb ecx, xmm0
42b459: mov rdx, rcx
42b45c: shl rdx, 0x30
42b460: or rax, rdx
42b463: jne 0x42b3ef
42b465: lea rdx, [rdi + 0x40]
42b469: mov ecx, 0x1000
42b46e: pxor xmm9, xmm9
42b473: and rdx, 0xffffffffffffffc0
42b477: sub rdx, rdi
42b47a: lea rax, [rdi + rdx]
42b47e: add rdx, rsi
42b481: mov rsi, rdx
42b484: and esi, 0xfff
42b48a: sub rcx, rsi
42b48d: shr rcx, 6
42b491: mov rsi, rcx
42b494: jmp 0x42b4a8
42b496: nop word ptr cs:[rax + rax]
42b4a0: add rax, 0x40
42b4a4: add rdx, 0x40
42b4a8: test rsi, rsi
42b4ab: lea rsi, [rsi - 1]
42b4af: je 0x42b570
42b4b5: movdqu xmm0, xmmword ptr [rdx]
42b4b9: movdqu xmm1, xmmword ptr [rdx + 0x10]
42b4be: movdqa xmm2, xmmword ptr [rax]
42b4c2: movdqa xmm3, xmmword ptr [rax + 0x10]
42b4c7: pcmpeqb xmm0, xmm2
42b4cb: movdqu xmm5, xmmword ptr [rdx + 0x20]
42b4d0: pcmpeqb xmm1, xmm3
42b4d4: pminub xmm0, xmm2
42b4d8: movdqu xmm6, xmmword ptr [rdx + 0x30]
42b4dd: pminub xmm1, xmm3
42b4e1: movdqa xmm2, xmmword ptr [rax + 0x20]
42b4e6: pminub xmm0, xmm1
42b4ea: movdqa xmm3, xmmword ptr [rax + 0x30]
42b4ef: pcmpeqb xmm5, xmm2
42b4f3: pcmpeqb xmm6, xmm3
42b4f7: pminub xmm5, xmm2
42b4fb: pminub xmm6, xmm3
42b4ff: pminub xmm0, xmm5
42b503: pminub xmm0, xmm6
42b507: pcmpeqb xmm0, xmm7
42b50b: pmovmskb ecx, xmm0
42b50f: test ecx, ecx
42b511: je 0x42b4a0
42b513: pcmpeqb xmm5, xmm7
42b517: movdqu xmm0, xmmword ptr [rdx]
42b51b: pcmpeqb xmm1, xmm7
42b51f: movdqa xmm2, xmmword ptr [rax]
42b523: pcmpeqb xmm0, xmm2
42b527: pminub xmm0, xmm2
42b52b: pcmpeqb xmm6, xmm7
42b52f: pcmpeqb xmm0, xmm7
42b533: pmovmskb ecx, xmm1
42b537: pmovmskb r8d, xmm5
42b53c: pmovmskb edi, xmm0
42b540: shl rcx, 0x10
42b544: shl r8, 0x20
42b548: pmovmskb esi, xmm6
42b54c: or rcx, r8
42b54f: or rcx, rdi
42b552: shl rsi, 0x30
42b556: or rcx, rsi
42b559: bsf rcx, rcx
42b55d: movzx eax, byte ptr [rax + rcx]
42b561: movzx edx, byte ptr [rdx + rcx]
42b565: sub eax, edx
42b567: ret 
42b568: nop dword ptr [rax + rax]
42b570: xor r10, r10
42b573: mov r9, rdx
42b576: and r9, 0x3f
42b57a: sub r10, r9
42b57d: movdqa xmm0, xmmword ptr [rdx + r10]
42b583: movdqa xmm1, xmmword ptr [rdx + r10 + 0x10]
42b58a: movdqu xmm2, xmmword ptr [rax + r10]
42b590: movdqu xmm3, xmmword ptr [rax + r10 + 0x10]
42b597: pcmpeqb xmm0, xmm2
42b59b: movdqa xmm5, xmmword ptr [rdx + r10 + 0x20]
42b5a2: pcmpeqb xmm1, xmm3
42b5a6: pminub xmm0, xmm2
42b5aa: movdqa xmm6, xmmword ptr [rdx + r10 + 0x30]
42b5b1: pminub xmm1, xmm3
42b5b5: movdqu xmm2, xmmword ptr [rax + r10 + 0x20]
42b5bc: movdqu xmm3, xmmword ptr [rax + r10 + 0x30]
42b5c3: pcmpeqb xmm5, xmm2
42b5c7: pcmpeqb xmm6, xmm3
42b5cb: pminub xmm5, xmm2
42b5cf: pminub xmm6, xmm3
42b5d3: pcmpeqb xmm0, xmm7
42b5d7: pcmpeqb xmm1, xmm7
42b5db: pcmpeqb xmm5, xmm7
42b5df: pcmpeqb xmm6, xmm7
42b5e3: pmovmskb ecx, xmm1
42b5e7: pmovmskb r8d, xmm5
42b5ec: pmovmskb edi, xmm0
42b5f0: shl rcx, 0x10
42b5f4: shl r8, 0x20
42b5f8: pmovmskb esi, xmm6
42b5fc: or rdi, r8
42b5ff: or rdi, rcx
42b602: shl rsi, 0x30
42b606: or rdi, rsi
42b609: mov rcx, r9
42b60c: mov rsi, 0x3f
42b613: shr rdi, cl
42b616: test rdi, rdi
42b619: je 0x42b4b5
42b61f: bsf rcx, rdi
42b623: movzx eax, byte ptr [rax + rcx]
42b627: movzx edx, byte ptr [rdx + rcx]
42b62b: sub eax, edx
42b62d: ret 
42b62e: nop 
42b630: cmp al, cl
42b632: jne 0x42b650
42b634: add rdx, 1
42b638: cmp rdx, 0x40
42b63c: je 0x42b465
42b642: movzx eax, byte ptr [rdi + rdx]
42b646: movzx ecx, byte ptr [rsi + rdx]
42b64a: test al, al
42b64c: jne 0x42b630
42b64e: xor eax, eax
42b650: sub eax, ecx
42b652: ret 
42b653: nop word ptr cs:[rax + rax]
42b65d: nop dword ptr [rax]
42b660: endbr64 
42b664: mov ecx, esi
42b666: mov eax, edi
42b668: and rcx, 0x3f
42b66c: and rax, 0x3f
42b670: cmp ecx, 0x30
42b673: ja 0x42b6c0
42b675: cmp eax, 0x30
42b678: ja 0x42b6c0
42b67a: movlpd xmm1, qword ptr [rdi]
42b67e: movlpd xmm2, qword ptr [rsi]
42b682: movhpd xmm1, qword ptr [rdi + 8]
42b687: movhpd xmm2, qword ptr [rsi + 8]
42b68c: pxor xmm0, xmm0
42b690: pcmpeqb xmm0, xmm1
42b694: pcmpeqb xmm1, xmm2
42b698: psubb xmm1, xmm0
42b69c: pmovmskb edx, xmm1
42b6a0: sub edx, 0xffff
42b6a6: jne 0x42c8a0
42b6ac: add rsi, 0x10
42b6b0: add rdi, 0x10
42b6b4: nop word ptr cs:[rax + rax]
42b6bf: nop 
42b6c0: and rsi, 0xfffffffffffffff0
42b6c4: and rdi, 0xfffffffffffffff0
42b6c8: mov edx, 0xffff
42b6cd: xor r8d, r8d
42b6d0: and ecx, 0xf
42b6d3: and eax, 0xf
42b6d6: cmp ecx, eax
42b6d8: je 0x42b700
42b6da: ja 0x42b6e3
42b6dc: mov r8d, edx
42b6df: xchg ecx, eax
42b6e0: xchg rdi, rsi
42b6e3: lea r9, [rax + 0xf]
42b6e7: sub r9, rcx
42b6ea: lea r10, [rip + 0x6bc0f]
42b6f1: movsxd r9, dword ptr [r10 + r9*4]
42b6f5: lea r10, [r10 + r9]
42b6f9: notrack jmp r10
42b6fd: nop dword ptr [rax]
42b700: movdqa xmm1, xmmword ptr [rsi]
42b704: pxor xmm0, xmm0
42b708: pcmpeqb xmm0, xmm1
42b70c: pcmpeqb xmm1, xmmword ptr [rdi]
42b710: psubb xmm1, xmm0
42b714: pmovmskb r9d, xmm1
42b719: shr edx, cl
42b71b: shr r9d, cl
42b71e: sub edx, r9d
42b721: jne 0x42c885
42b727: mov rcx, 0x10
42b72e: mov r9, 0x10
42b735: pxor xmm0, xmm0
42b739: nop dword ptr [rax]
42b740: movdqa xmm1, xmmword ptr [rsi + rcx]
42b745: movdqa xmm2, xmmword ptr [rdi + rcx]
42b74a: pcmpeqb xmm0, xmm1
42b74e: pcmpeqb xmm1, xmm2
42b752: psubb xmm1, xmm0
42b756: pmovmskb edx, xmm1
42b75a: sub edx, 0xffff
42b760: jne 0x42c880
42b766: add rcx, 0x10
42b76a: movdqa xmm1, xmmword ptr [rsi + rcx]
42b76f: movdqa xmm2, xmmword ptr [rdi + rcx]
42b774: pcmpeqb xmm0, xmm1
42b778: pcmpeqb xmm1, xmm2
42b77c: psubb xmm1, xmm0
42b780: pmovmskb edx, xmm1
42b784: sub edx, 0xffff
42b78a: jne 0x42c880
42b790: add rcx, 0x10
42b794: jmp 0x42b740
42b796: nop word ptr cs:[rax + rax]
42b7a0: pxor xmm0, xmm0
42b7a4: movdqa xmm2, xmmword ptr [rdi]
42b7a8: movdqa xmm1, xmmword ptr [rsi]
42b7ac: pcmpeqb xmm0, xmm1
42b7b0: pslldq xmm2, 0xf
42b7b5: pcmpeqb xmm2, xmm1
42b7b9: psubb xmm2, xmm0
42b7bd: pmovmskb r9d, xmm2
42b7c2: shr edx, cl
42b7c4: shr r9d, cl
42b7c7: sub edx, r9d
42b7ca: jne 0x42c885
42b7d0: movdqa xmm3, xmmword ptr [rdi]
42b7d4: pxor xmm0, xmm0
42b7d8: mov rcx, 0x10
42b7df: mov r9d, 1
42b7e5: lea r10, [rdi + 1]
42b7e9: and r10, 0xfff
42b7f0: sub r10, 0x1000
42b7f7: nop word ptr [rax + rax]
42b800: add r10, 0x10
42b804: jg 0x42b880
42b806: movdqa xmm1, xmmword ptr [rsi + rcx]
42b80b: movdqa xmm2, xmmword ptr [rdi + rcx]
42b810: movdqa xmm4, xmm2
42b814: palignr xmm2, xmm3, 1
42b81a: pcmpeqb xmm0, xmm1
42b81e: pcmpeqb xmm1, xmm2
42b822: psubb xmm1, xmm0
42b826: pmovmskb edx, xmm1
42b82a: sub edx, 0xffff
42b830: jne 0x42c880
42b836: add rcx, 0x10
42b83a: movdqa xmm3, xmm4
42b83e: add r10, 0x10
42b842: jg 0x42b880
42b844: movdqa xmm1, xmmword ptr [rsi + rcx]
42b849: movdqa xmm2, xmmword ptr [rdi + rcx]
42b84e: movdqa xmm4, xmm2
42b852: palignr xmm2, xmm3, 1
42b858: pcmpeqb xmm0, xmm1
42b85c: pcmpeqb xmm1, xmm2
42b860: psubb xmm1, xmm0
42b864: pmovmskb edx, xmm1
42b868: sub edx, 0xffff
42b86e: jne 0x42c880
42b874: add rcx, 0x10
42b878: movdqa xmm3, xmm4
42b87c: jmp 0x42b800
42b87e: nop 
42b880: pcmpeqb xmm0, xmm3
42b884: pmovmskb edx, xmm0
42b888: test edx, 0xfffe
42b88e: jne 0x42b8a0
42b890: pxor xmm0, xmm0
42b894: sub r10, 0x1000
42b89b: jmp 0x42b806
42b8a0: movdqa xmm1, xmmword ptr [rsi + rcx]
42b8a5: psrldq xmm0, 1
42b8aa: psrldq xmm3, 1
42b8af: jmp 0x42c870
42b8b4: nop word ptr cs:[rax + rax]
42b8bf: nop 
42b8c0: pxor xmm0, xmm0
42b8c4: movdqa xmm2, xmmword ptr [rdi]
42b8c8: movdqa xmm1, xmmword ptr [rsi]
42b8cc: pcmpeqb xmm0, xmm1
42b8d0: pslldq xmm2, 0xe
42b8d5: pcmpeqb xmm2, xmm1
42b8d9: psubb xmm2, xmm0
42b8dd: pmovmskb r9d, xmm2
42b8e2: shr edx, cl
42b8e4: shr r9d, cl
42b8e7: sub edx, r9d
42b8ea: jne 0x42c885
42b8f0: movdqa xmm3, xmmword ptr [rdi]
42b8f4: pxor xmm0, xmm0
42b8f8: mov rcx, 0x10
42b8ff: mov r9d, 2
42b905: lea r10, [rdi + 2]
42b909: and r10, 0xfff
42b910: sub r10, 0x1000
42b917: nop word ptr [rax + rax]
42b920: add r10, 0x10
42b924: jg 0x42b9a0
42b926: movdqa xmm1, xmmword ptr [rsi + rcx]
42b92b: movdqa xmm2, xmmword ptr [rdi + rcx]
42b930: movdqa xmm4, xmm2
42b934: palignr xmm2, xmm3, 2
42b93a: pcmpeqb xmm0, xmm1
42b93e: pcmpeqb xmm1, xmm2
42b942: psubb xmm1, xmm0
42b946: pmovmskb edx, xmm1
42b94a: sub edx, 0xffff
42b950: jne 0x42c880
42b956: add rcx, 0x10
42b95a: movdqa xmm3, xmm4
42b95e: add r10, 0x10
42b962: jg 0x42b9a0
42b964: movdqa xmm1, xmmword ptr [rsi + rcx]
42b969: movdqa xmm2, xmmword ptr [rdi + rcx]
42b96e: movdqa xmm4, xmm2
42b972: palignr xmm2, xmm3, 2
42b978: pcmpeqb xmm0, xmm1
42b97c: pcmpeqb xmm1, xmm2
42b980: psubb xmm1, xmm0
42b984: pmovmskb edx, xmm1
42b988: sub edx, 0xffff
42b98e: jne 0x42c880
42b994: add rcx, 0x10
42b998: movdqa xmm3, xmm4
42b99c: jmp 0x42b920
42b99e: nop 
42b9a0: pcmpeqb xmm0, xmm3
42b9a4: pmovmskb edx, xmm0
42b9a8: test edx, 0xfffc
42b9ae: jne 0x42b9c0
42b9b0: pxor xmm0, xmm0
42b9b4: sub r10, 0x1000
42b9bb: jmp 0x42b926
42b9c0: movdqa xmm1, xmmword ptr [rsi + rcx]
42b9c5: psrldq xmm0, 2
42b9ca: psrldq xmm3, 2
42b9cf: jmp 0x42c870
42b9d4: nop word ptr cs:[rax + rax]
42b9df: nop 
42b9e0: pxor xmm0, xmm0
42b9e4: movdqa xmm2, xmmword ptr [rdi]
42b9e8: movdqa xmm1, xmmword ptr [rsi]
42b9ec: pcmpeqb xmm0, xmm1
42b9f0: pslldq xmm2, 0xd
42b9f5: pcmpeqb xmm2, xmm1
42b9f9: psubb xmm2, xmm0
42b9fd: pmovmskb r9d, xmm2
42ba02: shr edx, cl
42ba04: shr r9d, cl
42ba07: sub edx, r9d
42ba0a: jne 0x42c885
42ba10: movdqa xmm3, xmmword ptr [rdi]
42ba14: pxor xmm0, xmm0
42ba18: mov rcx, 0x10
42ba1f: mov r9d, 3
42ba25: lea r10, [rdi + 3]
42ba29: and r10, 0xfff
42ba30: sub r10, 0x1000
42ba37: nop word ptr [rax + rax]
42ba40: add r10, 0x10
42ba44: jg 0x42bac0
42ba46: movdqa xmm1, xmmword ptr [rsi + rcx]
42ba4b: movdqa xmm2, xmmword ptr [rdi + rcx]
42ba50: movdqa xmm4, xmm2
42ba54: palignr xmm2, xmm3, 3
42ba5a: pcmpeqb xmm0, xmm1
42ba5e: pcmpeqb xmm1, xmm2
42ba62: psubb xmm1, xmm0
42ba66: pmovmskb edx, xmm1
42ba6a: sub edx, 0xffff
42ba70: jne 0x42c880
42ba76: add rcx, 0x10
42ba7a: movdqa xmm3, xmm4
42ba7e: add r10, 0x10
42ba82: jg 0x42bac0
42ba84: movdqa xmm1, xmmword ptr [rsi + rcx]
42ba89: movdqa xmm2, xmmword ptr [rdi + rcx]
42ba8e: movdqa xmm4, xmm2
42ba92: palignr xmm2, xmm3, 3
42ba98: pcmpeqb xmm0, xmm1
42ba9c: pcmpeqb xmm1, xmm2
42baa0: psubb xmm1, xmm0
42baa4: pmovmskb edx, xmm1
42baa8: sub edx, 0xffff
42baae: jne 0x42c880
42bab4: add rcx, 0x10
42bab8: movdqa xmm3, xmm4
42babc: jmp 0x42ba40
42babe: nop 
42bac0: pcmpeqb xmm0, xmm3
42bac4: pmovmskb edx, xmm0
42bac8: test edx, 0xfff8
42bace: jne 0x42bae0
42bad0: pxor xmm0, xmm0
42bad4: sub r10, 0x1000
42badb: jmp 0x42ba46
42bae0: movdqa xmm1, xmmword ptr [rsi + rcx]
42bae5: psrldq xmm0, 3
42baea: psrldq xmm3, 3
42baef: jmp 0x42c870
42baf4: nop word ptr cs:[rax + rax]
42baff: nop 
42bb00: pxor xmm0, xmm0
42bb04: movdqa xmm2, xmmword ptr [rdi]
42bb08: movdqa xmm1, xmmword ptr [rsi]
42bb0c: pcmpeqb xmm0, xmm1
42bb10: pslldq xmm2, 0xc
42bb15: pcmpeqb xmm2, xmm1
42bb19: psubb xmm2, xmm0
42bb1d: pmovmskb r9d, xmm2
42bb22: shr edx, cl
42bb24: shr r9d, cl
42bb27: sub edx, r9d
42bb2a: jne 0x42c885
42bb30: movdqa xmm3, xmmword ptr [rdi]
42bb34: pxor xmm0, xmm0
42bb38: mov rcx, 0x10
42bb3f: mov r9d, 4
42bb45: lea r10, [rdi + 4]
42bb49: and r10, 0xfff
42bb50: sub r10, 0x1000
42bb57: nop word ptr [rax + rax]
42bb60: add r10, 0x10
42bb64: jg 0x42bbe0
42bb66: movdqa xmm1, xmmword ptr [rsi + rcx]
42bb6b: movdqa xmm2, xmmword ptr [rdi + rcx]
42bb70: movdqa xmm4, xmm2
42bb74: palignr xmm2, xmm3, 4
42bb7a: pcmpeqb xmm0, xmm1
42bb7e: pcmpeqb xmm1, xmm2
42bb82: psubb xmm1, xmm0
42bb86: pmovmskb edx, xmm1
42bb8a: sub edx, 0xffff
42bb90: jne 0x42c880
42bb96: add rcx, 0x10
42bb9a: movdqa xmm3, xmm4
42bb9e: add r10, 0x10
42bba2: jg 0x42bbe0
42bba4: movdqa xmm1, xmmword ptr [rsi + rcx]
42bba9: movdqa xmm2, xmmword ptr [rdi + rcx]
42bbae: movdqa xmm4, xmm2
42bbb2: palignr xmm2, xmm3, 4
42bbb8: pcmpeqb xmm0, xmm1
42bbbc: pcmpeqb xmm1, xmm2
42bbc0: psubb xmm1, xmm0
42bbc4: pmovmskb edx, xmm1
42bbc8: sub edx, 0xffff
42bbce: jne 0x42c880
42bbd4: add rcx, 0x10
42bbd8: movdqa xmm3, xmm4
42bbdc: jmp 0x42bb60
42bbde: nop 
42bbe0: pcmpeqb xmm0, xmm3
42bbe4: pmovmskb edx, xmm0
42bbe8: test edx, 0xfff0
42bbee: jne 0x42bc00
42bbf0: pxor xmm0, xmm0
42bbf4: sub r10, 0x1000
42bbfb: jmp 0x42bb66
42bc00: movdqa xmm1, xmmword ptr [rsi + rcx]
42bc05: psrldq xmm0, 4
42bc0a: psrldq xmm3, 4
42bc0f: jmp 0x42c870
42bc14: nop word ptr cs:[rax + rax]
42bc1f: nop 
42bc20: pxor xmm0, xmm0
42bc24: movdqa xmm2, xmmword ptr [rdi]
42bc28: movdqa xmm1, xmmword ptr [rsi]
42bc2c: pcmpeqb xmm0, xmm1
42bc30: pslldq xmm2, 0xb
42bc35: pcmpeqb xmm2, xmm1
42bc39: psubb xmm2, xmm0
42bc3d: pmovmskb r9d, xmm2
42bc42: shr edx, cl
42bc44: shr r9d, cl
42bc47: sub edx, r9d
42bc4a: jne 0x42c885
42bc50: movdqa xmm3, xmmword ptr [rdi]
42bc54: pxor xmm0, xmm0
42bc58: mov rcx, 0x10
42bc5f: mov r9d, 5
42bc65: lea r10, [rdi + 5]
42bc69: and r10, 0xfff
42bc70: sub r10, 0x1000
42bc77: nop word ptr [rax + rax]
42bc80: add r10, 0x10
42bc84: jg 0x42bd00
42bc86: movdqa xmm1, xmmword ptr [rsi + rcx]
42bc8b: movdqa xmm2, xmmword ptr [rdi + rcx]
42bc90: movdqa xmm4, xmm2
42bc94: palignr xmm2, xmm3, 5
42bc9a: pcmpeqb xmm0, xmm1
42bc9e: pcmpeqb xmm1, xmm2
42bca2: psubb xmm1, xmm0
42bca6: pmovmskb edx, xmm1
42bcaa: sub edx, 0xffff
42bcb0: jne 0x42c880
42bcb6: add rcx, 0x10
42bcba: movdqa xmm3, xmm4
42bcbe: add r10, 0x10
42bcc2: jg 0x42bd00
42bcc4: movdqa xmm1, xmmword ptr [rsi + rcx]
42bcc9: movdqa xmm2, xmmword ptr [rdi + rcx]
42bcce: movdqa xmm4, xmm2
42bcd2: palignr xmm2, xmm3, 5
42bcd8: pcmpeqb xmm0, xmm1
42bcdc: pcmpeqb xmm1, xmm2
42bce0: psubb xmm1, xmm0
42bce4: pmovmskb edx, xmm1
42bce8: sub edx, 0xffff
42bcee: jne 0x42c880
42bcf4: add rcx, 0x10
42bcf8: movdqa xmm3, xmm4
42bcfc: jmp 0x42bc80
42bcfe: nop 
42bd00: pcmpeqb xmm0, xmm3
42bd04: pmovmskb edx, xmm0
42bd08: test edx, 0xffe0
42bd0e: jne 0x42bd20
42bd10: pxor xmm0, xmm0
42bd14: sub r10, 0x1000
42bd1b: jmp 0x42bc86
42bd20: movdqa xmm1, xmmword ptr [rsi + rcx]
42bd25: psrldq xmm0, 5
42bd2a: psrldq xmm3, 5
42bd2f: jmp 0x42c870
42bd34: nop word ptr cs:[rax + rax]
42bd3f: nop 
42bd40: pxor xmm0, xmm0
42bd44: movdqa xmm2, xmmword ptr [rdi]
42bd48: movdqa xmm1, xmmword ptr [rsi]
42bd4c: pcmpeqb xmm0, xmm1
42bd50: pslldq xmm2, 0xa
42bd55: pcmpeqb xmm2, xmm1
42bd59: psubb xmm2, xmm0
42bd5d: pmovmskb r9d, xmm2
42bd62: shr edx, cl
42bd64: shr r9d, cl
42bd67: sub edx, r9d
42bd6a: jne 0x42c885
42bd70: movdqa xmm3, xmmword ptr [rdi]
42bd74: pxor xmm0, xmm0
42bd78: mov rcx, 0x10
42bd7f: mov r9d, 6
42bd85: lea r10, [rdi + 6]
42bd89: and r10, 0xfff
42bd90: sub r10, 0x1000
42bd97: nop word ptr [rax + rax]
42bda0: add r10, 0x10
42bda4: jg 0x42be20
42bda6: movdqa xmm1, xmmword ptr [rsi + rcx]
42bdab: movdqa xmm2, xmmword ptr [rdi + rcx]
42bdb0: movdqa xmm4, xmm2
42bdb4: palignr xmm2, xmm3, 6
42bdba: pcmpeqb xmm0, xmm1
42bdbe: pcmpeqb xmm1, xmm2
42bdc2: psubb xmm1, xmm0
42bdc6: pmovmskb edx, xmm1
42bdca: sub edx, 0xffff
42bdd0: jne 0x42c880
42bdd6: add rcx, 0x10
42bdda: movdqa xmm3, xmm4
42bdde: add r10, 0x10
42bde2: jg 0x42be20
42bde4: movdqa xmm1, xmmword ptr [rsi + rcx]
42bde9: movdqa xmm2, xmmword ptr [rdi + rcx]
42bdee: movdqa xmm4, xmm2
42bdf2: palignr xmm2, xmm3, 6
42bdf8: pcmpeqb xmm0, xmm1
42bdfc: pcmpeqb xmm1, xmm2
42be00: psubb xmm1, xmm0
42be04: pmovmskb edx, xmm1
42be08: sub edx, 0xffff
42be0e: jne 0x42c880
42be14: add rcx, 0x10
42be18: movdqa xmm3, xmm4
42be1c: jmp 0x42bda0
42be1e: nop 
42be20: pcmpeqb xmm0, xmm3
42be24: pmovmskb edx, xmm0
42be28: test edx, 0xffc0
42be2e: jne 0x42be40
42be30: pxor xmm0, xmm0
42be34: sub r10, 0x1000
42be3b: jmp 0x42bda6
42be40: movdqa xmm1, xmmword ptr [rsi + rcx]
42be45: psrldq xmm0, 6
42be4a: psrldq xmm3, 6
42be4f: jmp 0x42c870
42be54: nop word ptr cs:[rax + rax]
42be5f: nop 
42be60: pxor xmm0, xmm0
42be64: movdqa xmm2, xmmword ptr [rdi]
42be68: movdqa xmm1, xmmword ptr [rsi]
42be6c: pcmpeqb xmm0, xmm1
42be70: pslldq xmm2, 9
42be75: pcmpeqb xmm2, xmm1
42be79: psubb xmm2, xmm0
42be7d: pmovmskb r9d, xmm2
42be82: shr edx, cl
42be84: shr r9d, cl
42be87: sub edx, r9d
42be8a: jne 0x42c885
42be90: movdqa xmm3, xmmword ptr [rdi]
42be94: pxor xmm0, xmm0
42be98: mov rcx, 0x10
42be9f: mov r9d, 7
42bea5: lea r10, [rdi + 7]
42bea9: and r10, 0xfff
42beb0: sub r10, 0x1000
42beb7: nop word ptr [rax + rax]
42bec0: add r10, 0x10
42bec4: jg 0x42bf40
42bec6: movdqa xmm1, xmmword ptr [rsi + rcx]
42becb: movdqa xmm2, xmmword ptr [rdi + rcx]
42bed0: movdqa xmm4, xmm2
42bed4: palignr xmm2, xmm3, 7
42beda: pcmpeqb xmm0, xmm1
42bede: pcmpeqb xmm1, xmm2
42bee2: psubb xmm1, xmm0
42bee6: pmovmskb edx, xmm1
42beea: sub edx, 0xffff
42bef0: jne 0x42c880
42bef6: add rcx, 0x10
42befa: movdqa xmm3, xmm4
42befe: add r10, 0x10
42bf02: jg 0x42bf40
42bf04: movdqa xmm1, xmmword ptr [rsi + rcx]
42bf09: movdqa xmm2, xmmword ptr [rdi + rcx]
42bf0e: movdqa xmm4, xmm2
42bf12: palignr xmm2, xmm3, 7
42bf18: pcmpeqb xmm0, xmm1
42bf1c: pcmpeqb xmm1, xmm2
42bf20: psubb xmm1, xmm0
42bf24: pmovmskb edx, xmm1
42bf28: sub edx, 0xffff
42bf2e: jne 0x42c880
42bf34: add rcx, 0x10
42bf38: movdqa xmm3, xmm4
42bf3c: jmp 0x42bec0
42bf3e: nop 
42bf40: pcmpeqb xmm0, xmm3
42bf44: pmovmskb edx, xmm0
42bf48: test edx, 0xff80
42bf4e: jne 0x42bf60
42bf50: pxor xmm0, xmm0
42bf54: sub r10, 0x1000
42bf5b: jmp 0x42bec6
42bf60: movdqa xmm1, xmmword ptr [rsi + rcx]
42bf65: psrldq xmm0, 7
42bf6a: psrldq xmm3, 7
42bf6f: jmp 0x42c870
42bf74: nop word ptr cs:[rax + rax]
42bf7f: nop 
42bf80: pxor xmm0, xmm0
42bf84: movdqa xmm2, xmmword ptr [rdi]
42bf88: movdqa xmm1, xmmword ptr [rsi]
42bf8c: pcmpeqb xmm0, xmm1
42bf90: pslldq xmm2, 8
42bf95: pcmpeqb xmm2, xmm1
42bf99: psubb xmm2, xmm0
42bf9d: pmovmskb r9d, xmm2
42bfa2: shr edx, cl
42bfa4: shr r9d, cl
42bfa7: sub edx, r9d
42bfaa: jne 0x42c885
42bfb0: movdqa xmm3, xmmword ptr [rdi]
42bfb4: pxor xmm0, xmm0
42bfb8: mov rcx, 0x10
42bfbf: mov r9d, 8
42bfc5: lea r10, [rdi + 8]
42bfc9: and r10, 0xfff
42bfd0: sub r10, 0x1000
42bfd7: nop word ptr [rax + rax]
42bfe0: add r10, 0x10
42bfe4: jg 0x42c060
42bfe6: movdqa xmm1, xmmword ptr [rsi + rcx]
42bfeb: movdqa xmm2, xmmword ptr [rdi + rcx]
42bff0: movdqa xmm4, xmm2
42bff4: palignr xmm2, xmm3, 8
42bffa: pcmpeqb xmm0, xmm1
42bffe: pcmpeqb xmm1, xmm2
42c002: psubb xmm1, xmm0
42c006: pmovmskb edx, xmm1
42c00a: sub edx, 0xffff
42c010: jne 0x42c880
42c016: add rcx, 0x10
42c01a: movdqa xmm3, xmm4
42c01e: add r10, 0x10
42c022: jg 0x42c060
42c024: movdqa xmm1, xmmword ptr [rsi + rcx]
42c029: movdqa xmm2, xmmword ptr [rdi + rcx]
42c02e: movdqa xmm4, xmm2
42c032: palignr xmm2, xmm3, 8
42c038: pcmpeqb xmm0, xmm1
42c03c: pcmpeqb xmm1, xmm2
42c040: psubb xmm1, xmm0
42c044: pmovmskb edx, xmm1
42c048: sub edx, 0xffff
42c04e: jne 0x42c880
42c054: add rcx, 0x10
42c058: movdqa xmm3, xmm4
42c05c: jmp 0x42bfe0
42c05e: nop 
42c060: pcmpeqb xmm0, xmm3
42c064: pmovmskb edx, xmm0
42c068: test edx, 0xff00
42c06e: jne 0x42c080
42c070: pxor xmm0, xmm0
42c074: sub r10, 0x1000
42c07b: jmp 0x42bfe6
42c080: movdqa xmm1, xmmword ptr [rsi + rcx]
42c085: psrldq xmm0, 8
42c08a: psrldq xmm3, 8
42c08f: jmp 0x42c870
42c094: nop word ptr cs:[rax + rax]
42c09f: nop 
42c0a0: pxor xmm0, xmm0
42c0a4: movdqa xmm2, xmmword ptr [rdi]
42c0a8: movdqa xmm1, xmmword ptr [rsi]
42c0ac: pcmpeqb xmm0, xmm1
42c0b0: pslldq xmm2, 7
42c0b5: pcmpeqb xmm2, xmm1
42c0b9: psubb xmm2, xmm0
42c0bd: pmovmskb r9d, xmm2
42c0c2: shr edx, cl
42c0c4: shr r9d, cl
42c0c7: sub edx, r9d
42c0ca: jne 0x42c885
42c0d0: movdqa xmm3, xmmword ptr [rdi]
42c0d4: pxor xmm0, xmm0
42c0d8: mov rcx, 0x10
42c0df: mov r9d, 9
42c0e5: lea r10, [rdi + 9]
42c0e9: and r10, 0xfff
42c0f0: sub r10, 0x1000
42c0f7: nop word ptr [rax + rax]
42c100: add r10, 0x10
42c104: jg 0x42c180
42c106: movdqa xmm1, xmmword ptr [rsi + rcx]
42c10b: movdqa xmm2, xmmword ptr [rdi + rcx]
42c110: movdqa xmm4, xmm2
42c114: palignr xmm2, xmm3, 9
42c11a: pcmpeqb xmm0, xmm1
42c11e: pcmpeqb xmm1, xmm2
42c122: psubb xmm1, xmm0
42c126: pmovmskb edx, xmm1
42c12a: sub edx, 0xffff
42c130: jne 0x42c880
42c136: add rcx, 0x10
42c13a: movdqa xmm3, xmm4
42c13e: add r10, 0x10
42c142: jg 0x42c180
42c144: movdqa xmm1, xmmword ptr [rsi + rcx]
42c149: movdqa xmm2, xmmword ptr [rdi + rcx]
42c14e: movdqa xmm4, xmm2
42c152: palignr xmm2, xmm3, 9
42c158: pcmpeqb xmm0, xmm1
42c15c: pcmpeqb xmm1, xmm2
42c160: psubb xmm1, xmm0
42c164: pmovmskb edx, xmm1
42c168: sub edx, 0xffff
42c16e: jne 0x42c880
42c174: add rcx, 0x10
42c178: movdqa xmm3, xmm4
42c17c: jmp 0x42c100
42c17e: nop 
42c180: pcmpeqb xmm0, xmm3
42c184: pmovmskb edx, xmm0
42c188: test edx, 0xfe00
42c18e: jne 0x42c1a0
42c190: pxor xmm0, xmm0
42c194: sub r10, 0x1000
42c19b: jmp 0x42c106
42c1a0: movdqa xmm1, xmmword ptr [rsi + rcx]
42c1a5: psrldq xmm0, 9
42c1aa: psrldq xmm3, 9
42c1af: jmp 0x42c870
42c1b4: nop word ptr cs:[rax + rax]
42c1bf: nop 
42c1c0: pxor xmm0, xmm0
42c1c4: movdqa xmm2, xmmword ptr [rdi]
42c1c8: movdqa xmm1, xmmword ptr [rsi]
42c1cc: pcmpeqb xmm0, xmm1
42c1d0: pslldq xmm2, 6
42c1d5: pcmpeqb xmm2, xmm1
42c1d9: psubb xmm2, xmm0
42c1dd: pmovmskb r9d, xmm2
42c1e2: shr edx, cl
42c1e4: shr r9d, cl
42c1e7: sub edx, r9d
42c1ea: jne 0x42c885
42c1f0: movdqa xmm3, xmmword ptr [rdi]
42c1f4: pxor xmm0, xmm0
42c1f8: mov rcx, 0x10
42c1ff: mov r9d, 0xa
42c205: lea r10, [rdi + 0xa]
42c209: and r10, 0xfff
42c210: sub r10, 0x1000
42c217: nop word ptr [rax + rax]
42c220: add r10, 0x10
42c224: jg 0x42c2a0
42c226: movdqa xmm1, xmmword ptr [rsi + rcx]
42c22b: movdqa xmm2, xmmword ptr [rdi + rcx]
42c230: movdqa xmm4, xmm2
42c234: palignr xmm2, xmm3, 0xa
42c23a: pcmpeqb xmm0, xmm1
42c23e: pcmpeqb xmm1, xmm2
42c242: psubb xmm1, xmm0
42c246: pmovmskb edx, xmm1
42c24a: sub edx, 0xffff
42c250: jne 0x42c880
42c256: add rcx, 0x10
42c25a: movdqa xmm3, xmm4
42c25e: add r10, 0x10
42c262: jg 0x42c2a0
42c264: movdqa xmm1, xmmword ptr [rsi + rcx]
42c269: movdqa xmm2, xmmword ptr [rdi + rcx]
42c26e: movdqa xmm4, xmm2
42c272: palignr xmm2, xmm3, 0xa
42c278: pcmpeqb xmm0, xmm1
42c27c: pcmpeqb xmm1, xmm2
42c280: psubb xmm1, xmm0
42c284: pmovmskb edx, xmm1
42c288: sub edx, 0xffff
42c28e: jne 0x42c880
42c294: add rcx, 0x10
42c298: movdqa xmm3, xmm4
42c29c: jmp 0x42c220
42c29e: nop 
42c2a0: pcmpeqb xmm0, xmm3
42c2a4: pmovmskb edx, xmm0
42c2a8: test edx, 0xfc00
42c2ae: jne 0x42c2c0
42c2b0: pxor xmm0, xmm0
42c2b4: sub r10, 0x1000
42c2bb: jmp 0x42c226
42c2c0: movdqa xmm1, xmmword ptr [rsi + rcx]
42c2c5: psrldq xmm0, 0xa
42c2ca: psrldq xmm3, 0xa
42c2cf: jmp 0x42c870
42c2d4: nop word ptr cs:[rax + rax]
42c2df: nop 
42c2e0: pxor xmm0, xmm0
42c2e4: movdqa xmm2, xmmword ptr [rdi]
42c2e8: movdqa xmm1, xmmword ptr [rsi]
42c2ec: pcmpeqb xmm0, xmm1
42c2f0: pslldq xmm2, 5
42c2f5: pcmpeqb xmm2, xmm1
42c2f9: psubb xmm2, xmm0
42c2fd: pmovmskb r9d, xmm2
42c302: shr edx, cl
42c304: shr r9d, cl
42c307: sub edx, r9d
42c30a: jne 0x42c885
42c310: movdqa xmm3, xmmword ptr [rdi]
42c314: pxor xmm0, xmm0
42c318: mov rcx, 0x10
42c31f: mov r9d, 0xb
42c325: lea r10, [rdi + 0xb]
42c329: and r10, 0xfff
42c330: sub r10, 0x1000
42c337: nop word ptr [rax + rax]
42c340: add r10, 0x10
42c344: jg 0x42c3c0
42c346: movdqa xmm1, xmmword ptr [rsi + rcx]
42c34b: movdqa xmm2, xmmword ptr [rdi + rcx]
42c350: movdqa xmm4, xmm2
42c354: palignr xmm2, xmm3, 0xb
42c35a: pcmpeqb xmm0, xmm1
42c35e: pcmpeqb xmm1, xmm2
42c362: psubb xmm1, xmm0
42c366: pmovmskb edx, xmm1
42c36a: sub edx, 0xffff
42c370: jne 0x42c880
42c376: add rcx, 0x10
42c37a: movdqa xmm3, xmm4
42c37e: add r10, 0x10
42c382: jg 0x42c3c0
42c384: movdqa xmm1, xmmword ptr [rsi + rcx]
42c389: movdqa xmm2, xmmword ptr [rdi + rcx]
42c38e: movdqa xmm4, xmm2
42c392: palignr xmm2, xmm3, 0xb
42c398: pcmpeqb xmm0, xmm1
42c39c: pcmpeqb xmm1, xmm2
42c3a0: psubb xmm1, xmm0
42c3a4: pmovmskb edx, xmm1
42c3a8: sub edx, 0xffff
42c3ae: jne 0x42c880
42c3b4: add rcx, 0x10
42c3b8: movdqa xmm3, xmm4
42c3bc: jmp 0x42c340
42c3be: nop 
42c3c0: pcmpeqb xmm0, xmm3
42c3c4: pmovmskb edx, xmm0
42c3c8: test edx, 0xf800
42c3ce: jne 0x42c3e0
42c3d0: pxor xmm0, xmm0
42c3d4: sub r10, 0x1000
42c3db: jmp 0x42c346
42c3e0: movdqa xmm1, xmmword ptr [rsi + rcx]
42c3e5: psrldq xmm0, 0xb
42c3ea: psrldq xmm3, 0xb
42c3ef: jmp 0x42c870
42c3f4: nop word ptr cs:[rax + rax]
42c3ff: nop 
42c400: pxor xmm0, xmm0
42c404: movdqa xmm2, xmmword ptr [rdi]
42c408: movdqa xmm1, xmmword ptr [rsi]
42c40c: pcmpeqb xmm0, xmm1
42c410: pslldq xmm2, 4
42c415: pcmpeqb xmm2, xmm1
42c419: psubb xmm2, xmm0
42c41d: pmovmskb r9d, xmm2
42c422: shr edx, cl
42c424: shr r9d, cl
42c427: sub edx, r9d
42c42a: jne 0x42c885
42c430: movdqa xmm3, xmmword ptr [rdi]
42c434: pxor xmm0, xmm0
42c438: mov rcx, 0x10
42c43f: mov r9d, 0xc
42c445: lea r10, [rdi + 0xc]
42c449: and r10, 0xfff
42c450: sub r10, 0x1000
42c457: nop word ptr [rax + rax]
42c460: add r10, 0x10
42c464: jg 0x42c4e0
42c466: movdqa xmm1, xmmword ptr [rsi + rcx]
42c46b: movdqa xmm2, xmmword ptr [rdi + rcx]
42c470: movdqa xmm4, xmm2
42c474: palignr xmm2, xmm3, 0xc
42c47a: pcmpeqb xmm0, xmm1
42c47e: pcmpeqb xmm1, xmm2
42c482: psubb xmm1, xmm0
42c486: pmovmskb edx, xmm1
42c48a: sub edx, 0xffff
42c490: jne 0x42c880
42c496: add rcx, 0x10
42c49a: movdqa xmm3, xmm4
42c49e: add r10, 0x10
42c4a2: jg 0x42c4e0
42c4a4: movdqa xmm1, xmmword ptr [rsi + rcx]
42c4a9: movdqa xmm2, xmmword ptr [rdi + rcx]
42c4ae: movdqa xmm4, xmm2
42c4b2: palignr xmm2, xmm3, 0xc
42c4b8: pcmpeqb xmm0, xmm1
42c4bc: pcmpeqb xmm1, xmm2
42c4c0: psubb xmm1, xmm0
42c4c4: pmovmskb edx, xmm1
42c4c8: sub edx, 0xffff
42c4ce: jne 0x42c880
42c4d4: add rcx, 0x10
42c4d8: movdqa xmm3, xmm4
42c4dc: jmp 0x42c460
42c4de: nop 
42c4e0: pcmpeqb xmm0, xmm3
42c4e4: pmovmskb edx, xmm0
42c4e8: test edx, 0xf000
42c4ee: jne 0x42c500
42c4f0: pxor xmm0, xmm0
42c4f4: sub r10, 0x1000
42c4fb: jmp 0x42c466
42c500: movdqa xmm1, xmmword ptr [rsi + rcx]
42c505: psrldq xmm0, 0xc
42c50a: psrldq xmm3, 0xc
42c50f: jmp 0x42c870
42c514: nop word ptr cs:[rax + rax]
42c51f: nop 
42c520: pxor xmm0, xmm0
42c524: movdqa xmm2, xmmword ptr [rdi]
42c528: movdqa xmm1, xmmword ptr [rsi]
42c52c: pcmpeqb xmm0, xmm1
42c530: pslldq xmm2, 3
42c535: pcmpeqb xmm2, xmm1
42c539: psubb xmm2, xmm0
42c53d: pmovmskb r9d, xmm2
42c542: shr edx, cl
42c544: shr r9d, cl
42c547: sub edx, r9d
42c54a: jne 0x42c885
42c550: movdqa xmm3, xmmword ptr [rdi]
42c554: pxor xmm0, xmm0
42c558: mov rcx, 0x10
42c55f: mov r9d, 0xd
42c565: lea r10, [rdi + 0xd]
42c569: and r10, 0xfff
42c570: sub r10, 0x1000
42c577: nop word ptr [rax + rax]
42c580: add r10, 0x10
42c584: jg 0x42c600
42c586: movdqa xmm1, xmmword ptr [rsi + rcx]
42c58b: movdqa xmm2, xmmword ptr [rdi + rcx]
42c590: movdqa xmm4, xmm2
42c594: palignr xmm2, xmm3, 0xd
42c59a: pcmpeqb xmm0, xmm1
42c59e: pcmpeqb xmm1, xmm2
42c5a2: psubb xmm1, xmm0
42c5a6: pmovmskb edx, xmm1
42c5aa: sub edx, 0xffff
42c5b0: jne 0x42c880
42c5b6: add rcx, 0x10
42c5ba: movdqa xmm3, xmm4
42c5be: add r10, 0x10
42c5c2: jg 0x42c600
42c5c4: movdqa xmm1, xmmword ptr [rsi + rcx]
42c5c9: movdqa xmm2, xmmword ptr [rdi + rcx]
42c5ce: movdqa xmm4, xmm2
42c5d2: palignr xmm2, xmm3, 0xd
42c5d8: pcmpeqb xmm0, xmm1
42c5dc: pcmpeqb xmm1, xmm2
42c5e0: psubb xmm1, xmm0
42c5e4: pmovmskb edx, xmm1
42c5e8: sub edx, 0xffff
42c5ee: jne 0x42c880
42c5f4: add rcx, 0x10
42c5f8: movdqa xmm3, xmm4
42c5fc: jmp 0x42c580
42c5fe: nop 
42c600: pcmpeqb xmm0, xmm3
42c604: pmovmskb edx, xmm0
42c608: test edx, 0xe000
42c60e: jne 0x42c620
42c610: pxor xmm0, xmm0
42c614: sub r10, 0x1000
42c61b: jmp 0x42c586
42c620: movdqa xmm1, xmmword ptr [rsi + rcx]
42c625: psrldq xmm0, 0xd
42c62a: psrldq xmm3, 0xd
42c62f: jmp 0x42c870
42c634: nop word ptr cs:[rax + rax]
42c63f: nop 
42c640: pxor xmm0, xmm0
42c644: movdqa xmm2, xmmword ptr [rdi]
42c648: movdqa xmm1, xmmword ptr [rsi]
42c64c: pcmpeqb xmm0, xmm1
42c650: pslldq xmm2, 2
42c655: pcmpeqb xmm2, xmm1
42c659: psubb xmm2, xmm0
42c65d: pmovmskb r9d, xmm2
42c662: shr edx, cl
42c664: shr r9d, cl
42c667: sub edx, r9d
42c66a: jne 0x42c885
42c670: movdqa xmm3, xmmword ptr [rdi]
42c674: pxor xmm0, xmm0
42c678: mov rcx, 0x10
42c67f: mov r9d, 0xe
42c685: lea r10, [rdi + 0xe]
42c689: and r10, 0xfff
42c690: sub r10, 0x1000
42c697: nop word ptr [rax + rax]
42c6a0: add r10, 0x10
42c6a4: jg 0x42c720
42c6a6: movdqa xmm1, xmmword ptr [rsi + rcx]
42c6ab: movdqa xmm2, xmmword ptr [rdi + rcx]
42c6b0: movdqa xmm4, xmm2
42c6b4: palignr xmm2, xmm3, 0xe
42c6ba: pcmpeqb xmm0, xmm1
42c6be: pcmpeqb xmm1, xmm2
42c6c2: psubb xmm1, xmm0
42c6c6: pmovmskb edx, xmm1
42c6ca: sub edx, 0xffff
42c6d0: jne 0x42c880
42c6d6: add rcx, 0x10
42c6da: movdqa xmm3, xmm4
42c6de: add r10, 0x10
42c6e2: jg 0x42c720
42c6e4: movdqa xmm1, xmmword ptr [rsi + rcx]
42c6e9: movdqa xmm2, xmmword ptr [rdi + rcx]
42c6ee: movdqa xmm4, xmm2
42c6f2: palignr xmm2, xmm3, 0xe
42c6f8: pcmpeqb xmm0, xmm1
42c6fc: pcmpeqb xmm1, xmm2
42c700: psubb xmm1, xmm0
42c704: pmovmskb edx, xmm1
42c708: sub edx, 0xffff
42c70e: jne 0x42c880
42c714: add rcx, 0x10
42c718: movdqa xmm3, xmm4
42c71c: jmp 0x42c6a0
42c71e: nop 
42c720: pcmpeqb xmm0, xmm3
42c724: pmovmskb edx, xmm0
42c728: test edx, 0xc000
42c72e: jne 0x42c740
42c730: pxor xmm0, xmm0
42c734: sub r10, 0x1000
42c73b: jmp 0x42c6a6
42c740: movdqa xmm1, xmmword ptr [rsi + rcx]
42c745: psrldq xmm0, 0xe
42c74a: psrldq xmm3, 0xe
42c74f: jmp 0x42c870
42c754: nop word ptr cs:[rax + rax]
42c75f: nop 
42c760: pxor xmm0, xmm0
42c764: movdqa xmm2, xmmword ptr [rdi]
42c768: movdqa xmm1, xmmword ptr [rsi]
42c76c: pcmpeqb xmm0, xmm1
42c770: pslldq xmm2, 1
42c775: pcmpeqb xmm2, xmm1
42c779: psubb xmm2, xmm0
42c77d: pmovmskb r9d, xmm2
42c782: shr edx, cl
42c784: shr r9d, cl
42c787: sub edx, r9d
42c78a: jne 0x42c885
42c790: movdqa xmm3, xmmword ptr [rdi]
42c794: pxor xmm0, xmm0
42c798: mov rcx, 0x10
42c79f: mov r9d, 0xf
42c7a5: lea r10, [rdi + 0xf]
42c7a9: and r10, 0xfff
42c7b0: sub r10, 0x1000
42c7b7: nop word ptr [rax + rax]
42c7c0: add r10, 0x10
42c7c4: jg 0x42c840
42c7c6: movdqa xmm1, xmmword ptr [rsi + rcx]
42c7cb: movdqa xmm2, xmmword ptr [rdi + rcx]
42c7d0: movdqa xmm4, xmm2
42c7d4: palignr xmm2, xmm3, 0xf
42c7da: pcmpeqb xmm0, xmm1
42c7de: pcmpeqb xmm1, xmm2
42c7e2: psubb xmm1, xmm0
42c7e6: pmovmskb edx, xmm1
42c7ea: sub edx, 0xffff
42c7f0: jne 0x42c880
42c7f6: add rcx, 0x10
42c7fa: movdqa xmm3, xmm4
42c7fe: add r10, 0x10
42c802: jg 0x42c840
42c804: movdqa xmm1, xmmword ptr [rsi + rcx]
42c809: movdqa xmm2, xmmword ptr [rdi + rcx]
42c80e: movdqa xmm4, xmm2
42c812: palignr xmm2, xmm3, 0xf
42c818: pcmpeqb xmm0, xmm1
42c81c: pcmpeqb xmm1, xmm2
42c820: psubb xmm1, xmm0
42c824: pmovmskb edx, xmm1
42c828: sub edx, 0xffff
42c82e: jne 0x42c880
42c830: add rcx, 0x10
42c834: movdqa xmm3, xmm4
42c838: jmp 0x42c7c0
42c83a: nop word ptr [rax + rax]
42c840: pcmpeqb xmm0, xmm3
42c844: pmovmskb edx, xmm0
42c848: test edx, 0x8000
42c84e: jne 0x42c860
42c850: pxor xmm0, xmm0
42c854: sub r10, 0x1000
42c85b: jmp 0x42c7c6
42c860: movdqa xmm1, xmmword ptr [rsi + rcx]
42c865: psrldq xmm3, 0xf
42c86a: psrldq xmm0, 0xf
42c86f: nop 
42c870: pcmpeqb xmm1, xmm3
42c874: psubb xmm1, xmm0
42c878: pmovmskb edx, xmm1
42c87c: not edx
42c87e: nop 
42c880: lea rax, [r9 + rcx - 0x10]
42c885: lea rdi, [rdi + rax]
42c889: lea rsi, [rsi + rcx]
42c88d: test r8d, r8d
42c890: je 0x42c8a0
42c892: xchg rdi, rsi
42c895: nop word ptr cs:[rax + rax]
42c8a0: bsf rdx, rdx
42c8a4: movzx ecx, byte ptr [rsi + rdx]
42c8a8: movzx eax, byte ptr [rdi + rdx]
42c8ac: sub eax, ecx
42c8ae: ret 
42c8af: xor eax, eax
42c8b1: ret 
42c8b2: nop word ptr cs:[rax + rax]
42c8bd: nop dword ptr [rax]
42c8c0: movzx ecx, byte ptr [rsi]
42c8c3: movzx eax, byte ptr [rdi]
42c8c6: sub eax, ecx
42c8c8: ret 
42c8c9: nop dword ptr [rax]
42c8d0: endbr64 
42c8d4: mov eax, edi
42c8d6: xor edx, edx
42c8d8: vpxor ymm7, ymm7, ymm7
42c8dc: or eax, esi
42c8de: and eax, 0xfff
42c8e3: cmp eax, 0xf80
42c8e8: jg 0x42cc40
42c8ee: vmovdqu ymm1, ymmword ptr [rdi]
42c8f2: vpcmpeqb ymm0, ymm1, ymmword ptr [rsi]
42c8f6: vpminub ymm0, ymm0, ymm1
42c8fa: vpcmpeqb ymm0, ymm0, ymm7
42c8fe: vpmovmskb ecx, ymm0
42c902: test ecx, ecx
42c904: je 0x42c980
42c906: tzcnt edx, ecx
42c90a: movzx eax, byte ptr [rdi + rdx]
42c90e: movzx edx, byte ptr [rsi + rdx]
42c912: sub eax, edx
42c914: vzeroupper 
42c917: ret 
42c918: nop dword ptr [rax + rax]
42c920: tzcnt edx, ecx
42c924: movzx eax, byte ptr [rdi + rdx + 0x20]
42c929: movzx edx, byte ptr [rsi + rdx + 0x20]
42c92e: sub eax, edx
42c930: vzeroupper 
42c933: ret 
42c934: nop word ptr cs:[rax + rax]
42c93f: nop 
42c940: tzcnt edx, ecx
42c944: movzx eax, byte ptr [rdi + rdx + 0x40]
42c949: movzx edx, byte ptr [rsi + rdx + 0x40]
42c94e: sub eax, edx
42c950: vzeroupper 
42c953: ret 
42c954: nop word ptr cs:[rax + rax]
42c95f: nop 
42c960: tzcnt edx, ecx
42c964: movzx eax, byte ptr [rdi + rdx + 0x60]
42c969: movzx edx, byte ptr [rsi + rdx + 0x60]
42c96e: sub eax, edx
42c970: vzeroupper 
42c973: ret 
42c974: nop word ptr cs:[rax + rax]
42c97f: nop 
42c980: vmovdqu ymm6, ymmword ptr [rdi + 0x20]
42c985: vpcmpeqb ymm3, ymm6, ymmword ptr [rsi + 0x20]
42c98a: vpminub ymm3, ymm3, ymm6
42c98e: vpcmpeqb ymm3, ymm3, ymm7
42c992: vpmovmskb ecx, ymm3
42c996: test ecx, ecx
42c998: jne 0x42c920
42c99a: vmovdqu ymm5, ymmword ptr [rdi + 0x40]
42c99f: vmovdqu ymm4, ymmword ptr [rdi + 0x60]
42c9a4: vmovdqu ymm0, ymmword ptr [rsi + 0x60]
42c9a9: vpcmpeqb ymm2, ymm5, ymmword ptr [rsi + 0x40]
42c9ae: vpminub ymm2, ymm2, ymm5
42c9b2: vpcmpeqb ymm0, ymm0, ymm4
42c9b6: vpcmpeqb ymm2, ymm2, ymm7
42c9ba: vpmovmskb ecx, ymm2
42c9be: test ecx, ecx
42c9c0: jne 0x42c940
42c9c6: vpminub ymm0, ymm0, ymm4
42c9ca: vpcmpeqb ymm0, ymm0, ymm7
42c9ce: vpmovmskb ecx, ymm0
42c9d2: test ecx, ecx
42c9d4: jne 0x42c960
42c9d6: lea rdx, [rdi + 0x80]
42c9dd: mov ecx, 0x1000
42c9e2: and rdx, 0xffffffffffffff80
42c9e6: sub rdx, rdi
42c9e9: lea rax, [rdi + rdx]
42c9ed: add rdx, rsi
42c9f0: mov rsi, rdx
42c9f3: and esi, 0xfff
42c9f9: sub rcx, rsi
42c9fc: shr rcx, 7
42ca00: mov esi, ecx
42ca02: jmp 0x42ca1d
42ca04: nop word ptr cs:[rax + rax]
42ca0f: nop 
42ca10: add rax, 0x80
42ca16: add rdx, 0x80
42ca1d: test esi, esi
42ca1f: lea esi, [esi - 1]
42ca23: je 0x42cb00
42ca29: vmovdqa ymm0, ymmword ptr [rax]
42ca2d: vmovdqa ymm3, ymmword ptr [rax + 0x20]
42ca32: vpcmpeqb ymm4, ymm0, ymmword ptr [rdx]
42ca36: vpcmpeqb ymm1, ymm3, ymmword ptr [rdx + 0x20]
42ca3b: vpminub ymm4, ymm4, ymm0
42ca3f: vpminub ymm1, ymm1, ymm3
42ca43: vmovdqa ymm2, ymmword ptr [rax + 0x40]
42ca48: vpminub ymm0, ymm4, ymm1
42ca4c: vmovdqa ymm3, ymmword ptr [rax + 0x60]
42ca51: vpcmpeqb ymm5, ymm2, ymmword ptr [rdx + 0x40]
42ca56: vpcmpeqb ymm6, ymm3, ymmword ptr [rdx + 0x60]
42ca5b: vpminub ymm5, ymm5, ymm2
42ca5f: vpminub ymm6, ymm6, ymm3
42ca63: vpminub ymm0, ymm0, ymm5
42ca67: vpminub ymm0, ymm0, ymm6
42ca6b: vpcmpeqb ymm0, ymm0, ymm7
42ca6f: vpmovmskb ecx, ymm0
42ca73: test ecx, ecx
42ca75: je 0x42ca10
42ca77: vpcmpeqb ymm0, ymm4, ymm7
42ca7b: vpmovmskb edi, ymm0
42ca7f: test edi, edi
42ca81: je 0x42caa0
42ca83: tzcnt ecx, edi
42ca87: movzx eax, byte ptr [rax + rcx]
42ca8b: movzx edx, byte ptr [rdx + rcx]
42ca8f: sub eax, edx
42ca91: vzeroupper 
42ca94: ret 
42ca95: nop word ptr cs:[rax + rax]
42caa0: vpcmpeqb ymm1, ymm1, ymm7
42caa4: vpmovmskb ecx, ymm1
42caa8: test ecx, ecx
42caaa: je 0x42cac0
42caac: tzcnt edi, ecx
42cab0: movzx eax, byte ptr [rax + rdi + 0x20]
42cab5: movzx edx, byte ptr [rdx + rdi + 0x20]
42caba: sub eax, edx
42cabc: vzeroupper 
42cabf: ret 
42cac0: vpcmpeqb ymm5, ymm5, ymm7
42cac4: vpmovmskb ecx, ymm5
42cac8: test ecx, ecx
42caca: je 0x42cae0
42cacc: tzcnt edi, ecx
42cad0: movzx eax, byte ptr [rax + rdi + 0x40]
42cad5: movzx edx, byte ptr [rdx + rdi + 0x40]
42cada: sub eax, edx
42cadc: vzeroupper 
42cadf: ret 
42cae0: vpcmpeqb ymm6, ymm6, ymm7
42cae4: vpmovmskb esi, ymm6
42cae8: tzcnt ecx, esi
42caec: movzx eax, byte ptr [rax + rcx + 0x60]
42caf1: movzx edx, byte ptr [rdx + rcx + 0x60]
42caf6: sub eax, edx
42caf8: vzeroupper 
42cafb: ret 
42cafc: nop dword ptr [rax]
42cb00: xor r10d, r10d
42cb03: mov rcx, rdx
42cb06: and ecx, 0x7f
42cb09: sub r10, rcx
42cb0c: cmp ecx, 0x40
42cb0f: jge 0x42cb70
42cb11: vmovdqu ymm2, ymmword ptr [rax + r10]
42cb17: vmovdqu ymm3, ymmword ptr [rax + r10 + 0x20]
42cb1e: vpcmpeqb ymm0, ymm2, ymmword ptr [rdx + r10]
42cb24: vpcmpeqb ymm1, ymm3, ymmword ptr [rdx + r10 + 0x20]
42cb2b: vpminub ymm0, ymm0, ymm2
42cb2f: vpminub ymm1, ymm1, ymm3
42cb33: vpcmpeqb ymm0, ymm0, ymm7
42cb37: vpcmpeqb ymm1, ymm1, ymm7
42cb3b: vpmovmskb edi, ymm0
42cb3f: vpmovmskb esi, ymm1
42cb43: shl rsi, 0x20
42cb47: xor rdi, rsi
42cb4a: shr rdi, cl
42cb4d: test rdi, rdi
42cb50: je 0x42cb70
42cb52: tzcnt rcx, rdi
42cb57: movzx eax, byte ptr [rax + rcx]
42cb5b: movzx edx, byte ptr [rdx + rcx]
42cb5f: sub eax, edx
42cb61: vzeroupper 
42cb64: ret 
42cb65: nop word ptr cs:[rax + rax]
42cb70: vmovdqu ymm2, ymmword ptr [rax + r10 + 0x40]
42cb77: vmovdqu ymm3, ymmword ptr [rax + r10 + 0x60]
42cb7e: vpcmpeqb ymm5, ymm2, ymmword ptr [rdx + r10 + 0x40]
42cb85: vpminub ymm5, ymm5, ymm2
42cb89: vpcmpeqb ymm6, ymm3, ymmword ptr [rdx + r10 + 0x60]
42cb90: vpcmpeqb ymm5, ymm5, ymm7
42cb94: vpminub ymm6, ymm6, ymm3
42cb98: vpcmpeqb ymm6, ymm6, ymm7
42cb9c: vpmovmskb edi, ymm5
42cba0: vpmovmskb esi, ymm6
42cba4: shl rsi, 0x20
42cba8: xor rdi, rsi
42cbab: xor r8d, r8d
42cbae: sub ecx, 0x40
42cbb1: jle 0x42cbb9
42cbb3: shr rdi, cl
42cbb6: mov r8d, ecx
42cbb9: mov esi, 0x1f
42cbbe: test rdi, rdi
42cbc1: je 0x42ca29
42cbc7: tzcnt rcx, rdi
42cbcc: add rcx, r10
42cbcf: add rcx, r8
42cbd2: movzx eax, byte ptr [rax + rcx + 0x40]
42cbd7: movzx edx, byte ptr [rdx + rcx + 0x40]
42cbdc: sub eax, edx
42cbde: vzeroupper 
42cbe1: ret 
42cbe2: nop word ptr cs:[rax + rax]
42cbed: nop dword ptr [rax]
42cbf0: sub eax, ecx
42cbf2: jne 0x42cc11
42cbf4: add edx, 1
42cbf7: cmp edx, 0x80
42cbfd: je 0x42c9d6
42cc03: movzx eax, byte ptr [rdi + rdx]
42cc07: movzx ecx, byte ptr [rsi + rdx]
42cc0b: test eax, eax
42cc0d: jne 0x42cbf0
42cc0f: sub eax, ecx
42cc11: vzeroupper 
42cc14: ret 
42cc15: nop word ptr cs:[rax + rax]
42cc20: add rdi, rdx
42cc23: add rsi, rdx
42cc26: tzcnt edx, ecx
42cc2a: movzx eax, byte ptr [rdi + rdx]
42cc2e: movzx edx, byte ptr [rsi + rdx]
42cc32: sub eax, edx
42cc34: vzeroupper 
42cc37: ret 
42cc38: nop dword ptr [rax + rax]
42cc40: cmp eax, 0xfe0
42cc45: jg 0x42cc6e
42cc47: vmovdqu ymm1, ymmword ptr [rdi + rdx]
42cc4c: vpcmpeqb ymm0, ymm1, ymmword ptr [rsi + rdx]
42cc51: vpminub ymm0, ymm0, ymm1
42cc55: vpcmpeqb ymm0, ymm0, ymm7
42cc59: vpmovmskb ecx, ymm0
42cc5d: test ecx, ecx
42cc5f: jne 0x42cc20
42cc61: add edx, 0x20
42cc64: add eax, 0x20
42cc67: cmp eax, 0xfe0
42cc6c: jle 0x42cc47
42cc6e: cmp eax, 0xff0
42cc73: jg 0x42cc95
42cc75: vmovdqu xmm1, xmmword ptr [rdi + rdx]
42cc7a: vpcmpeqb xmm0, xmm1, xmmword ptr [rsi + rdx]
42cc7f: vpminub xmm0, xmm0, xmm1
42cc83: vpcmpeqb xmm0, xmm0, xmm7
42cc87: vpmovmskb ecx, xmm0
42cc8b: test ecx, ecx
42cc8d: jne 0x42cc20
42cc8f: add edx, 0x10
42cc92: add eax, 0x10
42cc95: cmp eax, 0xff8
42cc9a: jg 0x42ccca
42cc9c: vmovq xmm1, qword ptr [rdi + rdx]
42cca1: vmovq xmm0, qword ptr [rsi + rdx]
42cca6: vpcmpeqb xmm0, xmm1, xmm0
42ccaa: vpminub xmm0, xmm0, xmm1
42ccae: vpcmpeqb xmm0, xmm0, xmm7
42ccb2: vpmovmskb ecx, xmm0
42ccb6: and ecx, 0xff
42ccbc: test ecx, ecx
42ccbe: jne 0x42cc20
42ccc4: add edx, 8
42ccc7: add eax, 8
42ccca: cmp eax, 0xffc
42cccf: jg 0x42ccf9
42ccd1: vmovd xmm1, dword ptr [rdi + rdx]
42ccd6: vmovd xmm0, dword ptr [rsi + rdx]
42ccdb: vpcmpeqb xmm0, xmm1, xmm0
42ccdf: vpminub xmm0, xmm0, xmm1
42cce3: vpcmpeqb xmm0, xmm0, xmm7
42cce7: vpmovmskb ecx, xmm0
42cceb: and ecx, 0xf
42ccee: test ecx, ecx
42ccf0: jne 0x42cc20
42ccf6: add edx, 4
42ccf9: movzx eax, byte ptr [rdi + rdx]
42ccfd: movzx ecx, byte ptr [rsi + rdx]
42cd01: test eax, eax
42cd03: jne 0x42cbf0
42cd09: sub eax, ecx
42cd0b: vzeroupper 
42cd0e: ret 
42cd0f: nop 
42cd10: endbr64 
42cd14: test rdx, rdx
42cd17: je 0x42e554
42cd1d: cmp rdx, 1
42cd21: je 0x42e560
42cd27: mov r11, rdx
42cd2a: mov ecx, esi
42cd2c: mov eax, edi
42cd2e: and rcx, 0x3f
42cd32: and rax, 0x3f
42cd36: cmp ecx, 0x30
42cd39: ja 0x42cd90
42cd3b: cmp eax, 0x30
42cd3e: ja 0x42cd90
42cd40: movlpd xmm1, qword ptr [rdi]
42cd44: movlpd xmm2, qword ptr [rsi]
42cd48: movhpd xmm1, qword ptr [rdi + 8]
42cd4d: movhpd xmm2, qword ptr [rsi + 8]
42cd52: pxor xmm0, xmm0
42cd56: pcmpeqb xmm0, xmm1
42cd5a: pcmpeqb xmm1, xmm2
42cd5e: psubb xmm1, xmm0
42cd62: pmovmskb edx, xmm1
42cd66: sub edx, 0xffff
42cd6c: jne 0x42e540
42cd72: sub r11, 0x10
42cd76: jbe 0x42e554
42cd7c: add rsi, 0x10
42cd80: add rdi, 0x10
42cd84: nop word ptr cs:[rax + rax]
42cd8f: nop 
42cd90: and rsi, 0xfffffffffffffff0
42cd94: and rdi, 0xfffffffffffffff0
42cd98: mov edx, 0xffff
42cd9d: xor r8d, r8d
42cda0: and ecx, 0xf
42cda3: and eax, 0xf
42cda6: cmp ecx, eax
42cda8: je 0x42cdd0
42cdaa: ja 0x42cdb3
42cdac: mov r8d, edx
42cdaf: xchg ecx, eax
42cdb0: xchg rdi, rsi
42cdb3: lea r9, [rax + 0xf]
42cdb7: sub r9, rcx
42cdba: lea r10, [rip + 0x6a57f]
42cdc1: movsxd r9, dword ptr [r10 + r9*4]
42cdc5: lea r10, [r10 + r9]
42cdc9: notrack jmp r10
42cdcd: nop dword ptr [rax]
42cdd0: movdqa xmm1, xmmword ptr [rsi]
42cdd4: pxor xmm0, xmm0
42cdd8: pcmpeqb xmm0, xmm1
42cddc: pcmpeqb xmm1, xmmword ptr [rdi]
42cde0: psubb xmm1, xmm0
42cde4: pmovmskb r9d, xmm1
42cde9: shr edx, cl
42cdeb: shr r9d, cl
42cdee: sub edx, r9d
42cdf1: jne 0x42e525
42cdf7: lea r9, [rcx + r11 - 0x10]
42cdfc: cmp r11, r9
42cdff: jb 0x42e554
42ce05: test r9, r9
42ce08: je 0x42e554
42ce0e: mov r11, r9
42ce11: mov rcx, 0x10
42ce18: mov r9, 0x10
42ce1f: pxor xmm0, xmm0
42ce23: nop word ptr cs:[rax + rax]
42ce2e: nop 
42ce30: movdqa xmm1, xmmword ptr [rsi + rcx]
42ce35: movdqa xmm2, xmmword ptr [rdi + rcx]
42ce3a: pcmpeqb xmm0, xmm1
42ce3e: pcmpeqb xmm1, xmm2
42ce42: psubb xmm1, xmm0
42ce46: pmovmskb edx, xmm1
42ce4a: sub edx, 0xffff
42ce50: jne 0x42e520
42ce56: sub r11, 0x10
42ce5a: jbe 0x42e554
42ce60: add rcx, 0x10
42ce64: movdqa xmm1, xmmword ptr [rsi + rcx]
42ce69: movdqa xmm2, xmmword ptr [rdi + rcx]
42ce6e: pcmpeqb xmm0, xmm1
42ce72: pcmpeqb xmm1, xmm2
42ce76: psubb xmm1, xmm0
42ce7a: pmovmskb edx, xmm1
42ce7e: sub edx, 0xffff
42ce84: jne 0x42e520
42ce8a: sub r11, 0x10
42ce8e: jbe 0x42e554
42ce94: add rcx, 0x10
42ce98: jmp 0x42ce30
42ce9a: nop word ptr [rax + rax]
42cea0: pxor xmm0, xmm0
42cea4: movdqa xmm2, xmmword ptr [rdi]
42cea8: movdqa xmm1, xmmword ptr [rsi]
42ceac: pcmpeqb xmm0, xmm1
42ceb0: pslldq xmm2, 0xf
42ceb5: pcmpeqb xmm2, xmm1
42ceb9: psubb xmm2, xmm0
42cebd: pmovmskb r9d, xmm2
42cec2: shr edx, cl
42cec4: shr r9d, cl
42cec7: sub edx, r9d
42ceca: jne 0x42e525
42ced0: movdqa xmm3, xmmword ptr [rdi]
42ced4: lea r9, [rcx + r11 - 0x10]
42ced9: cmp r11, r9
42cedc: jb 0x42e554
42cee2: test r9, r9
42cee5: je 0x42e554
42ceeb: mov r11, r9
42ceee: pxor xmm0, xmm0
42cef2: mov rcx, 0x10
42cef9: mov r9d, 1
42ceff: lea r10, [rdi + 1]
42cf03: and r10, 0xfff
42cf0a: sub r10, 0x1000
42cf11: nop word ptr cs:[rax + rax]
42cf1c: nop dword ptr [rax]
42cf20: add r10, 0x10
42cf24: jg 0x42cfd0
42cf2a: movdqa xmm1, xmmword ptr [rsi + rcx]
42cf2f: movdqa xmm2, xmmword ptr [rdi + rcx]
42cf34: movdqa xmm4, xmm2
42cf38: psrldq xmm3, 1
42cf3d: pslldq xmm2, 0xf
42cf42: por xmm2, xmm3
42cf46: pcmpeqb xmm0, xmm1
42cf4a: pcmpeqb xmm1, xmm2
42cf4e: psubb xmm1, xmm0
42cf52: pmovmskb edx, xmm1
42cf56: sub edx, 0xffff
42cf5c: jne 0x42e520
42cf62: sub r11, 0x10
42cf66: jbe 0x42e554
42cf6c: add rcx, 0x10
42cf70: movdqa xmm3, xmm4
42cf74: add r10, 0x10
42cf78: jg 0x42cfd0
42cf7a: movdqa xmm1, xmmword ptr [rsi + rcx]
42cf7f: movdqa xmm2, xmmword ptr [rdi + rcx]
42cf84: movdqa xmm4, xmm2
42cf88: psrldq xmm3, 1
42cf8d: pslldq xmm2, 0xf
42cf92: por xmm2, xmm3
42cf96: pcmpeqb xmm0, xmm1
42cf9a: pcmpeqb xmm1, xmm2
42cf9e: psubb xmm1, xmm0
42cfa2: pmovmskb edx, xmm1
42cfa6: sub edx, 0xffff
42cfac: jne 0x42e520
42cfb2: sub r11, 0x10
42cfb6: jbe 0x42e554
42cfbc: add rcx, 0x10
42cfc0: movdqa xmm3, xmm4
42cfc4: jmp 0x42cf20
42cfc9: nop dword ptr [rax]
42cfd0: pcmpeqb xmm0, xmm3
42cfd4: pmovmskb edx, xmm0
42cfd8: test edx, 0xfffe
42cfde: jne 0x42d000
42cfe0: cmp r11, 0xf
42cfe4: jbe 0x42d000
42cfe6: pxor xmm0, xmm0
42cfea: sub r10, 0x1000
42cff1: jmp 0x42cf2a
42cff6: nop word ptr cs:[rax + rax]
42d000: movdqa xmm1, xmmword ptr [rsi + rcx]
42d005: psrldq xmm0, 1
42d00a: psrldq xmm3, 1
42d00f: jmp 0x42e510
42d014: nop word ptr cs:[rax + rax]
42d01f: nop 
42d020: pxor xmm0, xmm0
42d024: movdqa xmm2, xmmword ptr [rdi]
42d028: movdqa xmm1, xmmword ptr [rsi]
42d02c: pcmpeqb xmm0, xmm1
42d030: pslldq xmm2, 0xe
42d035: pcmpeqb xmm2, xmm1
42d039: psubb xmm2, xmm0
42d03d: pmovmskb r9d, xmm2
42d042: shr edx, cl
42d044: shr r9d, cl
42d047: sub edx, r9d
42d04a: jne 0x42e525
42d050: movdqa xmm3, xmmword ptr [rdi]
42d054: lea r9, [rcx + r11 - 0x10]
42d059: cmp r11, r9
42d05c: jb 0x42e554
42d062: test r9, r9
42d065: je 0x42e554
42d06b: mov r11, r9
42d06e: pxor xmm0, xmm0
42d072: mov rcx, 0x10
42d079: mov r9d, 2
42d07f: lea r10, [rdi + 2]
42d083: and r10, 0xfff
42d08a: sub r10, 0x1000
42d091: nop word ptr cs:[rax + rax]
42d09c: nop dword ptr [rax]
42d0a0: add r10, 0x10
42d0a4: jg 0x42d150
42d0aa: movdqa xmm1, xmmword ptr [rsi + rcx]
42d0af: movdqa xmm2, xmmword ptr [rdi + rcx]
42d0b4: movdqa xmm4, xmm2
42d0b8: psrldq xmm3, 2
42d0bd: pslldq xmm2, 0xe
42d0c2: por xmm2, xmm3
42d0c6: pcmpeqb xmm0, xmm1
42d0ca: pcmpeqb xmm1, xmm2
42d0ce: psubb xmm1, xmm0
42d0d2: pmovmskb edx, xmm1
42d0d6: sub edx, 0xffff
42d0dc: jne 0x42e520
42d0e2: sub r11, 0x10
42d0e6: jbe 0x42e554
42d0ec: add rcx, 0x10
42d0f0: movdqa xmm3, xmm4
42d0f4: add r10, 0x10
42d0f8: jg 0x42d150
42d0fa: movdqa xmm1, xmmword ptr [rsi + rcx]
42d0ff: movdqa xmm2, xmmword ptr [rdi + rcx]
42d104: movdqa xmm4, xmm2
42d108: psrldq xmm3, 2
42d10d: pslldq xmm2, 0xe
42d112: por xmm2, xmm3
42d116: pcmpeqb xmm0, xmm1
42d11a: pcmpeqb xmm1, xmm2
42d11e: psubb xmm1, xmm0
42d122: pmovmskb edx, xmm1
42d126: sub edx, 0xffff
42d12c: jne 0x42e520
42d132: sub r11, 0x10
42d136: jbe 0x42e554
42d13c: add rcx, 0x10
42d140: movdqa xmm3, xmm4
42d144: jmp 0x42d0a0
42d149: nop dword ptr [rax]
42d150: pcmpeqb xmm0, xmm3
42d154: pmovmskb edx, xmm0
42d158: test edx, 0xfffc
42d15e: jne 0x42d180
42d160: cmp r11, 0xe
42d164: jbe 0x42d180
42d166: pxor xmm0, xmm0
42d16a: sub r10, 0x1000
42d171: jmp 0x42d0aa
42d176: nop word ptr cs:[rax + rax]
42d180: movdqa xmm1, xmmword ptr [rsi + rcx]
42d185: psrldq xmm0, 2
42d18a: psrldq xmm3, 2
42d18f: jmp 0x42e510
42d194: nop word ptr cs:[rax + rax]
42d19f: nop 
42d1a0: pxor xmm0, xmm0
42d1a4: movdqa xmm2, xmmword ptr [rdi]
42d1a8: movdqa xmm1, xmmword ptr [rsi]
42d1ac: pcmpeqb xmm0, xmm1
42d1b0: pslldq xmm2, 0xd
42d1b5: pcmpeqb xmm2, xmm1
42d1b9: psubb xmm2, xmm0
42d1bd: pmovmskb r9d, xmm2
42d1c2: shr edx, cl
42d1c4: shr r9d, cl
42d1c7: sub edx, r9d
42d1ca: jne 0x42e525
42d1d0: movdqa xmm3, xmmword ptr [rdi]
42d1d4: lea r9, [rcx + r11 - 0x10]
42d1d9: cmp r11, r9
42d1dc: jb 0x42e554
42d1e2: test r9, r9
42d1e5: je 0x42e554
42d1eb: mov r11, r9
42d1ee: pxor xmm0, xmm0
42d1f2: mov rcx, 0x10
42d1f9: mov r9d, 3
42d1ff: lea r10, [rdi + 3]
42d203: and r10, 0xfff
42d20a: sub r10, 0x1000
42d211: nop word ptr cs:[rax + rax]
42d21c: nop dword ptr [rax]
42d220: add r10, 0x10
42d224: jg 0x42d2d0
42d22a: movdqa xmm1, xmmword ptr [rsi + rcx]
42d22f: movdqa xmm2, xmmword ptr [rdi + rcx]
42d234: movdqa xmm4, xmm2
42d238: psrldq xmm3, 3
42d23d: pslldq xmm2, 0xd
42d242: por xmm2, xmm3
42d246: pcmpeqb xmm0, xmm1
42d24a: pcmpeqb xmm1, xmm2
42d24e: psubb xmm1, xmm0
42d252: pmovmskb edx, xmm1
42d256: sub edx, 0xffff
42d25c: jne 0x42e520
42d262: sub r11, 0x10
42d266: jbe 0x42e554
42d26c: add rcx, 0x10
42d270: movdqa xmm3, xmm4
42d274: add r10, 0x10
42d278: jg 0x42d2d0
42d27a: movdqa xmm1, xmmword ptr [rsi + rcx]
42d27f: movdqa xmm2, xmmword ptr [rdi + rcx]
42d284: movdqa xmm4, xmm2
42d288: psrldq xmm3, 3
42d28d: pslldq xmm2, 0xd
42d292: por xmm2, xmm3
42d296: pcmpeqb xmm0, xmm1
42d29a: pcmpeqb xmm1, xmm2
42d29e: psubb xmm1, xmm0
42d2a2: pmovmskb edx, xmm1
42d2a6: sub edx, 0xffff
42d2ac: jne 0x42e520
42d2b2: sub r11, 0x10
42d2b6: jbe 0x42e554
42d2bc: add rcx, 0x10
42d2c0: movdqa xmm3, xmm4
42d2c4: jmp 0x42d220
42d2c9: nop dword ptr [rax]
42d2d0: pcmpeqb xmm0, xmm3
42d2d4: pmovmskb edx, xmm0
42d2d8: test edx, 0xfff8
42d2de: jne 0x42d300
42d2e0: cmp r11, 0xd
42d2e4: jbe 0x42d300
42d2e6: pxor xmm0, xmm0
42d2ea: sub r10, 0x1000
42d2f1: jmp 0x42d22a
42d2f6: nop word ptr cs:[rax + rax]
42d300: movdqa xmm1, xmmword ptr [rsi + rcx]
42d305: psrldq xmm0, 3
42d30a: psrldq xmm3, 3
42d30f: jmp 0x42e510
42d314: nop word ptr cs:[rax + rax]
42d31f: nop 
42d320: pxor xmm0, xmm0
42d324: movdqa xmm2, xmmword ptr [rdi]
42d328: movdqa xmm1, xmmword ptr [rsi]
42d32c: pcmpeqb xmm0, xmm1
42d330: pslldq xmm2, 0xc
42d335: pcmpeqb xmm2, xmm1
42d339: psubb xmm2, xmm0
42d33d: pmovmskb r9d, xmm2
42d342: shr edx, cl
42d344: shr r9d, cl
42d347: sub edx, r9d
42d34a: jne 0x42e525
42d350: movdqa xmm3, xmmword ptr [rdi]
42d354: lea r9, [rcx + r11 - 0x10]
42d359: cmp r11, r9
42d35c: jb 0x42e554
42d362: test r9, r9
42d365: je 0x42e554
42d36b: mov r11, r9
42d36e: pxor xmm0, xmm0
42d372: mov rcx, 0x10
42d379: mov r9d, 4
42d37f: lea r10, [rdi + 4]
42d383: and r10, 0xfff
42d38a: sub r10, 0x1000
42d391: nop word ptr cs:[rax + rax]
42d39c: nop dword ptr [rax]
42d3a0: add r10, 0x10
42d3a4: jg 0x42d450
42d3aa: movdqa xmm1, xmmword ptr [rsi + rcx]
42d3af: movdqa xmm2, xmmword ptr [rdi + rcx]
42d3b4: movdqa xmm4, xmm2
42d3b8: psrldq xmm3, 4
42d3bd: pslldq xmm2, 0xc
42d3c2: por xmm2, xmm3
42d3c6: pcmpeqb xmm0, xmm1
42d3ca: pcmpeqb xmm1, xmm2
42d3ce: psubb xmm1, xmm0
42d3d2: pmovmskb edx, xmm1
42d3d6: sub edx, 0xffff
42d3dc: jne 0x42e520
42d3e2: sub r11, 0x10
42d3e6: jbe 0x42e554
42d3ec: add rcx, 0x10
42d3f0: movdqa xmm3, xmm4
42d3f4: add r10, 0x10
42d3f8: jg 0x42d450
42d3fa: movdqa xmm1, xmmword ptr [rsi + rcx]
42d3ff: movdqa xmm2, xmmword ptr [rdi + rcx]
42d404: movdqa xmm4, xmm2
42d408: psrldq xmm3, 4
42d40d: pslldq xmm2, 0xc
42d412: por xmm2, xmm3
42d416: pcmpeqb xmm0, xmm1
42d41a: pcmpeqb xmm1, xmm2
42d41e: psubb xmm1, xmm0
42d422: pmovmskb edx, xmm1
42d426: sub edx, 0xffff
42d42c: jne 0x42e520
42d432: sub r11, 0x10
42d436: jbe 0x42e554
42d43c: add rcx, 0x10
42d440: movdqa xmm3, xmm4
42d444: jmp 0x42d3a0
42d449: nop dword ptr [rax]
42d450: pcmpeqb xmm0, xmm3
42d454: pmovmskb edx, xmm0
42d458: test edx, 0xfff0
42d45e: jne 0x42d480
42d460: cmp r11, 0xc
42d464: jbe 0x42d480
42d466: pxor xmm0, xmm0
42d46a: sub r10, 0x1000
42d471: jmp 0x42d3aa
42d476: nop word ptr cs:[rax + rax]
42d480: movdqa xmm1, xmmword ptr [rsi + rcx]
42d485: psrldq xmm0, 4
42d48a: psrldq xmm3, 4
42d48f: jmp 0x42e510
42d494: nop word ptr cs:[rax + rax]
42d49f: nop 
42d4a0: pxor xmm0, xmm0
42d4a4: movdqa xmm2, xmmword ptr [rdi]
42d4a8: movdqa xmm1, xmmword ptr [rsi]
42d4ac: pcmpeqb xmm0, xmm1
42d4b0: pslldq xmm2, 0xb
42d4b5: pcmpeqb xmm2, xmm1
42d4b9: psubb xmm2, xmm0
42d4bd: pmovmskb r9d, xmm2
42d4c2: shr edx, cl
42d4c4: shr r9d, cl
42d4c7: sub edx, r9d
42d4ca: jne 0x42e525
42d4d0: movdqa xmm3, xmmword ptr [rdi]
42d4d4: lea r9, [rcx + r11 - 0x10]
42d4d9: cmp r11, r9
42d4dc: jb 0x42e554
42d4e2: test r9, r9
42d4e5: je 0x42e554
42d4eb: mov r11, r9
42d4ee: pxor xmm0, xmm0
42d4f2: mov rcx, 0x10
42d4f9: mov r9d, 5
42d4ff: lea r10, [rdi + 5]
42d503: and r10, 0xfff
42d50a: sub r10, 0x1000
42d511: nop word ptr cs:[rax + rax]
42d51c: nop dword ptr [rax]
42d520: add r10, 0x10
42d524: jg 0x42d5d0
42d52a: movdqa xmm1, xmmword ptr [rsi + rcx]
42d52f: movdqa xmm2, xmmword ptr [rdi + rcx]
42d534: movdqa xmm4, xmm2
42d538: psrldq xmm3, 5
42d53d: pslldq xmm2, 0xb
42d542: por xmm2, xmm3
42d546: pcmpeqb xmm0, xmm1
42d54a: pcmpeqb xmm1, xmm2
42d54e: psubb xmm1, xmm0
42d552: pmovmskb edx, xmm1
42d556: sub edx, 0xffff
42d55c: jne 0x42e520
42d562: sub r11, 0x10
42d566: jbe 0x42e554
42d56c: add rcx, 0x10
42d570: movdqa xmm3, xmm4
42d574: add r10, 0x10
42d578: jg 0x42d5d0
42d57a: movdqa xmm1, xmmword ptr [rsi + rcx]
42d57f: movdqa xmm2, xmmword ptr [rdi + rcx]
42d584: movdqa xmm4, xmm2
42d588: psrldq xmm3, 5
42d58d: pslldq xmm2, 0xb
42d592: por xmm2, xmm3
42d596: pcmpeqb xmm0, xmm1
42d59a: pcmpeqb xmm1, xmm2
42d59e: psubb xmm1, xmm0
42d5a2: pmovmskb edx, xmm1
42d5a6: sub edx, 0xffff
42d5ac: jne 0x42e520
42d5b2: sub r11, 0x10
42d5b6: jbe 0x42e554
42d5bc: add rcx, 0x10
42d5c0: movdqa xmm3, xmm4
42d5c4: jmp 0x42d520
42d5c9: nop dword ptr [rax]
42d5d0: pcmpeqb xmm0, xmm3
42d5d4: pmovmskb edx, xmm0
42d5d8: test edx, 0xffe0
42d5de: jne 0x42d600
42d5e0: cmp r11, 0xb
42d5e4: jbe 0x42d600
42d5e6: pxor xmm0, xmm0
42d5ea: sub r10, 0x1000
42d5f1: jmp 0x42d52a
42d5f6: nop word ptr cs:[rax + rax]
42d600: movdqa xmm1, xmmword ptr [rsi + rcx]
42d605: psrldq xmm0, 5
42d60a: psrldq xmm3, 5
42d60f: jmp 0x42e510
42d614: nop word ptr cs:[rax + rax]
42d61f: nop 
42d620: pxor xmm0, xmm0
42d624: movdqa xmm2, xmmword ptr [rdi]
42d628: movdqa xmm1, xmmword ptr [rsi]
42d62c: pcmpeqb xmm0, xmm1
42d630: pslldq xmm2, 0xa
42d635: pcmpeqb xmm2, xmm1
42d639: psubb xmm2, xmm0
42d63d: pmovmskb r9d, xmm2
42d642: shr edx, cl
42d644: shr r9d, cl
42d647: sub edx, r9d
42d64a: jne 0x42e525
42d650: movdqa xmm3, xmmword ptr [rdi]
42d654: lea r9, [rcx + r11 - 0x10]
42d659: cmp r11, r9
42d65c: jb 0x42e554
42d662: test r9, r9
42d665: je 0x42e554
42d66b: mov r11, r9
42d66e: pxor xmm0, xmm0
42d672: mov rcx, 0x10
42d679: mov r9d, 6
42d67f: lea r10, [rdi + 6]
42d683: and r10, 0xfff
42d68a: sub r10, 0x1000
42d691: nop word ptr cs:[rax + rax]
42d69c: nop dword ptr [rax]
42d6a0: add r10, 0x10
42d6a4: jg 0x42d750
42d6aa: movdqa xmm1, xmmword ptr [rsi + rcx]
42d6af: movdqa xmm2, xmmword ptr [rdi + rcx]
42d6b4: movdqa xmm4, xmm2
42d6b8: psrldq xmm3, 6
42d6bd: pslldq xmm2, 0xa
42d6c2: por xmm2, xmm3
42d6c6: pcmpeqb xmm0, xmm1
42d6ca: pcmpeqb xmm1, xmm2
42d6ce: psubb xmm1, xmm0
42d6d2: pmovmskb edx, xmm1
42d6d6: sub edx, 0xffff
42d6dc: jne 0x42e520
42d6e2: sub r11, 0x10
42d6e6: jbe 0x42e554
42d6ec: add rcx, 0x10
42d6f0: movdqa xmm3, xmm4
42d6f4: add r10, 0x10
42d6f8: jg 0x42d750
42d6fa: movdqa xmm1, xmmword ptr [rsi + rcx]
42d6ff: movdqa xmm2, xmmword ptr [rdi + rcx]
42d704: movdqa xmm4, xmm2
42d708: psrldq xmm3, 6
42d70d: pslldq xmm2, 0xa
42d712: por xmm2, xmm3
42d716: pcmpeqb xmm0, xmm1
42d71a: pcmpeqb xmm1, xmm2
42d71e: psubb xmm1, xmm0
42d722: pmovmskb edx, xmm1
42d726: sub edx, 0xffff
42d72c: jne 0x42e520
42d732: sub r11, 0x10
42d736: jbe 0x42e554
42d73c: add rcx, 0x10
42d740: movdqa xmm3, xmm4
42d744: jmp 0x42d6a0
42d749: nop dword ptr [rax]
42d750: pcmpeqb xmm0, xmm3
42d754: pmovmskb edx, xmm0
42d758: test edx, 0xffc0
42d75e: jne 0x42d780
42d760: cmp r11, 0xa
42d764: jbe 0x42d780
42d766: pxor xmm0, xmm0
42d76a: sub r10, 0x1000
42d771: jmp 0x42d6aa
42d776: nop word ptr cs:[rax + rax]
42d780: movdqa xmm1, xmmword ptr [rsi + rcx]
42d785: psrldq xmm0, 6
42d78a: psrldq xmm3, 6
42d78f: jmp 0x42e510
42d794: nop word ptr cs:[rax + rax]
42d79f: nop 
42d7a0: pxor xmm0, xmm0
42d7a4: movdqa xmm2, xmmword ptr [rdi]
42d7a8: movdqa xmm1, xmmword ptr [rsi]
42d7ac: pcmpeqb xmm0, xmm1
42d7b0: pslldq xmm2, 9
42d7b5: pcmpeqb xmm2, xmm1
42d7b9: psubb xmm2, xmm0
42d7bd: pmovmskb r9d, xmm2
42d7c2: shr edx, cl
42d7c4: shr r9d, cl
42d7c7: sub edx, r9d
42d7ca: jne 0x42e525
42d7d0: movdqa xmm3, xmmword ptr [rdi]
42d7d4: lea r9, [rcx + r11 - 0x10]
42d7d9: cmp r11, r9
42d7dc: jb 0x42e554
42d7e2: test r9, r9
42d7e5: je 0x42e554
42d7eb: mov r11, r9
42d7ee: pxor xmm0, xmm0
42d7f2: mov rcx, 0x10
42d7f9: mov r9d, 7
42d7ff: lea r10, [rdi + 7]
42d803: and r10, 0xfff
42d80a: sub r10, 0x1000
42d811: nop word ptr cs:[rax + rax]
42d81c: nop dword ptr [rax]
42d820: add r10, 0x10
42d824: jg 0x42d8d0
42d82a: movdqa xmm1, xmmword ptr [rsi + rcx]
42d82f: movdqa xmm2, xmmword ptr [rdi + rcx]
42d834: movdqa xmm4, xmm2
42d838: psrldq xmm3, 7
42d83d: pslldq xmm2, 9
42d842: por xmm2, xmm3
42d846: pcmpeqb xmm0, xmm1
42d84a: pcmpeqb xmm1, xmm2
42d84e: psubb xmm1, xmm0
42d852: pmovmskb edx, xmm1
42d856: sub edx, 0xffff
42d85c: jne 0x42e520
42d862: sub r11, 0x10
42d866: jbe 0x42e554
42d86c: add rcx, 0x10
42d870: movdqa xmm3, xmm4
42d874: add r10, 0x10
42d878: jg 0x42d8d0
42d87a: movdqa xmm1, xmmword ptr [rsi + rcx]
42d87f: movdqa xmm2, xmmword ptr [rdi + rcx]
42d884: movdqa xmm4, xmm2
42d888: psrldq xmm3, 7
42d88d: pslldq xmm2, 9
42d892: por xmm2, xmm3
42d896: pcmpeqb xmm0, xmm1
42d89a: pcmpeqb xmm1, xmm2
42d89e: psubb xmm1, xmm0
42d8a2: pmovmskb edx, xmm1
42d8a6: sub edx, 0xffff
42d8ac: jne 0x42e520
42d8b2: sub r11, 0x10
42d8b6: jbe 0x42e554
42d8bc: add rcx, 0x10
42d8c0: movdqa xmm3, xmm4
42d8c4: jmp 0x42d820
42d8c9: nop dword ptr [rax]
42d8d0: pcmpeqb xmm0, xmm3
42d8d4: pmovmskb edx, xmm0
42d8d8: test edx, 0xff80
42d8de: jne 0x42d900
42d8e0: cmp r11, 9
42d8e4: jbe 0x42d900
42d8e6: pxor xmm0, xmm0
42d8ea: sub r10, 0x1000
42d8f1: jmp 0x42d82a
42d8f6: nop word ptr cs:[rax + rax]
42d900: movdqa xmm1, xmmword ptr [rsi + rcx]
42d905: psrldq xmm0, 7
42d90a: psrldq xmm3, 7
42d90f: jmp 0x42e510
42d914: nop word ptr cs:[rax + rax]
42d91f: nop 
42d920: pxor xmm0, xmm0
42d924: movdqa xmm2, xmmword ptr [rdi]
42d928: movdqa xmm1, xmmword ptr [rsi]
42d92c: pcmpeqb xmm0, xmm1
42d930: pslldq xmm2, 8
42d935: pcmpeqb xmm2, xmm1
42d939: psubb xmm2, xmm0
42d93d: pmovmskb r9d, xmm2
42d942: shr edx, cl
42d944: shr r9d, cl
42d947: sub edx, r9d
42d94a: jne 0x42e525
42d950: movdqa xmm3, xmmword ptr [rdi]
42d954: lea r9, [rcx + r11 - 0x10]
42d959: cmp r11, r9
42d95c: jb 0x42e554
42d962: test r9, r9
42d965: je 0x42e554
42d96b: mov r11, r9
42d96e: pxor xmm0, xmm0
42d972: mov rcx, 0x10
42d979: mov r9d, 8
42d97f: lea r10, [rdi + 8]
42d983: and r10, 0xfff
42d98a: sub r10, 0x1000
42d991: nop word ptr cs:[rax + rax]
42d99c: nop dword ptr [rax]
42d9a0: add r10, 0x10
42d9a4: jg 0x42da50
42d9aa: movdqa xmm1, xmmword ptr [rsi + rcx]
42d9af: movdqa xmm2, xmmword ptr [rdi + rcx]
42d9b4: movdqa xmm4, xmm2
42d9b8: psrldq xmm3, 8
42d9bd: pslldq xmm2, 8
42d9c2: por xmm2, xmm3
42d9c6: pcmpeqb xmm0, xmm1
42d9ca: pcmpeqb xmm1, xmm2
42d9ce: psubb xmm1, xmm0
42d9d2: pmovmskb edx, xmm1
42d9d6: sub edx, 0xffff
42d9dc: jne 0x42e520
42d9e2: sub r11, 0x10
42d9e6: jbe 0x42e554
42d9ec: add rcx, 0x10
42d9f0: movdqa xmm3, xmm4
42d9f4: add r10, 0x10
42d9f8: jg 0x42da50
42d9fa: movdqa xmm1, xmmword ptr [rsi + rcx]
42d9ff: movdqa xmm2, xmmword ptr [rdi + rcx]
42da04: movdqa xmm4, xmm2
42da08: psrldq xmm3, 8
42da0d: pslldq xmm2, 8
42da12: por xmm2, xmm3
42da16: pcmpeqb xmm0, xmm1
42da1a: pcmpeqb xmm1, xmm2
42da1e: psubb xmm1, xmm0
42da22: pmovmskb edx, xmm1
42da26: sub edx, 0xffff
42da2c: jne 0x42e520
42da32: sub r11, 0x10
42da36: jbe 0x42e554
42da3c: add rcx, 0x10
42da40: movdqa xmm3, xmm4
42da44: jmp 0x42d9a0
42da49: nop dword ptr [rax]
42da50: pcmpeqb xmm0, xmm3
42da54: pmovmskb edx, xmm0
42da58: test edx, 0xff00
42da5e: jne 0x42da80
42da60: cmp r11, 8
42da64: jbe 0x42da80
42da66: pxor xmm0, xmm0
42da6a: sub r10, 0x1000
42da71: jmp 0x42d9aa
42da76: nop word ptr cs:[rax + rax]
42da80: movdqa xmm1, xmmword ptr [rsi + rcx]
42da85: psrldq xmm0, 8
42da8a: psrldq xmm3, 8
42da8f: jmp 0x42e510
42da94: nop word ptr cs:[rax + rax]
42da9f: nop 
42daa0: pxor xmm0, xmm0
42daa4: movdqa xmm2, xmmword ptr [rdi]
42daa8: movdqa xmm1, xmmword ptr [rsi]
42daac: pcmpeqb xmm0, xmm1
42dab0: pslldq xmm2, 7
42dab5: pcmpeqb xmm2, xmm1
42dab9: psubb xmm2, xmm0
42dabd: pmovmskb r9d, xmm2
42dac2: shr edx, cl
42dac4: shr r9d, cl
42dac7: sub edx, r9d
42daca: jne 0x42e525
42dad0: movdqa xmm3, xmmword ptr [rdi]
42dad4: lea r9, [rcx + r11 - 0x10]
42dad9: cmp r11, r9
42dadc: jb 0x42e554
42dae2: test r9, r9
42dae5: je 0x42e554
42daeb: mov r11, r9
42daee: pxor xmm0, xmm0
42daf2: mov rcx, 0x10
42daf9: mov r9d, 9
42daff: lea r10, [rdi + 9]
42db03: and r10, 0xfff
42db0a: sub r10, 0x1000
42db11: nop word ptr cs:[rax + rax]
42db1c: nop dword ptr [rax]
42db20: add r10, 0x10
42db24: jg 0x42dbd0
42db2a: movdqa xmm1, xmmword ptr [rsi + rcx]
42db2f: movdqa xmm2, xmmword ptr [rdi + rcx]
42db34: movdqa xmm4, xmm2
42db38: psrldq xmm3, 9
42db3d: pslldq xmm2, 7
42db42: por xmm2, xmm3
42db46: pcmpeqb xmm0, xmm1
42db4a: pcmpeqb xmm1, xmm2
42db4e: psubb xmm1, xmm0
42db52: pmovmskb edx, xmm1
42db56: sub edx, 0xffff
42db5c: jne 0x42e520
42db62: sub r11, 0x10
42db66: jbe 0x42e554
42db6c: add rcx, 0x10
42db70: movdqa xmm3, xmm4
42db74: add r10, 0x10
42db78: jg 0x42dbd0
42db7a: movdqa xmm1, xmmword ptr [rsi + rcx]
42db7f: movdqa xmm2, xmmword ptr [rdi + rcx]
42db84: movdqa xmm4, xmm2
42db88: psrldq xmm3, 9
42db8d: pslldq xmm2, 7
42db92: por xmm2, xmm3
42db96: pcmpeqb xmm0, xmm1
42db9a: pcmpeqb xmm1, xmm2
42db9e: psubb xmm1, xmm0
42dba2: pmovmskb edx, xmm1
42dba6: sub edx, 0xffff
42dbac: jne 0x42e520
42dbb2: sub r11, 0x10
42dbb6: jbe 0x42e554
42dbbc: add rcx, 0x10
42dbc0: movdqa xmm3, xmm4
42dbc4: jmp 0x42db20
42dbc9: nop dword ptr [rax]
42dbd0: pcmpeqb xmm0, xmm3
42dbd4: pmovmskb edx, xmm0
42dbd8: test edx, 0xfe00
42dbde: jne 0x42dc00
42dbe0: cmp r11, 7
42dbe4: jbe 0x42dc00
42dbe6: pxor xmm0, xmm0
42dbea: sub r10, 0x1000
42dbf1: jmp 0x42db2a
42dbf6: nop word ptr cs:[rax + rax]
42dc00: movdqa xmm1, xmmword ptr [rsi + rcx]
42dc05: psrldq xmm0, 9
42dc0a: psrldq xmm3, 9
42dc0f: jmp 0x42e510
42dc14: nop word ptr cs:[rax + rax]
42dc1f: nop 
42dc20: pxor xmm0, xmm0
42dc24: movdqa xmm2, xmmword ptr [rdi]
42dc28: movdqa xmm1, xmmword ptr [rsi]
42dc2c: pcmpeqb xmm0, xmm1
42dc30: pslldq xmm2, 6
42dc35: pcmpeqb xmm2, xmm1
42dc39: psubb xmm2, xmm0
42dc3d: pmovmskb r9d, xmm2
42dc42: shr edx, cl
42dc44: shr r9d, cl
42dc47: sub edx, r9d
42dc4a: jne 0x42e525
42dc50: movdqa xmm3, xmmword ptr [rdi]
42dc54: lea r9, [rcx + r11 - 0x10]
42dc59: cmp r11, r9
42dc5c: jb 0x42e554
42dc62: test r9, r9
42dc65: je 0x42e554
42dc6b: mov r11, r9
42dc6e: pxor xmm0, xmm0
42dc72: mov rcx, 0x10
42dc79: mov r9d, 0xa
42dc7f: lea r10, [rdi + 0xa]
42dc83: and r10, 0xfff
42dc8a: sub r10, 0x1000
42dc91: nop word ptr cs:[rax + rax]
42dc9c: nop dword ptr [rax]
42dca0: add r10, 0x10
42dca4: jg 0x42dd50
42dcaa: movdqa xmm1, xmmword ptr [rsi + rcx]
42dcaf: movdqa xmm2, xmmword ptr [rdi + rcx]
42dcb4: movdqa xmm4, xmm2
42dcb8: psrldq xmm3, 0xa
42dcbd: pslldq xmm2, 6
42dcc2: por xmm2, xmm3
42dcc6: pcmpeqb xmm0, xmm1
42dcca: pcmpeqb xmm1, xmm2
42dcce: psubb xmm1, xmm0
42dcd2: pmovmskb edx, xmm1
42dcd6: sub edx, 0xffff
42dcdc: jne 0x42e520
42dce2: sub r11, 0x10
42dce6: jbe 0x42e554
42dcec: add rcx, 0x10
42dcf0: movdqa xmm3, xmm4
42dcf4: add r10, 0x10
42dcf8: jg 0x42dd50
42dcfa: movdqa xmm1, xmmword ptr [rsi + rcx]
42dcff: movdqa xmm2, xmmword ptr [rdi + rcx]
42dd04: movdqa xmm4, xmm2
42dd08: psrldq xmm3, 0xa
42dd0d: pslldq xmm2, 6
42dd12: por xmm2, xmm3
42dd16: pcmpeqb xmm0, xmm1
42dd1a: pcmpeqb xmm1, xmm2
42dd1e: psubb xmm1, xmm0
42dd22: pmovmskb edx, xmm1
42dd26: sub edx, 0xffff
42dd2c: jne 0x42e520
42dd32: sub r11, 0x10
42dd36: jbe 0x42e554
42dd3c: add rcx, 0x10
42dd40: movdqa xmm3, xmm4
42dd44: jmp 0x42dca0
42dd49: nop dword ptr [rax]
42dd50: pcmpeqb xmm0, xmm3
42dd54: pmovmskb edx, xmm0
42dd58: test edx, 0xfc00
42dd5e: jne 0x42dd80
42dd60: cmp r11, 6
42dd64: jbe 0x42dd80
42dd66: pxor xmm0, xmm0
42dd6a: sub r10, 0x1000
42dd71: jmp 0x42dcaa
42dd76: nop word ptr cs:[rax + rax]
42dd80: movdqa xmm1, xmmword ptr [rsi + rcx]
42dd85: psrldq xmm0, 0xa
42dd8a: psrldq xmm3, 0xa
42dd8f: jmp 0x42e510
42dd94: nop word ptr cs:[rax + rax]
42dd9f: nop 
42dda0: pxor xmm0, xmm0
42dda4: movdqa xmm2, xmmword ptr [rdi]
42dda8: movdqa xmm1, xmmword ptr [rsi]
42ddac: pcmpeqb xmm0, xmm1
42ddb0: pslldq xmm2, 5
42ddb5: pcmpeqb xmm2, xmm1
42ddb9: psubb xmm2, xmm0
42ddbd: pmovmskb r9d, xmm2
42ddc2: shr edx, cl
42ddc4: shr r9d, cl
42ddc7: sub edx, r9d
42ddca: jne 0x42e525
42ddd0: movdqa xmm3, xmmword ptr [rdi]
42ddd4: lea r9, [rcx + r11 - 0x10]
42ddd9: cmp r11, r9
42dddc: jb 0x42e554
42dde2: test r9, r9
42dde5: je 0x42e554
42ddeb: mov r11, r9
42ddee: pxor xmm0, xmm0
42ddf2: mov rcx, 0x10
42ddf9: mov r9d, 0xb
42ddff: lea r10, [rdi + 0xb]
42de03: and r10, 0xfff
42de0a: sub r10, 0x1000
42de11: nop word ptr cs:[rax + rax]
42de1c: nop dword ptr [rax]
42de20: add r10, 0x10
42de24: jg 0x42ded0
42de2a: movdqa xmm1, xmmword ptr [rsi + rcx]
42de2f: movdqa xmm2, xmmword ptr [rdi + rcx]
42de34: movdqa xmm4, xmm2
42de38: psrldq xmm3, 0xb
42de3d: pslldq xmm2, 5
42de42: por xmm2, xmm3
42de46: pcmpeqb xmm0, xmm1
42de4a: pcmpeqb xmm1, xmm2
42de4e: psubb xmm1, xmm0
42de52: pmovmskb edx, xmm1
42de56: sub edx, 0xffff
42de5c: jne 0x42e520
42de62: sub r11, 0x10
42de66: jbe 0x42e554
42de6c: add rcx, 0x10
42de70: movdqa xmm3, xmm4
42de74: add r10, 0x10
42de78: jg 0x42ded0
42de7a: movdqa xmm1, xmmword ptr [rsi + rcx]
42de7f: movdqa xmm2, xmmword ptr [rdi + rcx]
42de84: movdqa xmm4, xmm2
42de88: psrldq xmm3, 0xb
42de8d: pslldq xmm2, 5
42de92: por xmm2, xmm3
42de96: pcmpeqb xmm0, xmm1
42de9a: pcmpeqb xmm1, xmm2
42de9e: psubb xmm1, xmm0
42dea2: pmovmskb edx, xmm1
42dea6: sub edx, 0xffff
42deac: jne 0x42e520
42deb2: sub r11, 0x10
42deb6: jbe 0x42e554
42debc: add rcx, 0x10
42dec0: movdqa xmm3, xmm4
42dec4: jmp 0x42de20
42dec9: nop dword ptr [rax]
42ded0: pcmpeqb xmm0, xmm3
42ded4: pmovmskb edx, xmm0
42ded8: test edx, 0xf800
42dede: jne 0x42df00
42dee0: cmp r11, 5
42dee4: jbe 0x42df00
42dee6: pxor xmm0, xmm0
42deea: sub r10, 0x1000
42def1: jmp 0x42de2a
42def6: nop word ptr cs:[rax + rax]
42df00: movdqa xmm1, xmmword ptr [rsi + rcx]
42df05: psrldq xmm0, 0xb
42df0a: psrldq xmm3, 0xb
42df0f: jmp 0x42e510
42df14: nop word ptr cs:[rax + rax]
42df1f: nop 
42df20: pxor xmm0, xmm0
42df24: movdqa xmm2, xmmword ptr [rdi]
42df28: movdqa xmm1, xmmword ptr [rsi]
42df2c: pcmpeqb xmm0, xmm1
42df30: pslldq xmm2, 4
42df35: pcmpeqb xmm2, xmm1
42df39: psubb xmm2, xmm0
42df3d: pmovmskb r9d, xmm2
42df42: shr edx, cl
42df44: shr r9d, cl
42df47: sub edx, r9d
42df4a: jne 0x42e525
42df50: movdqa xmm3, xmmword ptr [rdi]
42df54: lea r9, [rcx + r11 - 0x10]
42df59: cmp r11, r9
42df5c: jb 0x42e554
42df62: test r9, r9
42df65: je 0x42e554
42df6b: mov r11, r9
42df6e: pxor xmm0, xmm0
42df72: mov rcx, 0x10
42df79: mov r9d, 0xc
42df7f: lea r10, [rdi + 0xc]
42df83: and r10, 0xfff
42df8a: sub r10, 0x1000
42df91: nop word ptr cs:[rax + rax]
42df9c: nop dword ptr [rax]
42dfa0: add r10, 0x10
42dfa4: jg 0x42e050
42dfaa: movdqa xmm1, xmmword ptr [rsi + rcx]
42dfaf: movdqa xmm2, xmmword ptr [rdi + rcx]
42dfb4: movdqa xmm4, xmm2
42dfb8: psrldq xmm3, 0xc
42dfbd: pslldq xmm2, 4
42dfc2: por xmm2, xmm3
42dfc6: pcmpeqb xmm0, xmm1
42dfca: pcmpeqb xmm1, xmm2
42dfce: psubb xmm1, xmm0
42dfd2: pmovmskb edx, xmm1
42dfd6: sub edx, 0xffff
42dfdc: jne 0x42e520
42dfe2: sub r11, 0x10
42dfe6: jbe 0x42e554
42dfec: add rcx, 0x10
42dff0: movdqa xmm3, xmm4
42dff4: add r10, 0x10
42dff8: jg 0x42e050
42dffa: movdqa xmm1, xmmword ptr [rsi + rcx]
42dfff: movdqa xmm2, xmmword ptr [rdi + rcx]
42e004: movdqa xmm4, xmm2
42e008: psrldq xmm3, 0xc
42e00d: pslldq xmm2, 4
42e012: por xmm2, xmm3
42e016: pcmpeqb xmm0, xmm1
42e01a: pcmpeqb xmm1, xmm2
42e01e: psubb xmm1, xmm0
42e022: pmovmskb edx, xmm1
42e026: sub edx, 0xffff
42e02c: jne 0x42e520
42e032: sub r11, 0x10
42e036: jbe 0x42e554
42e03c: add rcx, 0x10
42e040: movdqa xmm3, xmm4
42e044: jmp 0x42dfa0
42e049: nop dword ptr [rax]
42e050: pcmpeqb xmm0, xmm3
42e054: pmovmskb edx, xmm0
42e058: test edx, 0xf000
42e05e: jne 0x42e080
42e060: cmp r11, 4
42e064: jbe 0x42e080
42e066: pxor xmm0, xmm0
42e06a: sub r10, 0x1000
42e071: jmp 0x42dfaa
42e076: nop word ptr cs:[rax + rax]
42e080: movdqa xmm1, xmmword ptr [rsi + rcx]
42e085: psrldq xmm0, 0xc
42e08a: psrldq xmm3, 0xc
42e08f: jmp 0x42e510
42e094: nop word ptr cs:[rax + rax]
42e09f: nop 
42e0a0: pxor xmm0, xmm0
42e0a4: movdqa xmm2, xmmword ptr [rdi]
42e0a8: movdqa xmm1, xmmword ptr [rsi]
42e0ac: pcmpeqb xmm0, xmm1
42e0b0: pslldq xmm2, 3
42e0b5: pcmpeqb xmm2, xmm1
42e0b9: psubb xmm2, xmm0
42e0bd: pmovmskb r9d, xmm2
42e0c2: shr edx, cl
42e0c4: shr r9d, cl
42e0c7: sub edx, r9d
42e0ca: jne 0x42e525
42e0d0: movdqa xmm3, xmmword ptr [rdi]
42e0d4: lea r9, [rcx + r11 - 0x10]
42e0d9: cmp r11, r9
42e0dc: jb 0x42e554
42e0e2: test r9, r9
42e0e5: je 0x42e554
42e0eb: mov r11, r9
42e0ee: pxor xmm0, xmm0
42e0f2: mov rcx, 0x10
42e0f9: mov r9d, 0xd
42e0ff: lea r10, [rdi + 0xd]
42e103: and r10, 0xfff
42e10a: sub r10, 0x1000
42e111: nop word ptr cs:[rax + rax]
42e11c: nop dword ptr [rax]
42e120: add r10, 0x10
42e124: jg 0x42e1d0
42e12a: movdqa xmm1, xmmword ptr [rsi + rcx]
42e12f: movdqa xmm2, xmmword ptr [rdi + rcx]
42e134: movdqa xmm4, xmm2
42e138: psrldq xmm3, 0xd
42e13d: pslldq xmm2, 3
42e142: por xmm2, xmm3
42e146: pcmpeqb xmm0, xmm1
42e14a: pcmpeqb xmm1, xmm2
42e14e: psubb xmm1, xmm0
42e152: pmovmskb edx, xmm1
42e156: sub edx, 0xffff
42e15c: jne 0x42e520
42e162: sub r11, 0x10
42e166: jbe 0x42e554
42e16c: add rcx, 0x10
42e170: movdqa xmm3, xmm4
42e174: add r10, 0x10
42e178: jg 0x42e1d0
42e17a: movdqa xmm1, xmmword ptr [rsi + rcx]
42e17f: movdqa xmm2, xmmword ptr [rdi + rcx]
42e184: movdqa xmm4, xmm2
42e188: psrldq xmm3, 0xd
42e18d: pslldq xmm2, 3
42e192: por xmm2, xmm3
42e196: pcmpeqb xmm0, xmm1
42e19a: pcmpeqb xmm1, xmm2
42e19e: psubb xmm1, xmm0
42e1a2: pmovmskb edx, xmm1
42e1a6: sub edx, 0xffff
42e1ac: jne 0x42e520
42e1b2: sub r11, 0x10
42e1b6: jbe 0x42e554
42e1bc: add rcx, 0x10
42e1c0: movdqa xmm3, xmm4
42e1c4: jmp 0x42e120
42e1c9: nop dword ptr [rax]
42e1d0: pcmpeqb xmm0, xmm3
42e1d4: pmovmskb edx, xmm0
42e1d8: test edx, 0xe000
42e1de: jne 0x42e200
42e1e0: cmp r11, 3
42e1e4: jbe 0x42e200
42e1e6: pxor xmm0, xmm0
42e1ea: sub r10, 0x1000
42e1f1: jmp 0x42e12a
42e1f6: nop word ptr cs:[rax + rax]
42e200: movdqa xmm1, xmmword ptr [rsi + rcx]
42e205: psrldq xmm0, 0xd
42e20a: psrldq xmm3, 0xd
42e20f: jmp 0x42e510
42e214: nop word ptr cs:[rax + rax]
42e21f: nop 
42e220: pxor xmm0, xmm0
42e224: movdqa xmm2, xmmword ptr [rdi]
42e228: movdqa xmm1, xmmword ptr [rsi]
42e22c: pcmpeqb xmm0, xmm1
42e230: pslldq xmm2, 2
42e235: pcmpeqb xmm2, xmm1
42e239: psubb xmm2, xmm0
42e23d: pmovmskb r9d, xmm2
42e242: shr edx, cl
42e244: shr r9d, cl
42e247: sub edx, r9d
42e24a: jne 0x42e525
42e250: movdqa xmm3, xmmword ptr [rdi]
42e254: lea r9, [rcx + r11 - 0x10]
42e259: cmp r11, r9
42e25c: jb 0x42e554
42e262: test r9, r9
42e265: je 0x42e554
42e26b: mov r11, r9
42e26e: pxor xmm0, xmm0
42e272: mov rcx, 0x10
42e279: mov r9d, 0xe
42e27f: lea r10, [rdi + 0xe]
42e283: and r10, 0xfff
42e28a: sub r10, 0x1000
42e291: nop word ptr cs:[rax + rax]
42e29c: nop dword ptr [rax]
42e2a0: add r10, 0x10
42e2a4: jg 0x42e350
42e2aa: movdqa xmm1, xmmword ptr [rsi + rcx]
42e2af: movdqa xmm2, xmmword ptr [rdi + rcx]
42e2b4: movdqa xmm4, xmm2
42e2b8: psrldq xmm3, 0xe
42e2bd: pslldq xmm2, 2
42e2c2: por xmm2, xmm3
42e2c6: pcmpeqb xmm0, xmm1
42e2ca: pcmpeqb xmm1, xmm2
42e2ce: psubb xmm1, xmm0
42e2d2: pmovmskb edx, xmm1
42e2d6: sub edx, 0xffff
42e2dc: jne 0x42e520
42e2e2: sub r11, 0x10
42e2e6: jbe 0x42e554
42e2ec: add rcx, 0x10
42e2f0: movdqa xmm3, xmm4
42e2f4: add r10, 0x10
42e2f8: jg 0x42e350
42e2fa: movdqa xmm1, xmmword ptr [rsi + rcx]
42e2ff: movdqa xmm2, xmmword ptr [rdi + rcx]
42e304: movdqa xmm4, xmm2
42e308: psrldq xmm3, 0xe
42e30d: pslldq xmm2, 2
42e312: por xmm2, xmm3
42e316: pcmpeqb xmm0, xmm1
42e31a: pcmpeqb xmm1, xmm2
42e31e: psubb xmm1, xmm0
42e322: pmovmskb edx, xmm1
42e326: sub edx, 0xffff
42e32c: jne 0x42e520
42e332: sub r11, 0x10
42e336: jbe 0x42e554
42e33c: add rcx, 0x10
42e340: movdqa xmm3, xmm4
42e344: jmp 0x42e2a0
42e349: nop dword ptr [rax]
42e350: pcmpeqb xmm0, xmm3
42e354: pmovmskb edx, xmm0
42e358: test edx, 0xc000
42e35e: jne 0x42e380
42e360: cmp r11, 2
42e364: jbe 0x42e380
42e366: pxor xmm0, xmm0
42e36a: sub r10, 0x1000
42e371: jmp 0x42e2aa
42e376: nop word ptr cs:[rax + rax]
42e380: movdqa xmm1, xmmword ptr [rsi + rcx]
42e385: psrldq xmm0, 0xe
42e38a: psrldq xmm3, 0xe
42e38f: jmp 0x42e510
42e394: nop word ptr cs:[rax + rax]
42e39f: nop 
42e3a0: pxor xmm0, xmm0
42e3a4: movdqa xmm2, xmmword ptr [rdi]
42e3a8: movdqa xmm1, xmmword ptr [rsi]
42e3ac: pcmpeqb xmm0, xmm1
42e3b0: pslldq xmm2, 1
42e3b5: pcmpeqb xmm2, xmm1
42e3b9: psubb xmm2, xmm0
42e3bd: pmovmskb r9d, xmm2
42e3c2: shr edx, cl
42e3c4: shr r9d, cl
42e3c7: sub edx, r9d
42e3ca: jne 0x42e525
42e3d0: movdqa xmm3, xmmword ptr [rdi]
42e3d4: lea r9, [rcx + r11 - 0x10]
42e3d9: cmp r11, r9
42e3dc: jb 0x42e554
42e3e2: test r9, r9
42e3e5: je 0x42e554
42e3eb: mov r11, r9
42e3ee: pxor xmm0, xmm0
42e3f2: mov rcx, 0x10
42e3f9: mov r9d, 0xf
42e3ff: lea r10, [rdi + 0xf]
42e403: and r10, 0xfff
42e40a: sub r10, 0x1000
42e411: nop word ptr cs:[rax + rax]
42e41c: nop dword ptr [rax]
42e420: add r10, 0x10
42e424: jg 0x42e4d0
42e42a: movdqa xmm1, xmmword ptr [rsi + rcx]
42e42f: movdqa xmm2, xmmword ptr [rdi + rcx]
42e434: movdqa xmm4, xmm2
42e438: psrldq xmm3, 0xf
42e43d: pslldq xmm2, 1
42e442: por xmm2, xmm3
42e446: pcmpeqb xmm0, xmm1
42e44a: pcmpeqb xmm1, xmm2
42e44e: psubb xmm1, xmm0
42e452: pmovmskb edx, xmm1
42e456: sub edx, 0xffff
42e45c: jne 0x42e520
42e462: sub r11, 0x10
42e466: jbe 0x42e554
42e46c: add rcx, 0x10
42e470: movdqa xmm3, xmm4
42e474: add r10, 0x10
42e478: jg 0x42e4d0
42e47a: movdqa xmm1, xmmword ptr [rsi + rcx]
42e47f: movdqa xmm2, xmmword ptr [rdi + rcx]
42e484: movdqa xmm4, xmm2
42e488: psrldq xmm3, 0xf
42e48d: pslldq xmm2, 1
42e492: por xmm2, xmm3
42e496: pcmpeqb xmm0, xmm1
42e49a: pcmpeqb xmm1, xmm2
42e49e: psubb xmm1, xmm0
42e4a2: pmovmskb edx, xmm1
42e4a6: sub edx, 0xffff
42e4ac: jne 0x42e520
42e4ae: sub r11, 0x10
42e4b2: jbe 0x42e554
42e4b8: add rcx, 0x10
42e4bc: movdqa xmm3, xmm4
42e4c0: jmp 0x42e420
42e4c5: nop word ptr cs:[rax + rax]
42e4d0: pcmpeqb xmm0, xmm3
42e4d4: pmovmskb edx, xmm0
42e4d8: test edx, 0x8000
42e4de: jne 0x42e500
42e4e0: cmp r11, 1
42e4e4: jbe 0x42e500
42e4e6: pxor xmm0, xmm0
42e4ea: sub r10, 0x1000
42e4f1: jmp 0x42e42a
42e4f6: nop word ptr cs:[rax + rax]
42e500: movdqa xmm1, xmmword ptr [rsi + rcx]
42e505: psrldq xmm3, 0xf
42e50a: psrldq xmm0, 0xf
42e50f: nop 
42e510: pcmpeqb xmm1, xmm3
42e514: psubb xmm1, xmm0
42e518: pmovmskb edx, xmm1
42e51c: not edx
42e51e: nop 
42e520: lea rax, [r9 + rcx - 0x10]
42e525: lea rdi, [rdi + rax]
42e529: lea rsi, [rsi + rcx]
42e52d: test r8d, r8d
42e530: je 0x42e540
42e532: xchg rdi, rsi
42e535: nop word ptr cs:[rax + rax]
42e540: bsf rdx, rdx
42e544: sub r11, rdx
42e547: jbe 0x42e554
42e549: movzx ecx, byte ptr [rsi + rdx]
42e54d: movzx eax, byte ptr [rdi + rdx]
42e551: sub eax, ecx
42e553: ret 
42e554: xor eax, eax
42e556: ret 
42e557: nop word ptr [rax + rax]
42e560: movzx ecx, byte ptr [rsi]
42e563: movzx eax, byte ptr [rdi]
42e566: sub eax, ecx
42e568: ret 
42e569: nop dword ptr [rax]
42e570: endbr64 
42e574: test rdx, rdx
42e577: je 0x42fcc4
42e57d: cmp rdx, 1
42e581: je 0x42fcd0
42e587: mov r11, rdx
42e58a: mov ecx, esi
42e58c: mov eax, edi
42e58e: and rcx, 0x3f
42e592: and rax, 0x3f
42e596: cmp ecx, 0x30
42e599: ja 0x42e5f0
42e59b: cmp eax, 0x30
42e59e: ja 0x42e5f0
42e5a0: movlpd xmm1, qword ptr [rdi]
42e5a4: movlpd xmm2, qword ptr [rsi]
42e5a8: movhpd xmm1, qword ptr [rdi + 8]
42e5ad: movhpd xmm2, qword ptr [rsi + 8]
42e5b2: pxor xmm0, xmm0
42e5b6: pcmpeqb xmm0, xmm1
42e5ba: pcmpeqb xmm1, xmm2
42e5be: psubb xmm1, xmm0
42e5c2: pmovmskb edx, xmm1
42e5c6: sub edx, 0xffff
42e5cc: jne 0x42fcb0
42e5d2: sub r11, 0x10
42e5d6: jbe 0x42fcc4
42e5dc: add rsi, 0x10
42e5e0: add rdi, 0x10
42e5e4: nop word ptr cs:[rax + rax]
42e5ef: nop 
42e5f0: and rsi, 0xfffffffffffffff0
42e5f4: and rdi, 0xfffffffffffffff0
42e5f8: mov edx, 0xffff
42e5fd: xor r8d, r8d
42e600: and ecx, 0xf
42e603: and eax, 0xf
42e606: cmp ecx, eax
42e608: je 0x42e630
42e60a: ja 0x42e613
42e60c: mov r8d, edx
42e60f: xchg ecx, eax
42e610: xchg rdi, rsi
42e613: lea r9, [rax + 0xf]
42e617: sub r9, rcx
42e61a: lea r10, [rip + 0x68d5f]
42e621: movsxd r9, dword ptr [r10 + r9*4]
42e625: lea r10, [r10 + r9]
42e629: notrack jmp r10
42e62d: nop dword ptr [rax]
42e630: movdqa xmm1, xmmword ptr [rsi]
42e634: pxor xmm0, xmm0
42e638: pcmpeqb xmm0, xmm1
42e63c: pcmpeqb xmm1, xmmword ptr [rdi]
42e640: psubb xmm1, xmm0
42e644: pmovmskb r9d, xmm1
42e649: shr edx, cl
42e64b: shr r9d, cl
42e64e: sub edx, r9d
42e651: jne 0x42fc95
42e657: lea r9, [rcx + r11 - 0x10]
42e65c: cmp r11, r9
42e65f: jb 0x42fcc4
42e665: test r9, r9
42e668: je 0x42fcc4
42e66e: mov r11, r9
42e671: mov rcx, 0x10
42e678: mov r9, 0x10
42e67f: pxor xmm0, xmm0
42e683: nop word ptr cs:[rax + rax]
42e68e: nop 
42e690: movdqa xmm1, xmmword ptr [rsi + rcx]
42e695: movdqa xmm2, xmmword ptr [rdi + rcx]
42e69a: pcmpeqb xmm0, xmm1
42e69e: pcmpeqb xmm1, xmm2
42e6a2: psubb xmm1, xmm0
42e6a6: pmovmskb edx, xmm1
42e6aa: sub edx, 0xffff
42e6b0: jne 0x42fc90
42e6b6: sub r11, 0x10
42e6ba: jbe 0x42fcc4
42e6c0: add rcx, 0x10
42e6c4: movdqa xmm1, xmmword ptr [rsi + rcx]
42e6c9: movdqa xmm2, xmmword ptr [rdi + rcx]
42e6ce: pcmpeqb xmm0, xmm1
42e6d2: pcmpeqb xmm1, xmm2
42e6d6: psubb xmm1, xmm0
42e6da: pmovmskb edx, xmm1
42e6de: sub edx, 0xffff
42e6e4: jne 0x42fc90
42e6ea: sub r11, 0x10
42e6ee: jbe 0x42fcc4
42e6f4: add rcx, 0x10
42e6f8: jmp 0x42e690
42e6fa: nop word ptr [rax + rax]
42e700: pxor xmm0, xmm0
42e704: movdqa xmm2, xmmword ptr [rdi]
42e708: movdqa xmm1, xmmword ptr [rsi]
42e70c: pcmpeqb xmm0, xmm1
42e710: pslldq xmm2, 0xf
42e715: pcmpeqb xmm2, xmm1
42e719: psubb xmm2, xmm0
42e71d: pmovmskb r9d, xmm2
42e722: shr edx, cl
42e724: shr r9d, cl
42e727: sub edx, r9d
42e72a: jne 0x42fc95
42e730: movdqa xmm3, xmmword ptr [rdi]
42e734: lea r9, [rcx + r11 - 0x10]
42e739: cmp r11, r9
42e73c: jb 0x42fcc4
42e742: test r9, r9
42e745: je 0x42fcc4
42e74b: mov r11, r9
42e74e: pxor xmm0, xmm0
42e752: mov rcx, 0x10
42e759: mov r9d, 1
42e75f: lea r10, [rdi + 1]
42e763: and r10, 0xfff
42e76a: sub r10, 0x1000
42e771: nop word ptr cs:[rax + rax]
42e77c: nop dword ptr [rax]
42e780: add r10, 0x10
42e784: jg 0x42e820
42e78a: movdqa xmm1, xmmword ptr [rsi + rcx]
42e78f: movdqa xmm2, xmmword ptr [rdi + rcx]
42e794: movdqa xmm4, xmm2
42e798: palignr xmm2, xmm3, 1
42e79e: pcmpeqb xmm0, xmm1
42e7a2: pcmpeqb xmm1, xmm2
42e7a6: psubb xmm1, xmm0
42e7aa: pmovmskb edx, xmm1
42e7ae: sub edx, 0xffff
42e7b4: jne 0x42fc90
42e7ba: sub r11, 0x10
42e7be: jbe 0x42fcc4
42e7c4: add rcx, 0x10
42e7c8: movdqa xmm3, xmm4
42e7cc: add r10, 0x10
42e7d0: jg 0x42e820
42e7d2: movdqa xmm1, xmmword ptr [rsi + rcx]
42e7d7: movdqa xmm2, xmmword ptr [rdi + rcx]
42e7dc: movdqa xmm4, xmm2
42e7e0: palignr xmm2, xmm3, 1
42e7e6: pcmpeqb xmm0, xmm1
42e7ea: pcmpeqb xmm1, xmm2
42e7ee: psubb xmm1, xmm0
42e7f2: pmovmskb edx, xmm1
42e7f6: sub edx, 0xffff
42e7fc: jne 0x42fc90
42e802: sub r11, 0x10
42e806: jbe 0x42fcc4
42e80c: add rcx, 0x10
42e810: movdqa xmm3, xmm4
42e814: jmp 0x42e780
42e819: nop dword ptr [rax]
42e820: pcmpeqb xmm0, xmm3
42e824: pmovmskb edx, xmm0
42e828: test edx, 0xfffe
42e82e: jne 0x42e850
42e830: cmp r11, 0xf
42e834: jbe 0x42e850
42e836: pxor xmm0, xmm0
42e83a: sub r10, 0x1000
42e841: jmp 0x42e78a
42e846: nop word ptr cs:[rax + rax]
42e850: movdqa xmm1, xmmword ptr [rsi + rcx]
42e855: psrldq xmm0, 1
42e85a: psrldq xmm3, 1
42e85f: jmp 0x42fc80
42e864: nop word ptr cs:[rax + rax]
42e86f: nop 
42e870: pxor xmm0, xmm0
42e874: movdqa xmm2, xmmword ptr [rdi]
42e878: movdqa xmm1, xmmword ptr [rsi]
42e87c: pcmpeqb xmm0, xmm1
42e880: pslldq xmm2, 0xe
42e885: pcmpeqb xmm2, xmm1
42e889: psubb xmm2, xmm0
42e88d: pmovmskb r9d, xmm2
42e892: shr edx, cl
42e894: shr r9d, cl
42e897: sub edx, r9d
42e89a: jne 0x42fc95
42e8a0: movdqa xmm3, xmmword ptr [rdi]
42e8a4: lea r9, [rcx + r11 - 0x10]
42e8a9: cmp r11, r9
42e8ac: jb 0x42fcc4
42e8b2: test r9, r9
42e8b5: je 0x42fcc4
42e8bb: mov r11, r9
42e8be: pxor xmm0, xmm0
42e8c2: mov rcx, 0x10
42e8c9: mov r9d, 2
42e8cf: lea r10, [rdi + 2]
42e8d3: and r10, 0xfff
42e8da: sub r10, 0x1000
42e8e1: nop word ptr cs:[rax + rax]
42e8ec: nop dword ptr [rax]
42e8f0: add r10, 0x10
42e8f4: jg 0x42e990
42e8fa: movdqa xmm1, xmmword ptr [rsi + rcx]
42e8ff: movdqa xmm2, xmmword ptr [rdi + rcx]
42e904: movdqa xmm4, xmm2
42e908: palignr xmm2, xmm3, 2
42e90e: pcmpeqb xmm0, xmm1
42e912: pcmpeqb xmm1, xmm2
42e916: psubb xmm1, xmm0
42e91a: pmovmskb edx, xmm1
42e91e: sub edx, 0xffff
42e924: jne 0x42fc90
42e92a: sub r11, 0x10
42e92e: jbe 0x42fcc4
42e934: add rcx, 0x10
42e938: movdqa xmm3, xmm4
42e93c: add r10, 0x10
42e940: jg 0x42e990
42e942: movdqa xmm1, xmmword ptr [rsi + rcx]
42e947: movdqa xmm2, xmmword ptr [rdi + rcx]
42e94c: movdqa xmm4, xmm2
42e950: palignr xmm2, xmm3, 2
42e956: pcmpeqb xmm0, xmm1
42e95a: pcmpeqb xmm1, xmm2
42e95e: psubb xmm1, xmm0
42e962: pmovmskb edx, xmm1
42e966: sub edx, 0xffff
42e96c: jne 0x42fc90
42e972: sub r11, 0x10
42e976: jbe 0x42fcc4
42e97c: add rcx, 0x10
42e980: movdqa xmm3, xmm4
42e984: jmp 0x42e8f0
42e989: nop dword ptr [rax]
42e990: pcmpeqb xmm0, xmm3
42e994: pmovmskb edx, xmm0
42e998: test edx, 0xfffc
42e99e: jne 0x42e9c0
42e9a0: cmp r11, 0xe
42e9a4: jbe 0x42e9c0
42e9a6: pxor xmm0, xmm0
42e9aa: sub r10, 0x1000
42e9b1: jmp 0x42e8fa
42e9b6: nop word ptr cs:[rax + rax]
42e9c0: movdqa xmm1, xmmword ptr [rsi + rcx]
42e9c5: psrldq xmm0, 2
42e9ca: psrldq xmm3, 2
42e9cf: jmp 0x42fc80
42e9d4: nop word ptr cs:[rax + rax]
42e9df: nop 
42e9e0: pxor xmm0, xmm0
42e9e4: movdqa xmm2, xmmword ptr [rdi]
42e9e8: movdqa xmm1, xmmword ptr [rsi]
42e9ec: pcmpeqb xmm0, xmm1
42e9f0: pslldq xmm2, 0xd
42e9f5: pcmpeqb xmm2, xmm1
42e9f9: psubb xmm2, xmm0
42e9fd: pmovmskb r9d, xmm2
42ea02: shr edx, cl
42ea04: shr r9d, cl
42ea07: sub edx, r9d
42ea0a: jne 0x42fc95
42ea10: movdqa xmm3, xmmword ptr [rdi]
42ea14: lea r9, [rcx + r11 - 0x10]
42ea19: cmp r11, r9
42ea1c: jb 0x42fcc4
42ea22: test r9, r9
42ea25: je 0x42fcc4
42ea2b: mov r11, r9
42ea2e: pxor xmm0, xmm0
42ea32: mov rcx, 0x10
42ea39: mov r9d, 3
42ea3f: lea r10, [rdi + 3]
42ea43: and r10, 0xfff
42ea4a: sub r10, 0x1000
42ea51: nop word ptr cs:[rax + rax]
42ea5c: nop dword ptr [rax]
42ea60: add r10, 0x10
42ea64: jg 0x42eb00
42ea6a: movdqa xmm1, xmmword ptr [rsi + rcx]
42ea6f: movdqa xmm2, xmmword ptr [rdi + rcx]
42ea74: movdqa xmm4, xmm2
42ea78: palignr xmm2, xmm3, 3
42ea7e: pcmpeqb xmm0, xmm1
42ea82: pcmpeqb xmm1, xmm2
42ea86: psubb xmm1, xmm0
42ea8a: pmovmskb edx, xmm1
42ea8e: sub edx, 0xffff
42ea94: jne 0x42fc90
42ea9a: sub r11, 0x10
42ea9e: jbe 0x42fcc4
42eaa4: add rcx, 0x10
42eaa8: movdqa xmm3, xmm4
42eaac: add r10, 0x10
42eab0: jg 0x42eb00
42eab2: movdqa xmm1, xmmword ptr [rsi + rcx]
42eab7: movdqa xmm2, xmmword ptr [rdi + rcx]
42eabc: movdqa xmm4, xmm2
42eac0: palignr xmm2, xmm3, 3
42eac6: pcmpeqb xmm0, xmm1
42eaca: pcmpeqb xmm1, xmm2
42eace: psubb xmm1, xmm0
42ead2: pmovmskb edx, xmm1
42ead6: sub edx, 0xffff
42eadc: jne 0x42fc90
42eae2: sub r11, 0x10
42eae6: jbe 0x42fcc4
42eaec: add rcx, 0x10
42eaf0: movdqa xmm3, xmm4
42eaf4: jmp 0x42ea60
42eaf9: nop dword ptr [rax]
42eb00: pcmpeqb xmm0, xmm3
42eb04: pmovmskb edx, xmm0
42eb08: test edx, 0xfff8
42eb0e: jne 0x42eb30
42eb10: cmp r11, 0xd
42eb14: jbe 0x42eb30
42eb16: pxor xmm0, xmm0
42eb1a: sub r10, 0x1000
42eb21: jmp 0x42ea6a
42eb26: nop word ptr cs:[rax + rax]
42eb30: movdqa xmm1, xmmword ptr [rsi + rcx]
42eb35: psrldq xmm0, 3
42eb3a: psrldq xmm3, 3
42eb3f: jmp 0x42fc80
42eb44: nop word ptr cs:[rax + rax]
42eb4f: nop 
42eb50: pxor xmm0, xmm0
42eb54: movdqa xmm2, xmmword ptr [rdi]
42eb58: movdqa xmm1, xmmword ptr [rsi]
42eb5c: pcmpeqb xmm0, xmm1
42eb60: pslldq xmm2, 0xc
42eb65: pcmpeqb xmm2, xmm1
42eb69: psubb xmm2, xmm0
42eb6d: pmovmskb r9d, xmm2
42eb72: shr edx, cl
42eb74: shr r9d, cl
42eb77: sub edx, r9d
42eb7a: jne 0x42fc95
42eb80: movdqa xmm3, xmmword ptr [rdi]
42eb84: lea r9, [rcx + r11 - 0x10]
42eb89: cmp r11, r9
42eb8c: jb 0x42fcc4
42eb92: test r9, r9
42eb95: je 0x42fcc4
42eb9b: mov r11, r9
42eb9e: pxor xmm0, xmm0
42eba2: mov rcx, 0x10
42eba9: mov r9d, 4
42ebaf: lea r10, [rdi + 4]
42ebb3: and r10, 0xfff
42ebba: sub r10, 0x1000
42ebc1: nop word ptr cs:[rax + rax]
42ebcc: nop dword ptr [rax]
42ebd0: add r10, 0x10
42ebd4: jg 0x42ec70
42ebda: movdqa xmm1, xmmword ptr [rsi + rcx]
42ebdf: movdqa xmm2, xmmword ptr [rdi + rcx]
42ebe4: movdqa xmm4, xmm2
42ebe8: palignr xmm2, xmm3, 4
42ebee: pcmpeqb xmm0, xmm1
42ebf2: pcmpeqb xmm1, xmm2
42ebf6: psubb xmm1, xmm0
42ebfa: pmovmskb edx, xmm1
42ebfe: sub edx, 0xffff
42ec04: jne 0x42fc90
42ec0a: sub r11, 0x10
42ec0e: jbe 0x42fcc4
42ec14: add rcx, 0x10
42ec18: movdqa xmm3, xmm4
42ec1c: add r10, 0x10
42ec20: jg 0x42ec70
42ec22: movdqa xmm1, xmmword ptr [rsi + rcx]
42ec27: movdqa xmm2, xmmword ptr [rdi + rcx]
42ec2c: movdqa xmm4, xmm2
42ec30: palignr xmm2, xmm3, 4
42ec36: pcmpeqb xmm0, xmm1
42ec3a: pcmpeqb xmm1, xmm2
42ec3e: psubb xmm1, xmm0
42ec42: pmovmskb edx, xmm1
42ec46: sub edx, 0xffff
42ec4c: jne 0x42fc90
42ec52: sub r11, 0x10
42ec56: jbe 0x42fcc4
42ec5c: add rcx, 0x10
42ec60: movdqa xmm3, xmm4
42ec64: jmp 0x42ebd0
42ec69: nop dword ptr [rax]
42ec70: pcmpeqb xmm0, xmm3
42ec74: pmovmskb edx, xmm0
42ec78: test edx, 0xfff0
42ec7e: jne 0x42eca0
42ec80: cmp r11, 0xc
42ec84: jbe 0x42eca0
42ec86: pxor xmm0, xmm0
42ec8a: sub r10, 0x1000
42ec91: jmp 0x42ebda
42ec96: nop word ptr cs:[rax + rax]
42eca0: movdqa xmm1, xmmword ptr [rsi + rcx]
42eca5: psrldq xmm0, 4
42ecaa: psrldq xmm3, 4
42ecaf: jmp 0x42fc80
42ecb4: nop word ptr cs:[rax + rax]
42ecbf: nop 
42ecc0: pxor xmm0, xmm0
42ecc4: movdqa xmm2, xmmword ptr [rdi]
42ecc8: movdqa xmm1, xmmword ptr [rsi]
42eccc: pcmpeqb xmm0, xmm1
42ecd0: pslldq xmm2, 0xb
42ecd5: pcmpeqb xmm2, xmm1
42ecd9: psubb xmm2, xmm0
42ecdd: pmovmskb r9d, xmm2
42ece2: shr edx, cl
42ece4: shr r9d, cl
42ece7: sub edx, r9d
42ecea: jne 0x42fc95
42ecf0: movdqa xmm3, xmmword ptr [rdi]
42ecf4: lea r9, [rcx + r11 - 0x10]
42ecf9: cmp r11, r9
42ecfc: jb 0x42fcc4
42ed02: test r9, r9
42ed05: je 0x42fcc4
42ed0b: mov r11, r9
42ed0e: pxor xmm0, xmm0
42ed12: mov rcx, 0x10
42ed19: mov r9d, 5
42ed1f: lea r10, [rdi + 5]
42ed23: and r10, 0xfff
42ed2a: sub r10, 0x1000
42ed31: nop word ptr cs:[rax + rax]
42ed3c: nop dword ptr [rax]
42ed40: add r10, 0x10
42ed44: jg 0x42ede0
42ed4a: movdqa xmm1, xmmword ptr [rsi + rcx]
42ed4f: movdqa xmm2, xmmword ptr [rdi + rcx]
42ed54: movdqa xmm4, xmm2
42ed58: palignr xmm2, xmm3, 5
42ed5e: pcmpeqb xmm0, xmm1
42ed62: pcmpeqb xmm1, xmm2
42ed66: psubb xmm1, xmm0
42ed6a: pmovmskb edx, xmm1
42ed6e: sub edx, 0xffff
42ed74: jne 0x42fc90
42ed7a: sub r11, 0x10
42ed7e: jbe 0x42fcc4
42ed84: add rcx, 0x10
42ed88: movdqa xmm3, xmm4
42ed8c: add r10, 0x10
42ed90: jg 0x42ede0
42ed92: movdqa xmm1, xmmword ptr [rsi + rcx]
42ed97: movdqa xmm2, xmmword ptr [rdi + rcx]
42ed9c: movdqa xmm4, xmm2
42eda0: palignr xmm2, xmm3, 5
42eda6: pcmpeqb xmm0, xmm1
42edaa: pcmpeqb xmm1, xmm2
42edae: psubb xmm1, xmm0
42edb2: pmovmskb edx, xmm1
42edb6: sub edx, 0xffff
42edbc: jne 0x42fc90
42edc2: sub r11, 0x10
42edc6: jbe 0x42fcc4
42edcc: add rcx, 0x10
42edd0: movdqa xmm3, xmm4
42edd4: jmp 0x42ed40
42edd9: nop dword ptr [rax]
42ede0: pcmpeqb xmm0, xmm3
42ede4: pmovmskb edx, xmm0
42ede8: test edx, 0xffe0
42edee: jne 0x42ee10
42edf0: cmp r11, 0xb
42edf4: jbe 0x42ee10
42edf6: pxor xmm0, xmm0
42edfa: sub r10, 0x1000
42ee01: jmp 0x42ed4a
42ee06: nop word ptr cs:[rax + rax]
42ee10: movdqa xmm1, xmmword ptr [rsi + rcx]
42ee15: psrldq xmm0, 5
42ee1a: psrldq xmm3, 5
42ee1f: jmp 0x42fc80
42ee24: nop word ptr cs:[rax + rax]
42ee2f: nop 
42ee30: pxor xmm0, xmm0
42ee34: movdqa xmm2, xmmword ptr [rdi]
42ee38: movdqa xmm1, xmmword ptr [rsi]
42ee3c: pcmpeqb xmm0, xmm1
42ee40: pslldq xmm2, 0xa
42ee45: pcmpeqb xmm2, xmm1
42ee49: psubb xmm2, xmm0
42ee4d: pmovmskb r9d, xmm2
42ee52: shr edx, cl
42ee54: shr r9d, cl
42ee57: sub edx, r9d
42ee5a: jne 0x42fc95
42ee60: movdqa xmm3, xmmword ptr [rdi]
42ee64: lea r9, [rcx + r11 - 0x10]
42ee69: cmp r11, r9
42ee6c: jb 0x42fcc4
42ee72: test r9, r9
42ee75: je 0x42fcc4
42ee7b: mov r11, r9
42ee7e: pxor xmm0, xmm0
42ee82: mov rcx, 0x10
42ee89: mov r9d, 6
42ee8f: lea r10, [rdi + 6]
42ee93: and r10, 0xfff
42ee9a: sub r10, 0x1000
42eea1: nop word ptr cs:[rax + rax]
42eeac: nop dword ptr [rax]
42eeb0: add r10, 0x10
42eeb4: jg 0x42ef50
42eeba: movdqa xmm1, xmmword ptr [rsi + rcx]
42eebf: movdqa xmm2, xmmword ptr [rdi + rcx]
42eec4: movdqa xmm4, xmm2
42eec8: palignr xmm2, xmm3, 6
42eece: pcmpeqb xmm0, xmm1
42eed2: pcmpeqb xmm1, xmm2
42eed6: psubb xmm1, xmm0
42eeda: pmovmskb edx, xmm1
42eede: sub edx, 0xffff
42eee4: jne 0x42fc90
42eeea: sub r11, 0x10
42eeee: jbe 0x42fcc4
42eef4: add rcx, 0x10
42eef8: movdqa xmm3, xmm4
42eefc: add r10, 0x10
42ef00: jg 0x42ef50
42ef02: movdqa xmm1, xmmword ptr [rsi + rcx]
42ef07: movdqa xmm2, xmmword ptr [rdi + rcx]
42ef0c: movdqa xmm4, xmm2
42ef10: palignr xmm2, xmm3, 6
42ef16: pcmpeqb xmm0, xmm1
42ef1a: pcmpeqb xmm1, xmm2
42ef1e: psubb xmm1, xmm0
42ef22: pmovmskb edx, xmm1
42ef26: sub edx, 0xffff
42ef2c: jne 0x42fc90
42ef32: sub r11, 0x10
42ef36: jbe 0x42fcc4
42ef3c: add rcx, 0x10
42ef40: movdqa xmm3, xmm4
42ef44: jmp 0x42eeb0
42ef49: nop dword ptr [rax]
42ef50: pcmpeqb xmm0, xmm3
42ef54: pmovmskb edx, xmm0
42ef58: test edx, 0xffc0
42ef5e: jne 0x42ef80
42ef60: cmp r11, 0xa
42ef64: jbe 0x42ef80
42ef66: pxor xmm0, xmm0
42ef6a: sub r10, 0x1000
42ef71: jmp 0x42eeba
42ef76: nop word ptr cs:[rax + rax]
42ef80: movdqa xmm1, xmmword ptr [rsi + rcx]
42ef85: psrldq xmm0, 6
42ef8a: psrldq xmm3, 6
42ef8f: jmp 0x42fc80
42ef94: nop word ptr cs:[rax + rax]
42ef9f: nop 
42efa0: pxor xmm0, xmm0
42efa4: movdqa xmm2, xmmword ptr [rdi]
42efa8: movdqa xmm1, xmmword ptr [rsi]
42efac: pcmpeqb xmm0, xmm1
42efb0: pslldq xmm2, 9
42efb5: pcmpeqb xmm2, xmm1
42efb9: psubb xmm2, xmm0
42efbd: pmovmskb r9d, xmm2
42efc2: shr edx, cl
42efc4: shr r9d, cl
42efc7: sub edx, r9d
42efca: jne 0x42fc95
42efd0: movdqa xmm3, xmmword ptr [rdi]
42efd4: lea r9, [rcx + r11 - 0x10]
42efd9: cmp r11, r9
42efdc: jb 0x42fcc4
42efe2: test r9, r9
42efe5: je 0x42fcc4
42efeb: mov r11, r9
42efee: pxor xmm0, xmm0
42eff2: mov rcx, 0x10
42eff9: mov r9d, 7
42efff: lea r10, [rdi + 7]
42f003: and r10, 0xfff
42f00a: sub r10, 0x1000
42f011: nop word ptr cs:[rax + rax]
42f01c: nop dword ptr [rax]
42f020: add r10, 0x10
42f024: jg 0x42f0c0
42f02a: movdqa xmm1, xmmword ptr [rsi + rcx]
42f02f: movdqa xmm2, xmmword ptr [rdi + rcx]
42f034: movdqa xmm4, xmm2
42f038: palignr xmm2, xmm3, 7
42f03e: pcmpeqb xmm0, xmm1
42f042: pcmpeqb xmm1, xmm2
42f046: psubb xmm1, xmm0
42f04a: pmovmskb edx, xmm1
42f04e: sub edx, 0xffff
42f054: jne 0x42fc90
42f05a: sub r11, 0x10
42f05e: jbe 0x42fcc4
42f064: add rcx, 0x10
42f068: movdqa xmm3, xmm4
42f06c: add r10, 0x10
42f070: jg 0x42f0c0
42f072: movdqa xmm1, xmmword ptr [rsi + rcx]
42f077: movdqa xmm2, xmmword ptr [rdi + rcx]
42f07c: movdqa xmm4, xmm2
42f080: palignr xmm2, xmm3, 7
42f086: pcmpeqb xmm0, xmm1
42f08a: pcmpeqb xmm1, xmm2
42f08e: psubb xmm1, xmm0
42f092: pmovmskb edx, xmm1
42f096: sub edx, 0xffff
42f09c: jne 0x42fc90
42f0a2: sub r11, 0x10
42f0a6: jbe 0x42fcc4
42f0ac: add rcx, 0x10
42f0b0: movdqa xmm3, xmm4
42f0b4: jmp 0x42f020
42f0b9: nop dword ptr [rax]
42f0c0: pcmpeqb xmm0, xmm3
42f0c4: pmovmskb edx, xmm0
42f0c8: test edx, 0xff80
42f0ce: jne 0x42f0f0
42f0d0: cmp r11, 9
42f0d4: jbe 0x42f0f0
42f0d6: pxor xmm0, xmm0
42f0da: sub r10, 0x1000
42f0e1: jmp 0x42f02a
42f0e6: nop word ptr cs:[rax + rax]
42f0f0: movdqa xmm1, xmmword ptr [rsi + rcx]
42f0f5: psrldq xmm0, 7
42f0fa: psrldq xmm3, 7
42f0ff: jmp 0x42fc80
42f104: nop word ptr cs:[rax + rax]
42f10f: nop 
42f110: pxor xmm0, xmm0
42f114: movdqa xmm2, xmmword ptr [rdi]
42f118: movdqa xmm1, xmmword ptr [rsi]
42f11c: pcmpeqb xmm0, xmm1
42f120: pslldq xmm2, 8
42f125: pcmpeqb xmm2, xmm1
42f129: psubb xmm2, xmm0
42f12d: pmovmskb r9d, xmm2
42f132: shr edx, cl
42f134: shr r9d, cl
42f137: sub edx, r9d
42f13a: jne 0x42fc95
42f140: movdqa xmm3, xmmword ptr [rdi]
42f144: lea r9, [rcx + r11 - 0x10]
42f149: cmp r11, r9
42f14c: jb 0x42fcc4
42f152: test r9, r9
42f155: je 0x42fcc4
42f15b: mov r11, r9
42f15e: pxor xmm0, xmm0
42f162: mov rcx, 0x10
42f169: mov r9d, 8
42f16f: lea r10, [rdi + 8]
42f173: and r10, 0xfff
42f17a: sub r10, 0x1000
42f181: nop word ptr cs:[rax + rax]
42f18c: nop dword ptr [rax]
42f190: add r10, 0x10
42f194: jg 0x42f230
42f19a: movdqa xmm1, xmmword ptr [rsi + rcx]
42f19f: movdqa xmm2, xmmword ptr [rdi + rcx]
42f1a4: movdqa xmm4, xmm2
42f1a8: palignr xmm2, xmm3, 8
42f1ae: pcmpeqb xmm0, xmm1
42f1b2: pcmpeqb xmm1, xmm2
42f1b6: psubb xmm1, xmm0
42f1ba: pmovmskb edx, xmm1
42f1be: sub edx, 0xffff
42f1c4: jne 0x42fc90
42f1ca: sub r11, 0x10
42f1ce: jbe 0x42fcc4
42f1d4: add rcx, 0x10
42f1d8: movdqa xmm3, xmm4
42f1dc: add r10, 0x10
42f1e0: jg 0x42f230
42f1e2: movdqa xmm1, xmmword ptr [rsi + rcx]
42f1e7: movdqa xmm2, xmmword ptr [rdi + rcx]
42f1ec: movdqa xmm4, xmm2
42f1f0: palignr xmm2, xmm3, 8
42f1f6: pcmpeqb xmm0, xmm1
42f1fa: pcmpeqb xmm1, xmm2
42f1fe: psubb xmm1, xmm0
42f202: pmovmskb edx, xmm1
42f206: sub edx, 0xffff
42f20c: jne 0x42fc90
42f212: sub r11, 0x10
42f216: jbe 0x42fcc4
42f21c: add rcx, 0x10
42f220: movdqa xmm3, xmm4
42f224: jmp 0x42f190
42f229: nop dword ptr [rax]
42f230: pcmpeqb xmm0, xmm3
42f234: pmovmskb edx, xmm0
42f238: test edx, 0xff00
42f23e: jne 0x42f260
42f240: cmp r11, 8
42f244: jbe 0x42f260
42f246: pxor xmm0, xmm0
42f24a: sub r10, 0x1000
42f251: jmp 0x42f19a
42f256: nop word ptr cs:[rax + rax]
42f260: movdqa xmm1, xmmword ptr [rsi + rcx]
42f265: psrldq xmm0, 8
42f26a: psrldq xmm3, 8
42f26f: jmp 0x42fc80
42f274: nop word ptr cs:[rax + rax]
42f27f: nop 
42f280: pxor xmm0, xmm0
42f284: movdqa xmm2, xmmword ptr [rdi]
42f288: movdqa xmm1, xmmword ptr [rsi]
42f28c: pcmpeqb xmm0, xmm1
42f290: pslldq xmm2, 7
42f295: pcmpeqb xmm2, xmm1
42f299: psubb xmm2, xmm0
42f29d: pmovmskb r9d, xmm2
42f2a2: shr edx, cl
42f2a4: shr r9d, cl
42f2a7: sub edx, r9d
42f2aa: jne 0x42fc95
42f2b0: movdqa xmm3, xmmword ptr [rdi]
42f2b4: lea r9, [rcx + r11 - 0x10]
42f2b9: cmp r11, r9
42f2bc: jb 0x42fcc4
42f2c2: test r9, r9
42f2c5: je 0x42fcc4
42f2cb: mov r11, r9
42f2ce: pxor xmm0, xmm0
42f2d2: mov rcx, 0x10
42f2d9: mov r9d, 9
42f2df: lea r10, [rdi + 9]
42f2e3: and r10, 0xfff
42f2ea: sub r10, 0x1000
42f2f1: nop word ptr cs:[rax + rax]
42f2fc: nop dword ptr [rax]
42f300: add r10, 0x10
42f304: jg 0x42f3a0
42f30a: movdqa xmm1, xmmword ptr [rsi + rcx]
42f30f: movdqa xmm2, xmmword ptr [rdi + rcx]
42f314: movdqa xmm4, xmm2
42f318: palignr xmm2, xmm3, 9
42f31e: pcmpeqb xmm0, xmm1
42f322: pcmpeqb xmm1, xmm2
42f326: psubb xmm1, xmm0
42f32a: pmovmskb edx, xmm1
42f32e: sub edx, 0xffff
42f334: jne 0x42fc90
42f33a: sub r11, 0x10
42f33e: jbe 0x42fcc4
42f344: add rcx, 0x10
42f348: movdqa xmm3, xmm4
42f34c: add r10, 0x10
42f350: jg 0x42f3a0
42f352: movdqa xmm1, xmmword ptr [rsi + rcx]
42f357: movdqa xmm2, xmmword ptr [rdi + rcx]
42f35c: movdqa xmm4, xmm2
42f360: palignr xmm2, xmm3, 9
42f366: pcmpeqb xmm0, xmm1
42f36a: pcmpeqb xmm1, xmm2
42f36e: psubb xmm1, xmm0
42f372: pmovmskb edx, xmm1
42f376: sub edx, 0xffff
42f37c: jne 0x42fc90
42f382: sub r11, 0x10
42f386: jbe 0x42fcc4
42f38c: add rcx, 0x10
42f390: movdqa xmm3, xmm4
42f394: jmp 0x42f300
42f399: nop dword ptr [rax]
42f3a0: pcmpeqb xmm0, xmm3
42f3a4: pmovmskb edx, xmm0
42f3a8: test edx, 0xfe00
42f3ae: jne 0x42f3d0
42f3b0: cmp r11, 7
42f3b4: jbe 0x42f3d0
42f3b6: pxor xmm0, xmm0
42f3ba: sub r10, 0x1000
42f3c1: jmp 0x42f30a
42f3c6: nop word ptr cs:[rax + rax]
42f3d0: movdqa xmm1, xmmword ptr [rsi + rcx]
42f3d5: psrldq xmm0, 9
42f3da: psrldq xmm3, 9
42f3df: jmp 0x42fc80
42f3e4: nop word ptr cs:[rax + rax]
42f3ef: nop 
42f3f0: pxor xmm0, xmm0
42f3f4: movdqa xmm2, xmmword ptr [rdi]
42f3f8: movdqa xmm1, xmmword ptr [rsi]
42f3fc: pcmpeqb xmm0, xmm1
42f400: pslldq xmm2, 6
42f405: pcmpeqb xmm2, xmm1
42f409: psubb xmm2, xmm0
42f40d: pmovmskb r9d, xmm2
42f412: shr edx, cl
42f414: shr r9d, cl
42f417: sub edx, r9d
42f41a: jne 0x42fc95
42f420: movdqa xmm3, xmmword ptr [rdi]
42f424: lea r9, [rcx + r11 - 0x10]
42f429: cmp r11, r9
42f42c: jb 0x42fcc4
42f432: test r9, r9
42f435: je 0x42fcc4
42f43b: mov r11, r9
42f43e: pxor xmm0, xmm0
42f442: mov rcx, 0x10
42f449: mov r9d, 0xa
42f44f: lea r10, [rdi + 0xa]
42f453: and r10, 0xfff
42f45a: sub r10, 0x1000
42f461: nop word ptr cs:[rax + rax]
42f46c: nop dword ptr [rax]
42f470: add r10, 0x10
42f474: jg 0x42f510
42f47a: movdqa xmm1, xmmword ptr [rsi + rcx]
42f47f: movdqa xmm2, xmmword ptr [rdi + rcx]
42f484: movdqa xmm4, xmm2
42f488: palignr xmm2, xmm3, 0xa
42f48e: pcmpeqb xmm0, xmm1
42f492: pcmpeqb xmm1, xmm2
42f496: psubb xmm1, xmm0
42f49a: pmovmskb edx, xmm1
42f49e: sub edx, 0xffff
42f4a4: jne 0x42fc90
42f4aa: sub r11, 0x10
42f4ae: jbe 0x42fcc4
42f4b4: add rcx, 0x10
42f4b8: movdqa xmm3, xmm4
42f4bc: add r10, 0x10
42f4c0: jg 0x42f510
42f4c2: movdqa xmm1, xmmword ptr [rsi + rcx]
42f4c7: movdqa xmm2, xmmword ptr [rdi + rcx]
42f4cc: movdqa xmm4, xmm2
42f4d0: palignr xmm2, xmm3, 0xa
42f4d6: pcmpeqb xmm0, xmm1
42f4da: pcmpeqb xmm1, xmm2
42f4de: psubb xmm1, xmm0
42f4e2: pmovmskb edx, xmm1
42f4e6: sub edx, 0xffff
42f4ec: jne 0x42fc90
42f4f2: sub r11, 0x10
42f4f6: jbe 0x42fcc4
42f4fc: add rcx, 0x10
42f500: movdqa xmm3, xmm4
42f504: jmp 0x42f470
42f509: nop dword ptr [rax]
42f510: pcmpeqb xmm0, xmm3
42f514: pmovmskb edx, xmm0
42f518: test edx, 0xfc00
42f51e: jne 0x42f540
42f520: cmp r11, 6
42f524: jbe 0x42f540
42f526: pxor xmm0, xmm0
42f52a: sub r10, 0x1000
42f531: jmp 0x42f47a
42f536: nop word ptr cs:[rax + rax]
42f540: movdqa xmm1, xmmword ptr [rsi + rcx]
42f545: psrldq xmm0, 0xa
42f54a: psrldq xmm3, 0xa
42f54f: jmp 0x42fc80
42f554: nop word ptr cs:[rax + rax]
42f55f: nop 
42f560: pxor xmm0, xmm0
42f564: movdqa xmm2, xmmword ptr [rdi]
42f568: movdqa xmm1, xmmword ptr [rsi]
42f56c: pcmpeqb xmm0, xmm1
42f570: pslldq xmm2, 5
42f575: pcmpeqb xmm2, xmm1
42f579: psubb xmm2, xmm0
42f57d: pmovmskb r9d, xmm2
42f582: shr edx, cl
42f584: shr r9d, cl
42f587: sub edx, r9d
42f58a: jne 0x42fc95
42f590: movdqa xmm3, xmmword ptr [rdi]
42f594: lea r9, [rcx + r11 - 0x10]
42f599: cmp r11, r9
42f59c: jb 0x42fcc4
42f5a2: test r9, r9
42f5a5: je 0x42fcc4
42f5ab: mov r11, r9
42f5ae: pxor xmm0, xmm0
42f5b2: mov rcx, 0x10
42f5b9: mov r9d, 0xb
42f5bf: lea r10, [rdi + 0xb]
42f5c3: and r10, 0xfff
42f5ca: sub r10, 0x1000
42f5d1: nop word ptr cs:[rax + rax]
42f5dc: nop dword ptr [rax]
42f5e0: add r10, 0x10
42f5e4: jg 0x42f680
42f5ea: movdqa xmm1, xmmword ptr [rsi + rcx]
42f5ef: movdqa xmm2, xmmword ptr [rdi + rcx]
42f5f4: movdqa xmm4, xmm2
42f5f8: palignr xmm2, xmm3, 0xb
42f5fe: pcmpeqb xmm0, xmm1
42f602: pcmpeqb xmm1, xmm2
42f606: psubb xmm1, xmm0
42f60a: pmovmskb edx, xmm1
42f60e: sub edx, 0xffff
42f614: jne 0x42fc90
42f61a: sub r11, 0x10
42f61e: jbe 0x42fcc4
42f624: add rcx, 0x10
42f628: movdqa xmm3, xmm4
42f62c: add r10, 0x10
42f630: jg 0x42f680
42f632: movdqa xmm1, xmmword ptr [rsi + rcx]
42f637: movdqa xmm2, xmmword ptr [rdi + rcx]
42f63c: movdqa xmm4, xmm2
42f640: palignr xmm2, xmm3, 0xb
42f646: pcmpeqb xmm0, xmm1
42f64a: pcmpeqb xmm1, xmm2
42f64e: psubb xmm1, xmm0
42f652: pmovmskb edx, xmm1
42f656: sub edx, 0xffff
42f65c: jne 0x42fc90
42f662: sub r11, 0x10
42f666: jbe 0x42fcc4
42f66c: add rcx, 0x10
42f670: movdqa xmm3, xmm4
42f674: jmp 0x42f5e0
42f679: nop dword ptr [rax]
42f680: pcmpeqb xmm0, xmm3
42f684: pmovmskb edx, xmm0
42f688: test edx, 0xf800
42f68e: jne 0x42f6b0
42f690: cmp r11, 5
42f694: jbe 0x42f6b0
42f696: pxor xmm0, xmm0
42f69a: sub r10, 0x1000
42f6a1: jmp 0x42f5ea
42f6a6: nop word ptr cs:[rax + rax]
42f6b0: movdqa xmm1, xmmword ptr [rsi + rcx]
42f6b5: psrldq xmm0, 0xb
42f6ba: psrldq xmm3, 0xb
42f6bf: jmp 0x42fc80
42f6c4: nop word ptr cs:[rax + rax]
42f6cf: nop 
42f6d0: pxor xmm0, xmm0
42f6d4: movdqa xmm2, xmmword ptr [rdi]
42f6d8: movdqa xmm1, xmmword ptr [rsi]
42f6dc: pcmpeqb xmm0, xmm1
42f6e0: pslldq xmm2, 4
42f6e5: pcmpeqb xmm2, xmm1
42f6e9: psubb xmm2, xmm0
42f6ed: pmovmskb r9d, xmm2
42f6f2: shr edx, cl
42f6f4: shr r9d, cl
42f6f7: sub edx, r9d
42f6fa: jne 0x42fc95
42f700: movdqa xmm3, xmmword ptr [rdi]
42f704: lea r9, [rcx + r11 - 0x10]
42f709: cmp r11, r9
42f70c: jb 0x42fcc4
42f712: test r9, r9
42f715: je 0x42fcc4
42f71b: mov r11, r9
42f71e: pxor xmm0, xmm0
42f722: mov rcx, 0x10
42f729: mov r9d, 0xc
42f72f: lea r10, [rdi + 0xc]
42f733: and r10, 0xfff
42f73a: sub r10, 0x1000
42f741: nop word ptr cs:[rax + rax]
42f74c: nop dword ptr [rax]
42f750: add r10, 0x10
42f754: jg 0x42f7f0
42f75a: movdqa xmm1, xmmword ptr [rsi + rcx]
42f75f: movdqa xmm2, xmmword ptr [rdi + rcx]
42f764: movdqa xmm4, xmm2
42f768: palignr xmm2, xmm3, 0xc
42f76e: pcmpeqb xmm0, xmm1
42f772: pcmpeqb xmm1, xmm2
42f776: psubb xmm1, xmm0
42f77a: pmovmskb edx, xmm1
42f77e: sub edx, 0xffff
42f784: jne 0x42fc90
42f78a: sub r11, 0x10
42f78e: jbe 0x42fcc4
42f794: add rcx, 0x10
42f798: movdqa xmm3, xmm4
42f79c: add r10, 0x10
42f7a0: jg 0x42f7f0
42f7a2: movdqa xmm1, xmmword ptr [rsi + rcx]
42f7a7: movdqa xmm2, xmmword ptr [rdi + rcx]
42f7ac: movdqa xmm4, xmm2
42f7b0: palignr xmm2, xmm3, 0xc
42f7b6: pcmpeqb xmm0, xmm1
42f7ba: pcmpeqb xmm1, xmm2
42f7be: psubb xmm1, xmm0
42f7c2: pmovmskb edx, xmm1
42f7c6: sub edx, 0xffff
42f7cc: jne 0x42fc90
42f7d2: sub r11, 0x10
42f7d6: jbe 0x42fcc4
42f7dc: add rcx, 0x10
42f7e0: movdqa xmm3, xmm4
42f7e4: jmp 0x42f750
42f7e9: nop dword ptr [rax]
42f7f0: pcmpeqb xmm0, xmm3
42f7f4: pmovmskb edx, xmm0
42f7f8: test edx, 0xf000
42f7fe: jne 0x42f820
42f800: cmp r11, 4
42f804: jbe 0x42f820
42f806: pxor xmm0, xmm0
42f80a: sub r10, 0x1000
42f811: jmp 0x42f75a
42f816: nop word ptr cs:[rax + rax]
42f820: movdqa xmm1, xmmword ptr [rsi + rcx]
42f825: psrldq xmm0, 0xc
42f82a: psrldq xmm3, 0xc
42f82f: jmp 0x42fc80
42f834: nop word ptr cs:[rax + rax]
42f83f: nop 
42f840: pxor xmm0, xmm0
42f844: movdqa xmm2, xmmword ptr [rdi]
42f848: movdqa xmm1, xmmword ptr [rsi]
42f84c: pcmpeqb xmm0, xmm1
42f850: pslldq xmm2, 3
42f855: pcmpeqb xmm2, xmm1
42f859: psubb xmm2, xmm0
42f85d: pmovmskb r9d, xmm2
42f862: shr edx, cl
42f864: shr r9d, cl
42f867: sub edx, r9d
42f86a: jne 0x42fc95
42f870: movdqa xmm3, xmmword ptr [rdi]
42f874: lea r9, [rcx + r11 - 0x10]
42f879: cmp r11, r9
42f87c: jb 0x42fcc4
42f882: test r9, r9
42f885: je 0x42fcc4
42f88b: mov r11, r9
42f88e: pxor xmm0, xmm0
42f892: mov rcx, 0x10
42f899: mov r9d, 0xd
42f89f: lea r10, [rdi + 0xd]
42f8a3: and r10, 0xfff
42f8aa: sub r10, 0x1000
42f8b1: nop word ptr cs:[rax + rax]
42f8bc: nop dword ptr [rax]
42f8c0: add r10, 0x10
42f8c4: jg 0x42f960
42f8ca: movdqa xmm1, xmmword ptr [rsi + rcx]
42f8cf: movdqa xmm2, xmmword ptr [rdi + rcx]
42f8d4: movdqa xmm4, xmm2
42f8d8: palignr xmm2, xmm3, 0xd
42f8de: pcmpeqb xmm0, xmm1
42f8e2: pcmpeqb xmm1, xmm2
42f8e6: psubb xmm1, xmm0
42f8ea: pmovmskb edx, xmm1
42f8ee: sub edx, 0xffff
42f8f4: jne 0x42fc90
42f8fa: sub r11, 0x10
42f8fe: jbe 0x42fcc4
42f904: add rcx, 0x10
42f908: movdqa xmm3, xmm4
42f90c: add r10, 0x10
42f910: jg 0x42f960
42f912: movdqa xmm1, xmmword ptr [rsi + rcx]
42f917: movdqa xmm2, xmmword ptr [rdi + rcx]
42f91c: movdqa xmm4, xmm2
42f920: palignr xmm2, xmm3, 0xd
42f926: pcmpeqb xmm0, xmm1
42f92a: pcmpeqb xmm1, xmm2
42f92e: psubb xmm1, xmm0
42f932: pmovmskb edx, xmm1
42f936: sub edx, 0xffff
42f93c: jne 0x42fc90
42f942: sub r11, 0x10
42f946: jbe 0x42fcc4
42f94c: add rcx, 0x10
42f950: movdqa xmm3, xmm4
42f954: jmp 0x42f8c0
42f959: nop dword ptr [rax]
42f960: pcmpeqb xmm0, xmm3
42f964: pmovmskb edx, xmm0
42f968: test edx, 0xe000
42f96e: jne 0x42f990
42f970: cmp r11, 3
42f974: jbe 0x42f990
42f976: pxor xmm0, xmm0
42f97a: sub r10, 0x1000
42f981: jmp 0x42f8ca
42f986: nop word ptr cs:[rax + rax]
42f990: movdqa xmm1, xmmword ptr [rsi + rcx]
42f995: psrldq xmm0, 0xd
42f99a: psrldq xmm3, 0xd
42f99f: jmp 0x42fc80
42f9a4: nop word ptr cs:[rax + rax]
42f9af: nop 
42f9b0: pxor xmm0, xmm0
42f9b4: movdqa xmm2, xmmword ptr [rdi]
42f9b8: movdqa xmm1, xmmword ptr [rsi]
42f9bc: pcmpeqb xmm0, xmm1
42f9c0: pslldq xmm2, 2
42f9c5: pcmpeqb xmm2, xmm1
42f9c9: psubb xmm2, xmm0
42f9cd: pmovmskb r9d, xmm2
42f9d2: shr edx, cl
42f9d4: shr r9d, cl
42f9d7: sub edx, r9d
42f9da: jne 0x42fc95
42f9e0: movdqa xmm3, xmmword ptr [rdi]
42f9e4: lea r9, [rcx + r11 - 0x10]
42f9e9: cmp r11, r9
42f9ec: jb 0x42fcc4
42f9f2: test r9, r9
42f9f5: je 0x42fcc4
42f9fb: mov r11, r9
42f9fe: pxor xmm0, xmm0
42fa02: mov rcx, 0x10
42fa09: mov r9d, 0xe
42fa0f: lea r10, [rdi + 0xe]
42fa13: and r10, 0xfff
42fa1a: sub r10, 0x1000
42fa21: nop word ptr cs:[rax + rax]
42fa2c: nop dword ptr [rax]
42fa30: add r10, 0x10
42fa34: jg 0x42fad0
42fa3a: movdqa xmm1, xmmword ptr [rsi + rcx]
42fa3f: movdqa xmm2, xmmword ptr [rdi + rcx]
42fa44: movdqa xmm4, xmm2
42fa48: palignr xmm2, xmm3, 0xe
42fa4e: pcmpeqb xmm0, xmm1
42fa52: pcmpeqb xmm1, xmm2
42fa56: psubb xmm1, xmm0
42fa5a: pmovmskb edx, xmm1
42fa5e: sub edx, 0xffff
42fa64: jne 0x42fc90
42fa6a: sub r11, 0x10
42fa6e: jbe 0x42fcc4
42fa74: add rcx, 0x10
42fa78: movdqa xmm3, xmm4
42fa7c: add r10, 0x10
42fa80: jg 0x42fad0
42fa82: movdqa xmm1, xmmword ptr [rsi + rcx]
42fa87: movdqa xmm2, xmmword ptr [rdi + rcx]
42fa8c: movdqa xmm4, xmm2
42fa90: palignr xmm2, xmm3, 0xe
42fa96: pcmpeqb xmm0, xmm1
42fa9a: pcmpeqb xmm1, xmm2
42fa9e: psubb xmm1, xmm0
42faa2: pmovmskb edx, xmm1
42faa6: sub edx, 0xffff
42faac: jne 0x42fc90
42fab2: sub r11, 0x10
42fab6: jbe 0x42fcc4
42fabc: add rcx, 0x10
42fac0: movdqa xmm3, xmm4
42fac4: jmp 0x42fa30
42fac9: nop dword ptr [rax]
42fad0: pcmpeqb xmm0, xmm3
42fad4: pmovmskb edx, xmm0
42fad8: test edx, 0xc000
42fade: jne 0x42fb00
42fae0: cmp r11, 2
42fae4: jbe 0x42fb00
42fae6: pxor xmm0, xmm0
42faea: sub r10, 0x1000
42faf1: jmp 0x42fa3a
42faf6: nop word ptr cs:[rax + rax]
42fb00: movdqa xmm1, xmmword ptr [rsi + rcx]
42fb05: psrldq xmm0, 0xe
42fb0a: psrldq xmm3, 0xe
42fb0f: jmp 0x42fc80
42fb14: nop word ptr cs:[rax + rax]
42fb1f: nop 
42fb20: pxor xmm0, xmm0
42fb24: movdqa xmm2, xmmword ptr [rdi]
42fb28: movdqa xmm1, xmmword ptr [rsi]
42fb2c: pcmpeqb xmm0, xmm1
42fb30: pslldq xmm2, 1
42fb35: pcmpeqb xmm2, xmm1
42fb39: psubb xmm2, xmm0
42fb3d: pmovmskb r9d, xmm2
42fb42: shr edx, cl
42fb44: shr r9d, cl
42fb47: sub edx, r9d
42fb4a: jne 0x42fc95
42fb50: movdqa xmm3, xmmword ptr [rdi]
42fb54: lea r9, [rcx + r11 - 0x10]
42fb59: cmp r11, r9
42fb5c: jb 0x42fcc4
42fb62: test r9, r9
42fb65: je 0x42fcc4
42fb6b: mov r11, r9
42fb6e: pxor xmm0, xmm0
42fb72: mov rcx, 0x10
42fb79: mov r9d, 0xf
42fb7f: lea r10, [rdi + 0xf]
42fb83: and r10, 0xfff
42fb8a: sub r10, 0x1000
42fb91: nop word ptr cs:[rax + rax]
42fb9c: nop dword ptr [rax]
42fba0: add r10, 0x10
42fba4: jg 0x42fc40
42fbaa: movdqa xmm1, xmmword ptr [rsi + rcx]
42fbaf: movdqa xmm2, xmmword ptr [rdi + rcx]
42fbb4: movdqa xmm4, xmm2
42fbb8: palignr xmm2, xmm3, 0xf
42fbbe: pcmpeqb xmm0, xmm1
42fbc2: pcmpeqb xmm1, xmm2
42fbc6: psubb xmm1, xmm0
42fbca: pmovmskb edx, xmm1
42fbce: sub edx, 0xffff
42fbd4: jne 0x42fc90
42fbda: sub r11, 0x10
42fbde: jbe 0x42fcc4
42fbe4: add rcx, 0x10
42fbe8: movdqa xmm3, xmm4
42fbec: add r10, 0x10
42fbf0: jg 0x42fc40
42fbf2: movdqa xmm1, xmmword ptr [rsi + rcx]
42fbf7: movdqa xmm2, xmmword ptr [rdi + rcx]
42fbfc: movdqa xmm4, xmm2
42fc00: palignr xmm2, xmm3, 0xf
42fc06: pcmpeqb xmm0, xmm1
42fc0a: pcmpeqb xmm1, xmm2
42fc0e: psubb xmm1, xmm0
42fc12: pmovmskb edx, xmm1
42fc16: sub edx, 0xffff
42fc1c: jne 0x42fc90
42fc1e: sub r11, 0x10
42fc22: jbe 0x42fcc4
42fc28: add rcx, 0x10
42fc2c: movdqa xmm3, xmm4
42fc30: jmp 0x42fba0
42fc35: nop word ptr cs:[rax + rax]
42fc40: pcmpeqb xmm0, xmm3
42fc44: pmovmskb edx, xmm0
42fc48: test edx, 0x8000
42fc4e: jne 0x42fc70
42fc50: cmp r11, 1
42fc54: jbe 0x42fc70
42fc56: pxor xmm0, xmm0
42fc5a: sub r10, 0x1000
42fc61: jmp 0x42fbaa
42fc66: nop word ptr cs:[rax + rax]
42fc70: movdqa xmm1, xmmword ptr [rsi + rcx]
42fc75: psrldq xmm3, 0xf
42fc7a: psrldq xmm0, 0xf
42fc7f: nop 
42fc80: pcmpeqb xmm1, xmm3
42fc84: psubb xmm1, xmm0
42fc88: pmovmskb edx, xmm1
42fc8c: not edx
42fc8e: nop 
42fc90: lea rax, [r9 + rcx - 0x10]
42fc95: lea rdi, [rdi + rax]
42fc99: lea rsi, [rsi + rcx]
42fc9d: test r8d, r8d
42fca0: je 0x42fcb0
42fca2: xchg rdi, rsi
42fca5: nop word ptr cs:[rax + rax]
42fcb0: bsf rdx, rdx
42fcb4: sub r11, rdx
42fcb7: jbe 0x42fcc4
42fcb9: movzx ecx, byte ptr [rsi + rdx]
42fcbd: movzx eax, byte ptr [rdi + rdx]
42fcc1: sub eax, ecx
42fcc3: ret 
42fcc4: xor eax, eax
42fcc6: ret 
42fcc7: nop word ptr [rax + rax]
42fcd0: movzx ecx, byte ptr [rsi]
42fcd3: movzx eax, byte ptr [rdi]
42fcd6: sub eax, ecx
42fcd8: ret 
42fcd9: nop dword ptr [rax]
42fce0: endbr64 
42fce4: test rdx, rdx
42fce7: je 0x430ca4
42fced: cmp rdx, 1
42fcf1: je 0x430cb0
42fcf7: mov r11, rdx
42fcfa: mov ecx, esi
42fcfc: mov eax, edi
42fcfe: and rcx, 0x3f
42fd02: and rax, 0x3f
42fd06: cmp ecx, 0x30
42fd09: ja 0x42fd50
42fd0b: cmp eax, 0x30
42fd0e: ja 0x42fd50
42fd10: movdqu xmm1, xmmword ptr [rdi]
42fd14: movdqu xmm2, xmmword ptr [rsi]
42fd18: pxor xmm0, xmm0
42fd1c: pcmpeqb xmm0, xmm1
42fd20: pcmpeqb xmm1, xmm2
42fd24: psubb xmm1, xmm0
42fd28: pmovmskb edx, xmm1
42fd2c: sub edx, 0xffff
42fd32: jne 0x430c90
42fd38: sub r11, 0x10
42fd3c: jbe 0x430ca4
42fd42: add rsi, 0x10
42fd46: add rdi, 0x10
42fd4a: nop word ptr [rax + rax]
42fd50: and rsi, 0xfffffffffffffff0
42fd54: and rdi, 0xfffffffffffffff0
42fd58: mov edx, 0xffff
42fd5d: xor r8d, r8d
42fd60: and ecx, 0xf
42fd63: and eax, 0xf
42fd66: pxor xmm0, xmm0
42fd6a: cmp ecx, eax
42fd6c: je 0x42fda0
42fd6e: ja 0x42fd77
42fd70: mov r8d, edx
42fd73: xchg ecx, eax
42fd74: xchg rdi, rsi
42fd77: movdqa xmm2, xmmword ptr [rdi]
42fd7b: movdqa xmm1, xmmword ptr [rsi]
42fd7f: lea r9, [rax + 0xf]
42fd83: sub r9, rcx
42fd86: lea r10, [rip + 0x67633]
42fd8d: movsxd r9, dword ptr [r10 + r9*4]
42fd91: pcmpeqb xmm0, xmm1
42fd95: lea r10, [r10 + r9]
42fd99: notrack jmp r10
42fd9d: nop dword ptr [rax]
42fda0: movdqa xmm1, xmmword ptr [rsi]
42fda4: pcmpeqb xmm0, xmm1
42fda8: pcmpeqb xmm1, xmmword ptr [rdi]
42fdac: psubb xmm1, xmm0
42fdb0: pmovmskb r9d, xmm1
42fdb5: shr edx, cl
42fdb7: shr r9d, cl
42fdba: sub edx, r9d
42fdbd: jne 0x430c80
42fdc3: lea r9, [rcx + r11 - 0x10]
42fdc8: cmp r11, r9
42fdcb: jb 0x430ca4
42fdd1: test r9, r9
42fdd4: je 0x430ca4
42fdda: mov r11, r9
42fddd: mov rcx, 0x10
42fde4: mov r9, 0x10
42fdeb: mov rdx, rcx
42fdee: nop 
42fdf0: movdqa xmm0, xmmword ptr [rdi + rdx]
42fdf5: pcmpistri xmm0, xmmword ptr [rsi + rdx], 0x1a
42fdfc: lea rdx, [rdx + 0x10]
42fe00: jbe 0x42fe30
42fe02: sub r11, 0x10
42fe06: jbe 0x430ca4
42fe0c: movdqa xmm0, xmmword ptr [rdi + rdx]
42fe11: pcmpistri xmm0, xmmword ptr [rsi + rdx], 0x1a
42fe18: lea rdx, [rdx + 0x10]
42fe1c: jbe 0x42fe30
42fe1e: sub r11, 0x10
42fe22: jbe 0x430ca4
42fe28: jmp 0x42fdf0
42fe2a: nop word ptr [rax + rax]
42fe30: jae 0x430ca4
42fe36: sub r11, rcx
42fe39: jbe 0x430ca4
42fe3f: lea rcx, [rdx + rcx - 0x10]
42fe44: movzx eax, byte ptr [rdi + rcx]
42fe48: movzx edx, byte ptr [rsi + rcx]
42fe4c: sub eax, edx
42fe4e: ret 
42fe4f: nop 
42fe50: pslldq xmm2, 0xf
42fe55: pcmpeqb xmm2, xmm1
42fe59: psubb xmm2, xmm0
42fe5d: pmovmskb r9d, xmm2
42fe62: shr edx, cl
42fe64: shr r9d, cl
42fe67: sub edx, r9d
42fe6a: jne 0x430c80
42fe70: movdqa xmm3, xmmword ptr [rdi]
42fe74: lea r9, [rcx + r11 - 0x10]
42fe79: cmp r11, r9
42fe7c: jb 0x430ca4
42fe82: test r9, r9
42fe85: je 0x430ca4
42fe8b: mov r11, r9
42fe8e: mov rcx, 0x10
42fe95: mov r9d, 1
42fe9b: lea r10, [rdi + 1]
42fe9f: and r10, 0xfff
42fea6: sub r10, 0x1000
42fead: mov rdx, rcx
42feb0: add r10, 0x10
42feb4: jg 0x42ff10
42feb6: movdqa xmm0, xmmword ptr [rdi + rdx]
42febb: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 1
42fec3: pcmpistri xmm0, xmmword ptr [rsi + rdx], 0x1a
42feca: jbe 0x430c60
42fed0: sub r11, 0x10
42fed4: jbe 0x430ca4
42feda: add rdx, 0x10
42fede: add r10, 0x10
42fee2: jg 0x42ff10
42fee4: movdqa xmm0, xmmword ptr [rdi + rdx]
42fee9: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 1
42fef1: pcmpistri xmm0, xmmword ptr [rsi + rdx], 0x1a
42fef8: jbe 0x430c60
42ff00: jmp 0x42ff12
42ff08: add rdx, 0x10
42ff0c: jmp 0x42feb0
42ff0e: nop 
42ff13: add byte ptr [rax], dl
42ff15: add byte ptr [rax], al
42ff17: movdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
42ff1d: psrldq xmm0, 1
42ff22: pcmpistri xmm0, xmm0, 0x3a
42ff28: cmp rcx, r11
42ff2b: jae 0x430c52
42ff31: cmp ecx, 0xe
42ff34: ja 0x42feb6
42ff36: jmp 0x430c52
42ff3b: nop dword ptr [rax + rax]
42ff40: pslldq xmm2, 0xe
42ff45: pcmpeqb xmm2, xmm1
42ff49: psubb xmm2, xmm0
42ff4d: pmovmskb r9d, xmm2
42ff52: shr edx, cl
42ff54: shr r9d, cl
42ff57: sub edx, r9d
42ff5a: jne 0x430c80
42ff60: movdqa xmm3, xmmword ptr [rdi]
42ff64: lea r9, [rcx + r11 - 0x10]
42ff69: cmp r11, r9
42ff6c: jb 0x430ca4
42ff72: test r9, r9
42ff75: je 0x430ca4
42ff7b: mov r11, r9
42ff7e: mov rcx, 0x10
42ff85: mov r9d, 2
42ff8b: lea r10, [rdi + 2]
42ff8f: and r10, 0xfff
42ff96: sub r10, 0x1000
42ff9d: mov rdx, rcx
42ffa0: add r10, 0x10
42ffa4: jg 0x430000
42ffa6: movdqa xmm0, xmmword ptr [rdi + rdx]
42ffab: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 2
42ffb3: pcmpistri xmm0, xmmword ptr [rsi + rdx], 0x1a
42ffba: jbe 0x430c60
42ffc0: sub r11, 0x10
42ffc4: jbe 0x430ca4
42ffca: add rdx, 0x10
42ffce: add r10, 0x10
42ffd2: jg 0x430000
42ffd4: movdqa xmm0, xmmword ptr [rdi + rdx]
42ffd9: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 2
42ffe1: pcmpistri xmm0, xmmword ptr [rsi + rdx], 0x1a
42ffe8: jbe 0x430c60
42fff0: jmp 0x430002
42fff8: add rdx, 0x10
42fffc: jmp 0x42ffa0
42fffe: nop 
430003: add byte ptr [rax], dl
430005: add byte ptr [rax], al
430007: movdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
43000d: psrldq xmm0, 2
430012: pcmpistri xmm0, xmm0, 0x3a
430018: cmp rcx, r11
43001b: jae 0x430c52
430021: cmp ecx, 0xd
430024: ja 0x42ffa6
430026: jmp 0x430c52
43002b: nop dword ptr [rax + rax]
430030: pslldq xmm2, 0xd
430035: pcmpeqb xmm2, xmm1
430039: psubb xmm2, xmm0
43003d: pmovmskb r9d, xmm2
430042: shr edx, cl
430044: shr r9d, cl
430047: sub edx, r9d
43004a: jne 0x430c80
430050: movdqa xmm3, xmmword ptr [rdi]
430054: lea r9, [rcx + r11 - 0x10]
430059: cmp r11, r9
43005c: jb 0x430ca4
430062: test r9, r9
430065: je 0x430ca4
43006b: mov r11, r9
43006e: mov rcx, 0x10
430075: mov r9d, 3
43007b: lea r10, [rdi + 3]
43007f: and r10, 0xfff
430086: sub r10, 0x1000
43008d: mov rdx, rcx
430090: add r10, 0x10
430094: jg 0x4300f0
430096: movdqa xmm0, xmmword ptr [rdi + rdx]
43009b: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 3
4300a3: pcmpistri xmm0, xmmword ptr [rsi + rdx], 0x1a
4300aa: jbe 0x430c60
4300b0: sub r11, 0x10
4300b4: jbe 0x430ca4
4300ba: add rdx, 0x10
4300be: add r10, 0x10
4300c2: jg 0x4300f0
4300c4: movdqa xmm0, xmmword ptr [rdi + rdx]
4300c9: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 3
4300d1: pcmpistri xmm0, xmmword ptr [rsi + rdx], 0x1a
4300d8: jbe 0x430c60
4300e0: jmp 0x4300f2
4300e8: add rdx, 0x10
4300ec: jmp 0x430090
4300ee: nop 
4300f3: add byte ptr [rax], dl
4300f5: add byte ptr [rax], al
4300f7: movdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
4300fd: psrldq xmm0, 3
430102: pcmpistri xmm0, xmm0, 0x3a
430108: cmp rcx, r11
43010b: jae 0x430c52
430111: cmp ecx, 0xc
430114: ja 0x430096
430116: jmp 0x430c52
43011b: nop dword ptr [rax + rax]
430120: pslldq xmm2, 0xc
430125: pcmpeqb xmm2, xmm1
430129: psubb xmm2, xmm0
43012d: pmovmskb r9d, xmm2
430132: shr edx, cl
430134: shr r9d, cl
430137: sub edx, r9d
43013a: jne 0x430c80
430140: movdqa xmm3, xmmword ptr [rdi]
430144: lea r9, [rcx + r11 - 0x10]
430149: cmp r11, r9
43014c: jb 0x430ca4
430152: test r9, r9
430155: je 0x430ca4
43015b: mov r11, r9
43015e: mov rcx, 0x10
430165: mov r9d, 4
43016b: lea r10, [rdi + 4]
43016f: and r10, 0xfff
430176: sub r10, 0x1000
43017d: mov rdx, rcx
430180: add r10, 0x10
430184: jg 0x4301e0
430186: movdqa xmm0, xmmword ptr [rdi + rdx]
43018b: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 4
430193: pcmpistri xmm0, xmmword ptr [rsi + rdx], 0x1a
43019a: jbe 0x430c60
4301a0: sub r11, 0x10
4301a4: jbe 0x430ca4
4301aa: add rdx, 0x10
4301ae: add r10, 0x10
4301b2: jg 0x4301e0
4301b4: movdqa xmm0, xmmword ptr [rdi + rdx]
4301b9: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 4
4301c1: pcmpistri xmm0, xmmword ptr [rsi + rdx], 0x1a
4301c8: jbe 0x430c60
4301d0: jmp 0x4301e2
4301d8: add rdx, 0x10
4301dc: jmp 0x430180
4301de: nop 
4301e3: add byte ptr [rax], dl
4301e5: add byte ptr [rax], al
4301e7: movdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
4301ed: psrldq xmm0, 4
4301f2: pcmpistri xmm0, xmm0, 0x3a
4301f8: cmp rcx, r11
4301fb: jae 0x430c52
430201: cmp ecx, 0xb
430204: ja 0x430186
430206: jmp 0x430c52
43020b: nop dword ptr [rax + rax]
430210: pslldq xmm2, 0xb
430215: pcmpeqb xmm2, xmm1
430219: psubb xmm2, xmm0
43021d: pmovmskb r9d, xmm2
430222: shr edx, cl
430224: shr r9d, cl
430227: sub edx, r9d
43022a: jne 0x430c80
430230: movdqa xmm3, xmmword ptr [rdi]
430234: lea r9, [rcx + r11 - 0x10]
430239: cmp r11, r9
43023c: jb 0x430ca4
430242: test r9, r9
430245: je 0x430ca4
43024b: mov r11, r9
43024e: mov rcx, 0x10
430255: mov r9d, 5
43025b: lea r10, [rdi + 5]
43025f: and r10, 0xfff
430266: sub r10, 0x1000
43026d: mov rdx, rcx
430270: add r10, 0x10
430274: jg 0x4302d0
430276: movdqa xmm0, xmmword ptr [rdi + rdx]
43027b: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 5
430283: pcmpistri xmm0, xmmword ptr [rsi + rdx], 0x1a
43028a: jbe 0x430c60
430290: sub r11, 0x10
430294: jbe 0x430ca4
43029a: add rdx, 0x10
43029e: add r10, 0x10
4302a2: jg 0x4302d0
4302a4: movdqa xmm0, xmmword ptr [rdi + rdx]
4302a9: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 5
4302b1: pcmpistri xmm0, xmmword ptr [rsi + rdx], 0x1a
4302b8: jbe 0x430c60
4302c0: jmp 0x4302d2
4302c8: add rdx, 0x10
4302cc: jmp 0x430270
4302ce: nop 
4302d3: add byte ptr [rax], dl
4302d5: add byte ptr [rax], al
4302d7: movdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
4302dd: psrldq xmm0, 5
4302e2: pcmpistri xmm0, xmm0, 0x3a
4302e8: cmp rcx, r11
4302eb: jae 0x430c52
4302f1: cmp ecx, 0xa
4302f4: ja 0x430276
4302f6: jmp 0x430c52
4302fb: nop dword ptr [rax + rax]
430300: pslldq xmm2, 0xa
430305: pcmpeqb xmm2, xmm1
430309: psubb xmm2, xmm0
43030d: pmovmskb r9d, xmm2
430312: shr edx, cl
430314: shr r9d, cl
430317: sub edx, r9d
43031a: jne 0x430c80
430320: movdqa xmm3, xmmword ptr [rdi]
430324: lea r9, [rcx + r11 - 0x10]
430329: cmp r11, r9
43032c: jb 0x430ca4
430332: test r9, r9
430335: je 0x430ca4
43033b: mov r11, r9
43033e: mov rcx, 0x10
430345: mov r9d, 6
43034b: lea r10, [rdi + 6]
43034f: and r10, 0xfff
430356: sub r10, 0x1000
43035d: mov rdx, rcx
430360: add r10, 0x10
430364: jg 0x4303c0
430366: movdqa xmm0, xmmword ptr [rdi + rdx]
43036b: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 6
430373: pcmpistri xmm0, xmmword ptr [rsi + rdx], 0x1a
43037a: jbe 0x430c60
430380: sub r11, 0x10
430384: jbe 0x430ca4
43038a: add rdx, 0x10
43038e: add r10, 0x10
430392: jg 0x4303c0
430394: movdqa xmm0, xmmword ptr [rdi + rdx]
430399: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 6
4303a1: pcmpistri xmm0, xmmword ptr [rsi + rdx], 0x1a
4303a8: jbe 0x430c60
4303b0: jmp 0x4303c2
4303b8: add rdx, 0x10
4303bc: jmp 0x430360
4303be: nop 
4303c3: add byte ptr [rax], dl
4303c5: add byte ptr [rax], al
4303c7: movdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
4303cd: psrldq xmm0, 6
4303d2: pcmpistri xmm0, xmm0, 0x3a
4303d8: cmp rcx, r11
4303db: jae 0x430c52
4303e1: cmp ecx, 9
4303e4: ja 0x430366
4303e6: jmp 0x430c52
4303eb: nop dword ptr [rax + rax]
4303f0: pslldq xmm2, 9
4303f5: pcmpeqb xmm2, xmm1
4303f9: psubb xmm2, xmm0
4303fd: pmovmskb r9d, xmm2
430402: shr edx, cl
430404: shr r9d, cl
430407: sub edx, r9d
43040a: jne 0x430c80
430410: movdqa xmm3, xmmword ptr [rdi]
430414: lea r9, [rcx + r11 - 0x10]
430419: cmp r11, r9
43041c: jb 0x430ca4
430422: test r9, r9
430425: je 0x430ca4
43042b: mov r11, r9
43042e: mov rcx, 0x10
430435: mov r9d, 7
43043b: lea r10, [rdi + 7]
43043f: and r10, 0xfff
430446: sub r10, 0x1000
43044d: mov rdx, rcx
430450: add r10, 0x10
430454: jg 0x4304b0
430456: movdqa xmm0, xmmword ptr [rdi + rdx]
43045b: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 7
430463: pcmpistri xmm0, xmmword ptr [rsi + rdx], 0x1a
43046a: jbe 0x430c60
430470: sub r11, 0x10
430474: jbe 0x430ca4
43047a: add rdx, 0x10
43047e: add r10, 0x10
430482: jg 0x4304b0
430484: movdqa xmm0, xmmword ptr [rdi + rdx]
430489: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 7
430491: pcmpistri xmm0, xmmword ptr [rsi + rdx], 0x1a
430498: jbe 0x430c60
4304a0: jmp 0x4304b2
4304a8: add rdx, 0x10
4304ac: jmp 0x430450
4304ae: nop 
4304b3: add byte ptr [rax], dl
4304b5: add byte ptr [rax], al
4304b7: movdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
4304bd: psrldq xmm0, 7
4304c2: pcmpistri xmm0, xmm0, 0x3a
4304c8: cmp rcx, r11
4304cb: jae 0x430c52
4304d1: cmp ecx, 8
4304d4: ja 0x430456
4304d6: jmp 0x430c52
4304db: nop dword ptr [rax + rax]
4304e0: pslldq xmm2, 8
4304e5: pcmpeqb xmm2, xmm1
4304e9: psubb xmm2, xmm0
4304ed: pmovmskb r9d, xmm2
4304f2: shr edx, cl
4304f4: shr r9d, cl
4304f7: sub edx, r9d
4304fa: jne 0x430c80
430500: movdqa xmm3, xmmword ptr [rdi]
430504: lea r9, [rcx + r11 - 0x10]
430509: cmp r11, r9
43050c: jb 0x430ca4
430512: test r9, r9
430515: je 0x430ca4
43051b: mov r11, r9
43051e: mov rcx, 0x10
430525: mov r9d, 8
43052b: lea r10, [rdi + 8]
43052f: and r10, 0xfff
430536: sub r10, 0x1000
43053d: mov rdx, rcx
430540: add r10, 0x10
430544: jg 0x4305a0
430546: movdqa xmm0, xmmword ptr [rdi + rdx]
43054b: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 8
430553: pcmpistri xmm0, xmmword ptr [rsi + rdx], 0x1a
43055a: jbe 0x430c60
430560: sub r11, 0x10
430564: jbe 0x430ca4
43056a: add rdx, 0x10
43056e: add r10, 0x10
430572: jg 0x4305a0
430574: movdqa xmm0, xmmword ptr [rdi + rdx]
430579: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 8
430581: pcmpistri xmm0, xmmword ptr [rsi + rdx], 0x1a
430588: jbe 0x430c60
430590: jmp 0x4305a2
430598: add rdx, 0x10
43059c: jmp 0x430540
43059e: nop 
4305a3: add byte ptr [rax], dl
4305a5: add byte ptr [rax], al
4305a7: movdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
4305ad: psrldq xmm0, 8
4305b2: pcmpistri xmm0, xmm0, 0x3a
4305b8: cmp rcx, r11
4305bb: jae 0x430c52
4305c1: cmp ecx, 7
4305c4: ja 0x430546
4305c6: jmp 0x430c52
4305cb: nop dword ptr [rax + rax]
4305d0: pslldq xmm2, 7
4305d5: pcmpeqb xmm2, xmm1
4305d9: psubb xmm2, xmm0
4305dd: pmovmskb r9d, xmm2
4305e2: shr edx, cl
4305e4: shr r9d, cl
4305e7: sub edx, r9d
4305ea: jne 0x430c80
4305f0: movdqa xmm3, xmmword ptr [rdi]
4305f4: lea r9, [rcx + r11 - 0x10]
4305f9: cmp r11, r9
4305fc: jb 0x430ca4
430602: test r9, r9
430605: je 0x430ca4
43060b: mov r11, r9
43060e: mov rcx, 0x10
430615: mov r9d, 9
43061b: lea r10, [rdi + 9]
43061f: and r10, 0xfff
430626: sub r10, 0x1000
43062d: mov rdx, rcx
430630: add r10, 0x10
430634: jg 0x430690
430636: movdqa xmm0, xmmword ptr [rdi + rdx]
43063b: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 9
430643: pcmpistri xmm0, xmmword ptr [rsi + rdx], 0x1a
43064a: jbe 0x430c60
430650: sub r11, 0x10
430654: jbe 0x430ca4
43065a: add rdx, 0x10
43065e: add r10, 0x10
430662: jg 0x430690
430664: movdqa xmm0, xmmword ptr [rdi + rdx]
430669: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 9
430671: pcmpistri xmm0, xmmword ptr [rsi + rdx], 0x1a
430678: jbe 0x430c60
430680: jmp 0x430692
430688: add rdx, 0x10
43068c: jmp 0x430630
43068e: nop 
430693: add byte ptr [rax], dl
430695: add byte ptr [rax], al
430697: movdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
43069d: psrldq xmm0, 9
4306a2: pcmpistri xmm0, xmm0, 0x3a
4306a8: cmp rcx, r11
4306ab: jae 0x430c52
4306b1: cmp ecx, 6
4306b4: ja 0x430636
4306b6: jmp 0x430c52
4306bb: nop dword ptr [rax + rax]
4306c0: pslldq xmm2, 6
4306c5: pcmpeqb xmm2, xmm1
4306c9: psubb xmm2, xmm0
4306cd: pmovmskb r9d, xmm2
4306d2: shr edx, cl
4306d4: shr r9d, cl
4306d7: sub edx, r9d
4306da: jne 0x430c80
4306e0: movdqa xmm3, xmmword ptr [rdi]
4306e4: lea r9, [rcx + r11 - 0x10]
4306e9: cmp r11, r9
4306ec: jb 0x430ca4
4306f2: test r9, r9
4306f5: je 0x430ca4
4306fb: mov r11, r9
4306fe: mov rcx, 0x10
430705: mov r9d, 0xa
43070b: lea r10, [rdi + 0xa]
43070f: and r10, 0xfff
430716: sub r10, 0x1000
43071d: mov rdx, rcx
430720: add r10, 0x10
430724: jg 0x430780
430726: movdqa xmm0, xmmword ptr [rdi + rdx]
43072b: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 0xa
430733: pcmpistri xmm0, xmmword ptr [rsi + rdx], 0x1a
43073a: jbe 0x430c60
430740: sub r11, 0x10
430744: jbe 0x430ca4
43074a: add rdx, 0x10
43074e: add r10, 0x10
430752: jg 0x430780
430754: movdqa xmm0, xmmword ptr [rdi + rdx]
430759: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 0xa
430761: pcmpistri xmm0, xmmword ptr [rsi + rdx], 0x1a
430768: jbe 0x430c60
430770: jmp 0x430782
430778: add rdx, 0x10
43077c: jmp 0x430720
43077e: nop 
430783: add byte ptr [rax], dl
430785: add byte ptr [rax], al
430787: movdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
43078d: psrldq xmm0, 0xa
430792: pcmpistri xmm0, xmm0, 0x3a
430798: cmp rcx, r11
43079b: jae 0x430c52
4307a1: cmp ecx, 5
4307a4: ja 0x430726
4307a6: jmp 0x430c52
4307ab: nop dword ptr [rax + rax]
4307b0: pslldq xmm2, 5
4307b5: pcmpeqb xmm2, xmm1
4307b9: psubb xmm2, xmm0
4307bd: pmovmskb r9d, xmm2
4307c2: shr edx, cl
4307c4: shr r9d, cl
4307c7: sub edx, r9d
4307ca: jne 0x430c80
4307d0: movdqa xmm3, xmmword ptr [rdi]
4307d4: lea r9, [rcx + r11 - 0x10]
4307d9: cmp r11, r9
4307dc: jb 0x430ca4
4307e2: test r9, r9
4307e5: je 0x430ca4
4307eb: mov r11, r9
4307ee: mov rcx, 0x10
4307f5: mov r9d, 0xb
4307fb: lea r10, [rdi + 0xb]
4307ff: and r10, 0xfff
430806: sub r10, 0x1000
43080d: mov rdx, rcx
430810: add r10, 0x10
430814: jg 0x430870
430816: movdqa xmm0, xmmword ptr [rdi + rdx]
43081b: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 0xb
430823: pcmpistri xmm0, xmmword ptr [rsi + rdx], 0x1a
43082a: jbe 0x430c60
430830: sub r11, 0x10
430834: jbe 0x430ca4
43083a: add rdx, 0x10
43083e: add r10, 0x10
430842: jg 0x430870
430844: movdqa xmm0, xmmword ptr [rdi + rdx]
430849: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 0xb
430851: pcmpistri xmm0, xmmword ptr [rsi + rdx], 0x1a
430858: jbe 0x430c60
430860: jmp 0x430872
430868: add rdx, 0x10
43086c: jmp 0x430810
43086e: nop 
430873: add byte ptr [rax], dl
430875: add byte ptr [rax], al
430877: movdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
43087d: psrldq xmm0, 0xb
430882: pcmpistri xmm0, xmm0, 0x3a
430888: cmp rcx, r11
43088b: jae 0x430c52
430891: cmp ecx, 4
430894: ja 0x430816
430896: jmp 0x430c52
43089b: nop dword ptr [rax + rax]
4308a0: pslldq xmm2, 4
4308a5: pcmpeqb xmm2, xmm1
4308a9: psubb xmm2, xmm0
4308ad: pmovmskb r9d, xmm2
4308b2: shr edx, cl
4308b4: shr r9d, cl
4308b7: sub edx, r9d
4308ba: jne 0x430c80
4308c0: movdqa xmm3, xmmword ptr [rdi]
4308c4: lea r9, [rcx + r11 - 0x10]
4308c9: cmp r11, r9
4308cc: jb 0x430ca4
4308d2: test r9, r9
4308d5: je 0x430ca4
4308db: mov r11, r9
4308de: mov rcx, 0x10
4308e5: mov r9d, 0xc
4308eb: lea r10, [rdi + 0xc]
4308ef: and r10, 0xfff
4308f6: sub r10, 0x1000
4308fd: mov rdx, rcx
430900: add r10, 0x10
430904: jg 0x430960
430906: movdqa xmm0, xmmword ptr [rdi + rdx]
43090b: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 0xc
430913: pcmpistri xmm0, xmmword ptr [rsi + rdx], 0x1a
43091a: jbe 0x430c60
430920: sub r11, 0x10
430924: jbe 0x430ca4
43092a: add rdx, 0x10
43092e: add r10, 0x10
430932: jg 0x430960
430934: movdqa xmm0, xmmword ptr [rdi + rdx]
430939: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 0xc
430941: pcmpistri xmm0, xmmword ptr [rsi + rdx], 0x1a
430948: jbe 0x430c60
430950: jmp 0x430962
430958: add rdx, 0x10
43095c: jmp 0x430900
43095e: nop 
430963: add byte ptr [rax], dl
430965: add byte ptr [rax], al
430967: movdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
43096d: psrldq xmm0, 0xc
430972: pcmpistri xmm0, xmm0, 0x3a
430978: cmp rcx, r11
43097b: jae 0x430c52
430981: cmp ecx, 3
430984: ja 0x430906
430986: jmp 0x430c52
43098b: nop dword ptr [rax + rax]
430990: pslldq xmm2, 3
430995: pcmpeqb xmm2, xmm1
430999: psubb xmm2, xmm0
43099d: pmovmskb r9d, xmm2
4309a2: shr edx, cl
4309a4: shr r9d, cl
4309a7: sub edx, r9d
4309aa: jne 0x430c80
4309b0: movdqa xmm3, xmmword ptr [rdi]
4309b4: lea r9, [rcx + r11 - 0x10]
4309b9: cmp r11, r9
4309bc: jb 0x430ca4
4309c2: test r9, r9
4309c5: je 0x430ca4
4309cb: mov r11, r9
4309ce: mov rcx, 0x10
4309d5: mov r9d, 0xd
4309db: lea r10, [rdi + 0xd]
4309df: and r10, 0xfff
4309e6: sub r10, 0x1000
4309ed: mov rdx, rcx
4309f0: add r10, 0x10
4309f4: jg 0x430a50
4309f6: movdqa xmm0, xmmword ptr [rdi + rdx]
4309fb: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 0xd
430a03: pcmpistri xmm0, xmmword ptr [rsi + rdx], 0x1a
430a0a: jbe 0x430c60
430a10: sub r11, 0x10
430a14: jbe 0x430ca4
430a1a: add rdx, 0x10
430a1e: add r10, 0x10
430a22: jg 0x430a50
430a24: movdqa xmm0, xmmword ptr [rdi + rdx]
430a29: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 0xd
430a31: pcmpistri xmm0, xmmword ptr [rsi + rdx], 0x1a
430a38: jbe 0x430c60
430a40: jmp 0x430a52
430a48: add rdx, 0x10
430a4c: jmp 0x4309f0
430a4e: nop 
430a53: add byte ptr [rax], dl
430a55: add byte ptr [rax], al
430a57: movdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
430a5d: psrldq xmm0, 0xd
430a62: pcmpistri xmm0, xmm0, 0x3a
430a68: cmp rcx, r11
430a6b: jae 0x430c52
430a71: cmp ecx, 2
430a74: ja 0x4309f6
430a76: jmp 0x430c52
430a7b: nop dword ptr [rax + rax]
430a80: pslldq xmm2, 2
430a85: pcmpeqb xmm2, xmm1
430a89: psubb xmm2, xmm0
430a8d: pmovmskb r9d, xmm2
430a92: shr edx, cl
430a94: shr r9d, cl
430a97: sub edx, r9d
430a9a: jne 0x430c80
430aa0: movdqa xmm3, xmmword ptr [rdi]
430aa4: lea r9, [rcx + r11 - 0x10]
430aa9: cmp r11, r9
430aac: jb 0x430ca4
430ab2: test r9, r9
430ab5: je 0x430ca4
430abb: mov r11, r9
430abe: mov rcx, 0x10
430ac5: mov r9d, 0xe
430acb: lea r10, [rdi + 0xe]
430acf: and r10, 0xfff
430ad6: sub r10, 0x1000
430add: mov rdx, rcx
430ae0: add r10, 0x10
430ae4: jg 0x430b40
430ae6: movdqa xmm0, xmmword ptr [rdi + rdx]
430aeb: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 0xe
430af3: pcmpistri xmm0, xmmword ptr [rsi + rdx], 0x1a
430afa: jbe 0x430c60
430b00: sub r11, 0x10
430b04: jbe 0x430ca4
430b0a: add rdx, 0x10
430b0e: add r10, 0x10
430b12: jg 0x430b40
430b14: movdqa xmm0, xmmword ptr [rdi + rdx]
430b19: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 0xe
430b21: pcmpistri xmm0, xmmword ptr [rsi + rdx], 0x1a
430b28: jbe 0x430c60
430b30: jmp 0x430b42
430b38: add rdx, 0x10
430b3c: jmp 0x430ae0
430b3e: nop 
430b43: add byte ptr [rax], dl
430b45: add byte ptr [rax], al
430b47: movdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
430b4d: psrldq xmm0, 0xe
430b52: pcmpistri xmm0, xmm0, 0x3a
430b58: cmp rcx, r11
430b5b: jae 0x430c52
430b61: cmp ecx, 1
430b64: ja 0x430ae6
430b66: jmp 0x430c52
430b6b: nop dword ptr [rax + rax]
430b70: pslldq xmm2, 1
430b75: pcmpeqb xmm2, xmm1
430b79: psubb xmm2, xmm0
430b7d: pmovmskb r9d, xmm2
430b82: shr edx, cl
430b84: shr r9d, cl
430b87: sub edx, r9d
430b8a: jne 0x430c80
430b90: movdqa xmm3, xmmword ptr [rdi]
430b94: lea r9, [rcx + r11 - 0x10]
430b99: cmp r11, r9
430b9c: jb 0x430ca4
430ba2: test r9, r9
430ba5: je 0x430ca4
430bab: mov r11, r9
430bae: mov rcx, 0x10
430bb5: mov r9d, 0xf
430bbb: lea r10, [rdi + 0xf]
430bbf: and r10, 0xfff
430bc6: sub r10, 0x1000
430bcd: mov rdx, rcx
430bd0: add r10, 0x10
430bd4: jg 0x430c30
430bd6: movdqa xmm0, xmmword ptr [rdi + rdx]
430bdb: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 0xf
430be3: pcmpistri xmm0, xmmword ptr [rsi + rdx], 0x1a
430bea: jbe 0x430c60
430bec: sub r11, 0x10
430bf0: jbe 0x430ca4
430bf6: add rdx, 0x10
430bfa: add r10, 0x10
430bfe: jg 0x430c30
430c00: movdqa xmm0, xmmword ptr [rdi + rdx]
430c05: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 0xf
430c0d: pcmpistri xmm0, xmmword ptr [rsi + rdx], 0x1a
430c14: jbe 0x430c60
430c16: sub r11, 0x10
430c1a: jbe 0x430ca4
430c20: add rdx, 0x10
430c24: jmp 0x430bd0
430c26: nop word ptr cs:[rax + rax]
430c30: sub r10, 0x1000
430c37: movdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
430c3d: psrldq xmm0, 0xf
430c42: pcmpistri xmm0, xmm0, 0x3a
430c48: cmp rcx, r11
430c4b: jae 0x430c52
430c4d: cmp ecx, 0
430c50: ja 0x430bd6
430c52: pcmpistri xmm0, xmmword ptr [rsi + rdx], 0x1a
430c59: nop dword ptr [rax]
430c60: jae 0x430ca4
430c62: sub r11, rcx
430c65: jbe 0x430ca4
430c67: add rdx, rcx
430c6a: lea rdi, [rdi + r9 - 0x10]
430c6f: movzx eax, byte ptr [rdi + rdx]
430c73: movzx edx, byte ptr [rsi + rdx]
430c77: test r8d, r8d
430c7a: je 0x430c7d
430c7c: xchg edx, eax
430c7d: sub eax, edx
430c7f: ret 
430c80: lea rdi, [rdi + rax]
430c84: lea rsi, [rsi + rcx]
430c88: test r8d, r8d
430c8b: je 0x430c90
430c8d: xchg rdi, rsi
430c90: bsf rdx, rdx
430c94: sub r11, rdx
430c97: jbe 0x430ca4
430c99: movzx ecx, byte ptr [rsi + rdx]
430c9d: movzx eax, byte ptr [rdi + rdx]
430ca1: sub eax, ecx
430ca3: ret 
430ca4: xor eax, eax
430ca6: ret 
430ca7: nop word ptr [rax + rax]
430cb0: movzx ecx, byte ptr [rsi]
430cb3: movzx eax, byte ptr [rdi]
430cb6: sub eax, ecx
430cb8: ret 
430cb9: nop dword ptr [rax]
430cc0: endbr64 
430cc4: cmp rdx, 1
430cc8: je 0x4310c0
430cce: jb 0x4310b0
430cd4: mov r11, rdx
430cd7: mov eax, edi
430cd9: xor edx, edx
430cdb: vpxor ymm7, ymm7, ymm7
430cdf: or eax, esi
430ce1: and eax, 0xfff
430ce6: cmp eax, 0xf80
430ceb: jg 0x4310f0
430cf1: vmovdqu ymm1, ymmword ptr [rdi]
430cf5: vpcmpeqb ymm0, ymm1, ymmword ptr [rsi]
430cf9: vpminub ymm0, ymm0, ymm1
430cfd: vpcmpeqb ymm0, ymm0, ymm7
430d01: vpmovmskb ecx, ymm0
430d05: test ecx, ecx
430d07: je 0x430d90
430d0d: tzcnt edx, ecx
430d11: cmp rdx, r11
430d14: jae 0x4310b0
430d1a: movzx eax, byte ptr [rdi + rdx]
430d1e: movzx edx, byte ptr [rsi + rdx]
430d22: sub eax, edx
430d24: vzeroupper 
430d27: ret 
430d28: nop dword ptr [rax + rax]
430d30: tzcnt edx, ecx
430d34: add rdx, 0x20
430d38: cmp rdx, r11
430d3b: jae 0x4310b0
430d41: movzx eax, byte ptr [rdi + rdx]
430d45: movzx edx, byte ptr [rsi + rdx]
430d49: sub eax, edx
430d4b: vzeroupper 
430d4e: ret 
430d4f: nop 
430d50: tzcnt edx, ecx
430d54: add rdx, 0x40
430d58: cmp rdx, r11
430d5b: jae 0x4310b0
430d61: movzx eax, byte ptr [rdi + rdx]
430d65: movzx edx, byte ptr [rsi + rdx]
430d69: sub eax, edx
430d6b: vzeroupper 
430d6e: ret 
430d6f: nop 
430d70: tzcnt edx, ecx
430d74: add rdx, 0x60
430d78: cmp rdx, r11
430d7b: jae 0x4310b0
430d81: movzx eax, byte ptr [rdi + rdx]
430d85: movzx edx, byte ptr [rsi + rdx]
430d89: sub eax, edx
430d8b: vzeroupper 
430d8e: ret 
430d8f: nop 
430d90: vmovdqu ymm6, ymmword ptr [rdi + 0x20]
430d95: vpcmpeqb ymm3, ymm6, ymmword ptr [rsi + 0x20]
430d9a: vpminub ymm3, ymm3, ymm6
430d9e: vpcmpeqb ymm3, ymm3, ymm7
430da2: vpmovmskb ecx, ymm3
430da6: test ecx, ecx
430da8: jne 0x430d30
430daa: vmovdqu ymm5, ymmword ptr [rdi + 0x40]
430daf: vmovdqu ymm4, ymmword ptr [rdi + 0x60]
430db4: vmovdqu ymm0, ymmword ptr [rsi + 0x60]
430db9: vpcmpeqb ymm2, ymm5, ymmword ptr [rsi + 0x40]
430dbe: vpminub ymm2, ymm2, ymm5
430dc2: vpcmpeqb ymm0, ymm0, ymm4
430dc6: vpcmpeqb ymm2, ymm2, ymm7
430dca: vpmovmskb ecx, ymm2
430dce: test ecx, ecx
430dd0: jne 0x430d50
430dd6: vpminub ymm0, ymm0, ymm4
430dda: vpcmpeqb ymm0, ymm0, ymm7
430dde: vpmovmskb ecx, ymm0
430de2: test ecx, ecx
430de4: jne 0x430d70
430de6: lea rdx, [rdi + 0x80]
430ded: mov ecx, 0x1000
430df2: and rdx, 0xffffffffffffff80
430df6: sub rdx, rdi
430df9: lea rax, [rdi + rdx]
430dfd: sub r11, rdx
430e00: jbe 0x4310b0
430e06: add rdx, rsi
430e09: mov rsi, rdx
430e0c: and esi, 0xfff
430e12: sub rcx, rsi
430e15: shr rcx, 7
430e19: mov esi, ecx
430e1b: jmp 0x430e3a
430e1d: nop dword ptr [rax]
430e20: sub r11, 0x80
430e27: jbe 0x4310b0
430e2d: add rax, 0x80
430e33: add rdx, 0x80
430e3a: test esi, esi
430e3c: lea esi, [esi - 1]
430e40: je 0x430f80
430e46: vmovdqa ymm0, ymmword ptr [rax]
430e4a: vmovdqa ymm3, ymmword ptr [rax + 0x20]
430e4f: vpcmpeqb ymm4, ymm0, ymmword ptr [rdx]
430e53: vpcmpeqb ymm1, ymm3, ymmword ptr [rdx + 0x20]
430e58: vpminub ymm4, ymm4, ymm0
430e5c: vpminub ymm1, ymm1, ymm3
430e60: vmovdqa ymm2, ymmword ptr [rax + 0x40]
430e65: vpminub ymm0, ymm4, ymm1
430e69: vmovdqa ymm3, ymmword ptr [rax + 0x60]
430e6e: vpcmpeqb ymm5, ymm2, ymmword ptr [rdx + 0x40]
430e73: vpcmpeqb ymm6, ymm3, ymmword ptr [rdx + 0x60]
430e78: vpminub ymm5, ymm5, ymm2
430e7c: vpminub ymm6, ymm6, ymm3
430e80: vpminub ymm0, ymm0, ymm5
430e84: vpminub ymm0, ymm0, ymm6
430e88: vpcmpeqb ymm0, ymm0, ymm7
430e8c: vpmovmskb ecx, ymm0
430e90: test ecx, ecx
430e92: je 0x430e20
430e94: vpcmpeqb ymm0, ymm4, ymm7
430e98: vpmovmskb edi, ymm0
430e9c: test edi, edi
430e9e: je 0x430ec0
430ea0: tzcnt ecx, edi
430ea4: cmp r11, rcx
430ea7: jbe 0x4310b0
430ead: movzx eax, byte ptr [rax + rcx]
430eb1: movzx edx, byte ptr [rdx + rcx]
430eb5: sub eax, edx
430eb7: vzeroupper 
430eba: ret 
430ebb: nop dword ptr [rax + rax]
430ec0: cmp r11, 0x20
430ec4: jbe 0x4310b0
430eca: vpcmpeqb ymm1, ymm1, ymm7
430ece: vpmovmskb ecx, ymm1
430ed2: test ecx, ecx
430ed4: je 0x430f00
430ed6: tzcnt edi, ecx
430eda: add rdi, 0x20
430ede: cmp r11, rdi
430ee1: jbe 0x4310b0
430ee7: movzx eax, byte ptr [rax + rdi]
430eeb: movzx edx, byte ptr [rdx + rdi]
430eef: sub eax, edx
430ef1: vzeroupper 
430ef4: ret 
430ef5: nop word ptr cs:[rax + rax]
430f00: cmp r11, 0x40
430f04: jbe 0x4310b0
430f0a: vpcmpeqb ymm5, ymm5, ymm7
430f0e: vpmovmskb ecx, ymm5
430f12: test ecx, ecx
430f14: je 0x430f40
430f16: tzcnt edi, ecx
430f1a: add rdi, 0x40
430f1e: cmp r11, rdi
430f21: jbe 0x4310b0
430f27: movzx eax, byte ptr [rax + rdi]
430f2b: movzx edx, byte ptr [rdx + rdi]
430f2f: sub eax, edx
430f31: vzeroupper 
430f34: ret 
430f35: nop word ptr cs:[rax + rax]
430f40: cmp r11, 0x60
430f44: jbe 0x4310b0
430f4a: vpcmpeqb ymm6, ymm6, ymm7
430f4e: vpmovmskb esi, ymm6
430f52: tzcnt ecx, esi
430f56: add rcx, 0x60
430f5a: cmp r11, rcx
430f5d: jbe 0x4310b0
430f63: movzx eax, byte ptr [rax + rcx]
430f67: movzx edx, byte ptr [rdx + rcx]
430f6b: sub eax, edx
430f6d: vzeroupper 
430f70: ret 
430f71: nop word ptr cs:[rax + rax]
430f7c: nop dword ptr [rax]
430f80: xor r10d, r10d
430f83: mov rcx, rdx
430f86: and ecx, 0x7f
430f89: sub r10, rcx
430f8c: cmp ecx, 0x40
430f8f: jge 0x430ff0
430f91: vmovdqu ymm2, ymmword ptr [rax + r10]
430f97: vmovdqu ymm3, ymmword ptr [rax + r10 + 0x20]
430f9e: vpcmpeqb ymm0, ymm2, ymmword ptr [rdx + r10]
430fa4: vpcmpeqb ymm1, ymm3, ymmword ptr [rdx + r10 + 0x20]
430fab: vpminub ymm0, ymm0, ymm2
430faf: vpminub ymm1, ymm1, ymm3
430fb3: vpcmpeqb ymm0, ymm0, ymm7
430fb7: vpcmpeqb ymm1, ymm1, ymm7
430fbb: vpmovmskb edi, ymm0
430fbf: vpmovmskb esi, ymm1
430fc3: shl rsi, 0x20
430fc7: xor rdi, rsi
430fca: shr rdi, cl
430fcd: test rdi, rdi
430fd0: je 0x430ff0
430fd2: tzcnt rcx, rdi
430fd7: cmp r11, rcx
430fda: jbe 0x4310b0
430fe0: movzx eax, byte ptr [rax + rcx]
430fe4: movzx edx, byte ptr [rdx + rcx]
430fe8: sub eax, edx
430fea: vzeroupper 
430fed: ret 
430fee: nop 
430ff0: vmovdqu ymm2, ymmword ptr [rax + r10 + 0x40]
430ff7: vmovdqu ymm3, ymmword ptr [rax + r10 + 0x60]
430ffe: vpcmpeqb ymm5, ymm2, ymmword ptr [rdx + r10 + 0x40]
431005: vpminub ymm5, ymm5, ymm2
431009: vpcmpeqb ymm6, ymm3, ymmword ptr [rdx + r10 + 0x60]
431010: vpcmpeqb ymm5, ymm5, ymm7
431014: vpminub ymm6, ymm6, ymm3
431018: vpcmpeqb ymm6, ymm6, ymm7
43101c: vpmovmskb edi, ymm5
431020: vpmovmskb esi, ymm6
431024: shl rsi, 0x20
431028: xor rdi, rsi
43102b: xor r8d, r8d
43102e: sub ecx, 0x40
431031: jle 0x431039
431033: shr rdi, cl
431036: mov r8d, ecx
431039: mov esi, 0x1f
43103e: test rdi, rdi
431041: je 0x431065
431043: tzcnt rcx, rdi
431048: add rcx, r10
43104b: add rcx, r8
43104e: add rcx, 0x40
431052: sub r11, rcx
431055: jbe 0x4310b0
431057: movzx eax, byte ptr [rax + rcx]
43105b: movzx edx, byte ptr [rdx + rcx]
43105f: sub eax, edx
431061: vzeroupper 
431064: ret 
431065: lea r10, [r10 + 0x80]
43106c: cmp r11, r10
43106f: jbe 0x4310b0
431071: jmp 0x430e46
431076: nop word ptr cs:[rax + rax]
431080: sub eax, ecx
431082: jne 0x4310a6
431084: add edx, 1
431087: cmp edx, 0x80
43108d: je 0x430de6
431093: cmp rdx, r11
431096: jae 0x4310b0
431098: movzx eax, byte ptr [rdi + rdx]
43109c: movzx ecx, byte ptr [rsi + rdx]
4310a0: test eax, eax
4310a2: jne 0x431080
4310a4: sub eax, ecx
4310a6: vzeroupper 
4310a9: ret 
4310aa: nop word ptr [rax + rax]
4310b0: xor eax, eax
4310b2: vzeroupper 
4310b5: ret 
4310b6: nop word ptr cs:[rax + rax]
4310c0: movzx ecx, byte ptr [rsi]
4310c3: movzx eax, byte ptr [rdi]
4310c6: sub eax, ecx
4310c8: vzeroupper 
4310cb: ret 
4310cc: nop dword ptr [rax]
4310d0: add rdi, rdx
4310d3: add rsi, rdx
4310d6: sub r11, rdx
4310d9: tzcnt edx, ecx
4310dd: cmp rdx, r11
4310e0: jae 0x4310b0
4310e2: movzx eax, byte ptr [rdi + rdx]
4310e6: movzx edx, byte ptr [rsi + rdx]
4310ea: sub eax, edx
4310ec: vzeroupper 
4310ef: ret 
4310f0: cmp eax, 0xfe0
4310f5: jg 0x431123
4310f7: vmovdqu ymm1, ymmword ptr [rdi + rdx]
4310fc: vpcmpeqb ymm0, ymm1, ymmword ptr [rsi + rdx]
431101: vpminub ymm0, ymm0, ymm1
431105: vpcmpeqb ymm0, ymm0, ymm7
431109: vpmovmskb ecx, ymm0
43110d: test ecx, ecx
43110f: jne 0x4310d0
431111: add edx, 0x20
431114: add eax, 0x20
431117: cmp rdx, r11
43111a: jae 0x4310b0
43111c: cmp eax, 0xfe0
431121: jle 0x4310f7
431123: cmp eax, 0xff0
431128: jg 0x431153
43112a: vmovdqu xmm1, xmmword ptr [rdi + rdx]
43112f: vpcmpeqb xmm0, xmm1, xmmword ptr [rsi + rdx]
431134: vpminub xmm0, xmm0, xmm1
431138: vpcmpeqb xmm0, xmm0, xmm7
43113c: vpmovmskb ecx, xmm0
431140: test ecx, ecx
431142: jne 0x4310d0
431144: add edx, 0x10
431147: add eax, 0x10
43114a: cmp rdx, r11
43114d: jae 0x4310b0
431153: cmp eax, 0xff8
431158: jg 0x431191
43115a: vmovq xmm1, qword ptr [rdi + rdx]
43115f: vmovq xmm0, qword ptr [rsi + rdx]
431164: vpcmpeqb xmm0, xmm1, xmm0
431168: vpminub xmm0, xmm0, xmm1
43116c: vpcmpeqb xmm0, xmm0, xmm7
431170: vpmovmskb ecx, xmm0
431174: and ecx, 0xff
43117a: test ecx, ecx
43117c: jne 0x4310d0
431182: add edx, 8
431185: add eax, 8
431188: cmp rdx, r11
43118b: jae 0x4310b0
431191: cmp eax, 0xffc
431196: jg 0x4311c9
431198: vmovd xmm1, dword ptr [rdi + rdx]
43119d: vmovd xmm0, dword ptr [rsi + rdx]
4311a2: vpcmpeqb xmm0, xmm1, xmm0
4311a6: vpminub xmm0, xmm0, xmm1
4311aa: vpcmpeqb xmm0, xmm0, xmm7
4311ae: vpmovmskb ecx, xmm0
4311b2: and ecx, 0xf
4311b5: test ecx, ecx
4311b7: jne 0x4310d0
4311bd: add edx, 4
4311c0: cmp rdx, r11
4311c3: jae 0x4310b0
4311c9: cmp rdx, r11
4311cc: jae 0x4310b0
4311d2: movzx eax, byte ptr [rdi + rdx]
4311d6: movzx ecx, byte ptr [rsi + rdx]
4311da: test eax, eax
4311dc: jne 0x431080
4311e2: sub eax, ecx
4311e4: vzeroupper 
4311e7: ret 
4311e8: nop dword ptr [rax + rax]
4311f0: endbr64 
4311f4: movq xmm1, rsi
4311f9: mov rcx, rdi
4311fc: punpcklbw xmm1, xmm1
431200: punpcklbw xmm1, xmm1
431204: and rcx, 0x3f
431208: pshufd xmm1, xmm1, 0
43120d: cmp rcx, 0x30
431211: ja 0x431240
431213: movdqu xmm0, xmmword ptr [rdi]
431217: pcmpeqb xmm0, xmm1
43121b: pmovmskb eax, xmm0
43121f: test eax, eax
431221: jne 0x4313d0
431227: add rdi, 0x10
43122b: and rdi, 0xfffffffffffffff0
43122f: jmp 0x431280
431231: nop word ptr cs:[rax + rax]
43123c: nop dword ptr [rax]
431240: and rcx, 0xf
431244: and rdi, 0xfffffffffffffff0
431248: movdqa xmm0, xmmword ptr [rdi]
43124c: pcmpeqb xmm0, xmm1
431250: pmovmskb eax, xmm0
431254: sar eax, cl
431256: test eax, eax
431258: je 0x431270
43125a: bsf eax, eax
43125d: add rax, rdi
431260: add rax, rcx
431263: ret 
431264: nop word ptr cs:[rax + rax]
43126f: nop 
431270: add rdi, 0x10
431274: nop word ptr cs:[rax + rax]
43127f: nop 
431280: movdqa xmm0, xmmword ptr [rdi]
431284: pcmpeqb xmm0, xmm1
431288: pmovmskb eax, xmm0
43128c: test eax, eax
43128e: jne 0x4313d0
431294: movdqa xmm2, xmmword ptr [rdi + 0x10]
431299: pcmpeqb xmm2, xmm1
43129d: pmovmskb eax, xmm2
4312a1: test eax, eax
4312a3: jne 0x4313e0
4312a9: movdqa xmm3, xmmword ptr [rdi + 0x20]
4312ae: pcmpeqb xmm3, xmm1
4312b2: pmovmskb eax, xmm3
4312b6: test eax, eax
4312b8: jne 0x4313f0
4312be: movdqa xmm4, xmmword ptr [rdi + 0x30]
4312c3: pcmpeqb xmm4, xmm1
4312c7: add rdi, 0x40
4312cb: pmovmskb eax, xmm4
4312cf: test eax, eax
4312d1: jne 0x4313c0
4312d7: test rdi, 0x3f
4312de: je 0x431340
4312e0: movdqa xmm0, xmmword ptr [rdi]
4312e4: pcmpeqb xmm0, xmm1
4312e8: pmovmskb eax, xmm0
4312ec: test eax, eax
4312ee: jne 0x4313d0
4312f4: movdqa xmm2, xmmword ptr [rdi + 0x10]
4312f9: pcmpeqb xmm2, xmm1
4312fd: pmovmskb eax, xmm2
431301: test eax, eax
431303: jne 0x4313e0
431309: movdqa xmm3, xmmword ptr [rdi + 0x20]
43130e: pcmpeqb xmm3, xmm1
431312: pmovmskb eax, xmm3
431316: test eax, eax
431318: jne 0x4313f0
43131e: movdqa xmm3, xmmword ptr [rdi + 0x30]
431323: pcmpeqb xmm3, xmm1
431327: pmovmskb eax, xmm3
43132b: add rdi, 0x40
43132f: test eax, eax
431331: jne 0x4313c0
431337: and rdi, 0xffffffffffffffc0
43133b: nop dword ptr [rax + rax]
431340: movdqa xmm0, xmmword ptr [rdi]
431344: movdqa xmm2, xmmword ptr [rdi + 0x10]
431349: movdqa xmm3, xmmword ptr [rdi + 0x20]
43134e: movdqa xmm4, xmmword ptr [rdi + 0x30]
431353: pcmpeqb xmm0, xmm1
431357: pcmpeqb xmm2, xmm1
43135b: pcmpeqb xmm3, xmm1
43135f: pcmpeqb xmm4, xmm1
431363: pmaxub xmm3, xmm0
431367: pmaxub xmm4, xmm2
43136b: pmaxub xmm4, xmm3
43136f: pmovmskb eax, xmm4
431373: add rdi, 0x40
431377: test eax, eax
431379: je 0x431340
43137b: sub rdi, 0x40
43137f: pmovmskb eax, xmm0
431383: test eax, eax
431385: jne 0x4313d0
431387: pmovmskb eax, xmm2
43138b: test eax, eax
43138d: jne 0x4313e0
43138f: movdqa xmm3, xmmword ptr [rdi + 0x20]
431394: pcmpeqb xmm3, xmm1
431398: pcmpeqb xmm1, xmmword ptr [rdi + 0x30]
43139d: pmovmskb eax, xmm3
4313a1: test eax, eax
4313a3: jne 0x4313f0
4313a5: pmovmskb eax, xmm1
4313a9: bsf eax, eax
4313ac: lea rax, [rdi + rax + 0x30]
4313b1: ret 
4313b2: nop word ptr cs:[rax + rax]
4313bd: nop dword ptr [rax]
4313c0: bsf eax, eax
4313c3: lea rax, [rax + rdi - 0x10]
4313c8: ret 
4313c9: nop dword ptr [rax]
4313d0: bsf eax, eax
4313d3: add rax, rdi
4313d6: ret 
4313d7: nop word ptr [rax + rax]
4313e0: bsf eax, eax
4313e3: lea rax, [rax + rdi + 0x10]
4313e8: ret 
4313e9: nop dword ptr [rax]
4313f0: bsf eax, eax
4313f3: lea rax, [rax + rdi + 0x20]
4313f8: ret 
4313f9: nop dword ptr [rax]
431400: endbr64 
431404: mov ecx, edi
431406: vmovd xmm0, esi
43140a: vpbroadcastb ymm0, xmm0
43140f: and ecx, 0x3f
431412: cmp ecx, 0x20
431415: ja 0x431440
431417: vpcmpeqb ymm1, ymm0, ymmword ptr [rdi]
43141b: vpmovmskb eax, ymm1
43141f: test eax, eax
431421: jne 0x4314f0
431427: add rdi, 0x20
43142b: and ecx, 0x1f
43142e: and rdi, 0xffffffffffffffe0
431432: jmp 0x431474
431434: nop word ptr cs:[rax + rax]
43143f: nop 
431440: and ecx, 0x1f
431443: and rdi, 0xffffffffffffffe0
431447: vpcmpeqb ymm1, ymm0, ymmword ptr [rdi]
43144b: vpmovmskb eax, ymm1
43144f: sar eax, cl
431451: test eax, eax
431453: je 0x431470
431455: tzcnt eax, eax
431459: add rax, rdi
43145c: add rax, rcx
43145f: vzeroupper 
431462: ret 
431463: nop word ptr cs:[rax + rax]
43146e: nop 
431470: add rdi, 0x20
431474: vpcmpeqb ymm1, ymm0, ymmword ptr [rdi]
431478: vpmovmskb eax, ymm1
43147c: test eax, eax
43147e: jne 0x4314f0
431480: vpcmpeqb ymm1, ymm0, ymmword ptr [rdi + 0x20]
431485: vpmovmskb eax, ymm1
431489: test eax, eax
43148b: jne 0x431500
43148d: vpcmpeqb ymm1, ymm0, ymmword ptr [rdi + 0x40]
431492: vpmovmskb eax, ymm1
431496: test eax, eax
431498: jne 0x431510
43149a: vpcmpeqb ymm1, ymm0, ymmword ptr [rdi + 0x60]
43149f: vpmovmskb eax, ymm1
4314a3: test eax, eax
4314a5: jne 0x43153e
4314ab: add rdi, 0x80
4314b2: mov rcx, rdi
4314b5: and ecx, 0x7f
4314b8: and rdi, 0xffffffffffffff80
4314bc: nop dword ptr [rax]
4314c0: vpcmpeqb ymm1, ymm0, ymmword ptr [rdi]
4314c4: vpcmpeqb ymm2, ymm0, ymmword ptr [rdi + 0x20]
4314c9: vpcmpeqb ymm3, ymm0, ymmword ptr [rdi + 0x40]
4314ce: vpcmpeqb ymm4, ymm0, ymmword ptr [rdi + 0x60]
4314d3: vpor ymm5, ymm2, ymm1
4314d7: vpor ymm6, ymm4, ymm3
4314db: vpor ymm5, ymm6, ymm5
4314df: vpmovmskb eax, ymm5
4314e3: test eax, eax
4314e5: jne 0x431520
4314e7: add rdi, 0x80
4314ee: jmp 0x4314c0
4314f0: tzcnt eax, eax
4314f4: add rax, rdi
4314f7: vzeroupper 
4314fa: ret 
4314fb: nop dword ptr [rax + rax]
431500: tzcnt eax, eax
431504: add rax, 0x20
431508: add rax, rdi
43150b: vzeroupper 
43150e: ret 
43150f: nop 
431510: tzcnt eax, eax
431514: add rax, 0x40
431518: add rax, rdi
43151b: vzeroupper 
43151e: ret 
43151f: nop 
431520: vpmovmskb eax, ymm1
431524: test eax, eax
431526: jne 0x4314f0
431528: vpmovmskb eax, ymm2
43152c: test eax, eax
43152e: jne 0x431500
431530: vpmovmskb eax, ymm3
431534: test eax, eax
431536: jne 0x431510
431538: vpmovmskb eax, ymm4
43153c: test eax, eax
43153e: tzcnt eax, eax
431542: add rax, 0x60
431546: add rax, rdi
431549: vzeroupper 
43154c: ret 
43154d: nop dword ptr [rax]
431550: endbr64 
431554: test rdx, rdx
431557: je 0x431650
43155d: cmp rdx, 1
431561: jbe 0x431621
431567: sub rsi, rdi
43156a: mov r10, rdx
43156d: cmp r10, 0x20
431571: jae 0x431653
431577: test r10, 1
43157e: je 0x43159d
431580: movzx eax, byte ptr [rdi]
431583: movzx edx, byte ptr [rdi + rsi]
431587: sub r10, 1
43158b: je 0x431627
431591: add rdi, 1
431595: sub eax, edx
431597: jne 0x431629
43159d: test r10, 2
4315a4: je 0x4315bb
4315a6: movzx eax, word ptr [rdi]
4315a9: movzx edx, word ptr [rdi + rsi]
4315ad: sub r10, 2
4315b1: je 0x43162a
4315b3: add rdi, 2
4315b7: cmp eax, edx
4315b9: jne 0x43162a
4315bb: test r10, 4
4315c2: je 0x4315d7
4315c4: mov eax, dword ptr [rdi]
4315c6: mov edx, dword ptr [rdi + rsi]
4315c9: sub r10, 4
4315cd: je 0x43162a
4315cf: add rdi, 4
4315d3: cmp eax, edx
4315d5: jne 0x43162a
4315d7: test r10, 8
4315de: je 0x4315f6
4315e0: mov rax, qword ptr [rdi]
4315e3: mov rdx, qword ptr [rdi + rsi]
4315e7: sub r10, 8
4315eb: je 0x43162a
4315ed: add rdi, 8
4315f1: cmp rax, rdx
4315f4: jne 0x43162a
4315f6: movdqu xmm1, xmmword ptr [rdi]
4315fa: movdqu xmm0, xmmword ptr [rdi + rsi]
4315ff: pcmpeqb xmm1, xmm0
431603: pmovmskb edx, xmm1
431607: xor eax, eax
431609: sub edx, 0xffff
43160f: je 0x431650
431611: bsf ecx, edx
431614: lea rcx, [rdi + rcx]
431618: movzx eax, byte ptr [rcx]
43161b: movzx edx, byte ptr [rsi + rcx]
43161f: jmp 0x431627
431621: movzx eax, byte ptr [rdi]
431624: movzx edx, byte ptr [rsi]
431627: sub eax, edx
431629: ret 
43162a: cmp rax, rdx
43162d: je 0x431650
43162f: mov r11, rax
431632: sub r11, rdx
431635: bsf rcx, r11
431639: sar rcx, 3
43163d: shl rcx, 3
431641: sar rax, cl
431644: movzx eax, al
431647: sar rdx, cl
43164a: movzx edx, dl
43164d: sub eax, edx
43164f: ret 
431650: xor eax, eax
431652: ret 
431653: mov r11, rdx
431656: add r11, rdi
431659: mov r8, rdi
43165c: and r8, 0xf
431660: je 0x431687
431662: movdqu xmm1, xmmword ptr [rdi]
431666: movdqu xmm0, xmmword ptr [rdi + rsi]
43166b: pcmpeqb xmm1, xmm0
43166f: pmovmskb edx, xmm1
431673: sub edx, 0xffff
431679: jne 0x4317e0
43167f: neg r8
431682: lea rdi, [rdi + r8 + 0x10]
431687: test rsi, 0xf
43168e: je 0x4317f3
431694: test rdi, 0x10
43169b: je 0x4316ba
43169d: movdqu xmm0, xmmword ptr [rdi + rsi]
4316a2: pcmpeqb xmm0, xmmword ptr [rdi]
4316a6: pmovmskb edx, xmm0
4316aa: sub edx, 0xffff
4316b0: jne 0x4317e0
4316b6: add rdi, 0x10
4316ba: mov r10, r11
4316bd: and r10, 0xffffffffffffffe0
4316c1: cmp rdi, r10
4316c4: jae 0x4317cd
4316ca: test rdi, 0x20
4316d1: je 0x43170d
4316d3: movdqu xmm0, xmmword ptr [rdi + rsi]
4316d8: pcmpeqb xmm0, xmmword ptr [rdi]
4316dc: pmovmskb edx, xmm0
4316e0: sub edx, 0xffff
4316e6: jne 0x4317e0
4316ec: add rdi, 0x10
4316f0: movdqu xmm0, xmmword ptr [rdi + rsi]
4316f5: pcmpeqb xmm0, xmmword ptr [rdi]
4316f9: pmovmskb edx, xmm0
4316fd: sub edx, 0xffff
431703: jne 0x4317e0
431709: add rdi, 0x10
43170d: mov r10, r11
431710: and r10, 0xffffffffffffffc0
431714: cmp rdi, r10
431717: jae 0x43178a
431719: movdqu xmm0, xmmword ptr [rdi + rsi]
43171e: pcmpeqb xmm0, xmmword ptr [rdi]
431722: pmovmskb edx, xmm0
431726: sub edx, 0xffff
43172c: jne 0x4317e0
431732: add rdi, 0x10
431736: movdqu xmm0, xmmword ptr [rdi + rsi]
43173b: pcmpeqb xmm0, xmmword ptr [rdi]
43173f: pmovmskb edx, xmm0
431743: sub edx, 0xffff
431749: jne 0x4317e0
43174f: add rdi, 0x10
431753: movdqu xmm0, xmmword ptr [rdi + rsi]
431758: pcmpeqb xmm0, xmmword ptr [rdi]
43175c: pmovmskb edx, xmm0
431760: sub edx, 0xffff
431766: jne 0x4317e0
431768: add rdi, 0x10
43176c: movdqu xmm0, xmmword ptr [rdi + rsi]
431771: pcmpeqb xmm0, xmmword ptr [rdi]
431775: pmovmskb edx, xmm0
431779: sub edx, 0xffff
43177f: jne 0x4317e0
431781: add rdi, 0x10
431785: cmp r10, rdi
431788: jne 0x431719
43178a: mov r10, r11
43178d: and r10, 0xffffffffffffffe0
431791: cmp rdi, r10
431794: jae 0x4317cd
431796: movdqu xmm0, xmmword ptr [rdi + rsi]
43179b: pcmpeqb xmm0, xmmword ptr [rdi]
43179f: pmovmskb edx, xmm0
4317a3: sub edx, 0xffff
4317a9: jne 0x4317e0
4317ab: add rdi, 0x10
4317af: movdqu xmm0, xmmword ptr [rdi + rsi]
4317b4: pcmpeqb xmm0, xmmword ptr [rdi]
4317b8: pmovmskb edx, xmm0
4317bc: sub edx, 0xffff
4317c2: jne 0x4317e0
4317c4: add rdi, 0x10
4317c8: cmp r10, rdi
4317cb: jne 0x431796
4317cd: sub r11, rdi
4317d0: je 0x431650
4317d6: mov r10, r11
4317d9: jmp 0x431577
4317de: nop 
4317e0: bsf ecx, edx
4317e3: movzx eax, byte ptr [rdi + rcx]
4317e7: add rsi, rdi
4317ea: movzx edx, byte ptr [rsi + rcx]
4317ee: jmp 0x431627
4317f3: mov r10, r11
4317f6: and r10, 0xffffffffffffffe0
4317fa: cmp rdi, r10
4317fd: jae 0x4317cd
4317ff: test rdi, 0x10
431806: je 0x431826
431808: movdqa xmm0, xmmword ptr [rdi + rsi]
43180d: pcmpeqb xmm0, xmmword ptr [rdi]
431811: pmovmskb edx, xmm0
431815: sub edx, 0xffff
43181b: jne 0x4317e0
43181d: add rdi, 0x10
431821: cmp r10, rdi
431824: je 0x4317cd
431826: mov r10, r11
431829: and r10, 0xffffffffffffffc0
43182d: test rdi, 0x20
431834: je 0x43186c
431836: movdqa xmm0, xmmword ptr [rdi + rsi]
43183b: pcmpeqb xmm0, xmmword ptr [rdi]
43183f: pmovmskb edx, xmm0
431843: sub edx, 0xffff
431849: jne 0x4317e0
43184b: add rdi, 0x10
43184f: movdqa xmm0, xmmword ptr [rdi + rsi]
431854: pcmpeqb xmm0, xmmword ptr [rdi]
431858: pmovmskb edx, xmm0
43185c: sub edx, 0xffff
431862: jne 0x4317e0
431868: add rdi, 0x10
43186c: cmp r10, rdi
43186f: je 0x43178a
431875: movdqa xmm0, xmmword ptr [rdi + rsi]
43187a: pcmpeqb xmm0, xmmword ptr [rdi]
43187e: pmovmskb edx, xmm0
431882: sub edx, 0xffff
431888: jne 0x4317e0
43188e: add rdi, 0x10
431892: movdqa xmm0, xmmword ptr [rdi + rsi]
431897: pcmpeqb xmm0, xmmword ptr [rdi]
43189b: pmovmskb edx, xmm0
43189f: sub edx, 0xffff
4318a5: jne 0x4317e0
4318ab: add rdi, 0x10
4318af: movdqa xmm0, xmmword ptr [rdi + rsi]
4318b4: pcmpeqb xmm0, xmmword ptr [rdi]
4318b8: pmovmskb edx, xmm0
4318bc: sub edx, 0xffff
4318c2: jne 0x4317e0
4318c8: add rdi, 0x10
4318cc: movdqa xmm0, xmmword ptr [rdi + rsi]
4318d1: pcmpeqb xmm0, xmmword ptr [rdi]
4318d5: pmovmskb edx, xmm0
4318d9: sub edx, 0xffff
4318df: jne 0x4317e0
4318e5: add rdi, 0x10
4318e9: cmp r10, rdi
4318ec: jne 0x431875
4318ee: mov r10, r11
4318f1: and r10, 0xffffffffffffffe0
4318f5: cmp rdi, r10
4318f8: jae 0x4317cd
4318fe: movdqa xmm0, xmmword ptr [rdi + rsi]
431903: pcmpeqb xmm0, xmmword ptr [rdi]
431907: pmovmskb edx, xmm0
43190b: sub edx, 0xffff
431911: jne 0x4317e0
431917: add rdi, 0x10
43191b: movdqa xmm0, xmmword ptr [rdi + rsi]
431920: pcmpeqb xmm0, xmmword ptr [rdi]
431924: pmovmskb edx, xmm0
431928: sub edx, 0xffff
43192e: jne 0x4317e0
431934: add rdi, 0x10
431938: cmp rdi, r10
43193b: jne 0x4318fe
43193d: sub r11, rdi
431940: je 0x431650
431946: mov r10, r11
431949: jmp 0x431577
43194e: nop 
431950: endbr64 
431954: cmp rdx, 0x20
431958: jb 0x431b00
43195e: vmovdqu ymm2, ymmword ptr [rsi]
431962: vpcmpeqb ymm2, ymm2, ymmword ptr [rdi]
431966: vpmovmskb eax, ymm2
43196a: sub eax, -1
43196d: jne 0x431a60
431973: cmp rdx, 0x40
431977: jbe 0x431a41
43197d: vpcmpeqb ymm0, ymm0, ymm0
431981: cmp rdx, 0x100
431988: ja 0x431ba0
43198e: cmp rdx, 0x80
431995: jb 0x431c37
43199b: vmovdqu ymm1, ymmword ptr [rsi]
43199f: vpcmpeqb ymm1, ymm1, ymmword ptr [rdi]
4319a3: vmovdqu ymm2, ymmword ptr [rsi + 0x20]
4319a8: vpcmpeqb ymm2, ymm2, ymmword ptr [rdi + 0x20]
4319ad: vmovdqu ymm3, ymmword ptr [rsi + 0x40]
4319b2: vpcmpeqb ymm3, ymm3, ymmword ptr [rdi + 0x40]
4319b7: vmovdqu ymm4, ymmword ptr [rsi + 0x60]
4319bc: vpcmpeqb ymm4, ymm4, ymmword ptr [rdi + 0x60]
4319c1: vpand ymm5, ymm2, ymm1
4319c5: vpand ymm6, ymm4, ymm3
4319c9: vpand ymm5, ymm6, ymm5
4319cd: vptest ymm5, ymm0
4319d2: jae 0x431cb0
4319d8: lea rdi, [rdi + rdx - 0x80]
4319dd: lea rsi, [rsi + rdx - 0x80]
4319e2: vmovdqu ymm1, ymmword ptr [rsi]
4319e6: vpcmpeqb ymm1, ymm1, ymmword ptr [rdi]
4319ea: vmovdqu ymm2, ymmword ptr [rsi + 0x20]
4319ef: vpcmpeqb ymm2, ymm2, ymmword ptr [rdi + 0x20]
4319f4: vpand ymm5, ymm1, ymm2
4319f8: vmovdqu ymm3, ymmword ptr [rsi + 0x40]
4319fd: vpcmpeqb ymm3, ymm3, ymmword ptr [rdi + 0x40]
431a02: vpand ymm5, ymm5, ymm3
431a06: vmovdqu ymm4, ymmword ptr [rsi + 0x60]
431a0b: vpcmpeqb ymm4, ymm4, ymmword ptr [rdi + 0x60]
431a10: vpand ymm5, ymm5, ymm4
431a14: vptest ymm5, ymm0
431a19: jae 0x431cb0
431a1f: xor eax, eax
431a21: vzeroupper 
431a24: ret 
431a25: nop word ptr cs:[rax + rax]
431a30: vmovdqu ymm2, ymmword ptr [rsi]
431a34: vpcmpeqb ymm2, ymm2, ymmword ptr [rdi]
431a38: vpmovmskb eax, ymm2
431a3c: sub eax, -1
431a3f: jne 0x431a60
431a41: lea rdi, [rdi + rdx - 0x20]
431a46: lea rsi, [rsi + rdx - 0x20]
431a4b: vmovdqu ymm2, ymmword ptr [rsi]
431a4f: vpcmpeqb ymm2, ymm2, ymmword ptr [rdi]
431a53: vpmovmskb eax, ymm2
431a57: sub eax, -1
431a5a: jne 0x431a60
431a5c: vzeroupper 
431a5f: ret 
431a60: tzcnt ecx, eax
431a64: movzx eax, byte ptr [rdi + rcx]
431a68: movzx edx, byte ptr [rsi + rcx]
431a6c: sub eax, edx
431a6e: vzeroupper 
431a71: ret 
431a72: nop word ptr cs:[rax + rax]
431a7d: nop dword ptr [rax]
431a80: movbe eax, dword ptr [rdi]
431a84: movbe ecx, dword ptr [rsi]
431a88: shl rax, 0x20
431a8c: shl rcx, 0x20
431a90: movbe edi, dword ptr [rdi + rdx - 4]
431a96: movbe esi, dword ptr [rsi + rdx - 4]
431a9c: or rax, rdi
431a9f: or rcx, rsi
431aa2: sub rax, rcx
431aa5: je 0x431ab0
431aa7: sbb eax, eax
431aa9: or eax, 1
431aac: ret 
431aad: nop dword ptr [rax]
431ab0: ret 
431ab1: nop word ptr cs:[rax + rax]
431abc: nop dword ptr [rax]
431ac0: movzx eax, word ptr [rdi]
431ac3: movzx ecx, word ptr [rsi]
431ac6: shl eax, 8
431ac9: shl ecx, 8
431acc: bswap eax
431ace: bswap ecx
431ad0: mov al, byte ptr [rdi + rdx - 1]
431ad4: mov cl, byte ptr [rsi + rdx - 1]
431ad8: sub eax, ecx
431ada: ret 
431adb: nop dword ptr [rax + rax]
431ae0: movzx eax, byte ptr [rdi]
431ae3: movzx ecx, byte ptr [rsi]
431ae6: sub eax, ecx
431ae8: ret 
431ae9: nop dword ptr [rax]
431af0: xor eax, eax
431af2: ret 
431af3: nop word ptr cs:[rax + rax]
431afe: nop 
431b00: cmp dl, 1
431b03: je 0x431ae0
431b05: jb 0x431af0
431b07: cmp dl, 4
431b0a: jb 0x431ac0
431b0c: cmp dl, 8
431b0f: jb 0x431a80
431b15: cmp dl, 0x10
431b18: jae 0x431b60
431b1a: vmovq xmm1, qword ptr [rdi]
431b1e: vmovq xmm2, qword ptr [rsi]
431b22: vpcmpeqb xmm2, xmm2, xmm1
431b26: vpmovmskb eax, xmm2
431b2a: sub eax, 0xffff
431b2f: jne 0x431a60
431b35: lea rdi, [rdi + rdx - 8]
431b3a: lea rsi, [rsi + rdx - 8]
431b3f: vmovq xmm1, qword ptr [rdi]
431b43: vmovq xmm2, qword ptr [rsi]
431b47: vpcmpeqb xmm2, xmm2, xmm1
431b4b: vpmovmskb eax, xmm2
431b4f: sub eax, 0xffff
431b54: jne 0x431a60
431b5a: ret 
431b5b: nop dword ptr [rax + rax]
431b60: vmovdqu xmm2, xmmword ptr [rsi]
431b64: vpcmpeqb xmm2, xmm2, xmmword ptr [rdi]
431b68: vpmovmskb eax, xmm2
431b6c: sub eax, 0xffff
431b71: jne 0x431a60
431b77: lea rdi, [rdi + rdx - 0x10]
431b7c: lea rsi, [rsi + rdx - 0x10]
431b81: vmovdqu xmm2, xmmword ptr [rsi]
431b85: vpcmpeqb xmm2, xmm2, xmmword ptr [rdi]
431b89: vpmovmskb eax, xmm2
431b8d: sub eax, 0xffff
431b92: jne 0x431a60
431b98: ret 
431b99: nop dword ptr [rax]
431ba0: vmovdqu ymm2, ymmword ptr [rsi]
431ba4: vpcmpeqb ymm2, ymm2, ymmword ptr [rdi]
431ba8: vpmovmskb eax, ymm2
431bac: sub eax, -1
431baf: jne 0x431a60
431bb5: mov rcx, rdi
431bb8: and ecx, 0x1f
431bbb: sub rcx, 0x20
431bbf: sub rsi, rcx
431bc2: sub rdi, rcx
431bc5: add rdx, rcx
431bc8: vmovdqu ymm1, ymmword ptr [rsi]
431bcc: vpcmpeqb ymm1, ymm1, ymmword ptr [rdi]
431bd0: vmovdqu ymm2, ymmword ptr [rsi + 0x20]
431bd5: vpcmpeqb ymm2, ymm2, ymmword ptr [rdi + 0x20]
431bda: vpand ymm5, ymm1, ymm2
431bde: vmovdqu ymm3, ymmword ptr [rsi + 0x40]
431be3: vpcmpeqb ymm3, ymm3, ymmword ptr [rdi + 0x40]
431be8: vpand ymm5, ymm5, ymm3
431bec: vmovdqu ymm4, ymmword ptr [rsi + 0x60]
431bf1: vpcmpeqb ymm4, ymm4, ymmword ptr [rdi + 0x60]
431bf6: vpand ymm5, ymm5, ymm4
431bfa: vptest ymm5, ymm0
431bff: jae 0x431cb0
431c05: add rdi, 0x80
431c0c: add rsi, 0x80
431c13: sub rdx, 0x80
431c1a: cmp rdx, 0x80
431c21: jae 0x431bc8
431c23: cmp rdx, 0x20
431c27: jbe 0x431a41
431c2d: cmp rdx, 0x40
431c31: jbe 0x431a30
431c37: vmovdqu ymm2, ymmword ptr [rsi]
431c3b: vpcmpeqb ymm2, ymm2, ymmword ptr [rdi]
431c3f: vpmovmskb eax, ymm2
431c43: sub eax, -1
431c46: jne 0x431a60
431c4c: add rdi, 0x20
431c50: add rsi, 0x20
431c54: vmovdqu ymm2, ymmword ptr [rsi]
431c58: vpcmpeqb ymm2, ymm2, ymmword ptr [rdi]
431c5c: vpmovmskb eax, ymm2
431c60: sub eax, -1
431c63: jne 0x431a60
431c69: lea rdi, [rdi + rdx - 0x60]
431c6e: lea rsi, [rsi + rdx - 0x60]
431c73: vmovdqu ymm2, ymmword ptr [rsi]
431c77: vpcmpeqb ymm2, ymm2, ymmword ptr [rdi]
431c7b: vpmovmskb eax, ymm2
431c7f: sub eax, -1
431c82: jne 0x431a60
431c88: add rdi, 0x20
431c8c: add rsi, 0x20
431c90: vmovdqu ymm2, ymmword ptr [rsi]
431c94: vpcmpeqb ymm2, ymm2, ymmword ptr [rdi]
431c98: vpmovmskb eax, ymm2
431c9c: sub eax, -1
431c9f: jne 0x431a60
431ca5: vzeroupper 
431ca8: ret 
431ca9: nop dword ptr [rax]
431cb0: vpmovmskb eax, ymm1
431cb4: sub eax, -1
431cb7: jne 0x431a60
431cbd: vpmovmskb eax, ymm2
431cc1: sub eax, -1
431cc4: jne 0x431cf0
431cc6: vpmovmskb eax, ymm3
431cca: sub eax, -1
431ccd: jne 0x431d10
431ccf: vpmovmskb eax, ymm4
431cd3: sub eax, -1
431cd6: tzcnt ecx, eax
431cda: movzx eax, byte ptr [rdi + rcx + 0x60]
431cdf: movzx edx, byte ptr [rsi + rcx + 0x60]
431ce4: sub eax, edx
431ce6: vzeroupper 
431ce9: ret 
431cea: nop word ptr [rax + rax]
431cf0: tzcnt ecx, eax
431cf4: movzx eax, byte ptr [rdi + rcx + 0x20]
431cf9: movzx edx, byte ptr [rsi + rcx + 0x20]
431cfe: sub eax, edx
431d00: vzeroupper 
431d03: ret 
431d04: nop word ptr cs:[rax + rax]
431d0f: nop 
431d10: tzcnt ecx, eax
431d14: movzx eax, byte ptr [rdi + rcx + 0x40]
431d19: movzx edx, byte ptr [rsi + rcx + 0x40]
431d1e: sub eax, edx
431d20: vzeroupper 
431d23: ret 
431d24: nop word ptr cs:[rax + rax]
431d2e: nop 
431d30: endbr64 
431d34: pxor xmm0, xmm0
431d38: cmp rdx, 0x4f
431d3c: ja 0x431d70
431d3e: cmp rdx, 1
431d42: je 0x431d60
431d44: add rsi, rdx
431d47: add rdi, rdx
431d4a: lea r11, [rip + 0x656af]
431d51: movsxd rcx, dword ptr [r11 + rdx*4]
431d55: add rcx, r11
431d58: notrack jmp rcx
431d5b: ud2 
431d5d: nop dword ptr [rax]
431d60: movzx eax, byte ptr [rdi]
431d63: movzx ecx, byte ptr [rsi]
431d66: sub eax, ecx
431d68: ret 
431d69: nop dword ptr [rax]
431d70: movdqu xmm1, xmmword ptr [rsi]
431d74: movdqu xmm2, xmmword ptr [rdi]
431d78: pxor xmm2, xmm1
431d7c: ptest xmm0, xmm2
431d81: jae 0x4328dd
431d87: mov rcx, rsi
431d8a: and rsi, 0xfffffffffffffff0
431d8e: add rsi, 0x10
431d92: sub rcx, rsi
431d95: sub rdi, rcx
431d98: add rdx, rcx
431d9b: test rdi, 0xf
431da2: je 0x4322b0
431da8: cmp rdx, 0x80
431daf: ja 0x431e68
431db5: sub rdx, 0x40
431db9: movdqu xmm2, xmmword ptr [rdi]
431dbd: pxor xmm2, xmmword ptr [rsi]
431dc1: ptest xmm0, xmm2
431dc6: jae 0x4328dd
431dcc: movdqu xmm2, xmmword ptr [rdi + 0x10]
431dd1: pxor xmm2, xmmword ptr [rsi + 0x10]
431dd6: ptest xmm0, xmm2
431ddb: jae 0x4328d5
431de1: movdqu xmm2, xmmword ptr [rdi + 0x20]
431de6: pxor xmm2, xmmword ptr [rsi + 0x20]
431deb: ptest xmm0, xmm2
431df0: jae 0x4328cd
431df6: movdqu xmm2, xmmword ptr [rdi + 0x30]
431dfb: pxor xmm2, xmmword ptr [rsi + 0x30]
431e00: ptest xmm0, xmm2
431e05: jae 0x4328c3
431e0b: cmp rdx, 0x20
431e0f: jb 0x431e47
431e11: movdqu xmm2, xmmword ptr [rdi + 0x40]
431e16: pxor xmm2, xmmword ptr [rsi + 0x40]
431e1b: ptest xmm0, xmm2
431e20: jae 0x4328b9
431e26: movdqu xmm2, xmmword ptr [rdi + 0x50]
431e2b: pxor xmm2, xmmword ptr [rsi + 0x50]
431e30: ptest xmm0, xmm2
431e35: jae 0x4328af
431e3b: sub rdx, 0x20
431e3f: add rdi, 0x20
431e43: add rsi, 0x20
431e47: add rdi, 0x40
431e4b: add rsi, 0x40
431e4f: add rsi, rdx
431e52: add rdi, rdx
431e55: lea r11, [rip + 0x655a4]
431e5c: movsxd rcx, dword ptr [r11 + rdx*4]
431e60: add rcx, r11
431e63: notrack jmp rcx
431e66: ud2 
431e68: cmp rdx, 0x200
431e6f: ja 0x4321a0
431e75: cmp rdx, 0x100
431e7c: ja 0x431f9a
431e82: sub rdx, 0x80
431e89: movdqu xmm2, xmmword ptr [rdi]
431e8d: pxor xmm2, xmmword ptr [rsi]
431e91: ptest xmm0, xmm2
431e96: jae 0x4328dd
431e9c: movdqu xmm2, xmmword ptr [rdi + 0x10]
431ea1: pxor xmm2, xmmword ptr [rsi + 0x10]
431ea6: ptest xmm0, xmm2
431eab: jae 0x4328d5
431eb1: movdqu xmm2, xmmword ptr [rdi + 0x20]
431eb6: pxor xmm2, xmmword ptr [rsi + 0x20]
431ebb: ptest xmm0, xmm2
431ec0: jae 0x4328cd
431ec6: movdqu xmm2, xmmword ptr [rdi + 0x30]
431ecb: pxor xmm2, xmmword ptr [rsi + 0x30]
431ed0: ptest xmm0, xmm2
431ed5: jae 0x4328c3
431edb: movdqu xmm2, xmmword ptr [rdi + 0x40]
431ee0: pxor xmm2, xmmword ptr [rsi + 0x40]
431ee5: ptest xmm0, xmm2
431eea: jae 0x4328b9
431ef0: movdqu xmm2, xmmword ptr [rdi + 0x50]
431ef5: pxor xmm2, xmmword ptr [rsi + 0x50]
431efa: ptest xmm0, xmm2
431eff: jae 0x4328af
431f05: movdqu xmm2, xmmword ptr [rdi + 0x60]
431f0a: pxor xmm2, xmmword ptr [rsi + 0x60]
431f0f: ptest xmm0, xmm2
431f14: jae 0x4328a5
431f1a: movdqu xmm2, xmmword ptr [rdi + 0x70]
431f1f: pxor xmm2, xmmword ptr [rsi + 0x70]
431f24: ptest xmm0, xmm2
431f29: jae 0x432895
431f2f: add rsi, 0x80
431f36: add rdi, 0x80
431f3d: cmp rdx, 0x40
431f41: jae 0x431db5
431f47: cmp rdx, 0x20
431f4b: jb 0x431f81
431f4d: movdqu xmm2, xmmword ptr [rdi]
431f51: pxor xmm2, xmmword ptr [rsi]
431f55: ptest xmm0, xmm2
431f5a: jae 0x4328dd
431f60: movdqu xmm2, xmmword ptr [rdi + 0x10]
431f65: pxor xmm2, xmmword ptr [rsi + 0x10]
431f6a: ptest xmm0, xmm2
431f6f: jae 0x4328d5
431f75: sub rdx, 0x20
431f79: add rdi, 0x20
431f7d: add rsi, 0x20
431f81: add rsi, rdx
431f84: add rdi, rdx
431f87: lea r11, [rip + 0x65472]
431f8e: movsxd rcx, dword ptr [r11 + rdx*4]
431f92: add rcx, r11
431f95: notrack jmp rcx
431f98: ud2 
431f9a: sub rdx, 0x100
431fa1: movdqu xmm2, xmmword ptr [rdi]
431fa5: pxor xmm2, xmmword ptr [rsi]
431fa9: ptest xmm0, xmm2
431fae: jae 0x4328dd
431fb4: movdqu xmm2, xmmword ptr [rdi + 0x10]
431fb9: pxor xmm2, xmmword ptr [rsi + 0x10]
431fbe: ptest xmm0, xmm2
431fc3: jae 0x4328d5
431fc9: movdqu xmm2, xmmword ptr [rdi + 0x20]
431fce: pxor xmm2, xmmword ptr [rsi + 0x20]
431fd3: ptest xmm0, xmm2
431fd8: jae 0x4328cd
431fde: movdqu xmm2, xmmword ptr [rdi + 0x30]
431fe3: pxor xmm2, xmmword ptr [rsi + 0x30]
431fe8: ptest xmm0, xmm2
431fed: jae 0x4328c3
431ff3: movdqu xmm2, xmmword ptr [rdi + 0x40]
431ff8: pxor xmm2, xmmword ptr [rsi + 0x40]
431ffd: ptest xmm0, xmm2
432002: jae 0x4328b9
432008: movdqu xmm2, xmmword ptr [rdi + 0x50]
43200d: pxor xmm2, xmmword ptr [rsi + 0x50]
432012: ptest xmm0, xmm2
432017: jae 0x4328af
43201d: movdqu xmm2, xmmword ptr [rdi + 0x60]
432022: pxor xmm2, xmmword ptr [rsi + 0x60]
432027: ptest xmm0, xmm2
43202c: jae 0x4328a5
432032: movdqu xmm2, xmmword ptr [rdi + 0x70]
432037: pxor xmm2, xmmword ptr [rsi + 0x70]
43203c: ptest xmm0, xmm2
432041: jae 0x432895
432047: movdqu xmm2, xmmword ptr [rdi + 0x80]
43204f: pxor xmm2, xmmword ptr [rsi + 0x80]
432057: ptest xmm0, xmm2
43205c: jae 0x432885
432062: movdqu xmm2, xmmword ptr [rdi + 0x90]
43206a: pxor xmm2, xmmword ptr [rsi + 0x90]
432072: ptest xmm0, xmm2
432077: jae 0x432875
43207d: movdqu xmm2, xmmword ptr [rdi + 0xa0]
432085: pxor xmm2, xmmword ptr [rsi + 0xa0]
43208d: ptest xmm0, xmm2
432092: jae 0x432865
432098: movdqu xmm2, xmmword ptr [rdi + 0xb0]
4320a0: pxor xmm2, xmmword ptr [rsi + 0xb0]
4320a8: ptest xmm0, xmm2
4320ad: jae 0x432852
4320b3: movdqu xmm2, xmmword ptr [rdi + 0xc0]
4320bb: pxor xmm2, xmmword ptr [rsi + 0xc0]
4320c3: ptest xmm0, xmm2
4320c8: jae 0x43283f
4320ce: movdqu xmm2, xmmword ptr [rdi + 0xd0]
4320d6: pxor xmm2, xmmword ptr [rsi + 0xd0]
4320de: ptest xmm0, xmm2
4320e3: jae 0x43282c
4320e9: movdqu xmm2, xmmword ptr [rdi + 0xe0]
4320f1: pxor xmm2, xmmword ptr [rsi + 0xe0]
4320f9: ptest xmm0, xmm2
4320fe: jae 0x432819
432104: movdqu xmm2, xmmword ptr [rdi + 0xf0]
43210c: pxor xmm2, xmmword ptr [rsi + 0xf0]
432114: ptest xmm0, xmm2
432119: jae 0x432806
43211f: add rsi, 0x100
432126: add rdi, 0x100
43212d: cmp rdx, 0x80
432134: jae 0x431e82
43213a: cmp rdx, 0x40
43213e: jae 0x431db5
432144: cmp rdx, 0x20
432148: jb 0x43217e
43214a: movdqu xmm2, xmmword ptr [rdi]
43214e: pxor xmm2, xmmword ptr [rsi]
432152: ptest xmm0, xmm2
432157: jae 0x4328dd
43215d: movdqu xmm2, xmmword ptr [rdi + 0x10]
432162: pxor xmm2, xmmword ptr [rsi + 0x10]
432167: ptest xmm0, xmm2
43216c: jae 0x4328d5
432172: sub rdx, 0x20
432176: add rdi, 0x20
43217a: add rsi, 0x20
43217e: add rsi, rdx
432181: add rdi, rdx
432184: lea r11, [rip + 0x65275]
43218b: movsxd rcx, dword ptr [r11 + rdx*4]
43218f: add rcx, r11
432192: notrack jmp rcx
432195: ud2 
432197: nop word ptr [rax + rax]
4321a0: mov r8, qword ptr [rip + 0x8eed1]
4321a7: mov r9, r8
4321aa: shr r8, 1
4321ad: add r8, r9
4321b0: cmp rdx, r8
4321b3: ja 0x43222c
4321b5: sub rdx, 0x40
4321b9: nop dword ptr [rax]
4321c0: movdqu xmm2, xmmword ptr [rdi]
4321c4: pxor xmm2, xmmword ptr [rsi]
4321c8: movdqa xmm1, xmm2
4321cc: movdqu xmm3, xmmword ptr [rdi + 0x10]
4321d1: pxor xmm3, xmmword ptr [rsi + 0x10]
4321d6: por xmm1, xmm3
4321da: movdqu xmm4, xmmword ptr [rdi + 0x20]
4321df: pxor xmm4, xmmword ptr [rsi + 0x20]
4321e4: por xmm1, xmm4
4321e8: movdqu xmm5, xmmword ptr [rdi + 0x30]
4321ed: pxor xmm5, xmmword ptr [rsi + 0x30]
4321f2: por xmm1, xmm5
4321f6: ptest xmm0, xmm1
4321fb: jae 0x4327c0
432201: add rsi, 0x40
432205: add rdi, 0x40
432209: sub rdx, 0x40
43220d: jae 0x4321c0
43220f: add rdx, 0x40
432213: add rsi, rdx
432216: add rdi, rdx
432219: lea r11, [rip + 0x651e0]
432220: movsxd rcx, dword ptr [r11 + rdx*4]
432224: add rcx, r11
432227: notrack jmp rcx
43222a: ud2 
43222c: sub rdx, 0x40
432230: prefetchnta byte ptr [rdi + 0x1c0]
432237: prefetchnta byte ptr [rsi + 0x1c0]
43223e: movdqu xmm2, xmmword ptr [rdi]
432242: pxor xmm2, xmmword ptr [rsi]
432246: movdqa xmm1, xmm2
43224a: movdqu xmm3, xmmword ptr [rdi + 0x10]
43224f: pxor xmm3, xmmword ptr [rsi + 0x10]
432254: por xmm1, xmm3
432258: movdqu xmm4, xmmword ptr [rdi + 0x20]
43225d: pxor xmm4, xmmword ptr [rsi + 0x20]
432262: por xmm1, xmm4
432266: movdqu xmm5, xmmword ptr [rdi + 0x30]
43226b: pxor xmm5, xmmword ptr [rsi + 0x30]
432270: por xmm1, xmm5
432274: ptest xmm0, xmm1
432279: jae 0x4327c0
43227f: add rsi, 0x40
432283: add rdi, 0x40
432287: sub rdx, 0x40
43228b: jae 0x432230
43228d: add rdx, 0x40
432291: add rsi, rdx
432294: add rdi, rdx
432297: lea r11, [rip + 0x65162]
43229e: movsxd rcx, dword ptr [r11 + rdx*4]
4322a2: add rcx, r11
4322a5: notrack jmp rcx
4322a8: ud2 
4322aa: nop word ptr [rax + rax]
4322b0: cmp rdx, 0x80
4322b7: ja 0x432370
4322bd: sub rdx, 0x40
4322c1: movdqa xmm2, xmmword ptr [rdi]
4322c5: pxor xmm2, xmmword ptr [rsi]
4322c9: ptest xmm0, xmm2
4322ce: jae 0x4328dd
4322d4: movdqa xmm2, xmmword ptr [rdi + 0x10]
4322d9: pxor xmm2, xmmword ptr [rsi + 0x10]
4322de: ptest xmm0, xmm2
4322e3: jae 0x4328d5
4322e9: movdqa xmm2, xmmword ptr [rdi + 0x20]
4322ee: pxor xmm2, xmmword ptr [rsi + 0x20]
4322f3: ptest xmm0, xmm2
4322f8: jae 0x4328cd
4322fe: movdqa xmm2, xmmword ptr [rdi + 0x30]
432303: pxor xmm2, xmmword ptr [rsi + 0x30]
432308: ptest xmm0, xmm2
43230d: jae 0x4328c3
432313: cmp rdx, 0x20
432317: jb 0x43234f
432319: movdqa xmm2, xmmword ptr [rdi + 0x40]
43231e: pxor xmm2, xmmword ptr [rsi + 0x40]
432323: ptest xmm0, xmm2
432328: jae 0x4328b9
43232e: movdqa xmm2, xmmword ptr [rdi + 0x50]
432333: pxor xmm2, xmmword ptr [rsi + 0x50]
432338: ptest xmm0, xmm2
43233d: jae 0x4328af
432343: sub rdx, 0x20
432347: add rdi, 0x20
43234b: add rsi, 0x20
43234f: add rdi, 0x40
432353: add rsi, 0x40
432357: add rsi, rdx
43235a: add rdi, rdx
43235d: lea r11, [rip + 0x6509c]
432364: movsxd rcx, dword ptr [r11 + rdx*4]
432368: add rcx, r11
43236b: notrack jmp rcx
43236e: ud2 
432370: cmp rdx, 0x200
432377: ja 0x4326b0
43237d: cmp rdx, 0x100
432384: ja 0x4324b0
43238a: sub rdx, 0x80
432391: movdqa xmm2, xmmword ptr [rdi]
432395: pxor xmm2, xmmword ptr [rsi]
432399: ptest xmm0, xmm2
43239e: jae 0x4328dd
4323a4: movdqa xmm2, xmmword ptr [rdi + 0x10]
4323a9: pxor xmm2, xmmword ptr [rsi + 0x10]
4323ae: ptest xmm0, xmm2
4323b3: jae 0x4328d5
4323b9: movdqa xmm2, xmmword ptr [rdi + 0x20]
4323be: pxor xmm2, xmmword ptr [rsi + 0x20]
4323c3: ptest xmm0, xmm2
4323c8: jae 0x4328cd
4323ce: movdqa xmm2, xmmword ptr [rdi + 0x30]
4323d3: pxor xmm2, xmmword ptr [rsi + 0x30]
4323d8: ptest xmm0, xmm2
4323dd: jae 0x4328c3
4323e3: movdqa xmm2, xmmword ptr [rdi + 0x40]
4323e8: pxor xmm2, xmmword ptr [rsi + 0x40]
4323ed: ptest xmm0, xmm2
4323f2: jae 0x4328b9
4323f8: movdqa xmm2, xmmword ptr [rdi + 0x50]
4323fd: pxor xmm2, xmmword ptr [rsi + 0x50]
432402: ptest xmm0, xmm2
432407: jae 0x4328af
43240d: movdqa xmm2, xmmword ptr [rdi + 0x60]
432412: pxor xmm2, xmmword ptr [rsi + 0x60]
432417: ptest xmm0, xmm2
43241c: jae 0x4328a5
432422: movdqa xmm2, xmmword ptr [rdi + 0x70]
432427: pxor xmm2, xmmword ptr [rsi + 0x70]
43242c: ptest xmm0, xmm2
432431: jae 0x432895
432437: add rsi, 0x80
43243e: add rdi, 0x80
432445: cmp rdx, 0x40
432449: jae 0x4322bd
43244f: cmp rdx, 0x20
432453: jb 0x432489
432455: movdqu xmm2, xmmword ptr [rdi]
432459: pxor xmm2, xmmword ptr [rsi]
43245d: ptest xmm0, xmm2
432462: jae 0x4328dd
432468: movdqu xmm2, xmmword ptr [rdi + 0x10]
43246d: pxor xmm2, xmmword ptr [rsi + 0x10]
432472: ptest xmm0, xmm2
432477: jae 0x4328d5
43247d: sub rdx, 0x20
432481: add rdi, 0x20
432485: add rsi, 0x20
432489: add rsi, rdx
43248c: add rdi, rdx
43248f: lea r11, [rip + 0x64f6a]
432496: movsxd rcx, dword ptr [r11 + rdx*4]
43249a: add rcx, r11
43249d: notrack jmp rcx
4324a0: ud2 
4324a2: nop word ptr cs:[rax + rax]
4324ad: nop dword ptr [rax]
4324b0: sub rdx, 0x100
4324b7: movdqa xmm2, xmmword ptr [rdi]
4324bb: pxor xmm2, xmmword ptr [rsi]
4324bf: ptest xmm0, xmm2
4324c4: jae 0x4328dd
4324ca: movdqa xmm2, xmmword ptr [rdi + 0x10]
4324cf: pxor xmm2, xmmword ptr [rsi + 0x10]
4324d4: ptest xmm0, xmm2
4324d9: jae 0x4328d5
4324df: movdqa xmm2, xmmword ptr [rdi + 0x20]
4324e4: pxor xmm2, xmmword ptr [rsi + 0x20]
4324e9: ptest xmm0, xmm2
4324ee: jae 0x4328cd
4324f4: movdqa xmm2, xmmword ptr [rdi + 0x30]
4324f9: pxor xmm2, xmmword ptr [rsi + 0x30]
4324fe: ptest xmm0, xmm2
432503: jae 0x4328c3
432509: movdqa xmm2, xmmword ptr [rdi + 0x40]
43250e: pxor xmm2, xmmword ptr [rsi + 0x40]
432513: ptest xmm0, xmm2
432518: jae 0x4328b9
43251e: movdqa xmm2, xmmword ptr [rdi + 0x50]
432523: pxor xmm2, xmmword ptr [rsi + 0x50]
432528: ptest xmm0, xmm2
43252d: jae 0x4328af
432533: movdqa xmm2, xmmword ptr [rdi + 0x60]
432538: pxor xmm2, xmmword ptr [rsi + 0x60]
43253d: ptest xmm0, xmm2
432542: jae 0x4328a5
432548: movdqa xmm2, xmmword ptr [rdi + 0x70]
43254d: pxor xmm2, xmmword ptr [rsi + 0x70]
432552: ptest xmm0, xmm2
432557: jae 0x432895
43255d: movdqa xmm2, xmmword ptr [rdi + 0x80]
432565: pxor xmm2, xmmword ptr [rsi + 0x80]
43256d: ptest xmm0, xmm2
432572: jae 0x432885
432578: movdqa xmm2, xmmword ptr [rdi + 0x90]
432580: pxor xmm2, xmmword ptr [rsi + 0x90]
432588: ptest xmm0, xmm2
43258d: jae 0x432875
432593: movdqa xmm2, xmmword ptr [rdi + 0xa0]
43259b: pxor xmm2, xmmword ptr [rsi + 0xa0]
4325a3: ptest xmm0, xmm2
4325a8: jae 0x432865
4325ae: movdqa xmm2, xmmword ptr [rdi + 0xb0]
4325b6: pxor xmm2, xmmword ptr [rsi + 0xb0]
4325be: ptest xmm0, xmm2
4325c3: jae 0x432852
4325c9: movdqa xmm2, xmmword ptr [rdi + 0xc0]
4325d1: pxor xmm2, xmmword ptr [rsi + 0xc0]
4325d9: ptest xmm0, xmm2
4325de: jae 0x43283f
4325e4: movdqa xmm2, xmmword ptr [rdi + 0xd0]
4325ec: pxor xmm2, xmmword ptr [rsi + 0xd0]
4325f4: ptest xmm0, xmm2
4325f9: jae 0x43282c
4325ff: movdqa xmm2, xmmword ptr [rdi + 0xe0]
432607: pxor xmm2, xmmword ptr [rsi + 0xe0]
43260f: ptest xmm0, xmm2
432614: jae 0x432819
43261a: movdqa xmm2, xmmword ptr [rdi + 0xf0]
432622: pxor xmm2, xmmword ptr [rsi + 0xf0]
43262a: ptest xmm0, xmm2
43262f: jae 0x432806
432635: add rsi, 0x100
43263c: add rdi, 0x100
432643: cmp rdx, 0x80
43264a: jae 0x43238a
432650: cmp rdx, 0x40
432654: jae 0x4322bd
43265a: cmp rdx, 0x20
43265e: jb 0x432694
432660: movdqa xmm2, xmmword ptr [rdi]
432664: pxor xmm2, xmmword ptr [rsi]
432668: ptest xmm0, xmm2
43266d: jae 0x4328dd
432673: movdqa xmm2, xmmword ptr [rdi + 0x10]
432678: pxor xmm2, xmmword ptr [rsi + 0x10]
43267d: ptest xmm0, xmm2
432682: jae 0x4328d5
432688: sub rdx, 0x20
43268c: add rdi, 0x20
432690: add rsi, 0x20
432694: add rsi, rdx
432697: add rdi, rdx
43269a: lea r11, [rip + 0x64d5f]
4326a1: movsxd rcx, dword ptr [r11 + rdx*4]
4326a5: add rcx, r11
4326a8: notrack jmp rcx
4326ab: ud2 
4326ad: nop dword ptr [rax]
4326b0: mov r8, qword ptr [rip + 0x8e9c1]
4326b7: mov r9, r8
4326ba: shr r8, 1
4326bd: add r8, r9
4326c0: cmp rdx, r8
4326c3: ja 0x43273c
4326c5: sub rdx, 0x40
4326c9: nop dword ptr [rax]
4326d0: movdqa xmm2, xmmword ptr [rdi]
4326d4: pxor xmm2, xmmword ptr [rsi]
4326d8: movdqa xmm1, xmm2
4326dc: movdqa xmm3, xmmword ptr [rdi + 0x10]
4326e1: pxor xmm3, xmmword ptr [rsi + 0x10]
4326e6: por xmm1, xmm3
4326ea: movdqa xmm4, xmmword ptr [rdi + 0x20]
4326ef: pxor xmm4, xmmword ptr [rsi + 0x20]
4326f4: por xmm1, xmm4
4326f8: movdqa xmm5, xmmword ptr [rdi + 0x30]
4326fd: pxor xmm5, xmmword ptr [rsi + 0x30]
432702: por xmm1, xmm5
432706: ptest xmm0, xmm1
43270b: jae 0x4327c0
432711: add rsi, 0x40
432715: add rdi, 0x40
432719: sub rdx, 0x40
43271d: jae 0x4326d0
43271f: add rdx, 0x40
432723: add rsi, rdx
432726: add rdi, rdx
432729: lea r11, [rip + 0x64cd0]
432730: movsxd rcx, dword ptr [r11 + rdx*4]
432734: add rcx, r11
432737: notrack jmp rcx
43273a: ud2 
43273c: sub rdx, 0x40
432740: prefetchnta byte ptr [rdi + 0x1c0]
432747: prefetchnta byte ptr [rsi + 0x1c0]
43274e: movdqa xmm2, xmmword ptr [rdi]
432752: pxor xmm2, xmmword ptr [rsi]
432756: movdqa xmm1, xmm2
43275a: movdqa xmm3, xmmword ptr [rdi + 0x10]
43275f: pxor xmm3, xmmword ptr [rsi + 0x10]
432764: por xmm1, xmm3
432768: movdqa xmm4, xmmword ptr [rdi + 0x20]
43276d: pxor xmm4, xmmword ptr [rsi + 0x20]
432772: por xmm1, xmm4
432776: movdqa xmm5, xmmword ptr [rdi + 0x30]
43277b: pxor xmm5, xmmword ptr [rsi + 0x30]
432780: por xmm1, xmm5
432784: ptest xmm0, xmm1
432789: jae 0x4327c0
43278b: add rsi, 0x40
43278f: add rdi, 0x40
432793: sub rdx, 0x40
432797: jae 0x432740
432799: add rdx, 0x40
43279d: add rsi, rdx
4327a0: add rdi, rdx
4327a3: lea r11, [rip + 0x64c56]
4327aa: movsxd rcx, dword ptr [r11 + rdx*4]
4327ae: add rcx, r11
4327b1: notrack jmp rcx
4327b4: ud2 
4327b6: nop word ptr cs:[rax + rax]
4327c0: add rdi, 0x10
4327c4: add rsi, 0x10
4327c8: ptest xmm0, xmm2
4327cd: jae 0x4328e5
4327d3: add rdi, 0x10
4327d7: add rsi, 0x10
4327db: ptest xmm0, xmm3
4327e0: jae 0x4328e5
4327e6: add rdi, 0x10
4327ea: add rsi, 0x10
4327ee: ptest xmm0, xmm4
4327f3: jae 0x4328e5
4327f9: add rdi, 0x10
4327fd: add rsi, 0x10
432801: jmp 0x4328e5
432806: add rdi, 0x100
43280d: add rsi, 0x100
432814: jmp 0x4328e5
432819: add rdi, 0xf0
432820: add rsi, 0xf0
432827: jmp 0x4328e5
43282c: add rdi, 0xe0
432833: add rsi, 0xe0
43283a: jmp 0x4328e5
43283f: add rdi, 0xd0
432846: add rsi, 0xd0
43284d: jmp 0x4328e5
432852: add rdi, 0xc0
432859: add rsi, 0xc0
432860: jmp 0x4328e5
432865: add rdi, 0xb0
43286c: add rsi, 0xb0
432873: jmp 0x4328e5
432875: add rdi, 0xa0
43287c: add rsi, 0xa0
432883: jmp 0x4328e5
432885: add rdi, 0x90
43288c: add rsi, 0x90
432893: jmp 0x4328e5
432895: add rdi, 0x80
43289c: add rsi, 0x80
4328a3: jmp 0x4328e5
4328a5: add rdi, 0x70
4328a9: add rsi, 0x70
4328ad: jmp 0x4328e5
4328af: add rdi, 0x60
4328b3: add rsi, 0x60
4328b7: jmp 0x4328e5
4328b9: add rdi, 0x50
4328bd: add rsi, 0x50
4328c1: jmp 0x4328e5
4328c3: add rdi, 0x40
4328c7: add rsi, 0x40
4328cb: jmp 0x4328e5
4328d0: adc byte ptr [rax - 0x7d], cl
4328d5: add rdi, 0x10
4328d9: add rsi, 0x10
4328dd: add rdi, 0x10
4328e1: add rsi, 0x10
4328e5: mov rax, qword ptr [rdi - 0x10]
4328e9: mov rcx, qword ptr [rsi - 0x10]
4328ef: ror dword ptr [rdi], 0x85
4328f6: mov rax, qword ptr [rdi - 8]
4328fa: mov rcx, qword ptr [rsi - 8]
4328fe: cmp rcx, rax
432901: jne 0x433333
432907: xor eax, eax
432909: ret 
43290a: nop word ptr [rax + rax]
432910: mov rax, qword ptr [rdi - 0xc]
432914: mov rcx, qword ptr [rsi - 0xc]
432918: cmp rcx, rax
43291b: jne 0x433333
432921: mov ecx, dword ptr [rsi - 4]
432924: mov eax, dword ptr [rdi - 4]
432927: cmp ecx, eax
432929: jne 0x43333f
43292f: xor eax, eax
432931: ret 
432932: nop word ptr cs:[rax + rax]
43293d: nop dword ptr [rax]
432940: movdqu xmm1, xmmword ptr [rdi - 0x41]
432945: movdqu xmm2, xmmword ptr [rsi - 0x41]
43294a: mov dl, 0xbf
43294c: pxor xmm2, xmm1
432950: ptest xmm0, xmm2
432955: jae 0x433318
43295b: movdqu xmm1, xmmword ptr [rdi - 0x31]
432960: movdqu xmm2, xmmword ptr [rsi - 0x31]
432965: mov dl, 0xcf
432967: pxor xmm2, xmm1
43296b: ptest xmm0, xmm2
432970: jae 0x433318
432976: movdqu xmm1, xmmword ptr [rdi - 0x21]
43297b: movdqu xmm2, xmmword ptr [rsi - 0x21]
432980: mov dl, 0xdf
432982: pxor xmm2, xmm1
432986: ptest xmm0, xmm2
43298b: jae 0x433318
432991: mov rax, qword ptr [rdi - 0x11]
432995: mov rcx, qword ptr [rsi - 0x11]
432999: cmp rcx, rax
43299c: jne 0x433333
4329a2: mov rax, qword ptr [rdi - 9]
4329a6: mov rcx, qword ptr [rsi - 9]
4329aa: cmp rcx, rax
4329b0: or dword ptr [rax], eax
4329b2: add byte ptr [rdi], cl
4329b4: mov dh, 0x47
4329b6: dec dword ptr [rdi]
4329b8: mov dh, 0x56
4329bb: sub eax, edx
4329bd: ret 
4329be: nop 
4329c0: mov rax, qword ptr [rdi - 0xd]
4329c4: mov rcx, qword ptr [rsi - 0xd]
4329c8: cmp rcx, rax
4329cb: jne 0x433333
4329d1: mov rax, qword ptr [rdi - 8]
4329d5: mov rcx, qword ptr [rsi - 8]
4329d9: cmp rcx, rax
4329dc: jne 0x433333
4329e2: xor eax, eax
4329e4: ret 
4329e5: nop word ptr cs:[rax + rax]
4329f0: mov eax, dword ptr [rdi - 5]
4329f3: mov ecx, dword ptr [rsi - 5]
4329f6: cmp ecx, eax
4329f8: jne 0x43333f
4329fe: movzx eax, byte ptr [rdi - 1]
432a02: movzx edx, byte ptr [rsi - 1]
432a06: sub eax, edx
432a08: ret 
432a09: nop dword ptr [rax]
432a10: movdqu xmm1, xmmword ptr [rdi - 0x42]
432a15: movdqu xmm2, xmmword ptr [rsi - 0x42]
432a1a: mov dl, 0xbe
432a1c: pxor xmm2, xmm1
432a20: ptest xmm0, xmm2
432a25: jae 0x433318
432a2b: movdqu xmm1, xmmword ptr [rdi - 0x32]
432a30: movdqu xmm2, xmmword ptr [rsi - 0x32]
432a35: mov dl, 0xce
432a37: pxor xmm2, xmm1
432a3b: ptest xmm0, xmm2
432a40: jae 0x433318
432a46: movdqu xmm1, xmmword ptr [rdi - 0x22]
432a4b: movdqu xmm2, xmmword ptr [rsi - 0x22]
432a50: mov dl, 0xde
432a52: pxor xmm2, xmm1
432a56: ptest xmm0, xmm2
432a5b: jae 0x433318
432a61: mov rax, qword ptr [rdi - 0x12]
432a65: mov rcx, qword ptr [rsi - 0x12]
432a69: cmp rcx, rax
432a70: add byte ptr [rax], al
432a72: mov rax, qword ptr [rdi - 0xa]
432a76: mov rcx, qword ptr [rsi - 0xa]
432a7a: cmp rcx, rax
432a7d: jne 0x433333
432a83: movzx eax, word ptr [rdi - 2]
432a87: movzx ecx, word ptr [rsi - 2]
432a8b: cmp al, cl
432a8d: jne 0x433360
432a93: and eax, 0xffff
432a98: and ecx, 0xffff
432a9e: sub eax, ecx
432aa0: ret 
432aa1: nop word ptr cs:[rax + rax]
432aae: add byte ptr [rax - 0x75], cl
432ac1: mov rax, qword ptr [rdi - 8]
432ac5: mov rcx, qword ptr [rsi - 8]
432ac9: cmp rcx, rax
432acc: jne 0x433333
432ad2: xor eax, eax
432ad4: ret 
432ad5: nop word ptr cs:[rax + rax]
432ae0: mov eax, dword ptr [rdi - 6]
432ae3: mov ecx, dword ptr [rsi - 6]
432ae6: cmp ecx, eax
432ae8: jne 0x43333f
432aee: movzx ecx, word ptr [rsi - 2]
432af2: movzx eax, word ptr [rdi - 2]
432af6: cmp al, cl
432af8: jne 0x433360
432afe: and eax, 0xffff
432b03: and ecx, 0xffff
432b09: sub eax, ecx
432b0b: ret 
432b0c: nop dword ptr [rax]
432b10: movdqu xmm2, xmmword ptr [rdi - 0x43]
432b15: movdqu xmm1, xmmword ptr [rsi - 0x43]
432b1a: mov dl, 0xbd
432b1c: pxor xmm2, xmm1
432b20: ptest xmm0, xmm2
432b25: jae 0x433318
432b2b: movdqu xmm2, xmmword ptr [rdi - 0x33]
432b30: movdqu xmm1, xmmword ptr [rsi - 0x33]
432b35: mov dl, 0xcd
432b37: pxor xmm2, xmm1
432b3b: ptest xmm0, xmm2
432b40: jae 0x433318
432b46: movdqu xmm1, xmmword ptr [rsi - 0x23]
432b4b: movdqu xmm2, xmmword ptr [rdi - 0x23]
432b50: mov dl, 0xdd
432b52: pxor xmm2, xmm1
432b56: ptest xmm0, xmm2
432b5b: jae 0x433318
432b61: mov rax, qword ptr [rdi - 0x13]
432b65: mov rcx, qword ptr [rsi - 0x13]
432b69: cmp rcx, rax
432b6c: jne 0x433333
432b72: mov rax, qword ptr [rdi - 0xb]
432b76: mov rcx, qword ptr [rsi - 0xb]
432b7a: cmp rcx, rax
432b7d: jne 0x433333
432b83: mov eax, dword ptr [rdi - 4]
432b86: mov ecx, dword ptr [rsi - 4]
432b89: cmp ecx, eax
432b90: add byte ptr [rcx], dh
432b92: rol bl, 0x66
432b95: nop word ptr cs:[rax + rax]
432b9f: nop 
432ba0: mov rax, qword ptr [rdi - 0xf]
432ba4: mov rcx, qword ptr [rsi - 0xf]
432ba8: cmp rcx, rax
432bb1: mov rax, qword ptr [rdi - 8]
432bb5: mov rcx, qword ptr [rsi - 8]
432bb9: cmp rcx, rax
432bc0: add byte ptr [rax], al
432bc2: xor eax, eax
432bc4: ret 
432bc5: nop word ptr cs:[rax + rax]
432bd0: mov eax, dword ptr [rdi - 7]
432bd3: mov ecx, dword ptr [rsi - 7]
432bd6: cmp ecx, eax
432bd8: jne 0x43333f
432bde: mov eax, dword ptr [rdi - 4]
432be1: mov ecx, dword ptr [rsi - 4]
432be4: cmp ecx, eax
432be6: jne 0x43333f
432bec: xor eax, eax
432bee: ret 
432bef: nop 
432bf0: movzx eax, word ptr [rdi - 3]
432bf4: movzx ecx, word ptr [rsi - 3]
432bf8: cmp ecx, eax
432bfa: jne 0x43334a
432c00: movzx eax, byte ptr [rdi - 1]
432c04: movzx ecx, byte ptr [rsi - 1]
432c08: sub eax, ecx
432c0a: ret 
432c0b: nop dword ptr [rax + rax]
432c10: movdqu xmm2, xmmword ptr [rdi - 0x44]
432c15: movdqu xmm1, xmmword ptr [rsi - 0x44]
432c1a: mov dl, 0xbc
432c1c: pxor xmm2, xmm1
432c20: ptest xmm0, xmm2
432c25: jae 0x433318
432c2b: movdqu xmm2, xmmword ptr [rdi - 0x34]
432c30: movdqu xmm1, xmmword ptr [rsi - 0x34]
432c35: mov dl, 0xcc
432c37: pxor xmm2, xmm1
432c3b: ptest xmm0, xmm2
432c40: jae 0x433318
432c46: movdqu xmm2, xmmword ptr [rdi - 0x24]
432c4b: movdqu xmm1, xmmword ptr [rsi - 0x24]
432c50: mov dl, 0xdc
432c52: pxor xmm2, xmm1
432c56: ptest xmm0, xmm2
432c5b: jae 0x433318
432c61: movdqu xmm2, xmmword ptr [rdi - 0x14]
432c66: movdqu xmm1, xmmword ptr [rsi - 0x14]
432c6b: mov dl, 0xec
432c6d: pxor xmm2, xmm1
432c71: ptest xmm0, xmm2
432c76: jae 0x433318
432c7c: mov ecx, dword ptr [rsi - 4]
432c7f: mov eax, dword ptr [rdi - 4]
432c82: cmp ecx, eax
432c84: jne 0x43333f
432c8a: xor eax, eax
432c8c: ret 
432c8d: nop dword ptr [rax]
432c90: movdqu xmm1, xmmword ptr [rsi - 0x45]
432c95: movdqu xmm2, xmmword ptr [rdi - 0x45]
432c9a: mov dl, 0xbb
432c9c: pxor xmm2, xmm1
432ca0: ptest xmm0, xmm2
432ca5: jae 0x433318
432cab: movdqu xmm1, xmmword ptr [rsi - 0x35]
432cb0: movdqu xmm2, xmmword ptr [rdi - 0x35]
432cb5: mov dl, 0xcb
432cb7: pxor xmm2, xmm1
432cbb: ptest xmm0, xmm2
432cc0: jae 0x433318
432cc6: movdqu xmm1, xmmword ptr [rsi - 0x25]
432ccb: movdqu xmm2, xmmword ptr [rdi - 0x25]
432cd0: mov dl, 0xdb
432cd2: pxor xmm2, xmm1
432cd6: ptest xmm0, xmm2
432cdb: jae 0x433318
432ce1: movdqu xmm1, xmmword ptr [rsi - 0x15]
432ce6: movdqu xmm2, xmmword ptr [rdi - 0x15]
432ceb: mov dl, 0xeb
432ced: pxor xmm2, xmm1
432cf1: ptest xmm0, xmm2
432cf6: jae 0x433318
432cfc: mov rax, qword ptr [rdi - 8]
432d00: mov rcx, qword ptr [rsi - 8]
432d04: cmp rcx, rax
432d07: jne 0x433333
432d0d: xor eax, eax
432d0f: ret 
432d10: movdqu xmm1, xmmword ptr [rsi - 0x46]
432d15: movdqu xmm2, xmmword ptr [rdi - 0x46]
432d1a: mov dl, 0xba
432d1c: pxor xmm2, xmm1
432d20: ptest xmm0, xmm2
432d25: jae 0x433318
432d2b: movdqu xmm1, xmmword ptr [rsi - 0x36]
432d30: movdqu xmm2, xmmword ptr [rdi - 0x36]
432d35: mov dl, 0xca
432d37: pxor xmm2, xmm1
432d3b: ptest xmm0, xmm2
432d40: jae 0x433318
432d46: movdqu xmm1, xmmword ptr [rsi - 0x26]
432d4b: movdqu xmm2, xmmword ptr [rdi - 0x26]
432d50: mov dl, 0xda
432d52: pxor xmm2, xmm1
432d56: ptest xmm0, xmm2
432d5b: jae 0x433318
432d61: movdqu xmm1, xmmword ptr [rsi - 0x16]
432d66: movdqu xmm2, xmmword ptr [rdi - 0x16]
432d6b: mov dl, 0xea
432d6d: pxor xmm2, xmm1
432d71: ptest xmm0, xmm2
432d76: jae 0x433318
432d7c: mov rax, qword ptr [rdi - 8]
432d80: mov rcx, qword ptr [rsi - 8]
432d84: cmp rcx, rax
432d87: jne 0x433333
432d8d: xor eax, eax
432d8f: ret 
432d90: movdqu xmm1, xmmword ptr [rsi - 0x47]
432d95: movdqu xmm2, xmmword ptr [rdi - 0x47]
432d9a: mov dl, 0xb9
432d9c: pxor xmm2, xmm1
432da0: ptest xmm0, xmm2
432da5: jae 0x433318
432dab: movdqu xmm2, xmmword ptr [rdi - 0x37]
432db0: movdqu xmm1, xmmword ptr [rsi - 0x37]
432db5: mov dl, 0xc9
432db7: pxor xmm2, xmm1
432dbb: ptest xmm0, xmm2
432dc0: jae 0x433318
432dc6: movdqu xmm2, xmmword ptr [rdi - 0x27]
432dcb: movdqu xmm1, xmmword ptr [rsi - 0x27]
432dd0: mov dl, 0xd9
432dd2: pxor xmm2, xmm1
432dd6: ptest xmm0, xmm2
432ddb: jae 0x433318
432de1: movdqu xmm2, xmmword ptr [rdi - 0x17]
432de6: movdqu xmm1, xmmword ptr [rsi - 0x17]
432deb: mov dl, 0xe9
432ded: pxor xmm2, xmm1
432df1: ptest xmm0, xmm2
432df6: jae 0x433318
432dfc: mov rax, qword ptr [rdi - 8]
432e00: mov rcx, qword ptr [rsi - 8]
432e04: cmp rcx, rax
432e07: jne 0x433333
432e0d: xor eax, eax
432e0f: ret 
432e10: movdqu xmm1, xmmword ptr [rsi - 0x48]
432e15: movdqu xmm2, xmmword ptr [rdi - 0x48]
432e1a: mov dl, 0xb8
432e1c: pxor xmm2, xmm1
432e20: ptest xmm0, xmm2
432e25: jae 0x433318
432e2b: movdqu xmm2, xmmword ptr [rdi - 0x38]
432e30: movdqu xmm1, xmmword ptr [rsi - 0x38]
432e35: mov dl, 0xc8
432e37: pxor xmm2, xmm1
432e3b: ptest xmm0, xmm2
432e40: jae 0x433318
432e46: movdqu xmm2, xmmword ptr [rdi - 0x28]
432e4b: movdqu xmm1, xmmword ptr [rsi - 0x28]
432e50: mov dl, 0xd8
432e52: pxor xmm2, xmm1
432e56: ptest xmm0, xmm2
432e5b: jae 0x433318
432e61: movdqu xmm2, xmmword ptr [rdi - 0x18]
432e66: movdqu xmm1, xmmword ptr [rsi - 0x18]
432e6b: mov dl, 0xe8
432e6d: pxor xmm2, xmm1
432e71: ptest xmm0, xmm2
432e76: jae 0x433318
432e7c: mov rcx, qword ptr [rsi - 8]
432e80: mov rax, qword ptr [rdi - 8]
432e84: cmp rcx, rax
432e87: jne 0x433333
432e8d: xor eax, eax
432e8f: ret 
432e90: movdqu xmm1, xmmword ptr [rsi - 0x49]
432e95: movdqu xmm2, xmmword ptr [rdi - 0x49]
432e9a: mov dl, 0xb7
432e9c: pxor xmm2, xmm1
432ea0: ptest xmm0, xmm2
432ea5: jae 0x433318
432eab: movdqu xmm2, xmmword ptr [rdi - 0x39]
432eb0: movdqu xmm1, xmmword ptr [rsi - 0x39]
432eb5: mov dl, 0xc7
432eb7: pxor xmm2, xmm1
432ebb: ptest xmm0, xmm2
432ec0: jae 0x433318
432ec6: movdqu xmm2, xmmword ptr [rdi - 0x29]
432ecb: movdqu xmm1, xmmword ptr [rsi - 0x29]
432ed0: mov dl, 0xd7
432ed2: pxor xmm2, xmm1
432ed6: ptest xmm0, xmm2
432edb: jae 0x433318
432ee1: movdqu xmm2, xmmword ptr [rdi - 0x19]
432ee6: movdqu xmm1, xmmword ptr [rsi - 0x19]
432eeb: mov dl, 0xe7
432eed: pxor xmm2, xmm1
432ef1: ptest xmm0, xmm2
432ef6: jae 0x433318
432efc: mov rax, qword ptr [rdi - 9]
432f00: mov rcx, qword ptr [rsi - 9]
432f04: cmp rcx, rax
432f07: jne 0x433333
432f0d: movzx eax, byte ptr [rdi - 1]
432f11: movzx ecx, byte ptr [rsi - 1]
432f15: sub eax, ecx
432f17: ret 
432f18: nop dword ptr [rax + rax]
432f20: movdqu xmm1, xmmword ptr [rsi - 0x4a]
432f25: movdqu xmm2, xmmword ptr [rdi - 0x4a]
432f2a: mov dl, 0xb6
432f2c: pxor xmm2, xmm1
432f30: ptest xmm0, xmm2
432f35: jae 0x433318
432f3b: movdqu xmm2, xmmword ptr [rdi - 0x3a]
432f40: movdqu xmm1, xmmword ptr [rsi - 0x3a]
432f45: mov dl, 0xc6
432f47: pxor xmm2, xmm1
432f4b: ptest xmm0, xmm2
432f50: jae 0x433318
432f56: movdqu xmm2, xmmword ptr [rdi - 0x2a]
432f5b: movdqu xmm1, xmmword ptr [rsi - 0x2a]
432f60: mov dl, 0xd6
432f62: pxor xmm2, xmm1
432f66: ptest xmm0, xmm2
432f6b: jae 0x433318
432f71: movdqu xmm2, xmmword ptr [rdi - 0x1a]
432f76: movdqu xmm1, xmmword ptr [rsi - 0x1a]
432f7b: mov dl, 0xe6
432f7d: pxor xmm2, xmm1
432f81: ptest xmm0, xmm2
432f86: jae 0x433318
432f8c: mov rax, qword ptr [rdi - 0xa]
432f90: mov rcx, qword ptr [rsi - 0xa]
432f94: cmp rcx, rax
432f97: jne 0x433333
432f9d: movzx eax, word ptr [rdi - 2]
432fa1: movzx ecx, word ptr [rsi - 2]
432fa5: jmp 0x43334a
432faa: nop word ptr [rax + rax]
432fb0: movdqu xmm1, xmmword ptr [rsi - 0x4b]
432fb5: movdqu xmm2, xmmword ptr [rdi - 0x4b]
432fba: mov dl, 0xb5
432fbc: pxor xmm2, xmm1
432fc0: ptest xmm0, xmm2
432fc5: jae 0x433318
432fcb: movdqu xmm2, xmmword ptr [rdi - 0x3b]
432fd0: movdqu xmm1, xmmword ptr [rsi - 0x3b]
432fd5: mov dl, 0xc5
432fd7: pxor xmm2, xmm1
432fdb: ptest xmm0, xmm2
432fe0: jae 0x433318
432fe6: movdqu xmm2, xmmword ptr [rdi - 0x2b]
432feb: movdqu xmm1, xmmword ptr [rsi - 0x2b]
432ff0: mov dl, 0xd5
432ff2: pxor xmm2, xmm1
432ff6: ptest xmm0, xmm2
432ffb: jae 0x433318
433001: movdqu xmm2, xmmword ptr [rdi - 0x1b]
433006: movdqu xmm1, xmmword ptr [rsi - 0x1b]
43300b: mov dl, 0xe5
43300d: pxor xmm2, xmm1
433011: ptest xmm0, xmm2
433016: jae 0x433318
43301c: mov rax, qword ptr [rdi - 0xb]
433020: mov rcx, qword ptr [rsi - 0xb]
433024: cmp rcx, rax
433027: jne 0x433333
43302d: mov eax, dword ptr [rdi - 4]
433030: mov ecx, dword ptr [rsi - 4]
433033: cmp ecx, eax
433035: jne 0x43333f
43303b: xor eax, eax
43303d: ret 
43303e: nop 
433040: movdqu xmm1, xmmword ptr [rsi - 0x4c]
433045: movdqu xmm2, xmmword ptr [rdi - 0x4c]
43304a: mov dl, 0xb4
43304c: pxor xmm2, xmm1
433050: ptest xmm0, xmm2
433055: jae 0x433318
43305b: movdqu xmm2, xmmword ptr [rdi - 0x3c]
433060: movdqu xmm1, xmmword ptr [rsi - 0x3c]
433065: mov dl, 0xc4
433067: pxor xmm2, xmm1
43306b: ptest xmm0, xmm2
433070: jae 0x433318
433076: movdqu xmm2, xmmword ptr [rdi - 0x2c]
43307b: movdqu xmm1, xmmword ptr [rsi - 0x2c]
433080: mov dl, 0xd4
433082: pxor xmm2, xmm1
433086: ptest xmm0, xmm2
43308b: jae 0x433318
433091: movdqu xmm2, xmmword ptr [rdi - 0x1c]
433096: movdqu xmm1, xmmword ptr [rsi - 0x1c]
43309b: mov dl, 0xe4
43309d: pxor xmm2, xmm1
4330a1: ptest xmm0, xmm2
4330a6: jae 0x433318
4330ac: mov rax, qword ptr [rdi - 0xc]
4330b0: mov rcx, qword ptr [rsi - 0xc]
4330b4: cmp rcx, rax
4330b7: jne 0x433333
4330bd: mov ecx, dword ptr [rsi - 4]
4330c0: mov eax, dword ptr [rdi - 4]
4330c3: cmp ecx, eax
4330c5: jne 0x43333f
4330cb: xor eax, eax
4330cd: ret 
4330ce: nop 
4330d0: movdqu xmm1, xmmword ptr [rsi - 0x4d]
4330d5: movdqu xmm2, xmmword ptr [rdi - 0x4d]
4330da: mov dl, 0xb3
4330dc: pxor xmm2, xmm1
4330e0: ptest xmm0, xmm2
4330e5: jae 0x433318
4330eb: movdqu xmm2, xmmword ptr [rdi - 0x3d]
4330f0: movdqu xmm1, xmmword ptr [rsi - 0x3d]
4330f5: mov dl, 0xc3
4330f7: pxor xmm2, xmm1
4330fb: ptest xmm0, xmm2
433100: jae 0x433318
433106: movdqu xmm2, xmmword ptr [rdi - 0x2d]
43310b: movdqu xmm1, xmmword ptr [rsi - 0x2d]
433110: mov dl, 0xd3
433112: pxor xmm2, xmm1
433116: ptest xmm0, xmm2
43311b: jae 0x433318
433121: movdqu xmm2, xmmword ptr [rdi - 0x1d]
433126: movdqu xmm1, xmmword ptr [rsi - 0x1d]
43312b: mov dl, 0xe3
43312d: pxor xmm2, xmm1
433131: ptest xmm0, xmm2
433136: jae 0x433318
43313c: mov rax, qword ptr [rdi - 0xd]
433140: mov rcx, qword ptr [rsi - 0xd]
433144: cmp rcx, rax
433147: jne 0x433333
43314d: mov rax, qword ptr [rdi - 8]
433151: mov rcx, qword ptr [rsi - 8]
433155: cmp rcx, rax
433158: jne 0x433333
43315e: xor eax, eax
433160: ret 
433161: nop word ptr cs:[rax + rax]
43316c: nop dword ptr [rax]
433170: movdqu xmm1, xmmword ptr [rsi - 0x4e]
433175: movdqu xmm2, xmmword ptr [rdi - 0x4e]
43317a: mov dl, 0xb2
43317c: pxor xmm2, xmm1
433180: ptest xmm0, xmm2
433185: jae 0x433318
43318b: movdqu xmm2, xmmword ptr [rdi - 0x3e]
433190: movdqu xmm1, xmmword ptr [rsi - 0x3e]
433195: mov dl, 0xc2
433197: pxor xmm2, xmm1
43319b: ptest xmm0, xmm2
4331a0: jae 0x433318
4331a6: movdqu xmm2, xmmword ptr [rdi - 0x2e]
4331ab: movdqu xmm1, xmmword ptr [rsi - 0x2e]
4331b0: mov dl, 0xd2
4331b2: pxor xmm2, xmm1
4331b6: ptest xmm0, xmm2
4331bb: jae 0x433318
4331c1: movdqu xmm2, xmmword ptr [rdi - 0x1e]
4331c6: movdqu xmm1, xmmword ptr [rsi - 0x1e]
4331cb: mov dl, 0xe2
4331cd: pxor xmm2, xmm1
4331d1: ptest xmm0, xmm2
4331d6: jae 0x433318
4331dc: mov rax, qword ptr [rdi - 0xe]
4331e0: mov rcx, qword ptr [rsi - 0xe]
4331e4: cmp rcx, rax
4331e7: jne 0x433333
4331ed: mov rax, qword ptr [rdi - 8]
4331f1: mov rcx, qword ptr [rsi - 8]
4331f5: cmp rcx, rax
4331f8: jne 0x433333
4331fe: xor eax, eax
433200: ret 
433201: nop word ptr cs:[rax + rax]
43320c: nop dword ptr [rax]
433210: movdqu xmm1, xmmword ptr [rsi - 0x4f]
433215: movdqu xmm2, xmmword ptr [rdi - 0x4f]
43321a: mov dl, 0xb1
43321c: pxor xmm2, xmm1
433220: ptest xmm0, xmm2
433225: jae 0x433318
43322b: movdqu xmm2, xmmword ptr [rdi - 0x3f]
433230: movdqu xmm1, xmmword ptr [rsi - 0x3f]
433235: mov dl, 0xc1
433237: pxor xmm2, xmm1
43323b: ptest xmm0, xmm2
433240: jae 0x433318
433246: movdqu xmm2, xmmword ptr [rdi - 0x2f]
43324b: movdqu xmm1, xmmword ptr [rsi - 0x2f]
433250: mov dl, 0xd1
433252: pxor xmm2, xmm1
433256: ptest xmm0, xmm2
43325b: jae 0x433318
433261: movdqu xmm2, xmmword ptr [rdi - 0x1f]
433266: movdqu xmm1, xmmword ptr [rsi - 0x1f]
43326b: mov dl, 0xe1
43326d: pxor xmm2, xmm1
433271: ptest xmm0, xmm2
433276: jae 0x433318
43327c: mov rax, qword ptr [rdi - 0xf]
433280: mov rcx, qword ptr [rsi - 0xf]
433284: cmp rcx, rax
433287: jne 0x433333
43328d: mov rax, qword ptr [rdi - 8]
433291: mov rcx, qword ptr [rsi - 8]
433295: cmp rcx, rax
433298: jne 0x433333
43329e: xor eax, eax
4332a0: ret 
4332a1: nop word ptr cs:[rax + rax]
4332ac: nop dword ptr [rax]
4332b0: movdqu xmm2, xmmword ptr [rdi - 0x40]
4332b5: movdqu xmm1, xmmword ptr [rsi - 0x40]
4332ba: mov dl, 0xc0
4332bc: pxor xmm2, xmm1
4332c0: ptest xmm0, xmm2
4332c5: jae 0x433318
4332c7: movdqu xmm2, xmmword ptr [rdi - 0x30]
4332cc: movdqu xmm1, xmmword ptr [rsi - 0x30]
4332d1: mov dl, 0xd0
4332d3: pxor xmm2, xmm1
4332d7: ptest xmm0, xmm2
4332dc: jae 0x433318
4332de: movdqu xmm2, xmmword ptr [rdi - 0x20]
4332e3: movdqu xmm1, xmmword ptr [rsi - 0x20]
4332e8: mov dl, 0xe0
4332ea: pxor xmm2, xmm1
4332ee: ptest xmm0, xmm2
4332f3: jae 0x433318
4332f5: mov rax, qword ptr [rdi - 0x10]
4332f9: mov rcx, qword ptr [rsi - 0x10]
4332fd: cmp rcx, rax
433300: jne 0x433333
433302: mov rax, qword ptr [rdi - 8]
433306: mov rcx, qword ptr [rsi - 8]
43330a: cmp rcx, rax
43330d: jne 0x433333
43330f: xor eax, eax
433311: ret 
433312: nop word ptr [rax + rax]
433318: movsx rdx, dl
43331c: mov rcx, qword ptr [rsi + rdx]
433320: mov rax, qword ptr [rdi + rdx]
433324: cmp rcx, rax
433327: jne 0x433333
433329: mov rcx, qword ptr [rsi + rdx + 8]
43332e: mov rax, qword ptr [rdi + rdx + 8]
433333: cmp ecx, eax
433335: jne 0x43333f
433337: shr rcx, 0x20
43333b: shr rax, 0x20
43333f: cmp ax, cx
433342: jne 0x43334a
433344: shr ecx, 0x10
433347: shr eax, 0x10
43334a: cmp al, cl
43334c: jne 0x433360
43334e: and eax, 0xffff
433353: and ecx, 0xffff
433359: sub eax, ecx
43335b: ret 
43335c: nop dword ptr [rax]
433360: and eax, 0xff
433365: and ecx, 0xff
43336b: sub eax, ecx
43336d: ret 
43336e: nop 
433370: endbr64 
433374: cmp rcx, rdx
433377: jb 0x454570
43337d: nop dword ptr [rax]
433380: endbr64 
433384: mov rax, rdi
433387: add rax, rdx
43338a: jmp 0x4333a7
43338c: nop dword ptr [rax]
433390: endbr64 
433394: cmp rcx, rdx
433397: jb 0x454570
43339d: nop dword ptr [rax]
4333a0: endbr64 
4333a4: mov rax, rdi
4333a7: cmp rdx, 0x4f
4333ab: lea r11, [rip + 0x6418e]
4333b2: ja 0x4333d0
4333b4: movsxd r9, dword ptr [r11 + rdx*4]
4333b8: add rsi, rdx
4333bb: add rdi, rdx
4333be: add r9, r11
4333c1: notrack jmp r9
4333c5: ud2 
4333c7: nop word ptr [rax + rax]
4333d0: cmp sil, dil
4333d3: jle 0x433430
4333d5: movdqu xmm0, xmmword ptr [rsi]
4333d9: mov rcx, rdi
4333dc: and rdi, 0xfffffffffffffff0
4333e0: add rdi, 0x10
4333e4: mov r8, rcx
4333e7: sub rcx, rdi
4333ea: add rdx, rcx
4333ed: sub rsi, rcx
4333f0: mov rcx, qword ptr [rip + 0x8dc61]
4333f7: cmp rdx, rcx
4333fa: mov r9, rsi
4333fd: ja 0x435bb0
433403: and r9, 0xf
433407: je 0x433490
43340d: mov rcx, qword ptr [rip + 0x8dc64]
433414: lea r11, [rip + 0x64265]
43341b: movsxd r9, dword ptr [r11 + r9*4]
43341f: lea r9, [r11 + r9]
433423: notrack jmp r9
433427: ud2 
433429: nop dword ptr [rax]
433430: movdqu xmm0, xmmword ptr [rsi + rdx - 0x10]
433436: add rsi, rdx
433439: lea r8, [rdi + rdx - 0x10]
43343e: add rdi, rdx
433441: mov rcx, rdi
433444: and rcx, 0xf
433448: xor rdi, rcx
43344b: sub rdx, rcx
43344e: sub rsi, rcx
433451: mov rcx, qword ptr [rip + 0x8dc00]
433458: cmp rdx, rcx
43345b: mov r9, rsi
43345e: ja 0x435c90
433464: and r9, 0xf
433468: je 0x4336c0
43346e: mov rcx, qword ptr [rip + 0x8dc03]
433475: lea r11, [rip + 0x64244]
43347c: movsxd r9, dword ptr [r11 + r9*4]
433480: lea r9, [r11 + r9]
433484: notrack jmp r9
433488: ud2 
43348a: nop word ptr [rax + rax]
433490: sub rdx, 0x10
433494: movdqa xmm1, xmmword ptr [rsi]
433498: add rsi, 0x10
43349c: movdqa xmmword ptr [rdi], xmm1
4334a0: add rdi, 0x10
4334a4: cmp rdx, 0x80
4334ab: movdqu xmmword ptr [r8], xmm0
4334b0: ja 0x433500
4334b2: cmp rdx, 0x40
4334b6: jb 0x4334e2
4334b8: movaps xmm4, xmmword ptr [rsi]
4334bb: movaps xmm1, xmmword ptr [rsi + 0x10]
4334bf: movaps xmm2, xmmword ptr [rsi + 0x20]
4334c3: movaps xmm3, xmmword ptr [rsi + 0x30]
4334c7: movaps xmmword ptr [rdi], xmm4
4334ca: movaps xmmword ptr [rdi + 0x10], xmm1
4334ce: movaps xmmword ptr [rdi + 0x20], xmm2
4334d2: movaps xmmword ptr [rdi + 0x30], xmm3
4334d6: sub rdx, 0x40
4334da: add rsi, 0x40
4334de: add rdi, 0x40
4334e2: add rsi, rdx
4334e5: add rdi, rdx
4334e8: lea r11, [rip + 0x64051]
4334ef: movsxd rdx, dword ptr [r11 + rdx*4]
4334f3: lea rdx, [r11 + rdx]
4334f7: notrack jmp rdx
4334fa: ud2 
4334fc: nop dword ptr [rax]
433500: cmp rdx, qword ptr [rip + 0x8db71]
433507: lea rdx, [rdx - 0x80]
43350b: jae 0x4335d0
433511: movdqa xmm4, xmmword ptr [rsi]
433515: movaps xmm1, xmmword ptr [rsi + 0x10]
433519: movaps xmm2, xmmword ptr [rsi + 0x20]
43351d: movaps xmm3, xmmword ptr [rsi + 0x30]
433521: movdqa xmmword ptr [rdi], xmm4
433525: movaps xmmword ptr [rdi + 0x10], xmm1
433529: movaps xmmword ptr [rdi + 0x20], xmm2
43352d: movaps xmmword ptr [rdi + 0x30], xmm3
433531: sub rdx, 0x80
433538: movaps xmm4, xmmword ptr [rsi + 0x40]
43353c: movaps xmm5, xmmword ptr [rsi + 0x50]
433540: movaps xmm6, xmmword ptr [rsi + 0x60]
433544: movaps xmm7, xmmword ptr [rsi + 0x70]
433548: lea rsi, [rsi + 0x80]
43354f: movaps xmmword ptr [rdi + 0x40], xmm4
433553: movaps xmmword ptr [rdi + 0x50], xmm5
433557: movaps xmmword ptr [rdi + 0x60], xmm6
43355b: movaps xmmword ptr [rdi + 0x70], xmm7
43355f: lea rdi, [rdi + 0x80]
433566: jae 0x433511
433568: cmp rdx, -0x40
43356c: lea rdx, [rdx + 0x80]
433573: jl 0x4335a7
433575: movdqa xmm4, xmmword ptr [rsi]
433579: sub rdx, 0x40
43357d: movdqa xmm1, xmmword ptr [rsi + 0x10]
433582: movdqa xmmword ptr [rdi], xmm4
433586: movdqa xmmword ptr [rdi + 0x10], xmm1
43358b: movdqa xmm4, xmmword ptr [rsi + 0x20]
433590: movdqa xmm1, xmmword ptr [rsi + 0x30]
433595: add rsi, 0x40
433599: movdqa xmmword ptr [rdi + 0x20], xmm4
43359e: movdqa xmmword ptr [rdi + 0x30], xmm1
4335a3: add rdi, 0x40
4335a7: add rsi, rdx
4335aa: add rdi, rdx
4335ad: lea r11, [rip + 0x63f8c]
4335b4: movsxd rdx, dword ptr [r11 + rdx*4]
4335b8: lea rdx, [r11 + rdx]
4335bc: notrack jmp rdx
4335bf: ud2 
4335c1: nop word ptr cs:[rax + rax]
4335cc: nop dword ptr [rax]
4335d0: prefetcht0 byte ptr [rsi + 0x1c0]
4335d7: prefetcht0 byte ptr [rsi + 0x280]
4335de: movdqa xmm0, xmmword ptr [rsi]
4335e2: movdqa xmm1, xmmword ptr [rsi + 0x10]
4335e7: movdqa xmm2, xmmword ptr [rsi + 0x20]
4335ec: movdqa xmm3, xmmword ptr [rsi + 0x30]
4335f1: movdqa xmm4, xmmword ptr [rsi + 0x40]
4335f6: movdqa xmm5, xmmword ptr [rsi + 0x50]
4335fb: movdqa xmm6, xmmword ptr [rsi + 0x60]
433600: movdqa xmm7, xmmword ptr [rsi + 0x70]
433605: lea rsi, [rsi + 0x80]
43360c: sub rdx, 0x80
433613: movdqa xmmword ptr [rdi], xmm0
433617: movdqa xmmword ptr [rdi + 0x10], xmm1
43361c: movdqa xmmword ptr [rdi + 0x20], xmm2
433621: movdqa xmmword ptr [rdi + 0x30], xmm3
433626: movdqa xmmword ptr [rdi + 0x40], xmm4
43362b: movdqa xmmword ptr [rdi + 0x50], xmm5
433630: movdqa xmmword ptr [rdi + 0x60], xmm6
433635: movdqa xmmword ptr [rdi + 0x70], xmm7
43363a: lea rdi, [rdi + 0x80]
433641: jae 0x4335d0
433643: cmp rdx, -0x40
433647: lea rdx, [rdx + 0x80]
43364e: jl 0x433682
433650: movdqa xmm0, xmmword ptr [rsi]
433654: sub rdx, 0x40
433658: movdqa xmm1, xmmword ptr [rsi + 0x10]
43365d: movdqa xmmword ptr [rdi], xmm0
433661: movdqa xmmword ptr [rdi + 0x10], xmm1
433666: movdqa xmm0, xmmword ptr [rsi + 0x20]
43366b: movdqa xmm1, xmmword ptr [rsi + 0x30]
433670: add rsi, 0x40
433674: movdqa xmmword ptr [rdi + 0x20], xmm0
433679: movdqa xmmword ptr [rdi + 0x30], xmm1
43367e: add rdi, 0x40
433682: cmp rdx, 0x20
433686: jb 0x4336a6
433688: movdqa xmm0, xmmword ptr [rsi]
43368c: sub rdx, 0x20
433690: movdqa xmm1, xmmword ptr [rsi + 0x10]
433695: add rsi, 0x20
433699: movdqa xmmword ptr [rdi], xmm0
43369d: movdqa xmmword ptr [rdi + 0x10], xmm1
4336a2: add rdi, 0x20
4336a6: add rdi, rdx
4336a9: add rsi, rdx
4336ac: lea r11, [rip + 0x63e8d]
4336b3: movsxd rdx, dword ptr [r11 + rdx*4]
4336b7: lea rdx, [r11 + rdx]
4336bb: notrack jmp rdx
4336be: ud2 
4336c0: sub rdx, 0x10
4336c4: movdqa xmm1, xmmword ptr [rsi - 0x10]
4336c9: sub rsi, 0x10
4336cd: movdqa xmmword ptr [rdi - 0x10], xmm1
4336d2: sub rdi, 0x10
4336d6: cmp rdx, 0x80
4336dd: movdqu xmmword ptr [r8], xmm0
4336e2: ja 0x433730
4336e4: cmp rdx, 0x40
4336e8: jb 0x433716
4336ea: movaps xmm0, xmmword ptr [rsi - 0x10]
4336ee: movaps xmm1, xmmword ptr [rsi - 0x20]
4336f2: movaps xmm2, xmmword ptr [rsi - 0x30]
4336f6: movaps xmm3, xmmword ptr [rsi - 0x40]
4336fa: movaps xmmword ptr [rdi - 0x10], xmm0
4336fe: movaps xmmword ptr [rdi - 0x20], xmm1
433702: movaps xmmword ptr [rdi - 0x30], xmm2
433706: movaps xmmword ptr [rdi - 0x40], xmm3
43370a: sub rdx, 0x40
43370e: sub rsi, 0x40
433712: sub rdi, 0x40
433716: lea r11, [rip + 0x63e23]
43371d: movsxd rdx, dword ptr [r11 + rdx*4]
433721: lea rdx, [r11 + rdx]
433725: notrack jmp rdx
433728: ud2 
43372a: nop word ptr [rax + rax]
433730: cmp rdx, qword ptr [rip + 0x8d941]
433737: lea rdx, [rdx - 0x80]
43373b: jae 0x4337f0
433741: movdqa xmm0, xmmword ptr [rsi - 0x10]
433746: movaps xmm1, xmmword ptr [rsi - 0x20]
43374a: movaps xmm2, xmmword ptr [rsi - 0x30]
43374e: movaps xmm3, xmmword ptr [rsi - 0x40]
433752: movdqa xmmword ptr [rdi - 0x10], xmm0
433757: movaps xmmword ptr [rdi - 0x20], xmm1
43375b: movaps xmmword ptr [rdi - 0x30], xmm2
43375f: movaps xmmword ptr [rdi - 0x40], xmm3
433763: sub rdx, 0x80
43376a: movaps xmm4, xmmword ptr [rsi - 0x50]
43376e: movaps xmm5, xmmword ptr [rsi - 0x60]
433772: movaps xmm6, xmmword ptr [rsi - 0x70]
433776: movaps xmm7, xmmword ptr [rsi - 0x80]
43377a: lea rsi, [rsi - 0x80]
43377e: movaps xmmword ptr [rdi - 0x50], xmm4
433782: movaps xmmword ptr [rdi - 0x60], xmm5
433786: movaps xmmword ptr [rdi - 0x70], xmm6
43378a: movaps xmmword ptr [rdi - 0x80], xmm7
43378e: lea rdi, [rdi - 0x80]
433792: jae 0x433741
433794: cmp rdx, -0x40
433798: lea rdx, [rdx + 0x80]
43379f: jl 0x4337d5
4337a1: movdqa xmm0, xmmword ptr [rsi - 0x10]
4337a6: sub rdx, 0x40
4337aa: movdqa xmm1, xmmword ptr [rsi - 0x20]
4337af: movdqa xmmword ptr [rdi - 0x10], xmm0
4337b4: movdqa xmmword ptr [rdi - 0x20], xmm1
4337b9: movdqa xmm0, xmmword ptr [rsi - 0x30]
4337be: movdqa xmm1, xmmword ptr [rsi - 0x40]
4337c3: sub rsi, 0x40
4337c7: movdqa xmmword ptr [rdi - 0x30], xmm0
4337cc: movdqa xmmword ptr [rdi - 0x40], xmm1
4337d1: sub rdi, 0x40
4337d5: lea r11, [rip + 0x63d64]
4337dc: movsxd rdx, dword ptr [r11 + rdx*4]
4337e0: lea rdx, [r11 + rdx]
4337e4: notrack jmp rdx
4337e7: ud2 
4337e9: nop dword ptr [rax]
4337f0: prefetcht0 byte ptr [rsi - 0x1c0]
4337f7: prefetcht0 byte ptr [rsi - 0x280]
4337fe: movdqa xmm0, xmmword ptr [rsi - 0x10]
433803: movdqa xmm1, xmmword ptr [rsi - 0x20]
433808: movdqa xmm2, xmmword ptr [rsi - 0x30]
43380d: movdqa xmm3, xmmword ptr [rsi - 0x40]
433812: movdqa xmm4, xmmword ptr [rsi - 0x50]
433817: movdqa xmm5, xmmword ptr [rsi - 0x60]
43381c: movdqa xmm6, xmmword ptr [rsi - 0x70]
433821: movdqa xmm7, xmmword ptr [rsi - 0x80]
433826: lea rsi, [rsi - 0x80]
43382a: sub rdx, 0x80
433831: movdqa xmmword ptr [rdi - 0x10], xmm0
433836: movdqa xmmword ptr [rdi - 0x20], xmm1
43383b: movdqa xmmword ptr [rdi - 0x30], xmm2
433840: movdqa xmmword ptr [rdi - 0x40], xmm3
433845: movdqa xmmword ptr [rdi - 0x50], xmm4
43384a: movdqa xmmword ptr [rdi - 0x60], xmm5
43384f: movdqa xmmword ptr [rdi - 0x70], xmm6
433854: movdqa xmmword ptr [rdi - 0x80], xmm7
433859: lea rdi, [rdi - 0x80]
43385d: jae 0x4337f0
43385f: cmp rdx, -0x40
433863: lea rdx, [rdx + 0x80]
43386a: jl 0x4338a0
43386c: movdqa xmm0, xmmword ptr [rsi - 0x10]
433871: sub rdx, 0x40
433875: movdqa xmm1, xmmword ptr [rsi - 0x20]
43387a: movdqa xmmword ptr [rdi - 0x10], xmm0
43387f: movdqa xmmword ptr [rdi - 0x20], xmm1
433884: movdqa xmm0, xmmword ptr [rsi - 0x30]
433889: movdqa xmm1, xmmword ptr [rsi - 0x40]
43388e: sub rsi, 0x40
433892: movdqa xmmword ptr [rdi - 0x30], xmm0
433897: movdqa xmmword ptr [rdi - 0x40], xmm1
43389c: sub rdi, 0x40
4338a0: cmp rdx, 0x20
4338a4: jb 0x4338c6
4338a6: movdqa xmm0, xmmword ptr [rsi - 0x10]
4338ab: sub rdx, 0x20
4338af: movdqa xmm1, xmmword ptr [rsi - 0x20]
4338b4: sub rsi, 0x20
4338b8: movdqa xmmword ptr [rdi - 0x10], xmm0
4338bd: movdqa xmmword ptr [rdi - 0x20], xmm1
4338c2: sub rdi, 0x20
4338c6: lea r11, [rip + 0x63c73]
4338cd: movsxd rdx, dword ptr [r11 + rdx*4]
4338d1: lea rdx, [r11 + rdx]
4338d5: notrack jmp rdx
4338d8: ud2 
4338da: nop word ptr [rax + rax]
4338e0: lea r9, [r9 + 0x28]
4338e7: cmp rdx, rcx
4338ea: movaps xmm1, xmmword ptr [rsi - 1]
4338ee: jb 0x4338f7
4338f0: lea r9, [r9 - 7]
4338f7: lea rdx, [rdx - 0x40]
4338fb: notrack jmp r9
4338ff: ud2 
433901: prefetchnta byte ptr [rsi + 0x1c0]
433908: sub rdx, 0x40
43390c: movaps xmm2, xmmword ptr [rsi + 0xf]
433910: movaps xmm3, xmmword ptr [rsi + 0x1f]
433914: movaps xmm4, xmmword ptr [rsi + 0x2f]
433918: movaps xmm5, xmmword ptr [rsi + 0x3f]
43391c: movdqa xmm6, xmm5
433920: palignr xmm5, xmm4, 1
433926: lea rsi, [rsi + 0x40]
43392a: palignr xmm4, xmm3, 1
433930: palignr xmm3, xmm2, 1
433936: lea rdi, [rdi + 0x40]
43393a: palignr xmm2, xmm1, 1
433940: movdqa xmm1, xmm6
433944: movdqa xmmword ptr [rdi - 0x40], xmm2
433949: movaps xmmword ptr [rdi - 0x30], xmm3
43394d: jb 0x43395d
43394f: movaps xmmword ptr [rdi - 0x20], xmm4
433953: movaps xmmword ptr [rdi - 0x10], xmm5
433957: notrack jmp r9
43395b: ud2 
43395d: movaps xmmword ptr [rdi - 0x20], xmm4
433961: lea rdx, [rdx + 0x40]
433965: movaps xmmword ptr [rdi - 0x10], xmm5
433969: add rdi, rdx
43396c: movdqu xmmword ptr [r8], xmm0
433971: add rsi, rdx
433974: lea r11, [rip + 0x63bc5]
43397b: movsxd rdx, dword ptr [r11 + rdx*4]
43397f: lea rdx, [r11 + rdx]
433983: notrack jmp rdx
433986: ud2 
433988: nop dword ptr [rax + rax]
433990: lea r9, [r9 + 0x28]
433997: cmp rdx, rcx
43399a: movaps xmm1, xmmword ptr [rsi - 1]
43399e: jb 0x4339a7
4339a0: lea r9, [r9 - 7]
4339a7: lea rdx, [rdx - 0x40]
4339ab: notrack jmp r9
4339af: ud2 
4339b1: prefetchnta byte ptr [rsi - 0x1c0]
4339b8: movaps xmm2, xmmword ptr [rsi - 0x11]
4339bc: sub rdx, 0x40
4339c0: movaps xmm3, xmmword ptr [rsi - 0x21]
4339c4: movaps xmm4, xmmword ptr [rsi - 0x31]
4339c8: movaps xmm5, xmmword ptr [rsi - 0x41]
4339cc: lea rsi, [rsi - 0x40]
4339d0: palignr xmm1, xmm2, 1
4339d6: palignr xmm2, xmm3, 1
4339dc: palignr xmm3, xmm4, 1
4339e2: palignr xmm4, xmm5, 1
4339e8: movaps xmmword ptr [rdi - 0x10], xmm1
4339ec: movaps xmm1, xmm5
4339ef: movaps xmmword ptr [rdi - 0x20], xmm2
4339f3: lea rdi, [rdi - 0x40]
4339f7: movaps xmmword ptr [rdi + 0x10], xmm3
4339fb: jb 0x433a06
4339fd: movaps xmmword ptr [rdi], xmm4
433a00: notrack jmp r9
433a04: ud2 
433a06: movaps xmmword ptr [rdi], xmm4
433a09: lea rdx, [rdx + 0x40]
433a0d: movdqu xmmword ptr [r8], xmm0
433a12: lea r11, [rip + 0x63b27]
433a19: movsxd rdx, dword ptr [r11 + rdx*4]
433a1d: lea rdx, [r11 + rdx]
433a21: notrack jmp rdx
433a24: ud2 
433a26: nop word ptr cs:[rax + rax]
433a30: lea r9, [r9 + 0x28]
433a37: cmp rdx, rcx
433a3a: movaps xmm1, xmmword ptr [rsi - 2]
433a3e: jb 0x433a47
433a40: lea r9, [r9 - 7]
433a47: lea rdx, [rdx - 0x40]
433a4b: notrack jmp r9
433a4f: ud2 
433a51: prefetchnta byte ptr [rsi + 0x1c0]
433a58: sub rdx, 0x40
433a5c: movaps xmm2, xmmword ptr [rsi + 0xe]
433a60: movaps xmm3, xmmword ptr [rsi + 0x1e]
433a64: movaps xmm4, xmmword ptr [rsi + 0x2e]
433a68: movaps xmm5, xmmword ptr [rsi + 0x3e]
433a6c: movdqa xmm6, xmm5
433a70: palignr xmm5, xmm4, 2
433a76: lea rsi, [rsi + 0x40]
433a7a: palignr xmm4, xmm3, 2
433a80: palignr xmm3, xmm2, 2
433a86: lea rdi, [rdi + 0x40]
433a8a: palignr xmm2, xmm1, 2
433a90: movdqa xmm1, xmm6
433a94: movdqa xmmword ptr [rdi - 0x40], xmm2
433a99: movaps xmmword ptr [rdi - 0x30], xmm3
433a9d: jb 0x433aad
433a9f: movaps xmmword ptr [rdi - 0x20], xmm4
433aa3: movaps xmmword ptr [rdi - 0x10], xmm5
433aa7: notrack jmp r9
433aab: ud2 
433aad: movaps xmmword ptr [rdi - 0x20], xmm4
433ab1: lea rdx, [rdx + 0x40]
433ab5: movaps xmmword ptr [rdi - 0x10], xmm5
433ab9: add rdi, rdx
433abc: movdqu xmmword ptr [r8], xmm0
433ac1: add rsi, rdx
433ac4: lea r11, [rip + 0x63a75]
433acb: movsxd rdx, dword ptr [r11 + rdx*4]
433acf: lea rdx, [r11 + rdx]
433ad3: notrack jmp rdx
433ad6: ud2 
433ad8: nop dword ptr [rax + rax]
433ae0: lea r9, [r9 + 0x28]
433ae7: cmp rdx, rcx
433aea: movaps xmm1, xmmword ptr [rsi - 2]
433aee: jb 0x433af7
433af0: lea r9, [r9 - 7]
433af7: lea rdx, [rdx - 0x40]
433afb: notrack jmp r9
433aff: ud2 
433b01: prefetchnta byte ptr [rsi - 0x1c0]
433b08: movaps xmm2, xmmword ptr [rsi - 0x12]
433b0c: sub rdx, 0x40
433b10: movaps xmm3, xmmword ptr [rsi - 0x22]
433b14: movaps xmm4, xmmword ptr [rsi - 0x32]
433b18: movaps xmm5, xmmword ptr [rsi - 0x42]
433b1c: lea rsi, [rsi - 0x40]
433b20: palignr xmm1, xmm2, 2
433b26: palignr xmm2, xmm3, 2
433b2c: palignr xmm3, xmm4, 2
433b32: palignr xmm4, xmm5, 2
433b38: movaps xmmword ptr [rdi - 0x10], xmm1
433b3c: movaps xmm1, xmm5
433b3f: movaps xmmword ptr [rdi - 0x20], xmm2
433b43: lea rdi, [rdi - 0x40]
433b47: movaps xmmword ptr [rdi + 0x10], xmm3
433b4b: jb 0x433b56
433b4d: movaps xmmword ptr [rdi], xmm4
433b50: notrack jmp r9
433b54: ud2 
433b56: movaps xmmword ptr [rdi], xmm4
433b59: lea rdx, [rdx + 0x40]
433b5d: movdqu xmmword ptr [r8], xmm0
433b62: lea r11, [rip + 0x639d7]
433b69: movsxd rdx, dword ptr [r11 + rdx*4]
433b6d: lea rdx, [r11 + rdx]
433b71: notrack jmp rdx
433b74: ud2 
433b76: nop word ptr cs:[rax + rax]
433b80: lea r9, [r9 + 0x28]
433b87: cmp rdx, rcx
433b8a: movaps xmm1, xmmword ptr [rsi - 3]
433b8e: jb 0x433b97
433b90: lea r9, [r9 - 7]
433b97: lea rdx, [rdx - 0x40]
433b9b: notrack jmp r9
433b9f: ud2 
433ba1: prefetchnta byte ptr [rsi + 0x1c0]
433ba8: sub rdx, 0x40
433bac: movaps xmm2, xmmword ptr [rsi + 0xd]
433bb0: movaps xmm3, xmmword ptr [rsi + 0x1d]
433bb4: movaps xmm4, xmmword ptr [rsi + 0x2d]
433bb8: movaps xmm5, xmmword ptr [rsi + 0x3d]
433bbc: movdqa xmm6, xmm5
433bc0: palignr xmm5, xmm4, 3
433bc6: lea rsi, [rsi + 0x40]
433bca: palignr xmm4, xmm3, 3
433bd0: palignr xmm3, xmm2, 3
433bd6: lea rdi, [rdi + 0x40]
433bda: palignr xmm2, xmm1, 3
433be0: movdqa xmm1, xmm6
433be4: movdqa xmmword ptr [rdi - 0x40], xmm2
433be9: movaps xmmword ptr [rdi - 0x30], xmm3
433bed: jb 0x433bfd
433bef: movaps xmmword ptr [rdi - 0x20], xmm4
433bf3: movaps xmmword ptr [rdi - 0x10], xmm5
433bf7: notrack jmp r9
433bfb: ud2 
433bfd: movaps xmmword ptr [rdi - 0x20], xmm4
433c01: lea rdx, [rdx + 0x40]
433c05: movaps xmmword ptr [rdi - 0x10], xmm5
433c09: add rdi, rdx
433c0c: movdqu xmmword ptr [r8], xmm0
433c11: add rsi, rdx
433c14: lea r11, [rip + 0x63925]
433c1b: movsxd rdx, dword ptr [r11 + rdx*4]
433c1f: lea rdx, [r11 + rdx]
433c23: notrack jmp rdx
433c26: ud2 
433c28: nop dword ptr [rax + rax]
433c30: lea r9, [r9 + 0x28]
433c37: cmp rdx, rcx
433c3a: movaps xmm1, xmmword ptr [rsi - 3]
433c3e: jb 0x433c47
433c40: lea r9, [r9 - 7]
433c47: lea rdx, [rdx - 0x40]
433c4b: notrack jmp r9
433c4f: ud2 
433c51: prefetchnta byte ptr [rsi - 0x1c0]
433c58: movaps xmm2, xmmword ptr [rsi - 0x13]
433c5c: sub rdx, 0x40
433c60: movaps xmm3, xmmword ptr [rsi - 0x23]
433c64: movaps xmm4, xmmword ptr [rsi - 0x33]
433c68: movaps xmm5, xmmword ptr [rsi - 0x43]
433c6c: lea rsi, [rsi - 0x40]
433c70: palignr xmm1, xmm2, 3
433c76: palignr xmm2, xmm3, 3
433c7c: palignr xmm3, xmm4, 3
433c82: palignr xmm4, xmm5, 3
433c88: movaps xmmword ptr [rdi - 0x10], xmm1
433c8c: movaps xmm1, xmm5
433c8f: movaps xmmword ptr [rdi - 0x20], xmm2
433c93: lea rdi, [rdi - 0x40]
433c97: movaps xmmword ptr [rdi + 0x10], xmm3
433c9b: jb 0x433ca6
433c9d: movaps xmmword ptr [rdi], xmm4
433ca0: notrack jmp r9
433ca4: ud2 
433ca6: movaps xmmword ptr [rdi], xmm4
433ca9: lea rdx, [rdx + 0x40]
433cad: movdqu xmmword ptr [r8], xmm0
433cb2: lea r11, [rip + 0x63887]
433cb9: movsxd rdx, dword ptr [r11 + rdx*4]
433cbd: lea rdx, [r11 + rdx]
433cc1: notrack jmp rdx
433cc4: ud2 
433cc6: nop word ptr cs:[rax + rax]
433cd0: lea r9, [r9 + 0x28]
433cd7: cmp rdx, rcx
433cda: movaps xmm1, xmmword ptr [rsi - 4]
433cde: jb 0x433ce7
433ce0: lea r9, [r9 - 7]
433ce7: lea rdx, [rdx - 0x40]
433ceb: notrack jmp r9
433cef: ud2 
433cf1: prefetchnta byte ptr [rsi + 0x1c0]
433cf8: sub rdx, 0x40
433cfc: movaps xmm2, xmmword ptr [rsi + 0xc]
433d00: movaps xmm3, xmmword ptr [rsi + 0x1c]
433d04: movaps xmm4, xmmword ptr [rsi + 0x2c]
433d08: movaps xmm5, xmmword ptr [rsi + 0x3c]
433d0c: movdqa xmm6, xmm5
433d10: palignr xmm5, xmm4, 4
433d16: lea rsi, [rsi + 0x40]
433d1a: palignr xmm4, xmm3, 4
433d20: palignr xmm3, xmm2, 4
433d26: lea rdi, [rdi + 0x40]
433d2a: palignr xmm2, xmm1, 4
433d30: movdqa xmm1, xmm6
433d34: movdqa xmmword ptr [rdi - 0x40], xmm2
433d39: movaps xmmword ptr [rdi - 0x30], xmm3
433d3d: jb 0x433d4d
433d3f: movaps xmmword ptr [rdi - 0x20], xmm4
433d43: movaps xmmword ptr [rdi - 0x10], xmm5
433d47: notrack jmp r9
433d4b: ud2 
433d4d: movaps xmmword ptr [rdi - 0x20], xmm4
433d51: lea rdx, [rdx + 0x40]
433d55: movaps xmmword ptr [rdi - 0x10], xmm5
433d59: add rdi, rdx
433d5c: movdqu xmmword ptr [r8], xmm0
433d61: add rsi, rdx
433d64: lea r11, [rip + 0x637d5]
433d6b: movsxd rdx, dword ptr [r11 + rdx*4]
433d6f: lea rdx, [r11 + rdx]
433d73: notrack jmp rdx
433d76: ud2 
433d78: nop dword ptr [rax + rax]
433d80: lea r9, [r9 + 0x28]
433d87: cmp rdx, rcx
433d8a: movaps xmm1, xmmword ptr [rsi - 4]
433d8e: jb 0x433d97
433d90: lea r9, [r9 - 7]
433d97: lea rdx, [rdx - 0x40]
433d9b: notrack jmp r9
433d9f: ud2 
433da1: prefetchnta byte ptr [rsi - 0x1c0]
433da8: movaps xmm2, xmmword ptr [rsi - 0x14]
433dac: sub rdx, 0x40
433db0: movaps xmm3, xmmword ptr [rsi - 0x24]
433db4: movaps xmm4, xmmword ptr [rsi - 0x34]
433db8: movaps xmm5, xmmword ptr [rsi - 0x44]
433dbc: lea rsi, [rsi - 0x40]
433dc0: palignr xmm1, xmm2, 4
433dc6: palignr xmm2, xmm3, 4
433dcc: palignr xmm3, xmm4, 4
433dd2: palignr xmm4, xmm5, 4
433dd8: movaps xmmword ptr [rdi - 0x10], xmm1
433ddc: movaps xmm1, xmm5
433ddf: movaps xmmword ptr [rdi - 0x20], xmm2
433de3: lea rdi, [rdi - 0x40]
433de7: movaps xmmword ptr [rdi + 0x10], xmm3
433deb: jb 0x433df6
433ded: movaps xmmword ptr [rdi], xmm4
433df0: notrack jmp r9
433df4: ud2 
433df6: movaps xmmword ptr [rdi], xmm4
433df9: lea rdx, [rdx + 0x40]
433dfd: movdqu xmmword ptr [r8], xmm0
433e02: lea r11, [rip + 0x63737]
433e09: movsxd rdx, dword ptr [r11 + rdx*4]
433e0d: lea rdx, [r11 + rdx]
433e11: notrack jmp rdx
433e14: ud2 
433e16: nop word ptr cs:[rax + rax]
433e20: lea r9, [r9 + 0x28]
433e27: cmp rdx, rcx
433e2a: movaps xmm1, xmmword ptr [rsi - 5]
433e2e: jb 0x433e37
433e30: lea r9, [r9 - 7]
433e37: lea rdx, [rdx - 0x40]
433e3b: notrack jmp r9
433e3f: ud2 
433e41: prefetchnta byte ptr [rsi + 0x1c0]
433e48: sub rdx, 0x40
433e4c: movaps xmm2, xmmword ptr [rsi + 0xb]
433e50: movaps xmm3, xmmword ptr [rsi + 0x1b]
433e54: movaps xmm4, xmmword ptr [rsi + 0x2b]
433e58: movaps xmm5, xmmword ptr [rsi + 0x3b]
433e5c: movdqa xmm6, xmm5
433e60: palignr xmm5, xmm4, 5
433e66: lea rsi, [rsi + 0x40]
433e6a: palignr xmm4, xmm3, 5
433e70: palignr xmm3, xmm2, 5
433e76: lea rdi, [rdi + 0x40]
433e7a: palignr xmm2, xmm1, 5
433e80: movdqa xmm1, xmm6
433e84: movdqa xmmword ptr [rdi - 0x40], xmm2
433e89: movaps xmmword ptr [rdi - 0x30], xmm3
433e8d: jb 0x433e9d
433e8f: movaps xmmword ptr [rdi - 0x20], xmm4
433e93: movaps xmmword ptr [rdi - 0x10], xmm5
433e97: notrack jmp r9
433e9b: ud2 
433e9d: movaps xmmword ptr [rdi - 0x20], xmm4
433ea1: lea rdx, [rdx + 0x40]
433ea5: movaps xmmword ptr [rdi - 0x10], xmm5
433ea9: add rdi, rdx
433eac: movdqu xmmword ptr [r8], xmm0
433eb1: add rsi, rdx
433eb4: lea r11, [rip + 0x63685]
433ebb: movsxd rdx, dword ptr [r11 + rdx*4]
433ebf: lea rdx, [r11 + rdx]
433ec3: notrack jmp rdx
433ec6: ud2 
433ec8: nop dword ptr [rax + rax]
433ed0: lea r9, [r9 + 0x28]
433ed7: cmp rdx, rcx
433eda: movaps xmm1, xmmword ptr [rsi - 5]
433ede: jb 0x433ee7
433ee0: lea r9, [r9 - 7]
433ee7: lea rdx, [rdx - 0x40]
433eeb: notrack jmp r9
433eef: ud2 
433ef1: prefetchnta byte ptr [rsi - 0x1c0]
433ef8: movaps xmm2, xmmword ptr [rsi - 0x15]
433efc: sub rdx, 0x40
433f00: movaps xmm3, xmmword ptr [rsi - 0x25]
433f04: movaps xmm4, xmmword ptr [rsi - 0x35]
433f08: movaps xmm5, xmmword ptr [rsi - 0x45]
433f0c: lea rsi, [rsi - 0x40]
433f10: palignr xmm1, xmm2, 5
433f16: palignr xmm2, xmm3, 5
433f1c: palignr xmm3, xmm4, 5
433f22: palignr xmm4, xmm5, 5
433f28: movaps xmmword ptr [rdi - 0x10], xmm1
433f2c: movaps xmm1, xmm5
433f2f: movaps xmmword ptr [rdi - 0x20], xmm2
433f33: lea rdi, [rdi - 0x40]
433f37: movaps xmmword ptr [rdi + 0x10], xmm3
433f3b: jb 0x433f46
433f3d: movaps xmmword ptr [rdi], xmm4
433f40: notrack jmp r9
433f44: ud2 
433f46: movaps xmmword ptr [rdi], xmm4
433f49: lea rdx, [rdx + 0x40]
433f4d: movdqu xmmword ptr [r8], xmm0
433f52: lea r11, [rip + 0x635e7]
433f59: movsxd rdx, dword ptr [r11 + rdx*4]
433f5d: lea rdx, [r11 + rdx]
433f61: notrack jmp rdx
433f64: ud2 
433f66: nop word ptr cs:[rax + rax]
433f70: lea r9, [r9 + 0x28]
433f77: cmp rdx, rcx
433f7a: movaps xmm1, xmmword ptr [rsi - 6]
433f7e: jb 0x433f87
433f80: lea r9, [r9 - 7]
433f87: lea rdx, [rdx - 0x40]
433f8b: notrack jmp r9
433f8f: ud2 
433f91: prefetchnta byte ptr [rsi + 0x1c0]
433f98: sub rdx, 0x40
433f9c: movaps xmm2, xmmword ptr [rsi + 0xa]
433fa0: movaps xmm3, xmmword ptr [rsi + 0x1a]
433fa4: movaps xmm4, xmmword ptr [rsi + 0x2a]
433fa8: movaps xmm5, xmmword ptr [rsi + 0x3a]
433fac: movdqa xmm6, xmm5
433fb0: palignr xmm5, xmm4, 6
433fb6: lea rsi, [rsi + 0x40]
433fba: palignr xmm4, xmm3, 6
433fc0: palignr xmm3, xmm2, 6
433fc6: lea rdi, [rdi + 0x40]
433fca: palignr xmm2, xmm1, 6
433fd0: movdqa xmm1, xmm6
433fd4: movdqa xmmword ptr [rdi - 0x40], xmm2
433fd9: movaps xmmword ptr [rdi - 0x30], xmm3
433fdd: jb 0x433fed
433fdf: movaps xmmword ptr [rdi - 0x20], xmm4
433fe3: movaps xmmword ptr [rdi - 0x10], xmm5
433fe7: notrack jmp r9
433feb: ud2 
433fed: movaps xmmword ptr [rdi - 0x20], xmm4
433ff1: lea rdx, [rdx + 0x40]
433ff5: movaps xmmword ptr [rdi - 0x10], xmm5
433ff9: add rdi, rdx
433ffc: movdqu xmmword ptr [r8], xmm0
434001: add rsi, rdx
434004: lea r11, [rip + 0x63535]
43400b: movsxd rdx, dword ptr [r11 + rdx*4]
43400f: lea rdx, [r11 + rdx]
434013: notrack jmp rdx
434016: ud2 
434018: nop dword ptr [rax + rax]
434020: lea r9, [r9 + 0x28]
434027: cmp rdx, rcx
43402a: movaps xmm1, xmmword ptr [rsi - 6]
43402e: jb 0x434037
434030: lea r9, [r9 - 7]
434037: lea rdx, [rdx - 0x40]
43403b: notrack jmp r9
43403f: ud2 
434041: prefetchnta byte ptr [rsi - 0x1c0]
434048: movaps xmm2, xmmword ptr [rsi - 0x16]
43404c: sub rdx, 0x40
434050: movaps xmm3, xmmword ptr [rsi - 0x26]
434054: movaps xmm4, xmmword ptr [rsi - 0x36]
434058: movaps xmm5, xmmword ptr [rsi - 0x46]
43405c: lea rsi, [rsi - 0x40]
434060: palignr xmm1, xmm2, 6
434066: palignr xmm2, xmm3, 6
43406c: palignr xmm3, xmm4, 6
434072: palignr xmm4, xmm5, 6
434078: movaps xmmword ptr [rdi - 0x10], xmm1
43407c: movaps xmm1, xmm5
43407f: movaps xmmword ptr [rdi - 0x20], xmm2
434083: lea rdi, [rdi - 0x40]
434087: movaps xmmword ptr [rdi + 0x10], xmm3
43408b: jb 0x434096
43408d: movaps xmmword ptr [rdi], xmm4
434090: notrack jmp r9
434094: ud2 
434096: movaps xmmword ptr [rdi], xmm4
434099: lea rdx, [rdx + 0x40]
43409d: movdqu xmmword ptr [r8], xmm0
4340a2: lea r11, [rip + 0x63497]
4340a9: movsxd rdx, dword ptr [r11 + rdx*4]
4340ad: lea rdx, [r11 + rdx]
4340b1: notrack jmp rdx
4340b4: ud2 
4340b6: nop word ptr cs:[rax + rax]
4340c0: lea r9, [r9 + 0x28]
4340c7: cmp rdx, rcx
4340ca: movaps xmm1, xmmword ptr [rsi - 7]
4340ce: jb 0x4340d7
4340d0: lea r9, [r9 - 7]
4340d7: lea rdx, [rdx - 0x40]
4340db: notrack jmp r9
4340df: ud2 
4340e1: prefetchnta byte ptr [rsi + 0x1c0]
4340e8: sub rdx, 0x40
4340ec: movaps xmm2, xmmword ptr [rsi + 9]
4340f0: movaps xmm3, xmmword ptr [rsi + 0x19]
4340f4: movaps xmm4, xmmword ptr [rsi + 0x29]
4340f8: movaps xmm5, xmmword ptr [rsi + 0x39]
4340fc: movdqa xmm6, xmm5
434100: palignr xmm5, xmm4, 7
434106: lea rsi, [rsi + 0x40]
43410a: palignr xmm4, xmm3, 7
434110: palignr xmm3, xmm2, 7
434116: lea rdi, [rdi + 0x40]
43411a: palignr xmm2, xmm1, 7
434120: movdqa xmm1, xmm6
434124: movdqa xmmword ptr [rdi - 0x40], xmm2
434129: movaps xmmword ptr [rdi - 0x30], xmm3
43412d: jb 0x43413d
43412f: movaps xmmword ptr [rdi - 0x20], xmm4
434133: movaps xmmword ptr [rdi - 0x10], xmm5
434137: notrack jmp r9
43413b: ud2 
43413d: movaps xmmword ptr [rdi - 0x20], xmm4
434141: lea rdx, [rdx + 0x40]
434145: movaps xmmword ptr [rdi - 0x10], xmm5
434149: add rdi, rdx
43414c: movdqu xmmword ptr [r8], xmm0
434151: add rsi, rdx
434154: lea r11, [rip + 0x633e5]
43415b: movsxd rdx, dword ptr [r11 + rdx*4]
43415f: lea rdx, [r11 + rdx]
434163: notrack jmp rdx
434166: ud2 
434168: nop dword ptr [rax + rax]
434170: lea r9, [r9 + 0x28]
434177: cmp rdx, rcx
43417a: movaps xmm1, xmmword ptr [rsi - 7]
43417e: jb 0x434187
434180: lea r9, [r9 - 7]
434187: lea rdx, [rdx - 0x40]
43418b: notrack jmp r9
43418f: ud2 
434191: prefetchnta byte ptr [rsi - 0x1c0]
434198: movaps xmm2, xmmword ptr [rsi - 0x17]
43419c: sub rdx, 0x40
4341a0: movaps xmm3, xmmword ptr [rsi - 0x27]
4341a4: movaps xmm4, xmmword ptr [rsi - 0x37]
4341a8: movaps xmm5, xmmword ptr [rsi - 0x47]
4341ac: lea rsi, [rsi - 0x40]
4341b0: palignr xmm1, xmm2, 7
4341b6: palignr xmm2, xmm3, 7
4341bc: palignr xmm3, xmm4, 7
4341c2: palignr xmm4, xmm5, 7
4341c8: movaps xmmword ptr [rdi - 0x10], xmm1
4341cc: movaps xmm1, xmm5
4341cf: movaps xmmword ptr [rdi - 0x20], xmm2
4341d3: lea rdi, [rdi - 0x40]
4341d7: movaps xmmword ptr [rdi + 0x10], xmm3
4341db: jb 0x4341e6
4341dd: movaps xmmword ptr [rdi], xmm4
4341e0: notrack jmp r9
4341e4: ud2 
4341e6: movaps xmmword ptr [rdi], xmm4
4341e9: lea rdx, [rdx + 0x40]
4341ed: movdqu xmmword ptr [r8], xmm0
4341f2: lea r11, [rip + 0x63347]
4341f9: movsxd rdx, dword ptr [r11 + rdx*4]
4341fd: lea rdx, [r11 + rdx]
434201: notrack jmp rdx
434204: ud2 
434206: nop word ptr cs:[rax + rax]
434210: lea r9, [r9 + 0x26]
434217: cmp rdx, rcx
43421a: movaps xmm1, xmmword ptr [rsi - 8]
43421e: jb 0x434227
434220: lea r9, [r9 - 7]
434227: lea rdx, [rdx - 0x40]
43422b: notrack jmp r9
43422f: prefetchnta byte ptr [rsi + 0x1c0]
434236: sub rdx, 0x40
43423a: movaps xmm2, xmmword ptr [rsi + 8]
43423e: movaps xmm3, xmmword ptr [rsi + 0x18]
434242: movaps xmm4, xmmword ptr [rsi + 0x28]
434246: movaps xmm5, xmmword ptr [rsi + 0x38]
43424a: movdqa xmm6, xmm5
43424e: palignr xmm5, xmm4, 8
434254: lea rsi, [rsi + 0x40]
434258: palignr xmm4, xmm3, 8
43425e: palignr xmm3, xmm2, 8
434264: lea rdi, [rdi + 0x40]
434268: palignr xmm2, xmm1, 8
43426e: movdqa xmm1, xmm6
434272: movdqa xmmword ptr [rdi - 0x40], xmm2
434277: movaps xmmword ptr [rdi - 0x30], xmm3
43427b: jb 0x434290
43427d: movaps xmmword ptr [rdi - 0x20], xmm4
434281: movaps xmmword ptr [rdi - 0x10], xmm5
434285: notrack jmp r9
434289: ud2 
43428b: nop dword ptr [rax + rax]
434290: lea rdx, [rdx + 0x40]
434294: movaps xmmword ptr [rdi - 0x20], xmm4
434298: add rsi, rdx
43429b: movaps xmmword ptr [rdi - 0x10], xmm5
43429f: add rdi, rdx
4342a2: movdqu xmmword ptr [r8], xmm0
4342a7: lea r11, [rip + 0x63292]
4342ae: movsxd rdx, dword ptr [r11 + rdx*4]
4342b2: lea rdx, [r11 + rdx]
4342b6: notrack jmp rdx
4342b9: ud2 
4342bb: nop dword ptr [rax + rax]
4342c0: lea r9, [r9 + 0x28]
4342c7: cmp rdx, rcx
4342ca: movaps xmm1, xmmword ptr [rsi - 8]
4342ce: jb 0x4342d7
4342d0: lea r9, [r9 - 7]
4342d7: lea rdx, [rdx - 0x40]
4342db: notrack jmp r9
4342df: ud2 
4342e1: prefetchnta byte ptr [rsi - 0x1c0]
4342e8: movaps xmm2, xmmword ptr [rsi - 0x18]
4342ec: sub rdx, 0x40
4342f0: movaps xmm3, xmmword ptr [rsi - 0x28]
4342f4: movaps xmm4, xmmword ptr [rsi - 0x38]
4342f8: movaps xmm5, xmmword ptr [rsi - 0x48]
4342fc: lea rsi, [rsi - 0x40]
434300: palignr xmm1, xmm2, 8
434306: palignr xmm2, xmm3, 8
43430c: palignr xmm3, xmm4, 8
434312: palignr xmm4, xmm5, 8
434318: movaps xmmword ptr [rdi - 0x10], xmm1
43431c: movaps xmm1, xmm5
43431f: movaps xmmword ptr [rdi - 0x20], xmm2
434323: lea rdi, [rdi - 0x40]
434327: movaps xmmword ptr [rdi + 0x10], xmm3
43432b: jb 0x434336
43432d: movaps xmmword ptr [rdi], xmm4
434330: notrack jmp r9
434334: ud2 
434336: movaps xmmword ptr [rdi], xmm4
434339: lea rdx, [rdx + 0x40]
43433d: movdqu xmmword ptr [r8], xmm0
434342: lea r11, [rip + 0x631f7]
434349: movsxd rdx, dword ptr [r11 + rdx*4]
43434d: lea rdx, [r11 + rdx]
434351: notrack jmp rdx
434354: ud2 
434356: nop word ptr cs:[rax + rax]
434360: lea r9, [r9 + 0x28]
434367: cmp rdx, rcx
43436a: movaps xmm1, xmmword ptr [rsi - 9]
43436e: jb 0x434377
434370: lea r9, [r9 - 7]
434377: lea rdx, [rdx - 0x40]
43437b: notrack jmp r9
43437f: ud2 
434381: prefetchnta byte ptr [rsi + 0x1c0]
434388: sub rdx, 0x40
43438c: movaps xmm2, xmmword ptr [rsi + 7]
434390: movaps xmm3, xmmword ptr [rsi + 0x17]
434394: movaps xmm4, xmmword ptr [rsi + 0x27]
434398: movaps xmm5, xmmword ptr [rsi + 0x37]
43439c: movdqa xmm6, xmm5
4343a0: palignr xmm5, xmm4, 9
4343a6: lea rsi, [rsi + 0x40]
4343aa: palignr xmm4, xmm3, 9
4343b0: palignr xmm3, xmm2, 9
4343b6: lea rdi, [rdi + 0x40]
4343ba: palignr xmm2, xmm1, 9
4343c0: movdqa xmm1, xmm6
4343c4: movdqa xmmword ptr [rdi - 0x40], xmm2
4343c9: movaps xmmword ptr [rdi - 0x30], xmm3
4343cd: jb 0x4343dd
4343cf: movaps xmmword ptr [rdi - 0x20], xmm4
4343d3: movaps xmmword ptr [rdi - 0x10], xmm5
4343d7: notrack jmp r9
4343db: ud2 
4343dd: movaps xmmword ptr [rdi - 0x20], xmm4
4343e1: lea rdx, [rdx + 0x40]
4343e5: movaps xmmword ptr [rdi - 0x10], xmm5
4343e9: add rdi, rdx
4343ec: movdqu xmmword ptr [r8], xmm0
4343f1: add rsi, rdx
4343f4: lea r11, [rip + 0x63145]
4343fb: movsxd rdx, dword ptr [r11 + rdx*4]
4343ff: lea rdx, [r11 + rdx]
434403: notrack jmp rdx
434406: ud2 
434408: nop dword ptr [rax + rax]
434410: lea r9, [r9 + 0x28]
434417: cmp rdx, rcx
43441a: movaps xmm1, xmmword ptr [rsi - 9]
43441e: jb 0x434427
434420: lea r9, [r9 - 7]
434427: lea rdx, [rdx - 0x40]
43442b: notrack jmp r9
43442f: ud2 
434431: prefetchnta byte ptr [rsi - 0x1c0]
434438: movaps xmm2, xmmword ptr [rsi - 0x19]
43443c: sub rdx, 0x40
434440: movaps xmm3, xmmword ptr [rsi - 0x29]
434444: movaps xmm4, xmmword ptr [rsi - 0x39]
434448: movaps xmm5, xmmword ptr [rsi - 0x49]
43444c: lea rsi, [rsi - 0x40]
434450: palignr xmm1, xmm2, 9
434456: palignr xmm2, xmm3, 9
43445c: palignr xmm3, xmm4, 9
434462: palignr xmm4, xmm5, 9
434468: movaps xmmword ptr [rdi - 0x10], xmm1
43446c: movaps xmm1, xmm5
43446f: movaps xmmword ptr [rdi - 0x20], xmm2
434473: lea rdi, [rdi - 0x40]
434477: movaps xmmword ptr [rdi + 0x10], xmm3
43447b: jb 0x434486
43447d: movaps xmmword ptr [rdi], xmm4
434480: notrack jmp r9
434484: ud2 
434486: movaps xmmword ptr [rdi], xmm4
434489: lea rdx, [rdx + 0x40]
43448d: movdqu xmmword ptr [r8], xmm0
434492: lea r11, [rip + 0x630a7]
434499: movsxd rdx, dword ptr [r11 + rdx*4]
43449d: lea rdx, [r11 + rdx]
4344a1: notrack jmp rdx
4344a4: ud2 
4344a6: nop word ptr cs:[rax + rax]
4344b0: lea r9, [r9 + 0x28]
4344b7: cmp rdx, rcx
4344ba: movaps xmm1, xmmword ptr [rsi - 0xa]
4344be: jb 0x4344c7
4344c0: lea r9, [r9 - 7]
4344c7: lea rdx, [rdx - 0x40]
4344cb: notrack jmp r9
4344cf: ud2 
4344d1: prefetchnta byte ptr [rsi + 0x1c0]
4344d8: sub rdx, 0x40
4344dc: movaps xmm2, xmmword ptr [rsi + 6]
4344e0: movaps xmm3, xmmword ptr [rsi + 0x16]
4344e4: movaps xmm4, xmmword ptr [rsi + 0x26]
4344e8: movaps xmm5, xmmword ptr [rsi + 0x36]
4344ec: movdqa xmm6, xmm5
4344f0: palignr xmm5, xmm4, 0xa
4344f6: lea rsi, [rsi + 0x40]
4344fa: palignr xmm4, xmm3, 0xa
434500: palignr xmm3, xmm2, 0xa
434506: lea rdi, [rdi + 0x40]
43450a: palignr xmm2, xmm1, 0xa
434510: movdqa xmm1, xmm6
434514: movdqa xmmword ptr [rdi - 0x40], xmm2
434519: movaps xmmword ptr [rdi - 0x30], xmm3
43451d: jb 0x43452d
43451f: movaps xmmword ptr [rdi - 0x20], xmm4
434523: movaps xmmword ptr [rdi - 0x10], xmm5
434527: notrack jmp r9
43452b: ud2 
43452d: movaps xmmword ptr [rdi - 0x20], xmm4
434531: lea rdx, [rdx + 0x40]
434535: movaps xmmword ptr [rdi - 0x10], xmm5
434539: add rdi, rdx
43453c: movdqu xmmword ptr [r8], xmm0
434541: add rsi, rdx
434544: lea r11, [rip + 0x62ff5]
43454b: movsxd rdx, dword ptr [r11 + rdx*4]
43454f: lea rdx, [r11 + rdx]
434553: notrack jmp rdx
434556: ud2 
434558: nop dword ptr [rax + rax]
434560: lea r9, [r9 + 0x28]
434567: cmp rdx, rcx
43456a: movaps xmm1, xmmword ptr [rsi - 0xa]
43456e: jb 0x434577
434570: lea r9, [r9 - 7]
434577: lea rdx, [rdx - 0x40]
43457b: notrack jmp r9
43457f: ud2 
434581: prefetchnta byte ptr [rsi - 0x1c0]
434588: movaps xmm2, xmmword ptr [rsi - 0x1a]
43458c: sub rdx, 0x40
434590: movaps xmm3, xmmword ptr [rsi - 0x2a]
434594: movaps xmm4, xmmword ptr [rsi - 0x3a]
434598: movaps xmm5, xmmword ptr [rsi - 0x4a]
43459c: lea rsi, [rsi - 0x40]
4345a0: palignr xmm1, xmm2, 0xa
4345a6: palignr xmm2, xmm3, 0xa
4345ac: palignr xmm3, xmm4, 0xa
4345b2: palignr xmm4, xmm5, 0xa
4345b8: movaps xmmword ptr [rdi - 0x10], xmm1
4345bc: movaps xmm1, xmm5
4345bf: movaps xmmword ptr [rdi - 0x20], xmm2
4345c3: lea rdi, [rdi - 0x40]
4345c7: movaps xmmword ptr [rdi + 0x10], xmm3
4345cb: jb 0x4345d6
4345cd: movaps xmmword ptr [rdi], xmm4
4345d0: notrack jmp r9
4345d4: ud2 
4345d6: movaps xmmword ptr [rdi], xmm4
4345d9: lea rdx, [rdx + 0x40]
4345dd: movdqu xmmword ptr [r8], xmm0
4345e2: lea r11, [rip + 0x62f57]
4345e9: movsxd rdx, dword ptr [r11 + rdx*4]
4345ed: lea rdx, [r11 + rdx]
4345f1: notrack jmp rdx
4345f4: ud2 
4345f6: nop word ptr cs:[rax + rax]
434600: lea r9, [r9 + 0x28]
434607: cmp rdx, rcx
43460a: movaps xmm1, xmmword ptr [rsi - 0xb]
43460e: jb 0x434617
434610: lea r9, [r9 - 7]
434617: lea rdx, [rdx - 0x40]
43461b: notrack jmp r9
43461f: ud2 
434621: prefetchnta byte ptr [rsi + 0x1c0]
434628: sub rdx, 0x40
43462c: movaps xmm2, xmmword ptr [rsi + 5]
434630: movaps xmm3, xmmword ptr [rsi + 0x15]
434634: movaps xmm4, xmmword ptr [rsi + 0x25]
434638: movaps xmm5, xmmword ptr [rsi + 0x35]
43463c: movdqa xmm6, xmm5
434640: palignr xmm5, xmm4, 0xb
434646: lea rsi, [rsi + 0x40]
43464a: palignr xmm4, xmm3, 0xb
434650: palignr xmm3, xmm2, 0xb
434656: lea rdi, [rdi + 0x40]
43465a: palignr xmm2, xmm1, 0xb
434660: movdqa xmm1, xmm6
434664: movdqa xmmword ptr [rdi - 0x40], xmm2
434669: movaps xmmword ptr [rdi - 0x30], xmm3
43466d: jb 0x43467d
43466f: movaps xmmword ptr [rdi - 0x20], xmm4
434673: movaps xmmword ptr [rdi - 0x10], xmm5
434677: notrack jmp r9
43467b: ud2 
43467d: movaps xmmword ptr [rdi - 0x20], xmm4
434681: lea rdx, [rdx + 0x40]
434685: movaps xmmword ptr [rdi - 0x10], xmm5
434689: add rdi, rdx
43468c: movdqu xmmword ptr [r8], xmm0
434691: add rsi, rdx
434694: lea r11, [rip + 0x62ea5]
43469b: movsxd rdx, dword ptr [r11 + rdx*4]
43469f: lea rdx, [r11 + rdx]
4346a3: notrack jmp rdx
4346a6: ud2 
4346a8: nop dword ptr [rax + rax]
4346b0: lea r9, [r9 + 0x28]
4346b7: cmp rdx, rcx
4346ba: movaps xmm1, xmmword ptr [rsi - 0xb]
4346be: jb 0x4346c7
4346c0: lea r9, [r9 - 7]
4346c7: lea rdx, [rdx - 0x40]
4346cb: notrack jmp r9
4346cf: ud2 
4346d1: prefetchnta byte ptr [rsi - 0x1c0]
4346d8: movaps xmm2, xmmword ptr [rsi - 0x1b]
4346dc: sub rdx, 0x40
4346e0: movaps xmm3, xmmword ptr [rsi - 0x2b]
4346e4: movaps xmm4, xmmword ptr [rsi - 0x3b]
4346e8: movaps xmm5, xmmword ptr [rsi - 0x4b]
4346ec: lea rsi, [rsi - 0x40]
4346f0: palignr xmm1, xmm2, 0xb
4346f6: palignr xmm2, xmm3, 0xb
4346fc: palignr xmm3, xmm4, 0xb
434702: palignr xmm4, xmm5, 0xb
434708: movaps xmmword ptr [rdi - 0x10], xmm1
43470c: movaps xmm1, xmm5
43470f: movaps xmmword ptr [rdi - 0x20], xmm2
434713: lea rdi, [rdi - 0x40]
434717: movaps xmmword ptr [rdi + 0x10], xmm3
43471b: jb 0x434726
43471d: movaps xmmword ptr [rdi], xmm4
434720: notrack jmp r9
434724: ud2 
434726: movaps xmmword ptr [rdi], xmm4
434729: lea rdx, [rdx + 0x40]
43472d: movdqu xmmword ptr [r8], xmm0
434732: lea r11, [rip + 0x62e07]
434739: movsxd rdx, dword ptr [r11 + rdx*4]
43473d: lea rdx, [r11 + rdx]
434741: notrack jmp rdx
434744: ud2 
434746: nop word ptr cs:[rax + rax]
434750: lea r9, [r9 + 0x28]
434757: cmp rdx, rcx
43475a: movaps xmm1, xmmword ptr [rsi - 0xc]
43475e: jb 0x434767
434760: lea r9, [r9 - 7]
434767: lea rdx, [rdx - 0x40]
43476b: notrack jmp r9
43476f: ud2 
434771: prefetchnta byte ptr [rsi + 0x1c0]
434778: sub rdx, 0x40
43477c: movaps xmm2, xmmword ptr [rsi + 4]
434780: movaps xmm3, xmmword ptr [rsi + 0x14]
434784: movaps xmm4, xmmword ptr [rsi + 0x24]
434788: movaps xmm5, xmmword ptr [rsi + 0x34]
43478c: movdqa xmm6, xmm5
434790: palignr xmm5, xmm4, 0xc
434796: lea rsi, [rsi + 0x40]
43479a: palignr xmm4, xmm3, 0xc
4347a0: palignr xmm3, xmm2, 0xc
4347a6: lea rdi, [rdi + 0x40]
4347aa: palignr xmm2, xmm1, 0xc
4347b0: movdqa xmm1, xmm6
4347b4: movdqa xmmword ptr [rdi - 0x40], xmm2
4347b9: movaps xmmword ptr [rdi - 0x30], xmm3
4347bd: jb 0x4347cd
4347bf: movaps xmmword ptr [rdi - 0x20], xmm4
4347c3: movaps xmmword ptr [rdi - 0x10], xmm5
4347c7: notrack jmp r9
4347cb: ud2 
4347cd: movaps xmmword ptr [rdi - 0x20], xmm4
4347d1: lea rdx, [rdx + 0x40]
4347d5: movaps xmmword ptr [rdi - 0x10], xmm5
4347d9: add rdi, rdx
4347dc: movdqu xmmword ptr [r8], xmm0
4347e1: add rsi, rdx
4347e4: lea r11, [rip + 0x62d55]
4347eb: movsxd rdx, dword ptr [r11 + rdx*4]
4347ef: lea rdx, [r11 + rdx]
4347f3: notrack jmp rdx
4347f6: ud2 
4347f8: nop dword ptr [rax + rax]
434800: lea r9, [r9 + 0x28]
434807: cmp rdx, rcx
43480a: movaps xmm1, xmmword ptr [rsi - 0xc]
43480e: jb 0x434817
434810: lea r9, [r9 - 7]
434817: lea rdx, [rdx - 0x40]
43481b: notrack jmp r9
43481f: ud2 
434821: prefetchnta byte ptr [rsi - 0x1c0]
434828: movaps xmm2, xmmword ptr [rsi - 0x1c]
43482c: sub rdx, 0x40
434830: movaps xmm3, xmmword ptr [rsi - 0x2c]
434834: movaps xmm4, xmmword ptr [rsi - 0x3c]
434838: movaps xmm5, xmmword ptr [rsi - 0x4c]
43483c: lea rsi, [rsi - 0x40]
434840: palignr xmm1, xmm2, 0xc
434846: palignr xmm2, xmm3, 0xc
43484c: palignr xmm3, xmm4, 0xc
434852: palignr xmm4, xmm5, 0xc
434858: movaps xmmword ptr [rdi - 0x10], xmm1
43485c: movaps xmm1, xmm5
43485f: movaps xmmword ptr [rdi - 0x20], xmm2
434863: lea rdi, [rdi - 0x40]
434867: movaps xmmword ptr [rdi + 0x10], xmm3
43486b: jb 0x434876
43486d: movaps xmmword ptr [rdi], xmm4
434870: notrack jmp r9
434874: ud2 
434876: movaps xmmword ptr [rdi], xmm4
434879: lea rdx, [rdx + 0x40]
43487d: movdqu xmmword ptr [r8], xmm0
434882: lea r11, [rip + 0x62cb7]
434889: movsxd rdx, dword ptr [r11 + rdx*4]
43488d: lea rdx, [r11 + rdx]
434891: notrack jmp rdx
434894: ud2 
434896: nop word ptr cs:[rax + rax]
4348a0: lea r9, [r9 + 0x28]
4348a7: cmp rdx, rcx
4348aa: movaps xmm1, xmmword ptr [rsi - 0xd]
4348ae: jb 0x4348b7
4348b0: lea r9, [r9 - 7]
4348b7: lea rdx, [rdx - 0x40]
4348bb: notrack jmp r9
4348bf: ud2 
4348c1: prefetchnta byte ptr [rsi + 0x1c0]
4348c8: sub rdx, 0x40
4348cc: movaps xmm2, xmmword ptr [rsi + 3]
4348d0: movaps xmm3, xmmword ptr [rsi + 0x13]
4348d4: movaps xmm4, xmmword ptr [rsi + 0x23]
4348d8: movaps xmm5, xmmword ptr [rsi + 0x33]
4348dc: movdqa xmm6, xmm5
4348e0: palignr xmm5, xmm4, 0xd
4348e6: lea rsi, [rsi + 0x40]
4348ea: palignr xmm4, xmm3, 0xd
4348f0: palignr xmm3, xmm2, 0xd
4348f6: lea rdi, [rdi + 0x40]
4348fa: palignr xmm2, xmm1, 0xd
434900: movdqa xmm1, xmm6
434904: movdqa xmmword ptr [rdi - 0x40], xmm2
434909: movaps xmmword ptr [rdi - 0x30], xmm3
43490d: jb 0x43491d
43490f: movaps xmmword ptr [rdi - 0x20], xmm4
434913: movaps xmmword ptr [rdi - 0x10], xmm5
434917: notrack jmp r9
43491b: ud2 
43491d: movaps xmmword ptr [rdi - 0x20], xmm4
434921: lea rdx, [rdx + 0x40]
434925: movaps xmmword ptr [rdi - 0x10], xmm5
434929: add rdi, rdx
43492c: movdqu xmmword ptr [r8], xmm0
434931: add rsi, rdx
434934: lea r11, [rip + 0x62c05]
43493b: movsxd rdx, dword ptr [r11 + rdx*4]
43493f: lea rdx, [r11 + rdx]
434943: notrack jmp rdx
434946: ud2 
434948: nop dword ptr [rax + rax]
434950: lea r9, [r9 + 0x28]
434957: cmp rdx, rcx
43495a: movaps xmm1, xmmword ptr [rsi - 0xd]
43495e: jb 0x434967
434960: lea r9, [r9 - 7]
434967: lea rdx, [rdx - 0x40]
43496b: notrack jmp r9
43496f: ud2 
434971: prefetchnta byte ptr [rsi - 0x1c0]
434978: movaps xmm2, xmmword ptr [rsi - 0x1d]
43497c: sub rdx, 0x40
434980: movaps xmm3, xmmword ptr [rsi - 0x2d]
434984: movaps xmm4, xmmword ptr [rsi - 0x3d]
434988: movaps xmm5, xmmword ptr [rsi - 0x4d]
43498c: lea rsi, [rsi - 0x40]
434990: palignr xmm1, xmm2, 0xd
434996: palignr xmm2, xmm3, 0xd
43499c: palignr xmm3, xmm4, 0xd
4349a2: palignr xmm4, xmm5, 0xd
4349a8: movaps xmmword ptr [rdi - 0x10], xmm1
4349ac: movaps xmm1, xmm5
4349af: movaps xmmword ptr [rdi - 0x20], xmm2
4349b3: lea rdi, [rdi - 0x40]
4349b7: movaps xmmword ptr [rdi + 0x10], xmm3
4349bb: jb 0x4349c6
4349bd: movaps xmmword ptr [rdi], xmm4
4349c0: notrack jmp r9
4349c4: ud2 
4349c6: movaps xmmword ptr [rdi], xmm4
4349c9: lea rdx, [rdx + 0x40]
4349cd: movdqu xmmword ptr [r8], xmm0
4349d2: lea r11, [rip + 0x62b67]
4349d9: movsxd rdx, dword ptr [r11 + rdx*4]
4349dd: lea rdx, [r11 + rdx]
4349e1: notrack jmp rdx
4349e4: ud2 
4349e6: nop word ptr cs:[rax + rax]
4349f0: lea r9, [r9 + 0x28]
4349f7: cmp rdx, rcx
4349fa: movaps xmm1, xmmword ptr [rsi - 0xe]
4349fe: jb 0x434a07
434a00: lea r9, [r9 - 7]
434a07: lea rdx, [rdx - 0x40]
434a0b: notrack jmp r9
434a0f: ud2 
434a11: prefetchnta byte ptr [rsi + 0x1c0]
434a18: sub rdx, 0x40
434a1c: movaps xmm2, xmmword ptr [rsi + 2]
434a20: movaps xmm3, xmmword ptr [rsi + 0x12]
434a24: movaps xmm4, xmmword ptr [rsi + 0x22]
434a28: movaps xmm5, xmmword ptr [rsi + 0x32]
434a2c: movdqa xmm6, xmm5
434a30: palignr xmm5, xmm4, 0xe
434a36: lea rsi, [rsi + 0x40]
434a3a: palignr xmm4, xmm3, 0xe
434a40: palignr xmm3, xmm2, 0xe
434a46: lea rdi, [rdi + 0x40]
434a4a: palignr xmm2, xmm1, 0xe
434a50: movdqa xmm1, xmm6
434a54: movdqa xmmword ptr [rdi - 0x40], xmm2
434a59: movaps xmmword ptr [rdi - 0x30], xmm3
434a5d: jb 0x434a6d
434a5f: movaps xmmword ptr [rdi - 0x20], xmm4
434a63: movaps xmmword ptr [rdi - 0x10], xmm5
434a67: notrack jmp r9
434a6b: ud2 
434a6d: movaps xmmword ptr [rdi - 0x20], xmm4
434a71: lea rdx, [rdx + 0x40]
434a75: movaps xmmword ptr [rdi - 0x10], xmm5
434a79: add rdi, rdx
434a7c: movdqu xmmword ptr [r8], xmm0
434a81: add rsi, rdx
434a84: lea r11, [rip + 0x62ab5]
434a8b: movsxd rdx, dword ptr [r11 + rdx*4]
434a8f: lea rdx, [r11 + rdx]
434a93: notrack jmp rdx
434a96: ud2 
434a98: nop dword ptr [rax + rax]
434aa0: lea r9, [r9 + 0x28]
434aa7: cmp rdx, rcx
434aaa: movaps xmm1, xmmword ptr [rsi - 0xe]
434aae: jb 0x434ab7
434ab0: lea r9, [r9 - 7]
434ab7: lea rdx, [rdx - 0x40]
434abb: notrack jmp r9
434abf: ud2 
434ac1: prefetchnta byte ptr [rsi - 0x1c0]
434ac8: movaps xmm2, xmmword ptr [rsi - 0x1e]
434acc: sub rdx, 0x40
434ad0: movaps xmm3, xmmword ptr [rsi - 0x2e]
434ad4: movaps xmm4, xmmword ptr [rsi - 0x3e]
434ad8: movaps xmm5, xmmword ptr [rsi - 0x4e]
434adc: lea rsi, [rsi - 0x40]
434ae0: palignr xmm1, xmm2, 0xe
434ae6: palignr xmm2, xmm3, 0xe
434aec: palignr xmm3, xmm4, 0xe
434af2: palignr xmm4, xmm5, 0xe
434af8: movaps xmmword ptr [rdi - 0x10], xmm1
434afc: movaps xmm1, xmm5
434aff: movaps xmmword ptr [rdi - 0x20], xmm2
434b03: lea rdi, [rdi - 0x40]
434b07: movaps xmmword ptr [rdi + 0x10], xmm3
434b0b: jb 0x434b16
434b0d: movaps xmmword ptr [rdi], xmm4
434b10: notrack jmp r9
434b14: ud2 
434b16: movaps xmmword ptr [rdi], xmm4
434b19: lea rdx, [rdx + 0x40]
434b1d: movdqu xmmword ptr [r8], xmm0
434b22: lea r11, [rip + 0x62a17]
434b29: movsxd rdx, dword ptr [r11 + rdx*4]
434b2d: lea rdx, [r11 + rdx]
434b31: notrack jmp rdx
434b34: ud2 
434b36: nop word ptr cs:[rax + rax]
434b40: lea r9, [r9 + 0x28]
434b47: cmp rdx, rcx
434b4a: movaps xmm1, xmmword ptr [rsi - 0xf]
434b4e: jb 0x434b57
434b50: lea r9, [r9 - 7]
434b57: lea rdx, [rdx - 0x40]
434b5b: notrack jmp r9
434b5f: ud2 
434b61: prefetchnta byte ptr [rsi + 0x1c0]
434b68: sub rdx, 0x40
434b6c: movaps xmm2, xmmword ptr [rsi + 1]
434b70: movaps xmm3, xmmword ptr [rsi + 0x11]
434b74: movaps xmm4, xmmword ptr [rsi + 0x21]
434b78: movaps xmm5, xmmword ptr [rsi + 0x31]
434b7c: movdqa xmm6, xmm5
434b80: palignr xmm5, xmm4, 0xf
434b86: lea rsi, [rsi + 0x40]
434b8a: palignr xmm4, xmm3, 0xf
434b90: palignr xmm3, xmm2, 0xf
434b96: lea rdi, [rdi + 0x40]
434b9a: palignr xmm2, xmm1, 0xf
434ba0: movdqa xmm1, xmm6
434ba4: movdqa xmmword ptr [rdi - 0x40], xmm2
434ba9: movaps xmmword ptr [rdi - 0x30], xmm3
434bad: jb 0x434bbd
434baf: movaps xmmword ptr [rdi - 0x20], xmm4
434bb3: movaps xmmword ptr [rdi - 0x10], xmm5
434bb7: notrack jmp r9
434bbb: ud2 
434bbd: movaps xmmword ptr [rdi - 0x20], xmm4
434bc1: lea rdx, [rdx + 0x40]
434bc5: movaps xmmword ptr [rdi - 0x10], xmm5
434bc9: add rdi, rdx
434bcc: movdqu xmmword ptr [r8], xmm0
434bd1: add rsi, rdx
434bd4: lea r11, [rip + 0x62965]
434bdb: movsxd rdx, dword ptr [r11 + rdx*4]
434bdf: lea rdx, [r11 + rdx]
434be3: notrack jmp rdx
434be6: ud2 
434be8: nop dword ptr [rax + rax]
434bf0: lea r9, [r9 + 0x28]
434bf7: cmp rdx, rcx
434bfa: movaps xmm1, xmmword ptr [rsi - 0xf]
434bfe: jb 0x434c07
434c00: lea r9, [r9 - 7]
434c07: lea rdx, [rdx - 0x40]
434c0b: notrack jmp r9
434c0f: ud2 
434c11: prefetchnta byte ptr [rsi - 0x1c0]
434c18: movaps xmm2, xmmword ptr [rsi - 0x1f]
434c1c: sub rdx, 0x40
434c20: movaps xmm3, xmmword ptr [rsi - 0x2f]
434c24: movaps xmm4, xmmword ptr [rsi - 0x3f]
434c28: movaps xmm5, xmmword ptr [rsi - 0x4f]
434c2c: lea rsi, [rsi - 0x40]
434c30: palignr xmm1, xmm2, 0xf
434c36: palignr xmm2, xmm3, 0xf
434c3c: palignr xmm3, xmm4, 0xf
434c42: palignr xmm4, xmm5, 0xf
434c48: movaps xmmword ptr [rdi - 0x10], xmm1
434c4c: movaps xmm1, xmm5
434c4f: movaps xmmword ptr [rdi - 0x20], xmm2
434c53: lea rdi, [rdi - 0x40]
434c57: movaps xmmword ptr [rdi + 0x10], xmm3
434c5b: jb 0x434c66
434c5d: movaps xmmword ptr [rdi], xmm4
434c60: notrack jmp r9
434c64: ud2 
434c66: movaps xmmword ptr [rdi], xmm4
434c69: lea rdx, [rdx + 0x40]
434c6d: movdqu xmmword ptr [r8], xmm0
434c72: lea r11, [rip + 0x628c7]
434c79: movsxd rdx, dword ptr [r11 + rdx*4]
434c7d: lea rdx, [r11 + rdx]
434c81: notrack jmp rdx
434c84: ud2 
434c86: nop word ptr cs:[rax + rax]
434c90: movdqu xmm0, xmmword ptr [rsi - 0x48]
434c95: movdqu xmm1, xmmword ptr [rsi - 0x38]
434c9a: mov r8, qword ptr [rsi - 0x28]
434c9e: mov r9, qword ptr [rsi - 0x20]
434ca2: mov r10, qword ptr [rsi - 0x18]
434ca6: mov r11, qword ptr [rsi - 0x10]
434caa: mov rcx, qword ptr [rsi - 8]
434cae: movdqu xmmword ptr [rdi - 0x48], xmm0
434cb3: movdqu xmmword ptr [rdi - 0x38], xmm1
434cb8: mov qword ptr [rdi - 0x28], r8
434cbc: mov qword ptr [rdi - 0x20], r9
434cc0: mov qword ptr [rdi - 0x18], r10
434cc4: mov qword ptr [rdi - 0x10], r11
434cc8: mov qword ptr [rdi - 8], rcx
434ccc: ret 
434ccd: nop dword ptr [rax]
434cd0: movdqu xmm0, xmmword ptr [rsi - 0x40]
434cd5: mov rcx, qword ptr [rsi - 0x30]
434cd9: mov r8, qword ptr [rsi - 0x28]
434cdd: mov r9, qword ptr [rsi - 0x20]
434ce1: mov r10, qword ptr [rsi - 0x18]
434ce5: mov r11, qword ptr [rsi - 0x10]
434ce9: mov rdx, qword ptr [rsi - 8]
434ced: movdqu xmmword ptr [rdi - 0x40], xmm0
434cf2: mov qword ptr [rdi - 0x30], rcx
434cf6: mov qword ptr [rdi - 0x28], r8
434cfa: mov qword ptr [rdi - 0x20], r9
434cfe: mov qword ptr [rdi - 0x18], r10
434d02: mov qword ptr [rdi - 0x10], r11
434d06: mov qword ptr [rdi - 8], rdx
434d0a: ret 
434d0b: nop dword ptr [rax + rax]
434d10: movdqu xmm0, xmmword ptr [rsi - 0x38]
434d15: mov r8, qword ptr [rsi - 0x28]
434d19: mov r9, qword ptr [rsi - 0x20]
434d1d: mov r10, qword ptr [rsi - 0x18]
434d21: mov r11, qword ptr [rsi - 0x10]
434d25: mov rcx, qword ptr [rsi - 8]
434d29: movdqu xmmword ptr [rdi - 0x38], xmm0
434d2e: mov qword ptr [rdi - 0x28], r8
434d32: mov qword ptr [rdi - 0x20], r9
434d36: mov qword ptr [rdi - 0x18], r10
434d3a: mov qword ptr [rdi - 0x10], r11
434d3e: mov qword ptr [rdi - 8], rcx
434d42: ret 
434d43: nop word ptr cs:[rax + rax]
434d4e: nop 
434d50: mov rcx, qword ptr [rsi - 0x30]
434d54: mov r8, qword ptr [rsi - 0x28]
434d58: mov r9, qword ptr [rsi - 0x20]
434d5c: mov r10, qword ptr [rsi - 0x18]
434d60: mov r11, qword ptr [rsi - 0x10]
434d64: mov rdx, qword ptr [rsi - 8]
434d68: mov qword ptr [rdi - 0x30], rcx
434d6c: mov qword ptr [rdi - 0x28], r8
434d70: mov qword ptr [rdi - 0x20], r9
434d74: mov qword ptr [rdi - 0x18], r10
434d78: mov qword ptr [rdi - 0x10], r11
434d7c: mov qword ptr [rdi - 8], rdx
434d80: ret 
434d81: nop word ptr cs:[rax + rax]
434d8c: nop dword ptr [rax]
434d90: mov r8, qword ptr [rsi - 0x28]
434d94: mov r9, qword ptr [rsi - 0x20]
434d98: mov r10, qword ptr [rsi - 0x18]
434d9c: mov r11, qword ptr [rsi - 0x10]
434da0: mov rdx, qword ptr [rsi - 8]
434da4: mov qword ptr [rdi - 0x28], r8
434da8: mov qword ptr [rdi - 0x20], r9
434dac: mov qword ptr [rdi - 0x18], r10
434db0: mov qword ptr [rdi - 0x10], r11
434db4: mov qword ptr [rdi - 8], rdx
434db8: ret 
434db9: nop dword ptr [rax]
434dc0: mov r9, qword ptr [rsi - 0x20]
434dc4: mov r10, qword ptr [rsi - 0x18]
434dc8: mov r11, qword ptr [rsi - 0x10]
434dcc: mov rdx, qword ptr [rsi - 8]
434dd0: mov qword ptr [rdi - 0x20], r9
434dd4: mov qword ptr [rdi - 0x18], r10
434dd8: mov qword ptr [rdi - 0x10], r11
434ddc: mov qword ptr [rdi - 8], rdx
434de0: ret 
434de1: nop word ptr cs:[rax + rax]
434dec: nop dword ptr [rax]
434df0: mov r10, qword ptr [rsi - 0x18]
434df4: mov r11, qword ptr [rsi - 0x10]
434df8: mov rdx, qword ptr [rsi - 8]
434dfc: mov qword ptr [rdi - 0x18], r10
434e00: mov qword ptr [rdi - 0x10], r11
434e04: mov qword ptr [rdi - 8], rdx
434e08: ret 
434e09: nop dword ptr [rax]
434e10: mov r11, qword ptr [rsi - 0x10]
434e14: mov rdx, qword ptr [rsi - 8]
434e18: mov qword ptr [rdi - 0x10], r11
434e1c: mov qword ptr [rdi - 8], rdx
434e20: ret 
434e21: nop word ptr cs:[rax + rax]
434e2c: nop dword ptr [rax]
434e30: mov rdx, qword ptr [rsi - 8]
434e34: mov qword ptr [rdi - 8], rdx
434e38: ret 
434e39: nop dword ptr [rax]
434e40: movdqu xmm0, xmmword ptr [rsi - 0x49]
434e45: movdqu xmm1, xmmword ptr [rsi - 0x39]
434e4a: mov rcx, qword ptr [rsi - 0x29]
434e4e: mov r9, qword ptr [rsi - 0x21]
434e52: mov r10, qword ptr [rsi - 0x19]
434e56: mov r11, qword ptr [rsi - 0x11]
434e5a: mov r8, qword ptr [rsi - 9]
434e5e: mov edx, dword ptr [rsi - 4]
434e61: movdqu xmmword ptr [rdi - 0x49], xmm0
434e66: movdqu xmmword ptr [rdi - 0x39], xmm1
434e6b: mov qword ptr [rdi - 0x29], rcx
434e6f: mov qword ptr [rdi - 0x21], r9
434e73: mov qword ptr [rdi - 0x19], r10
434e77: mov qword ptr [rdi - 0x11], r11
434e7b: mov qword ptr [rdi - 9], r8
434e7f: mov dword ptr [rdi - 4], edx
434e82: ret 
434e83: nop word ptr cs:[rax + rax]
434e8e: nop 
434e90: movdqu xmm0, xmmword ptr [rsi - 0x41]
434e95: movdqu xmm1, xmmword ptr [rsi - 0x31]
434e9a: mov r9, qword ptr [rsi - 0x21]
434e9e: mov r10, qword ptr [rsi - 0x19]
434ea2: mov r11, qword ptr [rsi - 0x11]
434ea6: mov rcx, qword ptr [rsi - 9]
434eaa: mov edx, dword ptr [rsi - 4]
434ead: movdqu xmmword ptr [rdi - 0x41], xmm0
434eb2: movdqu xmmword ptr [rdi - 0x31], xmm1
434eb7: mov qword ptr [rdi - 0x21], r9
434ebb: mov qword ptr [rdi - 0x19], r10
434ebf: mov qword ptr [rdi - 0x11], r11
434ec3: mov qword ptr [rdi - 9], rcx
434ec7: mov dword ptr [rdi - 4], edx
434eca: ret 
434ecb: nop dword ptr [rax + rax]
434ed0: movdqu xmm0, xmmword ptr [rsi - 0x39]
434ed5: mov r8, qword ptr [rsi - 0x29]
434ed9: mov r9, qword ptr [rsi - 0x21]
434edd: mov r10, qword ptr [rsi - 0x19]
434ee1: mov r11, qword ptr [rsi - 0x11]
434ee5: mov rcx, qword ptr [rsi - 9]
434ee9: mov edx, dword ptr [rsi - 4]
434eec: movdqu xmmword ptr [rdi - 0x39], xmm0
434ef1: mov qword ptr [rdi - 0x29], r8
434ef5: mov qword ptr [rdi - 0x21], r9
434ef9: mov qword ptr [rdi - 0x19], r10
434efd: mov qword ptr [rdi - 0x11], r11
434f01: mov qword ptr [rdi - 9], rcx
434f05: mov dword ptr [rdi - 4], edx
434f08: ret 
434f09: nop dword ptr [rax]
434f10: movdqu xmm0, xmmword ptr [rsi - 0x31]
434f15: mov r9, qword ptr [rsi - 0x21]
434f19: mov r10, qword ptr [rsi - 0x19]
434f1d: mov r11, qword ptr [rsi - 0x11]
434f21: mov rcx, qword ptr [rsi - 9]
434f25: mov edx, dword ptr [rsi - 4]
434f28: movdqu xmmword ptr [rdi - 0x31], xmm0
434f2d: mov qword ptr [rdi - 0x21], r9
434f31: mov qword ptr [rdi - 0x19], r10
434f35: mov qword ptr [rdi - 0x11], r11
434f39: mov qword ptr [rdi - 9], rcx
434f3d: mov dword ptr [rdi - 4], edx
434f40: ret 
434f41: nop word ptr cs:[rax + rax]
434f4c: nop dword ptr [rax]
434f50: mov r8, qword ptr [rsi - 0x29]
434f54: mov r9, qword ptr [rsi - 0x21]
434f58: mov r10, qword ptr [rsi - 0x19]
434f5c: mov r11, qword ptr [rsi - 0x11]
434f60: mov rcx, qword ptr [rsi - 9]
434f64: mov dl, byte ptr [rsi - 1]
434f67: mov qword ptr [rdi - 0x29], r8
434f6b: mov qword ptr [rdi - 0x21], r9
434f6f: mov qword ptr [rdi - 0x19], r10
434f73: mov qword ptr [rdi - 0x11], r11
434f77: mov qword ptr [rdi - 9], rcx
434f7b: mov byte ptr [rdi - 1], dl
434f7e: ret 
434f7f: nop 
434f80: mov r9, qword ptr [rsi - 0x21]
434f84: mov r10, qword ptr [rsi - 0x19]
434f88: mov r11, qword ptr [rsi - 0x11]
434f8c: mov rcx, qword ptr [rsi - 9]
434f90: mov dl, byte ptr [rsi - 1]
434f93: mov qword ptr [rdi - 0x21], r9
434f97: mov qword ptr [rdi - 0x19], r10
434f9b: mov qword ptr [rdi - 0x11], r11
434f9f: mov qword ptr [rdi - 9], rcx
434fa3: mov byte ptr [rdi - 1], dl
434fa6: ret 
434fa7: nop word ptr [rax + rax]
434fb0: mov r10, qword ptr [rsi - 0x19]
434fb4: mov r11, qword ptr [rsi - 0x11]
434fb8: mov rcx, qword ptr [rsi - 9]
434fbc: mov dl, byte ptr [rsi - 1]
434fbf: mov qword ptr [rdi - 0x19], r10
434fc3: mov qword ptr [rdi - 0x11], r11
434fc7: mov qword ptr [rdi - 9], rcx
434fcb: mov byte ptr [rdi - 1], dl
434fce: ret 
434fcf: nop 
434fd0: mov r11, qword ptr [rsi - 0x11]
434fd4: mov rcx, qword ptr [rsi - 9]
434fd8: mov edx, dword ptr [rsi - 4]
434fdb: mov qword ptr [rdi - 0x11], r11
434fdf: mov qword ptr [rdi - 9], rcx
434fe3: mov dword ptr [rdi - 4], edx
434fe6: ret 
434fe7: nop word ptr [rax + rax]
434ff0: mov rcx, qword ptr [rsi - 9]
434ff4: mov edx, dword ptr [rsi - 4]
434ff7: mov qword ptr [rdi - 9], rcx
434ffb: mov dword ptr [rdi - 4], edx
434ffe: ret 
434fff: nop 
435000: mov dl, byte ptr [rsi - 1]
435003: mov byte ptr [rdi - 1], dl
435006: ret 
435007: nop word ptr [rax + rax]
435010: movdqu xmm0, xmmword ptr [rsi - 0x4a]
435015: movdqu xmm1, xmmword ptr [rsi - 0x3a]
43501a: mov r8, qword ptr [rsi - 0x2a]
43501e: mov r9, qword ptr [rsi - 0x22]
435022: mov r10, qword ptr [rsi - 0x1a]
435026: mov r11, qword ptr [rsi - 0x12]
43502a: mov rcx, qword ptr [rsi - 0xa]
43502e: mov edx, dword ptr [rsi - 4]
435031: movdqu xmmword ptr [rdi - 0x4a], xmm0
435036: movdqu xmmword ptr [rdi - 0x3a], xmm1
43503b: mov qword ptr [rdi - 0x2a], r8
43503f: mov qword ptr [rdi - 0x22], r9
435043: mov qword ptr [rdi - 0x1a], r10
435047: mov qword ptr [rdi - 0x12], r11
43504b: mov qword ptr [rdi - 0xa], rcx
43504f: mov dword ptr [rdi - 4], edx
435052: ret 
435053: nop word ptr cs:[rax + rax]
43505e: nop 
435060: movdqu xmm0, xmmword ptr [rsi - 0x42]
435065: movdqu xmm1, xmmword ptr [rsi - 0x32]
43506a: mov r8, qword ptr [rsi - 0x2a]
43506e: mov r9, qword ptr [rsi - 0x22]
435072: mov r10, qword ptr [rsi - 0x1a]
435076: mov r11, qword ptr [rsi - 0x12]
43507a: mov rcx, qword ptr [rsi - 0xa]
43507e: mov edx, dword ptr [rsi - 4]
435081: movdqu xmmword ptr [rdi - 0x42], xmm0
435086: movdqu xmmword ptr [rdi - 0x32], xmm1
43508b: mov qword ptr [rdi - 0x2a], r8
43508f: mov qword ptr [rdi - 0x22], r9
435093: mov qword ptr [rdi - 0x1a], r10
435097: mov qword ptr [rdi - 0x12], r11
43509b: mov qword ptr [rdi - 0xa], rcx
43509f: mov dword ptr [rdi - 4], edx
4350a2: ret 
4350a3: nop word ptr cs:[rax + rax]
4350ae: nop 
4350b0: movdqu xmm1, xmmword ptr [rsi - 0x3a]
4350b5: mov r8, qword ptr [rsi - 0x2a]
4350b9: mov r9, qword ptr [rsi - 0x22]
4350bd: mov r10, qword ptr [rsi - 0x1a]
4350c1: mov r11, qword ptr [rsi - 0x12]
4350c5: mov rcx, qword ptr [rsi - 0xa]
4350c9: mov edx, dword ptr [rsi - 4]
4350cc: movdqu xmmword ptr [rdi - 0x3a], xmm1
4350d1: mov qword ptr [rdi - 0x2a], r8
4350d5: mov qword ptr [rdi - 0x22], r9
4350d9: mov qword ptr [rdi - 0x1a], r10
4350dd: mov qword ptr [rdi - 0x12], r11
4350e1: mov qword ptr [rdi - 0xa], rcx
4350e5: mov dword ptr [rdi - 4], edx
4350e8: ret 
4350e9: nop dword ptr [rax]
4350f0: movdqu xmm0, xmmword ptr [rsi - 0x32]
4350f5: mov r9, qword ptr [rsi - 0x22]
4350f9: mov r10, qword ptr [rsi - 0x1a]
4350fd: mov r11, qword ptr [rsi - 0x12]
435101: mov rcx, qword ptr [rsi - 0xa]
435105: mov edx, dword ptr [rsi - 4]
435108: movdqu xmmword ptr [rdi - 0x32], xmm0
43510d: mov qword ptr [rdi - 0x22], r9
435111: mov qword ptr [rdi - 0x1a], r10
435115: mov qword ptr [rdi - 0x12], r11
435119: mov qword ptr [rdi - 0xa], rcx
43511d: mov dword ptr [rdi - 4], edx
435120: ret 
435121: nop word ptr cs:[rax + rax]
43512c: nop dword ptr [rax]
435130: mov r8, qword ptr [rsi - 0x2a]
435134: mov r9, qword ptr [rsi - 0x22]
435138: mov r10, qword ptr [rsi - 0x1a]
43513c: mov r11, qword ptr [rsi - 0x12]
435140: mov rcx, qword ptr [rsi - 0xa]
435144: mov edx, dword ptr [rsi - 4]
435147: mov qword ptr [rdi - 0x2a], r8
43514b: mov qword ptr [rdi - 0x22], r9
43514f: mov qword ptr [rdi - 0x1a], r10
435153: mov qword ptr [rdi - 0x12], r11
435157: mov qword ptr [rdi - 0xa], rcx
43515b: mov dword ptr [rdi - 4], edx
43515e: ret 
43515f: nop 
435160: mov r9, qword ptr [rsi - 0x22]
435164: mov r10, qword ptr [rsi - 0x1a]
435168: mov r11, qword ptr [rsi - 0x12]
43516c: mov rcx, qword ptr [rsi - 0xa]
435170: mov edx, dword ptr [rsi - 4]
435173: mov qword ptr [rdi - 0x22], r9
435177: mov qword ptr [rdi - 0x1a], r10
43517b: mov qword ptr [rdi - 0x12], r11
43517f: mov qword ptr [rdi - 0xa], rcx
435183: mov dword ptr [rdi - 4], edx
435186: ret 
435187: nop word ptr [rax + rax]
435190: mov r10, qword ptr [rsi - 0x1a]
435194: mov r11, qword ptr [rsi - 0x12]
435198: mov rcx, qword ptr [rsi - 0xa]
43519c: mov edx, dword ptr [rsi - 4]
43519f: mov qword ptr [rdi - 0x1a], r10
4351a3: mov qword ptr [rdi - 0x12], r11
4351a7: mov qword ptr [rdi - 0xa], rcx
4351ab: mov dword ptr [rdi - 4], edx
4351ae: ret 
4351af: nop 
4351b0: mov r11, qword ptr [rsi - 0x12]
4351b4: mov rcx, qword ptr [rsi - 0xa]
4351b8: mov edx, dword ptr [rsi - 4]
4351bb: mov qword ptr [rdi - 0x12], r11
4351bf: mov qword ptr [rdi - 0xa], rcx
4351c3: mov dword ptr [rdi - 4], edx
4351c6: ret 
4351c7: nop word ptr [rax + rax]
4351d0: mov rcx, qword ptr [rsi - 0xa]
4351d4: mov edx, dword ptr [rsi - 4]
4351d7: mov qword ptr [rdi - 0xa], rcx
4351db: mov dword ptr [rdi - 4], edx
4351de: ret 
4351df: nop 
4351e0: mov dx, word ptr [rsi - 2]
4351e4: mov word ptr [rdi - 2], dx
4351e8: ret 
4351e9: nop dword ptr [rax]
4351f0: movdqu xmm0, xmmword ptr [rsi - 0x4b]
4351f5: movdqu xmm1, xmmword ptr [rsi - 0x3b]
4351fa: mov r8, qword ptr [rsi - 0x2b]
4351fe: mov r9, qword ptr [rsi - 0x23]
435202: mov r10, qword ptr [rsi - 0x1b]
435206: mov r11, qword ptr [rsi - 0x13]
43520a: mov rcx, qword ptr [rsi - 0xb]
43520e: mov edx, dword ptr [rsi - 4]
435211: movdqu xmmword ptr [rdi - 0x4b], xmm0
435216: movdqu xmmword ptr [rdi - 0x3b], xmm1
43521b: mov qword ptr [rdi - 0x2b], r8
43521f: mov qword ptr [rdi - 0x23], r9
435223: mov qword ptr [rdi - 0x1b], r10
435227: mov qword ptr [rdi - 0x13], r11
43522b: mov qword ptr [rdi - 0xb], rcx
43522f: mov dword ptr [rdi - 4], edx
435232: ret 
435233: nop word ptr cs:[rax + rax]
43523e: nop 
435240: movdqu xmm0, xmmword ptr [rsi - 0x43]
435245: movdqu xmm1, xmmword ptr [rsi - 0x3b]
43524a: mov r8, qword ptr [rsi - 0x2b]
43524e: mov r9, qword ptr [rsi - 0x23]
435252: mov r10, qword ptr [rsi - 0x1b]
435256: mov r11, qword ptr [rsi - 0x13]
43525a: mov rcx, qword ptr [rsi - 0xb]
43525e: mov edx, dword ptr [rsi - 4]
435261: movdqu xmmword ptr [rdi - 0x43], xmm0
435266: movdqu xmmword ptr [rdi - 0x3b], xmm1
43526b: mov qword ptr [rdi - 0x2b], r8
43526f: mov qword ptr [rdi - 0x23], r9
435273: mov qword ptr [rdi - 0x1b], r10
435277: mov qword ptr [rdi - 0x13], r11
43527b: mov qword ptr [rdi - 0xb], rcx
43527f: mov dword ptr [rdi - 4], edx
435282: ret 
435283: nop word ptr cs:[rax + rax]
43528e: nop 
435290: movdqu xmm0, xmmword ptr [rsi - 0x3b]
435295: mov r8, qword ptr [rsi - 0x2b]
435299: mov r9, qword ptr [rsi - 0x23]
43529d: mov r10, qword ptr [rsi - 0x1b]
4352a1: mov r11, qword ptr [rsi - 0x13]
4352a5: mov rcx, qword ptr [rsi - 0xb]
4352a9: mov edx, dword ptr [rsi - 4]
4352ac: movdqu xmmword ptr [rdi - 0x3b], xmm0
4352b1: mov qword ptr [rdi - 0x2b], r8
4352b5: mov qword ptr [rdi - 0x23], r9
4352b9: mov qword ptr [rdi - 0x1b], r10
4352bd: mov qword ptr [rdi - 0x13], r11
4352c1: mov qword ptr [rdi - 0xb], rcx
4352c5: mov dword ptr [rdi - 4], edx
4352c8: ret 
4352c9: nop dword ptr [rax]
4352d0: movdqu xmm0, xmmword ptr [rsi - 0x33]
4352d5: mov r9, qword ptr [rsi - 0x23]
4352d9: mov r10, qword ptr [rsi - 0x1b]
4352dd: mov r11, qword ptr [rsi - 0x13]
4352e1: mov rcx, qword ptr [rsi - 0xb]
4352e5: mov edx, dword ptr [rsi - 4]
4352e8: movdqu xmmword ptr [rdi - 0x33], xmm0
4352ed: mov qword ptr [rdi - 0x23], r9
4352f1: mov qword ptr [rdi - 0x1b], r10
4352f5: mov qword ptr [rdi - 0x13], r11
4352f9: mov qword ptr [rdi - 0xb], rcx
4352fd: mov dword ptr [rdi - 4], edx
435300: ret 
435301: nop word ptr cs:[rax + rax]
43530c: nop dword ptr [rax]
435310: mov r8, qword ptr [rsi - 0x2b]
435314: mov r9, qword ptr [rsi - 0x23]
435318: mov r10, qword ptr [rsi - 0x1b]
43531c: mov r11, qword ptr [rsi - 0x13]
435320: mov rcx, qword ptr [rsi - 0xb]
435324: mov edx, dword ptr [rsi - 4]
435327: mov qword ptr [rdi - 0x2b], r8
43532b: mov qword ptr [rdi - 0x23], r9
43532f: mov qword ptr [rdi - 0x1b], r10
435333: mov qword ptr [rdi - 0x13], r11
435337: mov qword ptr [rdi - 0xb], rcx
43533b: mov dword ptr [rdi - 4], edx
43533e: ret 
43533f: nop 
435340: mov r9, qword ptr [rsi - 0x23]
435344: mov r10, qword ptr [rsi - 0x1b]
435348: mov r11, qword ptr [rsi - 0x13]
43534c: mov rcx, qword ptr [rsi - 0xb]
435350: mov edx, dword ptr [rsi - 4]
435353: mov qword ptr [rdi - 0x23], r9
435357: mov qword ptr [rdi - 0x1b], r10
43535b: mov qword ptr [rdi - 0x13], r11
43535f: mov qword ptr [rdi - 0xb], rcx
435363: mov dword ptr [rdi - 4], edx
435366: ret 
435367: nop word ptr [rax + rax]
435370: mov r10, qword ptr [rsi - 0x1b]
435374: mov r11, qword ptr [rsi - 0x13]
435378: mov rcx, qword ptr [rsi - 0xb]
43537c: mov edx, dword ptr [rsi - 4]
43537f: mov qword ptr [rdi - 0x1b], r10
435383: mov qword ptr [rdi - 0x13], r11
435387: mov qword ptr [rdi - 0xb], rcx
43538b: mov dword ptr [rdi - 4], edx
43538e: ret 
43538f: nop 
435390: mov r11, qword ptr [rsi - 0x13]
435394: mov rcx, qword ptr [rsi - 0xb]
435398: mov edx, dword ptr [rsi - 4]
43539b: mov qword ptr [rdi - 0x13], r11
43539f: mov qword ptr [rdi - 0xb], rcx
4353a3: mov dword ptr [rdi - 4], edx
4353a6: ret 
4353a7: nop word ptr [rax + rax]
4353b0: mov rcx, qword ptr [rsi - 0xb]
4353b4: mov edx, dword ptr [rsi - 4]
4353b7: mov qword ptr [rdi - 0xb], rcx
4353bb: mov dword ptr [rdi - 4], edx
4353be: ret 
4353bf: nop 
4353c0: mov dx, word ptr [rsi - 3]
4353c4: mov cx, word ptr [rsi - 2]
4353c8: mov word ptr [rdi - 3], dx
4353cc: mov word ptr [rdi - 2], cx
4353d0: ret 
4353d1: nop word ptr cs:[rax + rax]
4353dc: nop dword ptr [rax]
4353e0: movdqu xmm0, xmmword ptr [rsi - 0x4c]
4353e5: movdqu xmm1, xmmword ptr [rsi - 0x3c]
4353ea: mov r8, qword ptr [rsi - 0x2c]
4353ee: mov r9, qword ptr [rsi - 0x24]
4353f2: mov r10, qword ptr [rsi - 0x1c]
4353f6: mov r11, qword ptr [rsi - 0x14]
4353fa: mov rcx, qword ptr [rsi - 0xc]
4353fe: mov edx, dword ptr [rsi - 4]
435401: movdqu xmmword ptr [rdi - 0x4c], xmm0
435406: movdqu xmmword ptr [rdi - 0x3c], xmm1
43540b: mov qword ptr [rdi - 0x2c], r8
43540f: mov qword ptr [rdi - 0x24], r9
435413: mov qword ptr [rdi - 0x1c], r10
435417: mov qword ptr [rdi - 0x14], r11
43541b: mov qword ptr [rdi - 0xc], rcx
43541f: mov dword ptr [rdi - 4], edx
435422: ret 
435423: nop word ptr cs:[rax + rax]
43542e: nop 
435430: movdqu xmm0, xmmword ptr [rsi - 0x44]
435435: movdqu xmm1, xmmword ptr [rsi - 0x34]
43543a: mov r9, qword ptr [rsi - 0x24]
43543e: mov r10, qword ptr [rsi - 0x1c]
435442: mov r11, qword ptr [rsi - 0x14]
435446: mov rcx, qword ptr [rsi - 0xc]
43544a: mov edx, dword ptr [rsi - 4]
43544d: movdqu xmmword ptr [rdi - 0x44], xmm0
435452: movdqu xmmword ptr [rdi - 0x34], xmm1
435457: mov qword ptr [rdi - 0x24], r9
43545b: mov qword ptr [rdi - 0x1c], r10
43545f: mov qword ptr [rdi - 0x14], r11
435463: mov qword ptr [rdi - 0xc], rcx
435467: mov dword ptr [rdi - 4], edx
43546a: ret 
43546b: nop dword ptr [rax + rax]
435470: movdqu xmm0, xmmword ptr [rsi - 0x3c]
435475: mov r8, qword ptr [rsi - 0x2c]
435479: mov r9, qword ptr [rsi - 0x24]
43547d: mov r10, qword ptr [rsi - 0x1c]
435481: mov r11, qword ptr [rsi - 0x14]
435485: mov rcx, qword ptr [rsi - 0xc]
435489: mov edx, dword ptr [rsi - 4]
43548c: movdqu xmmword ptr [rdi - 0x3c], xmm0
435491: mov qword ptr [rdi - 0x2c], r8
435495: mov qword ptr [rdi - 0x24], r9
435499: mov qword ptr [rdi - 0x1c], r10
43549d: mov qword ptr [rdi - 0x14], r11
4354a1: mov qword ptr [rdi - 0xc], rcx
4354a5: mov dword ptr [rdi - 4], edx
4354a8: ret 
4354a9: nop dword ptr [rax]
4354b0: movdqu xmm0, xmmword ptr [rsi - 0x34]
4354b5: mov r9, qword ptr [rsi - 0x24]
4354b9: mov r10, qword ptr [rsi - 0x1c]
4354bd: mov r11, qword ptr [rsi - 0x14]
4354c1: mov rcx, qword ptr [rsi - 0xc]
4354c5: mov edx, dword ptr [rsi - 4]
4354c8: movdqu xmmword ptr [rdi - 0x34], xmm0
4354cd: mov qword ptr [rdi - 0x24], r9
4354d1: mov qword ptr [rdi - 0x1c], r10
4354d5: mov qword ptr [rdi - 0x14], r11
4354d9: mov qword ptr [rdi - 0xc], rcx
4354dd: mov dword ptr [rdi - 4], edx
4354e0: ret 
4354e1: nop word ptr cs:[rax + rax]
4354ec: nop dword ptr [rax]
4354f0: mov r8, qword ptr [rsi - 0x2c]
4354f4: mov r9, qword ptr [rsi - 0x24]
4354f8: mov r10, qword ptr [rsi - 0x1c]
4354fc: mov r11, qword ptr [rsi - 0x14]
435500: mov rcx, qword ptr [rsi - 0xc]
435504: mov edx, dword ptr [rsi - 4]
435507: mov qword ptr [rdi - 0x2c], r8
43550b: mov qword ptr [rdi - 0x24], r9
43550f: mov qword ptr [rdi - 0x1c], r10
435513: mov qword ptr [rdi - 0x14], r11
435517: mov qword ptr [rdi - 0xc], rcx
43551b: mov dword ptr [rdi - 4], edx
43551e: ret 
43551f: nop 
435520: mov r9, qword ptr [rsi - 0x24]
435524: mov r10, qword ptr [rsi - 0x1c]
435528: mov r11, qword ptr [rsi - 0x14]
43552c: mov rcx, qword ptr [rsi - 0xc]
435530: mov edx, dword ptr [rsi - 4]
435533: mov qword ptr [rdi - 0x24], r9
435537: mov qword ptr [rdi - 0x1c], r10
43553b: mov qword ptr [rdi - 0x14], r11
43553f: mov qword ptr [rdi - 0xc], rcx
435543: mov dword ptr [rdi - 4], edx
435546: ret 
435547: nop word ptr [rax + rax]
435550: mov r10, qword ptr [rsi - 0x1c]
435554: mov r11, qword ptr [rsi - 0x14]
435558: mov rcx, qword ptr [rsi - 0xc]
43555c: mov edx, dword ptr [rsi - 4]
43555f: mov qword ptr [rdi - 0x1c], r10
435563: mov qword ptr [rdi - 0x14], r11
435567: mov qword ptr [rdi - 0xc], rcx
43556b: mov dword ptr [rdi - 4], edx
43556e: ret 
43556f: nop 
435570: mov r11, qword ptr [rsi - 0x14]
435574: mov rcx, qword ptr [rsi - 0xc]
435578: mov edx, dword ptr [rsi - 4]
43557b: mov qword ptr [rdi - 0x14], r11
43557f: mov qword ptr [rdi - 0xc], rcx
435583: mov dword ptr [rdi - 4], edx
435586: ret 
435587: nop word ptr [rax + rax]
435590: mov rcx, qword ptr [rsi - 0xc]
435594: mov edx, dword ptr [rsi - 4]
435597: mov qword ptr [rdi - 0xc], rcx
43559b: mov dword ptr [rdi - 4], edx
43559e: ret 
43559f: nop 
4355a0: mov edx, dword ptr [rsi - 4]
4355a3: mov dword ptr [rdi - 4], edx
4355a6: ret 
4355a7: nop word ptr [rax + rax]
4355b0: movdqu xmm0, xmmword ptr [rsi - 0x4d]
4355b5: movdqu xmm1, xmmword ptr [rsi - 0x3d]
4355ba: mov r8, qword ptr [rsi - 0x2d]
4355be: mov r9, qword ptr [rsi - 0x25]
4355c2: mov r10, qword ptr [rsi - 0x1d]
4355c6: mov r11, qword ptr [rsi - 0x15]
4355ca: mov rcx, qword ptr [rsi - 0xd]
4355ce: mov rdx, qword ptr [rsi - 8]
4355d2: movdqu xmmword ptr [rdi - 0x4d], xmm0
4355d7: movdqu xmmword ptr [rdi - 0x3d], xmm1
4355dc: mov qword ptr [rdi - 0x2d], r8
4355e0: mov qword ptr [rdi - 0x25], r9
4355e4: mov qword ptr [rdi - 0x1d], r10
4355e8: mov qword ptr [rdi - 0x15], r11
4355ec: mov qword ptr [rdi - 0xd], rcx
4355f0: mov qword ptr [rdi - 8], rdx
4355f4: ret 
4355f5: nop word ptr cs:[rax + rax]
435600: movdqu xmm0, xmmword ptr [rsi - 0x45]
435605: movdqu xmm1, xmmword ptr [rsi - 0x35]
43560a: mov r9, qword ptr [rsi - 0x25]
43560e: mov r10, qword ptr [rsi - 0x1d]
435612: mov r11, qword ptr [rsi - 0x15]
435616: mov rcx, qword ptr [rsi - 0xd]
43561a: mov rdx, qword ptr [rsi - 8]
43561e: movdqu xmmword ptr [rdi - 0x45], xmm0
435623: movdqu xmmword ptr [rdi - 0x35], xmm1
435628: mov qword ptr [rdi - 0x25], r9
43562c: mov qword ptr [rdi - 0x1d], r10
435630: mov qword ptr [rdi - 0x15], r11
435634: mov qword ptr [rdi - 0xd], rcx
435638: mov qword ptr [rdi - 8], rdx
43563c: ret 
43563d: nop dword ptr [rax]
435640: movdqu xmm0, xmmword ptr [rsi - 0x3d]
435645: mov r8, qword ptr [rsi - 0x2d]
435649: mov r9, qword ptr [rsi - 0x25]
43564d: mov r10, qword ptr [rsi - 0x1d]
435651: mov r11, qword ptr [rsi - 0x15]
435655: mov rcx, qword ptr [rsi - 0xd]
435659: mov rdx, qword ptr [rsi - 8]
43565d: movdqu xmmword ptr [rdi - 0x3d], xmm0
435662: mov qword ptr [rdi - 0x2d], r8
435666: mov qword ptr [rdi - 0x25], r9
43566a: mov qword ptr [rdi - 0x1d], r10
43566e: mov qword ptr [rdi - 0x15], r11
435672: mov qword ptr [rdi - 0xd], rcx
435676: mov qword ptr [rdi - 8], rdx
43567a: ret 
43567b: nop dword ptr [rax + rax]
435680: movdqu xmm0, xmmword ptr [rsi - 0x35]
435685: mov r8, qword ptr [rsi - 0x2d]
435689: mov r9, qword ptr [rsi - 0x25]
43568d: mov r10, qword ptr [rsi - 0x1d]
435691: mov r11, qword ptr [rsi - 0x15]
435695: mov rcx, qword ptr [rsi - 0xd]
435699: mov rdx, qword ptr [rsi - 8]
43569d: movdqu xmmword ptr [rdi - 0x35], xmm0
4356a2: mov qword ptr [rdi - 0x25], r9
4356a6: mov qword ptr [rdi - 0x1d], r10
4356aa: mov qword ptr [rdi - 0x15], r11
4356ae: mov qword ptr [rdi - 0xd], rcx
4356b2: mov qword ptr [rdi - 8], rdx
4356b6: ret 
4356b7: nop word ptr [rax + rax]
4356c0: mov r8, qword ptr [rsi - 0x2d]
4356c4: mov r9, qword ptr [rsi - 0x25]
4356c8: mov r10, qword ptr [rsi - 0x1d]
4356cc: mov r11, qword ptr [rsi - 0x15]
4356d0: mov rcx, qword ptr [rsi - 0xd]
4356d4: mov rdx, qword ptr [rsi - 8]
4356d8: mov qword ptr [rdi - 0x2d], r8
4356dc: mov qword ptr [rdi - 0x25], r9
4356e0: mov qword ptr [rdi - 0x1d], r10
4356e4: mov qword ptr [rdi - 0x15], r11
4356e8: mov qword ptr [rdi - 0xd], rcx
4356ec: mov qword ptr [rdi - 8], rdx
4356f0: ret 
4356f1: nop word ptr cs:[rax + rax]
4356fc: nop dword ptr [rax]
435700: mov r9, qword ptr [rsi - 0x25]
435704: mov r10, qword ptr [rsi - 0x1d]
435708: mov r11, qword ptr [rsi - 0x15]
43570c: mov rcx, qword ptr [rsi - 0xd]
435710: mov rdx, qword ptr [rsi - 8]
435714: mov qword ptr [rdi - 0x25], r9
435718: mov qword ptr [rdi - 0x1d], r10
43571c: mov qword ptr [rdi - 0x15], r11
435720: mov qword ptr [rdi - 0xd], rcx
435724: mov qword ptr [rdi - 8], rdx
435728: ret 
435729: nop dword ptr [rax]
435730: mov r10, qword ptr [rsi - 0x1d]
435734: mov r11, qword ptr [rsi - 0x15]
435738: mov rcx, qword ptr [rsi - 0xd]
43573c: mov rdx, qword ptr [rsi - 8]
435740: mov qword ptr [rdi - 0x1d], r10
435744: mov qword ptr [rdi - 0x15], r11
435748: mov qword ptr [rdi - 0xd], rcx
43574c: mov qword ptr [rdi - 8], rdx
435750: ret 
435751: nop word ptr cs:[rax + rax]
43575c: nop dword ptr [rax]
435760: mov r11, qword ptr [rsi - 0x15]
435764: mov rcx, qword ptr [rsi - 0xd]
435768: mov rdx, qword ptr [rsi - 8]
43576c: mov qword ptr [rdi - 0x15], r11
435770: mov qword ptr [rdi - 0xd], rcx
435774: mov qword ptr [rdi - 8], rdx
435778: ret 
435779: nop dword ptr [rax]
435780: mov rcx, qword ptr [rsi - 0xd]
435784: mov rdx, qword ptr [rsi - 8]
435788: mov qword ptr [rdi - 0xd], rcx
43578c: mov qword ptr [rdi - 8], rdx
435790: ret 
435791: nop word ptr cs:[rax + rax]
43579c: nop dword ptr [rax]
4357a0: mov edx, dword ptr [rsi - 5]
4357a3: mov ecx, dword ptr [rsi - 4]
4357a6: mov dword ptr [rdi - 5], edx
4357a9: mov dword ptr [rdi - 4], ecx
4357ac: ret 
4357ad: nop dword ptr [rax]
4357b0: movdqu xmm0, xmmword ptr [rsi - 0x4e]
4357b5: movdqu xmm1, xmmword ptr [rsi - 0x3e]
4357ba: mov r8, qword ptr [rsi - 0x2e]
4357be: mov r9, qword ptr [rsi - 0x26]
4357c2: mov r10, qword ptr [rsi - 0x1e]
4357c6: mov r11, qword ptr [rsi - 0x16]
4357ca: mov rcx, qword ptr [rsi - 0xe]
4357ce: mov rdx, qword ptr [rsi - 8]
4357d2: movdqu xmmword ptr [rdi - 0x4e], xmm0
4357d7: movdqu xmmword ptr [rdi - 0x3e], xmm1
4357dc: mov qword ptr [rdi - 0x2e], r8
4357e0: mov qword ptr [rdi - 0x26], r9
4357e4: mov qword ptr [rdi - 0x1e], r10
4357e8: mov qword ptr [rdi - 0x16], r11
4357ec: mov qword ptr [rdi - 0xe], rcx
4357f0: mov qword ptr [rdi - 8], rdx
4357f4: ret 
4357f5: nop word ptr cs:[rax + rax]
435800: movdqu xmm0, xmmword ptr [rsi - 0x46]
435805: movdqu xmm1, xmmword ptr [rsi - 0x36]
43580a: mov r9, qword ptr [rsi - 0x26]
43580e: mov r10, qword ptr [rsi - 0x1e]
435812: mov r11, qword ptr [rsi - 0x16]
435816: mov rcx, qword ptr [rsi - 0xe]
43581a: mov rdx, qword ptr [rsi - 8]
43581e: movdqu xmmword ptr [rdi - 0x46], xmm0
435823: movdqu xmmword ptr [rdi - 0x36], xmm1
435828: mov qword ptr [rdi - 0x26], r9
43582c: mov qword ptr [rdi - 0x1e], r10
435830: mov qword ptr [rdi - 0x16], r11
435834: mov qword ptr [rdi - 0xe], rcx
435838: mov qword ptr [rdi - 8], rdx
43583c: ret 
43583d: nop dword ptr [rax]
435840: movdqu xmm0, xmmword ptr [rsi - 0x3e]
435845: mov r8, qword ptr [rsi - 0x2e]
435849: mov r9, qword ptr [rsi - 0x26]
43584d: mov r10, qword ptr [rsi - 0x1e]
435851: mov r11, qword ptr [rsi - 0x16]
435855: mov rcx, qword ptr [rsi - 0xe]
435859: mov rdx, qword ptr [rsi - 8]
43585d: movdqu xmmword ptr [rdi - 0x3e], xmm0
435862: mov qword ptr [rdi - 0x2e], r8
435866: mov qword ptr [rdi - 0x26], r9
43586a: mov qword ptr [rdi - 0x1e], r10
43586e: mov qword ptr [rdi - 0x16], r11
435872: mov qword ptr [rdi - 0xe], rcx
435876: mov qword ptr [rdi - 8], rdx
43587a: ret 
43587b: nop dword ptr [rax + rax]
435880: movdqu xmm0, xmmword ptr [rsi - 0x36]
435885: mov r9, qword ptr [rsi - 0x26]
435889: mov r10, qword ptr [rsi - 0x1e]
43588d: mov r11, qword ptr [rsi - 0x16]
435891: mov rcx, qword ptr [rsi - 0xe]
435895: mov rdx, qword ptr [rsi - 8]
435899: movdqu xmmword ptr [rdi - 0x36], xmm0
43589e: mov qword ptr [rdi - 0x26], r9
4358a2: mov qword ptr [rdi - 0x1e], r10
4358a6: mov qword ptr [rdi - 0x16], r11
4358aa: mov qword ptr [rdi - 0xe], rcx
4358ae: mov qword ptr [rdi - 8], rdx
4358b2: ret 
4358b3: nop word ptr cs:[rax + rax]
4358be: nop 
4358c0: mov r8, qword ptr [rsi - 0x2e]
4358c4: mov r9, qword ptr [rsi - 0x26]
4358c8: mov r10, qword ptr [rsi - 0x1e]
4358cc: mov r11, qword ptr [rsi - 0x16]
4358d0: mov rcx, qword ptr [rsi - 0xe]
4358d4: mov rdx, qword ptr [rsi - 8]
4358d8: mov qword ptr [rdi - 0x2e], r8
4358dc: mov qword ptr [rdi - 0x26], r9
4358e0: mov qword ptr [rdi - 0x1e], r10
4358e4: mov qword ptr [rdi - 0x16], r11
4358e8: mov qword ptr [rdi - 0xe], rcx
4358ec: mov qword ptr [rdi - 8], rdx
4358f0: ret 
4358f1: nop word ptr cs:[rax + rax]
4358fc: nop dword ptr [rax]
435900: mov r9, qword ptr [rsi - 0x26]
435904: mov r10, qword ptr [rsi - 0x1e]
435908: mov r11, qword ptr [rsi - 0x16]
43590c: mov rcx, qword ptr [rsi - 0xe]
435910: mov rdx, qword ptr [rsi - 8]
435914: mov qword ptr [rdi - 0x26], r9
435918: mov qword ptr [rdi - 0x1e], r10
43591c: mov qword ptr [rdi - 0x16], r11
435920: mov qword ptr [rdi - 0xe], rcx
435924: mov qword ptr [rdi - 8], rdx
435928: ret 
435929: nop dword ptr [rax]
435930: mov r10, qword ptr [rsi - 0x1e]
435934: mov r11, qword ptr [rsi - 0x16]
435938: mov rcx, qword ptr [rsi - 0xe]
43593c: mov rdx, qword ptr [rsi - 8]
435940: mov qword ptr [rdi - 0x1e], r10
435944: mov qword ptr [rdi - 0x16], r11
435948: mov qword ptr [rdi - 0xe], rcx
43594c: mov qword ptr [rdi - 8], rdx
435950: ret 
435951: nop word ptr cs:[rax + rax]
43595c: nop dword ptr [rax]
435960: mov r11, qword ptr [rsi - 0x16]
435964: mov rcx, qword ptr [rsi - 0xe]
435968: mov rdx, qword ptr [rsi - 8]
43596c: mov qword ptr [rdi - 0x16], r11
435970: mov qword ptr [rdi - 0xe], rcx
435974: mov qword ptr [rdi - 8], rdx
435978: ret 
435979: nop dword ptr [rax]
435980: mov rcx, qword ptr [rsi - 0xe]
435984: mov rdx, qword ptr [rsi - 8]
435988: mov qword ptr [rdi - 0xe], rcx
43598c: mov qword ptr [rdi - 8], rdx
435990: ret 
435991: nop word ptr cs:[rax + rax]
43599c: nop dword ptr [rax]
4359a0: mov edx, dword ptr [rsi - 6]
4359a3: mov ecx, dword ptr [rsi - 4]
4359a6: mov dword ptr [rdi - 6], edx
4359a9: mov dword ptr [rdi - 4], ecx
4359ac: ret 
4359ad: nop dword ptr [rax]
4359b0: movdqu xmm0, xmmword ptr [rsi - 0x4f]
4359b5: movdqu xmm1, xmmword ptr [rsi - 0x3f]
4359ba: mov r8, qword ptr [rsi - 0x2f]
4359be: mov r9, qword ptr [rsi - 0x27]
4359c2: mov r10, qword ptr [rsi - 0x1f]
4359c6: mov r11, qword ptr [rsi - 0x17]
4359ca: mov rcx, qword ptr [rsi - 0xf]
4359ce: mov rdx, qword ptr [rsi - 8]
4359d2: movdqu xmmword ptr [rdi - 0x4f], xmm0
4359d7: movdqu xmmword ptr [rdi - 0x3f], xmm1
4359dc: mov qword ptr [rdi - 0x2f], r8
4359e0: mov qword ptr [rdi - 0x27], r9
4359e4: mov qword ptr [rdi - 0x1f], r10
4359e8: mov qword ptr [rdi - 0x17], r11
4359ec: mov qword ptr [rdi - 0xf], rcx
4359f0: mov qword ptr [rdi - 8], rdx
4359f4: ret 
4359f5: nop word ptr cs:[rax + rax]
435a00: movdqu xmm0, xmmword ptr [rsi - 0x47]
435a05: movdqu xmm1, xmmword ptr [rsi - 0x37]
435a0a: mov r9, qword ptr [rsi - 0x27]
435a0e: mov r10, qword ptr [rsi - 0x1f]
435a12: mov r11, qword ptr [rsi - 0x17]
435a16: mov rcx, qword ptr [rsi - 0xf]
435a1a: mov rdx, qword ptr [rsi - 8]
435a1e: movdqu xmmword ptr [rdi - 0x47], xmm0
435a23: movdqu xmmword ptr [rdi - 0x37], xmm1
435a28: mov qword ptr [rdi - 0x27], r9
435a2c: mov qword ptr [rdi - 0x1f], r10
435a30: mov qword ptr [rdi - 0x17], r11
435a34: mov qword ptr [rdi - 0xf], rcx
435a38: mov qword ptr [rdi - 8], rdx
435a3c: ret 
435a3d: nop dword ptr [rax]
435a40: movdqu xmm0, xmmword ptr [rsi - 0x3f]
435a45: mov r8, qword ptr [rsi - 0x2f]
435a49: mov r9, qword ptr [rsi - 0x27]
435a4d: mov r10, qword ptr [rsi - 0x1f]
435a51: mov r11, qword ptr [rsi - 0x17]
435a55: mov rcx, qword ptr [rsi - 0xf]
435a59: mov rdx, qword ptr [rsi - 8]
435a5d: movdqu xmmword ptr [rdi - 0x3f], xmm0
435a62: mov qword ptr [rdi - 0x2f], r8
435a66: mov qword ptr [rdi - 0x27], r9
435a6a: mov qword ptr [rdi - 0x1f], r10
435a6e: mov qword ptr [rdi - 0x17], r11
435a72: mov qword ptr [rdi - 0xf], rcx
435a76: mov qword ptr [rdi - 8], rdx
435a7a: ret 
435a7b: nop dword ptr [rax + rax]
435a80: movdqu xmm0, xmmword ptr [rsi - 0x37]
435a85: mov r9, qword ptr [rsi - 0x27]
435a89: mov r10, qword ptr [rsi - 0x1f]
435a8d: mov r11, qword ptr [rsi - 0x17]
435a91: mov rcx, qword ptr [rsi - 0xf]
435a95: mov rdx, qword ptr [rsi - 8]
435a99: movdqu xmmword ptr [rdi - 0x37], xmm0
435a9e: mov qword ptr [rdi - 0x27], r9
435aa2: mov qword ptr [rdi - 0x1f], r10
435aa6: mov qword ptr [rdi - 0x17], r11
435aaa: mov qword ptr [rdi - 0xf], rcx
435aae: mov qword ptr [rdi - 8], rdx
435ab2: ret 
435ab3: nop word ptr cs:[rax + rax]
435abe: nop 
435ac0: mov r8, qword ptr [rsi - 0x2f]
435ac4: mov r9, qword ptr [rsi - 0x27]
435ac8: mov r10, qword ptr [rsi - 0x1f]
435acc: mov r11, qword ptr [rsi - 0x17]
435ad0: mov rcx, qword ptr [rsi - 0xf]
435ad4: mov rdx, qword ptr [rsi - 8]
435ad8: mov qword ptr [rdi - 0x2f], r8
435adc: mov qword ptr [rdi - 0x27], r9
435ae0: mov qword ptr [rdi - 0x1f], r10
435ae4: mov qword ptr [rdi - 0x17], r11
435ae8: mov qword ptr [rdi - 0xf], rcx
435aec: mov qword ptr [rdi - 8], rdx
435af0: ret 
435af1: nop word ptr cs:[rax + rax]
435afc: nop dword ptr [rax]
435b00: mov r9, qword ptr [rsi - 0x27]
435b04: mov r10, qword ptr [rsi - 0x1f]
435b08: mov r11, qword ptr [rsi - 0x17]
435b0c: mov rcx, qword ptr [rsi - 0xf]
435b10: mov rdx, qword ptr [rsi - 8]
435b14: mov qword ptr [rdi - 0x27], r9
435b18: mov qword ptr [rdi - 0x1f], r10
435b1c: mov qword ptr [rdi - 0x17], r11
435b20: mov qword ptr [rdi - 0xf], rcx
435b24: mov qword ptr [rdi - 8], rdx
435b28: ret 
435b29: nop dword ptr [rax]
435b30: mov r10, qword ptr [rsi - 0x1f]
435b34: mov r11, qword ptr [rsi - 0x17]
435b38: mov rcx, qword ptr [rsi - 0xf]
435b3c: mov rdx, qword ptr [rsi - 8]
435b40: mov qword ptr [rdi - 0x1f], r10
435b44: mov qword ptr [rdi - 0x17], r11
435b48: mov qword ptr [rdi - 0xf], rcx
435b4c: mov qword ptr [rdi - 8], rdx
435b50: ret 
435b51: nop word ptr cs:[rax + rax]
435b5c: nop dword ptr [rax]
435b60: mov r11, qword ptr [rsi - 0x17]
435b64: mov rcx, qword ptr [rsi - 0xf]
435b68: mov rdx, qword ptr [rsi - 8]
435b6c: mov qword ptr [rdi - 0x17], r11
435b70: mov qword ptr [rdi - 0xf], rcx
435b74: mov qword ptr [rdi - 8], rdx
435b78: ret 
435b79: nop dword ptr [rax]
435b80: mov rcx, qword ptr [rsi - 0xf]
435b84: mov rdx, qword ptr [rsi - 8]
435b88: mov qword ptr [rdi - 0xf], rcx
435b8c: mov qword ptr [rdi - 8], rdx
435b90: ret 
435b91: nop word ptr cs:[rax + rax]
435b9c: nop dword ptr [rax]
435ba0: mov edx, dword ptr [rsi - 7]
435ba3: mov ecx, dword ptr [rsi - 4]
435ba6: mov dword ptr [rdi - 7], edx
435ba9: mov dword ptr [rdi - 4], ecx
435bac: ret 
435bad: nop dword ptr [rax]
435bb0: movdqu xmm1, xmmword ptr [rsi]
435bb4: lea rsi, [rsi + 0x10]
435bb8: movdqu xmmword ptr [r8], xmm0
435bbd: movntdq xmmword ptr [rdi], xmm1
435bc1: lea rdi, [rdi + 0x10]
435bc5: lea rdx, [rdx - 0x90]
435bcc: movdqu xmm0, xmmword ptr [rsi]
435bd0: movdqu xmm1, xmmword ptr [rsi + 0x10]
435bd5: movdqu xmm2, xmmword ptr [rsi + 0x20]
435bda: movdqu xmm3, xmmword ptr [rsi + 0x30]
435bdf: movdqu xmm4, xmmword ptr [rsi + 0x40]
435be4: movdqu xmm5, xmmword ptr [rsi + 0x50]
435be9: movdqu xmm6, xmmword ptr [rsi + 0x60]
435bee: movdqu xmm7, xmmword ptr [rsi + 0x70]
435bf3: lea rsi, [rsi + 0x80]
435bfa: sub rdx, 0x80
435c01: movntdq xmmword ptr [rdi], xmm0
435c05: movntdq xmmword ptr [rdi + 0x10], xmm1
435c0a: movntdq xmmword ptr [rdi + 0x20], xmm2
435c0f: movntdq xmmword ptr [rdi + 0x30], xmm3
435c14: movntdq xmmword ptr [rdi + 0x40], xmm4
435c19: movntdq xmmword ptr [rdi + 0x50], xmm5
435c1e: movntdq xmmword ptr [rdi + 0x60], xmm6
435c23: movntdq xmmword ptr [rdi + 0x70], xmm7
435c28: lea rdi, [rdi + 0x80]
435c2f: jae 0x435bcc
435c31: cmp rdx, -0x40
435c35: lea rdx, [rdx + 0x80]
435c3c: jl 0x435c70
435c3e: movdqu xmm0, xmmword ptr [rsi]
435c42: movdqu xmm1, xmmword ptr [rsi + 0x10]
435c47: movdqu xmm2, xmmword ptr [rsi + 0x20]
435c4c: movdqu xmm3, xmmword ptr [rsi + 0x30]
435c51: lea rsi, [rsi + 0x40]
435c55: movntdq xmmword ptr [rdi], xmm0
435c59: movntdq xmmword ptr [rdi + 0x10], xmm1
435c5e: movntdq xmmword ptr [rdi + 0x20], xmm2
435c63: movntdq xmmword ptr [rdi + 0x30], xmm3
435c68: lea rdi, [rdi + 0x40]
435c6c: sub rdx, 0x40
435c70: add rsi, rdx
435c73: add rdi, rdx
435c76: sfence 
435c79: lea r11, [rip + 0x618c0]
435c80: movsxd rdx, dword ptr [r11 + rdx*4]
435c84: lea rdx, [r11 + rdx]
435c88: notrack jmp rdx
435c8b: ud2 
435c8d: nop dword ptr [rax]
435c90: movdqu xmm1, xmmword ptr [rsi - 0x10]
435c95: lea rsi, [rsi - 0x10]
435c99: movdqu xmmword ptr [r8], xmm0
435c9e: movdqa xmmword ptr [rdi - 0x10], xmm1
435ca3: lea rdi, [rdi - 0x10]
435ca7: lea rdx, [rdx - 0x90]
435cae: movdqu xmm0, xmmword ptr [rsi - 0x10]
435cb3: movdqu xmm1, xmmword ptr [rsi - 0x20]
435cb8: movdqu xmm2, xmmword ptr [rsi - 0x30]
435cbd: movdqu xmm3, xmmword ptr [rsi - 0x40]
435cc2: movdqu xmm4, xmmword ptr [rsi - 0x50]
435cc7: movdqu xmm5, xmmword ptr [rsi - 0x60]
435ccc: movdqu xmm6, xmmword ptr [rsi - 0x70]
435cd1: movdqu xmm7, xmmword ptr [rsi - 0x80]
435cd6: lea rsi, [rsi - 0x80]
435cda: sub rdx, 0x80
435ce1: movntdq xmmword ptr [rdi - 0x10], xmm0
435ce6: movntdq xmmword ptr [rdi - 0x20], xmm1
435ceb: movntdq xmmword ptr [rdi - 0x30], xmm2
435cf0: movntdq xmmword ptr [rdi - 0x40], xmm3
435cf5: movntdq xmmword ptr [rdi - 0x50], xmm4
435cfa: movntdq xmmword ptr [rdi - 0x60], xmm5
435cff: movntdq xmmword ptr [rdi - 0x70], xmm6
435d04: movntdq xmmword ptr [rdi - 0x80], xmm7
435d09: lea rdi, [rdi - 0x80]
435d0d: jae 0x435cae
435d0f: cmp rdx, -0x40
435d13: lea rdx, [rdx + 0x80]
435d1a: jl 0x435d50
435d1c: movdqu xmm0, xmmword ptr [rsi - 0x10]
435d21: movdqu xmm1, xmmword ptr [rsi - 0x20]
435d26: movdqu xmm2, xmmword ptr [rsi - 0x30]
435d2b: movdqu xmm3, xmmword ptr [rsi - 0x40]
435d30: lea rsi, [rsi - 0x40]
435d34: movntdq xmmword ptr [rdi - 0x10], xmm0
435d39: movntdq xmmword ptr [rdi - 0x20], xmm1
435d3e: movntdq xmmword ptr [rdi - 0x30], xmm2
435d43: movntdq xmmword ptr [rdi - 0x40], xmm3
435d48: lea rdi, [rdi - 0x40]
435d4c: sub rdx, 0x40
435d50: sfence 
435d53: lea r11, [rip + 0x617e6]
435d5a: movsxd rdx, dword ptr [r11 + rdx*4]
435d5e: lea rdx, [r11 + rdx]
435d62: notrack jmp rdx
435d65: ud2 
435d67: nop word ptr [rax + rax]
435d70: endbr64 
435d74: cmp rcx, rdx
435d77: jb 0x454570
435d7d: nop dword ptr [rax]
435d80: endbr64 
435d84: mov rax, rdi
435d87: cmp rdi, rsi
435d8a: jb 0x435d9a
435d8c: je 0x437818
435d92: cmp rdx, 0x4f
435d96: jbe 0x435d9a
435d98: jmp 0x435e10
435d9a: cmp rdx, 0x4f
435d9e: lea r11, [rip + 0x6195b]
435da5: ja 0x435dc0
435da7: movsxd r9, dword ptr [r11 + rdx*4]
435dab: add rsi, rdx
435dae: add rdi, rdx
435db1: add r9, r11
435db4: notrack jmp r9
435db8: ud2 
435dba: nop word ptr [rax + rax]
435dc0: movdqu xmm0, xmmword ptr [rsi]
435dc4: mov rcx, rdi
435dc7: and rdi, 0xfffffffffffffff0
435dcb: add rdi, 0x10
435dcf: mov r8, rcx
435dd2: sub rcx, rdi
435dd5: add rdx, rcx
435dd8: sub rsi, rcx
435ddb: mov rcx, qword ptr [rip + 0x8b276]
435de2: cmp rdx, rcx
435de5: mov r9, rsi
435de8: ja 0x438590
435dee: and r9, 0xf
435df2: je 0x435e70
435df4: mov rcx, qword ptr [rip + 0x8b27d]
435dfb: lea r11, [rip + 0x61a3e]
435e02: movsxd r9, dword ptr [r11 + r9*4]
435e06: lea r9, [r11 + r9]
435e0a: notrack jmp r9
435e0e: ud2 
435e10: movdqu xmm0, xmmword ptr [rsi + rdx - 0x10]
435e16: add rsi, rdx
435e19: lea r8, [rdi + rdx - 0x10]
435e1e: add rdi, rdx
435e21: mov rcx, rdi
435e24: and rcx, 0xf
435e28: xor rdi, rcx
435e2b: sub rdx, rcx
435e2e: sub rsi, rcx
435e31: mov rcx, qword ptr [rip + 0x8b220]
435e38: cmp rdx, rcx
435e3b: mov r9, rsi
435e3e: ja 0x438750
435e44: and r9, 0xf
435e48: je 0x4360a0
435e4e: mov rcx, qword ptr [rip + 0x8b223]
435e55: lea r11, [rip + 0x61a24]
435e5c: movsxd r9, dword ptr [r11 + r9*4]
435e60: lea r9, [r11 + r9]
435e64: notrack jmp r9
435e68: ud2 
435e6a: nop word ptr [rax + rax]
435e70: sub rdx, 0x10
435e74: movdqa xmm1, xmmword ptr [rsi]
435e78: add rsi, 0x10
435e7c: movdqa xmmword ptr [rdi], xmm1
435e80: add rdi, 0x10
435e84: cmp rdx, 0x80
435e8b: movdqu xmmword ptr [r8], xmm0
435e90: ja 0x435ee0
435e92: cmp rdx, 0x40
435e96: jb 0x435ec2
435e98: movaps xmm4, xmmword ptr [rsi]
435e9b: movaps xmm1, xmmword ptr [rsi + 0x10]
435e9f: movaps xmm2, xmmword ptr [rsi + 0x20]
435ea3: movaps xmm3, xmmword ptr [rsi + 0x30]
435ea7: movaps xmmword ptr [rdi], xmm4
435eaa: movaps xmmword ptr [rdi + 0x10], xmm1
435eae: movaps xmmword ptr [rdi + 0x20], xmm2
435eb2: movaps xmmword ptr [rdi + 0x30], xmm3
435eb6: sub rdx, 0x40
435eba: add rsi, 0x40
435ebe: add rdi, 0x40
435ec2: add rsi, rdx
435ec5: add rdi, rdx
435ec8: lea r11, [rip + 0x61831]
435ecf: movsxd rdx, dword ptr [r11 + rdx*4]
435ed3: lea rdx, [r11 + rdx]
435ed7: notrack jmp rdx
435eda: ud2 
435edc: nop dword ptr [rax]
435ee0: cmp rdx, qword ptr [rip + 0x8b191]
435ee7: lea rdx, [rdx - 0x80]
435eeb: jae 0x435fb0
435ef1: movdqa xmm4, xmmword ptr [rsi]
435ef5: movaps xmm1, xmmword ptr [rsi + 0x10]
435ef9: movaps xmm2, xmmword ptr [rsi + 0x20]
435efd: movaps xmm3, xmmword ptr [rsi + 0x30]
435f01: movdqa xmmword ptr [rdi], xmm4
435f05: movaps xmmword ptr [rdi + 0x10], xmm1
435f09: movaps xmmword ptr [rdi + 0x20], xmm2
435f0d: movaps xmmword ptr [rdi + 0x30], xmm3
435f11: sub rdx, 0x80
435f18: movaps xmm4, xmmword ptr [rsi + 0x40]
435f1c: movaps xmm5, xmmword ptr [rsi + 0x50]
435f20: movaps xmm6, xmmword ptr [rsi + 0x60]
435f24: movaps xmm7, xmmword ptr [rsi + 0x70]
435f28: lea rsi, [rsi + 0x80]
435f2f: movaps xmmword ptr [rdi + 0x40], xmm4
435f33: movaps xmmword ptr [rdi + 0x50], xmm5
435f37: movaps xmmword ptr [rdi + 0x60], xmm6
435f3b: movaps xmmword ptr [rdi + 0x70], xmm7
435f3f: lea rdi, [rdi + 0x80]
435f46: jae 0x435ef1
435f48: cmp rdx, -0x40
435f4c: lea rdx, [rdx + 0x80]
435f53: jl 0x435f87
435f55: movdqa xmm4, xmmword ptr [rsi]
435f59: sub rdx, 0x40
435f5d: movdqa xmm1, xmmword ptr [rsi + 0x10]
435f62: movdqa xmmword ptr [rdi], xmm4
435f66: movdqa xmmword ptr [rdi + 0x10], xmm1
435f6b: movdqa xmm4, xmmword ptr [rsi + 0x20]
435f70: movdqa xmm1, xmmword ptr [rsi + 0x30]
435f75: add rsi, 0x40
435f79: movdqa xmmword ptr [rdi + 0x20], xmm4
435f7e: movdqa xmmword ptr [rdi + 0x30], xmm1
435f83: add rdi, 0x40
435f87: add rsi, rdx
435f8a: add rdi, rdx
435f8d: lea r11, [rip + 0x6176c]
435f94: movsxd rdx, dword ptr [r11 + rdx*4]
435f98: lea rdx, [r11 + rdx]
435f9c: notrack jmp rdx
435f9f: ud2 
435fa1: nop word ptr cs:[rax + rax]
435fac: nop dword ptr [rax]
435fb0: prefetcht0 byte ptr [rsi + 0x1c0]
435fb7: prefetcht0 byte ptr [rsi + 0x280]
435fbe: movdqa xmm0, xmmword ptr [rsi]
435fc2: movdqa xmm1, xmmword ptr [rsi + 0x10]
435fc7: movdqa xmm2, xmmword ptr [rsi + 0x20]
435fcc: movdqa xmm3, xmmword ptr [rsi + 0x30]
435fd1: movdqa xmm4, xmmword ptr [rsi + 0x40]
435fd6: movdqa xmm5, xmmword ptr [rsi + 0x50]
435fdb: movdqa xmm6, xmmword ptr [rsi + 0x60]
435fe0: movdqa xmm7, xmmword ptr [rsi + 0x70]
435fe5: lea rsi, [rsi + 0x80]
435fec: sub rdx, 0x80
435ff3: movdqa xmmword ptr [rdi], xmm0
435ff7: movdqa xmmword ptr [rdi + 0x10], xmm1
435ffc: movdqa xmmword ptr [rdi + 0x20], xmm2
436001: movdqa xmmword ptr [rdi + 0x30], xmm3
436006: movdqa xmmword ptr [rdi + 0x40], xmm4
43600b: movdqa xmmword ptr [rdi + 0x50], xmm5
436010: movdqa xmmword ptr [rdi + 0x60], xmm6
436015: movdqa xmmword ptr [rdi + 0x70], xmm7
43601a: lea rdi, [rdi + 0x80]
436021: jae 0x435fb0
436023: cmp rdx, -0x40
436027: lea rdx, [rdx + 0x80]
43602e: jl 0x436062
436030: movdqa xmm0, xmmword ptr [rsi]
436034: sub rdx, 0x40
436038: movdqa xmm1, xmmword ptr [rsi + 0x10]
43603d: movdqa xmmword ptr [rdi], xmm0
436041: movdqa xmmword ptr [rdi + 0x10], xmm1
436046: movdqa xmm0, xmmword ptr [rsi + 0x20]
43604b: movdqa xmm1, xmmword ptr [rsi + 0x30]
436050: add rsi, 0x40
436054: movdqa xmmword ptr [rdi + 0x20], xmm0
436059: movdqa xmmword ptr [rdi + 0x30], xmm1
43605e: add rdi, 0x40
436062: cmp rdx, 0x20
436066: jb 0x436086
436068: movdqa xmm0, xmmword ptr [rsi]
43606c: sub rdx, 0x20
436070: movdqa xmm1, xmmword ptr [rsi + 0x10]
436075: add rsi, 0x20
436079: movdqa xmmword ptr [rdi], xmm0
43607d: movdqa xmmword ptr [rdi + 0x10], xmm1
436082: add rdi, 0x20
436086: add rdi, rdx
436089: add rsi, rdx
43608c: lea r11, [rip + 0x6166d]
436093: movsxd rdx, dword ptr [r11 + rdx*4]
436097: lea rdx, [r11 + rdx]
43609b: notrack jmp rdx
43609e: ud2 
4360a0: sub rdx, 0x10
4360a4: movdqa xmm1, xmmword ptr [rsi - 0x10]
4360a9: sub rsi, 0x10
4360ad: movdqa xmmword ptr [rdi - 0x10], xmm1
4360b2: sub rdi, 0x10
4360b6: cmp rdx, 0x80
4360bd: movdqu xmmword ptr [r8], xmm0
4360c2: ja 0x436110
4360c4: cmp rdx, 0x40
4360c8: jb 0x4360f6
4360ca: movaps xmm0, xmmword ptr [rsi - 0x10]
4360ce: movaps xmm1, xmmword ptr [rsi - 0x20]
4360d2: movaps xmm2, xmmword ptr [rsi - 0x30]
4360d6: movaps xmm3, xmmword ptr [rsi - 0x40]
4360da: movaps xmmword ptr [rdi - 0x10], xmm0
4360de: movaps xmmword ptr [rdi - 0x20], xmm1
4360e2: movaps xmmword ptr [rdi - 0x30], xmm2
4360e6: movaps xmmword ptr [rdi - 0x40], xmm3
4360ea: sub rdx, 0x40
4360ee: sub rsi, 0x40
4360f2: sub rdi, 0x40
4360f6: lea r11, [rip + 0x61603]
4360fd: movsxd rdx, dword ptr [r11 + rdx*4]
436101: lea rdx, [r11 + rdx]
436105: notrack jmp rdx
436108: ud2 
43610a: nop word ptr [rax + rax]
436110: cmp rdx, qword ptr [rip + 0x8af61]
436117: lea rdx, [rdx - 0x80]
43611b: jae 0x4361d0
436121: movdqa xmm0, xmmword ptr [rsi - 0x10]
436126: movaps xmm1, xmmword ptr [rsi - 0x20]
43612a: movaps xmm2, xmmword ptr [rsi - 0x30]
43612e: movaps xmm3, xmmword ptr [rsi - 0x40]
436132: movdqa xmmword ptr [rdi - 0x10], xmm0
436137: movaps xmmword ptr [rdi - 0x20], xmm1
43613b: movaps xmmword ptr [rdi - 0x30], xmm2
43613f: movaps xmmword ptr [rdi - 0x40], xmm3
436143: sub rdx, 0x80
43614a: movaps xmm4, xmmword ptr [rsi - 0x50]
43614e: movaps xmm5, xmmword ptr [rsi - 0x60]
436152: movaps xmm6, xmmword ptr [rsi - 0x70]
436156: movaps xmm7, xmmword ptr [rsi - 0x80]
43615a: lea rsi, [rsi - 0x80]
43615e: movaps xmmword ptr [rdi - 0x50], xmm4
436162: movaps xmmword ptr [rdi - 0x60], xmm5
436166: movaps xmmword ptr [rdi - 0x70], xmm6
43616a: movaps xmmword ptr [rdi - 0x80], xmm7
43616e: lea rdi, [rdi - 0x80]
436172: jae 0x436121
436174: cmp rdx, -0x40
436178: lea rdx, [rdx + 0x80]
43617f: jl 0x4361b5
436181: movdqa xmm0, xmmword ptr [rsi - 0x10]
436186: sub rdx, 0x40
43618a: movdqa xmm1, xmmword ptr [rsi - 0x20]
43618f: movdqa xmmword ptr [rdi - 0x10], xmm0
436194: movdqa xmmword ptr [rdi - 0x20], xmm1
436199: movdqa xmm0, xmmword ptr [rsi - 0x30]
43619e: movdqa xmm1, xmmword ptr [rsi - 0x40]
4361a3: sub rsi, 0x40
4361a7: movdqa xmmword ptr [rdi - 0x30], xmm0
4361ac: movdqa xmmword ptr [rdi - 0x40], xmm1
4361b1: sub rdi, 0x40
4361b5: lea r11, [rip + 0x61544]
4361bc: movsxd rdx, dword ptr [r11 + rdx*4]
4361c0: lea rdx, [r11 + rdx]
4361c4: notrack jmp rdx
4361c7: ud2 
4361c9: nop dword ptr [rax]
4361d0: prefetcht0 byte ptr [rsi - 0x1c0]
4361d7: prefetcht0 byte ptr [rsi - 0x280]
4361de: movdqa xmm0, xmmword ptr [rsi - 0x10]
4361e3: movdqa xmm1, xmmword ptr [rsi - 0x20]
4361e8: movdqa xmm2, xmmword ptr [rsi - 0x30]
4361ed: movdqa xmm3, xmmword ptr [rsi - 0x40]
4361f2: movdqa xmm4, xmmword ptr [rsi - 0x50]
4361f7: movdqa xmm5, xmmword ptr [rsi - 0x60]
4361fc: movdqa xmm6, xmmword ptr [rsi - 0x70]
436201: movdqa xmm7, xmmword ptr [rsi - 0x80]
436206: lea rsi, [rsi - 0x80]
43620a: sub rdx, 0x80
436211: movdqa xmmword ptr [rdi - 0x10], xmm0
436216: movdqa xmmword ptr [rdi - 0x20], xmm1
43621b: movdqa xmmword ptr [rdi - 0x30], xmm2
436220: movdqa xmmword ptr [rdi - 0x40], xmm3
436225: movdqa xmmword ptr [rdi - 0x50], xmm4
43622a: movdqa xmmword ptr [rdi - 0x60], xmm5
43622f: movdqa xmmword ptr [rdi - 0x70], xmm6
436234: movdqa xmmword ptr [rdi - 0x80], xmm7
436239: lea rdi, [rdi - 0x80]
43623d: jae 0x4361d0
43623f: cmp rdx, -0x40
436243: lea rdx, [rdx + 0x80]
43624a: jl 0x436280
43624c: movdqa xmm0, xmmword ptr [rsi - 0x10]
436251: sub rdx, 0x40
436255: movdqa xmm1, xmmword ptr [rsi - 0x20]
43625a: movdqa xmmword ptr [rdi - 0x10], xmm0
43625f: movdqa xmmword ptr [rdi - 0x20], xmm1
436264: movdqa xmm0, xmmword ptr [rsi - 0x30]
436269: movdqa xmm1, xmmword ptr [rsi - 0x40]
43626e: sub rsi, 0x40
436272: movdqa xmmword ptr [rdi - 0x30], xmm0
436277: movdqa xmmword ptr [rdi - 0x40], xmm1
43627c: sub rdi, 0x40
436280: cmp rdx, 0x20
436284: jb 0x4362a6
436286: movdqa xmm0, xmmword ptr [rsi - 0x10]
43628b: sub rdx, 0x20
43628f: movdqa xmm1, xmmword ptr [rsi - 0x20]
436294: sub rsi, 0x20
436298: movdqa xmmword ptr [rdi - 0x10], xmm0
43629d: movdqa xmmword ptr [rdi - 0x20], xmm1
4362a2: sub rdi, 0x20
4362a6: lea r11, [rip + 0x61453]
4362ad: movsxd rdx, dword ptr [r11 + rdx*4]
4362b1: lea rdx, [r11 + rdx]
4362b5: notrack jmp rdx
4362b8: ud2 
4362ba: nop word ptr [rax + rax]
4362c0: lea r9, [r9 + 0x28]
4362c7: cmp rdx, rcx
4362ca: movaps xmm1, xmmword ptr [rsi - 1]
4362ce: jb 0x4362d7
4362d0: lea r9, [r9 - 7]
4362d7: lea rdx, [rdx - 0x40]
4362db: notrack jmp r9
4362df: ud2 
4362e1: prefetchnta byte ptr [rsi + 0x1c0]
4362e8: sub rdx, 0x40
4362ec: movaps xmm2, xmmword ptr [rsi + 0xf]
4362f0: movaps xmm3, xmmword ptr [rsi + 0x1f]
4362f4: movaps xmm4, xmmword ptr [rsi + 0x2f]
4362f8: movaps xmm5, xmmword ptr [rsi + 0x3f]
4362fc: movdqa xmm6, xmm5
436300: palignr xmm5, xmm4, 1
436306: lea rsi, [rsi + 0x40]
43630a: palignr xmm4, xmm3, 1
436310: palignr xmm3, xmm2, 1
436316: lea rdi, [rdi + 0x40]
43631a: palignr xmm2, xmm1, 1
436320: movdqa xmm1, xmm6
436324: movdqa xmmword ptr [rdi - 0x40], xmm2
436329: movaps xmmword ptr [rdi - 0x30], xmm3
43632d: jb 0x43633d
43632f: movaps xmmword ptr [rdi - 0x20], xmm4
436333: movaps xmmword ptr [rdi - 0x10], xmm5
436337: notrack jmp r9
43633b: ud2 
43633d: movaps xmmword ptr [rdi - 0x20], xmm4
436341: lea rdx, [rdx + 0x40]
436345: movaps xmmword ptr [rdi - 0x10], xmm5
436349: add rdi, rdx
43634c: movdqu xmmword ptr [r8], xmm0
436351: add rsi, rdx
436354: lea r11, [rip + 0x613a5]
43635b: movsxd rdx, dword ptr [r11 + rdx*4]
43635f: lea rdx, [r11 + rdx]
436363: notrack jmp rdx
436366: ud2 
436368: nop dword ptr [rax + rax]
436370: lea r9, [r9 + 0x28]
436377: cmp rdx, rcx
43637a: movaps xmm1, xmmword ptr [rsi - 1]
43637e: jb 0x436387
436380: lea r9, [r9 - 7]
436387: lea rdx, [rdx - 0x40]
43638b: notrack jmp r9
43638f: ud2 
436391: prefetchnta byte ptr [rsi - 0x1c0]
436398: movaps xmm2, xmmword ptr [rsi - 0x11]
43639c: sub rdx, 0x40
4363a0: movaps xmm3, xmmword ptr [rsi - 0x21]
4363a4: movaps xmm4, xmmword ptr [rsi - 0x31]
4363a8: movaps xmm5, xmmword ptr [rsi - 0x41]
4363ac: lea rsi, [rsi - 0x40]
4363b0: palignr xmm1, xmm2, 1
4363b6: palignr xmm2, xmm3, 1
4363bc: palignr xmm3, xmm4, 1
4363c2: palignr xmm4, xmm5, 1
4363c8: movaps xmmword ptr [rdi - 0x10], xmm1
4363cc: movaps xmm1, xmm5
4363cf: movaps xmmword ptr [rdi - 0x20], xmm2
4363d3: lea rdi, [rdi - 0x40]
4363d7: movaps xmmword ptr [rdi + 0x10], xmm3
4363db: jb 0x4363e6
4363dd: movaps xmmword ptr [rdi], xmm4
4363e0: notrack jmp r9
4363e4: ud2 
4363e6: movaps xmmword ptr [rdi], xmm4
4363e9: lea rdx, [rdx + 0x40]
4363ed: movdqu xmmword ptr [r8], xmm0
4363f2: lea r11, [rip + 0x61307]
4363f9: movsxd rdx, dword ptr [r11 + rdx*4]
4363fd: lea rdx, [r11 + rdx]
436401: notrack jmp rdx
436404: ud2 
436406: nop word ptr cs:[rax + rax]
436410: lea r9, [r9 + 0x28]
436417: cmp rdx, rcx
43641a: movaps xmm1, xmmword ptr [rsi - 2]
43641e: jb 0x436427
436420: lea r9, [r9 - 7]
436427: lea rdx, [rdx - 0x40]
43642b: notrack jmp r9
43642f: ud2 
436431: prefetchnta byte ptr [rsi + 0x1c0]
436438: sub rdx, 0x40
43643c: movaps xmm2, xmmword ptr [rsi + 0xe]
436440: movaps xmm3, xmmword ptr [rsi + 0x1e]
436444: movaps xmm4, xmmword ptr [rsi + 0x2e]
436448: movaps xmm5, xmmword ptr [rsi + 0x3e]
43644c: movdqa xmm6, xmm5
436450: palignr xmm5, xmm4, 2
436456: lea rsi, [rsi + 0x40]
43645a: palignr xmm4, xmm3, 2
436460: palignr xmm3, xmm2, 2
436466: lea rdi, [rdi + 0x40]
43646a: palignr xmm2, xmm1, 2
436470: movdqa xmm1, xmm6
436474: movdqa xmmword ptr [rdi - 0x40], xmm2
436479: movaps xmmword ptr [rdi - 0x30], xmm3
43647d: jb 0x43648d
43647f: movaps xmmword ptr [rdi - 0x20], xmm4
436483: movaps xmmword ptr [rdi - 0x10], xmm5
436487: notrack jmp r9
43648b: ud2 
43648d: movaps xmmword ptr [rdi - 0x20], xmm4
436491: lea rdx, [rdx + 0x40]
436495: movaps xmmword ptr [rdi - 0x10], xmm5
436499: add rdi, rdx
43649c: movdqu xmmword ptr [r8], xmm0
4364a1: add rsi, rdx
4364a4: lea r11, [rip + 0x61255]
4364ab: movsxd rdx, dword ptr [r11 + rdx*4]
4364af: lea rdx, [r11 + rdx]
4364b3: notrack jmp rdx
4364b6: ud2 
4364b8: nop dword ptr [rax + rax]
4364c0: lea r9, [r9 + 0x28]
4364c7: cmp rdx, rcx
4364ca: movaps xmm1, xmmword ptr [rsi - 2]
4364ce: jb 0x4364d7
4364d0: lea r9, [r9 - 7]
4364d7: lea rdx, [rdx - 0x40]
4364db: notrack jmp r9
4364df: ud2 
4364e1: prefetchnta byte ptr [rsi - 0x1c0]
4364e8: movaps xmm2, xmmword ptr [rsi - 0x12]
4364ec: sub rdx, 0x40
4364f0: movaps xmm3, xmmword ptr [rsi - 0x22]
4364f4: movaps xmm4, xmmword ptr [rsi - 0x32]
4364f8: movaps xmm5, xmmword ptr [rsi - 0x42]
4364fc: lea rsi, [rsi - 0x40]
436500: palignr xmm1, xmm2, 2
436506: palignr xmm2, xmm3, 2
43650c: palignr xmm3, xmm4, 2
436512: palignr xmm4, xmm5, 2
436518: movaps xmmword ptr [rdi - 0x10], xmm1
43651c: movaps xmm1, xmm5
43651f: movaps xmmword ptr [rdi - 0x20], xmm2
436523: lea rdi, [rdi - 0x40]
436527: movaps xmmword ptr [rdi + 0x10], xmm3
43652b: jb 0x436536
43652d: movaps xmmword ptr [rdi], xmm4
436530: notrack jmp r9
436534: ud2 
436536: movaps xmmword ptr [rdi], xmm4
436539: lea rdx, [rdx + 0x40]
43653d: movdqu xmmword ptr [r8], xmm0
436542: lea r11, [rip + 0x611b7]
436549: movsxd rdx, dword ptr [r11 + rdx*4]
43654d: lea rdx, [r11 + rdx]
436551: notrack jmp rdx
436554: ud2 
436556: nop word ptr cs:[rax + rax]
436560: lea r9, [r9 + 0x28]
436567: cmp rdx, rcx
43656a: movaps xmm1, xmmword ptr [rsi - 3]
43656e: jb 0x436577
436570: lea r9, [r9 - 7]
436577: lea rdx, [rdx - 0x40]
43657b: notrack jmp r9
43657f: ud2 
436581: prefetchnta byte ptr [rsi + 0x1c0]
436588: sub rdx, 0x40
43658c: movaps xmm2, xmmword ptr [rsi + 0xd]
436590: movaps xmm3, xmmword ptr [rsi + 0x1d]
436594: movaps xmm4, xmmword ptr [rsi + 0x2d]
436598: movaps xmm5, xmmword ptr [rsi + 0x3d]
43659c: movdqa xmm6, xmm5
4365a0: palignr xmm5, xmm4, 3
4365a6: lea rsi, [rsi + 0x40]
4365aa: palignr xmm4, xmm3, 3
4365b0: palignr xmm3, xmm2, 3
4365b6: lea rdi, [rdi + 0x40]
4365ba: palignr xmm2, xmm1, 3
4365c0: movdqa xmm1, xmm6
4365c4: movdqa xmmword ptr [rdi - 0x40], xmm2
4365c9: movaps xmmword ptr [rdi - 0x30], xmm3
4365cd: jb 0x4365dd
4365cf: movaps xmmword ptr [rdi - 0x20], xmm4
4365d3: movaps xmmword ptr [rdi - 0x10], xmm5
4365d7: notrack jmp r9
4365db: ud2 
4365dd: movaps xmmword ptr [rdi - 0x20], xmm4
4365e1: lea rdx, [rdx + 0x40]
4365e5: movaps xmmword ptr [rdi - 0x10], xmm5
4365e9: add rdi, rdx
4365ec: movdqu xmmword ptr [r8], xmm0
4365f1: add rsi, rdx
4365f4: lea r11, [rip + 0x61105]
4365fb: movsxd rdx, dword ptr [r11 + rdx*4]
4365ff: lea rdx, [r11 + rdx]
436603: notrack jmp rdx
436606: ud2 
436608: nop dword ptr [rax + rax]
436610: lea r9, [r9 + 0x28]
436617: cmp rdx, rcx
43661a: movaps xmm1, xmmword ptr [rsi - 3]
43661e: jb 0x436627
436620: lea r9, [r9 - 7]
436627: lea rdx, [rdx - 0x40]
43662b: notrack jmp r9
43662f: ud2 
436631: prefetchnta byte ptr [rsi - 0x1c0]
436638: movaps xmm2, xmmword ptr [rsi - 0x13]
43663c: sub rdx, 0x40
436640: movaps xmm3, xmmword ptr [rsi - 0x23]
436644: movaps xmm4, xmmword ptr [rsi - 0x33]
436648: movaps xmm5, xmmword ptr [rsi - 0x43]
43664c: lea rsi, [rsi - 0x40]
436650: palignr xmm1, xmm2, 3
436656: palignr xmm2, xmm3, 3
43665c: palignr xmm3, xmm4, 3
436662: palignr xmm4, xmm5, 3
436668: movaps xmmword ptr [rdi - 0x10], xmm1
43666c: movaps xmm1, xmm5
43666f: movaps xmmword ptr [rdi - 0x20], xmm2
436673: lea rdi, [rdi - 0x40]
436677: movaps xmmword ptr [rdi + 0x10], xmm3
43667b: jb 0x436686
43667d: movaps xmmword ptr [rdi], xmm4
436680: notrack jmp r9
436684: ud2 
436686: movaps xmmword ptr [rdi], xmm4
436689: lea rdx, [rdx + 0x40]
43668d: movdqu xmmword ptr [r8], xmm0
436692: lea r11, [rip + 0x61067]
436699: movsxd rdx, dword ptr [r11 + rdx*4]
43669d: lea rdx, [r11 + rdx]
4366a1: notrack jmp rdx
4366a4: ud2 
4366a6: nop word ptr cs:[rax + rax]
4366b0: lea r9, [r9 + 0x28]
4366b7: cmp rdx, rcx
4366ba: movaps xmm1, xmmword ptr [rsi - 4]
4366be: jb 0x4366c7
4366c0: lea r9, [r9 - 7]
4366c7: lea rdx, [rdx - 0x40]
4366cb: notrack jmp r9
4366cf: ud2 
4366d1: prefetchnta byte ptr [rsi + 0x1c0]
4366d8: sub rdx, 0x40
4366dc: movaps xmm2, xmmword ptr [rsi + 0xc]
4366e0: movaps xmm3, xmmword ptr [rsi + 0x1c]
4366e4: movaps xmm4, xmmword ptr [rsi + 0x2c]
4366e8: movaps xmm5, xmmword ptr [rsi + 0x3c]
4366ec: movdqa xmm6, xmm5
4366f0: palignr xmm5, xmm4, 4
4366f6: lea rsi, [rsi + 0x40]
4366fa: palignr xmm4, xmm3, 4
436700: palignr xmm3, xmm2, 4
436706: lea rdi, [rdi + 0x40]
43670a: palignr xmm2, xmm1, 4
436710: movdqa xmm1, xmm6
436714: movdqa xmmword ptr [rdi - 0x40], xmm2
436719: movaps xmmword ptr [rdi - 0x30], xmm3
43671d: jb 0x43672d
43671f: movaps xmmword ptr [rdi - 0x20], xmm4
436723: movaps xmmword ptr [rdi - 0x10], xmm5
436727: notrack jmp r9
43672b: ud2 
43672d: movaps xmmword ptr [rdi - 0x20], xmm4
436731: lea rdx, [rdx + 0x40]
436735: movaps xmmword ptr [rdi - 0x10], xmm5
436739: add rdi, rdx
43673c: movdqu xmmword ptr [r8], xmm0
436741: add rsi, rdx
436744: lea r11, [rip + 0x60fb5]
43674b: movsxd rdx, dword ptr [r11 + rdx*4]
43674f: lea rdx, [r11 + rdx]
436753: notrack jmp rdx
436756: ud2 
436758: nop dword ptr [rax + rax]
436760: lea r9, [r9 + 0x28]
436767: cmp rdx, rcx
43676a: movaps xmm1, xmmword ptr [rsi - 4]
43676e: jb 0x436777
436770: lea r9, [r9 - 7]
436777: lea rdx, [rdx - 0x40]
43677b: notrack jmp r9
43677f: ud2 
436781: prefetchnta byte ptr [rsi - 0x1c0]
436788: movaps xmm2, xmmword ptr [rsi - 0x14]
43678c: sub rdx, 0x40
436790: movaps xmm3, xmmword ptr [rsi - 0x24]
436794: movaps xmm4, xmmword ptr [rsi - 0x34]
436798: movaps xmm5, xmmword ptr [rsi - 0x44]
43679c: lea rsi, [rsi - 0x40]
4367a0: palignr xmm1, xmm2, 4
4367a6: palignr xmm2, xmm3, 4
4367ac: palignr xmm3, xmm4, 4
4367b2: palignr xmm4, xmm5, 4
4367b8: movaps xmmword ptr [rdi - 0x10], xmm1
4367bc: movaps xmm1, xmm5
4367bf: movaps xmmword ptr [rdi - 0x20], xmm2
4367c3: lea rdi, [rdi - 0x40]
4367c7: movaps xmmword ptr [rdi + 0x10], xmm3
4367cb: jb 0x4367d6
4367cd: movaps xmmword ptr [rdi], xmm4
4367d0: notrack jmp r9
4367d4: ud2 
4367d6: movaps xmmword ptr [rdi], xmm4
4367d9: lea rdx, [rdx + 0x40]
4367dd: movdqu xmmword ptr [r8], xmm0
4367e2: lea r11, [rip + 0x60f17]
4367e9: movsxd rdx, dword ptr [r11 + rdx*4]
4367ed: lea rdx, [r11 + rdx]
4367f1: notrack jmp rdx
4367f4: ud2 
4367f6: nop word ptr cs:[rax + rax]
436800: lea r9, [r9 + 0x28]
436807: cmp rdx, rcx
43680a: movaps xmm1, xmmword ptr [rsi - 5]
43680e: jb 0x436817
436810: lea r9, [r9 - 7]
436817: lea rdx, [rdx - 0x40]
43681b: notrack jmp r9
43681f: ud2 
436821: prefetchnta byte ptr [rsi + 0x1c0]
436828: sub rdx, 0x40
43682c: movaps xmm2, xmmword ptr [rsi + 0xb]
436830: movaps xmm3, xmmword ptr [rsi + 0x1b]
436834: movaps xmm4, xmmword ptr [rsi + 0x2b]
436838: movaps xmm5, xmmword ptr [rsi + 0x3b]
43683c: movdqa xmm6, xmm5
436840: palignr xmm5, xmm4, 5
436846: lea rsi, [rsi + 0x40]
43684a: palignr xmm4, xmm3, 5
436850: palignr xmm3, xmm2, 5
436856: lea rdi, [rdi + 0x40]
43685a: palignr xmm2, xmm1, 5
436860: movdqa xmm1, xmm6
436864: movdqa xmmword ptr [rdi - 0x40], xmm2
436869: movaps xmmword ptr [rdi - 0x30], xmm3
43686d: jb 0x43687d
43686f: movaps xmmword ptr [rdi - 0x20], xmm4
436873: movaps xmmword ptr [rdi - 0x10], xmm5
436877: notrack jmp r9
43687b: ud2 
43687d: movaps xmmword ptr [rdi - 0x20], xmm4
436881: lea rdx, [rdx + 0x40]
436885: movaps xmmword ptr [rdi - 0x10], xmm5
436889: add rdi, rdx
43688c: movdqu xmmword ptr [r8], xmm0
436891: add rsi, rdx
436894: lea r11, [rip + 0x60e65]
43689b: movsxd rdx, dword ptr [r11 + rdx*4]
43689f: lea rdx, [r11 + rdx]
4368a3: notrack jmp rdx
4368a6: ud2 
4368a8: nop dword ptr [rax + rax]
4368b0: lea r9, [r9 + 0x28]
4368b7: cmp rdx, rcx
4368ba: movaps xmm1, xmmword ptr [rsi - 5]
4368be: jb 0x4368c7
4368c0: lea r9, [r9 - 7]
4368c7: lea rdx, [rdx - 0x40]
4368cb: notrack jmp r9
4368cf: ud2 
4368d1: prefetchnta byte ptr [rsi - 0x1c0]
4368d8: movaps xmm2, xmmword ptr [rsi - 0x15]
4368dc: sub rdx, 0x40
4368e0: movaps xmm3, xmmword ptr [rsi - 0x25]
4368e4: movaps xmm4, xmmword ptr [rsi - 0x35]
4368e8: movaps xmm5, xmmword ptr [rsi - 0x45]
4368ec: lea rsi, [rsi - 0x40]
4368f0: palignr xmm1, xmm2, 5
4368f6: palignr xmm2, xmm3, 5
4368fc: palignr xmm3, xmm4, 5
436902: palignr xmm4, xmm5, 5
436908: movaps xmmword ptr [rdi - 0x10], xmm1
43690c: movaps xmm1, xmm5
43690f: movaps xmmword ptr [rdi - 0x20], xmm2
436913: lea rdi, [rdi - 0x40]
436917: movaps xmmword ptr [rdi + 0x10], xmm3
43691b: jb 0x436926
43691d: movaps xmmword ptr [rdi], xmm4
436920: notrack jmp r9
436924: ud2 
436926: movaps xmmword ptr [rdi], xmm4
436929: lea rdx, [rdx + 0x40]
43692d: movdqu xmmword ptr [r8], xmm0
436932: lea r11, [rip + 0x60dc7]
436939: movsxd rdx, dword ptr [r11 + rdx*4]
43693d: lea rdx, [r11 + rdx]
436941: notrack jmp rdx
436944: ud2 
436946: nop word ptr cs:[rax + rax]
436950: lea r9, [r9 + 0x28]
436957: cmp rdx, rcx
43695a: movaps xmm1, xmmword ptr [rsi - 6]
43695e: jb 0x436967
436960: lea r9, [r9 - 7]
436967: lea rdx, [rdx - 0x40]
43696b: notrack jmp r9
43696f: ud2 
436971: prefetchnta byte ptr [rsi + 0x1c0]
436978: sub rdx, 0x40
43697c: movaps xmm2, xmmword ptr [rsi + 0xa]
436980: movaps xmm3, xmmword ptr [rsi + 0x1a]
436984: movaps xmm4, xmmword ptr [rsi + 0x2a]
436988: movaps xmm5, xmmword ptr [rsi + 0x3a]
43698c: movdqa xmm6, xmm5
436990: palignr xmm5, xmm4, 6
436996: lea rsi, [rsi + 0x40]
43699a: palignr xmm4, xmm3, 6
4369a0: palignr xmm3, xmm2, 6
4369a6: lea rdi, [rdi + 0x40]
4369aa: palignr xmm2, xmm1, 6
4369b0: movdqa xmm1, xmm6
4369b4: movdqa xmmword ptr [rdi - 0x40], xmm2
4369b9: movaps xmmword ptr [rdi - 0x30], xmm3
4369bd: jb 0x4369cd
4369bf: movaps xmmword ptr [rdi - 0x20], xmm4
4369c3: movaps xmmword ptr [rdi - 0x10], xmm5
4369c7: notrack jmp r9
4369cb: ud2 
4369cd: movaps xmmword ptr [rdi - 0x20], xmm4
4369d1: lea rdx, [rdx + 0x40]
4369d5: movaps xmmword ptr [rdi - 0x10], xmm5
4369d9: add rdi, rdx
4369dc: movdqu xmmword ptr [r8], xmm0
4369e1: add rsi, rdx
4369e4: lea r11, [rip + 0x60d15]
4369eb: movsxd rdx, dword ptr [r11 + rdx*4]
4369ef: lea rdx, [r11 + rdx]
4369f3: notrack jmp rdx
4369f6: ud2 
4369f8: nop dword ptr [rax + rax]
436a00: lea r9, [r9 + 0x28]
436a07: cmp rdx, rcx
436a0a: movaps xmm1, xmmword ptr [rsi - 6]
436a0e: jb 0x436a17
436a10: lea r9, [r9 - 7]
436a17: lea rdx, [rdx - 0x40]
436a1b: notrack jmp r9
436a1f: ud2 
436a21: prefetchnta byte ptr [rsi - 0x1c0]
436a28: movaps xmm2, xmmword ptr [rsi - 0x16]
436a2c: sub rdx, 0x40
436a30: movaps xmm3, xmmword ptr [rsi - 0x26]
436a34: movaps xmm4, xmmword ptr [rsi - 0x36]
436a38: movaps xmm5, xmmword ptr [rsi - 0x46]
436a3c: lea rsi, [rsi - 0x40]
436a40: palignr xmm1, xmm2, 6
436a46: palignr xmm2, xmm3, 6
436a4c: palignr xmm3, xmm4, 6
436a52: palignr xmm4, xmm5, 6
436a58: movaps xmmword ptr [rdi - 0x10], xmm1
436a5c: movaps xmm1, xmm5
436a5f: movaps xmmword ptr [rdi - 0x20], xmm2
436a63: lea rdi, [rdi - 0x40]
436a67: movaps xmmword ptr [rdi + 0x10], xmm3
436a6b: jb 0x436a76
436a6d: movaps xmmword ptr [rdi], xmm4
436a70: notrack jmp r9
436a74: ud2 
436a76: movaps xmmword ptr [rdi], xmm4
436a79: lea rdx, [rdx + 0x40]
436a7d: movdqu xmmword ptr [r8], xmm0
436a82: lea r11, [rip + 0x60c77]
436a89: movsxd rdx, dword ptr [r11 + rdx*4]
436a8d: lea rdx, [r11 + rdx]
436a91: notrack jmp rdx
436a94: ud2 
436a96: nop word ptr cs:[rax + rax]
436aa0: lea r9, [r9 + 0x28]
436aa7: cmp rdx, rcx
436aaa: movaps xmm1, xmmword ptr [rsi - 7]
436aae: jb 0x436ab7
436ab0: lea r9, [r9 - 7]
436ab7: lea rdx, [rdx - 0x40]
436abb: notrack jmp r9
436abf: ud2 
436ac1: prefetchnta byte ptr [rsi + 0x1c0]
436ac8: sub rdx, 0x40
436acc: movaps xmm2, xmmword ptr [rsi + 9]
436ad0: movaps xmm3, xmmword ptr [rsi + 0x19]
436ad4: movaps xmm4, xmmword ptr [rsi + 0x29]
436ad8: movaps xmm5, xmmword ptr [rsi + 0x39]
436adc: movdqa xmm6, xmm5
436ae0: palignr xmm5, xmm4, 7
436ae6: lea rsi, [rsi + 0x40]
436aea: palignr xmm4, xmm3, 7
436af0: palignr xmm3, xmm2, 7
436af6: lea rdi, [rdi + 0x40]
436afa: palignr xmm2, xmm1, 7
436b00: movdqa xmm1, xmm6
436b04: movdqa xmmword ptr [rdi - 0x40], xmm2
436b09: movaps xmmword ptr [rdi - 0x30], xmm3
436b0d: jb 0x436b1d
436b0f: movaps xmmword ptr [rdi - 0x20], xmm4
436b13: movaps xmmword ptr [rdi - 0x10], xmm5
436b17: notrack jmp r9
436b1b: ud2 
436b1d: movaps xmmword ptr [rdi - 0x20], xmm4
436b21: lea rdx, [rdx + 0x40]
436b25: movaps xmmword ptr [rdi - 0x10], xmm5
436b29: add rdi, rdx
436b2c: movdqu xmmword ptr [r8], xmm0
436b31: add rsi, rdx
436b34: lea r11, [rip + 0x60bc5]
436b3b: movsxd rdx, dword ptr [r11 + rdx*4]
436b3f: lea rdx, [r11 + rdx]
436b43: notrack jmp rdx
436b46: ud2 
436b48: nop dword ptr [rax + rax]
436b50: lea r9, [r9 + 0x28]
436b57: cmp rdx, rcx
436b5a: movaps xmm1, xmmword ptr [rsi - 7]
436b5e: jb 0x436b67
436b60: lea r9, [r9 - 7]
436b67: lea rdx, [rdx - 0x40]
436b6b: notrack jmp r9
436b6f: ud2 
436b71: prefetchnta byte ptr [rsi - 0x1c0]
436b78: movaps xmm2, xmmword ptr [rsi - 0x17]
436b7c: sub rdx, 0x40
436b80: movaps xmm3, xmmword ptr [rsi - 0x27]
436b84: movaps xmm4, xmmword ptr [rsi - 0x37]
436b88: movaps xmm5, xmmword ptr [rsi - 0x47]
436b8c: lea rsi, [rsi - 0x40]
436b90: palignr xmm1, xmm2, 7
436b96: palignr xmm2, xmm3, 7
436b9c: palignr xmm3, xmm4, 7
436ba2: palignr xmm4, xmm5, 7
436ba8: movaps xmmword ptr [rdi - 0x10], xmm1
436bac: movaps xmm1, xmm5
436baf: movaps xmmword ptr [rdi - 0x20], xmm2
436bb3: lea rdi, [rdi - 0x40]
436bb7: movaps xmmword ptr [rdi + 0x10], xmm3
436bbb: jb 0x436bc6
436bbd: movaps xmmword ptr [rdi], xmm4
436bc0: notrack jmp r9
436bc4: ud2 
436bc6: movaps xmmword ptr [rdi], xmm4
436bc9: lea rdx, [rdx + 0x40]
436bcd: movdqu xmmword ptr [r8], xmm0
436bd2: lea r11, [rip + 0x60b27]
436bd9: movsxd rdx, dword ptr [r11 + rdx*4]
436bdd: lea rdx, [r11 + rdx]
436be1: notrack jmp rdx
436be4: ud2 
436be6: nop word ptr cs:[rax + rax]
436bf0: lea r9, [r9 + 0x26]
436bf7: cmp rdx, rcx
436bfa: movaps xmm1, xmmword ptr [rsi - 8]
436bfe: jb 0x436c07
436c00: lea r9, [r9 - 7]
436c07: lea rdx, [rdx - 0x40]
436c0b: notrack jmp r9
436c0f: prefetchnta byte ptr [rsi + 0x1c0]
436c16: sub rdx, 0x40
436c1a: movaps xmm2, xmmword ptr [rsi + 8]
436c1e: movaps xmm3, xmmword ptr [rsi + 0x18]
436c22: movaps xmm4, xmmword ptr [rsi + 0x28]
436c26: movaps xmm5, xmmword ptr [rsi + 0x38]
436c2a: movdqa xmm6, xmm5
436c2e: palignr xmm5, xmm4, 8
436c34: lea rsi, [rsi + 0x40]
436c38: palignr xmm4, xmm3, 8
436c3e: palignr xmm3, xmm2, 8
436c44: lea rdi, [rdi + 0x40]
436c48: palignr xmm2, xmm1, 8
436c4e: movdqa xmm1, xmm6
436c52: movdqa xmmword ptr [rdi - 0x40], xmm2
436c57: movaps xmmword ptr [rdi - 0x30], xmm3
436c5b: jb 0x436c70
436c5d: movaps xmmword ptr [rdi - 0x20], xmm4
436c61: movaps xmmword ptr [rdi - 0x10], xmm5
436c65: notrack jmp r9
436c69: ud2 
436c6b: nop dword ptr [rax + rax]
436c70: lea rdx, [rdx + 0x40]
436c74: movaps xmmword ptr [rdi - 0x20], xmm4
436c78: add rsi, rdx
436c7b: movaps xmmword ptr [rdi - 0x10], xmm5
436c7f: add rdi, rdx
436c82: movdqu xmmword ptr [r8], xmm0
436c87: lea r11, [rip + 0x60a72]
436c8e: movsxd rdx, dword ptr [r11 + rdx*4]
436c92: lea rdx, [r11 + rdx]
436c96: notrack jmp rdx
436c99: ud2 
436c9b: nop dword ptr [rax + rax]
436ca0: lea r9, [r9 + 0x28]
436ca7: cmp rdx, rcx
436caa: movaps xmm1, xmmword ptr [rsi - 8]
436cae: jb 0x436cb7
436cb0: lea r9, [r9 - 7]
436cb7: lea rdx, [rdx - 0x40]
436cbb: notrack jmp r9
436cbf: ud2 
436cc1: prefetchnta byte ptr [rsi - 0x1c0]
436cc8: movaps xmm2, xmmword ptr [rsi - 0x18]
436ccc: sub rdx, 0x40
436cd0: movaps xmm3, xmmword ptr [rsi - 0x28]
436cd4: movaps xmm4, xmmword ptr [rsi - 0x38]
436cd8: movaps xmm5, xmmword ptr [rsi - 0x48]
436cdc: lea rsi, [rsi - 0x40]
436ce0: palignr xmm1, xmm2, 8
436ce6: palignr xmm2, xmm3, 8
436cec: palignr xmm3, xmm4, 8
436cf2: palignr xmm4, xmm5, 8
436cf8: movaps xmmword ptr [rdi - 0x10], xmm1
436cfc: movaps xmm1, xmm5
436cff: movaps xmmword ptr [rdi - 0x20], xmm2
436d03: lea rdi, [rdi - 0x40]
436d07: movaps xmmword ptr [rdi + 0x10], xmm3
436d0b: jb 0x436d16
436d0d: movaps xmmword ptr [rdi], xmm4
436d10: notrack jmp r9
436d14: ud2 
436d16: movaps xmmword ptr [rdi], xmm4
436d19: lea rdx, [rdx + 0x40]
436d1d: movdqu xmmword ptr [r8], xmm0
436d22: lea r11, [rip + 0x609d7]
436d29: movsxd rdx, dword ptr [r11 + rdx*4]
436d2d: lea rdx, [r11 + rdx]
436d31: notrack jmp rdx
436d34: ud2 
436d36: nop word ptr cs:[rax + rax]
436d40: lea r9, [r9 + 0x28]
436d47: cmp rdx, rcx
436d4a: movaps xmm1, xmmword ptr [rsi - 9]
436d4e: jb 0x436d57
436d50: lea r9, [r9 - 7]
436d57: lea rdx, [rdx - 0x40]
436d5b: notrack jmp r9
436d5f: ud2 
436d61: prefetchnta byte ptr [rsi + 0x1c0]
436d68: sub rdx, 0x40
436d6c: movaps xmm2, xmmword ptr [rsi + 7]
436d70: movaps xmm3, xmmword ptr [rsi + 0x17]
436d74: movaps xmm4, xmmword ptr [rsi + 0x27]
436d78: movaps xmm5, xmmword ptr [rsi + 0x37]
436d7c: movdqa xmm6, xmm5
436d80: palignr xmm5, xmm4, 9
436d86: lea rsi, [rsi + 0x40]
436d8a: palignr xmm4, xmm3, 9
436d90: palignr xmm3, xmm2, 9
436d96: lea rdi, [rdi + 0x40]
436d9a: palignr xmm2, xmm1, 9
436da0: movdqa xmm1, xmm6
436da4: movdqa xmmword ptr [rdi - 0x40], xmm2
436da9: movaps xmmword ptr [rdi - 0x30], xmm3
436dad: jb 0x436dbd
436daf: movaps xmmword ptr [rdi - 0x20], xmm4
436db3: movaps xmmword ptr [rdi - 0x10], xmm5
436db7: notrack jmp r9
436dbb: ud2 
436dbd: movaps xmmword ptr [rdi - 0x20], xmm4
436dc1: lea rdx, [rdx + 0x40]
436dc5: movaps xmmword ptr [rdi - 0x10], xmm5
436dc9: add rdi, rdx
436dcc: movdqu xmmword ptr [r8], xmm0
436dd1: add rsi, rdx
436dd4: lea r11, [rip + 0x60925]
436ddb: movsxd rdx, dword ptr [r11 + rdx*4]
436ddf: lea rdx, [r11 + rdx]
436de3: notrack jmp rdx
436de6: ud2 
436de8: nop dword ptr [rax + rax]
436df0: lea r9, [r9 + 0x28]
436df7: cmp rdx, rcx
436dfa: movaps xmm1, xmmword ptr [rsi - 9]
436dfe: jb 0x436e07
436e00: lea r9, [r9 - 7]
436e07: lea rdx, [rdx - 0x40]
436e0b: notrack jmp r9
436e0f: ud2 
436e11: prefetchnta byte ptr [rsi - 0x1c0]
436e18: movaps xmm2, xmmword ptr [rsi - 0x19]
436e1c: sub rdx, 0x40
436e20: movaps xmm3, xmmword ptr [rsi - 0x29]
436e24: movaps xmm4, xmmword ptr [rsi - 0x39]
436e28: movaps xmm5, xmmword ptr [rsi - 0x49]
436e2c: lea rsi, [rsi - 0x40]
436e30: palignr xmm1, xmm2, 9
436e36: palignr xmm2, xmm3, 9
436e3c: palignr xmm3, xmm4, 9
436e42: palignr xmm4, xmm5, 9
436e48: movaps xmmword ptr [rdi - 0x10], xmm1
436e4c: movaps xmm1, xmm5
436e4f: movaps xmmword ptr [rdi - 0x20], xmm2
436e53: lea rdi, [rdi - 0x40]
436e57: movaps xmmword ptr [rdi + 0x10], xmm3
436e5b: jb 0x436e66
436e5d: movaps xmmword ptr [rdi], xmm4
436e60: notrack jmp r9
436e64: ud2 
436e66: movaps xmmword ptr [rdi], xmm4
436e69: lea rdx, [rdx + 0x40]
436e6d: movdqu xmmword ptr [r8], xmm0
436e72: lea r11, [rip + 0x60887]
436e79: movsxd rdx, dword ptr [r11 + rdx*4]
436e7d: lea rdx, [r11 + rdx]
436e81: notrack jmp rdx
436e84: ud2 
436e86: nop word ptr cs:[rax + rax]
436e90: lea r9, [r9 + 0x28]
436e97: cmp rdx, rcx
436e9a: movaps xmm1, xmmword ptr [rsi - 0xa]
436e9e: jb 0x436ea7
436ea0: lea r9, [r9 - 7]
436ea7: lea rdx, [rdx - 0x40]
436eab: notrack jmp r9
436eaf: ud2 
436eb1: prefetchnta byte ptr [rsi + 0x1c0]
436eb8: sub rdx, 0x40
436ebc: movaps xmm2, xmmword ptr [rsi + 6]
436ec0: movaps xmm3, xmmword ptr [rsi + 0x16]
436ec4: movaps xmm4, xmmword ptr [rsi + 0x26]
436ec8: movaps xmm5, xmmword ptr [rsi + 0x36]
436ecc: movdqa xmm6, xmm5
436ed0: palignr xmm5, xmm4, 0xa
436ed6: lea rsi, [rsi + 0x40]
436eda: palignr xmm4, xmm3, 0xa
436ee0: palignr xmm3, xmm2, 0xa
436ee6: lea rdi, [rdi + 0x40]
436eea: palignr xmm2, xmm1, 0xa
436ef0: movdqa xmm1, xmm6
436ef4: movdqa xmmword ptr [rdi - 0x40], xmm2
436ef9: movaps xmmword ptr [rdi - 0x30], xmm3
436efd: jb 0x436f0d
436eff: movaps xmmword ptr [rdi - 0x20], xmm4
436f03: movaps xmmword ptr [rdi - 0x10], xmm5
436f07: notrack jmp r9
436f0b: ud2 
436f0d: movaps xmmword ptr [rdi - 0x20], xmm4
436f11: lea rdx, [rdx + 0x40]
436f15: movaps xmmword ptr [rdi - 0x10], xmm5
436f19: add rdi, rdx
436f1c: movdqu xmmword ptr [r8], xmm0
436f21: add rsi, rdx
436f24: lea r11, [rip + 0x607d5]
436f2b: movsxd rdx, dword ptr [r11 + rdx*4]
436f2f: lea rdx, [r11 + rdx]
436f33: notrack jmp rdx
436f36: ud2 
436f38: nop dword ptr [rax + rax]
436f40: lea r9, [r9 + 0x28]
436f47: cmp rdx, rcx
436f4a: movaps xmm1, xmmword ptr [rsi - 0xa]
436f4e: jb 0x436f57
436f50: lea r9, [r9 - 7]
436f57: lea rdx, [rdx - 0x40]
436f5b: notrack jmp r9
436f5f: ud2 
436f61: prefetchnta byte ptr [rsi - 0x1c0]
436f68: movaps xmm2, xmmword ptr [rsi - 0x1a]
436f6c: sub rdx, 0x40
436f70: movaps xmm3, xmmword ptr [rsi - 0x2a]
436f74: movaps xmm4, xmmword ptr [rsi - 0x3a]
436f78: movaps xmm5, xmmword ptr [rsi - 0x4a]
436f7c: lea rsi, [rsi - 0x40]
436f80: palignr xmm1, xmm2, 0xa
436f86: palignr xmm2, xmm3, 0xa
436f8c: palignr xmm3, xmm4, 0xa
436f92: palignr xmm4, xmm5, 0xa
436f98: movaps xmmword ptr [rdi - 0x10], xmm1
436f9c: movaps xmm1, xmm5
436f9f: movaps xmmword ptr [rdi - 0x20], xmm2
436fa3: lea rdi, [rdi - 0x40]
436fa7: movaps xmmword ptr [rdi + 0x10], xmm3
436fab: jb 0x436fb6
436fad: movaps xmmword ptr [rdi], xmm4
436fb0: notrack jmp r9
436fb4: ud2 
436fb6: movaps xmmword ptr [rdi], xmm4
436fb9: lea rdx, [rdx + 0x40]
436fbd: movdqu xmmword ptr [r8], xmm0
436fc2: lea r11, [rip + 0x60737]
436fc9: movsxd rdx, dword ptr [r11 + rdx*4]
436fcd: lea rdx, [r11 + rdx]
436fd1: notrack jmp rdx
436fd4: ud2 
436fd6: nop word ptr cs:[rax + rax]
436fe0: lea r9, [r9 + 0x28]
436fe7: cmp rdx, rcx
436fea: movaps xmm1, xmmword ptr [rsi - 0xb]
436fee: jb 0x436ff7
436ff0: lea r9, [r9 - 7]
436ff7: lea rdx, [rdx - 0x40]
436ffb: notrack jmp r9
436fff: ud2 
437001: prefetchnta byte ptr [rsi + 0x1c0]
437008: sub rdx, 0x40
43700c: movaps xmm2, xmmword ptr [rsi + 5]
437010: movaps xmm3, xmmword ptr [rsi + 0x15]
437014: movaps xmm4, xmmword ptr [rsi + 0x25]
437018: movaps xmm5, xmmword ptr [rsi + 0x35]
43701c: movdqa xmm6, xmm5
437020: palignr xmm5, xmm4, 0xb
437026: lea rsi, [rsi + 0x40]
43702a: palignr xmm4, xmm3, 0xb
437030: palignr xmm3, xmm2, 0xb
437036: lea rdi, [rdi + 0x40]
43703a: palignr xmm2, xmm1, 0xb
437040: movdqa xmm1, xmm6
437044: movdqa xmmword ptr [rdi - 0x40], xmm2
437049: movaps xmmword ptr [rdi - 0x30], xmm3
43704d: jb 0x43705d
43704f: movaps xmmword ptr [rdi - 0x20], xmm4
437053: movaps xmmword ptr [rdi - 0x10], xmm5
437057: notrack jmp r9
43705b: ud2 
43705d: movaps xmmword ptr [rdi - 0x20], xmm4
437061: lea rdx, [rdx + 0x40]
437065: movaps xmmword ptr [rdi - 0x10], xmm5
437069: add rdi, rdx
43706c: movdqu xmmword ptr [r8], xmm0
437071: add rsi, rdx
437074: lea r11, [rip + 0x60685]
43707b: movsxd rdx, dword ptr [r11 + rdx*4]
43707f: lea rdx, [r11 + rdx]
437083: notrack jmp rdx
437086: ud2 
437088: nop dword ptr [rax + rax]
437090: lea r9, [r9 + 0x28]
437097: cmp rdx, rcx
43709a: movaps xmm1, xmmword ptr [rsi - 0xb]
43709e: jb 0x4370a7
4370a0: lea r9, [r9 - 7]
4370a7: lea rdx, [rdx - 0x40]
4370ab: notrack jmp r9
4370af: ud2 
4370b1: prefetchnta byte ptr [rsi - 0x1c0]
4370b8: movaps xmm2, xmmword ptr [rsi - 0x1b]
4370bc: sub rdx, 0x40
4370c0: movaps xmm3, xmmword ptr [rsi - 0x2b]
4370c4: movaps xmm4, xmmword ptr [rsi - 0x3b]
4370c8: movaps xmm5, xmmword ptr [rsi - 0x4b]
4370cc: lea rsi, [rsi - 0x40]
4370d0: palignr xmm1, xmm2, 0xb
4370d6: palignr xmm2, xmm3, 0xb
4370dc: palignr xmm3, xmm4, 0xb
4370e2: palignr xmm4, xmm5, 0xb
4370e8: movaps xmmword ptr [rdi - 0x10], xmm1
4370ec: movaps xmm1, xmm5
4370ef: movaps xmmword ptr [rdi - 0x20], xmm2
4370f3: lea rdi, [rdi - 0x40]
4370f7: movaps xmmword ptr [rdi + 0x10], xmm3
4370fb: jb 0x437106
4370fd: movaps xmmword ptr [rdi], xmm4
437100: notrack jmp r9
437104: ud2 
437106: movaps xmmword ptr [rdi], xmm4
437109: lea rdx, [rdx + 0x40]
43710d: movdqu xmmword ptr [r8], xmm0
437112: lea r11, [rip + 0x605e7]
437119: movsxd rdx, dword ptr [r11 + rdx*4]
43711d: lea rdx, [r11 + rdx]
437121: notrack jmp rdx
437124: ud2 
437126: nop word ptr cs:[rax + rax]
437130: lea r9, [r9 + 0x28]
437137: cmp rdx, rcx
43713a: movaps xmm1, xmmword ptr [rsi - 0xc]
43713e: jb 0x437147
437140: lea r9, [r9 - 7]
437147: lea rdx, [rdx - 0x40]
43714b: notrack jmp r9
43714f: ud2 
437151: prefetchnta byte ptr [rsi + 0x1c0]
437158: sub rdx, 0x40
43715c: movaps xmm2, xmmword ptr [rsi + 4]
437160: movaps xmm3, xmmword ptr [rsi + 0x14]
437164: movaps xmm4, xmmword ptr [rsi + 0x24]
437168: movaps xmm5, xmmword ptr [rsi + 0x34]
43716c: movdqa xmm6, xmm5
437170: palignr xmm5, xmm4, 0xc
437176: lea rsi, [rsi + 0x40]
43717a: palignr xmm4, xmm3, 0xc
437180: palignr xmm3, xmm2, 0xc
437186: lea rdi, [rdi + 0x40]
43718a: palignr xmm2, xmm1, 0xc
437190: movdqa xmm1, xmm6
437194: movdqa xmmword ptr [rdi - 0x40], xmm2
437199: movaps xmmword ptr [rdi - 0x30], xmm3
43719d: jb 0x4371ad
43719f: movaps xmmword ptr [rdi - 0x20], xmm4
4371a3: movaps xmmword ptr [rdi - 0x10], xmm5
4371a7: notrack jmp r9
4371ab: ud2 
4371ad: movaps xmmword ptr [rdi - 0x20], xmm4
4371b1: lea rdx, [rdx + 0x40]
4371b5: movaps xmmword ptr [rdi - 0x10], xmm5
4371b9: add rdi, rdx
4371bc: movdqu xmmword ptr [r8], xmm0
4371c1: add rsi, rdx
4371c4: lea r11, [rip + 0x60535]
4371cb: movsxd rdx, dword ptr [r11 + rdx*4]
4371cf: lea rdx, [r11 + rdx]
4371d3: notrack jmp rdx
4371d6: ud2 
4371d8: nop dword ptr [rax + rax]
4371e0: lea r9, [r9 + 0x28]
4371e7: cmp rdx, rcx
4371ea: movaps xmm1, xmmword ptr [rsi - 0xc]
4371ee: jb 0x4371f7
4371f0: lea r9, [r9 - 7]
4371f7: lea rdx, [rdx - 0x40]
4371fb: notrack jmp r9
4371ff: ud2 
437201: prefetchnta byte ptr [rsi - 0x1c0]
437208: movaps xmm2, xmmword ptr [rsi - 0x1c]
43720c: sub rdx, 0x40
437210: movaps xmm3, xmmword ptr [rsi - 0x2c]
437214: movaps xmm4, xmmword ptr [rsi - 0x3c]
437218: movaps xmm5, xmmword ptr [rsi - 0x4c]
43721c: lea rsi, [rsi - 0x40]
437220: palignr xmm1, xmm2, 0xc
437226: palignr xmm2, xmm3, 0xc
43722c: palignr xmm3, xmm4, 0xc
437232: palignr xmm4, xmm5, 0xc
437238: movaps xmmword ptr [rdi - 0x10], xmm1
43723c: movaps xmm1, xmm5
43723f: movaps xmmword ptr [rdi - 0x20], xmm2
437243: lea rdi, [rdi - 0x40]
437247: movaps xmmword ptr [rdi + 0x10], xmm3
43724b: jb 0x437256
43724d: movaps xmmword ptr [rdi], xmm4
437250: notrack jmp r9
437254: ud2 
437256: movaps xmmword ptr [rdi], xmm4
437259: lea rdx, [rdx + 0x40]
43725d: movdqu xmmword ptr [r8], xmm0
437262: lea r11, [rip + 0x60497]
437269: movsxd rdx, dword ptr [r11 + rdx*4]
43726d: lea rdx, [r11 + rdx]
437271: notrack jmp rdx
437274: ud2 
437276: nop word ptr cs:[rax + rax]
437280: lea r9, [r9 + 0x28]
437287: cmp rdx, rcx
43728a: movaps xmm1, xmmword ptr [rsi - 0xd]
43728e: jb 0x437297
437290: lea r9, [r9 - 7]
437297: lea rdx, [rdx - 0x40]
43729b: notrack jmp r9
43729f: ud2 
4372a1: prefetchnta byte ptr [rsi + 0x1c0]
4372a8: sub rdx, 0x40
4372ac: movaps xmm2, xmmword ptr [rsi + 3]
4372b0: movaps xmm3, xmmword ptr [rsi + 0x13]
4372b4: movaps xmm4, xmmword ptr [rsi + 0x23]
4372b8: movaps xmm5, xmmword ptr [rsi + 0x33]
4372bc: movdqa xmm6, xmm5
4372c0: palignr xmm5, xmm4, 0xd
4372c6: lea rsi, [rsi + 0x40]
4372ca: palignr xmm4, xmm3, 0xd
4372d0: palignr xmm3, xmm2, 0xd
4372d6: lea rdi, [rdi + 0x40]
4372da: palignr xmm2, xmm1, 0xd
4372e0: movdqa xmm1, xmm6
4372e4: movdqa xmmword ptr [rdi - 0x40], xmm2
4372e9: movaps xmmword ptr [rdi - 0x30], xmm3
4372ed: jb 0x4372fd
4372ef: movaps xmmword ptr [rdi - 0x20], xmm4
4372f3: movaps xmmword ptr [rdi - 0x10], xmm5
4372f7: notrack jmp r9
4372fb: ud2 
4372fd: movaps xmmword ptr [rdi - 0x20], xmm4
437301: lea rdx, [rdx + 0x40]
437305: movaps xmmword ptr [rdi - 0x10], xmm5
437309: add rdi, rdx
43730c: movdqu xmmword ptr [r8], xmm0
437311: add rsi, rdx
437314: lea r11, [rip + 0x603e5]
43731b: movsxd rdx, dword ptr [r11 + rdx*4]
43731f: lea rdx, [r11 + rdx]
437323: notrack jmp rdx
437326: ud2 
437328: nop dword ptr [rax + rax]
437330: lea r9, [r9 + 0x28]
437337: cmp rdx, rcx
43733a: movaps xmm1, xmmword ptr [rsi - 0xd]
43733e: jb 0x437347
437340: lea r9, [r9 - 7]
437347: lea rdx, [rdx - 0x40]
43734b: notrack jmp r9
43734f: ud2 
437351: prefetchnta byte ptr [rsi - 0x1c0]
437358: movaps xmm2, xmmword ptr [rsi - 0x1d]
43735c: sub rdx, 0x40
437360: movaps xmm3, xmmword ptr [rsi - 0x2d]
437364: movaps xmm4, xmmword ptr [rsi - 0x3d]
437368: movaps xmm5, xmmword ptr [rsi - 0x4d]
43736c: lea rsi, [rsi - 0x40]
437370: palignr xmm1, xmm2, 0xd
437376: palignr xmm2, xmm3, 0xd
43737c: palignr xmm3, xmm4, 0xd
437382: palignr xmm4, xmm5, 0xd
437388: movaps xmmword ptr [rdi - 0x10], xmm1
43738c: movaps xmm1, xmm5
43738f: movaps xmmword ptr [rdi - 0x20], xmm2
437393: lea rdi, [rdi - 0x40]
437397: movaps xmmword ptr [rdi + 0x10], xmm3
43739b: jb 0x4373a6
43739d: movaps xmmword ptr [rdi], xmm4
4373a0: notrack jmp r9
4373a4: ud2 
4373a6: movaps xmmword ptr [rdi], xmm4
4373a9: lea rdx, [rdx + 0x40]
4373ad: movdqu xmmword ptr [r8], xmm0
4373b2: lea r11, [rip + 0x60347]
4373b9: movsxd rdx, dword ptr [r11 + rdx*4]
4373bd: lea rdx, [r11 + rdx]
4373c1: notrack jmp rdx
4373c4: ud2 
4373c6: nop word ptr cs:[rax + rax]
4373d0: lea r9, [r9 + 0x28]
4373d7: cmp rdx, rcx
4373da: movaps xmm1, xmmword ptr [rsi - 0xe]
4373de: jb 0x4373e7
4373e0: lea r9, [r9 - 7]
4373e7: lea rdx, [rdx - 0x40]
4373eb: notrack jmp r9
4373ef: ud2 
4373f1: prefetchnta byte ptr [rsi + 0x1c0]
4373f8: sub rdx, 0x40
4373fc: movaps xmm2, xmmword ptr [rsi + 2]
437400: movaps xmm3, xmmword ptr [rsi + 0x12]
437404: movaps xmm4, xmmword ptr [rsi + 0x22]
437408: movaps xmm5, xmmword ptr [rsi + 0x32]
43740c: movdqa xmm6, xmm5
437410: palignr xmm5, xmm4, 0xe
437416: lea rsi, [rsi + 0x40]
43741a: palignr xmm4, xmm3, 0xe
437420: palignr xmm3, xmm2, 0xe
437426: lea rdi, [rdi + 0x40]
43742a: palignr xmm2, xmm1, 0xe
437430: movdqa xmm1, xmm6
437434: movdqa xmmword ptr [rdi - 0x40], xmm2
437439: movaps xmmword ptr [rdi - 0x30], xmm3
43743d: jb 0x43744d
43743f: movaps xmmword ptr [rdi - 0x20], xmm4
437443: movaps xmmword ptr [rdi - 0x10], xmm5
437447: notrack jmp r9
43744b: ud2 
43744d: movaps xmmword ptr [rdi - 0x20], xmm4
437451: lea rdx, [rdx + 0x40]
437455: movaps xmmword ptr [rdi - 0x10], xmm5
437459: add rdi, rdx
43745c: movdqu xmmword ptr [r8], xmm0
437461: add rsi, rdx
437464: lea r11, [rip + 0x60295]
43746b: movsxd rdx, dword ptr [r11 + rdx*4]
43746f: lea rdx, [r11 + rdx]
437473: notrack jmp rdx
437476: ud2 
437478: nop dword ptr [rax + rax]
437480: lea r9, [r9 + 0x28]
437487: cmp rdx, rcx
43748a: movaps xmm1, xmmword ptr [rsi - 0xe]
43748e: jb 0x437497
437490: lea r9, [r9 - 7]
437497: lea rdx, [rdx - 0x40]
43749b: notrack jmp r9
43749f: ud2 
4374a1: prefetchnta byte ptr [rsi - 0x1c0]
4374a8: movaps xmm2, xmmword ptr [rsi - 0x1e]
4374ac: sub rdx, 0x40
4374b0: movaps xmm3, xmmword ptr [rsi - 0x2e]
4374b4: movaps xmm4, xmmword ptr [rsi - 0x3e]
4374b8: movaps xmm5, xmmword ptr [rsi - 0x4e]
4374bc: lea rsi, [rsi - 0x40]
4374c0: palignr xmm1, xmm2, 0xe
4374c6: palignr xmm2, xmm3, 0xe
4374cc: palignr xmm3, xmm4, 0xe
4374d2: palignr xmm4, xmm5, 0xe
4374d8: movaps xmmword ptr [rdi - 0x10], xmm1
4374dc: movaps xmm1, xmm5
4374df: movaps xmmword ptr [rdi - 0x20], xmm2
4374e3: lea rdi, [rdi - 0x40]
4374e7: movaps xmmword ptr [rdi + 0x10], xmm3
4374eb: jb 0x4374f6
4374ed: movaps xmmword ptr [rdi], xmm4
4374f0: notrack jmp r9
4374f4: ud2 
4374f6: movaps xmmword ptr [rdi], xmm4
4374f9: lea rdx, [rdx + 0x40]
4374fd: movdqu xmmword ptr [r8], xmm0
437502: lea r11, [rip + 0x601f7]
437509: movsxd rdx, dword ptr [r11 + rdx*4]
43750d: lea rdx, [r11 + rdx]
437511: notrack jmp rdx
437514: ud2 
437516: nop word ptr cs:[rax + rax]
437520: lea r9, [r9 + 0x28]
437527: cmp rdx, rcx
43752a: movaps xmm1, xmmword ptr [rsi - 0xf]
43752e: jb 0x437537
437530: lea r9, [r9 - 7]
437537: lea rdx, [rdx - 0x40]
43753b: notrack jmp r9
43753f: ud2 
437541: prefetchnta byte ptr [rsi + 0x1c0]
437548: sub rdx, 0x40
43754c: movaps xmm2, xmmword ptr [rsi + 1]
437550: movaps xmm3, xmmword ptr [rsi + 0x11]
437554: movaps xmm4, xmmword ptr [rsi + 0x21]
437558: movaps xmm5, xmmword ptr [rsi + 0x31]
43755c: movdqa xmm6, xmm5
437560: palignr xmm5, xmm4, 0xf
437566: lea rsi, [rsi + 0x40]
43756a: palignr xmm4, xmm3, 0xf
437570: palignr xmm3, xmm2, 0xf
437576: lea rdi, [rdi + 0x40]
43757a: palignr xmm2, xmm1, 0xf
437580: movdqa xmm1, xmm6
437584: movdqa xmmword ptr [rdi - 0x40], xmm2
437589: movaps xmmword ptr [rdi - 0x30], xmm3
43758d: jb 0x43759d
43758f: movaps xmmword ptr [rdi - 0x20], xmm4
437593: movaps xmmword ptr [rdi - 0x10], xmm5
437597: notrack jmp r9
43759b: ud2 
43759d: movaps xmmword ptr [rdi - 0x20], xmm4
4375a1: lea rdx, [rdx + 0x40]
4375a5: movaps xmmword ptr [rdi - 0x10], xmm5
4375a9: add rdi, rdx
4375ac: movdqu xmmword ptr [r8], xmm0
4375b1: add rsi, rdx
4375b4: lea r11, [rip + 0x60145]
4375bb: movsxd rdx, dword ptr [r11 + rdx*4]
4375bf: lea rdx, [r11 + rdx]
4375c3: notrack jmp rdx
4375c6: ud2 
4375c8: nop dword ptr [rax + rax]
4375d0: lea r9, [r9 + 0x28]
4375d7: cmp rdx, rcx
4375da: movaps xmm1, xmmword ptr [rsi - 0xf]
4375de: jb 0x4375e7
4375e0: lea r9, [r9 - 7]
4375e7: lea rdx, [rdx - 0x40]
4375eb: notrack jmp r9
4375ef: ud2 
4375f1: prefetchnta byte ptr [rsi - 0x1c0]
4375f8: movaps xmm2, xmmword ptr [rsi - 0x1f]
4375fc: sub rdx, 0x40
437600: movaps xmm3, xmmword ptr [rsi - 0x2f]
437604: movaps xmm4, xmmword ptr [rsi - 0x3f]
437608: movaps xmm5, xmmword ptr [rsi - 0x4f]
43760c: lea rsi, [rsi - 0x40]
437610: palignr xmm1, xmm2, 0xf
437616: palignr xmm2, xmm3, 0xf
43761c: palignr xmm3, xmm4, 0xf
437622: palignr xmm4, xmm5, 0xf
437628: movaps xmmword ptr [rdi - 0x10], xmm1
43762c: movaps xmm1, xmm5
43762f: movaps xmmword ptr [rdi - 0x20], xmm2
437633: lea rdi, [rdi - 0x40]
437637: movaps xmmword ptr [rdi + 0x10], xmm3
43763b: jb 0x437646
43763d: movaps xmmword ptr [rdi], xmm4
437640: notrack jmp r9
437644: ud2 
437646: movaps xmmword ptr [rdi], xmm4
437649: lea rdx, [rdx + 0x40]
43764d: movdqu xmmword ptr [r8], xmm0
437652: lea r11, [rip + 0x600a7]
437659: movsxd rdx, dword ptr [r11 + rdx*4]
43765d: lea rdx, [r11 + rdx]
437661: notrack jmp rdx
437664: ud2 
437666: nop word ptr cs:[rax + rax]
437670: movdqu xmm0, xmmword ptr [rsi - 0x48]
437675: movdqu xmm1, xmmword ptr [rsi - 0x38]
43767a: mov r8, qword ptr [rsi - 0x28]
43767e: mov r9, qword ptr [rsi - 0x20]
437682: mov r10, qword ptr [rsi - 0x18]
437686: mov r11, qword ptr [rsi - 0x10]
43768a: mov rcx, qword ptr [rsi - 8]
43768e: movdqu xmmword ptr [rdi - 0x48], xmm0
437693: movdqu xmmword ptr [rdi - 0x38], xmm1
437698: mov qword ptr [rdi - 0x28], r8
43769c: mov qword ptr [rdi - 0x20], r9
4376a0: mov qword ptr [rdi - 0x18], r10
4376a4: mov qword ptr [rdi - 0x10], r11
4376a8: mov qword ptr [rdi - 8], rcx
4376ac: ret 
4376ad: nop dword ptr [rax]
4376b0: movdqu xmm0, xmmword ptr [rsi - 0x40]
4376b5: mov rcx, qword ptr [rsi - 0x30]
4376b9: mov r8, qword ptr [rsi - 0x28]
4376bd: mov r9, qword ptr [rsi - 0x20]
4376c1: mov r10, qword ptr [rsi - 0x18]
4376c5: mov r11, qword ptr [rsi - 0x10]
4376c9: mov rdx, qword ptr [rsi - 8]
4376cd: movdqu xmmword ptr [rdi - 0x40], xmm0
4376d2: mov qword ptr [rdi - 0x30], rcx
4376d6: mov qword ptr [rdi - 0x28], r8
4376da: mov qword ptr [rdi - 0x20], r9
4376de: mov qword ptr [rdi - 0x18], r10
4376e2: mov qword ptr [rdi - 0x10], r11
4376e6: mov qword ptr [rdi - 8], rdx
4376ea: ret 
4376eb: nop dword ptr [rax + rax]
4376f0: movdqu xmm0, xmmword ptr [rsi - 0x38]
4376f5: mov r8, qword ptr [rsi - 0x28]
4376f9: mov r9, qword ptr [rsi - 0x20]
4376fd: mov r10, qword ptr [rsi - 0x18]
437701: mov r11, qword ptr [rsi - 0x10]
437705: mov rcx, qword ptr [rsi - 8]
437709: movdqu xmmword ptr [rdi - 0x38], xmm0
43770e: mov qword ptr [rdi - 0x28], r8
437712: mov qword ptr [rdi - 0x20], r9
437716: mov qword ptr [rdi - 0x18], r10
43771a: mov qword ptr [rdi - 0x10], r11
43771e: mov qword ptr [rdi - 8], rcx
437722: ret 
437723: nop word ptr cs:[rax + rax]
43772e: nop 
437730: mov rcx, qword ptr [rsi - 0x30]
437734: mov r8, qword ptr [rsi - 0x28]
437738: mov r9, qword ptr [rsi - 0x20]
43773c: mov r10, qword ptr [rsi - 0x18]
437740: mov r11, qword ptr [rsi - 0x10]
437744: mov rdx, qword ptr [rsi - 8]
437748: mov qword ptr [rdi - 0x30], rcx
43774c: mov qword ptr [rdi - 0x28], r8
437750: mov qword ptr [rdi - 0x20], r9
437754: mov qword ptr [rdi - 0x18], r10
437758: mov qword ptr [rdi - 0x10], r11
43775c: mov qword ptr [rdi - 8], rdx
437760: ret 
437761: nop word ptr cs:[rax + rax]
43776c: nop dword ptr [rax]
437770: mov r8, qword ptr [rsi - 0x28]
437774: mov r9, qword ptr [rsi - 0x20]
437778: mov r10, qword ptr [rsi - 0x18]
43777c: mov r11, qword ptr [rsi - 0x10]
437780: mov rdx, qword ptr [rsi - 8]
437784: mov qword ptr [rdi - 0x28], r8
437788: mov qword ptr [rdi - 0x20], r9
43778c: mov qword ptr [rdi - 0x18], r10
437790: mov qword ptr [rdi - 0x10], r11
437794: mov qword ptr [rdi - 8], rdx
437798: ret 
437799: nop dword ptr [rax]
4377a0: mov r9, qword ptr [rsi - 0x20]
4377a4: mov r10, qword ptr [rsi - 0x18]
4377a8: mov r11, qword ptr [rsi - 0x10]
4377ac: mov rdx, qword ptr [rsi - 8]
4377b0: mov qword ptr [rdi - 0x20], r9
4377b4: mov qword ptr [rdi - 0x18], r10
4377b8: mov qword ptr [rdi - 0x10], r11
4377bc: mov qword ptr [rdi - 8], rdx
4377c0: ret 
4377c1: nop word ptr cs:[rax + rax]
4377cc: nop dword ptr [rax]
4377d0: mov r10, qword ptr [rsi - 0x18]
4377d4: mov r11, qword ptr [rsi - 0x10]
4377d8: mov rdx, qword ptr [rsi - 8]
4377dc: mov qword ptr [rdi - 0x18], r10
4377e0: mov qword ptr [rdi - 0x10], r11
4377e4: mov qword ptr [rdi - 8], rdx
4377e8: ret 
4377e9: nop dword ptr [rax]
4377f0: mov r11, qword ptr [rsi - 0x10]
4377f4: mov rdx, qword ptr [rsi - 8]
4377f8: mov qword ptr [rdi - 0x10], r11
4377fc: mov qword ptr [rdi - 8], rdx
437800: ret 
437801: nop word ptr cs:[rax + rax]
43780c: nop dword ptr [rax]
437810: mov rdx, qword ptr [rsi - 8]
437814: mov qword ptr [rdi - 8], rdx
437818: ret 
437819: nop dword ptr [rax]
437820: movdqu xmm0, xmmword ptr [rsi - 0x49]
437825: movdqu xmm1, xmmword ptr [rsi - 0x39]
43782a: mov rcx, qword ptr [rsi - 0x29]
43782e: mov r9, qword ptr [rsi - 0x21]
437832: mov r10, qword ptr [rsi - 0x19]
437836: mov r11, qword ptr [rsi - 0x11]
43783a: mov r8, qword ptr [rsi - 9]
43783e: mov edx, dword ptr [rsi - 4]
437841: movdqu xmmword ptr [rdi - 0x49], xmm0
437846: movdqu xmmword ptr [rdi - 0x39], xmm1
43784b: mov qword ptr [rdi - 0x29], rcx
43784f: mov qword ptr [rdi - 0x21], r9
437853: mov qword ptr [rdi - 0x19], r10
437857: mov qword ptr [rdi - 0x11], r11
43785b: mov qword ptr [rdi - 9], r8
43785f: mov dword ptr [rdi - 4], edx
437862: ret 
437863: nop word ptr cs:[rax + rax]
43786e: nop 
437870: movdqu xmm0, xmmword ptr [rsi - 0x41]
437875: movdqu xmm1, xmmword ptr [rsi - 0x31]
43787a: mov r9, qword ptr [rsi - 0x21]
43787e: mov r10, qword ptr [rsi - 0x19]
437882: mov r11, qword ptr [rsi - 0x11]
437886: mov rcx, qword ptr [rsi - 9]
43788a: mov edx, dword ptr [rsi - 4]
43788d: movdqu xmmword ptr [rdi - 0x41], xmm0
437892: movdqu xmmword ptr [rdi - 0x31], xmm1
437897: mov qword ptr [rdi - 0x21], r9
43789b: mov qword ptr [rdi - 0x19], r10
43789f: mov qword ptr [rdi - 0x11], r11
4378a3: mov qword ptr [rdi - 9], rcx
4378a7: mov dword ptr [rdi - 4], edx
4378aa: ret 
4378ab: nop dword ptr [rax + rax]
4378b0: movdqu xmm0, xmmword ptr [rsi - 0x39]
4378b5: mov r8, qword ptr [rsi - 0x29]
4378b9: mov r9, qword ptr [rsi - 0x21]
4378bd: mov r10, qword ptr [rsi - 0x19]
4378c1: mov r11, qword ptr [rsi - 0x11]
4378c5: mov rcx, qword ptr [rsi - 9]
4378c9: mov edx, dword ptr [rsi - 4]
4378cc: movdqu xmmword ptr [rdi - 0x39], xmm0
4378d1: mov qword ptr [rdi - 0x29], r8
4378d5: mov qword ptr [rdi - 0x21], r9
4378d9: mov qword ptr [rdi - 0x19], r10
4378dd: mov qword ptr [rdi - 0x11], r11
4378e1: mov qword ptr [rdi - 9], rcx
4378e5: mov dword ptr [rdi - 4], edx
4378e8: ret 
4378e9: nop dword ptr [rax]
4378f0: movdqu xmm0, xmmword ptr [rsi - 0x31]
4378f5: mov r9, qword ptr [rsi - 0x21]
4378f9: mov r10, qword ptr [rsi - 0x19]
4378fd: mov r11, qword ptr [rsi - 0x11]
437901: mov rcx, qword ptr [rsi - 9]
437905: mov edx, dword ptr [rsi - 4]
437908: movdqu xmmword ptr [rdi - 0x31], xmm0
43790d: mov qword ptr [rdi - 0x21], r9
437911: mov qword ptr [rdi - 0x19], r10
437915: mov qword ptr [rdi - 0x11], r11
437919: mov qword ptr [rdi - 9], rcx
43791d: mov dword ptr [rdi - 4], edx
437920: ret 
437921: nop word ptr cs:[rax + rax]
43792c: nop dword ptr [rax]
437930: mov r8, qword ptr [rsi - 0x29]
437934: mov r9, qword ptr [rsi - 0x21]
437938: mov r10, qword ptr [rsi - 0x19]
43793c: mov r11, qword ptr [rsi - 0x11]
437940: mov rcx, qword ptr [rsi - 9]
437944: mov dl, byte ptr [rsi - 1]
437947: mov qword ptr [rdi - 0x29], r8
43794b: mov qword ptr [rdi - 0x21], r9
43794f: mov qword ptr [rdi - 0x19], r10
437953: mov qword ptr [rdi - 0x11], r11
437957: mov qword ptr [rdi - 9], rcx
43795b: mov byte ptr [rdi - 1], dl
43795e: ret 
43795f: nop 
437960: mov r9, qword ptr [rsi - 0x21]
437964: mov r10, qword ptr [rsi - 0x19]
437968: mov r11, qword ptr [rsi - 0x11]
43796c: mov rcx, qword ptr [rsi - 9]
437970: mov dl, byte ptr [rsi - 1]
437973: mov qword ptr [rdi - 0x21], r9
437977: mov qword ptr [rdi - 0x19], r10
43797b: mov qword ptr [rdi - 0x11], r11
43797f: mov qword ptr [rdi - 9], rcx
437983: mov byte ptr [rdi - 1], dl
437986: ret 
437987: nop word ptr [rax + rax]
437990: mov r10, qword ptr [rsi - 0x19]
437994: mov r11, qword ptr [rsi - 0x11]
437998: mov rcx, qword ptr [rsi - 9]
43799c: mov dl, byte ptr [rsi - 1]
43799f: mov qword ptr [rdi - 0x19], r10
4379a3: mov qword ptr [rdi - 0x11], r11
4379a7: mov qword ptr [rdi - 9], rcx
4379ab: mov byte ptr [rdi - 1], dl
4379ae: ret 
4379af: nop 
4379b0: mov r11, qword ptr [rsi - 0x11]
4379b4: mov rcx, qword ptr [rsi - 9]
4379b8: mov edx, dword ptr [rsi - 4]
4379bb: mov qword ptr [rdi - 0x11], r11
4379bf: mov qword ptr [rdi - 9], rcx
4379c3: mov dword ptr [rdi - 4], edx
4379c6: ret 
4379c7: nop word ptr [rax + rax]
4379d0: mov rcx, qword ptr [rsi - 9]
4379d4: mov edx, dword ptr [rsi - 4]
4379d7: mov qword ptr [rdi - 9], rcx
4379db: mov dword ptr [rdi - 4], edx
4379de: ret 
4379df: nop 
4379e0: mov dl, byte ptr [rsi - 1]
4379e3: mov byte ptr [rdi - 1], dl
4379e6: ret 
4379e7: nop word ptr [rax + rax]
4379f0: movdqu xmm0, xmmword ptr [rsi - 0x4a]
4379f5: movdqu xmm1, xmmword ptr [rsi - 0x3a]
4379fa: mov r8, qword ptr [rsi - 0x2a]
4379fe: mov r9, qword ptr [rsi - 0x22]
437a02: mov r10, qword ptr [rsi - 0x1a]
437a06: mov r11, qword ptr [rsi - 0x12]
437a0a: mov rcx, qword ptr [rsi - 0xa]
437a0e: mov edx, dword ptr [rsi - 4]
437a11: movdqu xmmword ptr [rdi - 0x4a], xmm0
437a16: movdqu xmmword ptr [rdi - 0x3a], xmm1
437a1b: mov qword ptr [rdi - 0x2a], r8
437a1f: mov qword ptr [rdi - 0x22], r9
437a23: mov qword ptr [rdi - 0x1a], r10
437a27: mov qword ptr [rdi - 0x12], r11
437a2b: mov qword ptr [rdi - 0xa], rcx
437a2f: mov dword ptr [rdi - 4], edx
437a32: ret 
437a33: nop word ptr cs:[rax + rax]
437a3e: nop 
437a40: movdqu xmm0, xmmword ptr [rsi - 0x42]
437a45: movdqu xmm1, xmmword ptr [rsi - 0x32]
437a4a: mov r8, qword ptr [rsi - 0x2a]
437a4e: mov r9, qword ptr [rsi - 0x22]
437a52: mov r10, qword ptr [rsi - 0x1a]
437a56: mov r11, qword ptr [rsi - 0x12]
437a5a: mov rcx, qword ptr [rsi - 0xa]
437a5e: mov edx, dword ptr [rsi - 4]
437a61: movdqu xmmword ptr [rdi - 0x42], xmm0
437a66: movdqu xmmword ptr [rdi - 0x32], xmm1
437a6b: mov qword ptr [rdi - 0x2a], r8
437a6f: mov qword ptr [rdi - 0x22], r9
437a73: mov qword ptr [rdi - 0x1a], r10
437a77: mov qword ptr [rdi - 0x12], r11
437a7b: mov qword ptr [rdi - 0xa], rcx
437a7f: mov dword ptr [rdi - 4], edx
437a82: ret 
437a83: nop word ptr cs:[rax + rax]
437a8e: nop 
437a90: movdqu xmm1, xmmword ptr [rsi - 0x3a]
437a95: mov r8, qword ptr [rsi - 0x2a]
437a99: mov r9, qword ptr [rsi - 0x22]
437a9d: mov r10, qword ptr [rsi - 0x1a]
437aa1: mov r11, qword ptr [rsi - 0x12]
437aa5: mov rcx, qword ptr [rsi - 0xa]
437aa9: mov edx, dword ptr [rsi - 4]
437aac: movdqu xmmword ptr [rdi - 0x3a], xmm1
437ab1: mov qword ptr [rdi - 0x2a], r8
437ab5: mov qword ptr [rdi - 0x22], r9
437ab9: mov qword ptr [rdi - 0x1a], r10
437abd: mov qword ptr [rdi - 0x12], r11
437ac1: mov qword ptr [rdi - 0xa], rcx
437ac5: mov dword ptr [rdi - 4], edx
437ac8: ret 
437ac9: nop dword ptr [rax]
437ad0: movdqu xmm0, xmmword ptr [rsi - 0x32]
437ad5: mov r9, qword ptr [rsi - 0x22]
437ad9: mov r10, qword ptr [rsi - 0x1a]
437add: mov r11, qword ptr [rsi - 0x12]
437ae1: mov rcx, qword ptr [rsi - 0xa]
437ae5: mov edx, dword ptr [rsi - 4]
437ae8: movdqu xmmword ptr [rdi - 0x32], xmm0
437aed: mov qword ptr [rdi - 0x22], r9
437af1: mov qword ptr [rdi - 0x1a], r10
437af5: mov qword ptr [rdi - 0x12], r11
437af9: mov qword ptr [rdi - 0xa], rcx
437afd: mov dword ptr [rdi - 4], edx
437b00: ret 
437b01: nop word ptr cs:[rax + rax]
437b0c: nop dword ptr [rax]
437b10: mov r8, qword ptr [rsi - 0x2a]
437b14: mov r9, qword ptr [rsi - 0x22]
437b18: mov r10, qword ptr [rsi - 0x1a]
437b1c: mov r11, qword ptr [rsi - 0x12]
437b20: mov rcx, qword ptr [rsi - 0xa]
437b24: mov edx, dword ptr [rsi - 4]
437b27: mov qword ptr [rdi - 0x2a], r8
437b2b: mov qword ptr [rdi - 0x22], r9
437b2f: mov qword ptr [rdi - 0x1a], r10
437b33: mov qword ptr [rdi - 0x12], r11
437b37: mov qword ptr [rdi - 0xa], rcx
437b3b: mov dword ptr [rdi - 4], edx
437b3e: ret 
437b3f: nop 
437b40: mov r9, qword ptr [rsi - 0x22]
437b44: mov r10, qword ptr [rsi - 0x1a]
437b48: mov r11, qword ptr [rsi - 0x12]
437b4c: mov rcx, qword ptr [rsi - 0xa]
437b50: mov edx, dword ptr [rsi - 4]
437b53: mov qword ptr [rdi - 0x22], r9
437b57: mov qword ptr [rdi - 0x1a], r10
437b5b: mov qword ptr [rdi - 0x12], r11
437b5f: mov qword ptr [rdi - 0xa], rcx
437b63: mov dword ptr [rdi - 4], edx
437b66: ret 
437b67: nop word ptr [rax + rax]
437b70: mov r10, qword ptr [rsi - 0x1a]
437b74: mov r11, qword ptr [rsi - 0x12]
437b78: mov rcx, qword ptr [rsi - 0xa]
437b7c: mov edx, dword ptr [rsi - 4]
437b7f: mov qword ptr [rdi - 0x1a], r10
437b83: mov qword ptr [rdi - 0x12], r11
437b87: mov qword ptr [rdi - 0xa], rcx
437b8b: mov dword ptr [rdi - 4], edx
437b8e: ret 
437b8f: nop 
437b90: mov r11, qword ptr [rsi - 0x12]
437b94: mov rcx, qword ptr [rsi - 0xa]
437b98: mov edx, dword ptr [rsi - 4]
437b9b: mov qword ptr [rdi - 0x12], r11
437b9f: mov qword ptr [rdi - 0xa], rcx
437ba3: mov dword ptr [rdi - 4], edx
437ba6: ret 
437ba7: nop word ptr [rax + rax]
437bb0: mov rcx, qword ptr [rsi - 0xa]
437bb4: mov edx, dword ptr [rsi - 4]
437bb7: mov qword ptr [rdi - 0xa], rcx
437bbb: mov dword ptr [rdi - 4], edx
437bbe: ret 
437bbf: nop 
437bc0: mov dx, word ptr [rsi - 2]
437bc4: mov word ptr [rdi - 2], dx
437bc8: ret 
437bc9: nop dword ptr [rax]
437bd0: movdqu xmm0, xmmword ptr [rsi - 0x4b]
437bd5: movdqu xmm1, xmmword ptr [rsi - 0x3b]
437bda: mov r8, qword ptr [rsi - 0x2b]
437bde: mov r9, qword ptr [rsi - 0x23]
437be2: mov r10, qword ptr [rsi - 0x1b]
437be6: mov r11, qword ptr [rsi - 0x13]
437bea: mov rcx, qword ptr [rsi - 0xb]
437bee: mov edx, dword ptr [rsi - 4]
437bf1: movdqu xmmword ptr [rdi - 0x4b], xmm0
437bf6: movdqu xmmword ptr [rdi - 0x3b], xmm1
437bfb: mov qword ptr [rdi - 0x2b], r8
437bff: mov qword ptr [rdi - 0x23], r9
437c03: mov qword ptr [rdi - 0x1b], r10
437c07: mov qword ptr [rdi - 0x13], r11
437c0b: mov qword ptr [rdi - 0xb], rcx
437c0f: mov dword ptr [rdi - 4], edx
437c12: ret 
437c13: nop word ptr cs:[rax + rax]
437c1e: nop 
437c20: movdqu xmm0, xmmword ptr [rsi - 0x43]
437c25: movdqu xmm1, xmmword ptr [rsi - 0x3b]
437c2a: mov r8, qword ptr [rsi - 0x2b]
437c2e: mov r9, qword ptr [rsi - 0x23]
437c32: mov r10, qword ptr [rsi - 0x1b]
437c36: mov r11, qword ptr [rsi - 0x13]
437c3a: mov rcx, qword ptr [rsi - 0xb]
437c3e: mov edx, dword ptr [rsi - 4]
437c41: movdqu xmmword ptr [rdi - 0x43], xmm0
437c46: movdqu xmmword ptr [rdi - 0x3b], xmm1
437c4b: mov qword ptr [rdi - 0x2b], r8
437c4f: mov qword ptr [rdi - 0x23], r9
437c53: mov qword ptr [rdi - 0x1b], r10
437c57: mov qword ptr [rdi - 0x13], r11
437c5b: mov qword ptr [rdi - 0xb], rcx
437c5f: mov dword ptr [rdi - 4], edx
437c62: ret 
437c63: nop word ptr cs:[rax + rax]
437c6e: nop 
437c70: movdqu xmm0, xmmword ptr [rsi - 0x3b]
437c75: mov r8, qword ptr [rsi - 0x2b]
437c79: mov r9, qword ptr [rsi - 0x23]
437c7d: mov r10, qword ptr [rsi - 0x1b]
437c81: mov r11, qword ptr [rsi - 0x13]
437c85: mov rcx, qword ptr [rsi - 0xb]
437c89: mov edx, dword ptr [rsi - 4]
437c8c: movdqu xmmword ptr [rdi - 0x3b], xmm0
437c91: mov qword ptr [rdi - 0x2b], r8
437c95: mov qword ptr [rdi - 0x23], r9
437c99: mov qword ptr [rdi - 0x1b], r10
437c9d: mov qword ptr [rdi - 0x13], r11
437ca1: mov qword ptr [rdi - 0xb], rcx
437ca5: mov dword ptr [rdi - 4], edx
437ca8: ret 
437ca9: nop dword ptr [rax]
437cb0: movdqu xmm0, xmmword ptr [rsi - 0x33]
437cb5: mov r9, qword ptr [rsi - 0x23]
437cb9: mov r10, qword ptr [rsi - 0x1b]
437cbd: mov r11, qword ptr [rsi - 0x13]
437cc1: mov rcx, qword ptr [rsi - 0xb]
437cc5: mov edx, dword ptr [rsi - 4]
437cc8: movdqu xmmword ptr [rdi - 0x33], xmm0
437ccd: mov qword ptr [rdi - 0x23], r9
437cd1: mov qword ptr [rdi - 0x1b], r10
437cd5: mov qword ptr [rdi - 0x13], r11
437cd9: mov qword ptr [rdi - 0xb], rcx
437cdd: mov dword ptr [rdi - 4], edx
437ce0: ret 
437ce1: nop word ptr cs:[rax + rax]
437cec: nop dword ptr [rax]
437cf0: mov r8, qword ptr [rsi - 0x2b]
437cf4: mov r9, qword ptr [rsi - 0x23]
437cf8: mov r10, qword ptr [rsi - 0x1b]
437cfc: mov r11, qword ptr [rsi - 0x13]
437d00: mov rcx, qword ptr [rsi - 0xb]
437d04: mov edx, dword ptr [rsi - 4]
437d07: mov qword ptr [rdi - 0x2b], r8
437d0b: mov qword ptr [rdi - 0x23], r9
437d0f: mov qword ptr [rdi - 0x1b], r10
437d13: mov qword ptr [rdi - 0x13], r11
437d17: mov qword ptr [rdi - 0xb], rcx
437d1b: mov dword ptr [rdi - 4], edx
437d1e: ret 
437d1f: nop 
437d20: mov r9, qword ptr [rsi - 0x23]
437d24: mov r10, qword ptr [rsi - 0x1b]
437d28: mov r11, qword ptr [rsi - 0x13]
437d2c: mov rcx, qword ptr [rsi - 0xb]
437d30: mov edx, dword ptr [rsi - 4]
437d33: mov qword ptr [rdi - 0x23], r9
437d37: mov qword ptr [rdi - 0x1b], r10
437d3b: mov qword ptr [rdi - 0x13], r11
437d3f: mov qword ptr [rdi - 0xb], rcx
437d43: mov dword ptr [rdi - 4], edx
437d46: ret 
437d47: nop word ptr [rax + rax]
437d50: mov r10, qword ptr [rsi - 0x1b]
437d54: mov r11, qword ptr [rsi - 0x13]
437d58: mov rcx, qword ptr [rsi - 0xb]
437d5c: mov edx, dword ptr [rsi - 4]
437d5f: mov qword ptr [rdi - 0x1b], r10
437d63: mov qword ptr [rdi - 0x13], r11
437d67: mov qword ptr [rdi - 0xb], rcx
437d6b: mov dword ptr [rdi - 4], edx
437d6e: ret 
437d6f: nop 
437d70: mov r11, qword ptr [rsi - 0x13]
437d74: mov rcx, qword ptr [rsi - 0xb]
437d78: mov edx, dword ptr [rsi - 4]
437d7b: mov qword ptr [rdi - 0x13], r11
437d7f: mov qword ptr [rdi - 0xb], rcx
437d83: mov dword ptr [rdi - 4], edx
437d86: ret 
437d87: nop word ptr [rax + rax]
437d90: mov rcx, qword ptr [rsi - 0xb]
437d94: mov edx, dword ptr [rsi - 4]
437d97: mov qword ptr [rdi - 0xb], rcx
437d9b: mov dword ptr [rdi - 4], edx
437d9e: ret 
437d9f: nop 
437da0: mov dx, word ptr [rsi - 3]
437da4: mov cx, word ptr [rsi - 2]
437da8: mov word ptr [rdi - 3], dx
437dac: mov word ptr [rdi - 2], cx
437db0: ret 
437db1: nop word ptr cs:[rax + rax]
437dbc: nop dword ptr [rax]
437dc0: movdqu xmm0, xmmword ptr [rsi - 0x4c]
437dc5: movdqu xmm1, xmmword ptr [rsi - 0x3c]
437dca: mov r8, qword ptr [rsi - 0x2c]
437dce: mov r9, qword ptr [rsi - 0x24]
437dd2: mov r10, qword ptr [rsi - 0x1c]
437dd6: mov r11, qword ptr [rsi - 0x14]
437dda: mov rcx, qword ptr [rsi - 0xc]
437dde: mov edx, dword ptr [rsi - 4]
437de1: movdqu xmmword ptr [rdi - 0x4c], xmm0
437de6: movdqu xmmword ptr [rdi - 0x3c], xmm1
437deb: mov qword ptr [rdi - 0x2c], r8
437def: mov qword ptr [rdi - 0x24], r9
437df3: mov qword ptr [rdi - 0x1c], r10
437df7: mov qword ptr [rdi - 0x14], r11
437dfb: mov qword ptr [rdi - 0xc], rcx
437dff: mov dword ptr [rdi - 4], edx
437e02: ret 
437e03: nop word ptr cs:[rax + rax]
437e0e: nop 
437e10: movdqu xmm0, xmmword ptr [rsi - 0x44]
437e15: movdqu xmm1, xmmword ptr [rsi - 0x34]
437e1a: mov r9, qword ptr [rsi - 0x24]
437e1e: mov r10, qword ptr [rsi - 0x1c]
437e22: mov r11, qword ptr [rsi - 0x14]
437e26: mov rcx, qword ptr [rsi - 0xc]
437e2a: mov edx, dword ptr [rsi - 4]
437e2d: movdqu xmmword ptr [rdi - 0x44], xmm0
437e32: movdqu xmmword ptr [rdi - 0x34], xmm1
437e37: mov qword ptr [rdi - 0x24], r9
437e3b: mov qword ptr [rdi - 0x1c], r10
437e3f: mov qword ptr [rdi - 0x14], r11
437e43: mov qword ptr [rdi - 0xc], rcx
437e47: mov dword ptr [rdi - 4], edx
437e4a: ret 
437e4b: nop dword ptr [rax + rax]
437e50: movdqu xmm0, xmmword ptr [rsi - 0x3c]
437e55: mov r8, qword ptr [rsi - 0x2c]
437e59: mov r9, qword ptr [rsi - 0x24]
437e5d: mov r10, qword ptr [rsi - 0x1c]
437e61: mov r11, qword ptr [rsi - 0x14]
437e65: mov rcx, qword ptr [rsi - 0xc]
437e69: mov edx, dword ptr [rsi - 4]
437e6c: movdqu xmmword ptr [rdi - 0x3c], xmm0
437e71: mov qword ptr [rdi - 0x2c], r8
437e75: mov qword ptr [rdi - 0x24], r9
437e79: mov qword ptr [rdi - 0x1c], r10
437e7d: mov qword ptr [rdi - 0x14], r11
437e81: mov qword ptr [rdi - 0xc], rcx
437e85: mov dword ptr [rdi - 4], edx
437e88: ret 
437e89: nop dword ptr [rax]
437e90: movdqu xmm0, xmmword ptr [rsi - 0x34]
437e95: mov r9, qword ptr [rsi - 0x24]
437e99: mov r10, qword ptr [rsi - 0x1c]
437e9d: mov r11, qword ptr [rsi - 0x14]
437ea1: mov rcx, qword ptr [rsi - 0xc]
437ea5: mov edx, dword ptr [rsi - 4]
437ea8: movdqu xmmword ptr [rdi - 0x34], xmm0
437ead: mov qword ptr [rdi - 0x24], r9
437eb1: mov qword ptr [rdi - 0x1c], r10
437eb5: mov qword ptr [rdi - 0x14], r11
437eb9: mov qword ptr [rdi - 0xc], rcx
437ebd: mov dword ptr [rdi - 4], edx
437ec0: ret 
437ec1: nop word ptr cs:[rax + rax]
437ecc: nop dword ptr [rax]
437ed0: mov r8, qword ptr [rsi - 0x2c]
437ed4: mov r9, qword ptr [rsi - 0x24]
437ed8: mov r10, qword ptr [rsi - 0x1c]
437edc: mov r11, qword ptr [rsi - 0x14]
437ee0: mov rcx, qword ptr [rsi - 0xc]
437ee4: mov edx, dword ptr [rsi - 4]
437ee7: mov qword ptr [rdi - 0x2c], r8
437eeb: mov qword ptr [rdi - 0x24], r9
437eef: mov qword ptr [rdi - 0x1c], r10
437ef3: mov qword ptr [rdi - 0x14], r11
437ef7: mov qword ptr [rdi - 0xc], rcx
437efb: mov dword ptr [rdi - 4], edx
437efe: ret 
437eff: nop 
437f00: mov r9, qword ptr [rsi - 0x24]
437f04: mov r10, qword ptr [rsi - 0x1c]
437f08: mov r11, qword ptr [rsi - 0x14]
437f0c: mov rcx, qword ptr [rsi - 0xc]
437f10: mov edx, dword ptr [rsi - 4]
437f13: mov qword ptr [rdi - 0x24], r9
437f17: mov qword ptr [rdi - 0x1c], r10
437f1b: mov qword ptr [rdi - 0x14], r11
437f1f: mov qword ptr [rdi - 0xc], rcx
437f23: mov dword ptr [rdi - 4], edx
437f26: ret 
437f27: nop word ptr [rax + rax]
437f30: mov r10, qword ptr [rsi - 0x1c]
437f34: mov r11, qword ptr [rsi - 0x14]
437f38: mov rcx, qword ptr [rsi - 0xc]
437f3c: mov edx, dword ptr [rsi - 4]
437f3f: mov qword ptr [rdi - 0x1c], r10
437f43: mov qword ptr [rdi - 0x14], r11
437f47: mov qword ptr [rdi - 0xc], rcx
437f4b: mov dword ptr [rdi - 4], edx
437f4e: ret 
437f4f: nop 
437f50: mov r11, qword ptr [rsi - 0x14]
437f54: mov rcx, qword ptr [rsi - 0xc]
437f58: mov edx, dword ptr [rsi - 4]
437f5b: mov qword ptr [rdi - 0x14], r11
437f5f: mov qword ptr [rdi - 0xc], rcx
437f63: mov dword ptr [rdi - 4], edx
437f66: ret 
437f67: nop word ptr [rax + rax]
437f70: mov rcx, qword ptr [rsi - 0xc]
437f74: mov edx, dword ptr [rsi - 4]
437f77: mov qword ptr [rdi - 0xc], rcx
437f7b: mov dword ptr [rdi - 4], edx
437f7e: ret 
437f7f: nop 
437f80: mov edx, dword ptr [rsi - 4]
437f83: mov dword ptr [rdi - 4], edx
437f86: ret 
437f87: nop word ptr [rax + rax]
437f90: movdqu xmm0, xmmword ptr [rsi - 0x4d]
437f95: movdqu xmm1, xmmword ptr [rsi - 0x3d]
437f9a: mov r8, qword ptr [rsi - 0x2d]
437f9e: mov r9, qword ptr [rsi - 0x25]
437fa2: mov r10, qword ptr [rsi - 0x1d]
437fa6: mov r11, qword ptr [rsi - 0x15]
437faa: mov rcx, qword ptr [rsi - 0xd]
437fae: mov rdx, qword ptr [rsi - 8]
437fb2: movdqu xmmword ptr [rdi - 0x4d], xmm0
437fb7: movdqu xmmword ptr [rdi - 0x3d], xmm1
437fbc: mov qword ptr [rdi - 0x2d], r8
437fc0: mov qword ptr [rdi - 0x25], r9
437fc4: mov qword ptr [rdi - 0x1d], r10
437fc8: mov qword ptr [rdi - 0x15], r11
437fcc: mov qword ptr [rdi - 0xd], rcx
437fd0: mov qword ptr [rdi - 8], rdx
437fd4: ret 
437fd5: nop word ptr cs:[rax + rax]
437fe0: movdqu xmm0, xmmword ptr [rsi - 0x45]
437fe5: movdqu xmm1, xmmword ptr [rsi - 0x35]
437fea: mov r9, qword ptr [rsi - 0x25]
437fee: mov r10, qword ptr [rsi - 0x1d]
437ff2: mov r11, qword ptr [rsi - 0x15]
437ff6: mov rcx, qword ptr [rsi - 0xd]
437ffa: mov rdx, qword ptr [rsi - 8]
437ffe: movdqu xmmword ptr [rdi - 0x45], xmm0
438003: movdqu xmmword ptr [rdi - 0x35], xmm1
438008: mov qword ptr [rdi - 0x25], r9
43800c: mov qword ptr [rdi - 0x1d], r10
438010: mov qword ptr [rdi - 0x15], r11
438014: mov qword ptr [rdi - 0xd], rcx
438018: mov qword ptr [rdi - 8], rdx
43801c: ret 
43801d: nop dword ptr [rax]
438020: movdqu xmm0, xmmword ptr [rsi - 0x3d]
438025: mov r8, qword ptr [rsi - 0x2d]
438029: mov r9, qword ptr [rsi - 0x25]
43802d: mov r10, qword ptr [rsi - 0x1d]
438031: mov r11, qword ptr [rsi - 0x15]
438035: mov rcx, qword ptr [rsi - 0xd]
438039: mov rdx, qword ptr [rsi - 8]
43803d: movdqu xmmword ptr [rdi - 0x3d], xmm0
438042: mov qword ptr [rdi - 0x2d], r8
438046: mov qword ptr [rdi - 0x25], r9
43804a: mov qword ptr [rdi - 0x1d], r10
43804e: mov qword ptr [rdi - 0x15], r11
438052: mov qword ptr [rdi - 0xd], rcx
438056: mov qword ptr [rdi - 8], rdx
43805a: ret 
43805b: nop dword ptr [rax + rax]
438060: movdqu xmm0, xmmword ptr [rsi - 0x35]
438065: mov r8, qword ptr [rsi - 0x2d]
438069: mov r9, qword ptr [rsi - 0x25]
43806d: mov r10, qword ptr [rsi - 0x1d]
438071: mov r11, qword ptr [rsi - 0x15]
438075: mov rcx, qword ptr [rsi - 0xd]
438079: mov rdx, qword ptr [rsi - 8]
43807d: movdqu xmmword ptr [rdi - 0x35], xmm0
438082: mov qword ptr [rdi - 0x25], r9
438086: mov qword ptr [rdi - 0x1d], r10
43808a: mov qword ptr [rdi - 0x15], r11
43808e: mov qword ptr [rdi - 0xd], rcx
438092: mov qword ptr [rdi - 8], rdx
438096: ret 
438097: nop word ptr [rax + rax]
4380a0: mov r8, qword ptr [rsi - 0x2d]
4380a4: mov r9, qword ptr [rsi - 0x25]
4380a8: mov r10, qword ptr [rsi - 0x1d]
4380ac: mov r11, qword ptr [rsi - 0x15]
4380b0: mov rcx, qword ptr [rsi - 0xd]
4380b4: mov rdx, qword ptr [rsi - 8]
4380b8: mov qword ptr [rdi - 0x2d], r8
4380bc: mov qword ptr [rdi - 0x25], r9
4380c0: mov qword ptr [rdi - 0x1d], r10
4380c4: mov qword ptr [rdi - 0x15], r11
4380c8: mov qword ptr [rdi - 0xd], rcx
4380cc: mov qword ptr [rdi - 8], rdx
4380d0: ret 
4380d1: nop word ptr cs:[rax + rax]
4380dc: nop dword ptr [rax]
4380e0: mov r9, qword ptr [rsi - 0x25]
4380e4: mov r10, qword ptr [rsi - 0x1d]
4380e8: mov r11, qword ptr [rsi - 0x15]
4380ec: mov rcx, qword ptr [rsi - 0xd]
4380f0: mov rdx, qword ptr [rsi - 8]
4380f4: mov qword ptr [rdi - 0x25], r9
4380f8: mov qword ptr [rdi - 0x1d], r10
4380fc: mov qword ptr [rdi - 0x15], r11
438100: mov qword ptr [rdi - 0xd], rcx
438104: mov qword ptr [rdi - 8], rdx
438108: ret 
438109: nop dword ptr [rax]
438110: mov r10, qword ptr [rsi - 0x1d]
438114: mov r11, qword ptr [rsi - 0x15]
438118: mov rcx, qword ptr [rsi - 0xd]
43811c: mov rdx, qword ptr [rsi - 8]
438120: mov qword ptr [rdi - 0x1d], r10
438124: mov qword ptr [rdi - 0x15], r11
438128: mov qword ptr [rdi - 0xd], rcx
43812c: mov qword ptr [rdi - 8], rdx
438130: ret 
438131: nop word ptr cs:[rax + rax]
43813c: nop dword ptr [rax]
438140: mov r11, qword ptr [rsi - 0x15]
438144: mov rcx, qword ptr [rsi - 0xd]
438148: mov rdx, qword ptr [rsi - 8]
43814c: mov qword ptr [rdi - 0x15], r11
438150: mov qword ptr [rdi - 0xd], rcx
438154: mov qword ptr [rdi - 8], rdx
438158: ret 
438159: nop dword ptr [rax]
438160: mov rcx, qword ptr [rsi - 0xd]
438164: mov rdx, qword ptr [rsi - 8]
438168: mov qword ptr [rdi - 0xd], rcx
43816c: mov qword ptr [rdi - 8], rdx
438170: ret 
438171: nop word ptr cs:[rax + rax]
43817c: nop dword ptr [rax]
438180: mov edx, dword ptr [rsi - 5]
438183: mov ecx, dword ptr [rsi - 4]
438186: mov dword ptr [rdi - 5], edx
438189: mov dword ptr [rdi - 4], ecx
43818c: ret 
43818d: nop dword ptr [rax]
438190: movdqu xmm0, xmmword ptr [rsi - 0x4e]
438195: movdqu xmm1, xmmword ptr [rsi - 0x3e]
43819a: mov r8, qword ptr [rsi - 0x2e]
43819e: mov r9, qword ptr [rsi - 0x26]
4381a2: mov r10, qword ptr [rsi - 0x1e]
4381a6: mov r11, qword ptr [rsi - 0x16]
4381aa: mov rcx, qword ptr [rsi - 0xe]
4381ae: mov rdx, qword ptr [rsi - 8]
4381b2: movdqu xmmword ptr [rdi - 0x4e], xmm0
4381b7: movdqu xmmword ptr [rdi - 0x3e], xmm1
4381bc: mov qword ptr [rdi - 0x2e], r8
4381c0: mov qword ptr [rdi - 0x26], r9
4381c4: mov qword ptr [rdi - 0x1e], r10
4381c8: mov qword ptr [rdi - 0x16], r11
4381cc: mov qword ptr [rdi - 0xe], rcx
4381d0: mov qword ptr [rdi - 8], rdx
4381d4: ret 
4381d5: nop word ptr cs:[rax + rax]
4381e0: movdqu xmm0, xmmword ptr [rsi - 0x46]
4381e5: movdqu xmm1, xmmword ptr [rsi - 0x36]
4381ea: mov r9, qword ptr [rsi - 0x26]
4381ee: mov r10, qword ptr [rsi - 0x1e]
4381f2: mov r11, qword ptr [rsi - 0x16]
4381f6: mov rcx, qword ptr [rsi - 0xe]
4381fa: mov rdx, qword ptr [rsi - 8]
4381fe: movdqu xmmword ptr [rdi - 0x46], xmm0
438203: movdqu xmmword ptr [rdi - 0x36], xmm1
438208: mov qword ptr [rdi - 0x26], r9
43820c: mov qword ptr [rdi - 0x1e], r10
438210: mov qword ptr [rdi - 0x16], r11
438214: mov qword ptr [rdi - 0xe], rcx
438218: mov qword ptr [rdi - 8], rdx
43821c: ret 
43821d: nop dword ptr [rax]
438220: movdqu xmm0, xmmword ptr [rsi - 0x3e]
438225: mov r8, qword ptr [rsi - 0x2e]
438229: mov r9, qword ptr [rsi - 0x26]
43822d: mov r10, qword ptr [rsi - 0x1e]
438231: mov r11, qword ptr [rsi - 0x16]
438235: mov rcx, qword ptr [rsi - 0xe]
438239: mov rdx, qword ptr [rsi - 8]
43823d: movdqu xmmword ptr [rdi - 0x3e], xmm0
438242: mov qword ptr [rdi - 0x2e], r8
438246: mov qword ptr [rdi - 0x26], r9
43824a: mov qword ptr [rdi - 0x1e], r10
43824e: mov qword ptr [rdi - 0x16], r11
438252: mov qword ptr [rdi - 0xe], rcx
438256: mov qword ptr [rdi - 8], rdx
43825a: ret 
43825b: nop dword ptr [rax + rax]
438260: movdqu xmm0, xmmword ptr [rsi - 0x36]
438265: mov r9, qword ptr [rsi - 0x26]
438269: mov r10, qword ptr [rsi - 0x1e]
43826d: mov r11, qword ptr [rsi - 0x16]
438271: mov rcx, qword ptr [rsi - 0xe]
438275: mov rdx, qword ptr [rsi - 8]
438279: movdqu xmmword ptr [rdi - 0x36], xmm0
43827e: mov qword ptr [rdi - 0x26], r9
438282: mov qword ptr [rdi - 0x1e], r10
438286: mov qword ptr [rdi - 0x16], r11
43828a: mov qword ptr [rdi - 0xe], rcx
43828e: mov qword ptr [rdi - 8], rdx
438292: ret 
438293: nop word ptr cs:[rax + rax]
43829e: nop 
4382a0: mov r8, qword ptr [rsi - 0x2e]
4382a4: mov r9, qword ptr [rsi - 0x26]
4382a8: mov r10, qword ptr [rsi - 0x1e]
4382ac: mov r11, qword ptr [rsi - 0x16]
4382b0: mov rcx, qword ptr [rsi - 0xe]
4382b4: mov rdx, qword ptr [rsi - 8]
4382b8: mov qword ptr [rdi - 0x2e], r8
4382bc: mov qword ptr [rdi - 0x26], r9
4382c0: mov qword ptr [rdi - 0x1e], r10
4382c4: mov qword ptr [rdi - 0x16], r11
4382c8: mov qword ptr [rdi - 0xe], rcx
4382cc: mov qword ptr [rdi - 8], rdx
4382d0: ret 
4382d1: nop word ptr cs:[rax + rax]
4382dc: nop dword ptr [rax]
4382e0: mov r9, qword ptr [rsi - 0x26]
4382e4: mov r10, qword ptr [rsi - 0x1e]
4382e8: mov r11, qword ptr [rsi - 0x16]
4382ec: mov rcx, qword ptr [rsi - 0xe]
4382f0: mov rdx, qword ptr [rsi - 8]
4382f4: mov qword ptr [rdi - 0x26], r9
4382f8: mov qword ptr [rdi - 0x1e], r10
4382fc: mov qword ptr [rdi - 0x16], r11
438300: mov qword ptr [rdi - 0xe], rcx
438304: mov qword ptr [rdi - 8], rdx
438308: ret 
438309: nop dword ptr [rax]
438310: mov r10, qword ptr [rsi - 0x1e]
438314: mov r11, qword ptr [rsi - 0x16]
438318: mov rcx, qword ptr [rsi - 0xe]
43831c: mov rdx, qword ptr [rsi - 8]
438320: mov qword ptr [rdi - 0x1e], r10
438324: mov qword ptr [rdi - 0x16], r11
438328: mov qword ptr [rdi - 0xe], rcx
43832c: mov qword ptr [rdi - 8], rdx
438330: ret 
438331: nop word ptr cs:[rax + rax]
43833c: nop dword ptr [rax]
438340: mov r11, qword ptr [rsi - 0x16]
438344: mov rcx, qword ptr [rsi - 0xe]
438348: mov rdx, qword ptr [rsi - 8]
43834c: mov qword ptr [rdi - 0x16], r11
438350: mov qword ptr [rdi - 0xe], rcx
438354: mov qword ptr [rdi - 8], rdx
438358: ret 
438359: nop dword ptr [rax]
438360: mov rcx, qword ptr [rsi - 0xe]
438364: mov rdx, qword ptr [rsi - 8]
438368: mov qword ptr [rdi - 0xe], rcx
43836c: mov qword ptr [rdi - 8], rdx
438370: ret 
438371: nop word ptr cs:[rax + rax]
43837c: nop dword ptr [rax]
438380: mov edx, dword ptr [rsi - 6]
438383: mov ecx, dword ptr [rsi - 4]
438386: mov dword ptr [rdi - 6], edx
438389: mov dword ptr [rdi - 4], ecx
43838c: ret 
43838d: nop dword ptr [rax]
438390: movdqu xmm0, xmmword ptr [rsi - 0x4f]
438395: movdqu xmm1, xmmword ptr [rsi - 0x3f]
43839a: mov r8, qword ptr [rsi - 0x2f]
43839e: mov r9, qword ptr [rsi - 0x27]
4383a2: mov r10, qword ptr [rsi - 0x1f]
4383a6: mov r11, qword ptr [rsi - 0x17]
4383aa: mov rcx, qword ptr [rsi - 0xf]
4383ae: mov rdx, qword ptr [rsi - 8]
4383b2: movdqu xmmword ptr [rdi - 0x4f], xmm0
4383b7: movdqu xmmword ptr [rdi - 0x3f], xmm1
4383bc: mov qword ptr [rdi - 0x2f], r8
4383c0: mov qword ptr [rdi - 0x27], r9
4383c4: mov qword ptr [rdi - 0x1f], r10
4383c8: mov qword ptr [rdi - 0x17], r11
4383cc: mov qword ptr [rdi - 0xf], rcx
4383d0: mov qword ptr [rdi - 8], rdx
4383d4: ret 
4383d5: nop word ptr cs:[rax + rax]
4383e0: movdqu xmm0, xmmword ptr [rsi - 0x47]
4383e5: movdqu xmm1, xmmword ptr [rsi - 0x37]
4383ea: mov r9, qword ptr [rsi - 0x27]
4383ee: mov r10, qword ptr [rsi - 0x1f]
4383f2: mov r11, qword ptr [rsi - 0x17]
4383f6: mov rcx, qword ptr [rsi - 0xf]
4383fa: mov rdx, qword ptr [rsi - 8]
4383fe: movdqu xmmword ptr [rdi - 0x47], xmm0
438403: movdqu xmmword ptr [rdi - 0x37], xmm1
438408: mov qword ptr [rdi - 0x27], r9
43840c: mov qword ptr [rdi - 0x1f], r10
438410: mov qword ptr [rdi - 0x17], r11
438414: mov qword ptr [rdi - 0xf], rcx
438418: mov qword ptr [rdi - 8], rdx
43841c: ret 
43841d: nop dword ptr [rax]
438420: movdqu xmm0, xmmword ptr [rsi - 0x3f]
438425: mov r8, qword ptr [rsi - 0x2f]
438429: mov r9, qword ptr [rsi - 0x27]
43842d: mov r10, qword ptr [rsi - 0x1f]
438431: mov r11, qword ptr [rsi - 0x17]
438435: mov rcx, qword ptr [rsi - 0xf]
438439: mov rdx, qword ptr [rsi - 8]
43843d: movdqu xmmword ptr [rdi - 0x3f], xmm0
438442: mov qword ptr [rdi - 0x2f], r8
438446: mov qword ptr [rdi - 0x27], r9
43844a: mov qword ptr [rdi - 0x1f], r10
43844e: mov qword ptr [rdi - 0x17], r11
438452: mov qword ptr [rdi - 0xf], rcx
438456: mov qword ptr [rdi - 8], rdx
43845a: ret 
43845b: nop dword ptr [rax + rax]
438460: movdqu xmm0, xmmword ptr [rsi - 0x37]
438465: mov r9, qword ptr [rsi - 0x27]
438469: mov r10, qword ptr [rsi - 0x1f]
43846d: mov r11, qword ptr [rsi - 0x17]
438471: mov rcx, qword ptr [rsi - 0xf]
438475: mov rdx, qword ptr [rsi - 8]
438479: movdqu xmmword ptr [rdi - 0x37], xmm0
43847e: mov qword ptr [rdi - 0x27], r9
438482: mov qword ptr [rdi - 0x1f], r10
438486: mov qword ptr [rdi - 0x17], r11
43848a: mov qword ptr [rdi - 0xf], rcx
43848e: mov qword ptr [rdi - 8], rdx
438492: ret 
438493: nop word ptr cs:[rax + rax]
43849e: nop 
4384a0: mov r8, qword ptr [rsi - 0x2f]
4384a4: mov r9, qword ptr [rsi - 0x27]
4384a8: mov r10, qword ptr [rsi - 0x1f]
4384ac: mov r11, qword ptr [rsi - 0x17]
4384b0: mov rcx, qword ptr [rsi - 0xf]
4384b4: mov rdx, qword ptr [rsi - 8]
4384b8: mov qword ptr [rdi - 0x2f], r8
4384bc: mov qword ptr [rdi - 0x27], r9
4384c0: mov qword ptr [rdi - 0x1f], r10
4384c4: mov qword ptr [rdi - 0x17], r11
4384c8: mov qword ptr [rdi - 0xf], rcx
4384cc: mov qword ptr [rdi - 8], rdx
4384d0: ret 
4384d1: nop word ptr cs:[rax + rax]
4384dc: nop dword ptr [rax]
4384e0: mov r9, qword ptr [rsi - 0x27]
4384e4: mov r10, qword ptr [rsi - 0x1f]
4384e8: mov r11, qword ptr [rsi - 0x17]
4384ec: mov rcx, qword ptr [rsi - 0xf]
4384f0: mov rdx, qword ptr [rsi - 8]
4384f4: mov qword ptr [rdi - 0x27], r9
4384f8: mov qword ptr [rdi - 0x1f], r10
4384fc: mov qword ptr [rdi - 0x17], r11
438500: mov qword ptr [rdi - 0xf], rcx
438504: mov qword ptr [rdi - 8], rdx
438508: ret 
438509: nop dword ptr [rax]
438510: mov r10, qword ptr [rsi - 0x1f]
438514: mov r11, qword ptr [rsi - 0x17]
438518: mov rcx, qword ptr [rsi - 0xf]
43851c: mov rdx, qword ptr [rsi - 8]
438520: mov qword ptr [rdi - 0x1f], r10
438524: mov qword ptr [rdi - 0x17], r11
438528: mov qword ptr [rdi - 0xf], rcx
43852c: mov qword ptr [rdi - 8], rdx
438530: ret 
438531: nop word ptr cs:[rax + rax]
43853c: nop dword ptr [rax]
438540: mov r11, qword ptr [rsi - 0x17]
438544: mov rcx, qword ptr [rsi - 0xf]
438548: mov rdx, qword ptr [rsi - 8]
43854c: mov qword ptr [rdi - 0x17], r11
438550: mov qword ptr [rdi - 0xf], rcx
438554: mov qword ptr [rdi - 8], rdx
438558: ret 
438559: nop dword ptr [rax]
438560: mov rcx, qword ptr [rsi - 0xf]
438564: mov rdx, qword ptr [rsi - 8]
438568: mov qword ptr [rdi - 0xf], rcx
43856c: mov qword ptr [rdi - 8], rdx
438570: ret 
438571: nop word ptr cs:[rax + rax]
43857c: nop dword ptr [rax]
438580: mov edx, dword ptr [rsi - 7]
438583: mov ecx, dword ptr [rsi - 4]
438586: mov dword ptr [rdi - 7], edx
438589: mov dword ptr [rdi - 4], ecx
43858c: ret 
43858d: nop dword ptr [rax]
438590: movdqu xmm1, xmmword ptr [rsi]
438594: lea rsi, [rsi + 0x10]
438598: movdqu xmmword ptr [r8], xmm0
43859d: movntdq xmmword ptr [rdi], xmm1
4385a1: lea rdi, [rdi + 0x10]
4385a5: lea rdx, [rdx - 0x90]
4385ac: mov r9, rsi
4385af: sub r9, rdi
4385b2: cmp r9, rdx
4385b5: jae 0x4385c4
4385b7: shl rcx, 2
4385bb: cmp rdx, rcx
4385be: jb 0x438690
4385c4: movdqu xmm0, xmmword ptr [rsi]
4385c8: movdqu xmm1, xmmword ptr [rsi + 0x10]
4385cd: movdqu xmm2, xmmword ptr [rsi + 0x20]
4385d2: movdqu xmm3, xmmword ptr [rsi + 0x30]
4385d7: movdqu xmm4, xmmword ptr [rsi + 0x40]
4385dc: movdqu xmm5, xmmword ptr [rsi + 0x50]
4385e1: movdqu xmm6, xmmword ptr [rsi + 0x60]
4385e6: movdqu xmm7, xmmword ptr [rsi + 0x70]
4385eb: lea rsi, [rsi + 0x80]
4385f2: sub rdx, 0x80
4385f9: movntdq xmmword ptr [rdi], xmm0
4385fd: movntdq xmmword ptr [rdi + 0x10], xmm1
438602: movntdq xmmword ptr [rdi + 0x20], xmm2
438607: movntdq xmmword ptr [rdi + 0x30], xmm3
43860c: movntdq xmmword ptr [rdi + 0x40], xmm4
438611: movntdq xmmword ptr [rdi + 0x50], xmm5
438616: movntdq xmmword ptr [rdi + 0x60], xmm6
43861b: movntdq xmmword ptr [rdi + 0x70], xmm7
438620: lea rdi, [rdi + 0x80]
438627: jae 0x4385c4
438629: cmp rdx, -0x40
43862d: lea rdx, [rdx + 0x80]
438634: jl 0x438668
438636: movdqu xmm0, xmmword ptr [rsi]
43863a: movdqu xmm1, xmmword ptr [rsi + 0x10]
43863f: movdqu xmm2, xmmword ptr [rsi + 0x20]
438644: movdqu xmm3, xmmword ptr [rsi + 0x30]
438649: lea rsi, [rsi + 0x40]
43864d: movntdq xmmword ptr [rdi], xmm0
438651: movntdq xmmword ptr [rdi + 0x10], xmm1
438656: movntdq xmmword ptr [rdi + 0x20], xmm2
43865b: movntdq xmmword ptr [rdi + 0x30], xmm3
438660: lea rdi, [rdi + 0x40]
438664: sub rdx, 0x40
438668: add rsi, rdx
43866b: add rdi, rdx
43866e: sfence 
438671: lea r11, [rip + 0x5f088]
438678: movsxd rdx, dword ptr [r11 + rdx*4]
43867c: lea rdx, [r11 + rdx]
438680: notrack jmp rdx
438683: ud2 
438685: nop word ptr cs:[rax + rax]
438690: prefetcht0 byte ptr [rsi + 0x1c0]
438697: prefetcht0 byte ptr [rsi + 0x200]
43869e: movdqu xmm0, xmmword ptr [rsi]
4386a2: movdqu xmm1, xmmword ptr [rsi + 0x10]
4386a7: movdqu xmm2, xmmword ptr [rsi + 0x20]
4386ac: movdqu xmm3, xmmword ptr [rsi + 0x30]
4386b1: movdqu xmm4, xmmword ptr [rsi + 0x40]
4386b6: movdqu xmm5, xmmword ptr [rsi + 0x50]
4386bb: movdqu xmm6, xmmword ptr [rsi + 0x60]
4386c0: movdqu xmm7, xmmword ptr [rsi + 0x70]
4386c5: lea rsi, [rsi + 0x80]
4386cc: sub rdx, 0x80
4386d3: movaps xmmword ptr [rdi], xmm0
4386d6: movaps xmmword ptr [rdi + 0x10], xmm1
4386da: movaps xmmword ptr [rdi + 0x20], xmm2
4386de: movaps xmmword ptr [rdi + 0x30], xmm3
4386e2: movaps xmmword ptr [rdi + 0x40], xmm4
4386e6: movaps xmmword ptr [rdi + 0x50], xmm5
4386ea: movaps xmmword ptr [rdi + 0x60], xmm6
4386ee: movaps xmmword ptr [rdi + 0x70], xmm7
4386f2: lea rdi, [rdi + 0x80]
4386f9: jae 0x438690
4386fb: cmp rdx, -0x40
4386ff: lea rdx, [rdx + 0x80]
438706: jl 0x438736
438708: movdqu xmm0, xmmword ptr [rsi]
43870c: movdqu xmm1, xmmword ptr [rsi + 0x10]
438711: movdqu xmm2, xmmword ptr [rsi + 0x20]
438716: movdqu xmm3, xmmword ptr [rsi + 0x30]
43871b: lea rsi, [rsi + 0x40]
43871f: movaps xmmword ptr [rdi], xmm0
438722: movaps xmmword ptr [rdi + 0x10], xmm1
438726: movaps xmmword ptr [rdi + 0x20], xmm2
43872a: movaps xmmword ptr [rdi + 0x30], xmm3
43872e: lea rdi, [rdi + 0x40]
438732: sub rdx, 0x40
438736: add rsi, rdx
438739: add rdi, rdx
43873c: lea r11, [rip + 0x5efbd]
438743: movsxd rdx, dword ptr [r11 + rdx*4]
438747: lea rdx, [r11 + rdx]
43874b: notrack jmp rdx
43874e: ud2 
438750: movdqu xmm1, xmmword ptr [rsi - 0x10]
438755: lea rsi, [rsi - 0x10]
438759: movdqu xmmword ptr [r8], xmm0
43875e: movdqa xmmword ptr [rdi - 0x10], xmm1
438763: lea rdi, [rdi - 0x10]
438767: lea rdx, [rdx - 0x90]
43876e: mov r9, rdi
438771: sub r9, rsi
438774: cmp r9, rdx
438777: jae 0x438782
438779: cmp r9, rcx
43877c: jb 0x438840
438782: movdqu xmm0, xmmword ptr [rsi - 0x10]
438787: movdqu xmm1, xmmword ptr [rsi - 0x20]
43878c: movdqu xmm2, xmmword ptr [rsi - 0x30]
438791: movdqu xmm3, xmmword ptr [rsi - 0x40]
438796: movdqu xmm4, xmmword ptr [rsi - 0x50]
43879b: movdqu xmm5, xmmword ptr [rsi - 0x60]
4387a0: movdqu xmm6, xmmword ptr [rsi - 0x70]
4387a5: movdqu xmm7, xmmword ptr [rsi - 0x80]
4387aa: lea rsi, [rsi - 0x80]
4387ae: sub rdx, 0x80
4387b5: movntdq xmmword ptr [rdi - 0x10], xmm0
4387ba: movntdq xmmword ptr [rdi - 0x20], xmm1
4387bf: movntdq xmmword ptr [rdi - 0x30], xmm2
4387c4: movntdq xmmword ptr [rdi - 0x40], xmm3
4387c9: movntdq xmmword ptr [rdi - 0x50], xmm4
4387ce: movntdq xmmword ptr [rdi - 0x60], xmm5
4387d3: movntdq xmmword ptr [rdi - 0x70], xmm6
4387d8: movntdq xmmword ptr [rdi - 0x80], xmm7
4387dd: lea rdi, [rdi - 0x80]
4387e1: jae 0x438782
4387e3: cmp rdx, -0x40
4387e7: lea rdx, [rdx + 0x80]
4387ee: jl 0x438824
4387f0: movdqu xmm0, xmmword ptr [rsi - 0x10]
4387f5: movdqu xmm1, xmmword ptr [rsi - 0x20]
4387fa: movdqu xmm2, xmmword ptr [rsi - 0x30]
4387ff: movdqu xmm3, xmmword ptr [rsi - 0x40]
438804: lea rsi, [rsi - 0x40]
438808: movntdq xmmword ptr [rdi - 0x10], xmm0
43880d: movntdq xmmword ptr [rdi - 0x20], xmm1
438812: movntdq xmmword ptr [rdi - 0x30], xmm2
438817: movntdq xmmword ptr [rdi - 0x40], xmm3
43881c: lea rdi, [rdi - 0x40]
438820: sub rdx, 0x40
438824: sfence 
438827: lea r11, [rip + 0x5eed2]
43882e: movsxd rdx, dword ptr [r11 + rdx*4]
438832: lea rdx, [r11 + rdx]
438836: notrack jmp rdx
438839: ud2 
43883b: nop dword ptr [rax + rax]
438840: prefetcht0 byte ptr [rsi - 0x1c0]
438847: prefetcht0 byte ptr [rsi - 0x200]
43884e: movdqu xmm0, xmmword ptr [rsi - 0x10]
438853: movdqu xmm1, xmmword ptr [rsi - 0x20]
438858: movdqu xmm2, xmmword ptr [rsi - 0x30]
43885d: movdqu xmm3, xmmword ptr [rsi - 0x40]
438862: movdqu xmm4, xmmword ptr [rsi - 0x50]
438867: movdqu xmm5, xmmword ptr [rsi - 0x60]
43886c: movdqu xmm6, xmmword ptr [rsi - 0x70]
438871: movdqu xmm7, xmmword ptr [rsi - 0x80]
438876: lea rsi, [rsi - 0x80]
43887a: sub rdx, 0x80
438881: movaps xmmword ptr [rdi - 0x10], xmm0
438885: movaps xmmword ptr [rdi - 0x20], xmm1
438889: movaps xmmword ptr [rdi - 0x30], xmm2
43888d: movaps xmmword ptr [rdi - 0x40], xmm3
438891: movaps xmmword ptr [rdi - 0x50], xmm4
438895: movaps xmmword ptr [rdi - 0x60], xmm5
438899: movaps xmmword ptr [rdi - 0x70], xmm6
43889d: movaps xmmword ptr [rdi - 0x80], xmm7
4388a1: lea rdi, [rdi - 0x80]
4388a5: jae 0x438840
4388a7: cmp rdx, -0x40
4388ab: lea rdx, [rdx + 0x80]
4388b2: jl 0x4388e4
4388b4: movdqu xmm0, xmmword ptr [rsi - 0x10]
4388b9: movdqu xmm1, xmmword ptr [rsi - 0x20]
4388be: movdqu xmm2, xmmword ptr [rsi - 0x30]
4388c3: movdqu xmm3, xmmword ptr [rsi - 0x40]
4388c8: lea rsi, [rsi - 0x40]
4388cc: movaps xmmword ptr [rdi - 0x10], xmm0
4388d0: movaps xmmword ptr [rdi - 0x20], xmm1
4388d4: movaps xmmword ptr [rdi - 0x30], xmm2
4388d8: movaps xmmword ptr [rdi - 0x40], xmm3
4388dc: lea rdi, [rdi - 0x40]
4388e0: sub rdx, 0x40
4388e4: lea r11, [rip + 0x5ee15]
4388eb: movsxd rdx, dword ptr [r11 + rdx*4]
4388ef: lea rdx, [r11 + rdx]
4388f3: notrack jmp rdx
4388f6: ud2 
4388f8: nop dword ptr [rax + rax]
438900: endbr64 
438904: cmp rcx, rdx
438907: jb 0x454570
43890d: nop dword ptr [rax]
438910: endbr64 
438914: mov rax, rdi
438917: add rax, rdx
43891a: jmp 0x438937
43891c: nop dword ptr [rax]
438920: endbr64 
438924: cmp rcx, rdx
438927: jb 0x454570
43892d: nop dword ptr [rax]
438930: endbr64 
438934: mov rax, rdi
438937: cmp rdx, 0x90
43893e: jae 0x438980
438940: cmp sil, dil
438943: jbe 0x43895f
438945: add rsi, rdx
438948: add rdi, rdx
43894b: lea r11, [rip + 0x5f1ae]
438952: movsxd rdx, dword ptr [r11 + rdx*4]
438956: lea rdx, [r11 + rdx]
43895a: notrack jmp rdx
43895d: ud2 
43895f: lea r11, [rip + 0x5ef5a]
438966: movsxd rdx, dword ptr [r11 + rdx*4]
43896a: lea rdx, [r11 + rdx]
43896e: notrack jmp rdx
438971: ud2 
438973: nop word ptr cs:[rax + rax]
43897e: nop 
438980: cmp sil, dil
438983: jle 0x4389e0
438985: movdqu xmm0, xmmword ptr [rsi]
438989: mov r8, rdi
43898c: and rdi, 0xfffffffffffffff0
438990: add rdi, 0x10
438994: mov r9, rdi
438997: sub r9, r8
43899a: sub rdx, r9
43899d: add rsi, r9
4389a0: mov r9, rsi
4389a3: and r9, 0xf
4389a7: je 0x438a40
4389ad: mov rcx, qword ptr [rip + 0x886bc]
4389b4: cmp rdx, rcx
4389b7: jae 0x43a1e0
4389bd: lea r11, [rip + 0x5f37c]
4389c4: sub rdx, 0x80
4389cb: movsxd r9, dword ptr [r11 + r9*4]
4389cf: add r9, r11
4389d2: notrack jmp r9
4389d6: ud2 
4389d8: nop dword ptr [rax + rax]
4389e0: mov rcx, qword ptr [rip + 0x88689]
4389e7: shl rcx, 1
4389ea: cmp rdx, rcx
4389ed: ja 0x43a370
4389f3: add rdi, rdx
4389f6: add rsi, rdx
4389f9: movdqu xmm0, xmmword ptr [rsi - 0x10]
4389fe: lea r8, [rdi - 0x10]
438a02: mov r9, rdi
438a05: and r9, 0xf
438a09: xor rdi, r9
438a0c: sub rsi, r9
438a0f: sub rdx, r9
438a12: mov r9, rsi
438a15: and r9, 0xf
438a19: je 0x438ae0
438a1f: lea r11, [rip + 0x5f35a]
438a26: sub rdx, 0x80
438a2d: movsxd r9, dword ptr [r11 + r9*4]
438a31: add r9, r11
438a34: notrack jmp r9
438a38: ud2 
438a3a: nop word ptr [rax + rax]
438a40: mov r9, rdx
438a43: shr r9, 8
438a47: add r9, rdx
438a4a: cmp r9, qword ptr [rip + 0x88627]
438a51: jae 0x43a1e0
438a57: sub rdx, 0x80
438a5e: nop 
438a60: movdqa xmm1, xmmword ptr [rsi]
438a64: movdqa xmmword ptr [rdi], xmm1
438a68: movaps xmm2, xmmword ptr [rsi + 0x10]
438a6c: movaps xmmword ptr [rdi + 0x10], xmm2
438a70: movaps xmm3, xmmword ptr [rsi + 0x20]
438a74: movaps xmmword ptr [rdi + 0x20], xmm3
438a78: movaps xmm4, xmmword ptr [rsi + 0x30]
438a7c: movaps xmmword ptr [rdi + 0x30], xmm4
438a80: movaps xmm1, xmmword ptr [rsi + 0x40]
438a84: movaps xmmword ptr [rdi + 0x40], xmm1
438a88: movaps xmm2, xmmword ptr [rsi + 0x50]
438a8c: movaps xmmword ptr [rdi + 0x50], xmm2
438a90: movaps xmm3, xmmword ptr [rsi + 0x60]
438a94: movaps xmmword ptr [rdi + 0x60], xmm3
438a98: movaps xmm4, xmmword ptr [rsi + 0x70]
438a9c: movaps xmmword ptr [rdi + 0x70], xmm4
438aa0: sub rdx, 0x80
438aa7: lea rsi, [rsi + 0x80]
438aae: lea rdi, [rdi + 0x80]
438ab5: jae 0x438a60
438ab7: movdqu xmmword ptr [r8], xmm0
438abc: add rdx, 0x80
438ac3: add rsi, rdx
438ac6: add rdi, rdx
438ac9: lea r11, [rip + 0x5f030]
438ad0: movsxd rdx, dword ptr [r11 + rdx*4]
438ad4: lea rdx, [r11 + rdx]
438ad8: notrack jmp rdx
438adb: ud2 
438add: nop dword ptr [rax]
438ae0: sub rdx, 0x80
438ae7: movaps xmm1, xmmword ptr [rsi - 0x10]
438aeb: movaps xmmword ptr [rdi - 0x10], xmm1
438aef: movaps xmm2, xmmword ptr [rsi - 0x20]
438af3: movaps xmmword ptr [rdi - 0x20], xmm2
438af7: movaps xmm3, xmmword ptr [rsi - 0x30]
438afb: movaps xmmword ptr [rdi - 0x30], xmm3
438aff: movaps xmm4, xmmword ptr [rsi - 0x40]
438b03: movaps xmmword ptr [rdi - 0x40], xmm4
438b07: movaps xmm5, xmmword ptr [rsi - 0x50]
438b0b: movaps xmmword ptr [rdi - 0x50], xmm5
438b0f: movaps xmm5, xmmword ptr [rsi - 0x60]
438b13: movaps xmmword ptr [rdi - 0x60], xmm5
438b17: movaps xmm5, xmmword ptr [rsi - 0x70]
438b1b: movaps xmmword ptr [rdi - 0x70], xmm5
438b1f: movaps xmm5, xmmword ptr [rsi - 0x80]
438b23: movaps xmmword ptr [rdi - 0x80], xmm5
438b27: sub rdx, 0x80
438b2e: lea rdi, [rdi - 0x80]
438b32: lea rsi, [rsi - 0x80]
438b36: jae 0x438ae7
438b38: movdqu xmmword ptr [r8], xmm0
438b3d: add rdx, 0x80
438b44: sub rdi, rdx
438b47: sub rsi, rdx
438b4a: lea r11, [rip + 0x5ed6f]
438b51: movsxd rdx, dword ptr [r11 + rdx*4]
438b55: lea rdx, [r11 + rdx]
438b59: notrack jmp rdx
438b5c: ud2 
438b5e: nop 
438b60: sub rdx, 0x80
438b67: movaps xmm1, xmmword ptr [rsi - 1]
438b6b: movaps xmm2, xmmword ptr [rsi + 0xf]
438b6f: movaps xmm3, xmmword ptr [rsi + 0x1f]
438b73: movaps xmm4, xmmword ptr [rsi + 0x2f]
438b77: movaps xmm5, xmmword ptr [rsi + 0x3f]
438b7b: movaps xmm6, xmmword ptr [rsi + 0x4f]
438b7f: movaps xmm7, xmmword ptr [rsi + 0x5f]
438b83: movaps xmm8, xmmword ptr [rsi + 0x6f]
438b88: movaps xmm9, xmmword ptr [rsi + 0x7f]
438b8d: lea rsi, [rsi + 0x80]
438b94: palignr xmm9, xmm8, 1
438b9b: movaps xmmword ptr [rdi + 0x70], xmm9
438ba0: palignr xmm8, xmm7, 1
438ba7: movaps xmmword ptr [rdi + 0x60], xmm8
438bac: palignr xmm7, xmm6, 1
438bb2: movaps xmmword ptr [rdi + 0x50], xmm7
438bb6: palignr xmm6, xmm5, 1
438bbc: movaps xmmword ptr [rdi + 0x40], xmm6
438bc0: palignr xmm5, xmm4, 1
438bc6: movaps xmmword ptr [rdi + 0x30], xmm5
438bca: palignr xmm4, xmm3, 1
438bd0: movaps xmmword ptr [rdi + 0x20], xmm4
438bd4: palignr xmm3, xmm2, 1
438bda: movaps xmmword ptr [rdi + 0x10], xmm3
438bde: palignr xmm2, xmm1, 1
438be4: movaps xmmword ptr [rdi], xmm2
438be7: lea rdi, [rdi + 0x80]
438bee: jae 0x438b60
438bf4: movdqu xmmword ptr [r8], xmm0
438bf9: add rdx, 0x80
438c00: add rdi, rdx
438c03: add rsi, rdx
438c06: lea r11, [rip + 0x5eef3]
438c0d: movsxd rdx, dword ptr [r11 + rdx*4]
438c11: lea rdx, [r11 + rdx]
438c15: notrack jmp rdx
438c18: ud2 
438c1a: nop word ptr [rax + rax]
438c20: movaps xmm1, xmmword ptr [rsi - 1]
438c24: movaps xmm2, xmmword ptr [rsi - 0x11]
438c28: palignr xmm1, xmm2, 1
438c2e: movaps xmmword ptr [rdi - 0x10], xmm1
438c32: movaps xmm3, xmmword ptr [rsi - 0x21]
438c36: palignr xmm2, xmm3, 1
438c3c: movaps xmmword ptr [rdi - 0x20], xmm2
438c40: movaps xmm4, xmmword ptr [rsi - 0x31]
438c44: palignr xmm3, xmm4, 1
438c4a: movaps xmmword ptr [rdi - 0x30], xmm3
438c4e: movaps xmm5, xmmword ptr [rsi - 0x41]
438c52: palignr xmm4, xmm5, 1
438c58: movaps xmmword ptr [rdi - 0x40], xmm4
438c5c: movaps xmm6, xmmword ptr [rsi - 0x51]
438c60: palignr xmm5, xmm6, 1
438c66: movaps xmmword ptr [rdi - 0x50], xmm5
438c6a: movaps xmm7, xmmword ptr [rsi - 0x61]
438c6e: palignr xmm6, xmm7, 1
438c74: movaps xmmword ptr [rdi - 0x60], xmm6
438c78: movaps xmm8, xmmword ptr [rsi - 0x71]
438c7d: palignr xmm7, xmm8, 1
438c84: movaps xmmword ptr [rdi - 0x70], xmm7
438c88: movaps xmm9, xmmword ptr [rsi - 0x81]
438c90: palignr xmm8, xmm9, 1
438c97: movaps xmmword ptr [rdi - 0x80], xmm8
438c9c: sub rdx, 0x80
438ca3: lea rdi, [rdi - 0x80]
438ca7: lea rsi, [rsi - 0x80]
438cab: jae 0x438c20
438cb1: movdqu xmmword ptr [r8], xmm0
438cb6: add rdx, 0x80
438cbd: sub rdi, rdx
438cc0: sub rsi, rdx
438cc3: lea r11, [rip + 0x5ebf6]
438cca: movsxd rdx, dword ptr [r11 + rdx*4]
438cce: lea rdx, [r11 + rdx]
438cd2: notrack jmp rdx
438cd5: ud2 
438cd7: nop word ptr [rax + rax]
438ce0: sub rdx, 0x80
438ce7: movaps xmm1, xmmword ptr [rsi - 2]
438ceb: movaps xmm2, xmmword ptr [rsi + 0xe]
438cef: movaps xmm3, xmmword ptr [rsi + 0x1e]
438cf3: movaps xmm4, xmmword ptr [rsi + 0x2e]
438cf7: movaps xmm5, xmmword ptr [rsi + 0x3e]
438cfb: movaps xmm6, xmmword ptr [rsi + 0x4e]
438cff: movaps xmm7, xmmword ptr [rsi + 0x5e]
438d03: movaps xmm8, xmmword ptr [rsi + 0x6e]
438d08: movaps xmm9, xmmword ptr [rsi + 0x7e]
438d0d: lea rsi, [rsi + 0x80]
438d14: palignr xmm9, xmm8, 2
438d1b: movaps xmmword ptr [rdi + 0x70], xmm9
438d20: palignr xmm8, xmm7, 2
438d27: movaps xmmword ptr [rdi + 0x60], xmm8
438d2c: palignr xmm7, xmm6, 2
438d32: movaps xmmword ptr [rdi + 0x50], xmm7
438d36: palignr xmm6, xmm5, 2
438d3c: movaps xmmword ptr [rdi + 0x40], xmm6
438d40: palignr xmm5, xmm4, 2
438d46: movaps xmmword ptr [rdi + 0x30], xmm5
438d4a: palignr xmm4, xmm3, 2
438d50: movaps xmmword ptr [rdi + 0x20], xmm4
438d54: palignr xmm3, xmm2, 2
438d5a: movaps xmmword ptr [rdi + 0x10], xmm3
438d5e: palignr xmm2, xmm1, 2
438d64: movaps xmmword ptr [rdi], xmm2
438d67: lea rdi, [rdi + 0x80]
438d6e: jae 0x438ce0
438d74: movdqu xmmword ptr [r8], xmm0
438d79: add rdx, 0x80
438d80: add rdi, rdx
438d83: add rsi, rdx
438d86: lea r11, [rip + 0x5ed73]
438d8d: movsxd rdx, dword ptr [r11 + rdx*4]
438d91: lea rdx, [r11 + rdx]
438d95: notrack jmp rdx
438d98: ud2 
438d9a: nop word ptr [rax + rax]
438da0: movaps xmm1, xmmword ptr [rsi - 2]
438da4: movaps xmm2, xmmword ptr [rsi - 0x12]
438da8: palignr xmm1, xmm2, 2
438dae: movaps xmmword ptr [rdi - 0x10], xmm1
438db2: movaps xmm3, xmmword ptr [rsi - 0x22]
438db6: palignr xmm2, xmm3, 2
438dbc: movaps xmmword ptr [rdi - 0x20], xmm2
438dc0: movaps xmm4, xmmword ptr [rsi - 0x32]
438dc4: palignr xmm3, xmm4, 2
438dca: movaps xmmword ptr [rdi - 0x30], xmm3
438dce: movaps xmm5, xmmword ptr [rsi - 0x42]
438dd2: palignr xmm4, xmm5, 2
438dd8: movaps xmmword ptr [rdi - 0x40], xmm4
438ddc: movaps xmm6, xmmword ptr [rsi - 0x52]
438de0: palignr xmm5, xmm6, 2
438de6: movaps xmmword ptr [rdi - 0x50], xmm5
438dea: movaps xmm7, xmmword ptr [rsi - 0x62]
438dee: palignr xmm6, xmm7, 2
438df4: movaps xmmword ptr [rdi - 0x60], xmm6
438df8: movaps xmm8, xmmword ptr [rsi - 0x72]
438dfd: palignr xmm7, xmm8, 2
438e04: movaps xmmword ptr [rdi - 0x70], xmm7
438e08: movaps xmm9, xmmword ptr [rsi - 0x82]
438e10: palignr xmm8, xmm9, 2
438e17: movaps xmmword ptr [rdi - 0x80], xmm8
438e1c: sub rdx, 0x80
438e23: lea rdi, [rdi - 0x80]
438e27: lea rsi, [rsi - 0x80]
438e2b: jae 0x438da0
438e31: movdqu xmmword ptr [r8], xmm0
438e36: add rdx, 0x80
438e3d: sub rdi, rdx
438e40: sub rsi, rdx
438e43: lea r11, [rip + 0x5ea76]
438e4a: movsxd rdx, dword ptr [r11 + rdx*4]
438e4e: lea rdx, [r11 + rdx]
438e52: notrack jmp rdx
438e55: ud2 
438e57: nop word ptr [rax + rax]
438e60: sub rdx, 0x80
438e67: movaps xmm1, xmmword ptr [rsi - 3]
438e6b: movaps xmm2, xmmword ptr [rsi + 0xd]
438e6f: movaps xmm3, xmmword ptr [rsi + 0x1d]
438e73: movaps xmm4, xmmword ptr [rsi + 0x2d]
438e77: movaps xmm5, xmmword ptr [rsi + 0x3d]
438e7b: movaps xmm6, xmmword ptr [rsi + 0x4d]
438e7f: movaps xmm7, xmmword ptr [rsi + 0x5d]
438e83: movaps xmm8, xmmword ptr [rsi + 0x6d]
438e88: movaps xmm9, xmmword ptr [rsi + 0x7d]
438e8d: lea rsi, [rsi + 0x80]
438e94: palignr xmm9, xmm8, 3
438e9b: movaps xmmword ptr [rdi + 0x70], xmm9
438ea0: palignr xmm8, xmm7, 3
438ea7: movaps xmmword ptr [rdi + 0x60], xmm8
438eac: palignr xmm7, xmm6, 3
438eb2: movaps xmmword ptr [rdi + 0x50], xmm7
438eb6: palignr xmm6, xmm5, 3
438ebc: movaps xmmword ptr [rdi + 0x40], xmm6
438ec0: palignr xmm5, xmm4, 3
438ec6: movaps xmmword ptr [rdi + 0x30], xmm5
438eca: palignr xmm4, xmm3, 3
438ed0: movaps xmmword ptr [rdi + 0x20], xmm4
438ed4: palignr xmm3, xmm2, 3
438eda: movaps xmmword ptr [rdi + 0x10], xmm3
438ede: palignr xmm2, xmm1, 3
438ee4: movaps xmmword ptr [rdi], xmm2
438ee7: lea rdi, [rdi + 0x80]
438eee: jae 0x438e60
438ef4: movdqu xmmword ptr [r8], xmm0
438ef9: add rdx, 0x80
438f00: add rdi, rdx
438f03: add rsi, rdx
438f06: lea r11, [rip + 0x5ebf3]
438f0d: movsxd rdx, dword ptr [r11 + rdx*4]
438f11: lea rdx, [r11 + rdx]
438f15: notrack jmp rdx
438f18: ud2 
438f1a: nop word ptr [rax + rax]
438f20: movaps xmm1, xmmword ptr [rsi - 3]
438f24: movaps xmm2, xmmword ptr [rsi - 0x13]
438f28: palignr xmm1, xmm2, 3
438f2e: movaps xmmword ptr [rdi - 0x10], xmm1
438f32: movaps xmm3, xmmword ptr [rsi - 0x23]
438f36: palignr xmm2, xmm3, 3
438f3c: movaps xmmword ptr [rdi - 0x20], xmm2
438f40: movaps xmm4, xmmword ptr [rsi - 0x33]
438f44: palignr xmm3, xmm4, 3
438f4a: movaps xmmword ptr [rdi - 0x30], xmm3
438f4e: movaps xmm5, xmmword ptr [rsi - 0x43]
438f52: palignr xmm4, xmm5, 3
438f58: movaps xmmword ptr [rdi - 0x40], xmm4
438f5c: movaps xmm6, xmmword ptr [rsi - 0x53]
438f60: palignr xmm5, xmm6, 3
438f66: movaps xmmword ptr [rdi - 0x50], xmm5
438f6a: movaps xmm7, xmmword ptr [rsi - 0x63]
438f6e: palignr xmm6, xmm7, 3
438f74: movaps xmmword ptr [rdi - 0x60], xmm6
438f78: movaps xmm8, xmmword ptr [rsi - 0x73]
438f7d: palignr xmm7, xmm8, 3
438f84: movaps xmmword ptr [rdi - 0x70], xmm7
438f88: movaps xmm9, xmmword ptr [rsi - 0x83]
438f90: palignr xmm8, xmm9, 3
438f97: movaps xmmword ptr [rdi - 0x80], xmm8
438f9c: sub rdx, 0x80
438fa3: lea rdi, [rdi - 0x80]
438fa7: lea rsi, [rsi - 0x80]
438fab: jae 0x438f20
438fb1: movdqu xmmword ptr [r8], xmm0
438fb6: add rdx, 0x80
438fbd: sub rdi, rdx
438fc0: sub rsi, rdx
438fc3: lea r11, [rip + 0x5e8f6]
438fca: movsxd rdx, dword ptr [r11 + rdx*4]
438fce: lea rdx, [r11 + rdx]
438fd2: notrack jmp rdx
438fd5: ud2 
438fd7: nop word ptr [rax + rax]
438fe0: sub rdx, 0x80
438fe7: movaps xmm1, xmmword ptr [rsi - 4]
438feb: movaps xmm2, xmmword ptr [rsi + 0xc]
438fef: movaps xmm3, xmmword ptr [rsi + 0x1c]
438ff3: movaps xmm4, xmmword ptr [rsi + 0x2c]
438ff7: movaps xmm5, xmmword ptr [rsi + 0x3c]
438ffb: movaps xmm6, xmmword ptr [rsi + 0x4c]
438fff: movaps xmm7, xmmword ptr [rsi + 0x5c]
439003: movaps xmm8, xmmword ptr [rsi + 0x6c]
439008: movaps xmm9, xmmword ptr [rsi + 0x7c]
43900d: lea rsi, [rsi + 0x80]
439014: palignr xmm9, xmm8, 4
43901b: movaps xmmword ptr [rdi + 0x70], xmm9
439020: palignr xmm8, xmm7, 4
439027: movaps xmmword ptr [rdi + 0x60], xmm8
43902c: palignr xmm7, xmm6, 4
439032: movaps xmmword ptr [rdi + 0x50], xmm7
439036: palignr xmm6, xmm5, 4
43903c: movaps xmmword ptr [rdi + 0x40], xmm6
439040: palignr xmm5, xmm4, 4
439046: movaps xmmword ptr [rdi + 0x30], xmm5
43904a: palignr xmm4, xmm3, 4
439050: movaps xmmword ptr [rdi + 0x20], xmm4
439054: palignr xmm3, xmm2, 4
43905a: movaps xmmword ptr [rdi + 0x10], xmm3
43905e: palignr xmm2, xmm1, 4
439064: movaps xmmword ptr [rdi], xmm2
439067: lea rdi, [rdi + 0x80]
43906e: jae 0x438fe0
439074: movdqu xmmword ptr [r8], xmm0
439079: add rdx, 0x80
439080: add rdi, rdx
439083: add rsi, rdx
439086: lea r11, [rip + 0x5ea73]
43908d: movsxd rdx, dword ptr [r11 + rdx*4]
439091: lea rdx, [r11 + rdx]
439095: notrack jmp rdx
439098: ud2 
43909a: nop word ptr [rax + rax]
4390a0: movaps xmm1, xmmword ptr [rsi - 4]
4390a4: movaps xmm2, xmmword ptr [rsi - 0x14]
4390a8: palignr xmm1, xmm2, 4
4390ae: movaps xmmword ptr [rdi - 0x10], xmm1
4390b2: movaps xmm3, xmmword ptr [rsi - 0x24]
4390b6: palignr xmm2, xmm3, 4
4390bc: movaps xmmword ptr [rdi - 0x20], xmm2
4390c0: movaps xmm4, xmmword ptr [rsi - 0x34]
4390c4: palignr xmm3, xmm4, 4
4390ca: movaps xmmword ptr [rdi - 0x30], xmm3
4390ce: movaps xmm5, xmmword ptr [rsi - 0x44]
4390d2: palignr xmm4, xmm5, 4
4390d8: movaps xmmword ptr [rdi - 0x40], xmm4
4390dc: movaps xmm6, xmmword ptr [rsi - 0x54]
4390e0: palignr xmm5, xmm6, 4
4390e6: movaps xmmword ptr [rdi - 0x50], xmm5
4390ea: movaps xmm7, xmmword ptr [rsi - 0x64]
4390ee: palignr xmm6, xmm7, 4
4390f4: movaps xmmword ptr [rdi - 0x60], xmm6
4390f8: movaps xmm8, xmmword ptr [rsi - 0x74]
4390fd: palignr xmm7, xmm8, 4
439104: movaps xmmword ptr [rdi - 0x70], xmm7
439108: movaps xmm9, xmmword ptr [rsi - 0x84]
439110: palignr xmm8, xmm9, 4
439117: movaps xmmword ptr [rdi - 0x80], xmm8
43911c: sub rdx, 0x80
439123: lea rdi, [rdi - 0x80]
439127: lea rsi, [rsi - 0x80]
43912b: jae 0x4390a0
439131: movdqu xmmword ptr [r8], xmm0
439136: add rdx, 0x80
43913d: sub rdi, rdx
439140: sub rsi, rdx
439143: lea r11, [rip + 0x5e776]
43914a: movsxd rdx, dword ptr [r11 + rdx*4]
43914e: lea rdx, [r11 + rdx]
439152: notrack jmp rdx
439155: ud2 
439157: nop word ptr [rax + rax]
439160: sub rdx, 0x80
439167: movaps xmm1, xmmword ptr [rsi - 5]
43916b: movaps xmm2, xmmword ptr [rsi + 0xb]
43916f: movaps xmm3, xmmword ptr [rsi + 0x1b]
439173: movaps xmm4, xmmword ptr [rsi + 0x2b]
439177: movaps xmm5, xmmword ptr [rsi + 0x3b]
43917b: movaps xmm6, xmmword ptr [rsi + 0x4b]
43917f: movaps xmm7, xmmword ptr [rsi + 0x5b]
439183: movaps xmm8, xmmword ptr [rsi + 0x6b]
439188: movaps xmm9, xmmword ptr [rsi + 0x7b]
43918d: lea rsi, [rsi + 0x80]
439194: palignr xmm9, xmm8, 5
43919b: movaps xmmword ptr [rdi + 0x70], xmm9
4391a0: palignr xmm8, xmm7, 5
4391a7: movaps xmmword ptr [rdi + 0x60], xmm8
4391ac: palignr xmm7, xmm6, 5
4391b2: movaps xmmword ptr [rdi + 0x50], xmm7
4391b6: palignr xmm6, xmm5, 5
4391bc: movaps xmmword ptr [rdi + 0x40], xmm6
4391c0: palignr xmm5, xmm4, 5
4391c6: movaps xmmword ptr [rdi + 0x30], xmm5
4391ca: palignr xmm4, xmm3, 5
4391d0: movaps xmmword ptr [rdi + 0x20], xmm4
4391d4: palignr xmm3, xmm2, 5
4391da: movaps xmmword ptr [rdi + 0x10], xmm3
4391de: palignr xmm2, xmm1, 5
4391e4: movaps xmmword ptr [rdi], xmm2
4391e7: lea rdi, [rdi + 0x80]
4391ee: jae 0x439160
4391f4: movdqu xmmword ptr [r8], xmm0
4391f9: add rdx, 0x80
439200: add rdi, rdx
439203: add rsi, rdx
439206: lea r11, [rip + 0x5e8f3]
43920d: movsxd rdx, dword ptr [r11 + rdx*4]
439211: lea rdx, [r11 + rdx]
439215: notrack jmp rdx
439218: ud2 
43921a: nop word ptr [rax + rax]
439220: movaps xmm1, xmmword ptr [rsi - 5]
439224: movaps xmm2, xmmword ptr [rsi - 0x15]
439228: palignr xmm1, xmm2, 5
43922e: movaps xmmword ptr [rdi - 0x10], xmm1
439232: movaps xmm3, xmmword ptr [rsi - 0x25]
439236: palignr xmm2, xmm3, 5
43923c: movaps xmmword ptr [rdi - 0x20], xmm2
439240: movaps xmm4, xmmword ptr [rsi - 0x35]
439244: palignr xmm3, xmm4, 5
43924a: movaps xmmword ptr [rdi - 0x30], xmm3
43924e: movaps xmm5, xmmword ptr [rsi - 0x45]
439252: palignr xmm4, xmm5, 5
439258: movaps xmmword ptr [rdi - 0x40], xmm4
43925c: movaps xmm6, xmmword ptr [rsi - 0x55]
439260: palignr xmm5, xmm6, 5
439266: movaps xmmword ptr [rdi - 0x50], xmm5
43926a: movaps xmm7, xmmword ptr [rsi - 0x65]
43926e: palignr xmm6, xmm7, 5
439274: movaps xmmword ptr [rdi - 0x60], xmm6
439278: movaps xmm8, xmmword ptr [rsi - 0x75]
43927d: palignr xmm7, xmm8, 5
439284: movaps xmmword ptr [rdi - 0x70], xmm7
439288: movaps xmm9, xmmword ptr [rsi - 0x85]
439290: palignr xmm8, xmm9, 5
439297: movaps xmmword ptr [rdi - 0x80], xmm8
43929c: sub rdx, 0x80
4392a3: lea rdi, [rdi - 0x80]
4392a7: lea rsi, [rsi - 0x80]
4392ab: jae 0x439220
4392b1: movdqu xmmword ptr [r8], xmm0
4392b6: add rdx, 0x80
4392bd: sub rdi, rdx
4392c0: sub rsi, rdx
4392c3: lea r11, [rip + 0x5e5f6]
4392ca: movsxd rdx, dword ptr [r11 + rdx*4]
4392ce: lea rdx, [r11 + rdx]
4392d2: notrack jmp rdx
4392d5: ud2 
4392d7: nop word ptr [rax + rax]
4392e0: sub rdx, 0x80
4392e7: movaps xmm1, xmmword ptr [rsi - 6]
4392eb: movaps xmm2, xmmword ptr [rsi + 0xa]
4392ef: movaps xmm3, xmmword ptr [rsi + 0x1a]
4392f3: movaps xmm4, xmmword ptr [rsi + 0x2a]
4392f7: movaps xmm5, xmmword ptr [rsi + 0x3a]
4392fb: movaps xmm6, xmmword ptr [rsi + 0x4a]
4392ff: movaps xmm7, xmmword ptr [rsi + 0x5a]
439303: movaps xmm8, xmmword ptr [rsi + 0x6a]
439308: movaps xmm9, xmmword ptr [rsi + 0x7a]
43930d: lea rsi, [rsi + 0x80]
439314: palignr xmm9, xmm8, 6
43931b: movaps xmmword ptr [rdi + 0x70], xmm9
439320: palignr xmm8, xmm7, 6
439327: movaps xmmword ptr [rdi + 0x60], xmm8
43932c: palignr xmm7, xmm6, 6
439332: movaps xmmword ptr [rdi + 0x50], xmm7
439336: palignr xmm6, xmm5, 6
43933c: movaps xmmword ptr [rdi + 0x40], xmm6
439340: palignr xmm5, xmm4, 6
439346: movaps xmmword ptr [rdi + 0x30], xmm5
43934a: palignr xmm4, xmm3, 6
439350: movaps xmmword ptr [rdi + 0x20], xmm4
439354: palignr xmm3, xmm2, 6
43935a: movaps xmmword ptr [rdi + 0x10], xmm3
43935e: palignr xmm2, xmm1, 6
439364: movaps xmmword ptr [rdi], xmm2
439367: lea rdi, [rdi + 0x80]
43936e: jae 0x4392e0
439374: movdqu xmmword ptr [r8], xmm0
439379: add rdx, 0x80
439380: add rdi, rdx
439383: add rsi, rdx
439386: lea r11, [rip + 0x5e773]
43938d: movsxd rdx, dword ptr [r11 + rdx*4]
439391: lea rdx, [r11 + rdx]
439395: notrack jmp rdx
439398: ud2 
43939a: nop word ptr [rax + rax]
4393a0: movaps xmm1, xmmword ptr [rsi - 6]
4393a4: movaps xmm2, xmmword ptr [rsi - 0x16]
4393a8: palignr xmm1, xmm2, 6
4393ae: movaps xmmword ptr [rdi - 0x10], xmm1
4393b2: movaps xmm3, xmmword ptr [rsi - 0x26]
4393b6: palignr xmm2, xmm3, 6
4393bc: movaps xmmword ptr [rdi - 0x20], xmm2
4393c0: movaps xmm4, xmmword ptr [rsi - 0x36]
4393c4: palignr xmm3, xmm4, 6
4393ca: movaps xmmword ptr [rdi - 0x30], xmm3
4393ce: movaps xmm5, xmmword ptr [rsi - 0x46]
4393d2: palignr xmm4, xmm5, 6
4393d8: movaps xmmword ptr [rdi - 0x40], xmm4
4393dc: movaps xmm6, xmmword ptr [rsi - 0x56]
4393e0: palignr xmm5, xmm6, 6
4393e6: movaps xmmword ptr [rdi - 0x50], xmm5
4393ea: movaps xmm7, xmmword ptr [rsi - 0x66]
4393ee: palignr xmm6, xmm7, 6
4393f4: movaps xmmword ptr [rdi - 0x60], xmm6
4393f8: movaps xmm8, xmmword ptr [rsi - 0x76]
4393fd: palignr xmm7, xmm8, 6
439404: movaps xmmword ptr [rdi - 0x70], xmm7
439408: movaps xmm9, xmmword ptr [rsi - 0x86]
439410: palignr xmm8, xmm9, 6
439417: movaps xmmword ptr [rdi - 0x80], xmm8
43941c: sub rdx, 0x80
439423: lea rdi, [rdi - 0x80]
439427: lea rsi, [rsi - 0x80]
43942b: jae 0x4393a0
439431: movdqu xmmword ptr [r8], xmm0
439436: add rdx, 0x80
43943d: sub rdi, rdx
439440: sub rsi, rdx
439443: lea r11, [rip + 0x5e476]
43944a: movsxd rdx, dword ptr [r11 + rdx*4]
43944e: lea rdx, [r11 + rdx]
439452: notrack jmp rdx
439455: ud2 
439457: nop word ptr [rax + rax]
439460: sub rdx, 0x80
439467: movaps xmm1, xmmword ptr [rsi - 7]
43946b: movaps xmm2, xmmword ptr [rsi + 9]
43946f: movaps xmm3, xmmword ptr [rsi + 0x19]
439473: movaps xmm4, xmmword ptr [rsi + 0x29]
439477: movaps xmm5, xmmword ptr [rsi + 0x39]
43947b: movaps xmm6, xmmword ptr [rsi + 0x49]
43947f: movaps xmm7, xmmword ptr [rsi + 0x59]
439483: movaps xmm8, xmmword ptr [rsi + 0x69]
439488: movaps xmm9, xmmword ptr [rsi + 0x79]
43948d: lea rsi, [rsi + 0x80]
439494: palignr xmm9, xmm8, 7
43949b: movaps xmmword ptr [rdi + 0x70], xmm9
4394a0: palignr xmm8, xmm7, 7
4394a7: movaps xmmword ptr [rdi + 0x60], xmm8
4394ac: palignr xmm7, xmm6, 7
4394b2: movaps xmmword ptr [rdi + 0x50], xmm7
4394b6: palignr xmm6, xmm5, 7
4394bc: movaps xmmword ptr [rdi + 0x40], xmm6
4394c0: palignr xmm5, xmm4, 7
4394c6: movaps xmmword ptr [rdi + 0x30], xmm5
4394ca: palignr xmm4, xmm3, 7
4394d0: movaps xmmword ptr [rdi + 0x20], xmm4
4394d4: palignr xmm3, xmm2, 7
4394da: movaps xmmword ptr [rdi + 0x10], xmm3
4394de: palignr xmm2, xmm1, 7
4394e4: movaps xmmword ptr [rdi], xmm2
4394e7: lea rdi, [rdi + 0x80]
4394ee: jae 0x439460
4394f4: movdqu xmmword ptr [r8], xmm0
4394f9: add rdx, 0x80
439500: add rdi, rdx
439503: add rsi, rdx
439506: lea r11, [rip + 0x5e5f3]
43950d: movsxd rdx, dword ptr [r11 + rdx*4]
439511: lea rdx, [r11 + rdx]
439515: notrack jmp rdx
439518: ud2 
43951a: nop word ptr [rax + rax]
439520: movaps xmm1, xmmword ptr [rsi - 7]
439524: movaps xmm2, xmmword ptr [rsi - 0x17]
439528: palignr xmm1, xmm2, 7
43952e: movaps xmmword ptr [rdi - 0x10], xmm1
439532: movaps xmm3, xmmword ptr [rsi - 0x27]
439536: palignr xmm2, xmm3, 7
43953c: movaps xmmword ptr [rdi - 0x20], xmm2
439540: movaps xmm4, xmmword ptr [rsi - 0x37]
439544: palignr xmm3, xmm4, 7
43954a: movaps xmmword ptr [rdi - 0x30], xmm3
43954e: movaps xmm5, xmmword ptr [rsi - 0x47]
439552: palignr xmm4, xmm5, 7
439558: movaps xmmword ptr [rdi - 0x40], xmm4
43955c: movaps xmm6, xmmword ptr [rsi - 0x57]
439560: palignr xmm5, xmm6, 7
439566: movaps xmmword ptr [rdi - 0x50], xmm5
43956a: movaps xmm7, xmmword ptr [rsi - 0x67]
43956e: palignr xmm6, xmm7, 7
439574: movaps xmmword ptr [rdi - 0x60], xmm6
439578: movaps xmm8, xmmword ptr [rsi - 0x77]
43957d: palignr xmm7, xmm8, 7
439584: movaps xmmword ptr [rdi - 0x70], xmm7
439588: movaps xmm9, xmmword ptr [rsi - 0x87]
439590: palignr xmm8, xmm9, 7
439597: movaps xmmword ptr [rdi - 0x80], xmm8
43959c: sub rdx, 0x80
4395a3: lea rdi, [rdi - 0x80]
4395a7: lea rsi, [rsi - 0x80]
4395ab: jae 0x439520
4395b1: movdqu xmmword ptr [r8], xmm0
4395b6: add rdx, 0x80
4395bd: sub rdi, rdx
4395c0: sub rsi, rdx
4395c3: lea r11, [rip + 0x5e2f6]
4395ca: movsxd rdx, dword ptr [r11 + rdx*4]
4395ce: lea rdx, [r11 + rdx]
4395d2: notrack jmp rdx
4395d5: ud2 
4395d7: nop word ptr [rax + rax]
4395e0: sub rdx, 0x80
4395e7: movaps xmm1, xmmword ptr [rsi - 8]
4395eb: movaps xmm2, xmmword ptr [rsi + 8]
4395ef: movaps xmm3, xmmword ptr [rsi + 0x18]
4395f3: movaps xmm4, xmmword ptr [rsi + 0x28]
4395f7: movaps xmm5, xmmword ptr [rsi + 0x38]
4395fb: movaps xmm6, xmmword ptr [rsi + 0x48]
4395ff: movaps xmm7, xmmword ptr [rsi + 0x58]
439603: movaps xmm8, xmmword ptr [rsi + 0x68]
439608: movaps xmm9, xmmword ptr [rsi + 0x78]
43960d: lea rsi, [rsi + 0x80]
439614: palignr xmm9, xmm8, 8
43961b: movaps xmmword ptr [rdi + 0x70], xmm9
439620: palignr xmm8, xmm7, 8
439627: movaps xmmword ptr [rdi + 0x60], xmm8
43962c: palignr xmm7, xmm6, 8
439632: movaps xmmword ptr [rdi + 0x50], xmm7
439636: palignr xmm6, xmm5, 8
43963c: movaps xmmword ptr [rdi + 0x40], xmm6
439640: palignr xmm5, xmm4, 8
439646: movaps xmmword ptr [rdi + 0x30], xmm5
43964a: palignr xmm4, xmm3, 8
439650: movaps xmmword ptr [rdi + 0x20], xmm4
439654: palignr xmm3, xmm2, 8
43965a: movaps xmmword ptr [rdi + 0x10], xmm3
43965e: palignr xmm2, xmm1, 8
439664: movaps xmmword ptr [rdi], xmm2
439667: lea rdi, [rdi + 0x80]
43966e: jae 0x4395e0
439674: movdqu xmmword ptr [r8], xmm0
439679: add rdx, 0x80
439680: add rdi, rdx
439683: add rsi, rdx
439686: lea r11, [rip + 0x5e473]
43968d: movsxd rdx, dword ptr [r11 + rdx*4]
439691: lea rdx, [r11 + rdx]
439695: notrack jmp rdx
439698: ud2 
43969a: nop word ptr [rax + rax]
4396a0: movaps xmm1, xmmword ptr [rsi - 8]
4396a4: movaps xmm2, xmmword ptr [rsi - 0x18]
4396a8: palignr xmm1, xmm2, 8
4396ae: movaps xmmword ptr [rdi - 0x10], xmm1
4396b2: movaps xmm3, xmmword ptr [rsi - 0x28]
4396b6: palignr xmm2, xmm3, 8
4396bc: movaps xmmword ptr [rdi - 0x20], xmm2
4396c0: movaps xmm4, xmmword ptr [rsi - 0x38]
4396c4: palignr xmm3, xmm4, 8
4396ca: movaps xmmword ptr [rdi - 0x30], xmm3
4396ce: movaps xmm5, xmmword ptr [rsi - 0x48]
4396d2: palignr xmm4, xmm5, 8
4396d8: movaps xmmword ptr [rdi - 0x40], xmm4
4396dc: movaps xmm6, xmmword ptr [rsi - 0x58]
4396e0: palignr xmm5, xmm6, 8
4396e6: movaps xmmword ptr [rdi - 0x50], xmm5
4396ea: movaps xmm7, xmmword ptr [rsi - 0x68]
4396ee: palignr xmm6, xmm7, 8
4396f4: movaps xmmword ptr [rdi - 0x60], xmm6
4396f8: movaps xmm8, xmmword ptr [rsi - 0x78]
4396fd: palignr xmm7, xmm8, 8
439704: movaps xmmword ptr [rdi - 0x70], xmm7
439708: movaps xmm9, xmmword ptr [rsi - 0x88]
439710: palignr xmm8, xmm9, 8
439717: movaps xmmword ptr [rdi - 0x80], xmm8
43971c: sub rdx, 0x80
439723: lea rdi, [rdi - 0x80]
439727: lea rsi, [rsi - 0x80]
43972b: jae 0x4396a0
439731: movdqu xmmword ptr [r8], xmm0
439736: add rdx, 0x80
43973d: sub rdi, rdx
439740: sub rsi, rdx
439743: lea r11, [rip + 0x5e176]
43974a: movsxd rdx, dword ptr [r11 + rdx*4]
43974e: lea rdx, [r11 + rdx]
439752: notrack jmp rdx
439755: ud2 
439757: nop word ptr [rax + rax]
439760: sub rdx, 0x80
439767: movaps xmm1, xmmword ptr [rsi - 9]
43976b: movaps xmm2, xmmword ptr [rsi + 7]
43976f: movaps xmm3, xmmword ptr [rsi + 0x17]
439773: movaps xmm4, xmmword ptr [rsi + 0x27]
439777: movaps xmm5, xmmword ptr [rsi + 0x37]
43977b: movaps xmm6, xmmword ptr [rsi + 0x47]
43977f: movaps xmm7, xmmword ptr [rsi + 0x57]
439783: movaps xmm8, xmmword ptr [rsi + 0x67]
439788: movaps xmm9, xmmword ptr [rsi + 0x77]
43978d: lea rsi, [rsi + 0x80]
439794: palignr xmm9, xmm8, 9
43979b: movaps xmmword ptr [rdi + 0x70], xmm9
4397a0: palignr xmm8, xmm7, 9
4397a7: movaps xmmword ptr [rdi + 0x60], xmm8
4397ac: palignr xmm7, xmm6, 9
4397b2: movaps xmmword ptr [rdi + 0x50], xmm7
4397b6: palignr xmm6, xmm5, 9
4397bc: movaps xmmword ptr [rdi + 0x40], xmm6
4397c0: palignr xmm5, xmm4, 9
4397c6: movaps xmmword ptr [rdi + 0x30], xmm5
4397ca: palignr xmm4, xmm3, 9
4397d0: movaps xmmword ptr [rdi + 0x20], xmm4
4397d4: palignr xmm3, xmm2, 9
4397da: movaps xmmword ptr [rdi + 0x10], xmm3
4397de: palignr xmm2, xmm1, 9
4397e4: movaps xmmword ptr [rdi], xmm2
4397e7: lea rdi, [rdi + 0x80]
4397ee: jae 0x439760
4397f4: movdqu xmmword ptr [r8], xmm0
4397f9: add rdx, 0x80
439800: add rdi, rdx
439803: add rsi, rdx
439806: lea r11, [rip + 0x5e2f3]
43980d: movsxd rdx, dword ptr [r11 + rdx*4]
439811: lea rdx, [r11 + rdx]
439815: notrack jmp rdx
439818: ud2 
43981a: nop word ptr [rax + rax]
439820: movaps xmm1, xmmword ptr [rsi - 9]
439824: movaps xmm2, xmmword ptr [rsi - 0x19]
439828: palignr xmm1, xmm2, 9
43982e: movaps xmmword ptr [rdi - 0x10], xmm1
439832: movaps xmm3, xmmword ptr [rsi - 0x29]
439836: palignr xmm2, xmm3, 9
43983c: movaps xmmword ptr [rdi - 0x20], xmm2
439840: movaps xmm4, xmmword ptr [rsi - 0x39]
439844: palignr xmm3, xmm4, 9
43984a: movaps xmmword ptr [rdi - 0x30], xmm3
43984e: movaps xmm5, xmmword ptr [rsi - 0x49]
439852: palignr xmm4, xmm5, 9
439858: movaps xmmword ptr [rdi - 0x40], xmm4
43985c: movaps xmm6, xmmword ptr [rsi - 0x59]
439860: palignr xmm5, xmm6, 9
439866: movaps xmmword ptr [rdi - 0x50], xmm5
43986a: movaps xmm7, xmmword ptr [rsi - 0x69]
43986e: palignr xmm6, xmm7, 9
439874: movaps xmmword ptr [rdi - 0x60], xmm6
439878: movaps xmm8, xmmword ptr [rsi - 0x79]
43987d: palignr xmm7, xmm8, 9
439884: movaps xmmword ptr [rdi - 0x70], xmm7
439888: movaps xmm9, xmmword ptr [rsi - 0x89]
439890: palignr xmm8, xmm9, 9
439897: movaps xmmword ptr [rdi - 0x80], xmm8
43989c: sub rdx, 0x80
4398a3: lea rdi, [rdi - 0x80]
4398a7: lea rsi, [rsi - 0x80]
4398ab: jae 0x439820
4398b1: movdqu xmmword ptr [r8], xmm0
4398b6: add rdx, 0x80
4398bd: sub rdi, rdx
4398c0: sub rsi, rdx
4398c3: lea r11, [rip + 0x5dff6]
4398ca: movsxd rdx, dword ptr [r11 + rdx*4]
4398ce: lea rdx, [r11 + rdx]
4398d2: notrack jmp rdx
4398d5: ud2 
4398d7: nop word ptr [rax + rax]
4398e0: sub rdx, 0x80
4398e7: movaps xmm1, xmmword ptr [rsi - 0xa]
4398eb: movaps xmm2, xmmword ptr [rsi + 6]
4398ef: movaps xmm3, xmmword ptr [rsi + 0x16]
4398f3: movaps xmm4, xmmword ptr [rsi + 0x26]
4398f7: movaps xmm5, xmmword ptr [rsi + 0x36]
4398fb: movaps xmm6, xmmword ptr [rsi + 0x46]
4398ff: movaps xmm7, xmmword ptr [rsi + 0x56]
439903: movaps xmm8, xmmword ptr [rsi + 0x66]
439908: movaps xmm9, xmmword ptr [rsi + 0x76]
43990d: lea rsi, [rsi + 0x80]
439914: palignr xmm9, xmm8, 0xa
43991b: movaps xmmword ptr [rdi + 0x70], xmm9
439920: palignr xmm8, xmm7, 0xa
439927: movaps xmmword ptr [rdi + 0x60], xmm8
43992c: palignr xmm7, xmm6, 0xa
439932: movaps xmmword ptr [rdi + 0x50], xmm7
439936: palignr xmm6, xmm5, 0xa
43993c: movaps xmmword ptr [rdi + 0x40], xmm6
439940: palignr xmm5, xmm4, 0xa
439946: movaps xmmword ptr [rdi + 0x30], xmm5
43994a: palignr xmm4, xmm3, 0xa
439950: movaps xmmword ptr [rdi + 0x20], xmm4
439954: palignr xmm3, xmm2, 0xa
43995a: movaps xmmword ptr [rdi + 0x10], xmm3
43995e: palignr xmm2, xmm1, 0xa
439964: movaps xmmword ptr [rdi], xmm2
439967: lea rdi, [rdi + 0x80]
43996e: jae 0x4398e0
439974: movdqu xmmword ptr [r8], xmm0
439979: add rdx, 0x80
439980: add rdi, rdx
439983: add rsi, rdx
439986: lea r11, [rip + 0x5e173]
43998d: movsxd rdx, dword ptr [r11 + rdx*4]
439991: lea rdx, [r11 + rdx]
439995: notrack jmp rdx
439998: ud2 
43999a: nop word ptr [rax + rax]
4399a0: movaps xmm1, xmmword ptr [rsi - 0xa]
4399a4: movaps xmm2, xmmword ptr [rsi - 0x1a]
4399a8: palignr xmm1, xmm2, 0xa
4399ae: movaps xmmword ptr [rdi - 0x10], xmm1
4399b2: movaps xmm3, xmmword ptr [rsi - 0x2a]
4399b6: palignr xmm2, xmm3, 0xa
4399bc: movaps xmmword ptr [rdi - 0x20], xmm2
4399c0: movaps xmm4, xmmword ptr [rsi - 0x3a]
4399c4: palignr xmm3, xmm4, 0xa
4399ca: movaps xmmword ptr [rdi - 0x30], xmm3
4399ce: movaps xmm5, xmmword ptr [rsi - 0x4a]
4399d2: palignr xmm4, xmm5, 0xa
4399d8: movaps xmmword ptr [rdi - 0x40], xmm4
4399dc: movaps xmm6, xmmword ptr [rsi - 0x5a]
4399e0: palignr xmm5, xmm6, 0xa
4399e6: movaps xmmword ptr [rdi - 0x50], xmm5
4399ea: movaps xmm7, xmmword ptr [rsi - 0x6a]
4399ee: palignr xmm6, xmm7, 0xa
4399f4: movaps xmmword ptr [rdi - 0x60], xmm6
4399f8: movaps xmm8, xmmword ptr [rsi - 0x7a]
4399fd: palignr xmm7, xmm8, 0xa
439a04: movaps xmmword ptr [rdi - 0x70], xmm7
439a08: movaps xmm9, xmmword ptr [rsi - 0x8a]
439a10: palignr xmm8, xmm9, 0xa
439a17: movaps xmmword ptr [rdi - 0x80], xmm8
439a1c: sub rdx, 0x80
439a23: lea rdi, [rdi - 0x80]
439a27: lea rsi, [rsi - 0x80]
439a2b: jae 0x4399a0
439a31: movdqu xmmword ptr [r8], xmm0
439a36: add rdx, 0x80
439a3d: sub rdi, rdx
439a40: sub rsi, rdx
439a43: lea r11, [rip + 0x5de76]
439a4a: movsxd rdx, dword ptr [r11 + rdx*4]
439a4e: lea rdx, [r11 + rdx]
439a52: notrack jmp rdx
439a55: ud2 
439a57: nop word ptr [rax + rax]
439a60: sub rdx, 0x80
439a67: movaps xmm1, xmmword ptr [rsi - 0xb]
439a6b: movaps xmm2, xmmword ptr [rsi + 5]
439a6f: movaps xmm3, xmmword ptr [rsi + 0x15]
439a73: movaps xmm4, xmmword ptr [rsi + 0x25]
439a77: movaps xmm5, xmmword ptr [rsi + 0x35]
439a7b: movaps xmm6, xmmword ptr [rsi + 0x45]
439a7f: movaps xmm7, xmmword ptr [rsi + 0x55]
439a83: movaps xmm8, xmmword ptr [rsi + 0x65]
439a88: movaps xmm9, xmmword ptr [rsi + 0x75]
439a8d: lea rsi, [rsi + 0x80]
439a94: palignr xmm9, xmm8, 0xb
439a9b: movaps xmmword ptr [rdi + 0x70], xmm9
439aa0: palignr xmm8, xmm7, 0xb
439aa7: movaps xmmword ptr [rdi + 0x60], xmm8
439aac: palignr xmm7, xmm6, 0xb
439ab2: movaps xmmword ptr [rdi + 0x50], xmm7
439ab6: palignr xmm6, xmm5, 0xb
439abc: movaps xmmword ptr [rdi + 0x40], xmm6
439ac0: palignr xmm5, xmm4, 0xb
439ac6: movaps xmmword ptr [rdi + 0x30], xmm5
439aca: palignr xmm4, xmm3, 0xb
439ad0: movaps xmmword ptr [rdi + 0x20], xmm4
439ad4: palignr xmm3, xmm2, 0xb
439ada: movaps xmmword ptr [rdi + 0x10], xmm3
439ade: palignr xmm2, xmm1, 0xb
439ae4: movaps xmmword ptr [rdi], xmm2
439ae7: lea rdi, [rdi + 0x80]
439aee: jae 0x439a60
439af4: movdqu xmmword ptr [r8], xmm0
439af9: add rdx, 0x80
439b00: add rdi, rdx
439b03: add rsi, rdx
439b06: lea r11, [rip + 0x5dff3]
439b0d: movsxd rdx, dword ptr [r11 + rdx*4]
439b11: lea rdx, [r11 + rdx]
439b15: notrack jmp rdx
439b18: ud2 
439b1a: nop word ptr [rax + rax]
439b20: movaps xmm1, xmmword ptr [rsi - 0xb]
439b24: movaps xmm2, xmmword ptr [rsi - 0x1b]
439b28: palignr xmm1, xmm2, 0xb
439b2e: movaps xmmword ptr [rdi - 0x10], xmm1
439b32: movaps xmm3, xmmword ptr [rsi - 0x2b]
439b36: palignr xmm2, xmm3, 0xb
439b3c: movaps xmmword ptr [rdi - 0x20], xmm2
439b40: movaps xmm4, xmmword ptr [rsi - 0x3b]
439b44: palignr xmm3, xmm4, 0xb
439b4a: movaps xmmword ptr [rdi - 0x30], xmm3
439b4e: movaps xmm5, xmmword ptr [rsi - 0x4b]
439b52: palignr xmm4, xmm5, 0xb
439b58: movaps xmmword ptr [rdi - 0x40], xmm4
439b5c: movaps xmm6, xmmword ptr [rsi - 0x5b]
439b60: palignr xmm5, xmm6, 0xb
439b66: movaps xmmword ptr [rdi - 0x50], xmm5
439b6a: movaps xmm7, xmmword ptr [rsi - 0x6b]
439b6e: palignr xmm6, xmm7, 0xb
439b74: movaps xmmword ptr [rdi - 0x60], xmm6
439b78: movaps xmm8, xmmword ptr [rsi - 0x7b]
439b7d: palignr xmm7, xmm8, 0xb
439b84: movaps xmmword ptr [rdi - 0x70], xmm7
439b88: movaps xmm9, xmmword ptr [rsi - 0x8b]
439b90: palignr xmm8, xmm9, 0xb
439b97: movaps xmmword ptr [rdi - 0x80], xmm8
439b9c: sub rdx, 0x80
439ba3: lea rdi, [rdi - 0x80]
439ba7: lea rsi, [rsi - 0x80]
439bab: jae 0x439b20
439bb1: movdqu xmmword ptr [r8], xmm0
439bb6: add rdx, 0x80
439bbd: sub rdi, rdx
439bc0: sub rsi, rdx
439bc3: lea r11, [rip + 0x5dcf6]
439bca: movsxd rdx, dword ptr [r11 + rdx*4]
439bce: lea rdx, [r11 + rdx]
439bd2: notrack jmp rdx
439bd5: ud2 
439bd7: nop word ptr [rax + rax]
439be0: sub rdx, 0x80
439be7: movdqa xmm1, xmmword ptr [rsi - 0xc]
439bec: movaps xmm2, xmmword ptr [rsi + 4]
439bf0: movaps xmm3, xmmword ptr [rsi + 0x14]
439bf4: movaps xmm4, xmmword ptr [rsi + 0x24]
439bf8: movaps xmm5, xmmword ptr [rsi + 0x34]
439bfc: movaps xmm6, xmmword ptr [rsi + 0x44]
439c00: movaps xmm7, xmmword ptr [rsi + 0x54]
439c04: movaps xmm8, xmmword ptr [rsi + 0x64]
439c09: movaps xmm9, xmmword ptr [rsi + 0x74]
439c0e: lea rsi, [rsi + 0x80]
439c15: palignr xmm9, xmm8, 0xc
439c1c: movaps xmmword ptr [rdi + 0x70], xmm9
439c21: palignr xmm8, xmm7, 0xc
439c28: movaps xmmword ptr [rdi + 0x60], xmm8
439c2d: palignr xmm7, xmm6, 0xc
439c33: movaps xmmword ptr [rdi + 0x50], xmm7
439c37: palignr xmm6, xmm5, 0xc
439c3d: movaps xmmword ptr [rdi + 0x40], xmm6
439c41: palignr xmm5, xmm4, 0xc
439c47: movaps xmmword ptr [rdi + 0x30], xmm5
439c4b: palignr xmm4, xmm3, 0xc
439c51: movaps xmmword ptr [rdi + 0x20], xmm4
439c55: palignr xmm3, xmm2, 0xc
439c5b: movaps xmmword ptr [rdi + 0x10], xmm3
439c5f: palignr xmm2, xmm1, 0xc
439c65: movaps xmmword ptr [rdi], xmm2
439c68: lea rdi, [rdi + 0x80]
439c6f: jae 0x439be0
439c75: movdqu xmmword ptr [r8], xmm0
439c7a: add rdx, 0x80
439c81: add rdi, rdx
439c84: add rsi, rdx
439c87: lea r11, [rip + 0x5de72]
439c8e: movsxd rdx, dword ptr [r11 + rdx*4]
439c92: lea rdx, [r11 + rdx]
439c96: notrack jmp rdx
439c99: ud2 
439c9b: nop dword ptr [rax + rax]
439ca0: movaps xmm1, xmmword ptr [rsi - 0xc]
439ca4: movaps xmm2, xmmword ptr [rsi - 0x1c]
439ca8: palignr xmm1, xmm2, 0xc
439cae: movaps xmmword ptr [rdi - 0x10], xmm1
439cb2: movaps xmm3, xmmword ptr [rsi - 0x2c]
439cb6: palignr xmm2, xmm3, 0xc
439cbc: movaps xmmword ptr [rdi - 0x20], xmm2
439cc0: movaps xmm4, xmmword ptr [rsi - 0x3c]
439cc4: palignr xmm3, xmm4, 0xc
439cca: movaps xmmword ptr [rdi - 0x30], xmm3
439cce: movaps xmm5, xmmword ptr [rsi - 0x4c]
439cd2: palignr xmm4, xmm5, 0xc
439cd8: movaps xmmword ptr [rdi - 0x40], xmm4
439cdc: movaps xmm6, xmmword ptr [rsi - 0x5c]
439ce0: palignr xmm5, xmm6, 0xc
439ce6: movaps xmmword ptr [rdi - 0x50], xmm5
439cea: movaps xmm7, xmmword ptr [rsi - 0x6c]
439cee: palignr xmm6, xmm7, 0xc
439cf4: movaps xmmword ptr [rdi - 0x60], xmm6
439cf8: movaps xmm8, xmmword ptr [rsi - 0x7c]
439cfd: palignr xmm7, xmm8, 0xc
439d04: movaps xmmword ptr [rdi - 0x70], xmm7
439d08: movaps xmm9, xmmword ptr [rsi - 0x8c]
439d10: palignr xmm8, xmm9, 0xc
439d17: movaps xmmword ptr [rdi - 0x80], xmm8
439d1c: sub rdx, 0x80
439d23: lea rdi, [rdi - 0x80]
439d27: lea rsi, [rsi - 0x80]
439d2b: jae 0x439ca0
439d31: movdqu xmmword ptr [r8], xmm0
439d36: add rdx, 0x80
439d3d: sub rdi, rdx
439d40: sub rsi, rdx
439d43: lea r11, [rip + 0x5db76]
439d4a: movsxd rdx, dword ptr [r11 + rdx*4]
439d4e: lea rdx, [r11 + rdx]
439d52: notrack jmp rdx
439d55: ud2 
439d57: nop word ptr [rax + rax]
439d60: sub rdx, 0x80
439d67: movaps xmm1, xmmword ptr [rsi - 0xd]
439d6b: movaps xmm2, xmmword ptr [rsi + 3]
439d6f: movaps xmm3, xmmword ptr [rsi + 0x13]
439d73: movaps xmm4, xmmword ptr [rsi + 0x23]
439d77: movaps xmm5, xmmword ptr [rsi + 0x33]
439d7b: movaps xmm6, xmmword ptr [rsi + 0x43]
439d7f: movaps xmm7, xmmword ptr [rsi + 0x53]
439d83: movaps xmm8, xmmword ptr [rsi + 0x63]
439d88: movaps xmm9, xmmword ptr [rsi + 0x73]
439d8d: lea rsi, [rsi + 0x80]
439d94: palignr xmm9, xmm8, 0xd
439d9b: movaps xmmword ptr [rdi + 0x70], xmm9
439da0: palignr xmm8, xmm7, 0xd
439da7: movaps xmmword ptr [rdi + 0x60], xmm8
439dac: palignr xmm7, xmm6, 0xd
439db2: movaps xmmword ptr [rdi + 0x50], xmm7
439db6: palignr xmm6, xmm5, 0xd
439dbc: movaps xmmword ptr [rdi + 0x40], xmm6
439dc0: palignr xmm5, xmm4, 0xd
439dc6: movaps xmmword ptr [rdi + 0x30], xmm5
439dca: palignr xmm4, xmm3, 0xd
439dd0: movaps xmmword ptr [rdi + 0x20], xmm4
439dd4: palignr xmm3, xmm2, 0xd
439dda: movaps xmmword ptr [rdi + 0x10], xmm3
439dde: palignr xmm2, xmm1, 0xd
439de4: movaps xmmword ptr [rdi], xmm2
439de7: lea rdi, [rdi + 0x80]
439dee: jae 0x439d60
439df4: movdqu xmmword ptr [r8], xmm0
439df9: add rdx, 0x80
439e00: add rdi, rdx
439e03: add rsi, rdx
439e06: lea r11, [rip + 0x5dcf3]
439e0d: movsxd rdx, dword ptr [r11 + rdx*4]
439e11: lea rdx, [r11 + rdx]
439e15: notrack jmp rdx
439e18: ud2 
439e1a: nop word ptr [rax + rax]
439e20: movaps xmm1, xmmword ptr [rsi - 0xd]
439e24: movaps xmm2, xmmword ptr [rsi - 0x1d]
439e28: palignr xmm1, xmm2, 0xd
439e2e: movaps xmmword ptr [rdi - 0x10], xmm1
439e32: movaps xmm3, xmmword ptr [rsi - 0x2d]
439e36: palignr xmm2, xmm3, 0xd
439e3c: movaps xmmword ptr [rdi - 0x20], xmm2
439e40: movaps xmm4, xmmword ptr [rsi - 0x3d]
439e44: palignr xmm3, xmm4, 0xd
439e4a: movaps xmmword ptr [rdi - 0x30], xmm3
439e4e: movaps xmm5, xmmword ptr [rsi - 0x4d]
439e52: palignr xmm4, xmm5, 0xd
439e58: movaps xmmword ptr [rdi - 0x40], xmm4
439e5c: movaps xmm6, xmmword ptr [rsi - 0x5d]
439e60: palignr xmm5, xmm6, 0xd
439e66: movaps xmmword ptr [rdi - 0x50], xmm5
439e6a: movaps xmm7, xmmword ptr [rsi - 0x6d]
439e6e: palignr xmm6, xmm7, 0xd
439e74: movaps xmmword ptr [rdi - 0x60], xmm6
439e78: movaps xmm8, xmmword ptr [rsi - 0x7d]
439e7d: palignr xmm7, xmm8, 0xd
439e84: movaps xmmword ptr [rdi - 0x70], xmm7
439e88: movaps xmm9, xmmword ptr [rsi - 0x8d]
439e90: palignr xmm8, xmm9, 0xd
439e97: movaps xmmword ptr [rdi - 0x80], xmm8
439e9c: sub rdx, 0x80
439ea3: lea rdi, [rdi - 0x80]
439ea7: lea rsi, [rsi - 0x80]
439eab: jae 0x439e20
439eb1: movdqu xmmword ptr [r8], xmm0
439eb6: add rdx, 0x80
439ebd: sub rdi, rdx
439ec0: sub rsi, rdx
439ec3: lea r11, [rip + 0x5d9f6]
439eca: movsxd rdx, dword ptr [r11 + rdx*4]
439ece: lea rdx, [r11 + rdx]
439ed2: notrack jmp rdx
439ed5: ud2 
439ed7: nop word ptr [rax + rax]
439ee0: sub rdx, 0x80
439ee7: movaps xmm1, xmmword ptr [rsi - 0xe]
439eeb: movaps xmm2, xmmword ptr [rsi + 2]
439eef: movaps xmm3, xmmword ptr [rsi + 0x12]
439ef3: movaps xmm4, xmmword ptr [rsi + 0x22]
439ef7: movaps xmm5, xmmword ptr [rsi + 0x32]
439efb: movaps xmm6, xmmword ptr [rsi + 0x42]
439eff: movaps xmm7, xmmword ptr [rsi + 0x52]
439f03: movaps xmm8, xmmword ptr [rsi + 0x62]
439f08: movaps xmm9, xmmword ptr [rsi + 0x72]
439f0d: lea rsi, [rsi + 0x80]
439f14: palignr xmm9, xmm8, 0xe
439f1b: movaps xmmword ptr [rdi + 0x70], xmm9
439f20: palignr xmm8, xmm7, 0xe
439f27: movaps xmmword ptr [rdi + 0x60], xmm8
439f2c: palignr xmm7, xmm6, 0xe
439f32: movaps xmmword ptr [rdi + 0x50], xmm7
439f36: palignr xmm6, xmm5, 0xe
439f3c: movaps xmmword ptr [rdi + 0x40], xmm6
439f40: palignr xmm5, xmm4, 0xe
439f46: movaps xmmword ptr [rdi + 0x30], xmm5
439f4a: palignr xmm4, xmm3, 0xe
439f50: movaps xmmword ptr [rdi + 0x20], xmm4
439f54: palignr xmm3, xmm2, 0xe
439f5a: movaps xmmword ptr [rdi + 0x10], xmm3
439f5e: palignr xmm2, xmm1, 0xe
439f64: movaps xmmword ptr [rdi], xmm2
439f67: lea rdi, [rdi + 0x80]
439f6e: jae 0x439ee0
439f74: movdqu xmmword ptr [r8], xmm0
439f79: add rdx, 0x80
439f80: add rdi, rdx
439f83: add rsi, rdx
439f86: lea r11, [rip + 0x5db73]
439f8d: movsxd rdx, dword ptr [r11 + rdx*4]
439f91: lea rdx, [r11 + rdx]
439f95: notrack jmp rdx
439f98: ud2 
439f9a: nop word ptr [rax + rax]
439fa0: movaps xmm1, xmmword ptr [rsi - 0xe]
439fa4: movaps xmm2, xmmword ptr [rsi - 0x1e]
439fa8: palignr xmm1, xmm2, 0xe
439fae: movaps xmmword ptr [rdi - 0x10], xmm1
439fb2: movaps xmm3, xmmword ptr [rsi - 0x2e]
439fb6: palignr xmm2, xmm3, 0xe
439fbc: movaps xmmword ptr [rdi - 0x20], xmm2
439fc0: movaps xmm4, xmmword ptr [rsi - 0x3e]
439fc4: palignr xmm3, xmm4, 0xe
439fca: movaps xmmword ptr [rdi - 0x30], xmm3
439fce: movaps xmm5, xmmword ptr [rsi - 0x4e]
439fd2: palignr xmm4, xmm5, 0xe
439fd8: movaps xmmword ptr [rdi - 0x40], xmm4
439fdc: movaps xmm6, xmmword ptr [rsi - 0x5e]
439fe0: palignr xmm5, xmm6, 0xe
439fe6: movaps xmmword ptr [rdi - 0x50], xmm5
439fea: movaps xmm7, xmmword ptr [rsi - 0x6e]
439fee: palignr xmm6, xmm7, 0xe
439ff4: movaps xmmword ptr [rdi - 0x60], xmm6
439ff8: movaps xmm8, xmmword ptr [rsi - 0x7e]
439ffd: palignr xmm7, xmm8, 0xe
43a004: movaps xmmword ptr [rdi - 0x70], xmm7
43a008: movaps xmm9, xmmword ptr [rsi - 0x8e]
43a010: palignr xmm8, xmm9, 0xe
43a017: movaps xmmword ptr [rdi - 0x80], xmm8
43a01c: sub rdx, 0x80
43a023: lea rdi, [rdi - 0x80]
43a027: lea rsi, [rsi - 0x80]
43a02b: jae 0x439fa0
43a031: movdqu xmmword ptr [r8], xmm0
43a036: add rdx, 0x80
43a03d: sub rdi, rdx
43a040: sub rsi, rdx
43a043: lea r11, [rip + 0x5d876]
43a04a: movsxd rdx, dword ptr [r11 + rdx*4]
43a04e: lea rdx, [r11 + rdx]
43a052: notrack jmp rdx
43a055: ud2 
43a057: nop word ptr [rax + rax]
43a060: sub rdx, 0x80
43a067: movaps xmm1, xmmword ptr [rsi - 0xf]
43a06b: movaps xmm2, xmmword ptr [rsi + 1]
43a06f: movaps xmm3, xmmword ptr [rsi + 0x11]
43a073: movaps xmm4, xmmword ptr [rsi + 0x21]
43a077: movaps xmm5, xmmword ptr [rsi + 0x31]
43a07b: movaps xmm6, xmmword ptr [rsi + 0x41]
43a07f: movaps xmm7, xmmword ptr [rsi + 0x51]
43a083: movaps xmm8, xmmword ptr [rsi + 0x61]
43a088: movaps xmm9, xmmword ptr [rsi + 0x71]
43a08d: lea rsi, [rsi + 0x80]
43a094: palignr xmm9, xmm8, 0xf
43a09b: movaps xmmword ptr [rdi + 0x70], xmm9
43a0a0: palignr xmm8, xmm7, 0xf
43a0a7: movaps xmmword ptr [rdi + 0x60], xmm8
43a0ac: palignr xmm7, xmm6, 0xf
43a0b2: movaps xmmword ptr [rdi + 0x50], xmm7
43a0b6: palignr xmm6, xmm5, 0xf
43a0bc: movaps xmmword ptr [rdi + 0x40], xmm6
43a0c0: palignr xmm5, xmm4, 0xf
43a0c6: movaps xmmword ptr [rdi + 0x30], xmm5
43a0ca: palignr xmm4, xmm3, 0xf
43a0d0: movaps xmmword ptr [rdi + 0x20], xmm4
43a0d4: palignr xmm3, xmm2, 0xf
43a0da: movaps xmmword ptr [rdi + 0x10], xmm3
43a0de: palignr xmm2, xmm1, 0xf
43a0e4: movaps xmmword ptr [rdi], xmm2
43a0e7: lea rdi, [rdi + 0x80]
43a0ee: jae 0x43a060
43a0f4: movdqu xmmword ptr [r8], xmm0
43a0f9: add rdx, 0x80
43a100: add rdi, rdx
43a103: add rsi, rdx
43a106: lea r11, [rip + 0x5d9f3]
43a10d: movsxd rdx, dword ptr [r11 + rdx*4]
43a111: lea rdx, [r11 + rdx]
43a115: notrack jmp rdx
43a118: ud2 
43a11a: nop word ptr [rax + rax]
43a120: movaps xmm1, xmmword ptr [rsi - 0xf]
43a124: movaps xmm2, xmmword ptr [rsi - 0x1f]
43a128: palignr xmm1, xmm2, 0xf
43a12e: movaps xmmword ptr [rdi - 0x10], xmm1
43a132: movaps xmm3, xmmword ptr [rsi - 0x2f]
43a136: palignr xmm2, xmm3, 0xf
43a13c: movaps xmmword ptr [rdi - 0x20], xmm2
43a140: movaps xmm4, xmmword ptr [rsi - 0x3f]
43a144: palignr xmm3, xmm4, 0xf
43a14a: movaps xmmword ptr [rdi - 0x30], xmm3
43a14e: movaps xmm5, xmmword ptr [rsi - 0x4f]
43a152: palignr xmm4, xmm5, 0xf
43a158: movaps xmmword ptr [rdi - 0x40], xmm4
43a15c: movaps xmm6, xmmword ptr [rsi - 0x5f]
43a160: palignr xmm5, xmm6, 0xf
43a166: movaps xmmword ptr [rdi - 0x50], xmm5
43a16a: movaps xmm7, xmmword ptr [rsi - 0x6f]
43a16e: palignr xmm6, xmm7, 0xf
43a174: movaps xmmword ptr [rdi - 0x60], xmm6
43a178: movaps xmm8, xmmword ptr [rsi - 0x7f]
43a17d: palignr xmm7, xmm8, 0xf
43a184: movaps xmmword ptr [rdi - 0x70], xmm7
43a188: movaps xmm9, xmmword ptr [rsi - 0x8f]
43a190: palignr xmm8, xmm9, 0xf
43a197: movaps xmmword ptr [rdi - 0x80], xmm8
43a19c: sub rdx, 0x80
43a1a3: lea rdi, [rdi - 0x80]
43a1a7: lea rsi, [rsi - 0x80]
43a1ab: jae 0x43a120
43a1b1: movdqu xmmword ptr [r8], xmm0
43a1b6: add rdx, 0x80
43a1bd: sub rdi, rdx
43a1c0: sub rsi, rdx
43a1c3: lea r11, [rip + 0x5d6f6]
43a1ca: movsxd rdx, dword ptr [r11 + rdx*4]
43a1ce: lea rdx, [r11 + rdx]
43a1d2: notrack jmp rdx
43a1d5: ud2 
43a1d7: nop word ptr [rax + rax]
43a1e0: movdqu xmm1, xmmword ptr [rsi]
43a1e4: movdqu xmmword ptr [r8], xmm0
43a1e9: movdqa xmmword ptr [rdi], xmm1
43a1ed: sub rdx, 0x10
43a1f1: add rsi, 0x10
43a1f5: add rdi, 0x10
43a1f9: mov rcx, qword ptr [rip + 0x86e58]
43a200: cmp rdx, rcx
43a203: ja 0x43a208
43a205: mov rcx, rdx
43a208: sub rdx, rcx
43a20b: cmp rdx, 0x1000
43a212: jbe 0x43a2be
43a218: mov r9, rcx
43a21b: shl r9, 3
43a21f: cmp rdx, r9
43a222: jbe 0x43a22a
43a224: add rdx, rcx
43a227: xor rcx, rcx
43a22a: sub rdx, 0x80
43a231: sub rdx, 0x80
43a238: prefetcht0 byte ptr [rsi + 0x200]
43a23f: prefetcht0 byte ptr [rsi + 0x300]
43a246: movdqu xmm0, xmmword ptr [rsi]
43a24a: movdqu xmm1, xmmword ptr [rsi + 0x10]
43a24f: movdqu xmm2, xmmword ptr [rsi + 0x20]
43a254: movdqu xmm3, xmmword ptr [rsi + 0x30]
43a259: movdqu xmm4, xmmword ptr [rsi + 0x40]
43a25e: movdqu xmm5, xmmword ptr [rsi + 0x50]
43a263: movdqu xmm6, xmmword ptr [rsi + 0x60]
43a268: movdqu xmm7, xmmword ptr [rsi + 0x70]
43a26d: lfence 
43a270: movntdq xmmword ptr [rdi], xmm0
43a274: movntdq xmmword ptr [rdi + 0x10], xmm1
43a279: movntdq xmmword ptr [rdi + 0x20], xmm2
43a27e: movntdq xmmword ptr [rdi + 0x30], xmm3
43a283: movntdq xmmword ptr [rdi + 0x40], xmm4
43a288: movntdq xmmword ptr [rdi + 0x50], xmm5
43a28d: movntdq xmmword ptr [rdi + 0x60], xmm6
43a292: movntdq xmmword ptr [rdi + 0x70], xmm7
43a297: lea rsi, [rsi + 0x80]
43a29e: lea rdi, [rdi + 0x80]
43a2a5: jae 0x43a231
43a2a7: sfence 
43a2aa: cmp rcx, 0x80
43a2b1: jb 0x43a34d
43a2b7: add rdx, 0x80
43a2be: add rdx, rcx
43a2c1: sub rdx, 0x80
43a2c8: prefetchnta byte ptr [rsi + 0x1c0]
43a2cf: prefetchnta byte ptr [rsi + 0x280]
43a2d6: prefetchnta byte ptr [rdi + 0x1c0]
43a2dd: prefetchnta byte ptr [rdi + 0x280]
43a2e4: sub rdx, 0x80
43a2eb: movdqu xmm0, xmmword ptr [rsi]
43a2ef: movdqu xmm1, xmmword ptr [rsi + 0x10]
43a2f4: movdqu xmm2, xmmword ptr [rsi + 0x20]
43a2f9: movdqu xmm3, xmmword ptr [rsi + 0x30]
43a2fe: movdqu xmm4, xmmword ptr [rsi + 0x40]
43a303: movdqu xmm5, xmmword ptr [rsi + 0x50]
43a308: movdqu xmm6, xmmword ptr [rsi + 0x60]
43a30d: movdqu xmm7, xmmword ptr [rsi + 0x70]
43a312: movdqa xmmword ptr [rdi], xmm0
43a316: movdqa xmmword ptr [rdi + 0x10], xmm1
43a31b: movdqa xmmword ptr [rdi + 0x20], xmm2
43a320: movdqa xmmword ptr [rdi + 0x30], xmm3
43a325: movdqa xmmword ptr [rdi + 0x40], xmm4
43a32a: movdqa xmmword ptr [rdi + 0x50], xmm5
43a32f: movdqa xmmword ptr [rdi + 0x60], xmm6
43a334: movdqa xmmword ptr [rdi + 0x70], xmm7
43a339: lea rsi, [rsi + 0x80]
43a340: lea rdi, [rdi + 0x80]
43a347: jae 0x43a2c8
43a34d: add rdx, 0x80
43a354: add rsi, rdx
43a357: add rdi, rdx
43a35a: lea r11, [rip + 0x5d79f]
43a361: movsxd rdx, dword ptr [r11 + rdx*4]
43a365: lea rdx, [r11 + rdx]
43a369: notrack jmp rdx
43a36c: ud2 
43a36e: nop 
43a370: add rsi, rdx
43a373: add rdi, rdx
43a376: movdqu xmm0, xmmword ptr [rsi - 0x10]
43a37b: lea r8, [rdi - 0x10]
43a37f: mov r9, rdi
43a382: and rdi, 0xfffffffffffffff0
43a386: sub r9, rdi
43a389: sub rsi, r9
43a38c: sub rdx, r9
43a38f: mov rcx, qword ptr [rip + 0x86cc2]
43a396: cmp rdx, rcx
43a399: ja 0x43a39e
43a39b: mov rcx, rdx
43a39e: sub rdx, rcx
43a3a1: cmp rdx, 0x1000
43a3a8: jbe 0x43a452
43a3ae: mov r9, rcx
43a3b1: shl r9, 3
43a3b5: cmp rdx, r9
43a3b8: jbe 0x43a3c0
43a3ba: add rdx, rcx
43a3bd: xor rcx, rcx
43a3c0: sub rdx, 0x80
43a3c7: sub rdx, 0x80
43a3ce: prefetcht0 byte ptr [rsi - 0x200]
43a3d5: prefetcht0 byte ptr [rsi - 0x300]
43a3dc: movdqu xmm1, xmmword ptr [rsi - 0x10]
43a3e1: movdqu xmm2, xmmword ptr [rsi - 0x20]
43a3e6: movdqu xmm3, xmmword ptr [rsi - 0x30]
43a3eb: movdqu xmm4, xmmword ptr [rsi - 0x40]
43a3f0: movdqu xmm5, xmmword ptr [rsi - 0x50]
43a3f5: movdqu xmm6, xmmword ptr [rsi - 0x60]
43a3fa: movdqu xmm7, xmmword ptr [rsi - 0x70]
43a3ff: movdqu xmm8, xmmword ptr [rsi - 0x80]
43a405: lfence 
43a408: movntdq xmmword ptr [rdi - 0x10], xmm1
43a40d: movntdq xmmword ptr [rdi - 0x20], xmm2
43a412: movntdq xmmword ptr [rdi - 0x30], xmm3
43a417: movntdq xmmword ptr [rdi - 0x40], xmm4
43a41c: movntdq xmmword ptr [rdi - 0x50], xmm5
43a421: movntdq xmmword ptr [rdi - 0x60], xmm6
43a426: movntdq xmmword ptr [rdi - 0x70], xmm7
43a42b: movntdq xmmword ptr [rdi - 0x80], xmm8
43a431: lea rsi, [rsi - 0x80]
43a435: lea rdi, [rdi - 0x80]
43a439: jae 0x43a3c7
43a43b: sfence 
43a43e: cmp rcx, 0x80
43a445: jb 0x43a4db
43a44b: add rdx, 0x80
43a452: add rdx, rcx
43a455: sub rdx, 0x80
43a45c: prefetchnta byte ptr [rsi - 0x1c0]
43a463: prefetchnta byte ptr [rsi - 0x280]
43a46a: prefetchnta byte ptr [rdi - 0x1c0]
43a471: prefetchnta byte ptr [rdi - 0x280]
43a478: sub rdx, 0x80
43a47f: movdqu xmm1, xmmword ptr [rsi - 0x10]
43a484: movdqu xmm2, xmmword ptr [rsi - 0x20]
43a489: movdqu xmm3, xmmword ptr [rsi - 0x30]
43a48e: movdqu xmm4, xmmword ptr [rsi - 0x40]
43a493: movdqu xmm5, xmmword ptr [rsi - 0x50]
43a498: movdqu xmm6, xmmword ptr [rsi - 0x60]
43a49d: movdqu xmm7, xmmword ptr [rsi - 0x70]
43a4a2: movdqu xmm8, xmmword ptr [rsi - 0x80]
43a4a8: movdqa xmmword ptr [rdi - 0x10], xmm1
43a4ad: movdqa xmmword ptr [rdi - 0x20], xmm2
43a4b2: movdqa xmmword ptr [rdi - 0x30], xmm3
43a4b7: movdqa xmmword ptr [rdi - 0x40], xmm4
43a4bc: movdqa xmmword ptr [rdi - 0x50], xmm5
43a4c1: movdqa xmmword ptr [rdi - 0x60], xmm6
43a4c6: movdqa xmmword ptr [rdi - 0x70], xmm7
43a4cb: movdqa xmmword ptr [rdi - 0x80], xmm8
43a4d1: lea rsi, [rsi - 0x80]
43a4d5: lea rdi, [rdi - 0x80]
43a4d9: jae 0x43a45c
43a4db: movdqu xmmword ptr [r8], xmm0
43a4e0: add rdx, 0x80
43a4e7: sub rsi, rdx
43a4ea: sub rdi, rdx
43a4ed: lea r11, [rip + 0x5d3cc]
43a4f4: movsxd rdx, dword ptr [r11 + rdx*4]
43a4f8: lea rdx, [r11 + rdx]
43a4fc: notrack jmp rdx
43a4ff: ud2 
43a501: nop word ptr cs:[rax + rax]
43a50c: nop dword ptr [rax]
43a510: lddqu xmm0, xmmword ptr [rsi - 0x80]
43a515: movdqu xmmword ptr [rdi - 0x80], xmm0
43a51a: lddqu xmm0, xmmword ptr [rsi - 0x70]
43a51f: movdqu xmmword ptr [rdi - 0x70], xmm0
43a524: lddqu xmm0, xmmword ptr [rsi - 0x60]
43a529: movdqu xmmword ptr [rdi - 0x60], xmm0
43a52e: lddqu xmm0, xmmword ptr [rsi - 0x50]
43a533: movdqu xmmword ptr [rdi - 0x50], xmm0
43a538: lddqu xmm0, xmmword ptr [rsi - 0x40]
43a53d: movdqu xmmword ptr [rdi - 0x40], xmm0
43a542: lddqu xmm0, xmmword ptr [rsi - 0x30]
43a547: movdqu xmmword ptr [rdi - 0x30], xmm0
43a54c: lddqu xmm0, xmmword ptr [rsi - 0x20]
43a551: movdqu xmmword ptr [rdi - 0x20], xmm0
43a556: lddqu xmm0, xmmword ptr [rsi - 0x10]
43a55b: movdqu xmmword ptr [rdi - 0x10], xmm0
43a560: ret 
43a561: nop word ptr cs:[rax + rax]
43a56c: nop dword ptr [rax]
43a570: lddqu xmm0, xmmword ptr [rsi - 0x8f]
43a578: movdqu xmmword ptr [rdi - 0x8f], xmm0
43a580: lddqu xmm0, xmmword ptr [rsi - 0x7f]
43a585: movdqu xmmword ptr [rdi - 0x7f], xmm0
43a58a: lddqu xmm0, xmmword ptr [rsi - 0x6f]
43a58f: movdqu xmmword ptr [rdi - 0x6f], xmm0
43a594: lddqu xmm0, xmmword ptr [rsi - 0x5f]
43a599: movdqu xmmword ptr [rdi - 0x5f], xmm0
43a59e: lddqu xmm0, xmmword ptr [rsi - 0x4f]
43a5a3: movdqu xmmword ptr [rdi - 0x4f], xmm0
43a5a8: lddqu xmm0, xmmword ptr [rsi - 0x3f]
43a5ad: movdqu xmmword ptr [rdi - 0x3f], xmm0
43a5b2: lddqu xmm0, xmmword ptr [rsi - 0x2f]
43a5b7: movdqu xmmword ptr [rdi - 0x2f], xmm0
43a5bc: lddqu xmm0, xmmword ptr [rsi - 0x1f]
43a5c1: lddqu xmm1, xmmword ptr [rsi - 0x10]
43a5c6: movdqu xmmword ptr [rdi - 0x1f], xmm0
43a5cb: movdqu xmmword ptr [rdi - 0x10], xmm1
43a5d0: ret 
43a5d1: nop word ptr cs:[rax + rax]
43a5dc: nop dword ptr [rax]
43a5e0: mov rdx, qword ptr [rsi - 0xf]
43a5e4: mov rcx, qword ptr [rsi - 8]
43a5e8: mov qword ptr [rdi - 0xf], rdx
43a5ec: mov qword ptr [rdi - 8], rcx
43a5f0: ret 
43a5f1: nop word ptr cs:[rax + rax]
43a5fc: nop dword ptr [rax]
43a600: lddqu xmm0, xmmword ptr [rsi - 0x8e]
43a608: movdqu xmmword ptr [rdi - 0x8e], xmm0
43a610: lddqu xmm0, xmmword ptr [rsi - 0x7e]
43a615: movdqu xmmword ptr [rdi - 0x7e], xmm0
43a61a: lddqu xmm0, xmmword ptr [rsi - 0x6e]
43a61f: movdqu xmmword ptr [rdi - 0x6e], xmm0
43a624: lddqu xmm0, xmmword ptr [rsi - 0x5e]
43a629: movdqu xmmword ptr [rdi - 0x5e], xmm0
43a62e: lddqu xmm0, xmmword ptr [rsi - 0x4e]
43a633: movdqu xmmword ptr [rdi - 0x4e], xmm0
43a638: lddqu xmm0, xmmword ptr [rsi - 0x3e]
43a63d: movdqu xmmword ptr [rdi - 0x3e], xmm0
43a642: lddqu xmm0, xmmword ptr [rsi - 0x2e]
43a647: movdqu xmmword ptr [rdi - 0x2e], xmm0
43a64c: lddqu xmm0, xmmword ptr [rsi - 0x1e]
43a651: lddqu xmm1, xmmword ptr [rsi - 0x10]
43a656: movdqu xmmword ptr [rdi - 0x1e], xmm0
43a65b: movdqu xmmword ptr [rdi - 0x10], xmm1
43a660: ret 
43a661: nop word ptr cs:[rax + rax]
43a66c: nop dword ptr [rax]
43a670: mov rdx, qword ptr [rsi - 0xe]
43a674: mov rcx, qword ptr [rsi - 8]
43a678: mov qword ptr [rdi - 0xe], rdx
43a67c: mov qword ptr [rdi - 8], rcx
43a680: ret 
43a681: nop word ptr cs:[rax + rax]
43a68c: nop dword ptr [rax]
43a690: lddqu xmm0, xmmword ptr [rsi - 0x8d]
43a698: movdqu xmmword ptr [rdi - 0x8d], xmm0
43a6a0: lddqu xmm0, xmmword ptr [rsi - 0x7d]
43a6a5: movdqu xmmword ptr [rdi - 0x7d], xmm0
43a6aa: lddqu xmm0, xmmword ptr [rsi - 0x6d]
43a6af: movdqu xmmword ptr [rdi - 0x6d], xmm0
43a6b4: lddqu xmm0, xmmword ptr [rsi - 0x5d]
43a6b9: movdqu xmmword ptr [rdi - 0x5d], xmm0
43a6be: lddqu xmm0, xmmword ptr [rsi - 0x4d]
43a6c3: movdqu xmmword ptr [rdi - 0x4d], xmm0
43a6c8: lddqu xmm0, xmmword ptr [rsi - 0x3d]
43a6cd: movdqu xmmword ptr [rdi - 0x3d], xmm0
43a6d2: lddqu xmm0, xmmword ptr [rsi - 0x2d]
43a6d7: movdqu xmmword ptr [rdi - 0x2d], xmm0
43a6dc: lddqu xmm0, xmmword ptr [rsi - 0x1d]
43a6e1: lddqu xmm1, xmmword ptr [rsi - 0x10]
43a6e6: movdqu xmmword ptr [rdi - 0x1d], xmm0
43a6eb: movdqu xmmword ptr [rdi - 0x10], xmm1
43a6f0: ret 
43a6f1: nop word ptr cs:[rax + rax]
43a6fc: nop dword ptr [rax]
43a700: mov rdx, qword ptr [rsi - 0xd]
43a704: mov rcx, qword ptr [rsi - 8]
43a708: mov qword ptr [rdi - 0xd], rdx
43a70c: mov qword ptr [rdi - 8], rcx
43a710: ret 
43a711: nop word ptr cs:[rax + rax]
43a71c: nop dword ptr [rax]
43a720: lddqu xmm0, xmmword ptr [rsi - 0x8c]
43a728: movdqu xmmword ptr [rdi - 0x8c], xmm0
43a730: lddqu xmm0, xmmword ptr [rsi - 0x7c]
43a735: movdqu xmmword ptr [rdi - 0x7c], xmm0
43a73a: lddqu xmm0, xmmword ptr [rsi - 0x6c]
43a73f: movdqu xmmword ptr [rdi - 0x6c], xmm0
43a744: lddqu xmm0, xmmword ptr [rsi - 0x5c]
43a749: movdqu xmmword ptr [rdi - 0x5c], xmm0
43a74e: lddqu xmm0, xmmword ptr [rsi - 0x4c]
43a753: movdqu xmmword ptr [rdi - 0x4c], xmm0
43a758: lddqu xmm0, xmmword ptr [rsi - 0x3c]
43a75d: movdqu xmmword ptr [rdi - 0x3c], xmm0
43a762: lddqu xmm0, xmmword ptr [rsi - 0x2c]
43a767: movdqu xmmword ptr [rdi - 0x2c], xmm0
43a76c: lddqu xmm0, xmmword ptr [rsi - 0x1c]
43a771: lddqu xmm1, xmmword ptr [rsi - 0x10]
43a776: movdqu xmmword ptr [rdi - 0x1c], xmm0
43a77b: movdqu xmmword ptr [rdi - 0x10], xmm1
43a780: ret 
43a781: nop word ptr cs:[rax + rax]
43a78c: nop dword ptr [rax]
43a790: mov rdx, qword ptr [rsi - 0xc]
43a794: mov ecx, dword ptr [rsi - 4]
43a797: mov qword ptr [rdi - 0xc], rdx
43a79b: mov dword ptr [rdi - 4], ecx
43a79e: ret 
43a79f: nop 
43a7a0: lddqu xmm0, xmmword ptr [rsi - 0x8b]
43a7a8: movdqu xmmword ptr [rdi - 0x8b], xmm0
43a7b0: lddqu xmm0, xmmword ptr [rsi - 0x7b]
43a7b5: movdqu xmmword ptr [rdi - 0x7b], xmm0
43a7ba: lddqu xmm0, xmmword ptr [rsi - 0x6b]
43a7bf: movdqu xmmword ptr [rdi - 0x6b], xmm0
43a7c4: lddqu xmm0, xmmword ptr [rsi - 0x5b]
43a7c9: movdqu xmmword ptr [rdi - 0x5b], xmm0
43a7ce: lddqu xmm0, xmmword ptr [rsi - 0x4b]
43a7d3: movdqu xmmword ptr [rdi - 0x4b], xmm0
43a7d8: lddqu xmm0, xmmword ptr [rsi - 0x3b]
43a7dd: movdqu xmmword ptr [rdi - 0x3b], xmm0
43a7e2: lddqu xmm0, xmmword ptr [rsi - 0x2b]
43a7e7: movdqu xmmword ptr [rdi - 0x2b], xmm0
43a7ec: lddqu xmm0, xmmword ptr [rsi - 0x1b]
43a7f1: lddqu xmm1, xmmword ptr [rsi - 0x10]
43a7f6: movdqu xmmword ptr [rdi - 0x1b], xmm0
43a7fb: movdqu xmmword ptr [rdi - 0x10], xmm1
43a800: ret 
43a801: nop word ptr cs:[rax + rax]
43a80c: nop dword ptr [rax]
43a810: mov rdx, qword ptr [rsi - 0xb]
43a814: mov ecx, dword ptr [rsi - 4]
43a817: mov qword ptr [rdi - 0xb], rdx
43a81b: mov dword ptr [rdi - 4], ecx
43a81e: ret 
43a81f: nop 
43a820: lddqu xmm0, xmmword ptr [rsi - 0x8a]
43a828: movdqu xmmword ptr [rdi - 0x8a], xmm0
43a830: lddqu xmm0, xmmword ptr [rsi - 0x7a]
43a835: movdqu xmmword ptr [rdi - 0x7a], xmm0
43a83a: lddqu xmm0, xmmword ptr [rsi - 0x6a]
43a83f: movdqu xmmword ptr [rdi - 0x6a], xmm0
43a844: lddqu xmm0, xmmword ptr [rsi - 0x5a]
43a849: movdqu xmmword ptr [rdi - 0x5a], xmm0
43a84e: lddqu xmm0, xmmword ptr [rsi - 0x4a]
43a853: movdqu xmmword ptr [rdi - 0x4a], xmm0
43a858: lddqu xmm0, xmmword ptr [rsi - 0x3a]
43a85d: movdqu xmmword ptr [rdi - 0x3a], xmm0
43a862: lddqu xmm0, xmmword ptr [rsi - 0x2a]
43a867: movdqu xmmword ptr [rdi - 0x2a], xmm0
43a86c: lddqu xmm0, xmmword ptr [rsi - 0x1a]
43a871: lddqu xmm1, xmmword ptr [rsi - 0x10]
43a876: movdqu xmmword ptr [rdi - 0x1a], xmm0
43a87b: movdqu xmmword ptr [rdi - 0x10], xmm1
43a880: ret 
43a881: nop word ptr cs:[rax + rax]
43a88c: nop dword ptr [rax]
43a890: mov rdx, qword ptr [rsi - 0xa]
43a894: mov ecx, dword ptr [rsi - 4]
43a897: mov qword ptr [rdi - 0xa], rdx
43a89b: mov dword ptr [rdi - 4], ecx
43a89e: ret 
43a89f: nop 
43a8a0: lddqu xmm0, xmmword ptr [rsi - 0x89]
43a8a8: movdqu xmmword ptr [rdi - 0x89], xmm0
43a8b0: lddqu xmm0, xmmword ptr [rsi - 0x79]
43a8b5: movdqu xmmword ptr [rdi - 0x79], xmm0
43a8ba: lddqu xmm0, xmmword ptr [rsi - 0x69]
43a8bf: movdqu xmmword ptr [rdi - 0x69], xmm0
43a8c4: lddqu xmm0, xmmword ptr [rsi - 0x59]
43a8c9: movdqu xmmword ptr [rdi - 0x59], xmm0
43a8ce: lddqu xmm0, xmmword ptr [rsi - 0x49]
43a8d3: movdqu xmmword ptr [rdi - 0x49], xmm0
43a8d8: lddqu xmm0, xmmword ptr [rsi - 0x39]
43a8dd: movdqu xmmword ptr [rdi - 0x39], xmm0
43a8e2: lddqu xmm0, xmmword ptr [rsi - 0x29]
43a8e7: movdqu xmmword ptr [rdi - 0x29], xmm0
43a8ec: lddqu xmm0, xmmword ptr [rsi - 0x19]
43a8f1: lddqu xmm1, xmmword ptr [rsi - 0x10]
43a8f6: movdqu xmmword ptr [rdi - 0x19], xmm0
43a8fb: movdqu xmmword ptr [rdi - 0x10], xmm1
43a900: ret 
43a901: nop word ptr cs:[rax + rax]
43a90c: nop dword ptr [rax]
43a910: mov rdx, qword ptr [rsi - 9]
43a914: mov ecx, dword ptr [rsi - 4]
43a917: mov qword ptr [rdi - 9], rdx
43a91b: mov dword ptr [rdi - 4], ecx
43a91e: ret 
43a91f: nop 
43a920: lddqu xmm0, xmmword ptr [rsi - 0x88]
43a928: movdqu xmmword ptr [rdi - 0x88], xmm0
43a930: lddqu xmm0, xmmword ptr [rsi - 0x78]
43a935: movdqu xmmword ptr [rdi - 0x78], xmm0
43a93a: lddqu xmm0, xmmword ptr [rsi - 0x68]
43a93f: movdqu xmmword ptr [rdi - 0x68], xmm0
43a944: lddqu xmm0, xmmword ptr [rsi - 0x58]
43a949: movdqu xmmword ptr [rdi - 0x58], xmm0
43a94e: lddqu xmm0, xmmword ptr [rsi - 0x48]
43a953: movdqu xmmword ptr [rdi - 0x48], xmm0
43a958: lddqu xmm0, xmmword ptr [rsi - 0x38]
43a95d: movdqu xmmword ptr [rdi - 0x38], xmm0
43a962: lddqu xmm0, xmmword ptr [rsi - 0x28]
43a967: movdqu xmmword ptr [rdi - 0x28], xmm0
43a96c: lddqu xmm0, xmmword ptr [rsi - 0x18]
43a971: lddqu xmm1, xmmword ptr [rsi - 0x10]
43a976: movdqu xmmword ptr [rdi - 0x18], xmm0
43a97b: movdqu xmmword ptr [rdi - 0x10], xmm1
43a980: ret 
43a981: nop word ptr cs:[rax + rax]
43a98c: nop dword ptr [rax]
43a990: mov rdx, qword ptr [rsi - 8]
43a994: mov qword ptr [rdi - 8], rdx
43a998: ret 
43a999: nop dword ptr [rax]
43a9a0: lddqu xmm0, xmmword ptr [rsi - 0x87]
43a9a8: movdqu xmmword ptr [rdi - 0x87], xmm0
43a9b0: lddqu xmm0, xmmword ptr [rsi - 0x77]
43a9b5: movdqu xmmword ptr [rdi - 0x77], xmm0
43a9ba: lddqu xmm0, xmmword ptr [rsi - 0x67]
43a9bf: movdqu xmmword ptr [rdi - 0x67], xmm0
43a9c4: lddqu xmm0, xmmword ptr [rsi - 0x57]
43a9c9: movdqu xmmword ptr [rdi - 0x57], xmm0
43a9ce: lddqu xmm0, xmmword ptr [rsi - 0x47]
43a9d3: movdqu xmmword ptr [rdi - 0x47], xmm0
43a9d8: lddqu xmm0, xmmword ptr [rsi - 0x37]
43a9dd: movdqu xmmword ptr [rdi - 0x37], xmm0
43a9e2: lddqu xmm0, xmmword ptr [rsi - 0x27]
43a9e7: movdqu xmmword ptr [rdi - 0x27], xmm0
43a9ec: lddqu xmm0, xmmword ptr [rsi - 0x17]
43a9f1: lddqu xmm1, xmmword ptr [rsi - 0x10]
43a9f6: movdqu xmmword ptr [rdi - 0x17], xmm0
43a9fb: movdqu xmmword ptr [rdi - 0x10], xmm1
43aa00: ret 
43aa01: nop word ptr cs:[rax + rax]
43aa0c: nop dword ptr [rax]
43aa10: mov edx, dword ptr [rsi - 7]
43aa13: mov ecx, dword ptr [rsi - 4]
43aa16: mov dword ptr [rdi - 7], edx
43aa19: mov dword ptr [rdi - 4], ecx
43aa1c: ret 
43aa1d: nop dword ptr [rax]
43aa20: lddqu xmm0, xmmword ptr [rsi - 0x86]
43aa28: movdqu xmmword ptr [rdi - 0x86], xmm0
43aa30: lddqu xmm0, xmmword ptr [rsi - 0x76]
43aa35: movdqu xmmword ptr [rdi - 0x76], xmm0
43aa3a: lddqu xmm0, xmmword ptr [rsi - 0x66]
43aa3f: movdqu xmmword ptr [rdi - 0x66], xmm0
43aa44: lddqu xmm0, xmmword ptr [rsi - 0x56]
43aa49: movdqu xmmword ptr [rdi - 0x56], xmm0
43aa4e: lddqu xmm0, xmmword ptr [rsi - 0x46]
43aa53: movdqu xmmword ptr [rdi - 0x46], xmm0
43aa58: lddqu xmm0, xmmword ptr [rsi - 0x36]
43aa5d: movdqu xmmword ptr [rdi - 0x36], xmm0
43aa62: lddqu xmm0, xmmword ptr [rsi - 0x26]
43aa67: movdqu xmmword ptr [rdi - 0x26], xmm0
43aa6c: lddqu xmm0, xmmword ptr [rsi - 0x16]
43aa71: lddqu xmm1, xmmword ptr [rsi - 0x10]
43aa76: movdqu xmmword ptr [rdi - 0x16], xmm0
43aa7b: movdqu xmmword ptr [rdi - 0x10], xmm1
43aa80: ret 
43aa81: nop word ptr cs:[rax + rax]
43aa8c: nop dword ptr [rax]
43aa90: mov edx, dword ptr [rsi - 6]
43aa93: mov ecx, dword ptr [rsi - 4]
43aa96: mov dword ptr [rdi - 6], edx
43aa99: mov dword ptr [rdi - 4], ecx
43aa9c: ret 
43aa9d: nop dword ptr [rax]
43aaa0: lddqu xmm0, xmmword ptr [rsi - 0x85]
43aaa8: movdqu xmmword ptr [rdi - 0x85], xmm0
43aab0: lddqu xmm0, xmmword ptr [rsi - 0x75]
43aab5: movdqu xmmword ptr [rdi - 0x75], xmm0
43aaba: lddqu xmm0, xmmword ptr [rsi - 0x65]
43aabf: movdqu xmmword ptr [rdi - 0x65], xmm0
43aac4: lddqu xmm0, xmmword ptr [rsi - 0x55]
43aac9: movdqu xmmword ptr [rdi - 0x55], xmm0
43aace: lddqu xmm0, xmmword ptr [rsi - 0x45]
43aad3: movdqu xmmword ptr [rdi - 0x45], xmm0
43aad8: lddqu xmm0, xmmword ptr [rsi - 0x35]
43aadd: movdqu xmmword ptr [rdi - 0x35], xmm0
43aae2: lddqu xmm0, xmmword ptr [rsi - 0x25]
43aae7: movdqu xmmword ptr [rdi - 0x25], xmm0
43aaec: lddqu xmm0, xmmword ptr [rsi - 0x15]
43aaf1: lddqu xmm1, xmmword ptr [rsi - 0x10]
43aaf6: movdqu xmmword ptr [rdi - 0x15], xmm0
43aafb: movdqu xmmword ptr [rdi - 0x10], xmm1
43ab00: ret 
43ab01: nop word ptr cs:[rax + rax]
43ab0c: nop dword ptr [rax]
43ab10: mov edx, dword ptr [rsi - 5]
43ab13: mov ecx, dword ptr [rsi - 4]
43ab16: mov dword ptr [rdi - 5], edx
43ab19: mov dword ptr [rdi - 4], ecx
43ab1c: ret 
43ab1d: nop dword ptr [rax]
43ab20: lddqu xmm0, xmmword ptr [rsi - 0x84]
43ab28: movdqu xmmword ptr [rdi - 0x84], xmm0
43ab30: lddqu xmm0, xmmword ptr [rsi - 0x74]
43ab35: movdqu xmmword ptr [rdi - 0x74], xmm0
43ab3a: lddqu xmm0, xmmword ptr [rsi - 0x64]
43ab3f: movdqu xmmword ptr [rdi - 0x64], xmm0
43ab44: lddqu xmm0, xmmword ptr [rsi - 0x54]
43ab49: movdqu xmmword ptr [rdi - 0x54], xmm0
43ab4e: lddqu xmm0, xmmword ptr [rsi - 0x44]
43ab53: movdqu xmmword ptr [rdi - 0x44], xmm0
43ab58: lddqu xmm0, xmmword ptr [rsi - 0x34]
43ab5d: movdqu xmmword ptr [rdi - 0x34], xmm0
43ab62: lddqu xmm0, xmmword ptr [rsi - 0x24]
43ab67: movdqu xmmword ptr [rdi - 0x24], xmm0
43ab6c: lddqu xmm0, xmmword ptr [rsi - 0x14]
43ab71: lddqu xmm1, xmmword ptr [rsi - 0x10]
43ab76: movdqu xmmword ptr [rdi - 0x14], xmm0
43ab7b: movdqu xmmword ptr [rdi - 0x10], xmm1
43ab80: ret 
43ab81: nop word ptr cs:[rax + rax]
43ab8c: nop dword ptr [rax]
43ab90: mov edx, dword ptr [rsi - 4]
43ab93: mov dword ptr [rdi - 4], edx
43ab96: ret 
43ab97: nop word ptr [rax + rax]
43aba0: lddqu xmm0, xmmword ptr [rsi - 0x83]
43aba8: movdqu xmmword ptr [rdi - 0x83], xmm0
43abb0: lddqu xmm0, xmmword ptr [rsi - 0x73]
43abb5: movdqu xmmword ptr [rdi - 0x73], xmm0
43abba: lddqu xmm0, xmmword ptr [rsi - 0x63]
43abbf: movdqu xmmword ptr [rdi - 0x63], xmm0
43abc4: lddqu xmm0, xmmword ptr [rsi - 0x53]
43abc9: movdqu xmmword ptr [rdi - 0x53], xmm0
43abce: lddqu xmm0, xmmword ptr [rsi - 0x43]
43abd3: movdqu xmmword ptr [rdi - 0x43], xmm0
43abd8: lddqu xmm0, xmmword ptr [rsi - 0x33]
43abdd: movdqu xmmword ptr [rdi - 0x33], xmm0
43abe2: lddqu xmm0, xmmword ptr [rsi - 0x23]
43abe7: movdqu xmmword ptr [rdi - 0x23], xmm0
43abec: lddqu xmm0, xmmword ptr [rsi - 0x13]
43abf1: lddqu xmm1, xmmword ptr [rsi - 0x10]
43abf6: movdqu xmmword ptr [rdi - 0x13], xmm0
43abfb: movdqu xmmword ptr [rdi - 0x10], xmm1
43ac00: ret 
43ac01: nop word ptr cs:[rax + rax]
43ac0c: nop dword ptr [rax]
43ac10: mov dx, word ptr [rsi - 3]
43ac14: mov cx, word ptr [rsi - 2]
43ac18: mov word ptr [rdi - 3], dx
43ac1c: mov word ptr [rdi - 2], cx
43ac20: ret 
43ac21: nop word ptr cs:[rax + rax]
43ac2c: nop dword ptr [rax]
43ac30: lddqu xmm0, xmmword ptr [rsi - 0x82]
43ac38: movdqu xmmword ptr [rdi - 0x82], xmm0
43ac40: lddqu xmm0, xmmword ptr [rsi - 0x72]
43ac45: movdqu xmmword ptr [rdi - 0x72], xmm0
43ac4a: lddqu xmm0, xmmword ptr [rsi - 0x62]
43ac4f: movdqu xmmword ptr [rdi - 0x62], xmm0
43ac54: lddqu xmm0, xmmword ptr [rsi - 0x52]
43ac59: movdqu xmmword ptr [rdi - 0x52], xmm0
43ac5e: lddqu xmm0, xmmword ptr [rsi - 0x42]
43ac63: movdqu xmmword ptr [rdi - 0x42], xmm0
43ac68: lddqu xmm0, xmmword ptr [rsi - 0x32]
43ac6d: movdqu xmmword ptr [rdi - 0x32], xmm0
43ac72: lddqu xmm0, xmmword ptr [rsi - 0x22]
43ac77: movdqu xmmword ptr [rdi - 0x22], xmm0
43ac7c: lddqu xmm0, xmmword ptr [rsi - 0x12]
43ac81: lddqu xmm1, xmmword ptr [rsi - 0x10]
43ac86: movdqu xmmword ptr [rdi - 0x12], xmm0
43ac8b: movdqu xmmword ptr [rdi - 0x10], xmm1
43ac90: ret 
43ac91: nop word ptr cs:[rax + rax]
43ac9c: nop dword ptr [rax]
43aca0: movzx edx, word ptr [rsi - 2]
43aca4: mov word ptr [rdi - 2], dx
43aca8: ret 
43aca9: nop dword ptr [rax]
43acb0: lddqu xmm0, xmmword ptr [rsi - 0x81]
43acb8: movdqu xmmword ptr [rdi - 0x81], xmm0
43acc0: lddqu xmm0, xmmword ptr [rsi - 0x71]
43acc5: movdqu xmmword ptr [rdi - 0x71], xmm0
43acca: lddqu xmm0, xmmword ptr [rsi - 0x61]
43accf: movdqu xmmword ptr [rdi - 0x61], xmm0
43acd4: lddqu xmm0, xmmword ptr [rsi - 0x51]
43acd9: movdqu xmmword ptr [rdi - 0x51], xmm0
43acde: lddqu xmm0, xmmword ptr [rsi - 0x41]
43ace3: movdqu xmmword ptr [rdi - 0x41], xmm0
43ace8: lddqu xmm0, xmmword ptr [rsi - 0x31]
43aced: movdqu xmmword ptr [rdi - 0x31], xmm0
43acf2: lddqu xmm0, xmmword ptr [rsi - 0x21]
43acf7: movdqu xmmword ptr [rdi - 0x21], xmm0
43acfc: lddqu xmm0, xmmword ptr [rsi - 0x11]
43ad01: lddqu xmm1, xmmword ptr [rsi - 0x10]
43ad06: movdqu xmmword ptr [rdi - 0x11], xmm0
43ad0b: movdqu xmmword ptr [rdi - 0x10], xmm1
43ad10: ret 
43ad11: nop word ptr cs:[rax + rax]
43ad1c: nop dword ptr [rax]
43ad20: movzx edx, byte ptr [rsi - 1]
43ad24: mov byte ptr [rdi - 1], dl
43ad27: ret 
43ad28: nop dword ptr [rax + rax]
43ad30: lddqu xmm0, xmmword ptr [rsi + 0x70]
43ad35: movdqu xmmword ptr [rdi + 0x70], xmm0
43ad3a: lddqu xmm0, xmmword ptr [rsi + 0x60]
43ad3f: movdqu xmmword ptr [rdi + 0x60], xmm0
43ad44: lddqu xmm0, xmmword ptr [rsi + 0x50]
43ad49: movdqu xmmword ptr [rdi + 0x50], xmm0
43ad4e: lddqu xmm0, xmmword ptr [rsi + 0x40]
43ad53: movdqu xmmword ptr [rdi + 0x40], xmm0
43ad58: lddqu xmm0, xmmword ptr [rsi + 0x30]
43ad5d: movdqu xmmword ptr [rdi + 0x30], xmm0
43ad62: lddqu xmm0, xmmword ptr [rsi + 0x20]
43ad67: movdqu xmmword ptr [rdi + 0x20], xmm0
43ad6c: lddqu xmm0, xmmword ptr [rsi + 0x10]
43ad71: movdqu xmmword ptr [rdi + 0x10], xmm0
43ad76: lddqu xmm0, xmmword ptr [rsi]
43ad7a: movdqu xmmword ptr [rdi], xmm0
43ad7e: ret 
43ad7f: nop 
43ad80: lddqu xmm0, xmmword ptr [rsi + 0x7f]
43ad85: movdqu xmmword ptr [rdi + 0x7f], xmm0
43ad8a: lddqu xmm0, xmmword ptr [rsi + 0x6f]
43ad8f: movdqu xmmword ptr [rdi + 0x6f], xmm0
43ad94: lddqu xmm0, xmmword ptr [rsi + 0x5f]
43ad99: movdqu xmmword ptr [rdi + 0x5f], xmm0
43ad9e: lddqu xmm0, xmmword ptr [rsi + 0x4f]
43ada3: movdqu xmmword ptr [rdi + 0x4f], xmm0
43ada8: lddqu xmm0, xmmword ptr [rsi + 0x3f]
43adad: movdqu xmmword ptr [rdi + 0x3f], xmm0
43adb2: lddqu xmm0, xmmword ptr [rsi + 0x2f]
43adb7: movdqu xmmword ptr [rdi + 0x2f], xmm0
43adbc: lddqu xmm0, xmmword ptr [rsi + 0x1f]
43adc1: movdqu xmmword ptr [rdi + 0x1f], xmm0
43adc6: lddqu xmm0, xmmword ptr [rsi + 0xf]
43adcb: lddqu xmm1, xmmword ptr [rsi]
43adcf: movdqu xmmword ptr [rdi + 0xf], xmm0
43add4: movdqu xmmword ptr [rdi], xmm1
43add8: ret 
43add9: nop dword ptr [rax]
43ade0: mov rdx, qword ptr [rsi + 7]
43ade4: mov rcx, qword ptr [rsi]
43ade7: mov qword ptr [rdi + 7], rdx
43adeb: mov qword ptr [rdi], rcx
43adee: ret 
43adef: nop 
43adf0: lddqu xmm0, xmmword ptr [rsi + 0x7e]
43adf5: movdqu xmmword ptr [rdi + 0x7e], xmm0
43adfa: lddqu xmm0, xmmword ptr [rsi + 0x6e]
43adff: movdqu xmmword ptr [rdi + 0x6e], xmm0
43ae04: lddqu xmm0, xmmword ptr [rsi + 0x5e]
43ae09: movdqu xmmword ptr [rdi + 0x5e], xmm0
43ae0e: lddqu xmm0, xmmword ptr [rsi + 0x4e]
43ae13: movdqu xmmword ptr [rdi + 0x4e], xmm0
43ae18: lddqu xmm0, xmmword ptr [rsi + 0x3e]
43ae1d: movdqu xmmword ptr [rdi + 0x3e], xmm0
43ae22: lddqu xmm0, xmmword ptr [rsi + 0x2e]
43ae27: movdqu xmmword ptr [rdi + 0x2e], xmm0
43ae2c: lddqu xmm0, xmmword ptr [rsi + 0x1e]
43ae31: movdqu xmmword ptr [rdi + 0x1e], xmm0
43ae36: lddqu xmm0, xmmword ptr [rsi + 0xe]
43ae3b: lddqu xmm1, xmmword ptr [rsi]
43ae3f: movdqu xmmword ptr [rdi + 0xe], xmm0
43ae44: movdqu xmmword ptr [rdi], xmm1
43ae48: ret 
43ae49: nop dword ptr [rax]
43ae50: mov rdx, qword ptr [rsi + 6]
43ae54: mov rcx, qword ptr [rsi]
43ae57: mov qword ptr [rdi + 6], rdx
43ae5b: mov qword ptr [rdi], rcx
43ae5e: ret 
43ae5f: nop 
43ae60: lddqu xmm0, xmmword ptr [rsi + 0x7d]
43ae65: movdqu xmmword ptr [rdi + 0x7d], xmm0
43ae6a: lddqu xmm0, xmmword ptr [rsi + 0x6d]
43ae6f: movdqu xmmword ptr [rdi + 0x6d], xmm0
43ae74: lddqu xmm0, xmmword ptr [rsi + 0x5d]
43ae79: movdqu xmmword ptr [rdi + 0x5d], xmm0
43ae7e: lddqu xmm0, xmmword ptr [rsi + 0x4d]
43ae83: movdqu xmmword ptr [rdi + 0x4d], xmm0
43ae88: lddqu xmm0, xmmword ptr [rsi + 0x3d]
43ae8d: movdqu xmmword ptr [rdi + 0x3d], xmm0
43ae92: lddqu xmm0, xmmword ptr [rsi + 0x2d]
43ae97: movdqu xmmword ptr [rdi + 0x2d], xmm0
43ae9c: lddqu xmm0, xmmword ptr [rsi + 0x1d]
43aea1: movdqu xmmword ptr [rdi + 0x1d], xmm0
43aea6: lddqu xmm0, xmmword ptr [rsi + 0xd]
43aeab: lddqu xmm1, xmmword ptr [rsi]
43aeaf: movdqu xmmword ptr [rdi + 0xd], xmm0
43aeb4: movdqu xmmword ptr [rdi], xmm1
43aeb8: ret 
43aeb9: nop dword ptr [rax]
43aec0: mov rdx, qword ptr [rsi + 5]
43aec4: mov rcx, qword ptr [rsi]
43aec7: mov qword ptr [rdi + 5], rdx
43aecb: mov qword ptr [rdi], rcx
43aece: ret 
43aecf: nop 
43aed0: lddqu xmm0, xmmword ptr [rsi + 0x7c]
43aed5: movdqu xmmword ptr [rdi + 0x7c], xmm0
43aeda: lddqu xmm0, xmmword ptr [rsi + 0x6c]
43aedf: movdqu xmmword ptr [rdi + 0x6c], xmm0
43aee4: lddqu xmm0, xmmword ptr [rsi + 0x5c]
43aee9: movdqu xmmword ptr [rdi + 0x5c], xmm0
43aeee: lddqu xmm0, xmmword ptr [rsi + 0x4c]
43aef3: movdqu xmmword ptr [rdi + 0x4c], xmm0
43aef8: lddqu xmm0, xmmword ptr [rsi + 0x3c]
43aefd: movdqu xmmword ptr [rdi + 0x3c], xmm0
43af02: lddqu xmm0, xmmword ptr [rsi + 0x2c]
43af07: movdqu xmmword ptr [rdi + 0x2c], xmm0
43af0c: lddqu xmm0, xmmword ptr [rsi + 0x1c]
43af11: movdqu xmmword ptr [rdi + 0x1c], xmm0
43af16: lddqu xmm0, xmmword ptr [rsi + 0xc]
43af1b: lddqu xmm1, xmmword ptr [rsi]
43af1f: movdqu xmmword ptr [rdi + 0xc], xmm0
43af24: movdqu xmmword ptr [rdi], xmm1
43af28: ret 
43af29: nop dword ptr [rax]
43af30: mov rdx, qword ptr [rsi + 4]
43af34: mov rcx, qword ptr [rsi]
43af37: mov qword ptr [rdi + 4], rdx
43af3b: mov qword ptr [rdi], rcx
43af3e: ret 
43af3f: nop 
43af40: lddqu xmm0, xmmword ptr [rsi + 0x7b]
43af45: movdqu xmmword ptr [rdi + 0x7b], xmm0
43af4a: lddqu xmm0, xmmword ptr [rsi + 0x6b]
43af4f: movdqu xmmword ptr [rdi + 0x6b], xmm0
43af54: lddqu xmm0, xmmword ptr [rsi + 0x5b]
43af59: movdqu xmmword ptr [rdi + 0x5b], xmm0
43af5e: lddqu xmm0, xmmword ptr [rsi + 0x4b]
43af63: movdqu xmmword ptr [rdi + 0x4b], xmm0
43af68: lddqu xmm0, xmmword ptr [rsi + 0x3b]
43af6d: movdqu xmmword ptr [rdi + 0x3b], xmm0
43af72: lddqu xmm0, xmmword ptr [rsi + 0x2b]
43af77: movdqu xmmword ptr [rdi + 0x2b], xmm0
43af7c: lddqu xmm0, xmmword ptr [rsi + 0x1b]
43af81: movdqu xmmword ptr [rdi + 0x1b], xmm0
43af86: lddqu xmm0, xmmword ptr [rsi + 0xb]
43af8b: lddqu xmm1, xmmword ptr [rsi]
43af8f: movdqu xmmword ptr [rdi + 0xb], xmm0
43af94: movdqu xmmword ptr [rdi], xmm1
43af98: ret 
43af99: nop dword ptr [rax]
43afa0: mov rdx, qword ptr [rsi + 3]
43afa4: mov rcx, qword ptr [rsi]
43afa7: mov qword ptr [rdi + 3], rdx
43afab: mov qword ptr [rdi], rcx
43afae: ret 
43afaf: nop 
43afb0: lddqu xmm0, xmmword ptr [rsi + 0x7a]
43afb5: movdqu xmmword ptr [rdi + 0x7a], xmm0
43afba: lddqu xmm0, xmmword ptr [rsi + 0x6a]
43afbf: movdqu xmmword ptr [rdi + 0x6a], xmm0
43afc4: lddqu xmm0, xmmword ptr [rsi + 0x5a]
43afc9: movdqu xmmword ptr [rdi + 0x5a], xmm0
43afce: lddqu xmm0, xmmword ptr [rsi + 0x4a]
43afd3: movdqu xmmword ptr [rdi + 0x4a], xmm0
43afd8: lddqu xmm0, xmmword ptr [rsi + 0x3a]
43afdd: movdqu xmmword ptr [rdi + 0x3a], xmm0
43afe2: lddqu xmm0, xmmword ptr [rsi + 0x2a]
43afe7: movdqu xmmword ptr [rdi + 0x2a], xmm0
43afec: lddqu xmm0, xmmword ptr [rsi + 0x1a]
43aff1: movdqu xmmword ptr [rdi + 0x1a], xmm0
43aff6: lddqu xmm0, xmmword ptr [rsi + 0xa]
43affb: lddqu xmm1, xmmword ptr [rsi]
43afff: movdqu xmmword ptr [rdi + 0xa], xmm0
43b004: movdqu xmmword ptr [rdi], xmm1
43b008: ret 
43b009: nop dword ptr [rax]
43b010: mov rdx, qword ptr [rsi + 2]
43b014: mov rcx, qword ptr [rsi]
43b017: mov qword ptr [rdi + 2], rdx
43b01b: mov qword ptr [rdi], rcx
43b01e: ret 
43b01f: nop 
43b020: lddqu xmm0, xmmword ptr [rsi + 0x79]
43b025: movdqu xmmword ptr [rdi + 0x79], xmm0
43b02a: lddqu xmm0, xmmword ptr [rsi + 0x69]
43b02f: movdqu xmmword ptr [rdi + 0x69], xmm0
43b034: lddqu xmm0, xmmword ptr [rsi + 0x59]
43b039: movdqu xmmword ptr [rdi + 0x59], xmm0
43b03e: lddqu xmm0, xmmword ptr [rsi + 0x49]
43b043: movdqu xmmword ptr [rdi + 0x49], xmm0
43b048: lddqu xmm0, xmmword ptr [rsi + 0x39]
43b04d: movdqu xmmword ptr [rdi + 0x39], xmm0
43b052: lddqu xmm0, xmmword ptr [rsi + 0x29]
43b057: movdqu xmmword ptr [rdi + 0x29], xmm0
43b05c: lddqu xmm0, xmmword ptr [rsi + 0x19]
43b061: movdqu xmmword ptr [rdi + 0x19], xmm0
43b066: lddqu xmm0, xmmword ptr [rsi + 9]
43b06b: lddqu xmm1, xmmword ptr [rsi]
43b06f: movdqu xmmword ptr [rdi + 9], xmm0
43b074: movdqu xmmword ptr [rdi], xmm1
43b078: ret 
43b079: nop dword ptr [rax]
43b080: mov rdx, qword ptr [rsi + 1]
43b084: mov rcx, qword ptr [rsi]
43b087: mov qword ptr [rdi + 1], rdx
43b08b: mov qword ptr [rdi], rcx
43b08e: ret 
43b08f: nop 
43b090: lddqu xmm0, xmmword ptr [rsi + 0x78]
43b095: movdqu xmmword ptr [rdi + 0x78], xmm0
43b09a: lddqu xmm0, xmmword ptr [rsi + 0x68]
43b09f: movdqu xmmword ptr [rdi + 0x68], xmm0
43b0a4: lddqu xmm0, xmmword ptr [rsi + 0x58]
43b0a9: movdqu xmmword ptr [rdi + 0x58], xmm0
43b0ae: lddqu xmm0, xmmword ptr [rsi + 0x48]
43b0b3: movdqu xmmword ptr [rdi + 0x48], xmm0
43b0b8: lddqu xmm0, xmmword ptr [rsi + 0x38]
43b0bd: movdqu xmmword ptr [rdi + 0x38], xmm0
43b0c2: lddqu xmm0, xmmword ptr [rsi + 0x28]
43b0c7: movdqu xmmword ptr [rdi + 0x28], xmm0
43b0cc: lddqu xmm0, xmmword ptr [rsi + 0x18]
43b0d1: movdqu xmmword ptr [rdi + 0x18], xmm0
43b0d6: lddqu xmm0, xmmword ptr [rsi + 8]
43b0db: lddqu xmm1, xmmword ptr [rsi]
43b0df: movdqu xmmword ptr [rdi + 8], xmm0
43b0e4: movdqu xmmword ptr [rdi], xmm1
43b0e8: ret 
43b0e9: nop dword ptr [rax]
43b0f0: mov rdx, qword ptr [rsi]
43b0f3: mov qword ptr [rdi], rdx
43b0f6: ret 
43b0f7: nop word ptr [rax + rax]
43b100: lddqu xmm0, xmmword ptr [rsi + 0x77]
43b105: movdqu xmmword ptr [rdi + 0x77], xmm0
43b10a: lddqu xmm0, xmmword ptr [rsi + 0x67]
43b10f: movdqu xmmword ptr [rdi + 0x67], xmm0
43b114: lddqu xmm0, xmmword ptr [rsi + 0x57]
43b119: movdqu xmmword ptr [rdi + 0x57], xmm0
43b11e: lddqu xmm0, xmmword ptr [rsi + 0x47]
43b123: movdqu xmmword ptr [rdi + 0x47], xmm0
43b128: lddqu xmm0, xmmword ptr [rsi + 0x37]
43b12d: movdqu xmmword ptr [rdi + 0x37], xmm0
43b132: lddqu xmm0, xmmword ptr [rsi + 0x27]
43b137: movdqu xmmword ptr [rdi + 0x27], xmm0
43b13c: lddqu xmm0, xmmword ptr [rsi + 0x17]
43b141: movdqu xmmword ptr [rdi + 0x17], xmm0
43b146: lddqu xmm0, xmmword ptr [rsi + 7]
43b14b: lddqu xmm1, xmmword ptr [rsi]
43b14f: movdqu xmmword ptr [rdi + 7], xmm0
43b154: movdqu xmmword ptr [rdi], xmm1
43b158: ret 
43b159: nop dword ptr [rax]
43b160: mov edx, dword ptr [rsi + 3]
43b163: mov ecx, dword ptr [rsi]
43b165: mov dword ptr [rdi + 3], edx
43b168: mov dword ptr [rdi], ecx
43b16a: ret 
43b16b: nop dword ptr [rax + rax]
43b170: lddqu xmm0, xmmword ptr [rsi + 0x76]
43b175: movdqu xmmword ptr [rdi + 0x76], xmm0
43b17a: lddqu xmm0, xmmword ptr [rsi + 0x66]
43b17f: movdqu xmmword ptr [rdi + 0x66], xmm0
43b184: lddqu xmm0, xmmword ptr [rsi + 0x56]
43b189: movdqu xmmword ptr [rdi + 0x56], xmm0
43b18e: lddqu xmm0, xmmword ptr [rsi + 0x46]
43b193: movdqu xmmword ptr [rdi + 0x46], xmm0
43b198: lddqu xmm0, xmmword ptr [rsi + 0x36]
43b19d: movdqu xmmword ptr [rdi + 0x36], xmm0
43b1a2: lddqu xmm0, xmmword ptr [rsi + 0x26]
43b1a7: movdqu xmmword ptr [rdi + 0x26], xmm0
43b1ac: lddqu xmm0, xmmword ptr [rsi + 0x16]
43b1b1: movdqu xmmword ptr [rdi + 0x16], xmm0
43b1b6: lddqu xmm0, xmmword ptr [rsi + 6]
43b1bb: lddqu xmm1, xmmword ptr [rsi]
43b1bf: movdqu xmmword ptr [rdi + 6], xmm0
43b1c4: movdqu xmmword ptr [rdi], xmm1
43b1c8: ret 
43b1c9: nop dword ptr [rax]
43b1d0: mov edx, dword ptr [rsi + 2]
43b1d3: mov ecx, dword ptr [rsi]
43b1d5: mov dword ptr [rdi + 2], edx
43b1d8: mov dword ptr [rdi], ecx
43b1da: ret 
43b1db: nop dword ptr [rax + rax]
43b1e0: lddqu xmm0, xmmword ptr [rsi + 0x75]
43b1e5: movdqu xmmword ptr [rdi + 0x75], xmm0
43b1ea: lddqu xmm0, xmmword ptr [rsi + 0x65]
43b1ef: movdqu xmmword ptr [rdi + 0x65], xmm0
43b1f4: lddqu xmm0, xmmword ptr [rsi + 0x55]
43b1f9: movdqu xmmword ptr [rdi + 0x55], xmm0
43b1fe: lddqu xmm0, xmmword ptr [rsi + 0x45]
43b203: movdqu xmmword ptr [rdi + 0x45], xmm0
43b208: lddqu xmm0, xmmword ptr [rsi + 0x35]
43b20d: movdqu xmmword ptr [rdi + 0x35], xmm0
43b212: lddqu xmm0, xmmword ptr [rsi + 0x25]
43b217: movdqu xmmword ptr [rdi + 0x25], xmm0
43b21c: lddqu xmm0, xmmword ptr [rsi + 0x15]
43b221: movdqu xmmword ptr [rdi + 0x15], xmm0
43b226: lddqu xmm0, xmmword ptr [rsi + 5]
43b22b: lddqu xmm1, xmmword ptr [rsi]
43b22f: movdqu xmmword ptr [rdi + 5], xmm0
43b234: movdqu xmmword ptr [rdi], xmm1
43b238: ret 
43b239: nop dword ptr [rax]
43b240: mov edx, dword ptr [rsi + 1]
43b243: mov ecx, dword ptr [rsi]
43b245: mov dword ptr [rdi + 1], edx
43b248: mov dword ptr [rdi], ecx
43b24a: ret 
43b24b: nop dword ptr [rax + rax]
43b250: lddqu xmm0, xmmword ptr [rsi + 0x74]
43b255: movdqu xmmword ptr [rdi + 0x74], xmm0
43b25a: lddqu xmm0, xmmword ptr [rsi + 0x64]
43b25f: movdqu xmmword ptr [rdi + 0x64], xmm0
43b264: lddqu xmm0, xmmword ptr [rsi + 0x54]
43b269: movdqu xmmword ptr [rdi + 0x54], xmm0
43b26e: lddqu xmm0, xmmword ptr [rsi + 0x44]
43b273: movdqu xmmword ptr [rdi + 0x44], xmm0
43b278: lddqu xmm0, xmmword ptr [rsi + 0x34]
43b27d: movdqu xmmword ptr [rdi + 0x34], xmm0
43b282: lddqu xmm0, xmmword ptr [rsi + 0x24]
43b287: movdqu xmmword ptr [rdi + 0x24], xmm0
43b28c: lddqu xmm0, xmmword ptr [rsi + 0x14]
43b291: movdqu xmmword ptr [rdi + 0x14], xmm0
43b296: lddqu xmm0, xmmword ptr [rsi + 4]
43b29b: lddqu xmm1, xmmword ptr [rsi]
43b29f: movdqu xmmword ptr [rdi + 4], xmm0
43b2a4: movdqu xmmword ptr [rdi], xmm1
43b2a8: ret 
43b2a9: nop dword ptr [rax]
43b2b0: mov edx, dword ptr [rsi]
43b2b2: mov dword ptr [rdi], edx
43b2b4: ret 
43b2b5: nop word ptr cs:[rax + rax]
43b2c0: lddqu xmm0, xmmword ptr [rsi + 0x73]
43b2c5: movdqu xmmword ptr [rdi + 0x73], xmm0
43b2ca: lddqu xmm0, xmmword ptr [rsi + 0x63]
43b2cf: movdqu xmmword ptr [rdi + 0x63], xmm0
43b2d4: lddqu xmm0, xmmword ptr [rsi + 0x53]
43b2d9: movdqu xmmword ptr [rdi + 0x53], xmm0
43b2de: lddqu xmm0, xmmword ptr [rsi + 0x43]
43b2e3: movdqu xmmword ptr [rdi + 0x43], xmm0
43b2e8: lddqu xmm0, xmmword ptr [rsi + 0x33]
43b2ed: movdqu xmmword ptr [rdi + 0x33], xmm0
43b2f2: lddqu xmm0, xmmword ptr [rsi + 0x23]
43b2f7: movdqu xmmword ptr [rdi + 0x23], xmm0
43b2fc: lddqu xmm0, xmmword ptr [rsi + 0x13]
43b301: movdqu xmmword ptr [rdi + 0x13], xmm0
43b306: lddqu xmm0, xmmword ptr [rsi + 3]
43b30b: lddqu xmm1, xmmword ptr [rsi]
43b30f: movdqu xmmword ptr [rdi + 3], xmm0
43b314: movdqu xmmword ptr [rdi], xmm1
43b318: ret 
43b319: nop dword ptr [rax]
43b320: mov dx, word ptr [rsi + 1]
43b324: mov cx, word ptr [rsi]
43b327: mov word ptr [rdi + 1], dx
43b32b: mov word ptr [rdi], cx
43b32e: ret 
43b32f: nop 
43b330: lddqu xmm0, xmmword ptr [rsi + 0x72]
43b335: movdqu xmmword ptr [rdi + 0x72], xmm0
43b33a: lddqu xmm0, xmmword ptr [rsi + 0x62]
43b33f: movdqu xmmword ptr [rdi + 0x62], xmm0
43b344: lddqu xmm0, xmmword ptr [rsi + 0x52]
43b349: movdqu xmmword ptr [rdi + 0x52], xmm0
43b34e: lddqu xmm0, xmmword ptr [rsi + 0x42]
43b353: movdqu xmmword ptr [rdi + 0x42], xmm0
43b358: lddqu xmm0, xmmword ptr [rsi + 0x32]
43b35d: movdqu xmmword ptr [rdi + 0x32], xmm0
43b362: lddqu xmm0, xmmword ptr [rsi + 0x22]
43b367: movdqu xmmword ptr [rdi + 0x22], xmm0
43b36c: lddqu xmm0, xmmword ptr [rsi + 0x12]
43b371: movdqu xmmword ptr [rdi + 0x12], xmm0
43b376: lddqu xmm0, xmmword ptr [rsi + 2]
43b37b: lddqu xmm1, xmmword ptr [rsi]
43b37f: movdqu xmmword ptr [rdi + 2], xmm0
43b384: movdqu xmmword ptr [rdi], xmm1
43b388: ret 
43b389: nop dword ptr [rax]
43b390: movzx edx, word ptr [rsi]
43b393: mov word ptr [rdi], dx
43b396: ret 
43b397: nop word ptr [rax + rax]
43b3a0: lddqu xmm0, xmmword ptr [rsi + 0x71]
43b3a5: movdqu xmmword ptr [rdi + 0x71], xmm0
43b3aa: lddqu xmm0, xmmword ptr [rsi + 0x61]
43b3af: movdqu xmmword ptr [rdi + 0x61], xmm0
43b3b4: lddqu xmm0, xmmword ptr [rsi + 0x51]
43b3b9: movdqu xmmword ptr [rdi + 0x51], xmm0
43b3be: lddqu xmm0, xmmword ptr [rsi + 0x41]
43b3c3: movdqu xmmword ptr [rdi + 0x41], xmm0
43b3c8: lddqu xmm0, xmmword ptr [rsi + 0x31]
43b3cd: movdqu xmmword ptr [rdi + 0x31], xmm0
43b3d2: lddqu xmm0, xmmword ptr [rsi + 0x21]
43b3d7: movdqu xmmword ptr [rdi + 0x21], xmm0
43b3dc: lddqu xmm0, xmmword ptr [rsi + 0x11]
43b3e1: movdqu xmmword ptr [rdi + 0x11], xmm0
43b3e6: lddqu xmm0, xmmword ptr [rsi + 1]
43b3eb: lddqu xmm1, xmmword ptr [rsi]
43b3ef: movdqu xmmword ptr [rdi + 1], xmm0
43b3f4: movdqu xmmword ptr [rdi], xmm1
43b3f8: ret 
43b3f9: nop dword ptr [rax]
43b400: movzx edx, byte ptr [rsi]
43b403: mov byte ptr [rdi], dl
43b405: ret 
43b406: nop word ptr cs:[rax + rax]
43b410: endbr64 
43b414: cmp rcx, rdx
43b417: jb 0x454570
43b41d: nop dword ptr [rax]
43b420: endbr64 
43b424: mov rax, rdi
43b427: cmp rdi, rsi
43b42a: jb 0x43b453
43b42c: je 0x43d8ae
43b432: cmp rdx, 0x90
43b439: jae 0x43b4e0
43b43f: lea r11, [rip + 0x5c97a]
43b446: movsxd rdx, dword ptr [r11 + rdx*4]
43b44a: lea rdx, [r11 + rdx]
43b44e: notrack jmp rdx
43b451: ud2 
43b453: cmp rdx, 0x90
43b45a: jae 0x43b480
43b45c: add rsi, rdx
43b45f: add rdi, rdx
43b462: lea r11, [rip + 0x5cb97]
43b469: movsxd rdx, dword ptr [r11 + rdx*4]
43b46d: lea rdx, [r11 + rdx]
43b471: notrack jmp rdx
43b474: ud2 
43b476: nop word ptr cs:[rax + rax]
43b480: movdqu xmm0, xmmword ptr [rsi]
43b484: mov r8, rdi
43b487: and rdi, 0xfffffffffffffff0
43b48b: add rdi, 0x10
43b48f: mov r9, rdi
43b492: sub r9, r8
43b495: sub rdx, r9
43b498: add rsi, r9
43b49b: mov r9, rsi
43b49e: and r9, 0xf
43b4a2: je 0x43b540
43b4a8: mov rcx, qword ptr [rip + 0x85bc1]
43b4af: cmp rdx, rcx
43b4b2: jae 0x43cce0
43b4b8: lea r11, [rip + 0x5cd81]
43b4bf: sub rdx, 0x80
43b4c6: movsxd r9, dword ptr [r11 + r9*4]
43b4ca: add r9, r11
43b4cd: notrack jmp r9
43b4d1: ud2 
43b4d3: nop word ptr cs:[rax + rax]
43b4de: nop 
43b4e0: mov rcx, qword ptr [rip + 0x85b89]
43b4e7: shl rcx, 1
43b4ea: cmp rdx, rcx
43b4ed: ja 0x43ce90
43b4f3: add rdi, rdx
43b4f6: add rsi, rdx
43b4f9: movdqu xmm0, xmmword ptr [rsi - 0x10]
43b4fe: lea r8, [rdi - 0x10]
43b502: mov r9, rdi
43b505: and r9, 0xf
43b509: xor rdi, r9
43b50c: sub rsi, r9
43b50f: sub rdx, r9
43b512: mov r9, rsi
43b515: and r9, 0xf
43b519: je 0x43b5e0
43b51f: lea r11, [rip + 0x5cd5a]
43b526: sub rdx, 0x80
43b52d: movsxd r9, dword ptr [r11 + r9*4]
43b531: add r9, r11
43b534: notrack jmp r9
43b538: ud2 
43b53a: nop word ptr [rax + rax]
43b540: mov r9, rdx
43b543: shr r9, 8
43b547: add r9, rdx
43b54a: cmp r9, qword ptr [rip + 0x85b27]
43b551: jae 0x43cce0
43b557: sub rdx, 0x80
43b55e: nop 
43b560: movdqa xmm1, xmmword ptr [rsi]
43b564: movdqa xmmword ptr [rdi], xmm1
43b568: movaps xmm2, xmmword ptr [rsi + 0x10]
43b56c: movaps xmmword ptr [rdi + 0x10], xmm2
43b570: movaps xmm3, xmmword ptr [rsi + 0x20]
43b574: movaps xmmword ptr [rdi + 0x20], xmm3
43b578: movaps xmm4, xmmword ptr [rsi + 0x30]
43b57c: movaps xmmword ptr [rdi + 0x30], xmm4
43b580: movaps xmm1, xmmword ptr [rsi + 0x40]
43b584: movaps xmmword ptr [rdi + 0x40], xmm1
43b588: movaps xmm2, xmmword ptr [rsi + 0x50]
43b58c: movaps xmmword ptr [rdi + 0x50], xmm2
43b590: movaps xmm3, xmmword ptr [rsi + 0x60]
43b594: movaps xmmword ptr [rdi + 0x60], xmm3
43b598: movaps xmm4, xmmword ptr [rsi + 0x70]
43b59c: movaps xmmword ptr [rdi + 0x70], xmm4
43b5a0: sub rdx, 0x80
43b5a7: lea rsi, [rsi + 0x80]
43b5ae: lea rdi, [rdi + 0x80]
43b5b5: jae 0x43b560
43b5b7: movdqu xmmword ptr [r8], xmm0
43b5bc: add rdx, 0x80
43b5c3: add rsi, rdx
43b5c6: add rdi, rdx
43b5c9: lea r11, [rip + 0x5ca30]
43b5d0: movsxd rdx, dword ptr [r11 + rdx*4]
43b5d4: lea rdx, [r11 + rdx]
43b5d8: notrack jmp rdx
43b5db: ud2 
43b5dd: nop dword ptr [rax]
43b5e0: sub rdx, 0x80
43b5e7: movaps xmm1, xmmword ptr [rsi - 0x10]
43b5eb: movaps xmmword ptr [rdi - 0x10], xmm1
43b5ef: movaps xmm2, xmmword ptr [rsi - 0x20]
43b5f3: movaps xmmword ptr [rdi - 0x20], xmm2
43b5f7: movaps xmm3, xmmword ptr [rsi - 0x30]
43b5fb: movaps xmmword ptr [rdi - 0x30], xmm3
43b5ff: movaps xmm4, xmmword ptr [rsi - 0x40]
43b603: movaps xmmword ptr [rdi - 0x40], xmm4
43b607: movaps xmm5, xmmword ptr [rsi - 0x50]
43b60b: movaps xmmword ptr [rdi - 0x50], xmm5
43b60f: movaps xmm5, xmmword ptr [rsi - 0x60]
43b613: movaps xmmword ptr [rdi - 0x60], xmm5
43b617: movaps xmm5, xmmword ptr [rsi - 0x70]
43b61b: movaps xmmword ptr [rdi - 0x70], xmm5
43b61f: movaps xmm5, xmmword ptr [rsi - 0x80]
43b623: movaps xmmword ptr [rdi - 0x80], xmm5
43b627: sub rdx, 0x80
43b62e: lea rdi, [rdi - 0x80]
43b632: lea rsi, [rsi - 0x80]
43b636: jae 0x43b5e7
43b638: movdqu xmmword ptr [r8], xmm0
43b63d: add rdx, 0x80
43b644: sub rdi, rdx
43b647: sub rsi, rdx
43b64a: lea r11, [rip + 0x5c76f]
43b651: movsxd rdx, dword ptr [r11 + rdx*4]
43b655: lea rdx, [r11 + rdx]
43b659: notrack jmp rdx
43b65c: ud2 
43b65e: nop 
43b660: sub rdx, 0x80
43b667: movaps xmm1, xmmword ptr [rsi - 1]
43b66b: movaps xmm2, xmmword ptr [rsi + 0xf]
43b66f: movaps xmm3, xmmword ptr [rsi + 0x1f]
43b673: movaps xmm4, xmmword ptr [rsi + 0x2f]
43b677: movaps xmm5, xmmword ptr [rsi + 0x3f]
43b67b: movaps xmm6, xmmword ptr [rsi + 0x4f]
43b67f: movaps xmm7, xmmword ptr [rsi + 0x5f]
43b683: movaps xmm8, xmmword ptr [rsi + 0x6f]
43b688: movaps xmm9, xmmword ptr [rsi + 0x7f]
43b68d: lea rsi, [rsi + 0x80]
43b694: palignr xmm9, xmm8, 1
43b69b: movaps xmmword ptr [rdi + 0x70], xmm9
43b6a0: palignr xmm8, xmm7, 1
43b6a7: movaps xmmword ptr [rdi + 0x60], xmm8
43b6ac: palignr xmm7, xmm6, 1
43b6b2: movaps xmmword ptr [rdi + 0x50], xmm7
43b6b6: palignr xmm6, xmm5, 1
43b6bc: movaps xmmword ptr [rdi + 0x40], xmm6
43b6c0: palignr xmm5, xmm4, 1
43b6c6: movaps xmmword ptr [rdi + 0x30], xmm5
43b6ca: palignr xmm4, xmm3, 1
43b6d0: movaps xmmword ptr [rdi + 0x20], xmm4
43b6d4: palignr xmm3, xmm2, 1
43b6da: movaps xmmword ptr [rdi + 0x10], xmm3
43b6de: palignr xmm2, xmm1, 1
43b6e4: movaps xmmword ptr [rdi], xmm2
43b6e7: lea rdi, [rdi + 0x80]
43b6ee: jae 0x43b660
43b6f4: movdqu xmmword ptr [r8], xmm0
43b6f9: add rdx, 0x80
43b700: add rdi, rdx
43b703: add rsi, rdx
43b706: lea r11, [rip + 0x5c8f3]
43b70d: movsxd rdx, dword ptr [r11 + rdx*4]
43b711: lea rdx, [r11 + rdx]
43b715: notrack jmp rdx
43b718: ud2 
43b71a: nop word ptr [rax + rax]
43b720: movaps xmm1, xmmword ptr [rsi - 1]
43b724: movaps xmm2, xmmword ptr [rsi - 0x11]
43b728: palignr xmm1, xmm2, 1
43b72e: movaps xmmword ptr [rdi - 0x10], xmm1
43b732: movaps xmm3, xmmword ptr [rsi - 0x21]
43b736: palignr xmm2, xmm3, 1
43b73c: movaps xmmword ptr [rdi - 0x20], xmm2
43b740: movaps xmm4, xmmword ptr [rsi - 0x31]
43b744: palignr xmm3, xmm4, 1
43b74a: movaps xmmword ptr [rdi - 0x30], xmm3
43b74e: movaps xmm5, xmmword ptr [rsi - 0x41]
43b752: palignr xmm4, xmm5, 1
43b758: movaps xmmword ptr [rdi - 0x40], xmm4
43b75c: movaps xmm6, xmmword ptr [rsi - 0x51]
43b760: palignr xmm5, xmm6, 1
43b766: movaps xmmword ptr [rdi - 0x50], xmm5
43b76a: movaps xmm7, xmmword ptr [rsi - 0x61]
43b76e: palignr xmm6, xmm7, 1
43b774: movaps xmmword ptr [rdi - 0x60], xmm6
43b778: movaps xmm8, xmmword ptr [rsi - 0x71]
43b77d: palignr xmm7, xmm8, 1
43b784: movaps xmmword ptr [rdi - 0x70], xmm7
43b788: movaps xmm9, xmmword ptr [rsi - 0x81]
43b790: palignr xmm8, xmm9, 1
43b797: movaps xmmword ptr [rdi - 0x80], xmm8
43b79c: sub rdx, 0x80
43b7a3: lea rdi, [rdi - 0x80]
43b7a7: lea rsi, [rsi - 0x80]
43b7ab: jae 0x43b720
43b7b1: movdqu xmmword ptr [r8], xmm0
43b7b6: add rdx, 0x80
43b7bd: sub rdi, rdx
43b7c0: sub rsi, rdx
43b7c3: lea r11, [rip + 0x5c5f6]
43b7ca: movsxd rdx, dword ptr [r11 + rdx*4]
43b7ce: lea rdx, [r11 + rdx]
43b7d2: notrack jmp rdx
43b7d5: ud2 
43b7d7: nop word ptr [rax + rax]
43b7e0: sub rdx, 0x80
43b7e7: movaps xmm1, xmmword ptr [rsi - 2]
43b7eb: movaps xmm2, xmmword ptr [rsi + 0xe]
43b7ef: movaps xmm3, xmmword ptr [rsi + 0x1e]
43b7f3: movaps xmm4, xmmword ptr [rsi + 0x2e]
43b7f7: movaps xmm5, xmmword ptr [rsi + 0x3e]
43b7fb: movaps xmm6, xmmword ptr [rsi + 0x4e]
43b7ff: movaps xmm7, xmmword ptr [rsi + 0x5e]
43b803: movaps xmm8, xmmword ptr [rsi + 0x6e]
43b808: movaps xmm9, xmmword ptr [rsi + 0x7e]
43b80d: lea rsi, [rsi + 0x80]
43b814: palignr xmm9, xmm8, 2
43b81b: movaps xmmword ptr [rdi + 0x70], xmm9
43b820: palignr xmm8, xmm7, 2
43b827: movaps xmmword ptr [rdi + 0x60], xmm8
43b82c: palignr xmm7, xmm6, 2
43b832: movaps xmmword ptr [rdi + 0x50], xmm7
43b836: palignr xmm6, xmm5, 2
43b83c: movaps xmmword ptr [rdi + 0x40], xmm6
43b840: palignr xmm5, xmm4, 2
43b846: movaps xmmword ptr [rdi + 0x30], xmm5
43b84a: palignr xmm4, xmm3, 2
43b850: movaps xmmword ptr [rdi + 0x20], xmm4
43b854: palignr xmm3, xmm2, 2
43b85a: movaps xmmword ptr [rdi + 0x10], xmm3
43b85e: palignr xmm2, xmm1, 2
43b864: movaps xmmword ptr [rdi], xmm2
43b867: lea rdi, [rdi + 0x80]
43b86e: jae 0x43b7e0
43b874: movdqu xmmword ptr [r8], xmm0
43b879: add rdx, 0x80
43b880: add rdi, rdx
43b883: add rsi, rdx
43b886: lea r11, [rip + 0x5c773]
43b88d: movsxd rdx, dword ptr [r11 + rdx*4]
43b891: lea rdx, [r11 + rdx]
43b895: notrack jmp rdx
43b898: ud2 
43b89a: nop word ptr [rax + rax]
43b8a0: movaps xmm1, xmmword ptr [rsi - 2]
43b8a4: movaps xmm2, xmmword ptr [rsi - 0x12]
43b8a8: palignr xmm1, xmm2, 2
43b8ae: movaps xmmword ptr [rdi - 0x10], xmm1
43b8b2: movaps xmm3, xmmword ptr [rsi - 0x22]
43b8b6: palignr xmm2, xmm3, 2
43b8bc: movaps xmmword ptr [rdi - 0x20], xmm2
43b8c0: movaps xmm4, xmmword ptr [rsi - 0x32]
43b8c4: palignr xmm3, xmm4, 2
43b8ca: movaps xmmword ptr [rdi - 0x30], xmm3
43b8ce: movaps xmm5, xmmword ptr [rsi - 0x42]
43b8d2: palignr xmm4, xmm5, 2
43b8d8: movaps xmmword ptr [rdi - 0x40], xmm4
43b8dc: movaps xmm6, xmmword ptr [rsi - 0x52]
43b8e0: palignr xmm5, xmm6, 2
43b8e6: movaps xmmword ptr [rdi - 0x50], xmm5
43b8ea: movaps xmm7, xmmword ptr [rsi - 0x62]
43b8ee: palignr xmm6, xmm7, 2
43b8f4: movaps xmmword ptr [rdi - 0x60], xmm6
43b8f8: movaps xmm8, xmmword ptr [rsi - 0x72]
43b8fd: palignr xmm7, xmm8, 2
43b904: movaps xmmword ptr [rdi - 0x70], xmm7
43b908: movaps xmm9, xmmword ptr [rsi - 0x82]
43b910: palignr xmm8, xmm9, 2
43b917: movaps xmmword ptr [rdi - 0x80], xmm8
43b91c: sub rdx, 0x80
43b923: lea rdi, [rdi - 0x80]
43b927: lea rsi, [rsi - 0x80]
43b92b: jae 0x43b8a0
43b931: movdqu xmmword ptr [r8], xmm0
43b936: add rdx, 0x80
43b93d: sub rdi, rdx
43b940: sub rsi, rdx
43b943: lea r11, [rip + 0x5c476]
43b94a: movsxd rdx, dword ptr [r11 + rdx*4]
43b94e: lea rdx, [r11 + rdx]
43b952: notrack jmp rdx
43b955: ud2 
43b957: nop word ptr [rax + rax]
43b960: sub rdx, 0x80
43b967: movaps xmm1, xmmword ptr [rsi - 3]
43b96b: movaps xmm2, xmmword ptr [rsi + 0xd]
43b96f: movaps xmm3, xmmword ptr [rsi + 0x1d]
43b973: movaps xmm4, xmmword ptr [rsi + 0x2d]
43b977: movaps xmm5, xmmword ptr [rsi + 0x3d]
43b97b: movaps xmm6, xmmword ptr [rsi + 0x4d]
43b97f: movaps xmm7, xmmword ptr [rsi + 0x5d]
43b983: movaps xmm8, xmmword ptr [rsi + 0x6d]
43b988: movaps xmm9, xmmword ptr [rsi + 0x7d]
43b98d: lea rsi, [rsi + 0x80]
43b994: palignr xmm9, xmm8, 3
43b99b: movaps xmmword ptr [rdi + 0x70], xmm9
43b9a0: palignr xmm8, xmm7, 3
43b9a7: movaps xmmword ptr [rdi + 0x60], xmm8
43b9ac: palignr xmm7, xmm6, 3
43b9b2: movaps xmmword ptr [rdi + 0x50], xmm7
43b9b6: palignr xmm6, xmm5, 3
43b9bc: movaps xmmword ptr [rdi + 0x40], xmm6
43b9c0: palignr xmm5, xmm4, 3
43b9c6: movaps xmmword ptr [rdi + 0x30], xmm5
43b9ca: palignr xmm4, xmm3, 3
43b9d0: movaps xmmword ptr [rdi + 0x20], xmm4
43b9d4: palignr xmm3, xmm2, 3
43b9da: movaps xmmword ptr [rdi + 0x10], xmm3
43b9de: palignr xmm2, xmm1, 3
43b9e4: movaps xmmword ptr [rdi], xmm2
43b9e7: lea rdi, [rdi + 0x80]
43b9ee: jae 0x43b960
43b9f4: movdqu xmmword ptr [r8], xmm0
43b9f9: add rdx, 0x80
43ba00: add rdi, rdx
43ba03: add rsi, rdx
43ba06: lea r11, [rip + 0x5c5f3]
43ba0d: movsxd rdx, dword ptr [r11 + rdx*4]
43ba11: lea rdx, [r11 + rdx]
43ba15: notrack jmp rdx
43ba18: ud2 
43ba1a: nop word ptr [rax + rax]
43ba20: movaps xmm1, xmmword ptr [rsi - 3]
43ba24: movaps xmm2, xmmword ptr [rsi - 0x13]
43ba28: palignr xmm1, xmm2, 3
43ba2e: movaps xmmword ptr [rdi - 0x10], xmm1
43ba32: movaps xmm3, xmmword ptr [rsi - 0x23]
43ba36: palignr xmm2, xmm3, 3
43ba3c: movaps xmmword ptr [rdi - 0x20], xmm2
43ba40: movaps xmm4, xmmword ptr [rsi - 0x33]
43ba44: palignr xmm3, xmm4, 3
43ba4a: movaps xmmword ptr [rdi - 0x30], xmm3
43ba4e: movaps xmm5, xmmword ptr [rsi - 0x43]
43ba52: palignr xmm4, xmm5, 3
43ba58: movaps xmmword ptr [rdi - 0x40], xmm4
43ba5c: movaps xmm6, xmmword ptr [rsi - 0x53]
43ba60: palignr xmm5, xmm6, 3
43ba66: movaps xmmword ptr [rdi - 0x50], xmm5
43ba6a: movaps xmm7, xmmword ptr [rsi - 0x63]
43ba6e: palignr xmm6, xmm7, 3
43ba74: movaps xmmword ptr [rdi - 0x60], xmm6
43ba78: movaps xmm8, xmmword ptr [rsi - 0x73]
43ba7d: palignr xmm7, xmm8, 3
43ba84: movaps xmmword ptr [rdi - 0x70], xmm7
43ba88: movaps xmm9, xmmword ptr [rsi - 0x83]
43ba90: palignr xmm8, xmm9, 3
43ba97: movaps xmmword ptr [rdi - 0x80], xmm8
43ba9c: sub rdx, 0x80
43baa3: lea rdi, [rdi - 0x80]
43baa7: lea rsi, [rsi - 0x80]
43baab: jae 0x43ba20
43bab1: movdqu xmmword ptr [r8], xmm0
43bab6: add rdx, 0x80
43babd: sub rdi, rdx
43bac0: sub rsi, rdx
43bac3: lea r11, [rip + 0x5c2f6]
43baca: movsxd rdx, dword ptr [r11 + rdx*4]
43bace: lea rdx, [r11 + rdx]
43bad2: notrack jmp rdx
43bad5: ud2 
43bad7: nop word ptr [rax + rax]
43bae0: sub rdx, 0x80
43bae7: movaps xmm1, xmmword ptr [rsi - 4]
43baeb: movaps xmm2, xmmword ptr [rsi + 0xc]
43baef: movaps xmm3, xmmword ptr [rsi + 0x1c]
43baf3: movaps xmm4, xmmword ptr [rsi + 0x2c]
43baf7: movaps xmm5, xmmword ptr [rsi + 0x3c]
43bafb: movaps xmm6, xmmword ptr [rsi + 0x4c]
43baff: movaps xmm7, xmmword ptr [rsi + 0x5c]
43bb03: movaps xmm8, xmmword ptr [rsi + 0x6c]
43bb08: movaps xmm9, xmmword ptr [rsi + 0x7c]
43bb0d: lea rsi, [rsi + 0x80]
43bb14: palignr xmm9, xmm8, 4
43bb1b: movaps xmmword ptr [rdi + 0x70], xmm9
43bb20: palignr xmm8, xmm7, 4
43bb27: movaps xmmword ptr [rdi + 0x60], xmm8
43bb2c: palignr xmm7, xmm6, 4
43bb32: movaps xmmword ptr [rdi + 0x50], xmm7
43bb36: palignr xmm6, xmm5, 4
43bb3c: movaps xmmword ptr [rdi + 0x40], xmm6
43bb40: palignr xmm5, xmm4, 4
43bb46: movaps xmmword ptr [rdi + 0x30], xmm5
43bb4a: palignr xmm4, xmm3, 4
43bb50: movaps xmmword ptr [rdi + 0x20], xmm4
43bb54: palignr xmm3, xmm2, 4
43bb5a: movaps xmmword ptr [rdi + 0x10], xmm3
43bb5e: palignr xmm2, xmm1, 4
43bb64: movaps xmmword ptr [rdi], xmm2
43bb67: lea rdi, [rdi + 0x80]
43bb6e: jae 0x43bae0
43bb74: movdqu xmmword ptr [r8], xmm0
43bb79: add rdx, 0x80
43bb80: add rdi, rdx
43bb83: add rsi, rdx
43bb86: lea r11, [rip + 0x5c473]
43bb8d: movsxd rdx, dword ptr [r11 + rdx*4]
43bb91: lea rdx, [r11 + rdx]
43bb95: notrack jmp rdx
43bb98: ud2 
43bb9a: nop word ptr [rax + rax]
43bba0: movaps xmm1, xmmword ptr [rsi - 4]
43bba4: movaps xmm2, xmmword ptr [rsi - 0x14]
43bba8: palignr xmm1, xmm2, 4
43bbae: movaps xmmword ptr [rdi - 0x10], xmm1
43bbb2: movaps xmm3, xmmword ptr [rsi - 0x24]
43bbb6: palignr xmm2, xmm3, 4
43bbbc: movaps xmmword ptr [rdi - 0x20], xmm2
43bbc0: movaps xmm4, xmmword ptr [rsi - 0x34]
43bbc4: palignr xmm3, xmm4, 4
43bbca: movaps xmmword ptr [rdi - 0x30], xmm3
43bbce: movaps xmm5, xmmword ptr [rsi - 0x44]
43bbd2: palignr xmm4, xmm5, 4
43bbd8: movaps xmmword ptr [rdi - 0x40], xmm4
43bbdc: movaps xmm6, xmmword ptr [rsi - 0x54]
43bbe0: palignr xmm5, xmm6, 4
43bbe6: movaps xmmword ptr [rdi - 0x50], xmm5
43bbea: movaps xmm7, xmmword ptr [rsi - 0x64]
43bbee: palignr xmm6, xmm7, 4
43bbf4: movaps xmmword ptr [rdi - 0x60], xmm6
43bbf8: movaps xmm8, xmmword ptr [rsi - 0x74]
43bbfd: palignr xmm7, xmm8, 4
43bc04: movaps xmmword ptr [rdi - 0x70], xmm7
43bc08: movaps xmm9, xmmword ptr [rsi - 0x84]
43bc10: palignr xmm8, xmm9, 4
43bc17: movaps xmmword ptr [rdi - 0x80], xmm8
43bc1c: sub rdx, 0x80
43bc23: lea rdi, [rdi - 0x80]
43bc27: lea rsi, [rsi - 0x80]
43bc2b: jae 0x43bba0
43bc31: movdqu xmmword ptr [r8], xmm0
43bc36: add rdx, 0x80
43bc3d: sub rdi, rdx
43bc40: sub rsi, rdx
43bc43: lea r11, [rip + 0x5c176]
43bc4a: movsxd rdx, dword ptr [r11 + rdx*4]
43bc4e: lea rdx, [r11 + rdx]
43bc52: notrack jmp rdx
43bc55: ud2 
43bc57: nop word ptr [rax + rax]
43bc60: sub rdx, 0x80
43bc67: movaps xmm1, xmmword ptr [rsi - 5]
43bc6b: movaps xmm2, xmmword ptr [rsi + 0xb]
43bc6f: movaps xmm3, xmmword ptr [rsi + 0x1b]
43bc73: movaps xmm4, xmmword ptr [rsi + 0x2b]
43bc77: movaps xmm5, xmmword ptr [rsi + 0x3b]
43bc7b: movaps xmm6, xmmword ptr [rsi + 0x4b]
43bc7f: movaps xmm7, xmmword ptr [rsi + 0x5b]
43bc83: movaps xmm8, xmmword ptr [rsi + 0x6b]
43bc88: movaps xmm9, xmmword ptr [rsi + 0x7b]
43bc8d: lea rsi, [rsi + 0x80]
43bc94: palignr xmm9, xmm8, 5
43bc9b: movaps xmmword ptr [rdi + 0x70], xmm9
43bca0: palignr xmm8, xmm7, 5
43bca7: movaps xmmword ptr [rdi + 0x60], xmm8
43bcac: palignr xmm7, xmm6, 5
43bcb2: movaps xmmword ptr [rdi + 0x50], xmm7
43bcb6: palignr xmm6, xmm5, 5
43bcbc: movaps xmmword ptr [rdi + 0x40], xmm6
43bcc0: palignr xmm5, xmm4, 5
43bcc6: movaps xmmword ptr [rdi + 0x30], xmm5
43bcca: palignr xmm4, xmm3, 5
43bcd0: movaps xmmword ptr [rdi + 0x20], xmm4
43bcd4: palignr xmm3, xmm2, 5
43bcda: movaps xmmword ptr [rdi + 0x10], xmm3
43bcde: palignr xmm2, xmm1, 5
43bce4: movaps xmmword ptr [rdi], xmm2
43bce7: lea rdi, [rdi + 0x80]
43bcee: jae 0x43bc60
43bcf4: movdqu xmmword ptr [r8], xmm0
43bcf9: add rdx, 0x80
43bd00: add rdi, rdx
43bd03: add rsi, rdx
43bd06: lea r11, [rip + 0x5c2f3]
43bd0d: movsxd rdx, dword ptr [r11 + rdx*4]
43bd11: lea rdx, [r11 + rdx]
43bd15: notrack jmp rdx
43bd18: ud2 
43bd1a: nop word ptr [rax + rax]
43bd20: movaps xmm1, xmmword ptr [rsi - 5]
43bd24: movaps xmm2, xmmword ptr [rsi - 0x15]
43bd28: palignr xmm1, xmm2, 5
43bd2e: movaps xmmword ptr [rdi - 0x10], xmm1
43bd32: movaps xmm3, xmmword ptr [rsi - 0x25]
43bd36: palignr xmm2, xmm3, 5
43bd3c: movaps xmmword ptr [rdi - 0x20], xmm2
43bd40: movaps xmm4, xmmword ptr [rsi - 0x35]
43bd44: palignr xmm3, xmm4, 5
43bd4a: movaps xmmword ptr [rdi - 0x30], xmm3
43bd4e: movaps xmm5, xmmword ptr [rsi - 0x45]
43bd52: palignr xmm4, xmm5, 5
43bd58: movaps xmmword ptr [rdi - 0x40], xmm4
43bd5c: movaps xmm6, xmmword ptr [rsi - 0x55]
43bd60: palignr xmm5, xmm6, 5
43bd66: movaps xmmword ptr [rdi - 0x50], xmm5
43bd6a: movaps xmm7, xmmword ptr [rsi - 0x65]
43bd6e: palignr xmm6, xmm7, 5
43bd74: movaps xmmword ptr [rdi - 0x60], xmm6
43bd78: movaps xmm8, xmmword ptr [rsi - 0x75]
43bd7d: palignr xmm7, xmm8, 5
43bd84: movaps xmmword ptr [rdi - 0x70], xmm7
43bd88: movaps xmm9, xmmword ptr [rsi - 0x85]
43bd90: palignr xmm8, xmm9, 5
43bd97: movaps xmmword ptr [rdi - 0x80], xmm8
43bd9c: sub rdx, 0x80
43bda3: lea rdi, [rdi - 0x80]
43bda7: lea rsi, [rsi - 0x80]
43bdab: jae 0x43bd20
43bdb1: movdqu xmmword ptr [r8], xmm0
43bdb6: add rdx, 0x80
43bdbd: sub rdi, rdx
43bdc0: sub rsi, rdx
43bdc3: lea r11, [rip + 0x5bff6]
43bdca: movsxd rdx, dword ptr [r11 + rdx*4]
43bdce: lea rdx, [r11 + rdx]
43bdd2: notrack jmp rdx
43bdd5: ud2 
43bdd7: nop word ptr [rax + rax]
43bde0: sub rdx, 0x80
43bde7: movaps xmm1, xmmword ptr [rsi - 6]
43bdeb: movaps xmm2, xmmword ptr [rsi + 0xa]
43bdef: movaps xmm3, xmmword ptr [rsi + 0x1a]
43bdf3: movaps xmm4, xmmword ptr [rsi + 0x2a]
43bdf7: movaps xmm5, xmmword ptr [rsi + 0x3a]
43bdfb: movaps xmm6, xmmword ptr [rsi + 0x4a]
43bdff: movaps xmm7, xmmword ptr [rsi + 0x5a]
43be03: movaps xmm8, xmmword ptr [rsi + 0x6a]
43be08: movaps xmm9, xmmword ptr [rsi + 0x7a]
43be0d: lea rsi, [rsi + 0x80]
43be14: palignr xmm9, xmm8, 6
43be1b: movaps xmmword ptr [rdi + 0x70], xmm9
43be20: palignr xmm8, xmm7, 6
43be27: movaps xmmword ptr [rdi + 0x60], xmm8
43be2c: palignr xmm7, xmm6, 6
43be32: movaps xmmword ptr [rdi + 0x50], xmm7
43be36: palignr xmm6, xmm5, 6
43be3c: movaps xmmword ptr [rdi + 0x40], xmm6
43be40: palignr xmm5, xmm4, 6
43be46: movaps xmmword ptr [rdi + 0x30], xmm5
43be4a: palignr xmm4, xmm3, 6
43be50: movaps xmmword ptr [rdi + 0x20], xmm4
43be54: palignr xmm3, xmm2, 6
43be5a: movaps xmmword ptr [rdi + 0x10], xmm3
43be5e: palignr xmm2, xmm1, 6
43be64: movaps xmmword ptr [rdi], xmm2
43be67: lea rdi, [rdi + 0x80]
43be6e: jae 0x43bde0
43be74: movdqu xmmword ptr [r8], xmm0
43be79: add rdx, 0x80
43be80: add rdi, rdx
43be83: add rsi, rdx
43be86: lea r11, [rip + 0x5c173]
43be8d: movsxd rdx, dword ptr [r11 + rdx*4]
43be91: lea rdx, [r11 + rdx]
43be95: notrack jmp rdx
43be98: ud2 
43be9a: nop word ptr [rax + rax]
43bea0: movaps xmm1, xmmword ptr [rsi - 6]
43bea4: movaps xmm2, xmmword ptr [rsi - 0x16]
43bea8: palignr xmm1, xmm2, 6
43beae: movaps xmmword ptr [rdi - 0x10], xmm1
43beb2: movaps xmm3, xmmword ptr [rsi - 0x26]
43beb6: palignr xmm2, xmm3, 6
43bebc: movaps xmmword ptr [rdi - 0x20], xmm2
43bec0: movaps xmm4, xmmword ptr [rsi - 0x36]
43bec4: palignr xmm3, xmm4, 6
43beca: movaps xmmword ptr [rdi - 0x30], xmm3
43bece: movaps xmm5, xmmword ptr [rsi - 0x46]
43bed2: palignr xmm4, xmm5, 6
43bed8: movaps xmmword ptr [rdi - 0x40], xmm4
43bedc: movaps xmm6, xmmword ptr [rsi - 0x56]
43bee0: palignr xmm5, xmm6, 6
43bee6: movaps xmmword ptr [rdi - 0x50], xmm5
43beea: movaps xmm7, xmmword ptr [rsi - 0x66]
43beee: palignr xmm6, xmm7, 6
43bef4: movaps xmmword ptr [rdi - 0x60], xmm6
43bef8: movaps xmm8, xmmword ptr [rsi - 0x76]
43befd: palignr xmm7, xmm8, 6
43bf04: movaps xmmword ptr [rdi - 0x70], xmm7
43bf08: movaps xmm9, xmmword ptr [rsi - 0x86]
43bf10: palignr xmm8, xmm9, 6
43bf17: movaps xmmword ptr [rdi - 0x80], xmm8
43bf1c: sub rdx, 0x80
43bf23: lea rdi, [rdi - 0x80]
43bf27: lea rsi, [rsi - 0x80]
43bf2b: jae 0x43bea0
43bf31: movdqu xmmword ptr [r8], xmm0
43bf36: add rdx, 0x80
43bf3d: sub rdi, rdx
43bf40: sub rsi, rdx
43bf43: lea r11, [rip + 0x5be76]
43bf4a: movsxd rdx, dword ptr [r11 + rdx*4]
43bf4e: lea rdx, [r11 + rdx]
43bf52: notrack jmp rdx
43bf55: ud2 
43bf57: nop word ptr [rax + rax]
43bf60: sub rdx, 0x80
43bf67: movaps xmm1, xmmword ptr [rsi - 7]
43bf6b: movaps xmm2, xmmword ptr [rsi + 9]
43bf6f: movaps xmm3, xmmword ptr [rsi + 0x19]
43bf73: movaps xmm4, xmmword ptr [rsi + 0x29]
43bf77: movaps xmm5, xmmword ptr [rsi + 0x39]
43bf7b: movaps xmm6, xmmword ptr [rsi + 0x49]
43bf7f: movaps xmm7, xmmword ptr [rsi + 0x59]
43bf83: movaps xmm8, xmmword ptr [rsi + 0x69]
43bf88: movaps xmm9, xmmword ptr [rsi + 0x79]
43bf8d: lea rsi, [rsi + 0x80]
43bf94: palignr xmm9, xmm8, 7
43bf9b: movaps xmmword ptr [rdi + 0x70], xmm9
43bfa0: palignr xmm8, xmm7, 7
43bfa7: movaps xmmword ptr [rdi + 0x60], xmm8
43bfac: palignr xmm7, xmm6, 7
43bfb2: movaps xmmword ptr [rdi + 0x50], xmm7
43bfb6: palignr xmm6, xmm5, 7
43bfbc: movaps xmmword ptr [rdi + 0x40], xmm6
43bfc0: palignr xmm5, xmm4, 7
43bfc6: movaps xmmword ptr [rdi + 0x30], xmm5
43bfca: palignr xmm4, xmm3, 7
43bfd0: movaps xmmword ptr [rdi + 0x20], xmm4
43bfd4: palignr xmm3, xmm2, 7
43bfda: movaps xmmword ptr [rdi + 0x10], xmm3
43bfde: palignr xmm2, xmm1, 7
43bfe4: movaps xmmword ptr [rdi], xmm2
43bfe7: lea rdi, [rdi + 0x80]
43bfee: jae 0x43bf60
43bff4: movdqu xmmword ptr [r8], xmm0
43bff9: add rdx, 0x80
43c000: add rdi, rdx
43c003: add rsi, rdx
43c006: lea r11, [rip + 0x5bff3]
43c00d: movsxd rdx, dword ptr [r11 + rdx*4]
43c011: lea rdx, [r11 + rdx]
43c015: notrack jmp rdx
43c018: ud2 
43c01a: nop word ptr [rax + rax]
43c020: movaps xmm1, xmmword ptr [rsi - 7]
43c024: movaps xmm2, xmmword ptr [rsi - 0x17]
43c028: palignr xmm1, xmm2, 7
43c02e: movaps xmmword ptr [rdi - 0x10], xmm1
43c032: movaps xmm3, xmmword ptr [rsi - 0x27]
43c036: palignr xmm2, xmm3, 7
43c03c: movaps xmmword ptr [rdi - 0x20], xmm2
43c040: movaps xmm4, xmmword ptr [rsi - 0x37]
43c044: palignr xmm3, xmm4, 7
43c04a: movaps xmmword ptr [rdi - 0x30], xmm3
43c04e: movaps xmm5, xmmword ptr [rsi - 0x47]
43c052: palignr xmm4, xmm5, 7
43c058: movaps xmmword ptr [rdi - 0x40], xmm4
43c05c: movaps xmm6, xmmword ptr [rsi - 0x57]
43c060: palignr xmm5, xmm6, 7
43c066: movaps xmmword ptr [rdi - 0x50], xmm5
43c06a: movaps xmm7, xmmword ptr [rsi - 0x67]
43c06e: palignr xmm6, xmm7, 7
43c074: movaps xmmword ptr [rdi - 0x60], xmm6
43c078: movaps xmm8, xmmword ptr [rsi - 0x77]
43c07d: palignr xmm7, xmm8, 7
43c084: movaps xmmword ptr [rdi - 0x70], xmm7
43c088: movaps xmm9, xmmword ptr [rsi - 0x87]
43c090: palignr xmm8, xmm9, 7
43c097: movaps xmmword ptr [rdi - 0x80], xmm8
43c09c: sub rdx, 0x80
43c0a3: lea rdi, [rdi - 0x80]
43c0a7: lea rsi, [rsi - 0x80]
43c0ab: jae 0x43c020
43c0b1: movdqu xmmword ptr [r8], xmm0
43c0b6: add rdx, 0x80
43c0bd: sub rdi, rdx
43c0c0: sub rsi, rdx
43c0c3: lea r11, [rip + 0x5bcf6]
43c0ca: movsxd rdx, dword ptr [r11 + rdx*4]
43c0ce: lea rdx, [r11 + rdx]
43c0d2: notrack jmp rdx
43c0d5: ud2 
43c0d7: nop word ptr [rax + rax]
43c0e0: sub rdx, 0x80
43c0e7: movaps xmm1, xmmword ptr [rsi - 8]
43c0eb: movaps xmm2, xmmword ptr [rsi + 8]
43c0ef: movaps xmm3, xmmword ptr [rsi + 0x18]
43c0f3: movaps xmm4, xmmword ptr [rsi + 0x28]
43c0f7: movaps xmm5, xmmword ptr [rsi + 0x38]
43c0fb: movaps xmm6, xmmword ptr [rsi + 0x48]
43c0ff: movaps xmm7, xmmword ptr [rsi + 0x58]
43c103: movaps xmm8, xmmword ptr [rsi + 0x68]
43c108: movaps xmm9, xmmword ptr [rsi + 0x78]
43c10d: lea rsi, [rsi + 0x80]
43c114: palignr xmm9, xmm8, 8
43c11b: movaps xmmword ptr [rdi + 0x70], xmm9
43c120: palignr xmm8, xmm7, 8
43c127: movaps xmmword ptr [rdi + 0x60], xmm8
43c12c: palignr xmm7, xmm6, 8
43c132: movaps xmmword ptr [rdi + 0x50], xmm7
43c136: palignr xmm6, xmm5, 8
43c13c: movaps xmmword ptr [rdi + 0x40], xmm6
43c140: palignr xmm5, xmm4, 8
43c146: movaps xmmword ptr [rdi + 0x30], xmm5
43c14a: palignr xmm4, xmm3, 8
43c150: movaps xmmword ptr [rdi + 0x20], xmm4
43c154: palignr xmm3, xmm2, 8
43c15a: movaps xmmword ptr [rdi + 0x10], xmm3
43c15e: palignr xmm2, xmm1, 8
43c164: movaps xmmword ptr [rdi], xmm2
43c167: lea rdi, [rdi + 0x80]
43c16e: jae 0x43c0e0
43c174: movdqu xmmword ptr [r8], xmm0
43c179: add rdx, 0x80
43c180: add rdi, rdx
43c183: add rsi, rdx
43c186: lea r11, [rip + 0x5be73]
43c18d: movsxd rdx, dword ptr [r11 + rdx*4]
43c191: lea rdx, [r11 + rdx]
43c195: notrack jmp rdx
43c198: ud2 
43c19a: nop word ptr [rax + rax]
43c1a0: movaps xmm1, xmmword ptr [rsi - 8]
43c1a4: movaps xmm2, xmmword ptr [rsi - 0x18]
43c1a8: palignr xmm1, xmm2, 8
43c1ae: movaps xmmword ptr [rdi - 0x10], xmm1
43c1b2: movaps xmm3, xmmword ptr [rsi - 0x28]
43c1b6: palignr xmm2, xmm3, 8
43c1bc: movaps xmmword ptr [rdi - 0x20], xmm2
43c1c0: movaps xmm4, xmmword ptr [rsi - 0x38]
43c1c4: palignr xmm3, xmm4, 8
43c1ca: movaps xmmword ptr [rdi - 0x30], xmm3
43c1ce: movaps xmm5, xmmword ptr [rsi - 0x48]
43c1d2: palignr xmm4, xmm5, 8
43c1d8: movaps xmmword ptr [rdi - 0x40], xmm4
43c1dc: movaps xmm6, xmmword ptr [rsi - 0x58]
43c1e0: palignr xmm5, xmm6, 8
43c1e6: movaps xmmword ptr [rdi - 0x50], xmm5
43c1ea: movaps xmm7, xmmword ptr [rsi - 0x68]
43c1ee: palignr xmm6, xmm7, 8
43c1f4: movaps xmmword ptr [rdi - 0x60], xmm6
43c1f8: movaps xmm8, xmmword ptr [rsi - 0x78]
43c1fd: palignr xmm7, xmm8, 8
43c204: movaps xmmword ptr [rdi - 0x70], xmm7
43c208: movaps xmm9, xmmword ptr [rsi - 0x88]
43c210: palignr xmm8, xmm9, 8
43c217: movaps xmmword ptr [rdi - 0x80], xmm8
43c21c: sub rdx, 0x80
43c223: lea rdi, [rdi - 0x80]
43c227: lea rsi, [rsi - 0x80]
43c22b: jae 0x43c1a0
43c231: movdqu xmmword ptr [r8], xmm0
43c236: add rdx, 0x80
43c23d: sub rdi, rdx
43c240: sub rsi, rdx
43c243: lea r11, [rip + 0x5bb76]
43c24a: movsxd rdx, dword ptr [r11 + rdx*4]
43c24e: lea rdx, [r11 + rdx]
43c252: notrack jmp rdx
43c255: ud2 
43c257: nop word ptr [rax + rax]
43c260: sub rdx, 0x80
43c267: movaps xmm1, xmmword ptr [rsi - 9]
43c26b: movaps xmm2, xmmword ptr [rsi + 7]
43c26f: movaps xmm3, xmmword ptr [rsi + 0x17]
43c273: movaps xmm4, xmmword ptr [rsi + 0x27]
43c277: movaps xmm5, xmmword ptr [rsi + 0x37]
43c27b: movaps xmm6, xmmword ptr [rsi + 0x47]
43c27f: movaps xmm7, xmmword ptr [rsi + 0x57]
43c283: movaps xmm8, xmmword ptr [rsi + 0x67]
43c288: movaps xmm9, xmmword ptr [rsi + 0x77]
43c28d: lea rsi, [rsi + 0x80]
43c294: palignr xmm9, xmm8, 9
43c29b: movaps xmmword ptr [rdi + 0x70], xmm9
43c2a0: palignr xmm8, xmm7, 9
43c2a7: movaps xmmword ptr [rdi + 0x60], xmm8
43c2ac: palignr xmm7, xmm6, 9
43c2b2: movaps xmmword ptr [rdi + 0x50], xmm7
43c2b6: palignr xmm6, xmm5, 9
43c2bc: movaps xmmword ptr [rdi + 0x40], xmm6
43c2c0: palignr xmm5, xmm4, 9
43c2c6: movaps xmmword ptr [rdi + 0x30], xmm5
43c2ca: palignr xmm4, xmm3, 9
43c2d0: movaps xmmword ptr [rdi + 0x20], xmm4
43c2d4: palignr xmm3, xmm2, 9
43c2da: movaps xmmword ptr [rdi + 0x10], xmm3
43c2de: palignr xmm2, xmm1, 9
43c2e4: movaps xmmword ptr [rdi], xmm2
43c2e7: lea rdi, [rdi + 0x80]
43c2ee: jae 0x43c260
43c2f4: movdqu xmmword ptr [r8], xmm0
43c2f9: add rdx, 0x80
43c300: add rdi, rdx
43c303: add rsi, rdx
43c306: lea r11, [rip + 0x5bcf3]
43c30d: movsxd rdx, dword ptr [r11 + rdx*4]
43c311: lea rdx, [r11 + rdx]
43c315: notrack jmp rdx
43c318: ud2 
43c31a: nop word ptr [rax + rax]
43c320: movaps xmm1, xmmword ptr [rsi - 9]
43c324: movaps xmm2, xmmword ptr [rsi - 0x19]
43c328: palignr xmm1, xmm2, 9
43c32e: movaps xmmword ptr [rdi - 0x10], xmm1
43c332: movaps xmm3, xmmword ptr [rsi - 0x29]
43c336: palignr xmm2, xmm3, 9
43c33c: movaps xmmword ptr [rdi - 0x20], xmm2
43c340: movaps xmm4, xmmword ptr [rsi - 0x39]
43c344: palignr xmm3, xmm4, 9
43c34a: movaps xmmword ptr [rdi - 0x30], xmm3
43c34e: movaps xmm5, xmmword ptr [rsi - 0x49]
43c352: palignr xmm4, xmm5, 9
43c358: movaps xmmword ptr [rdi - 0x40], xmm4
43c35c: movaps xmm6, xmmword ptr [rsi - 0x59]
43c360: palignr xmm5, xmm6, 9
43c366: movaps xmmword ptr [rdi - 0x50], xmm5
43c36a: movaps xmm7, xmmword ptr [rsi - 0x69]
43c36e: palignr xmm6, xmm7, 9
43c374: movaps xmmword ptr [rdi - 0x60], xmm6
43c378: movaps xmm8, xmmword ptr [rsi - 0x79]
43c37d: palignr xmm7, xmm8, 9
43c384: movaps xmmword ptr [rdi - 0x70], xmm7
43c388: movaps xmm9, xmmword ptr [rsi - 0x89]
43c390: palignr xmm8, xmm9, 9
43c397: movaps xmmword ptr [rdi - 0x80], xmm8
43c39c: sub rdx, 0x80
43c3a3: lea rdi, [rdi - 0x80]
43c3a7: lea rsi, [rsi - 0x80]
43c3ab: jae 0x43c320
43c3b1: movdqu xmmword ptr [r8], xmm0
43c3b6: add rdx, 0x80
43c3bd: sub rdi, rdx
43c3c0: sub rsi, rdx
43c3c3: lea r11, [rip + 0x5b9f6]
43c3ca: movsxd rdx, dword ptr [r11 + rdx*4]
43c3ce: lea rdx, [r11 + rdx]
43c3d2: notrack jmp rdx
43c3d5: ud2 
43c3d7: nop word ptr [rax + rax]
43c3e0: sub rdx, 0x80
43c3e7: movaps xmm1, xmmword ptr [rsi - 0xa]
43c3eb: movaps xmm2, xmmword ptr [rsi + 6]
43c3ef: movaps xmm3, xmmword ptr [rsi + 0x16]
43c3f3: movaps xmm4, xmmword ptr [rsi + 0x26]
43c3f7: movaps xmm5, xmmword ptr [rsi + 0x36]
43c3fb: movaps xmm6, xmmword ptr [rsi + 0x46]
43c3ff: movaps xmm7, xmmword ptr [rsi + 0x56]
43c403: movaps xmm8, xmmword ptr [rsi + 0x66]
43c408: movaps xmm9, xmmword ptr [rsi + 0x76]
43c40d: lea rsi, [rsi + 0x80]
43c414: palignr xmm9, xmm8, 0xa
43c41b: movaps xmmword ptr [rdi + 0x70], xmm9
43c420: palignr xmm8, xmm7, 0xa
43c427: movaps xmmword ptr [rdi + 0x60], xmm8
43c42c: palignr xmm7, xmm6, 0xa
43c432: movaps xmmword ptr [rdi + 0x50], xmm7
43c436: palignr xmm6, xmm5, 0xa
43c43c: movaps xmmword ptr [rdi + 0x40], xmm6
43c440: palignr xmm5, xmm4, 0xa
43c446: movaps xmmword ptr [rdi + 0x30], xmm5
43c44a: palignr xmm4, xmm3, 0xa
43c450: movaps xmmword ptr [rdi + 0x20], xmm4
43c454: palignr xmm3, xmm2, 0xa
43c45a: movaps xmmword ptr [rdi + 0x10], xmm3
43c45e: palignr xmm2, xmm1, 0xa
43c464: movaps xmmword ptr [rdi], xmm2
43c467: lea rdi, [rdi + 0x80]
43c46e: jae 0x43c3e0
43c474: movdqu xmmword ptr [r8], xmm0
43c479: add rdx, 0x80
43c480: add rdi, rdx
43c483: add rsi, rdx
43c486: lea r11, [rip + 0x5bb73]
43c48d: movsxd rdx, dword ptr [r11 + rdx*4]
43c491: lea rdx, [r11 + rdx]
43c495: notrack jmp rdx
43c498: ud2 
43c49a: nop word ptr [rax + rax]
43c4a0: movaps xmm1, xmmword ptr [rsi - 0xa]
43c4a4: movaps xmm2, xmmword ptr [rsi - 0x1a]
43c4a8: palignr xmm1, xmm2, 0xa
43c4ae: movaps xmmword ptr [rdi - 0x10], xmm1
43c4b2: movaps xmm3, xmmword ptr [rsi - 0x2a]
43c4b6: palignr xmm2, xmm3, 0xa
43c4bc: movaps xmmword ptr [rdi - 0x20], xmm2
43c4c0: movaps xmm4, xmmword ptr [rsi - 0x3a]
43c4c4: palignr xmm3, xmm4, 0xa
43c4ca: movaps xmmword ptr [rdi - 0x30], xmm3
43c4ce: movaps xmm5, xmmword ptr [rsi - 0x4a]
43c4d2: palignr xmm4, xmm5, 0xa
43c4d8: movaps xmmword ptr [rdi - 0x40], xmm4
43c4dc: movaps xmm6, xmmword ptr [rsi - 0x5a]
43c4e0: palignr xmm5, xmm6, 0xa
43c4e6: movaps xmmword ptr [rdi - 0x50], xmm5
43c4ea: movaps xmm7, xmmword ptr [rsi - 0x6a]
43c4ee: palignr xmm6, xmm7, 0xa
43c4f4: movaps xmmword ptr [rdi - 0x60], xmm6
43c4f8: movaps xmm8, xmmword ptr [rsi - 0x7a]
43c4fd: palignr xmm7, xmm8, 0xa
43c504: movaps xmmword ptr [rdi - 0x70], xmm7
43c508: movaps xmm9, xmmword ptr [rsi - 0x8a]
43c510: palignr xmm8, xmm9, 0xa
43c517: movaps xmmword ptr [rdi - 0x80], xmm8
43c51c: sub rdx, 0x80
43c523: lea rdi, [rdi - 0x80]
43c527: lea rsi, [rsi - 0x80]
43c52b: jae 0x43c4a0
43c531: movdqu xmmword ptr [r8], xmm0
43c536: add rdx, 0x80
43c53d: sub rdi, rdx
43c540: sub rsi, rdx
43c543: lea r11, [rip + 0x5b876]
43c54a: movsxd rdx, dword ptr [r11 + rdx*4]
43c54e: lea rdx, [r11 + rdx]
43c552: notrack jmp rdx
43c555: ud2 
43c557: nop word ptr [rax + rax]
43c560: sub rdx, 0x80
43c567: movaps xmm1, xmmword ptr [rsi - 0xb]
43c56b: movaps xmm2, xmmword ptr [rsi + 5]
43c56f: movaps xmm3, xmmword ptr [rsi + 0x15]
43c573: movaps xmm4, xmmword ptr [rsi + 0x25]
43c577: movaps xmm5, xmmword ptr [rsi + 0x35]
43c57b: movaps xmm6, xmmword ptr [rsi + 0x45]
43c57f: movaps xmm7, xmmword ptr [rsi + 0x55]
43c583: movaps xmm8, xmmword ptr [rsi + 0x65]
43c588: movaps xmm9, xmmword ptr [rsi + 0x75]
43c58d: lea rsi, [rsi + 0x80]
43c594: palignr xmm9, xmm8, 0xb
43c59b: movaps xmmword ptr [rdi + 0x70], xmm9
43c5a0: palignr xmm8, xmm7, 0xb
43c5a7: movaps xmmword ptr [rdi + 0x60], xmm8
43c5ac: palignr xmm7, xmm6, 0xb
43c5b2: movaps xmmword ptr [rdi + 0x50], xmm7
43c5b6: palignr xmm6, xmm5, 0xb
43c5bc: movaps xmmword ptr [rdi + 0x40], xmm6
43c5c0: palignr xmm5, xmm4, 0xb
43c5c6: movaps xmmword ptr [rdi + 0x30], xmm5
43c5ca: palignr xmm4, xmm3, 0xb
43c5d0: movaps xmmword ptr [rdi + 0x20], xmm4
43c5d4: palignr xmm3, xmm2, 0xb
43c5da: movaps xmmword ptr [rdi + 0x10], xmm3
43c5de: palignr xmm2, xmm1, 0xb
43c5e4: movaps xmmword ptr [rdi], xmm2
43c5e7: lea rdi, [rdi + 0x80]
43c5ee: jae 0x43c560
43c5f4: movdqu xmmword ptr [r8], xmm0
43c5f9: add rdx, 0x80
43c600: add rdi, rdx
43c603: add rsi, rdx
43c606: lea r11, [rip + 0x5b9f3]
43c60d: movsxd rdx, dword ptr [r11 + rdx*4]
43c611: lea rdx, [r11 + rdx]
43c615: notrack jmp rdx
43c618: ud2 
43c61a: nop word ptr [rax + rax]
43c620: movaps xmm1, xmmword ptr [rsi - 0xb]
43c624: movaps xmm2, xmmword ptr [rsi - 0x1b]
43c628: palignr xmm1, xmm2, 0xb
43c62e: movaps xmmword ptr [rdi - 0x10], xmm1
43c632: movaps xmm3, xmmword ptr [rsi - 0x2b]
43c636: palignr xmm2, xmm3, 0xb
43c63c: movaps xmmword ptr [rdi - 0x20], xmm2
43c640: movaps xmm4, xmmword ptr [rsi - 0x3b]
43c644: palignr xmm3, xmm4, 0xb
43c64a: movaps xmmword ptr [rdi - 0x30], xmm3
43c64e: movaps xmm5, xmmword ptr [rsi - 0x4b]
43c652: palignr xmm4, xmm5, 0xb
43c658: movaps xmmword ptr [rdi - 0x40], xmm4
43c65c: movaps xmm6, xmmword ptr [rsi - 0x5b]
43c660: palignr xmm5, xmm6, 0xb
43c666: movaps xmmword ptr [rdi - 0x50], xmm5
43c66a: movaps xmm7, xmmword ptr [rsi - 0x6b]
43c66e: palignr xmm6, xmm7, 0xb
43c674: movaps xmmword ptr [rdi - 0x60], xmm6
43c678: movaps xmm8, xmmword ptr [rsi - 0x7b]
43c67d: palignr xmm7, xmm8, 0xb
43c684: movaps xmmword ptr [rdi - 0x70], xmm7
43c688: movaps xmm9, xmmword ptr [rsi - 0x8b]
43c690: palignr xmm8, xmm9, 0xb
43c697: movaps xmmword ptr [rdi - 0x80], xmm8
43c69c: sub rdx, 0x80
43c6a3: lea rdi, [rdi - 0x80]
43c6a7: lea rsi, [rsi - 0x80]
43c6ab: jae 0x43c620
43c6b1: movdqu xmmword ptr [r8], xmm0
43c6b6: add rdx, 0x80
43c6bd: sub rdi, rdx
43c6c0: sub rsi, rdx
43c6c3: lea r11, [rip + 0x5b6f6]
43c6ca: movsxd rdx, dword ptr [r11 + rdx*4]
43c6ce: lea rdx, [r11 + rdx]
43c6d2: notrack jmp rdx
43c6d5: ud2 
43c6d7: nop word ptr [rax + rax]
43c6e0: sub rdx, 0x80
43c6e7: movdqa xmm1, xmmword ptr [rsi - 0xc]
43c6ec: movaps xmm2, xmmword ptr [rsi + 4]
43c6f0: movaps xmm3, xmmword ptr [rsi + 0x14]
43c6f4: movaps xmm4, xmmword ptr [rsi + 0x24]
43c6f8: movaps xmm5, xmmword ptr [rsi + 0x34]
43c6fc: movaps xmm6, xmmword ptr [rsi + 0x44]
43c700: movaps xmm7, xmmword ptr [rsi + 0x54]
43c704: movaps xmm8, xmmword ptr [rsi + 0x64]
43c709: movaps xmm9, xmmword ptr [rsi + 0x74]
43c70e: lea rsi, [rsi + 0x80]
43c715: palignr xmm9, xmm8, 0xc
43c71c: movaps xmmword ptr [rdi + 0x70], xmm9
43c721: palignr xmm8, xmm7, 0xc
43c728: movaps xmmword ptr [rdi + 0x60], xmm8
43c72d: palignr xmm7, xmm6, 0xc
43c733: movaps xmmword ptr [rdi + 0x50], xmm7
43c737: palignr xmm6, xmm5, 0xc
43c73d: movaps xmmword ptr [rdi + 0x40], xmm6
43c741: palignr xmm5, xmm4, 0xc
43c747: movaps xmmword ptr [rdi + 0x30], xmm5
43c74b: palignr xmm4, xmm3, 0xc
43c751: movaps xmmword ptr [rdi + 0x20], xmm4
43c755: palignr xmm3, xmm2, 0xc
43c75b: movaps xmmword ptr [rdi + 0x10], xmm3
43c75f: palignr xmm2, xmm1, 0xc
43c765: movaps xmmword ptr [rdi], xmm2
43c768: lea rdi, [rdi + 0x80]
43c76f: jae 0x43c6e0
43c775: movdqu xmmword ptr [r8], xmm0
43c77a: add rdx, 0x80
43c781: add rdi, rdx
43c784: add rsi, rdx
43c787: lea r11, [rip + 0x5b872]
43c78e: movsxd rdx, dword ptr [r11 + rdx*4]
43c792: lea rdx, [r11 + rdx]
43c796: notrack jmp rdx
43c799: ud2 
43c79b: nop dword ptr [rax + rax]
43c7a0: movaps xmm1, xmmword ptr [rsi - 0xc]
43c7a4: movaps xmm2, xmmword ptr [rsi - 0x1c]
43c7a8: palignr xmm1, xmm2, 0xc
43c7ae: movaps xmmword ptr [rdi - 0x10], xmm1
43c7b2: movaps xmm3, xmmword ptr [rsi - 0x2c]
43c7b6: palignr xmm2, xmm3, 0xc
43c7bc: movaps xmmword ptr [rdi - 0x20], xmm2
43c7c0: movaps xmm4, xmmword ptr [rsi - 0x3c]
43c7c4: palignr xmm3, xmm4, 0xc
43c7ca: movaps xmmword ptr [rdi - 0x30], xmm3
43c7ce: movaps xmm5, xmmword ptr [rsi - 0x4c]
43c7d2: palignr xmm4, xmm5, 0xc
43c7d8: movaps xmmword ptr [rdi - 0x40], xmm4
43c7dc: movaps xmm6, xmmword ptr [rsi - 0x5c]
43c7e0: palignr xmm5, xmm6, 0xc
43c7e6: movaps xmmword ptr [rdi - 0x50], xmm5
43c7ea: movaps xmm7, xmmword ptr [rsi - 0x6c]
43c7ee: palignr xmm6, xmm7, 0xc
43c7f4: movaps xmmword ptr [rdi - 0x60], xmm6
43c7f8: movaps xmm8, xmmword ptr [rsi - 0x7c]
43c7fd: palignr xmm7, xmm8, 0xc
43c804: movaps xmmword ptr [rdi - 0x70], xmm7
43c808: movaps xmm9, xmmword ptr [rsi - 0x8c]
43c810: palignr xmm8, xmm9, 0xc
43c817: movaps xmmword ptr [rdi - 0x80], xmm8
43c81c: sub rdx, 0x80
43c823: lea rdi, [rdi - 0x80]
43c827: lea rsi, [rsi - 0x80]
43c82b: jae 0x43c7a0
43c831: movdqu xmmword ptr [r8], xmm0
43c836: add rdx, 0x80
43c83d: sub rdi, rdx
43c840: sub rsi, rdx
43c843: lea r11, [rip + 0x5b576]
43c84a: movsxd rdx, dword ptr [r11 + rdx*4]
43c84e: lea rdx, [r11 + rdx]
43c852: notrack jmp rdx
43c855: ud2 
43c857: nop word ptr [rax + rax]
43c860: sub rdx, 0x80
43c867: movaps xmm1, xmmword ptr [rsi - 0xd]
43c86b: movaps xmm2, xmmword ptr [rsi + 3]
43c86f: movaps xmm3, xmmword ptr [rsi + 0x13]
43c873: movaps xmm4, xmmword ptr [rsi + 0x23]
43c877: movaps xmm5, xmmword ptr [rsi + 0x33]
43c87b: movaps xmm6, xmmword ptr [rsi + 0x43]
43c87f: movaps xmm7, xmmword ptr [rsi + 0x53]
43c883: movaps xmm8, xmmword ptr [rsi + 0x63]
43c888: movaps xmm9, xmmword ptr [rsi + 0x73]
43c88d: lea rsi, [rsi + 0x80]
43c894: palignr xmm9, xmm8, 0xd
43c89b: movaps xmmword ptr [rdi + 0x70], xmm9
43c8a0: palignr xmm8, xmm7, 0xd
43c8a7: movaps xmmword ptr [rdi + 0x60], xmm8
43c8ac: palignr xmm7, xmm6, 0xd
43c8b2: movaps xmmword ptr [rdi + 0x50], xmm7
43c8b6: palignr xmm6, xmm5, 0xd
43c8bc: movaps xmmword ptr [rdi + 0x40], xmm6
43c8c0: palignr xmm5, xmm4, 0xd
43c8c6: movaps xmmword ptr [rdi + 0x30], xmm5
43c8ca: palignr xmm4, xmm3, 0xd
43c8d0: movaps xmmword ptr [rdi + 0x20], xmm4
43c8d4: palignr xmm3, xmm2, 0xd
43c8da: movaps xmmword ptr [rdi + 0x10], xmm3
43c8de: palignr xmm2, xmm1, 0xd
43c8e4: movaps xmmword ptr [rdi], xmm2
43c8e7: lea rdi, [rdi + 0x80]
43c8ee: jae 0x43c860
43c8f4: movdqu xmmword ptr [r8], xmm0
43c8f9: add rdx, 0x80
43c900: add rdi, rdx
43c903: add rsi, rdx
43c906: lea r11, [rip + 0x5b6f3]
43c90d: movsxd rdx, dword ptr [r11 + rdx*4]
43c911: lea rdx, [r11 + rdx]
43c915: notrack jmp rdx
43c918: ud2 
43c91a: nop word ptr [rax + rax]
43c920: movaps xmm1, xmmword ptr [rsi - 0xd]
43c924: movaps xmm2, xmmword ptr [rsi - 0x1d]
43c928: palignr xmm1, xmm2, 0xd
43c92e: movaps xmmword ptr [rdi - 0x10], xmm1
43c932: movaps xmm3, xmmword ptr [rsi - 0x2d]
43c936: palignr xmm2, xmm3, 0xd
43c93c: movaps xmmword ptr [rdi - 0x20], xmm2
43c940: movaps xmm4, xmmword ptr [rsi - 0x3d]
43c944: palignr xmm3, xmm4, 0xd
43c94a: movaps xmmword ptr [rdi - 0x30], xmm3
43c94e: movaps xmm5, xmmword ptr [rsi - 0x4d]
43c952: palignr xmm4, xmm5, 0xd
43c958: movaps xmmword ptr [rdi - 0x40], xmm4
43c95c: movaps xmm6, xmmword ptr [rsi - 0x5d]
43c960: palignr xmm5, xmm6, 0xd
43c966: movaps xmmword ptr [rdi - 0x50], xmm5
43c96a: movaps xmm7, xmmword ptr [rsi - 0x6d]
43c96e: palignr xmm6, xmm7, 0xd
43c974: movaps xmmword ptr [rdi - 0x60], xmm6
43c978: movaps xmm8, xmmword ptr [rsi - 0x7d]
43c97d: palignr xmm7, xmm8, 0xd
43c984: movaps xmmword ptr [rdi - 0x70], xmm7
43c988: movaps xmm9, xmmword ptr [rsi - 0x8d]
43c990: palignr xmm8, xmm9, 0xd
43c997: movaps xmmword ptr [rdi - 0x80], xmm8
43c99c: sub rdx, 0x80
43c9a3: lea rdi, [rdi - 0x80]
43c9a7: lea rsi, [rsi - 0x80]
43c9ab: jae 0x43c920
43c9b1: movdqu xmmword ptr [r8], xmm0
43c9b6: add rdx, 0x80
43c9bd: sub rdi, rdx
43c9c0: sub rsi, rdx
43c9c3: lea r11, [rip + 0x5b3f6]
43c9ca: movsxd rdx, dword ptr [r11 + rdx*4]
43c9ce: lea rdx, [r11 + rdx]
43c9d2: notrack jmp rdx
43c9d5: ud2 
43c9d7: nop word ptr [rax + rax]
43c9e0: sub rdx, 0x80
43c9e7: movaps xmm1, xmmword ptr [rsi - 0xe]
43c9eb: movaps xmm2, xmmword ptr [rsi + 2]
43c9ef: movaps xmm3, xmmword ptr [rsi + 0x12]
43c9f3: movaps xmm4, xmmword ptr [rsi + 0x22]
43c9f7: movaps xmm5, xmmword ptr [rsi + 0x32]
43c9fb: movaps xmm6, xmmword ptr [rsi + 0x42]
43c9ff: movaps xmm7, xmmword ptr [rsi + 0x52]
43ca03: movaps xmm8, xmmword ptr [rsi + 0x62]
43ca08: movaps xmm9, xmmword ptr [rsi + 0x72]
43ca0d: lea rsi, [rsi + 0x80]
43ca14: palignr xmm9, xmm8, 0xe
43ca1b: movaps xmmword ptr [rdi + 0x70], xmm9
43ca20: palignr xmm8, xmm7, 0xe
43ca27: movaps xmmword ptr [rdi + 0x60], xmm8
43ca2c: palignr xmm7, xmm6, 0xe
43ca32: movaps xmmword ptr [rdi + 0x50], xmm7
43ca36: palignr xmm6, xmm5, 0xe
43ca3c: movaps xmmword ptr [rdi + 0x40], xmm6
43ca40: palignr xmm5, xmm4, 0xe
43ca46: movaps xmmword ptr [rdi + 0x30], xmm5
43ca4a: palignr xmm4, xmm3, 0xe
43ca50: movaps xmmword ptr [rdi + 0x20], xmm4
43ca54: palignr xmm3, xmm2, 0xe
43ca5a: movaps xmmword ptr [rdi + 0x10], xmm3
43ca5e: palignr xmm2, xmm1, 0xe
43ca64: movaps xmmword ptr [rdi], xmm2
43ca67: lea rdi, [rdi + 0x80]
43ca6e: jae 0x43c9e0
43ca74: movdqu xmmword ptr [r8], xmm0
43ca79: add rdx, 0x80
43ca80: add rdi, rdx
43ca83: add rsi, rdx
43ca86: lea r11, [rip + 0x5b573]
43ca8d: movsxd rdx, dword ptr [r11 + rdx*4]
43ca91: lea rdx, [r11 + rdx]
43ca95: notrack jmp rdx
43ca98: ud2 
43ca9a: nop word ptr [rax + rax]
43caa0: movaps xmm1, xmmword ptr [rsi - 0xe]
43caa4: movaps xmm2, xmmword ptr [rsi - 0x1e]
43caa8: palignr xmm1, xmm2, 0xe
43caae: movaps xmmword ptr [rdi - 0x10], xmm1
43cab2: movaps xmm3, xmmword ptr [rsi - 0x2e]
43cab6: palignr xmm2, xmm3, 0xe
43cabc: movaps xmmword ptr [rdi - 0x20], xmm2
43cac0: movaps xmm4, xmmword ptr [rsi - 0x3e]
43cac4: palignr xmm3, xmm4, 0xe
43caca: movaps xmmword ptr [rdi - 0x30], xmm3
43cace: movaps xmm5, xmmword ptr [rsi - 0x4e]
43cad2: palignr xmm4, xmm5, 0xe
43cad8: movaps xmmword ptr [rdi - 0x40], xmm4
43cadc: movaps xmm6, xmmword ptr [rsi - 0x5e]
43cae0: palignr xmm5, xmm6, 0xe
43cae6: movaps xmmword ptr [rdi - 0x50], xmm5
43caea: movaps xmm7, xmmword ptr [rsi - 0x6e]
43caee: palignr xmm6, xmm7, 0xe
43caf4: movaps xmmword ptr [rdi - 0x60], xmm6
43caf8: movaps xmm8, xmmword ptr [rsi - 0x7e]
43cafd: palignr xmm7, xmm8, 0xe
43cb04: movaps xmmword ptr [rdi - 0x70], xmm7
43cb08: movaps xmm9, xmmword ptr [rsi - 0x8e]
43cb10: palignr xmm8, xmm9, 0xe
43cb17: movaps xmmword ptr [rdi - 0x80], xmm8
43cb1c: sub rdx, 0x80
43cb23: lea rdi, [rdi - 0x80]
43cb27: lea rsi, [rsi - 0x80]
43cb2b: jae 0x43caa0
43cb31: movdqu xmmword ptr [r8], xmm0
43cb36: add rdx, 0x80
43cb3d: sub rdi, rdx
43cb40: sub rsi, rdx
43cb43: lea r11, [rip + 0x5b276]
43cb4a: movsxd rdx, dword ptr [r11 + rdx*4]
43cb4e: lea rdx, [r11 + rdx]
43cb52: notrack jmp rdx
43cb55: ud2 
43cb57: nop word ptr [rax + rax]
43cb60: sub rdx, 0x80
43cb67: movaps xmm1, xmmword ptr [rsi - 0xf]
43cb6b: movaps xmm2, xmmword ptr [rsi + 1]
43cb6f: movaps xmm3, xmmword ptr [rsi + 0x11]
43cb73: movaps xmm4, xmmword ptr [rsi + 0x21]
43cb77: movaps xmm5, xmmword ptr [rsi + 0x31]
43cb7b: movaps xmm6, xmmword ptr [rsi + 0x41]
43cb7f: movaps xmm7, xmmword ptr [rsi + 0x51]
43cb83: movaps xmm8, xmmword ptr [rsi + 0x61]
43cb88: movaps xmm9, xmmword ptr [rsi + 0x71]
43cb8d: lea rsi, [rsi + 0x80]
43cb94: palignr xmm9, xmm8, 0xf
43cb9b: movaps xmmword ptr [rdi + 0x70], xmm9
43cba0: palignr xmm8, xmm7, 0xf
43cba7: movaps xmmword ptr [rdi + 0x60], xmm8
43cbac: palignr xmm7, xmm6, 0xf
43cbb2: movaps xmmword ptr [rdi + 0x50], xmm7
43cbb6: palignr xmm6, xmm5, 0xf
43cbbc: movaps xmmword ptr [rdi + 0x40], xmm6
43cbc0: palignr xmm5, xmm4, 0xf
43cbc6: movaps xmmword ptr [rdi + 0x30], xmm5
43cbca: palignr xmm4, xmm3, 0xf
43cbd0: movaps xmmword ptr [rdi + 0x20], xmm4
43cbd4: palignr xmm3, xmm2, 0xf
43cbda: movaps xmmword ptr [rdi + 0x10], xmm3
43cbde: palignr xmm2, xmm1, 0xf
43cbe4: movaps xmmword ptr [rdi], xmm2
43cbe7: lea rdi, [rdi + 0x80]
43cbee: jae 0x43cb60
43cbf4: movdqu xmmword ptr [r8], xmm0
43cbf9: add rdx, 0x80
43cc00: add rdi, rdx
43cc03: add rsi, rdx
43cc06: lea r11, [rip + 0x5b3f3]
43cc0d: movsxd rdx, dword ptr [r11 + rdx*4]
43cc11: lea rdx, [r11 + rdx]
43cc15: notrack jmp rdx
43cc18: ud2 
43cc1a: nop word ptr [rax + rax]
43cc20: movaps xmm1, xmmword ptr [rsi - 0xf]
43cc24: movaps xmm2, xmmword ptr [rsi - 0x1f]
43cc28: palignr xmm1, xmm2, 0xf
43cc2e: movaps xmmword ptr [rdi - 0x10], xmm1
43cc32: movaps xmm3, xmmword ptr [rsi - 0x2f]
43cc36: palignr xmm2, xmm3, 0xf
43cc3c: movaps xmmword ptr [rdi - 0x20], xmm2
43cc40: movaps xmm4, xmmword ptr [rsi - 0x3f]
43cc44: palignr xmm3, xmm4, 0xf
43cc4a: movaps xmmword ptr [rdi - 0x30], xmm3
43cc4e: movaps xmm5, xmmword ptr [rsi - 0x4f]
43cc52: palignr xmm4, xmm5, 0xf
43cc58: movaps xmmword ptr [rdi - 0x40], xmm4
43cc5c: movaps xmm6, xmmword ptr [rsi - 0x5f]
43cc60: palignr xmm5, xmm6, 0xf
43cc66: movaps xmmword ptr [rdi - 0x50], xmm5
43cc6a: movaps xmm7, xmmword ptr [rsi - 0x6f]
43cc6e: palignr xmm6, xmm7, 0xf
43cc74: movaps xmmword ptr [rdi - 0x60], xmm6
43cc78: movaps xmm8, xmmword ptr [rsi - 0x7f]
43cc7d: palignr xmm7, xmm8, 0xf
43cc84: movaps xmmword ptr [rdi - 0x70], xmm7
43cc88: movaps xmm9, xmmword ptr [rsi - 0x8f]
43cc90: palignr xmm8, xmm9, 0xf
43cc97: movaps xmmword ptr [rdi - 0x80], xmm8
43cc9c: sub rdx, 0x80
43cca3: lea rdi, [rdi - 0x80]
43cca7: lea rsi, [rsi - 0x80]
43ccab: jae 0x43cc20
43ccb1: movdqu xmmword ptr [r8], xmm0
43ccb6: add rdx, 0x80
43ccbd: sub rdi, rdx
43ccc0: sub rsi, rdx
43ccc3: lea r11, [rip + 0x5b0f6]
43ccca: movsxd rdx, dword ptr [r11 + rdx*4]
43ccce: lea rdx, [r11 + rdx]
43ccd2: notrack jmp rdx
43ccd5: ud2 
43ccd7: nop word ptr [rax + rax]
43cce0: movdqu xmm1, xmmword ptr [rsi]
43cce4: movdqu xmmword ptr [r8], xmm0
43cce9: movdqa xmmword ptr [rdi], xmm1
43cced: sub rdx, 0x10
43ccf1: add rsi, 0x10
43ccf5: add rdi, 0x10
43ccf9: mov rcx, qword ptr [rip + 0x84358]
43cd00: mov r9, rsi
43cd03: sub r9, rdi
43cd06: cmp r9, rdx
43cd09: jae 0x43cd14
43cd0b: cmp r9, rcx
43cd0e: jbe 0x43cdd5
43cd14: cmp rdx, rcx
43cd17: ja 0x43cd1c
43cd19: mov rcx, rdx
43cd1c: sub rdx, rcx
43cd1f: cmp rdx, 0x1000
43cd26: jbe 0x43cdd2
43cd2c: mov r9, rcx
43cd2f: shl r9, 3
43cd33: cmp rdx, r9
43cd36: jbe 0x43cd3e
43cd38: add rdx, rcx
43cd3b: xor rcx, rcx
43cd3e: sub rdx, 0x80
43cd45: sub rdx, 0x80
43cd4c: prefetcht0 byte ptr [rsi + 0x200]
43cd53: prefetcht0 byte ptr [rsi + 0x300]
43cd5a: movdqu xmm0, xmmword ptr [rsi]
43cd5e: movdqu xmm1, xmmword ptr [rsi + 0x10]
43cd63: movdqu xmm2, xmmword ptr [rsi + 0x20]
43cd68: movdqu xmm3, xmmword ptr [rsi + 0x30]
43cd6d: movdqu xmm4, xmmword ptr [rsi + 0x40]
43cd72: movdqu xmm5, xmmword ptr [rsi + 0x50]
43cd77: movdqu xmm6, xmmword ptr [rsi + 0x60]
43cd7c: movdqu xmm7, xmmword ptr [rsi + 0x70]
43cd81: lfence 
43cd84: movntdq xmmword ptr [rdi], xmm0
43cd88: movntdq xmmword ptr [rdi + 0x10], xmm1
43cd8d: movntdq xmmword ptr [rdi + 0x20], xmm2
43cd92: movntdq xmmword ptr [rdi + 0x30], xmm3
43cd97: movntdq xmmword ptr [rdi + 0x40], xmm4
43cd9c: movntdq xmmword ptr [rdi + 0x50], xmm5
43cda1: movntdq xmmword ptr [rdi + 0x60], xmm6
43cda6: movntdq xmmword ptr [rdi + 0x70], xmm7
43cdab: lea rsi, [rsi + 0x80]
43cdb2: lea rdi, [rdi + 0x80]
43cdb9: jae 0x43cd45
43cdbb: sfence 
43cdbe: cmp rcx, 0x80
43cdc5: jb 0x43ce61
43cdcb: add rdx, 0x80
43cdd2: add rdx, rcx
43cdd5: sub rdx, 0x80
43cddc: prefetchnta byte ptr [rsi + 0x1c0]
43cde3: prefetchnta byte ptr [rsi + 0x280]
43cdea: prefetchnta byte ptr [rdi + 0x1c0]
43cdf1: prefetchnta byte ptr [rdi + 0x280]
43cdf8: sub rdx, 0x80
43cdff: movdqu xmm0, xmmword ptr [rsi]
43ce03: movdqu xmm1, xmmword ptr [rsi + 0x10]
43ce08: movdqu xmm2, xmmword ptr [rsi + 0x20]
43ce0d: movdqu xmm3, xmmword ptr [rsi + 0x30]
43ce12: movdqu xmm4, xmmword ptr [rsi + 0x40]
43ce17: movdqu xmm5, xmmword ptr [rsi + 0x50]
43ce1c: movdqu xmm6, xmmword ptr [rsi + 0x60]
43ce21: movdqu xmm7, xmmword ptr [rsi + 0x70]
43ce26: movdqa xmmword ptr [rdi], xmm0
43ce2a: movdqa xmmword ptr [rdi + 0x10], xmm1
43ce2f: movdqa xmmword ptr [rdi + 0x20], xmm2
43ce34: movdqa xmmword ptr [rdi + 0x30], xmm3
43ce39: movdqa xmmword ptr [rdi + 0x40], xmm4
43ce3e: movdqa xmmword ptr [rdi + 0x50], xmm5
43ce43: movdqa xmmword ptr [rdi + 0x60], xmm6
43ce48: movdqa xmmword ptr [rdi + 0x70], xmm7
43ce4d: lea rsi, [rsi + 0x80]
43ce54: lea rdi, [rdi + 0x80]
43ce5b: jae 0x43cddc
43ce61: add rdx, 0x80
43ce68: add rsi, rdx
43ce6b: add rdi, rdx
43ce6e: lea r11, [rip + 0x5b18b]
43ce75: movsxd rdx, dword ptr [r11 + rdx*4]
43ce79: lea rdx, [r11 + rdx]
43ce7d: notrack jmp rdx
43ce80: ud2 
43ce82: nop word ptr cs:[rax + rax]
43ce8d: nop dword ptr [rax]
43ce90: add rsi, rdx
43ce93: add rdi, rdx
43ce96: movdqu xmm0, xmmword ptr [rsi - 0x10]
43ce9b: lea r8, [rdi - 0x10]
43ce9f: mov r9, rdi
43cea2: and rdi, 0xfffffffffffffff0
43cea6: sub r9, rdi
43cea9: sub rsi, r9
43ceac: sub rdx, r9
43ceaf: mov rcx, qword ptr [rip + 0x841a2]
43ceb6: mov r9, rdi
43ceb9: sub r9, rsi
43cebc: cmp r9, rdx
43cebf: jae 0x43ceca
43cec1: cmp r9, rcx
43cec4: jbe 0x43cf89
43ceca: cmp rdx, rcx
43cecd: ja 0x43ced2
43cecf: mov rcx, rdx
43ced2: sub rdx, rcx
43ced5: cmp rdx, 0x1000
43cedc: jbe 0x43cf86
43cee2: mov r9, rcx
43cee5: shl r9, 3
43cee9: cmp rdx, r9
43ceec: jbe 0x43cef4
43ceee: add rdx, rcx
43cef1: xor rcx, rcx
43cef4: sub rdx, 0x80
43cefb: sub rdx, 0x80
43cf02: prefetcht0 byte ptr [rsi - 0x200]
43cf09: prefetcht0 byte ptr [rsi - 0x300]
43cf10: movdqu xmm1, xmmword ptr [rsi - 0x10]
43cf15: movdqu xmm2, xmmword ptr [rsi - 0x20]
43cf1a: movdqu xmm3, xmmword ptr [rsi - 0x30]
43cf1f: movdqu xmm4, xmmword ptr [rsi - 0x40]
43cf24: movdqu xmm5, xmmword ptr [rsi - 0x50]
43cf29: movdqu xmm6, xmmword ptr [rsi - 0x60]
43cf2e: movdqu xmm7, xmmword ptr [rsi - 0x70]
43cf33: movdqu xmm8, xmmword ptr [rsi - 0x80]
43cf39: lfence 
43cf3c: movntdq xmmword ptr [rdi - 0x10], xmm1
43cf41: movntdq xmmword ptr [rdi - 0x20], xmm2
43cf46: movntdq xmmword ptr [rdi - 0x30], xmm3
43cf4b: movntdq xmmword ptr [rdi - 0x40], xmm4
43cf50: movntdq xmmword ptr [rdi - 0x50], xmm5
43cf55: movntdq xmmword ptr [rdi - 0x60], xmm6
43cf5a: movntdq xmmword ptr [rdi - 0x70], xmm7
43cf5f: movntdq xmmword ptr [rdi - 0x80], xmm8
43cf65: lea rsi, [rsi - 0x80]
43cf69: lea rdi, [rdi - 0x80]
43cf6d: jae 0x43cefb
43cf6f: sfence 
43cf72: cmp rcx, 0x80
43cf79: jb 0x43d00f
43cf7f: add rdx, 0x80
43cf86: add rdx, rcx
43cf89: sub rdx, 0x80
43cf90: prefetchnta byte ptr [rsi - 0x1c0]
43cf97: prefetchnta byte ptr [rsi - 0x280]
43cf9e: prefetchnta byte ptr [rdi - 0x1c0]
43cfa5: prefetchnta byte ptr [rdi - 0x280]
43cfac: sub rdx, 0x80
43cfb3: movdqu xmm1, xmmword ptr [rsi - 0x10]
43cfb8: movdqu xmm2, xmmword ptr [rsi - 0x20]
43cfbd: movdqu xmm3, xmmword ptr [rsi - 0x30]
43cfc2: movdqu xmm4, xmmword ptr [rsi - 0x40]
43cfc7: movdqu xmm5, xmmword ptr [rsi - 0x50]
43cfcc: movdqu xmm6, xmmword ptr [rsi - 0x60]
43cfd1: movdqu xmm7, xmmword ptr [rsi - 0x70]
43cfd6: movdqu xmm8, xmmword ptr [rsi - 0x80]
43cfdc: movdqa xmmword ptr [rdi - 0x10], xmm1
43cfe1: movdqa xmmword ptr [rdi - 0x20], xmm2
43cfe6: movdqa xmmword ptr [rdi - 0x30], xmm3
43cfeb: movdqa xmmword ptr [rdi - 0x40], xmm4
43cff0: movdqa xmmword ptr [rdi - 0x50], xmm5
43cff5: movdqa xmmword ptr [rdi - 0x60], xmm6
43cffa: movdqa xmmword ptr [rdi - 0x70], xmm7
43cfff: movdqa xmmword ptr [rdi - 0x80], xmm8
43d005: lea rsi, [rsi - 0x80]
43d009: lea rdi, [rdi - 0x80]
43d00d: jae 0x43cf90
43d00f: movdqu xmmword ptr [r8], xmm0
43d014: add rdx, 0x80
43d01b: sub rsi, rdx
43d01e: sub rdi, rdx
43d021: lea r11, [rip + 0x5ad98]
43d028: movsxd rdx, dword ptr [r11 + rdx*4]
43d02c: lea rdx, [r11 + rdx]
43d030: notrack jmp rdx
43d033: ud2 
43d035: nop word ptr cs:[rax + rax]
43d040: lddqu xmm0, xmmword ptr [rsi - 0x80]
43d045: movdqu xmmword ptr [rdi - 0x80], xmm0
43d04a: lddqu xmm0, xmmword ptr [rsi - 0x70]
43d04f: movdqu xmmword ptr [rdi - 0x70], xmm0
43d054: lddqu xmm0, xmmword ptr [rsi - 0x60]
43d059: movdqu xmmword ptr [rdi - 0x60], xmm0
43d05e: lddqu xmm0, xmmword ptr [rsi - 0x50]
43d063: movdqu xmmword ptr [rdi - 0x50], xmm0
43d068: lddqu xmm0, xmmword ptr [rsi - 0x40]
43d06d: movdqu xmmword ptr [rdi - 0x40], xmm0
43d072: lddqu xmm0, xmmword ptr [rsi - 0x30]
43d077: movdqu xmmword ptr [rdi - 0x30], xmm0
43d07c: lddqu xmm0, xmmword ptr [rsi - 0x20]
43d081: movdqu xmmword ptr [rdi - 0x20], xmm0
43d086: lddqu xmm0, xmmword ptr [rsi - 0x10]
43d08b: movdqu xmmword ptr [rdi - 0x10], xmm0
43d090: ret 
43d091: nop word ptr cs:[rax + rax]
43d09c: nop dword ptr [rax]
43d0a0: lddqu xmm0, xmmword ptr [rsi - 0x8f]
43d0a8: movdqu xmmword ptr [rdi - 0x8f], xmm0
43d0b0: lddqu xmm0, xmmword ptr [rsi - 0x7f]
43d0b5: movdqu xmmword ptr [rdi - 0x7f], xmm0
43d0ba: lddqu xmm0, xmmword ptr [rsi - 0x6f]
43d0bf: movdqu xmmword ptr [rdi - 0x6f], xmm0
43d0c4: lddqu xmm0, xmmword ptr [rsi - 0x5f]
43d0c9: movdqu xmmword ptr [rdi - 0x5f], xmm0
43d0ce: lddqu xmm0, xmmword ptr [rsi - 0x4f]
43d0d3: movdqu xmmword ptr [rdi - 0x4f], xmm0
43d0d8: lddqu xmm0, xmmword ptr [rsi - 0x3f]
43d0dd: movdqu xmmword ptr [rdi - 0x3f], xmm0
43d0e2: lddqu xmm0, xmmword ptr [rsi - 0x2f]
43d0e7: movdqu xmmword ptr [rdi - 0x2f], xmm0
43d0ec: lddqu xmm0, xmmword ptr [rsi - 0x1f]
43d0f1: lddqu xmm1, xmmword ptr [rsi - 0x10]
43d0f6: movdqu xmmword ptr [rdi - 0x1f], xmm0
43d0fb: movdqu xmmword ptr [rdi - 0x10], xmm1
43d100: ret 
43d101: nop word ptr cs:[rax + rax]
43d10c: nop dword ptr [rax]
43d110: mov rdx, qword ptr [rsi - 0xf]
43d114: mov rcx, qword ptr [rsi - 8]
43d118: mov qword ptr [rdi - 0xf], rdx
43d11c: mov qword ptr [rdi - 8], rcx
43d120: ret 
43d121: nop word ptr cs:[rax + rax]
43d12c: nop dword ptr [rax]
43d130: lddqu xmm0, xmmword ptr [rsi - 0x8e]
43d138: movdqu xmmword ptr [rdi - 0x8e], xmm0
43d140: lddqu xmm0, xmmword ptr [rsi - 0x7e]
43d145: movdqu xmmword ptr [rdi - 0x7e], xmm0
43d14a: lddqu xmm0, xmmword ptr [rsi - 0x6e]
43d14f: movdqu xmmword ptr [rdi - 0x6e], xmm0
43d154: lddqu xmm0, xmmword ptr [rsi - 0x5e]
43d159: movdqu xmmword ptr [rdi - 0x5e], xmm0
43d15e: lddqu xmm0, xmmword ptr [rsi - 0x4e]
43d163: movdqu xmmword ptr [rdi - 0x4e], xmm0
43d168: lddqu xmm0, xmmword ptr [rsi - 0x3e]
43d16d: movdqu xmmword ptr [rdi - 0x3e], xmm0
43d172: lddqu xmm0, xmmword ptr [rsi - 0x2e]
43d177: movdqu xmmword ptr [rdi - 0x2e], xmm0
43d17c: lddqu xmm0, xmmword ptr [rsi - 0x1e]
43d181: lddqu xmm1, xmmword ptr [rsi - 0x10]
43d186: movdqu xmmword ptr [rdi - 0x1e], xmm0
43d18b: movdqu xmmword ptr [rdi - 0x10], xmm1
43d190: ret 
43d191: nop word ptr cs:[rax + rax]
43d19c: nop dword ptr [rax]
43d1a0: mov rdx, qword ptr [rsi - 0xe]
43d1a4: mov rcx, qword ptr [rsi - 8]
43d1a8: mov qword ptr [rdi - 0xe], rdx
43d1ac: mov qword ptr [rdi - 8], rcx
43d1b0: ret 
43d1b1: nop word ptr cs:[rax + rax]
43d1bc: nop dword ptr [rax]
43d1c0: lddqu xmm0, xmmword ptr [rsi - 0x8d]
43d1c8: movdqu xmmword ptr [rdi - 0x8d], xmm0
43d1d0: lddqu xmm0, xmmword ptr [rsi - 0x7d]
43d1d5: movdqu xmmword ptr [rdi - 0x7d], xmm0
43d1da: lddqu xmm0, xmmword ptr [rsi - 0x6d]
43d1df: movdqu xmmword ptr [rdi - 0x6d], xmm0
43d1e4: lddqu xmm0, xmmword ptr [rsi - 0x5d]
43d1e9: movdqu xmmword ptr [rdi - 0x5d], xmm0
43d1ee: lddqu xmm0, xmmword ptr [rsi - 0x4d]
43d1f3: movdqu xmmword ptr [rdi - 0x4d], xmm0
43d1f8: lddqu xmm0, xmmword ptr [rsi - 0x3d]
43d1fd: movdqu xmmword ptr [rdi - 0x3d], xmm0
43d202: lddqu xmm0, xmmword ptr [rsi - 0x2d]
43d207: movdqu xmmword ptr [rdi - 0x2d], xmm0
43d20c: lddqu xmm0, xmmword ptr [rsi - 0x1d]
43d211: lddqu xmm1, xmmword ptr [rsi - 0x10]
43d216: movdqu xmmword ptr [rdi - 0x1d], xmm0
43d21b: movdqu xmmword ptr [rdi - 0x10], xmm1
43d220: ret 
43d221: nop word ptr cs:[rax + rax]
43d22c: nop dword ptr [rax]
43d230: mov rdx, qword ptr [rsi - 0xd]
43d234: mov rcx, qword ptr [rsi - 8]
43d238: mov qword ptr [rdi - 0xd], rdx
43d23c: mov qword ptr [rdi - 8], rcx
43d240: ret 
43d241: nop word ptr cs:[rax + rax]
43d24c: nop dword ptr [rax]
43d250: lddqu xmm0, xmmword ptr [rsi - 0x8c]
43d258: movdqu xmmword ptr [rdi - 0x8c], xmm0
43d260: lddqu xmm0, xmmword ptr [rsi - 0x7c]
43d265: movdqu xmmword ptr [rdi - 0x7c], xmm0
43d26a: lddqu xmm0, xmmword ptr [rsi - 0x6c]
43d26f: movdqu xmmword ptr [rdi - 0x6c], xmm0
43d274: lddqu xmm0, xmmword ptr [rsi - 0x5c]
43d279: movdqu xmmword ptr [rdi - 0x5c], xmm0
43d27e: lddqu xmm0, xmmword ptr [rsi - 0x4c]
43d283: movdqu xmmword ptr [rdi - 0x4c], xmm0
43d288: lddqu xmm0, xmmword ptr [rsi - 0x3c]
43d28d: movdqu xmmword ptr [rdi - 0x3c], xmm0
43d292: lddqu xmm0, xmmword ptr [rsi - 0x2c]
43d297: movdqu xmmword ptr [rdi - 0x2c], xmm0
43d29c: lddqu xmm0, xmmword ptr [rsi - 0x1c]
43d2a1: lddqu xmm1, xmmword ptr [rsi - 0x10]
43d2a6: movdqu xmmword ptr [rdi - 0x1c], xmm0
43d2ab: movdqu xmmword ptr [rdi - 0x10], xmm1
43d2b0: ret 
43d2b1: nop word ptr cs:[rax + rax]
43d2bc: nop dword ptr [rax]
43d2c0: mov rdx, qword ptr [rsi - 0xc]
43d2c4: mov ecx, dword ptr [rsi - 4]
43d2c7: mov qword ptr [rdi - 0xc], rdx
43d2cb: mov dword ptr [rdi - 4], ecx
43d2ce: ret 
43d2cf: nop 
43d2d0: lddqu xmm0, xmmword ptr [rsi - 0x8b]
43d2d8: movdqu xmmword ptr [rdi - 0x8b], xmm0
43d2e0: lddqu xmm0, xmmword ptr [rsi - 0x7b]
43d2e5: movdqu xmmword ptr [rdi - 0x7b], xmm0
43d2ea: lddqu xmm0, xmmword ptr [rsi - 0x6b]
43d2ef: movdqu xmmword ptr [rdi - 0x6b], xmm0
43d2f4: lddqu xmm0, xmmword ptr [rsi - 0x5b]
43d2f9: movdqu xmmword ptr [rdi - 0x5b], xmm0
43d2fe: lddqu xmm0, xmmword ptr [rsi - 0x4b]
43d303: movdqu xmmword ptr [rdi - 0x4b], xmm0
43d308: lddqu xmm0, xmmword ptr [rsi - 0x3b]
43d30d: movdqu xmmword ptr [rdi - 0x3b], xmm0
43d312: lddqu xmm0, xmmword ptr [rsi - 0x2b]
43d317: movdqu xmmword ptr [rdi - 0x2b], xmm0
43d31c: lddqu xmm0, xmmword ptr [rsi - 0x1b]
43d321: lddqu xmm1, xmmword ptr [rsi - 0x10]
43d326: movdqu xmmword ptr [rdi - 0x1b], xmm0
43d32b: movdqu xmmword ptr [rdi - 0x10], xmm1
43d330: ret 
43d331: nop word ptr cs:[rax + rax]
43d33c: nop dword ptr [rax]
43d340: mov rdx, qword ptr [rsi - 0xb]
43d344: mov ecx, dword ptr [rsi - 4]
43d347: mov qword ptr [rdi - 0xb], rdx
43d34b: mov dword ptr [rdi - 4], ecx
43d34e: ret 
43d34f: nop 
43d350: lddqu xmm0, xmmword ptr [rsi - 0x8a]
43d358: movdqu xmmword ptr [rdi - 0x8a], xmm0
43d360: lddqu xmm0, xmmword ptr [rsi - 0x7a]
43d365: movdqu xmmword ptr [rdi - 0x7a], xmm0
43d36a: lddqu xmm0, xmmword ptr [rsi - 0x6a]
43d36f: movdqu xmmword ptr [rdi - 0x6a], xmm0
43d374: lddqu xmm0, xmmword ptr [rsi - 0x5a]
43d379: movdqu xmmword ptr [rdi - 0x5a], xmm0
43d37e: lddqu xmm0, xmmword ptr [rsi - 0x4a]
43d383: movdqu xmmword ptr [rdi - 0x4a], xmm0
43d388: lddqu xmm0, xmmword ptr [rsi - 0x3a]
43d38d: movdqu xmmword ptr [rdi - 0x3a], xmm0
43d392: lddqu xmm0, xmmword ptr [rsi - 0x2a]
43d397: movdqu xmmword ptr [rdi - 0x2a], xmm0
43d39c: lddqu xmm0, xmmword ptr [rsi - 0x1a]
43d3a1: lddqu xmm1, xmmword ptr [rsi - 0x10]
43d3a6: movdqu xmmword ptr [rdi - 0x1a], xmm0
43d3ab: movdqu xmmword ptr [rdi - 0x10], xmm1
43d3b0: ret 
43d3b1: nop word ptr cs:[rax + rax]
43d3bc: nop dword ptr [rax]
43d3c0: mov rdx, qword ptr [rsi - 0xa]
43d3c4: mov ecx, dword ptr [rsi - 4]
43d3c7: mov qword ptr [rdi - 0xa], rdx
43d3cb: mov dword ptr [rdi - 4], ecx
43d3ce: ret 
43d3cf: nop 
43d3d0: lddqu xmm0, xmmword ptr [rsi - 0x89]
43d3d8: movdqu xmmword ptr [rdi - 0x89], xmm0
43d3e0: lddqu xmm0, xmmword ptr [rsi - 0x79]
43d3e5: movdqu xmmword ptr [rdi - 0x79], xmm0
43d3ea: lddqu xmm0, xmmword ptr [rsi - 0x69]
43d3ef: movdqu xmmword ptr [rdi - 0x69], xmm0
43d3f4: lddqu xmm0, xmmword ptr [rsi - 0x59]
43d3f9: movdqu xmmword ptr [rdi - 0x59], xmm0
43d3fe: lddqu xmm0, xmmword ptr [rsi - 0x49]
43d403: movdqu xmmword ptr [rdi - 0x49], xmm0
43d408: lddqu xmm0, xmmword ptr [rsi - 0x39]
43d40d: movdqu xmmword ptr [rdi - 0x39], xmm0
43d412: lddqu xmm0, xmmword ptr [rsi - 0x29]
43d417: movdqu xmmword ptr [rdi - 0x29], xmm0
43d41c: lddqu xmm0, xmmword ptr [rsi - 0x19]
43d421: lddqu xmm1, xmmword ptr [rsi - 0x10]
43d426: movdqu xmmword ptr [rdi - 0x19], xmm0
43d42b: movdqu xmmword ptr [rdi - 0x10], xmm1
43d430: ret 
43d431: nop word ptr cs:[rax + rax]
43d43c: nop dword ptr [rax]
43d440: mov rdx, qword ptr [rsi - 9]
43d444: mov ecx, dword ptr [rsi - 4]
43d447: mov qword ptr [rdi - 9], rdx
43d44b: mov dword ptr [rdi - 4], ecx
43d44e: ret 
43d44f: nop 
43d450: lddqu xmm0, xmmword ptr [rsi - 0x88]
43d458: movdqu xmmword ptr [rdi - 0x88], xmm0
43d460: lddqu xmm0, xmmword ptr [rsi - 0x78]
43d465: movdqu xmmword ptr [rdi - 0x78], xmm0
43d46a: lddqu xmm0, xmmword ptr [rsi - 0x68]
43d46f: movdqu xmmword ptr [rdi - 0x68], xmm0
43d474: lddqu xmm0, xmmword ptr [rsi - 0x58]
43d479: movdqu xmmword ptr [rdi - 0x58], xmm0
43d47e: lddqu xmm0, xmmword ptr [rsi - 0x48]
43d483: movdqu xmmword ptr [rdi - 0x48], xmm0
43d488: lddqu xmm0, xmmword ptr [rsi - 0x38]
43d48d: movdqu xmmword ptr [rdi - 0x38], xmm0
43d492: lddqu xmm0, xmmword ptr [rsi - 0x28]
43d497: movdqu xmmword ptr [rdi - 0x28], xmm0
43d49c: lddqu xmm0, xmmword ptr [rsi - 0x18]
43d4a1: lddqu xmm1, xmmword ptr [rsi - 0x10]
43d4a6: movdqu xmmword ptr [rdi - 0x18], xmm0
43d4ab: movdqu xmmword ptr [rdi - 0x10], xmm1
43d4b0: ret 
43d4b1: nop word ptr cs:[rax + rax]
43d4bc: nop dword ptr [rax]
43d4c0: mov rdx, qword ptr [rsi - 8]
43d4c4: mov qword ptr [rdi - 8], rdx
43d4c8: ret 
43d4c9: nop dword ptr [rax]
43d4d0: lddqu xmm0, xmmword ptr [rsi - 0x87]
43d4d8: movdqu xmmword ptr [rdi - 0x87], xmm0
43d4e0: lddqu xmm0, xmmword ptr [rsi - 0x77]
43d4e5: movdqu xmmword ptr [rdi - 0x77], xmm0
43d4ea: lddqu xmm0, xmmword ptr [rsi - 0x67]
43d4ef: movdqu xmmword ptr [rdi - 0x67], xmm0
43d4f4: lddqu xmm0, xmmword ptr [rsi - 0x57]
43d4f9: movdqu xmmword ptr [rdi - 0x57], xmm0
43d4fe: lddqu xmm0, xmmword ptr [rsi - 0x47]
43d503: movdqu xmmword ptr [rdi - 0x47], xmm0
43d508: lddqu xmm0, xmmword ptr [rsi - 0x37]
43d50d: movdqu xmmword ptr [rdi - 0x37], xmm0
43d512: lddqu xmm0, xmmword ptr [rsi - 0x27]
43d517: movdqu xmmword ptr [rdi - 0x27], xmm0
43d51c: lddqu xmm0, xmmword ptr [rsi - 0x17]
43d521: lddqu xmm1, xmmword ptr [rsi - 0x10]
43d526: movdqu xmmword ptr [rdi - 0x17], xmm0
43d52b: movdqu xmmword ptr [rdi - 0x10], xmm1
43d530: ret 
43d531: nop word ptr cs:[rax + rax]
43d53c: nop dword ptr [rax]
43d540: mov edx, dword ptr [rsi - 7]
43d543: mov ecx, dword ptr [rsi - 4]
43d546: mov dword ptr [rdi - 7], edx
43d549: mov dword ptr [rdi - 4], ecx
43d54c: ret 
43d54d: nop dword ptr [rax]
43d550: lddqu xmm0, xmmword ptr [rsi - 0x86]
43d558: movdqu xmmword ptr [rdi - 0x86], xmm0
43d560: lddqu xmm0, xmmword ptr [rsi - 0x76]
43d565: movdqu xmmword ptr [rdi - 0x76], xmm0
43d56a: lddqu xmm0, xmmword ptr [rsi - 0x66]
43d56f: movdqu xmmword ptr [rdi - 0x66], xmm0
43d574: lddqu xmm0, xmmword ptr [rsi - 0x56]
43d579: movdqu xmmword ptr [rdi - 0x56], xmm0
43d57e: lddqu xmm0, xmmword ptr [rsi - 0x46]
43d583: movdqu xmmword ptr [rdi - 0x46], xmm0
43d588: lddqu xmm0, xmmword ptr [rsi - 0x36]
43d58d: movdqu xmmword ptr [rdi - 0x36], xmm0
43d592: lddqu xmm0, xmmword ptr [rsi - 0x26]
43d597: movdqu xmmword ptr [rdi - 0x26], xmm0
43d59c: lddqu xmm0, xmmword ptr [rsi - 0x16]
43d5a1: lddqu xmm1, xmmword ptr [rsi - 0x10]
43d5a6: movdqu xmmword ptr [rdi - 0x16], xmm0
43d5ab: movdqu xmmword ptr [rdi - 0x10], xmm1
43d5b0: ret 
43d5b1: nop word ptr cs:[rax + rax]
43d5bc: nop dword ptr [rax]
43d5c0: mov edx, dword ptr [rsi - 6]
43d5c3: mov ecx, dword ptr [rsi - 4]
43d5c6: mov dword ptr [rdi - 6], edx
43d5c9: mov dword ptr [rdi - 4], ecx
43d5cc: ret 
43d5cd: nop dword ptr [rax]
43d5d0: lddqu xmm0, xmmword ptr [rsi - 0x85]
43d5d8: movdqu xmmword ptr [rdi - 0x85], xmm0
43d5e0: lddqu xmm0, xmmword ptr [rsi - 0x75]
43d5e5: movdqu xmmword ptr [rdi - 0x75], xmm0
43d5ea: lddqu xmm0, xmmword ptr [rsi - 0x65]
43d5ef: movdqu xmmword ptr [rdi - 0x65], xmm0
43d5f4: lddqu xmm0, xmmword ptr [rsi - 0x55]
43d5f9: movdqu xmmword ptr [rdi - 0x55], xmm0
43d5fe: lddqu xmm0, xmmword ptr [rsi - 0x45]
43d603: movdqu xmmword ptr [rdi - 0x45], xmm0
43d608: lddqu xmm0, xmmword ptr [rsi - 0x35]
43d60d: movdqu xmmword ptr [rdi - 0x35], xmm0
43d612: lddqu xmm0, xmmword ptr [rsi - 0x25]
43d617: movdqu xmmword ptr [rdi - 0x25], xmm0
43d61c: lddqu xmm0, xmmword ptr [rsi - 0x15]
43d621: lddqu xmm1, xmmword ptr [rsi - 0x10]
43d626: movdqu xmmword ptr [rdi - 0x15], xmm0
43d62b: movdqu xmmword ptr [rdi - 0x10], xmm1
43d630: ret 
43d631: nop word ptr cs:[rax + rax]
43d63c: nop dword ptr [rax]
43d640: mov edx, dword ptr [rsi - 5]
43d643: mov ecx, dword ptr [rsi - 4]
43d646: mov dword ptr [rdi - 5], edx
43d649: mov dword ptr [rdi - 4], ecx
43d64c: ret 
43d64d: nop dword ptr [rax]
43d650: lddqu xmm0, xmmword ptr [rsi - 0x84]
43d658: movdqu xmmword ptr [rdi - 0x84], xmm0
43d660: lddqu xmm0, xmmword ptr [rsi - 0x74]
43d665: movdqu xmmword ptr [rdi - 0x74], xmm0
43d66a: lddqu xmm0, xmmword ptr [rsi - 0x64]
43d66f: movdqu xmmword ptr [rdi - 0x64], xmm0
43d674: lddqu xmm0, xmmword ptr [rsi - 0x54]
43d679: movdqu xmmword ptr [rdi - 0x54], xmm0
43d67e: lddqu xmm0, xmmword ptr [rsi - 0x44]
43d683: movdqu xmmword ptr [rdi - 0x44], xmm0
43d688: lddqu xmm0, xmmword ptr [rsi - 0x34]
43d68d: movdqu xmmword ptr [rdi - 0x34], xmm0
43d692: lddqu xmm0, xmmword ptr [rsi - 0x24]
43d697: movdqu xmmword ptr [rdi - 0x24], xmm0
43d69c: lddqu xmm0, xmmword ptr [rsi - 0x14]
43d6a1: lddqu xmm1, xmmword ptr [rsi - 0x10]
43d6a6: movdqu xmmword ptr [rdi - 0x14], xmm0
43d6ab: movdqu xmmword ptr [rdi - 0x10], xmm1
43d6b0: ret 
43d6b1: nop word ptr cs:[rax + rax]
43d6bc: nop dword ptr [rax]
43d6c0: mov edx, dword ptr [rsi - 4]
43d6c3: mov dword ptr [rdi - 4], edx
43d6c6: ret 
43d6c7: nop word ptr [rax + rax]
43d6d0: lddqu xmm0, xmmword ptr [rsi - 0x83]
43d6d8: movdqu xmmword ptr [rdi - 0x83], xmm0
43d6e0: lddqu xmm0, xmmword ptr [rsi - 0x73]
43d6e5: movdqu xmmword ptr [rdi - 0x73], xmm0
43d6ea: lddqu xmm0, xmmword ptr [rsi - 0x63]
43d6ef: movdqu xmmword ptr [rdi - 0x63], xmm0
43d6f4: lddqu xmm0, xmmword ptr [rsi - 0x53]
43d6f9: movdqu xmmword ptr [rdi - 0x53], xmm0
43d6fe: lddqu xmm0, xmmword ptr [rsi - 0x43]
43d703: movdqu xmmword ptr [rdi - 0x43], xmm0
43d708: lddqu xmm0, xmmword ptr [rsi - 0x33]
43d70d: movdqu xmmword ptr [rdi - 0x33], xmm0
43d712: lddqu xmm0, xmmword ptr [rsi - 0x23]
43d717: movdqu xmmword ptr [rdi - 0x23], xmm0
43d71c: lddqu xmm0, xmmword ptr [rsi - 0x13]
43d721: lddqu xmm1, xmmword ptr [rsi - 0x10]
43d726: movdqu xmmword ptr [rdi - 0x13], xmm0
43d72b: movdqu xmmword ptr [rdi - 0x10], xmm1
43d730: ret 
43d731: nop word ptr cs:[rax + rax]
43d73c: nop dword ptr [rax]
43d740: mov dx, word ptr [rsi - 3]
43d744: mov cx, word ptr [rsi - 2]
43d748: mov word ptr [rdi - 3], dx
43d74c: mov word ptr [rdi - 2], cx
43d750: ret 
43d751: nop word ptr cs:[rax + rax]
43d75c: nop dword ptr [rax]
43d760: lddqu xmm0, xmmword ptr [rsi - 0x82]
43d768: movdqu xmmword ptr [rdi - 0x82], xmm0
43d770: lddqu xmm0, xmmword ptr [rsi - 0x72]
43d775: movdqu xmmword ptr [rdi - 0x72], xmm0
43d77a: lddqu xmm0, xmmword ptr [rsi - 0x62]
43d77f: movdqu xmmword ptr [rdi - 0x62], xmm0
43d784: lddqu xmm0, xmmword ptr [rsi - 0x52]
43d789: movdqu xmmword ptr [rdi - 0x52], xmm0
43d78e: lddqu xmm0, xmmword ptr [rsi - 0x42]
43d793: movdqu xmmword ptr [rdi - 0x42], xmm0
43d798: lddqu xmm0, xmmword ptr [rsi - 0x32]
43d79d: movdqu xmmword ptr [rdi - 0x32], xmm0
43d7a2: lddqu xmm0, xmmword ptr [rsi - 0x22]
43d7a7: movdqu xmmword ptr [rdi - 0x22], xmm0
43d7ac: lddqu xmm0, xmmword ptr [rsi - 0x12]
43d7b1: lddqu xmm1, xmmword ptr [rsi - 0x10]
43d7b6: movdqu xmmword ptr [rdi - 0x12], xmm0
43d7bb: movdqu xmmword ptr [rdi - 0x10], xmm1
43d7c0: ret 
43d7c1: nop word ptr cs:[rax + rax]
43d7cc: nop dword ptr [rax]
43d7d0: movzx edx, word ptr [rsi - 2]
43d7d4: mov word ptr [rdi - 2], dx
43d7d8: ret 
43d7d9: nop dword ptr [rax]
43d7e0: lddqu xmm0, xmmword ptr [rsi - 0x81]
43d7e8: movdqu xmmword ptr [rdi - 0x81], xmm0
43d7f0: lddqu xmm0, xmmword ptr [rsi - 0x71]
43d7f5: movdqu xmmword ptr [rdi - 0x71], xmm0
43d7fa: lddqu xmm0, xmmword ptr [rsi - 0x61]
43d7ff: movdqu xmmword ptr [rdi - 0x61], xmm0
43d804: lddqu xmm0, xmmword ptr [rsi - 0x51]
43d809: movdqu xmmword ptr [rdi - 0x51], xmm0
43d80e: lddqu xmm0, xmmword ptr [rsi - 0x41]
43d813: movdqu xmmword ptr [rdi - 0x41], xmm0
43d818: lddqu xmm0, xmmword ptr [rsi - 0x31]
43d81d: movdqu xmmword ptr [rdi - 0x31], xmm0
43d822: lddqu xmm0, xmmword ptr [rsi - 0x21]
43d827: movdqu xmmword ptr [rdi - 0x21], xmm0
43d82c: lddqu xmm0, xmmword ptr [rsi - 0x11]
43d831: lddqu xmm1, xmmword ptr [rsi - 0x10]
43d836: movdqu xmmword ptr [rdi - 0x11], xmm0
43d83b: movdqu xmmword ptr [rdi - 0x10], xmm1
43d840: ret 
43d841: nop word ptr cs:[rax + rax]
43d84c: nop dword ptr [rax]
43d850: movzx edx, byte ptr [rsi - 1]
43d854: mov byte ptr [rdi - 1], dl
43d857: ret 
43d858: nop dword ptr [rax + rax]
43d860: lddqu xmm0, xmmword ptr [rsi + 0x70]
43d865: movdqu xmmword ptr [rdi + 0x70], xmm0
43d86a: lddqu xmm0, xmmword ptr [rsi + 0x60]
43d86f: movdqu xmmword ptr [rdi + 0x60], xmm0
43d874: lddqu xmm0, xmmword ptr [rsi + 0x50]
43d879: movdqu xmmword ptr [rdi + 0x50], xmm0
43d87e: lddqu xmm0, xmmword ptr [rsi + 0x40]
43d883: movdqu xmmword ptr [rdi + 0x40], xmm0
43d888: lddqu xmm0, xmmword ptr [rsi + 0x30]
43d88d: movdqu xmmword ptr [rdi + 0x30], xmm0
43d892: lddqu xmm0, xmmword ptr [rsi + 0x20]
43d897: movdqu xmmword ptr [rdi + 0x20], xmm0
43d89c: lddqu xmm0, xmmword ptr [rsi + 0x10]
43d8a1: movdqu xmmword ptr [rdi + 0x10], xmm0
43d8a6: lddqu xmm0, xmmword ptr [rsi]
43d8aa: movdqu xmmword ptr [rdi], xmm0
43d8ae: ret 
43d8af: nop 
43d8b0: lddqu xmm0, xmmword ptr [rsi + 0x7f]
43d8b5: movdqu xmmword ptr [rdi + 0x7f], xmm0
43d8ba: lddqu xmm0, xmmword ptr [rsi + 0x6f]
43d8bf: movdqu xmmword ptr [rdi + 0x6f], xmm0
43d8c4: lddqu xmm0, xmmword ptr [rsi + 0x5f]
43d8c9: movdqu xmmword ptr [rdi + 0x5f], xmm0
43d8ce: lddqu xmm0, xmmword ptr [rsi + 0x4f]
43d8d3: movdqu xmmword ptr [rdi + 0x4f], xmm0
43d8d8: lddqu xmm0, xmmword ptr [rsi + 0x3f]
43d8dd: movdqu xmmword ptr [rdi + 0x3f], xmm0
43d8e2: lddqu xmm0, xmmword ptr [rsi + 0x2f]
43d8e7: movdqu xmmword ptr [rdi + 0x2f], xmm0
43d8ec: lddqu xmm0, xmmword ptr [rsi + 0x1f]
43d8f1: movdqu xmmword ptr [rdi + 0x1f], xmm0
43d8f6: lddqu xmm0, xmmword ptr [rsi + 0xf]
43d8fb: lddqu xmm1, xmmword ptr [rsi]
43d8ff: movdqu xmmword ptr [rdi + 0xf], xmm0
43d904: movdqu xmmword ptr [rdi], xmm1
43d908: ret 
43d909: nop dword ptr [rax]
43d910: mov rdx, qword ptr [rsi + 7]
43d914: mov rcx, qword ptr [rsi]
43d917: mov qword ptr [rdi + 7], rdx
43d91b: mov qword ptr [rdi], rcx
43d91e: ret 
43d91f: nop 
43d920: lddqu xmm0, xmmword ptr [rsi + 0x7e]
43d925: movdqu xmmword ptr [rdi + 0x7e], xmm0
43d92a: lddqu xmm0, xmmword ptr [rsi + 0x6e]
43d92f: movdqu xmmword ptr [rdi + 0x6e], xmm0
43d934: lddqu xmm0, xmmword ptr [rsi + 0x5e]
43d939: movdqu xmmword ptr [rdi + 0x5e], xmm0
43d93e: lddqu xmm0, xmmword ptr [rsi + 0x4e]
43d943: movdqu xmmword ptr [rdi + 0x4e], xmm0
43d948: lddqu xmm0, xmmword ptr [rsi + 0x3e]
43d94d: movdqu xmmword ptr [rdi + 0x3e], xmm0
43d952: lddqu xmm0, xmmword ptr [rsi + 0x2e]
43d957: movdqu xmmword ptr [rdi + 0x2e], xmm0
43d95c: lddqu xmm0, xmmword ptr [rsi + 0x1e]
43d961: movdqu xmmword ptr [rdi + 0x1e], xmm0
43d966: lddqu xmm0, xmmword ptr [rsi + 0xe]
43d96b: lddqu xmm1, xmmword ptr [rsi]
43d96f: movdqu xmmword ptr [rdi + 0xe], xmm0
43d974: movdqu xmmword ptr [rdi], xmm1
43d978: ret 
43d979: nop dword ptr [rax]
43d980: mov rdx, qword ptr [rsi + 6]
43d984: mov rcx, qword ptr [rsi]
43d987: mov qword ptr [rdi + 6], rdx
43d98b: mov qword ptr [rdi], rcx
43d98e: ret 
43d98f: nop 
43d990: lddqu xmm0, xmmword ptr [rsi + 0x7d]
43d995: movdqu xmmword ptr [rdi + 0x7d], xmm0
43d99a: lddqu xmm0, xmmword ptr [rsi + 0x6d]
43d99f: movdqu xmmword ptr [rdi + 0x6d], xmm0
43d9a4: lddqu xmm0, xmmword ptr [rsi + 0x5d]
43d9a9: movdqu xmmword ptr [rdi + 0x5d], xmm0
43d9ae: lddqu xmm0, xmmword ptr [rsi + 0x4d]
43d9b3: movdqu xmmword ptr [rdi + 0x4d], xmm0
43d9b8: lddqu xmm0, xmmword ptr [rsi + 0x3d]
43d9bd: movdqu xmmword ptr [rdi + 0x3d], xmm0
43d9c2: lddqu xmm0, xmmword ptr [rsi + 0x2d]
43d9c7: movdqu xmmword ptr [rdi + 0x2d], xmm0
43d9cc: lddqu xmm0, xmmword ptr [rsi + 0x1d]
43d9d1: movdqu xmmword ptr [rdi + 0x1d], xmm0
43d9d6: lddqu xmm0, xmmword ptr [rsi + 0xd]
43d9db: lddqu xmm1, xmmword ptr [rsi]
43d9df: movdqu xmmword ptr [rdi + 0xd], xmm0
43d9e4: movdqu xmmword ptr [rdi], xmm1
43d9e8: ret 
43d9e9: nop dword ptr [rax]
43d9f0: mov rdx, qword ptr [rsi + 5]
43d9f4: mov rcx, qword ptr [rsi]
43d9f7: mov qword ptr [rdi + 5], rdx
43d9fb: mov qword ptr [rdi], rcx
43d9fe: ret 
43d9ff: nop 
43da00: lddqu xmm0, xmmword ptr [rsi + 0x7c]
43da05: movdqu xmmword ptr [rdi + 0x7c], xmm0
43da0a: lddqu xmm0, xmmword ptr [rsi + 0x6c]
43da0f: movdqu xmmword ptr [rdi + 0x6c], xmm0
43da14: lddqu xmm0, xmmword ptr [rsi + 0x5c]
43da19: movdqu xmmword ptr [rdi + 0x5c], xmm0
43da1e: lddqu xmm0, xmmword ptr [rsi + 0x4c]
43da23: movdqu xmmword ptr [rdi + 0x4c], xmm0
43da28: lddqu xmm0, xmmword ptr [rsi + 0x3c]
43da2d: movdqu xmmword ptr [rdi + 0x3c], xmm0
43da32: lddqu xmm0, xmmword ptr [rsi + 0x2c]
43da37: movdqu xmmword ptr [rdi + 0x2c], xmm0
43da3c: lddqu xmm0, xmmword ptr [rsi + 0x1c]
43da41: movdqu xmmword ptr [rdi + 0x1c], xmm0
43da46: lddqu xmm0, xmmword ptr [rsi + 0xc]
43da4b: lddqu xmm1, xmmword ptr [rsi]
43da4f: movdqu xmmword ptr [rdi + 0xc], xmm0
43da54: movdqu xmmword ptr [rdi], xmm1
43da58: ret 
43da59: nop dword ptr [rax]
43da60: mov rdx, qword ptr [rsi + 4]
43da64: mov rcx, qword ptr [rsi]
43da67: mov qword ptr [rdi + 4], rdx
43da6b: mov qword ptr [rdi], rcx
43da6e: ret 
43da6f: nop 
43da70: lddqu xmm0, xmmword ptr [rsi + 0x7b]
43da75: movdqu xmmword ptr [rdi + 0x7b], xmm0
43da7a: lddqu xmm0, xmmword ptr [rsi + 0x6b]
43da7f: movdqu xmmword ptr [rdi + 0x6b], xmm0
43da84: lddqu xmm0, xmmword ptr [rsi + 0x5b]
43da89: movdqu xmmword ptr [rdi + 0x5b], xmm0
43da8e: lddqu xmm0, xmmword ptr [rsi + 0x4b]
43da93: movdqu xmmword ptr [rdi + 0x4b], xmm0
43da98: lddqu xmm0, xmmword ptr [rsi + 0x3b]
43da9d: movdqu xmmword ptr [rdi + 0x3b], xmm0
43daa2: lddqu xmm0, xmmword ptr [rsi + 0x2b]
43daa7: movdqu xmmword ptr [rdi + 0x2b], xmm0
43daac: lddqu xmm0, xmmword ptr [rsi + 0x1b]
43dab1: movdqu xmmword ptr [rdi + 0x1b], xmm0
43dab6: lddqu xmm0, xmmword ptr [rsi + 0xb]
43dabb: lddqu xmm1, xmmword ptr [rsi]
43dabf: movdqu xmmword ptr [rdi + 0xb], xmm0
43dac4: movdqu xmmword ptr [rdi], xmm1
43dac8: ret 
43dac9: nop dword ptr [rax]
43dad0: mov rdx, qword ptr [rsi + 3]
43dad4: mov rcx, qword ptr [rsi]
43dad7: mov qword ptr [rdi + 3], rdx
43dadb: mov qword ptr [rdi], rcx
43dade: ret 
43dadf: nop 
43dae0: lddqu xmm0, xmmword ptr [rsi + 0x7a]
43dae5: movdqu xmmword ptr [rdi + 0x7a], xmm0
43daea: lddqu xmm0, xmmword ptr [rsi + 0x6a]
43daef: movdqu xmmword ptr [rdi + 0x6a], xmm0
43daf4: lddqu xmm0, xmmword ptr [rsi + 0x5a]
43daf9: movdqu xmmword ptr [rdi + 0x5a], xmm0
43dafe: lddqu xmm0, xmmword ptr [rsi + 0x4a]
43db03: movdqu xmmword ptr [rdi + 0x4a], xmm0
43db08: lddqu xmm0, xmmword ptr [rsi + 0x3a]
43db0d: movdqu xmmword ptr [rdi + 0x3a], xmm0
43db12: lddqu xmm0, xmmword ptr [rsi + 0x2a]
43db17: movdqu xmmword ptr [rdi + 0x2a], xmm0
43db1c: lddqu xmm0, xmmword ptr [rsi + 0x1a]
43db21: movdqu xmmword ptr [rdi + 0x1a], xmm0
43db26: lddqu xmm0, xmmword ptr [rsi + 0xa]
43db2b: lddqu xmm1, xmmword ptr [rsi]
43db2f: movdqu xmmword ptr [rdi + 0xa], xmm0
43db34: movdqu xmmword ptr [rdi], xmm1
43db38: ret 
43db39: nop dword ptr [rax]
43db40: mov rdx, qword ptr [rsi + 2]
43db44: mov rcx, qword ptr [rsi]
43db47: mov qword ptr [rdi + 2], rdx
43db4b: mov qword ptr [rdi], rcx
43db4e: ret 
43db4f: nop 
43db50: lddqu xmm0, xmmword ptr [rsi + 0x79]
43db55: movdqu xmmword ptr [rdi + 0x79], xmm0
43db5a: lddqu xmm0, xmmword ptr [rsi + 0x69]
43db5f: movdqu xmmword ptr [rdi + 0x69], xmm0
43db64: lddqu xmm0, xmmword ptr [rsi + 0x59]
43db69: movdqu xmmword ptr [rdi + 0x59], xmm0
43db6e: lddqu xmm0, xmmword ptr [rsi + 0x49]
43db73: movdqu xmmword ptr [rdi + 0x49], xmm0
43db78: lddqu xmm0, xmmword ptr [rsi + 0x39]
43db7d: movdqu xmmword ptr [rdi + 0x39], xmm0
43db82: lddqu xmm0, xmmword ptr [rsi + 0x29]
43db87: movdqu xmmword ptr [rdi + 0x29], xmm0
43db8c: lddqu xmm0, xmmword ptr [rsi + 0x19]
43db91: movdqu xmmword ptr [rdi + 0x19], xmm0
43db96: lddqu xmm0, xmmword ptr [rsi + 9]
43db9b: lddqu xmm1, xmmword ptr [rsi]
43db9f: movdqu xmmword ptr [rdi + 9], xmm0
43dba4: movdqu xmmword ptr [rdi], xmm1
43dba8: ret 
43dba9: nop dword ptr [rax]
43dbb0: mov rdx, qword ptr [rsi + 1]
43dbb4: mov rcx, qword ptr [rsi]
43dbb7: mov qword ptr [rdi + 1], rdx
43dbbb: mov qword ptr [rdi], rcx
43dbbe: ret 
43dbbf: nop 
43dbc0: lddqu xmm0, xmmword ptr [rsi + 0x78]
43dbc5: movdqu xmmword ptr [rdi + 0x78], xmm0
43dbca: lddqu xmm0, xmmword ptr [rsi + 0x68]
43dbcf: movdqu xmmword ptr [rdi + 0x68], xmm0
43dbd4: lddqu xmm0, xmmword ptr [rsi + 0x58]
43dbd9: movdqu xmmword ptr [rdi + 0x58], xmm0
43dbde: lddqu xmm0, xmmword ptr [rsi + 0x48]
43dbe3: movdqu xmmword ptr [rdi + 0x48], xmm0
43dbe8: lddqu xmm0, xmmword ptr [rsi + 0x38]
43dbed: movdqu xmmword ptr [rdi + 0x38], xmm0
43dbf2: lddqu xmm0, xmmword ptr [rsi + 0x28]
43dbf7: movdqu xmmword ptr [rdi + 0x28], xmm0
43dbfc: lddqu xmm0, xmmword ptr [rsi + 0x18]
43dc01: movdqu xmmword ptr [rdi + 0x18], xmm0
43dc06: lddqu xmm0, xmmword ptr [rsi + 8]
43dc0b: lddqu xmm1, xmmword ptr [rsi]
43dc0f: movdqu xmmword ptr [rdi + 8], xmm0
43dc14: movdqu xmmword ptr [rdi], xmm1
43dc18: ret 
43dc19: nop dword ptr [rax]
43dc20: mov rdx, qword ptr [rsi]
43dc23: mov qword ptr [rdi], rdx
43dc26: ret 
43dc27: nop word ptr [rax + rax]
43dc30: lddqu xmm0, xmmword ptr [rsi + 0x77]
43dc35: movdqu xmmword ptr [rdi + 0x77], xmm0
43dc3a: lddqu xmm0, xmmword ptr [rsi + 0x67]
43dc3f: movdqu xmmword ptr [rdi + 0x67], xmm0
43dc44: lddqu xmm0, xmmword ptr [rsi + 0x57]
43dc49: movdqu xmmword ptr [rdi + 0x57], xmm0
43dc4e: lddqu xmm0, xmmword ptr [rsi + 0x47]
43dc53: movdqu xmmword ptr [rdi + 0x47], xmm0
43dc58: lddqu xmm0, xmmword ptr [rsi + 0x37]
43dc5d: movdqu xmmword ptr [rdi + 0x37], xmm0
43dc62: lddqu xmm0, xmmword ptr [rsi + 0x27]
43dc67: movdqu xmmword ptr [rdi + 0x27], xmm0
43dc6c: lddqu xmm0, xmmword ptr [rsi + 0x17]
43dc71: movdqu xmmword ptr [rdi + 0x17], xmm0
43dc76: lddqu xmm0, xmmword ptr [rsi + 7]
43dc7b: lddqu xmm1, xmmword ptr [rsi]
43dc7f: movdqu xmmword ptr [rdi + 7], xmm0
43dc84: movdqu xmmword ptr [rdi], xmm1
43dc88: ret 
43dc89: nop dword ptr [rax]
43dc90: mov edx, dword ptr [rsi + 3]
43dc93: mov ecx, dword ptr [rsi]
43dc95: mov dword ptr [rdi + 3], edx
43dc98: mov dword ptr [rdi], ecx
43dc9a: ret 
43dc9b: nop dword ptr [rax + rax]
43dca0: lddqu xmm0, xmmword ptr [rsi + 0x76]
43dca5: movdqu xmmword ptr [rdi + 0x76], xmm0
43dcaa: lddqu xmm0, xmmword ptr [rsi + 0x66]
43dcaf: movdqu xmmword ptr [rdi + 0x66], xmm0
43dcb4: lddqu xmm0, xmmword ptr [rsi + 0x56]
43dcb9: movdqu xmmword ptr [rdi + 0x56], xmm0
43dcbe: lddqu xmm0, xmmword ptr [rsi + 0x46]
43dcc3: movdqu xmmword ptr [rdi + 0x46], xmm0
43dcc8: lddqu xmm0, xmmword ptr [rsi + 0x36]
43dccd: movdqu xmmword ptr [rdi + 0x36], xmm0
43dcd2: lddqu xmm0, xmmword ptr [rsi + 0x26]
43dcd7: movdqu xmmword ptr [rdi + 0x26], xmm0
43dcdc: lddqu xmm0, xmmword ptr [rsi + 0x16]
43dce1: movdqu xmmword ptr [rdi + 0x16], xmm0
43dce6: lddqu xmm0, xmmword ptr [rsi + 6]
43dceb: lddqu xmm1, xmmword ptr [rsi]
43dcef: movdqu xmmword ptr [rdi + 6], xmm0
43dcf4: movdqu xmmword ptr [rdi], xmm1
43dcf8: ret 
43dcf9: nop dword ptr [rax]
43dd00: mov edx, dword ptr [rsi + 2]
43dd03: mov ecx, dword ptr [rsi]
43dd05: mov dword ptr [rdi + 2], edx
43dd08: mov dword ptr [rdi], ecx
43dd0a: ret 
43dd0b: nop dword ptr [rax + rax]
43dd10: lddqu xmm0, xmmword ptr [rsi + 0x75]
43dd15: movdqu xmmword ptr [rdi + 0x75], xmm0
43dd1a: lddqu xmm0, xmmword ptr [rsi + 0x65]
43dd1f: movdqu xmmword ptr [rdi + 0x65], xmm0
43dd24: lddqu xmm0, xmmword ptr [rsi + 0x55]
43dd29: movdqu xmmword ptr [rdi + 0x55], xmm0
43dd2e: lddqu xmm0, xmmword ptr [rsi + 0x45]
43dd33: movdqu xmmword ptr [rdi + 0x45], xmm0
43dd38: lddqu xmm0, xmmword ptr [rsi + 0x35]
43dd3d: movdqu xmmword ptr [rdi + 0x35], xmm0
43dd42: lddqu xmm0, xmmword ptr [rsi + 0x25]
43dd47: movdqu xmmword ptr [rdi + 0x25], xmm0
43dd4c: lddqu xmm0, xmmword ptr [rsi + 0x15]
43dd51: movdqu xmmword ptr [rdi + 0x15], xmm0
43dd56: lddqu xmm0, xmmword ptr [rsi + 5]
43dd5b: lddqu xmm1, xmmword ptr [rsi]
43dd5f: movdqu xmmword ptr [rdi + 5], xmm0
43dd64: movdqu xmmword ptr [rdi], xmm1
43dd68: ret 
43dd69: nop dword ptr [rax]
43dd70: mov edx, dword ptr [rsi + 1]
43dd73: mov ecx, dword ptr [rsi]
43dd75: mov dword ptr [rdi + 1], edx
43dd78: mov dword ptr [rdi], ecx
43dd7a: ret 
43dd7b: nop dword ptr [rax + rax]
43dd80: lddqu xmm0, xmmword ptr [rsi + 0x74]
43dd85: movdqu xmmword ptr [rdi + 0x74], xmm0
43dd8a: lddqu xmm0, xmmword ptr [rsi + 0x64]
43dd8f: movdqu xmmword ptr [rdi + 0x64], xmm0
43dd94: lddqu xmm0, xmmword ptr [rsi + 0x54]
43dd99: movdqu xmmword ptr [rdi + 0x54], xmm0
43dd9e: lddqu xmm0, xmmword ptr [rsi + 0x44]
43dda3: movdqu xmmword ptr [rdi + 0x44], xmm0
43dda8: lddqu xmm0, xmmword ptr [rsi + 0x34]
43ddad: movdqu xmmword ptr [rdi + 0x34], xmm0
43ddb2: lddqu xmm0, xmmword ptr [rsi + 0x24]
43ddb7: movdqu xmmword ptr [rdi + 0x24], xmm0
43ddbc: lddqu xmm0, xmmword ptr [rsi + 0x14]
43ddc1: movdqu xmmword ptr [rdi + 0x14], xmm0
43ddc6: lddqu xmm0, xmmword ptr [rsi + 4]
43ddcb: lddqu xmm1, xmmword ptr [rsi]
43ddcf: movdqu xmmword ptr [rdi + 4], xmm0
43ddd4: movdqu xmmword ptr [rdi], xmm1
43ddd8: ret 
43ddd9: nop dword ptr [rax]
43dde0: mov edx, dword ptr [rsi]
43dde2: mov dword ptr [rdi], edx
43dde4: ret 
43dde5: nop word ptr cs:[rax + rax]
43ddf0: lddqu xmm0, xmmword ptr [rsi + 0x73]
43ddf5: movdqu xmmword ptr [rdi + 0x73], xmm0
43ddfa: lddqu xmm0, xmmword ptr [rsi + 0x63]
43ddff: movdqu xmmword ptr [rdi + 0x63], xmm0
43de04: lddqu xmm0, xmmword ptr [rsi + 0x53]
43de09: movdqu xmmword ptr [rdi + 0x53], xmm0
43de0e: lddqu xmm0, xmmword ptr [rsi + 0x43]
43de13: movdqu xmmword ptr [rdi + 0x43], xmm0
43de18: lddqu xmm0, xmmword ptr [rsi + 0x33]
43de1d: movdqu xmmword ptr [rdi + 0x33], xmm0
43de22: lddqu xmm0, xmmword ptr [rsi + 0x23]
43de27: movdqu xmmword ptr [rdi + 0x23], xmm0
43de2c: lddqu xmm0, xmmword ptr [rsi + 0x13]
43de31: movdqu xmmword ptr [rdi + 0x13], xmm0
43de36: lddqu xmm0, xmmword ptr [rsi + 3]
43de3b: lddqu xmm1, xmmword ptr [rsi]
43de3f: movdqu xmmword ptr [rdi + 3], xmm0
43de44: movdqu xmmword ptr [rdi], xmm1
43de48: ret 
43de49: nop dword ptr [rax]
43de50: mov dx, word ptr [rsi + 1]
43de54: mov cx, word ptr [rsi]
43de57: mov word ptr [rdi + 1], dx
43de5b: mov word ptr [rdi], cx
43de5e: ret 
43de5f: nop 
43de60: lddqu xmm0, xmmword ptr [rsi + 0x72]
43de65: movdqu xmmword ptr [rdi + 0x72], xmm0
43de6a: lddqu xmm0, xmmword ptr [rsi + 0x62]
43de6f: movdqu xmmword ptr [rdi + 0x62], xmm0
43de74: lddqu xmm0, xmmword ptr [rsi + 0x52]
43de79: movdqu xmmword ptr [rdi + 0x52], xmm0
43de7e: lddqu xmm0, xmmword ptr [rsi + 0x42]
43de83: movdqu xmmword ptr [rdi + 0x42], xmm0
43de88: lddqu xmm0, xmmword ptr [rsi + 0x32]
43de8d: movdqu xmmword ptr [rdi + 0x32], xmm0
43de92: lddqu xmm0, xmmword ptr [rsi + 0x22]
43de97: movdqu xmmword ptr [rdi + 0x22], xmm0
43de9c: lddqu xmm0, xmmword ptr [rsi + 0x12]
43dea1: movdqu xmmword ptr [rdi + 0x12], xmm0
43dea6: lddqu xmm0, xmmword ptr [rsi + 2]
43deab: lddqu xmm1, xmmword ptr [rsi]
43deaf: movdqu xmmword ptr [rdi + 2], xmm0
43deb4: movdqu xmmword ptr [rdi], xmm1
43deb8: ret 
43deb9: nop dword ptr [rax]
43dec0: movzx edx, word ptr [rsi]
43dec3: mov word ptr [rdi], dx
43dec6: ret 
43dec7: nop word ptr [rax + rax]
43ded0: lddqu xmm0, xmmword ptr [rsi + 0x71]
43ded5: movdqu xmmword ptr [rdi + 0x71], xmm0
43deda: lddqu xmm0, xmmword ptr [rsi + 0x61]
43dedf: movdqu xmmword ptr [rdi + 0x61], xmm0
43dee4: lddqu xmm0, xmmword ptr [rsi + 0x51]
43dee9: movdqu xmmword ptr [rdi + 0x51], xmm0
43deee: lddqu xmm0, xmmword ptr [rsi + 0x41]
43def3: movdqu xmmword ptr [rdi + 0x41], xmm0
43def8: lddqu xmm0, xmmword ptr [rsi + 0x31]
43defd: movdqu xmmword ptr [rdi + 0x31], xmm0
43df02: lddqu xmm0, xmmword ptr [rsi + 0x21]
43df07: movdqu xmmword ptr [rdi + 0x21], xmm0
43df0c: lddqu xmm0, xmmword ptr [rsi + 0x11]
43df11: movdqu xmmword ptr [rdi + 0x11], xmm0
43df16: lddqu xmm0, xmmword ptr [rsi + 1]
43df1b: lddqu xmm1, xmmword ptr [rsi]
43df1f: movdqu xmmword ptr [rdi + 1], xmm0
43df24: movdqu xmmword ptr [rdi], xmm1
43df28: ret 
43df29: nop dword ptr [rax]
43df30: movzx edx, byte ptr [rsi]
43df33: mov byte ptr [rdi], dl
43df35: ret 
43df36: nop word ptr cs:[rax + rax]
43df40: endbr64 
43df44: cmp rcx, rdx
43df47: jb 0x454570
43df4d: nop dword ptr [rax]
43df50: endbr64 
43df54: mov rax, rdi
43df57: add rax, rdx
43df5a: jmp 0x43df77
43df5c: nop dword ptr [rax]
43df60: endbr64 
43df64: cmp rcx, rdx
43df67: jb 0x454570
43df6d: nop dword ptr [rax]
43df70: endbr64 
43df74: mov rax, rdi
43df77: lea rcx, [rsi + rdx]
43df7b: lea r9, [rdi + rdx]
43df7f: cmp rdx, 0x200
43df86: ja 0x43e0e9
43df8c: cmp rdx, 0x10
43df90: jbe 0x43e0a5
43df96: cmp rdx, 0x100
43df9d: jb 0x43e00e
43dfa1: jl 0x43dfeb
43dfa3: adc byte ptr [rsi], al
43dfa7: jl 0x43dff1
43dfa9: adc byte ptr [rsi + 1], cl
43dfae: jl 0x43dff8
43dfb0: adc byte ptr [rsi + 2], dl
43dfb5: jl 0x43dfff
43dfb7: adc byte ptr [rsi + 3], bl
43dfbc: jl 0x43e006
43dfbe: adc byte ptr [rcx - 4], ah
43dfc3: jl 0x43e00d
43dfc5: adc byte ptr [rcx - 3], ch
43dfca: jl 0x43e014
43dfcc: adc byte ptr [rcx - 2], dh
43dfd1: jl 0x43e01b
43dfd3: adc byte ptr [rcx - 1], bh
43dfd8: jl 0x43e022
43dfda: adc dword ptr [rdi], eax
43dfde: jl 0x43e028
43dfe0: adc dword ptr [rdi + 1], ecx
43dfe5: jl 0x43e02f
43dfe7: adc dword ptr [rdi + 2], edx
43dfec: jl 0x43e036
43dfee: adc dword ptr [rdi + 3], ebx
43dff2: sar dword ptr [rax + rcx*2 + 0x11], 1
43dff7: cld 
43dff9: sar dword ptr [rax + rcx*2 + 0x11], 1
43dffe: std 
43e000: sar dword ptr [rax + rcx*2 + 0x11], 1
43e004: jno 0x43e004
43e007: sar dword ptr [rax + rcx*2 + 0x11], 1
43e00d: ret 
43e00e: cmp dl, 0x80
43e011: jb 0x43e04a
43e015: jl 0x43e05f
43e017: adc byte ptr [rsi], al
43e01b: jl 0x43e065
43e01d: adc byte ptr [rsi + 1], cl
43e022: jl 0x43e06c
43e024: adc byte ptr [rcx - 2], dl
43e029: jl 0x43e073
43e02b: adc byte ptr [rcx - 1], bl
43e030: jl 0x43e07a
43e032: adc dword ptr [rdi], eax
43e036: jl 0x43e080
43e038: adc dword ptr [rdi + 1], ecx
43e03c: sar dword ptr [rax + rcx*2 + 0x11], 1
43e040: push rcx
43e043: sar dword ptr [rax + rcx*2 + 0x11], 1
43e047: pop rcx
43e048: inc ebx
43e04a: cmp dl, 0x40
43e04d: jb 0x43e078
43e04f: vmovdqu ymm0, ymmword ptr [rsi]
43e053: vmovdqu ymm1, ymmword ptr [rsi + 0x20]
43e058: vmovdqu ymm2, ymmword ptr [rcx - 0x40]
43e05d: vmovdqu ymm3, ymmword ptr [rcx - 0x20]
43e062: vmovdqu ymmword ptr [rdi], ymm0
43e066: vmovdqu ymmword ptr [rdi + 0x20], ymm1
43e06b: vmovdqu ymmword ptr [r9 - 0x40], ymm2
43e075: pop rcx
43e076: loopne 0x43e03b
43e07a: and byte ptr [rdx + 0x14], dh
43e07d: vmovdqu ymm0, ymmword ptr [rsi]
43e081: vmovdqu ymm1, ymmword ptr [rcx - 0x20]
43e086: vmovdqu ymmword ptr [rdi], ymm0
43e08a: vmovdqu ymmword ptr [r9 - 0x20], ymm1
43e090: ret 
43e091: vmovdqu xmm0, xmmword ptr [rsi]
43e095: vmovdqu xmm1, xmmword ptr [rcx - 0x10]
43e09a: vmovdqu xmmword ptr [rdi], xmm0
43e09e: vmovdqu xmmword ptr [r9 - 0x10], xmm1
43e0a4: ret 
43e0a5: cmp dl, 8
43e0a8: jb 0x43e0b9
43e0aa: mov rsi, qword ptr [rsi]
43e0ad: mov rcx, qword ptr [rcx - 8]
43e0b1: mov qword ptr [rdi], rsi
43e0b4: mov qword ptr [r9 - 8], rcx
43e0b8: ret 
43e0b9: cmp dl, 4
43e0bc: jb 0x43e0ca
43e0be: mov esi, dword ptr [rsi]
43e0c0: mov ecx, dword ptr [rcx - 4]
43e0c3: mov dword ptr [rdi], esi
43e0c5: mov dword ptr [r9 - 4], ecx
43e0c9: ret 
43e0ca: cmp dl, 2
43e0cd: jb 0x43e0df
43e0cf: mov si, word ptr [rsi]
43e0d2: mov cx, word ptr [rcx - 2]
43e0d6: mov word ptr [rdi], si
43e0d9: mov word ptr [r9 - 2], cx
43e0de: ret 
43e0df: cmp dl, 1
43e0e2: jb 0x43e0e8
43e0e4: mov cl, byte ptr [rsi]
43e0e6: mov byte ptr [rdi], cl
43e0e8: ret 
43e0e9: mov r8, qword ptr [rip + 0x82f68]
43e0f0: cmp rdx, r8
43e0f4: sbb dword ptr [rax], 4
43e0f7: add byte ptr [rax], al
43e0f9: cmp rdx, 0x400
43e100: ja 0x43e248
43e106: prefetcht1 byte ptr [rsi]
43e109: prefetcht1 byte ptr [rsi + 0x40]
43e10d: prefetcht1 byte ptr [rsi + 0x80]
43e114: prefetcht1 byte ptr [rsi + 0xc0]
43e11b: prefetcht1 byte ptr [rsi + 0x100]
43e122: prefetcht1 byte ptr [rsi + 0x140]
43e129: prefetcht1 byte ptr [rsi + 0x180]
43e130: prefetcht1 byte ptr [rsi + 0x1c0]
43e137: prefetcht1 byte ptr [rcx - 0x200]
43e13e: prefetcht1 byte ptr [rcx - 0x1c0]
43e145: prefetcht1 byte ptr [rcx - 0x180]
43e14c: prefetcht1 byte ptr [rcx - 0x140]
43e153: prefetcht1 byte ptr [rcx - 0x100]
43e15a: prefetcht1 byte ptr [rcx - 0xc0]
43e161: prefetcht1 byte ptr [rcx - 0x80]
43e165: prefetcht1 byte ptr [rcx - 0x40]
43e16b: jl 0x43e1b5
43e16d: adc byte ptr [rsi], al
43e171: jl 0x43e1bb
43e173: adc byte ptr [rsi + 1], cl
43e178: jl 0x43e1c2
43e17a: adc byte ptr [rsi + 2], dl
43e17f: jl 0x43e1c9
43e181: adc byte ptr [rsi + 3], bl
43e186: jl 0x43e1d0
43e188: adc byte ptr [rsi + 4], ah
43e18d: jl 0x43e1d7
43e18f: adc byte ptr [rsi + 5], ch
43e194: jl 0x43e1de
43e196: adc byte ptr [rsi + 6], dh
43e19b: jl 0x43e1e5
43e19d: adc byte ptr [rsi + 7], bh
43e1a1: jno 0x43e21f
43e1a3: adc byte ptr [rcx - 8], al
43e1a8: jno 0x43e226
43e1aa: adc byte ptr [rcx - 7], cl
43e1af: jno 0x43e22d
43e1b1: adc byte ptr [rcx - 6], dl
43e1b6: jno 0x43e234
43e1bb: sti 
43e1bd: jno 0x43e23b
43e1c2: cld 
43e1c4: jno 0x43e242
43e1c9: std 
43e1cb: jno 0x43e249
43e1d2: jno 0x43e250
43e1d7: jmp qword ptr [rdx - 0xf]
43e1da: jl 0x43e224
43e1dc: adc dword ptr [rdi], eax
43e1e0: jl 0x43e22a
43e1e2: adc dword ptr [rdi + 1], ecx
43e1e7: jl 0x43e231
43e1e9: adc dword ptr [rdi + 2], edx
43e1ee: jl 0x43e238
43e1f0: adc dword ptr [rdi + 3], ebx
43e1f5: jl 0x43e23f
43e1f7: adc dword ptr [rdi + 4], esp
43e1fc: jl 0x43e246
43e1fe: adc dword ptr [rdi + 5], ebp
43e203: jl 0x43e24d
43e205: adc dword ptr [rdi + 6], esi
43e20a: jl 0x43e254
43e20c: adc dword ptr [rdi + 7], edi
43e210: push rcx
43e211: jl 0x43e25b
43e213: adc dword ptr [rcx - 8], eax
43e217: push rcx
43e218: jl 0x43e262
43e21a: adc dword ptr [rcx - 7], ecx
43e21e: push rcx
43e21f: jl 0x43e269
43e221: adc dword ptr [rcx - 6], edx
43e225: push rcx
43e226: jl 0x43e270
43e22a: sti 
43e22c: push rcx
43e22d: jl 0x43e277
43e231: cld 
43e233: push rcx
43e234: jl 0x43e27e
43e238: std 
43e23a: push rcx
43e23b: jl 0x43e285
43e23d: adc dword ptr [rcx - 2], esi
43e241: push rcx
43e242: jl 0x43e28c
43e246: inc ebx
43e249: cmp edi, esi
43e24d: pop rsi
43e24e: add dword ptr [rax], eax
43e254: add byte ptr [rdx], al
43e256: add byte ptr [rax], al
43e259: jno 0x43e2d7
43e25b: adc byte ptr [rcx - 8], al
43e260: jno 0x43e2de
43e262: adc byte ptr [rcx - 7], cl
43e267: jno 0x43e2e5
43e269: adc byte ptr [rcx - 6], dl
43e26e: jno 0x43e2ec
43e270: adc byte ptr [rcx - 5], bl
43e275: jno 0x43e2f3
43e277: adc byte ptr [rcx - 4], spl
43e27c: jno 0x43e2fa
43e27e: adc byte ptr [rcx - 3], bpl
43e283: jno 0x43e301
43e285: adc byte ptr [rcx - 2], sil
43e28a: jno 0x43e308
43e28c: adc byte ptr [rcx - 1], dil
43e290: prefetcht1 byte ptr [rsi]
43e293: prefetcht1 byte ptr [rsi + 0x40]
43e297: prefetcht1 byte ptr [rsi + 0x80]
43e29e: prefetcht1 byte ptr [rsi + 0xc0]
43e2a5: prefetcht1 byte ptr [rsi + 0x100]
43e2ac: prefetcht1 byte ptr [rsi + 0x140]
43e2b3: prefetcht1 byte ptr [rsi + 0x180]
43e2ba: prefetcht1 byte ptr [rsi + 0x1c0]
43e2c3: jl 0x43e30d
43e2c5: adc byte ptr [rsi], al
43e2c9: jl 0x43e313
43e2cb: adc byte ptr [rsi + 1], cl
43e2d0: jl 0x43e31a
43e2d2: adc byte ptr [rsi + 2], dl
43e2d7: jl 0x43e321
43e2d9: adc byte ptr [rsi + 3], bl
43e2de: jl 0x43e328
43e2e0: adc byte ptr [rsi + 4], ah
43e2e5: jl 0x43e32f
43e2e7: adc byte ptr [rsi + 5], ch
43e2ec: jl 0x43e336
43e2ee: adc byte ptr [rsi + 6], dh
43e2f3: jl 0x43e33d
43e2f5: adc byte ptr [rsi + 7], bh
43e2fa: mov byte ptr [rax], 2
43e2fd: add byte ptr [rax], al
43e2ff: prefetcht1 byte ptr [rsi]
43e302: prefetcht1 byte ptr [rsi + 0x40]
43e308: xchg esi, eax
43e309: add byte ptr [rax], 0
43e313: add byte ptr [rdi], cl
43e31a: add byte ptr [rdi], cl
43e321: add byte ptr [rdi], cl
43e328: add byte ptr [rdi], cl
43e32a: sbb byte ptr [rsi + 0x1c0], dl
43e332: jl 0x43e37c
43e334: adc dword ptr [rdi], eax
43e338: jl 0x43e382
43e33a: adc dword ptr [rdi + 1], ecx
43e33f: jl 0x43e389
43e341: adc dword ptr [rdi + 2], edx
43e346: jl 0x43e390
43e348: adc dword ptr [rdi + 3], ebx
43e34d: jl 0x43e397
43e34f: adc dword ptr [rdi + 4], esp
43e354: jl 0x43e39e
43e356: adc dword ptr [rdi + 5], ebp
43e35b: jl 0x43e3a5
43e35d: adc dword ptr [rdi + 6], esi
43e362: jl 0x43e3ac
43e364: adc dword ptr [rdi + 7], edi
43e367: add rdi, 0x200
43e36e: cmp rdi, r9
43e371: jb 0x43e2c1
43e378: push rcx
43e379: jl 0x43e3c3
43e37c: add dword ptr [rdx + 0x51], esp
43e37f: jl 0x43e3c9
43e381: adc dword ptr [rcx + 1], ecx
43e385: push rcx
43e386: jl 0x43e3d0
43e389: push rcx
43e38a: add ah, byte ptr [rdx + 0x51]
43e38d: jl 0x43e3d7
43e390: pop rcx
43e393: push rcx
43e394: jl 0x43e3de
43e398: add al, 0x62
43e39a: push rcx
43e39b: jl 0x43e3e5
43e39e: imul eax, dword ptr [rip + 0x487c5162], 0x62067111
43e3a8: push rcx
43e3a9: jl 0x43e3f3
43e3ab: adc dword ptr [rcx + 7], edi
43e3ae: ret 
43e3af: add rdi, 0x200
43e3b7: jno 0x43e435
43e3b9: adc byte ptr [rsi + 7], al
43e3be: jno 0x43e43c
43e3c5: jno 0x43e443
43e3c9: push rsi
43e3ca: add eax, 0x487c7162
43e3cf: adc byte ptr [rsi + 4], bl
43e3d3: jno 0x43e451
43e3d7: add sp, word ptr [rdx + 0x71]
43e3db: jl 0x43e425
43e3dd: adc byte ptr [rsi + 2], ch
43e3e1: jno 0x43e45f
43e3e5: jbe 0x43e3e8
43e3e8: jno 0x43e466
43e3ea: adc byte ptr [rsi], dil
43e3ed: prefetcht1 byte ptr [rcx - 0x40]
43e3f3: push rcx
43e3f4: or byte ptr [rdi], 0x18
43e3f7: xchg ecx, eax
43e3fb: dec dword ptr [rdi]
43e3fd: sbb byte ptr [rcx - 0x100], dl
43e403: prefetcht1 byte ptr [rcx - 0x140]
43e40a: prefetcht1 byte ptr [rcx - 0x180]
43e411: prefetcht1 byte ptr [rcx - 0x1c0]
43e418: prefetcht1 byte ptr [rcx - 0x200]
43e421: jl 0x43e46b
43e425: jmp qword ptr [rdx - 0xf]
43e428: jl 0x43e472
43e42a: adc byte ptr [rcx - 2], cl
43e42f: jl 0x43e479
43e431: adc byte ptr [rcx - 3], dl
43e436: jl 0x43e480
43e438: adc byte ptr [rcx - 4], bl
43e43d: jl 0x43e487
43e43f: adc byte ptr [rcx - 5], ah
43e444: jl 0x43e48e
43e446: adc byte ptr [rcx - 6], ch
43e44b: jl 0x43e495
43e44d: adc byte ptr [rcx - 7], dh
43e452: jl 0x43e49c
43e454: adc byte ptr [rcx - 8], bh
43e458: sub ecx, 0x200
43e45f: sbb byte ptr [rcx - 0x40], dl
43e462: prefetcht1 byte ptr [rcx - 0x80]
43e466: prefetcht1 byte ptr [rcx - 0xc0]
43e46d: prefetcht1 byte ptr [rcx - 0x100]
43e474: prefetcht1 byte ptr [rcx - 0x140]
43e47b: prefetcht1 byte ptr [rcx - 0x180]
43e482: prefetcht1 byte ptr [rcx - 0x1c0]
43e489: prefetcht1 byte ptr [rcx - 0x200]
43e491: sar dword ptr [rax + rcx*2 + 0x11], 1
43e495: jmp qword ptr [r10 - 0x2f]
43e499: jl 0x43e4e3
43e49f: sar dword ptr [rax + rcx*2 + 0x11], 1
43e4a3: push rcx
43e4a4: std 
43e4a6: sar dword ptr [rax + rcx*2 + 0x11], 1
43e4aa: pop rcx
43e4ab: cld 
43e4ad: sar dword ptr [rax + rcx*2 + 0x11], 1
43e4b2: sti 
43e4b4: sar dword ptr [rax + rcx*2 + 0x11], 1
43e4b8: imul edi, edx, 0x487cd162
43e4c0: stc 
43e4c2: sar dword ptr [rax + rcx*2 + 0x11], 1
43e4c6: jns 0x43e4c0
43e4c8: sub r9, 0x200
43e4cf: cmp r9, rdi
43e4d2: ja 0x43e41f
43e4d9: jno 0x43e557
43e4db: adc qword ptr [rdi - 1], rax
43e4e0: jno 0x43e55e
43e4e3: adc dword ptr [rdi - 2], ecx
43e4e7: jno 0x43e565
43e4e9: adc qword ptr [rdi - 3], rdx
43e4ee: jno 0x43e56c
43e4f0: adc qword ptr [rdi - 4], rbx
43e4f5: jno 0x43e573
43e4f7: adc qword ptr [rdi - 5], rsp
43e4fc: jno 0x43e57a
43e4fe: adc qword ptr [rdi - 6], rbp
43e503: jno 0x43e581
43e505: adc qword ptr [rdi - 7], rsi
43e50a: jno 0x43e588
43e50c: adc qword ptr [rdi - 8], rdi
43e510: ret 
43e511: cmp rdi, rsi
43e514: ja 0x43e5e6
43e51c: jl 0x43e566
43e51e: adc byte ptr [rsi], ah
43e522: jl 0x43e56c
43e524: adc byte ptr [rsi + 1], ch
43e527: mov r11, rdi
43e52a: mov r8, rdi
43e52d: and rdi, 0xffffffffffffff80
43e531: add rdi, 0x80
43e538: sub r8, rdi
43e53b: sub rsi, r8
43e53e: add rdx, r8
43e541: prefetcht1 byte ptr [rsi + 0x200]
43e548: prefetcht1 byte ptr [rsi + 0x240]
43e54f: prefetcht1 byte ptr [rsi + 0x280]
43e557: sbb byte ptr [rsi + 0x2c0], dl
43e55e: sbb byte ptr [rsi + 0x300], dl
43e566: xchg esi, eax
43e567: add eax, dword ptr [rax]
43e56a: add byte ptr [rdi], cl
43e56c: sbb byte ptr [rsi + 0x380], dl
43e573: sbb byte ptr [rsi + 0x3c0], dl
43e57b: dec byte ptr [rax + 0x6f]
43e581: dec byte ptr [rax + 0x6f]
43e584: add qword ptr [rdx - 0xf], r12
43e588: dec byte ptr [rax + 0x6f]
43e58b: push rsi
43e58c: add ah, byte ptr [rdx - 0xf]
43e58f: dec byte ptr [rax + 0x6f]
43e592: pop rsi
43e593: add esp, dword ptr [rdx - 0xf]
43e596: jge 0x43e5e0
43e598: out 7, eax
43e59c: jge 0x43e5e6
43e59e: out 0x4f, eax
43e5a0: add dword ptr [rdx - 0xf], esp
43e5a3: jge 0x43e5ed
43e5a5: out 0x57, eax
43e5a7: add ah, byte ptr [rdx - 0xf]
43e5aa: jge 0x43e5f4
43e5ac: out 0x5f, eax
43e5ae: add ecx, dword ptr [rax - 0x7f]
43e5b2: add byte ptr [rcx], al
43e5b4: add byte ptr [rax], al
43e5b6: add rsi, 0x100
43e5bd: add rdi, 0x100
43e5c4: cmp rdx, 0x100
43e5cb: ja 0x43e541
43e5d1: sfence 
43e5d5: sar dword ptr [rax + rcx*2 + 0x11], 1
43e5d9: and esp, dword ptr [rdx - 0x2f]
43e5dc: jl 0x43e626
43e5e0: add ecx, ebp
43e5e2: cmpsb byte ptr [rsi], byte ptr [rdi]
43e5e3: stc 
43e5e8: jl 0x43e632
43e5ea: adc byte ptr [rcx - 2], ah
43e5ef: jl 0x43e639
43e5f1: adc byte ptr [rcx - 1], ch
43e5f4: mov r8, r9
43e5f7: and r9, 0xffffffffffffff80
43e5fb: sub r8, r9
43e5fe: sub rcx, r8
43e601: sub rdx, r8
43e604: add r8, r9
43e607: prefetcht1 byte ptr [rcx - 0x400]
43e607: prefetcht1 byte ptr [rcx - 0x400]
43e60e: prefetcht1 byte ptr [rcx - 0x3c0]
43e60e: prefetcht1 byte ptr [rcx - 0x3c0]
43e615: prefetcht1 byte ptr [rcx - 0x380]
43e615: prefetcht1 byte ptr [rcx - 0x380]
43e61c: prefetcht1 byte ptr [rcx - 0x340]
43e61c: prefetcht1 byte ptr [rcx - 0x340]
43e623: prefetcht1 byte ptr [rcx - 0x300]
43e626: add ch, bh
43e62a: prefetcht1 byte ptr [rcx - 0x2c0]
43e632: sbb byte ptr [rcx - 0x280], dl
43e639: sbb byte ptr [rcx - 0x240], dl
43e641: dec byte ptr [rax + 0x6f]
43e644: cld 
43e648: dec byte ptr [rax + 0x6f]
43e64b: std 
43e64f: dec byte ptr [rax + 0x6f]
43e652: push rcx
43e656: dec byte ptr [rax + 0x6f]
43e659: pop rcx
43e65a: jmp qword ptr [rdx - 0x2f]
43e65d: jge 0x43e6a7
43e65f: out 0x41, eax
43e661: cld 
43e663: sar dword ptr [rbp + 0x48], 1
43e666: out 0x49, eax
43e668: std 
43e66a: sar dword ptr [rbp + 0x48], 1
43e66d: out 0x51, eax
43e671: sar dword ptr [rbp + 0x48], 1
43e674: out 0x59, eax
43e676: dec dword ptr [rax - 0x7f]
43e67a: add byte ptr [rcx], al
43e67c: add byte ptr [rax], al
43e67e: sub rcx, 0x100
43e685: sub r9, 0x100
43e68c: cmp rdx, 0x100
43e693: ja 0x43e607
43e699: sfence 
43e69d: sar dword ptr [rax + rcx*2 + 0x11], 1
43e6a7: adc dword ptr [rax - 1], ebp
43e6aa: jmp 0x43df8c
43e6af: nop 
43e6b0: endbr64 
43e6b4: mov rax, 0xffffffffffffffb0
43e6bb: mov rdx, qword ptr fs:[rax]
43e6bf: nop dword ptr [rax + rax]
43e6c4: nop word ptr cs:[rax + rax]
43e6cf: nop 
43e6d0: endbr64 
43e6d4: mov rax, qword ptr [rdx]
43e6d7: test dword ptr [rax + 0x278], 1
43e6e1: jne 0x44efc0
43e6e7: mov ecx, esi
43e6e9: mov eax, edi
43e6eb: and rcx, 0x3f
43e6ef: and rax, 0x3f
43e6f3: movdqa xmm5, xmmword ptr [rip + 0x59bc5]
43e6fb: movdqa xmm6, xmmword ptr [rip + 0x59bcd]
43e703: movdqa xmm7, xmmword ptr [rip + 0x59bd5]
43e70b: cmp ecx, 0x30
43e70e: ja 0x43e7a0
43e714: cmp eax, 0x30
43e717: ja 0x43e7a0
43e71d: movlpd xmm1, qword ptr [rdi]
43e721: movlpd xmm2, qword ptr [rsi]
43e725: movhpd xmm1, qword ptr [rdi + 8]
43e72a: movhpd xmm2, qword ptr [rsi + 8]
43e72f: movdqa xmm8, xmm1
43e734: movdqa xmm9, xmm6
43e739: movdqa xmm10, xmm2
43e73e: movdqa xmm11, xmm6
43e743: pcmpgtb xmm8, xmm5
43e748: pcmpgtb xmm9, xmm1
43e74d: pcmpgtb xmm10, xmm5
43e752: pcmpgtb xmm11, xmm2
43e757: pand xmm8, xmm9
43e75c: pand xmm10, xmm11
43e761: pand xmm8, xmm7
43e766: pand xmm10, xmm7
43e76b: por xmm1, xmm8
43e770: por xmm2, xmm10
43e775: pxor xmm0, xmm0
43e779: pcmpeqb xmm0, xmm1
43e77d: pcmpeqb xmm1, xmm2
43e781: psubb xmm1, xmm0
43e785: pmovmskb edx, xmm1
43e789: sub edx, 0xffff
43e78f: jne 0x4408c0
43e795: add rsi, 0x10
43e799: add rdi, 0x10
43e79d: nop dword ptr [rax]
43e7a0: and rsi, 0xfffffffffffffff0
43e7a4: and rdi, 0xfffffffffffffff0
43e7a8: mov edx, 0xffff
43e7ad: xor r8d, r8d
43e7b0: and ecx, 0xf
43e7b3: and eax, 0xf
43e7b6: cmp ecx, eax
43e7b8: je 0x43e7e0
43e7ba: ja 0x43e7c3
43e7bc: mov r8d, edx
43e7bf: xchg ecx, eax
43e7c0: xchg rdi, rsi
43e7c3: lea r9, [rax + 0xf]
43e7c7: sub r9, rcx
43e7ca: lea r10, [rip + 0x59b1f]
43e7d1: movsxd r9, dword ptr [r10 + r9*4]
43e7d5: lea r10, [r10 + r9]
43e7d9: notrack jmp r10
43e7dd: nop dword ptr [rax]
43e7e0: movdqa xmm1, xmmword ptr [rsi]
43e7e4: pxor xmm0, xmm0
43e7e8: pcmpeqb xmm0, xmm1
43e7ec: movdqa xmm2, xmmword ptr [rdi]
43e7f0: movdqa xmm8, xmm1
43e7f5: movdqa xmm9, xmm6
43e7fa: movdqa xmm10, xmm2
43e7ff: movdqa xmm11, xmm6
43e804: pcmpgtb xmm8, xmm5
43e809: pcmpgtb xmm9, xmm1
43e80e: pcmpgtb xmm10, xmm5
43e813: pcmpgtb xmm11, xmm2
43e818: pand xmm8, xmm9
43e81d: pand xmm10, xmm11
43e822: pand xmm8, xmm7
43e827: pand xmm10, xmm7
43e82c: por xmm1, xmm8
43e831: por xmm2, xmm10
43e836: pcmpeqb xmm1, xmm2
43e83a: psubb xmm1, xmm0
43e83e: pmovmskb r9d, xmm1
43e843: shr edx, cl
43e845: shr r9d, cl
43e848: sub edx, r9d
43e84b: jne 0x4408a5
43e851: mov rcx, 0x10
43e858: mov r9, 0x10
43e85f: pxor xmm0, xmm0
43e863: nop word ptr cs:[rax + rax]
43e86e: nop 
43e870: movdqa xmm1, xmmword ptr [rsi + rcx]
43e875: movdqa xmm2, xmmword ptr [rdi + rcx]
43e87a: movdqa xmm8, xmm1
43e87f: movdqa xmm9, xmm6
43e884: movdqa xmm10, xmm2
43e889: movdqa xmm11, xmm6
43e88e: pcmpgtb xmm8, xmm5
43e893: pcmpgtb xmm9, xmm1
43e898: pcmpgtb xmm10, xmm5
43e89d: pcmpgtb xmm11, xmm2
43e8a2: pand xmm8, xmm9
43e8a7: pand xmm10, xmm11
43e8ac: pand xmm8, xmm7
43e8b1: pand xmm10, xmm7
43e8b6: por xmm1, xmm8
43e8bb: por xmm2, xmm10
43e8c0: pcmpeqb xmm0, xmm1
43e8c4: pcmpeqb xmm1, xmm2
43e8c8: psubb xmm1, xmm0
43e8cc: pmovmskb edx, xmm1
43e8d0: sub edx, 0xffff
43e8d6: jne 0x4408a0
43e8dc: add rcx, 0x10
43e8e0: movdqa xmm1, xmmword ptr [rsi + rcx]
43e8e5: movdqa xmm2, xmmword ptr [rdi + rcx]
43e8ea: movdqa xmm8, xmm1
43e8ef: movdqa xmm9, xmm6
43e8f4: movdqa xmm10, xmm2
43e8f9: movdqa xmm11, xmm6
43e8fe: pcmpgtb xmm8, xmm5
43e903: pcmpgtb xmm9, xmm1
43e908: pcmpgtb xmm10, xmm5
43e90d: pcmpgtb xmm11, xmm2
43e912: pand xmm8, xmm9
43e917: pand xmm10, xmm11
43e91c: pand xmm8, xmm7
43e921: pand xmm10, xmm7
43e926: por xmm1, xmm8
43e92b: por xmm2, xmm10
43e930: pcmpeqb xmm0, xmm1
43e934: pcmpeqb xmm1, xmm2
43e938: psubb xmm1, xmm0
43e93c: pmovmskb edx, xmm1
43e940: sub edx, 0xffff
43e946: jne 0x4408a0
43e94c: add rcx, 0x10
43e950: jmp 0x43e870
43e955: nop word ptr cs:[rax + rax]
43e960: pxor xmm0, xmm0
43e964: movdqa xmm2, xmmword ptr [rdi]
43e968: movdqa xmm1, xmmword ptr [rsi]
43e96c: pcmpeqb xmm0, xmm1
43e970: pslldq xmm2, 0xf
43e975: movdqa xmm8, xmm1
43e97a: movdqa xmm9, xmm6
43e97f: movdqa xmm10, xmm2
43e984: movdqa xmm11, xmm6
43e989: pcmpgtb xmm8, xmm5
43e98e: pcmpgtb xmm9, xmm1
43e993: pcmpgtb xmm10, xmm5
43e998: pcmpgtb xmm11, xmm2
43e99d: pand xmm8, xmm9
43e9a2: pand xmm10, xmm11
43e9a7: pand xmm8, xmm7
43e9ac: pand xmm10, xmm7
43e9b1: por xmm1, xmm8
43e9b6: por xmm2, xmm10
43e9bb: pcmpeqb xmm2, xmm1
43e9bf: psubb xmm2, xmm0
43e9c3: pmovmskb r9d, xmm2
43e9c8: shr edx, cl
43e9ca: shr r9d, cl
43e9cd: sub edx, r9d
43e9d0: jne 0x4408a5
43e9d6: movdqa xmm3, xmmword ptr [rdi]
43e9da: pxor xmm0, xmm0
43e9de: mov rcx, 0x10
43e9e5: mov r9d, 1
43e9eb: lea r10, [rdi + 1]
43e9ef: and r10, 0xfff
43e9f6: sub r10, 0x1000
43e9fd: nop dword ptr [rax]
43ea00: add r10, 0x10
43ea04: jg 0x43eb30
43ea0a: movdqa xmm1, xmmword ptr [rsi + rcx]
43ea0f: movdqa xmm2, xmmword ptr [rdi + rcx]
43ea14: movdqa xmm4, xmm2
43ea18: psrldq xmm3, 1
43ea1d: pslldq xmm2, 0xf
43ea22: por xmm2, xmm3
43ea26: movdqa xmm8, xmm1
43ea2b: movdqa xmm9, xmm6
43ea30: movdqa xmm10, xmm2
43ea35: movdqa xmm11, xmm6
43ea3a: pcmpgtb xmm8, xmm5
43ea3f: pcmpgtb xmm9, xmm1
43ea44: pcmpgtb xmm10, xmm5
43ea49: pcmpgtb xmm11, xmm2
43ea4e: pand xmm8, xmm9
43ea53: pand xmm10, xmm11
43ea58: pand xmm8, xmm7
43ea5d: pand xmm10, xmm7
43ea62: por xmm1, xmm8
43ea67: por xmm2, xmm10
43ea6c: pcmpeqb xmm0, xmm1
43ea70: pcmpeqb xmm1, xmm2
43ea74: psubb xmm1, xmm0
43ea78: pmovmskb edx, xmm1
43ea7c: sub edx, 0xffff
43ea82: jne 0x4408a0
43ea88: add rcx, 0x10
43ea8c: movdqa xmm3, xmm4
43ea90: add r10, 0x10
43ea94: jg 0x43eb30
43ea9a: movdqa xmm1, xmmword ptr [rsi + rcx]
43ea9f: movdqa xmm2, xmmword ptr [rdi + rcx]
43eaa4: movdqa xmm4, xmm2
43eaa8: psrldq xmm3, 1
43eaad: pslldq xmm2, 0xf
43eab2: por xmm2, xmm3
43eab6: movdqa xmm8, xmm1
43eabb: movdqa xmm9, xmm6
43eac0: movdqa xmm10, xmm2
43eac5: movdqa xmm11, xmm6
43eaca: pcmpgtb xmm8, xmm5
43eacf: pcmpgtb xmm9, xmm1
43ead4: pcmpgtb xmm10, xmm5
43ead9: pcmpgtb xmm11, xmm2
43eade: pand xmm8, xmm9
43eae3: pand xmm10, xmm11
43eae8: pand xmm8, xmm7
43eaed: pand xmm10, xmm7
43eaf2: por xmm1, xmm8
43eaf7: por xmm2, xmm10
43eafc: pcmpeqb xmm0, xmm1
43eb00: pcmpeqb xmm1, xmm2
43eb04: psubb xmm1, xmm0
43eb08: pmovmskb edx, xmm1
43eb0c: sub edx, 0xffff
43eb12: jne 0x4408a0
43eb18: add rcx, 0x10
43eb1c: movdqa xmm3, xmm4
43eb20: jmp 0x43ea00
43eb25: nop word ptr cs:[rax + rax]
43eb30: pcmpeqb xmm0, xmm3
43eb34: pmovmskb edx, xmm0
43eb38: test edx, 0xfffe
43eb3e: jne 0x43eb50
43eb40: pxor xmm0, xmm0
43eb44: sub r10, 0x1000
43eb4b: jmp 0x43ea0a
43eb50: movdqa xmm1, xmmword ptr [rsi + rcx]
43eb55: psrldq xmm0, 1
43eb5a: psrldq xmm3, 1
43eb5f: jmp 0x440840
43eb64: nop word ptr cs:[rax + rax]
43eb6f: nop 
43eb70: pxor xmm0, xmm0
43eb74: movdqa xmm2, xmmword ptr [rdi]
43eb78: movdqa xmm1, xmmword ptr [rsi]
43eb7c: pcmpeqb xmm0, xmm1
43eb80: pslldq xmm2, 0xe
43eb85: movdqa xmm8, xmm1
43eb8a: movdqa xmm9, xmm6
43eb8f: movdqa xmm10, xmm2
43eb94: movdqa xmm11, xmm6
43eb99: pcmpgtb xmm8, xmm5
43eb9e: pcmpgtb xmm9, xmm1
43eba3: pcmpgtb xmm10, xmm5
43eba8: pcmpgtb xmm11, xmm2
43ebad: pand xmm8, xmm9
43ebb2: pand xmm10, xmm11
43ebb7: pand xmm8, xmm7
43ebbc: pand xmm10, xmm7
43ebc1: por xmm1, xmm8
43ebc6: por xmm2, xmm10
43ebcb: pcmpeqb xmm2, xmm1
43ebcf: psubb xmm2, xmm0
43ebd3: pmovmskb r9d, xmm2
43ebd8: shr edx, cl
43ebda: shr r9d, cl
43ebdd: sub edx, r9d
43ebe0: jne 0x4408a5
43ebe6: movdqa xmm3, xmmword ptr [rdi]
43ebea: pxor xmm0, xmm0
43ebee: mov rcx, 0x10
43ebf5: mov r9d, 2
43ebfb: lea r10, [rdi + 2]
43ebff: and r10, 0xfff
43ec06: sub r10, 0x1000
43ec0d: nop dword ptr [rax]
43ec10: add r10, 0x10
43ec14: jg 0x43ed40
43ec1a: movdqa xmm1, xmmword ptr [rsi + rcx]
43ec1f: movdqa xmm2, xmmword ptr [rdi + rcx]
43ec24: movdqa xmm4, xmm2
43ec28: psrldq xmm3, 2
43ec2d: pslldq xmm2, 0xe
43ec32: por xmm2, xmm3
43ec36: movdqa xmm8, xmm1
43ec3b: movdqa xmm9, xmm6
43ec40: movdqa xmm10, xmm2
43ec45: movdqa xmm11, xmm6
43ec4a: pcmpgtb xmm8, xmm5
43ec4f: pcmpgtb xmm9, xmm1
43ec54: pcmpgtb xmm10, xmm5
43ec59: pcmpgtb xmm11, xmm2
43ec5e: pand xmm8, xmm9
43ec63: pand xmm10, xmm11
43ec68: pand xmm8, xmm7
43ec6d: pand xmm10, xmm7
43ec72: por xmm1, xmm8
43ec77: por xmm2, xmm10
43ec7c: pcmpeqb xmm0, xmm1
43ec80: pcmpeqb xmm1, xmm2
43ec84: psubb xmm1, xmm0
43ec88: pmovmskb edx, xmm1
43ec8c: sub edx, 0xffff
43ec92: jne 0x4408a0
43ec98: add rcx, 0x10
43ec9c: movdqa xmm3, xmm4
43eca0: add r10, 0x10
43eca4: jg 0x43ed40
43ecaa: movdqa xmm1, xmmword ptr [rsi + rcx]
43ecaf: movdqa xmm2, xmmword ptr [rdi + rcx]
43ecb4: movdqa xmm4, xmm2
43ecb8: psrldq xmm3, 2
43ecbd: pslldq xmm2, 0xe
43ecc2: por xmm2, xmm3
43ecc6: movdqa xmm8, xmm1
43eccb: movdqa xmm9, xmm6
43ecd0: movdqa xmm10, xmm2
43ecd5: movdqa xmm11, xmm6
43ecda: pcmpgtb xmm8, xmm5
43ecdf: pcmpgtb xmm9, xmm1
43ece4: pcmpgtb xmm10, xmm5
43ece9: pcmpgtb xmm11, xmm2
43ecee: pand xmm8, xmm9
43ecf3: pand xmm10, xmm11
43ecf8: pand xmm8, xmm7
43ecfd: pand xmm10, xmm7
43ed02: por xmm1, xmm8
43ed07: por xmm2, xmm10
43ed0c: pcmpeqb xmm0, xmm1
43ed10: pcmpeqb xmm1, xmm2
43ed14: psubb xmm1, xmm0
43ed18: pmovmskb edx, xmm1
43ed1c: sub edx, 0xffff
43ed22: jne 0x4408a0
43ed28: add rcx, 0x10
43ed2c: movdqa xmm3, xmm4
43ed30: jmp 0x43ec10
43ed35: nop word ptr cs:[rax + rax]
43ed40: pcmpeqb xmm0, xmm3
43ed44: pmovmskb edx, xmm0
43ed48: test edx, 0xfffc
43ed4e: jne 0x43ed60
43ed50: pxor xmm0, xmm0
43ed54: sub r10, 0x1000
43ed5b: jmp 0x43ec1a
43ed60: movdqa xmm1, xmmword ptr [rsi + rcx]
43ed65: psrldq xmm0, 2
43ed6a: psrldq xmm3, 2
43ed6f: jmp 0x440840
43ed74: nop word ptr cs:[rax + rax]
43ed7f: nop 
43ed80: pxor xmm0, xmm0
43ed84: movdqa xmm2, xmmword ptr [rdi]
43ed88: movdqa xmm1, xmmword ptr [rsi]
43ed8c: pcmpeqb xmm0, xmm1
43ed90: pslldq xmm2, 0xd
43ed95: movdqa xmm8, xmm1
43ed9a: movdqa xmm9, xmm6
43ed9f: movdqa xmm10, xmm2
43eda4: movdqa xmm11, xmm6
43eda9: pcmpgtb xmm8, xmm5
43edae: pcmpgtb xmm9, xmm1
43edb3: pcmpgtb xmm10, xmm5
43edb8: pcmpgtb xmm11, xmm2
43edbd: pand xmm8, xmm9
43edc2: pand xmm10, xmm11
43edc7: pand xmm8, xmm7
43edcc: pand xmm10, xmm7
43edd1: por xmm1, xmm8
43edd6: por xmm2, xmm10
43eddb: pcmpeqb xmm2, xmm1
43eddf: psubb xmm2, xmm0
43ede3: pmovmskb r9d, xmm2
43ede8: shr edx, cl
43edea: shr r9d, cl
43eded: sub edx, r9d
43edf0: jne 0x4408a5
43edf6: movdqa xmm3, xmmword ptr [rdi]
43edfa: pxor xmm0, xmm0
43edfe: mov rcx, 0x10
43ee05: mov r9d, 3
43ee0b: lea r10, [rdi + 3]
43ee0f: and r10, 0xfff
43ee16: sub r10, 0x1000
43ee1d: nop dword ptr [rax]
43ee20: add r10, 0x10
43ee24: jg 0x43ef50
43ee2a: movdqa xmm1, xmmword ptr [rsi + rcx]
43ee2f: movdqa xmm2, xmmword ptr [rdi + rcx]
43ee34: movdqa xmm4, xmm2
43ee38: psrldq xmm3, 3
43ee3d: pslldq xmm2, 0xd
43ee42: por xmm2, xmm3
43ee46: movdqa xmm8, xmm1
43ee4b: movdqa xmm9, xmm6
43ee50: movdqa xmm10, xmm2
43ee55: movdqa xmm11, xmm6
43ee5a: pcmpgtb xmm8, xmm5
43ee5f: pcmpgtb xmm9, xmm1
43ee64: pcmpgtb xmm10, xmm5
43ee69: pcmpgtb xmm11, xmm2
43ee6e: pand xmm8, xmm9
43ee73: pand xmm10, xmm11
43ee78: pand xmm8, xmm7
43ee7d: pand xmm10, xmm7
43ee82: por xmm1, xmm8
43ee87: por xmm2, xmm10
43ee8c: pcmpeqb xmm0, xmm1
43ee90: pcmpeqb xmm1, xmm2
43ee94: psubb xmm1, xmm0
43ee98: pmovmskb edx, xmm1
43ee9c: sub edx, 0xffff
43eea2: jne 0x4408a0
43eea8: add rcx, 0x10
43eeac: movdqa xmm3, xmm4
43eeb0: add r10, 0x10
43eeb4: jg 0x43ef50
43eeba: movdqa xmm1, xmmword ptr [rsi + rcx]
43eebf: movdqa xmm2, xmmword ptr [rdi + rcx]
43eec4: movdqa xmm4, xmm2
43eec8: psrldq xmm3, 3
43eecd: pslldq xmm2, 0xd
43eed2: por xmm2, xmm3
43eed6: movdqa xmm8, xmm1
43eedb: movdqa xmm9, xmm6
43eee0: movdqa xmm10, xmm2
43eee5: movdqa xmm11, xmm6
43eeea: pcmpgtb xmm8, xmm5
43eeef: pcmpgtb xmm9, xmm1
43eef4: pcmpgtb xmm10, xmm5
43eef9: pcmpgtb xmm11, xmm2
43eefe: pand xmm8, xmm9
43ef03: pand xmm10, xmm11
43ef08: pand xmm8, xmm7
43ef0d: pand xmm10, xmm7
43ef12: por xmm1, xmm8
43ef17: por xmm2, xmm10
43ef1c: pcmpeqb xmm0, xmm1
43ef20: pcmpeqb xmm1, xmm2
43ef24: psubb xmm1, xmm0
43ef28: pmovmskb edx, xmm1
43ef2c: sub edx, 0xffff
43ef32: jne 0x4408a0
43ef38: add rcx, 0x10
43ef3c: movdqa xmm3, xmm4
43ef40: jmp 0x43ee20
43ef45: nop word ptr cs:[rax + rax]
43ef50: pcmpeqb xmm0, xmm3
43ef54: pmovmskb edx, xmm0
43ef58: test edx, 0xfff8
43ef5e: jne 0x43ef70
43ef60: pxor xmm0, xmm0
43ef64: sub r10, 0x1000
43ef6b: jmp 0x43ee2a
43ef70: movdqa xmm1, xmmword ptr [rsi + rcx]
43ef75: psrldq xmm0, 3
43ef7a: psrldq xmm3, 3
43ef7f: jmp 0x440840
43ef84: nop word ptr cs:[rax + rax]
43ef8f: nop 
43ef90: pxor xmm0, xmm0
43ef94: movdqa xmm2, xmmword ptr [rdi]
43ef98: movdqa xmm1, xmmword ptr [rsi]
43ef9c: pcmpeqb xmm0, xmm1
43efa0: pslldq xmm2, 0xc
43efa5: movdqa xmm8, xmm1
43efaa: movdqa xmm9, xmm6
43efaf: movdqa xmm10, xmm2
43efb4: movdqa xmm11, xmm6
43efb9: pcmpgtb xmm8, xmm5
43efbe: pcmpgtb xmm9, xmm1
43efc3: pcmpgtb xmm10, xmm5
43efc8: pcmpgtb xmm11, xmm2
43efcd: pand xmm8, xmm9
43efd2: pand xmm10, xmm11
43efd7: pand xmm8, xmm7
43efdc: pand xmm10, xmm7
43efe1: por xmm1, xmm8
43efe6: por xmm2, xmm10
43efeb: pcmpeqb xmm2, xmm1
43efef: psubb xmm2, xmm0
43eff3: pmovmskb r9d, xmm2
43eff8: shr edx, cl
43effa: shr r9d, cl
43effd: sub edx, r9d
43f000: jne 0x4408a5
43f006: movdqa xmm3, xmmword ptr [rdi]
43f00a: pxor xmm0, xmm0
43f00e: mov rcx, 0x10
43f015: mov r9d, 4
43f01b: lea r10, [rdi + 4]
43f01f: and r10, 0xfff
43f026: sub r10, 0x1000
43f02d: nop dword ptr [rax]
43f030: add r10, 0x10
43f034: jg 0x43f160
43f03a: movdqa xmm1, xmmword ptr [rsi + rcx]
43f03f: movdqa xmm2, xmmword ptr [rdi + rcx]
43f044: movdqa xmm4, xmm2
43f048: psrldq xmm3, 4
43f04d: pslldq xmm2, 0xc
43f052: por xmm2, xmm3
43f056: movdqa xmm8, xmm1
43f05b: movdqa xmm9, xmm6
43f060: movdqa xmm10, xmm2
43f065: movdqa xmm11, xmm6
43f06a: pcmpgtb xmm8, xmm5
43f06f: pcmpgtb xmm9, xmm1
43f074: pcmpgtb xmm10, xmm5
43f079: pcmpgtb xmm11, xmm2
43f07e: pand xmm8, xmm9
43f083: pand xmm10, xmm11
43f088: pand xmm8, xmm7
43f08d: pand xmm10, xmm7
43f092: por xmm1, xmm8
43f097: por xmm2, xmm10
43f09c: pcmpeqb xmm0, xmm1
43f0a0: pcmpeqb xmm1, xmm2
43f0a4: psubb xmm1, xmm0
43f0a8: pmovmskb edx, xmm1
43f0ac: sub edx, 0xffff
43f0b2: jne 0x4408a0
43f0b8: add rcx, 0x10
43f0bc: movdqa xmm3, xmm4
43f0c0: add r10, 0x10
43f0c4: jg 0x43f160
43f0ca: movdqa xmm1, xmmword ptr [rsi + rcx]
43f0cf: movdqa xmm2, xmmword ptr [rdi + rcx]
43f0d4: movdqa xmm4, xmm2
43f0d8: psrldq xmm3, 4
43f0dd: pslldq xmm2, 0xc
43f0e2: por xmm2, xmm3
43f0e6: movdqa xmm8, xmm1
43f0eb: movdqa xmm9, xmm6
43f0f0: movdqa xmm10, xmm2
43f0f5: movdqa xmm11, xmm6
43f0fa: pcmpgtb xmm8, xmm5
43f0ff: pcmpgtb xmm9, xmm1
43f104: pcmpgtb xmm10, xmm5
43f109: pcmpgtb xmm11, xmm2
43f10e: pand xmm8, xmm9
43f113: pand xmm10, xmm11
43f118: pand xmm8, xmm7
43f11d: pand xmm10, xmm7
43f122: por xmm1, xmm8
43f127: por xmm2, xmm10
43f12c: pcmpeqb xmm0, xmm1
43f130: pcmpeqb xmm1, xmm2
43f134: psubb xmm1, xmm0
43f138: pmovmskb edx, xmm1
43f13c: sub edx, 0xffff
43f142: jne 0x4408a0
43f148: add rcx, 0x10
43f14c: movdqa xmm3, xmm4
43f150: jmp 0x43f030
43f155: nop word ptr cs:[rax + rax]
43f160: pcmpeqb xmm0, xmm3
43f164: pmovmskb edx, xmm0
43f168: test edx, 0xfff0
43f16e: jne 0x43f180
43f170: pxor xmm0, xmm0
43f174: sub r10, 0x1000
43f17b: jmp 0x43f03a
43f180: movdqa xmm1, xmmword ptr [rsi + rcx]
43f185: psrldq xmm0, 4
43f18a: psrldq xmm3, 4
43f18f: jmp 0x440840
43f194: nop word ptr cs:[rax + rax]
43f19f: nop 
43f1a0: pxor xmm0, xmm0
43f1a4: movdqa xmm2, xmmword ptr [rdi]
43f1a8: movdqa xmm1, xmmword ptr [rsi]
43f1ac: pcmpeqb xmm0, xmm1
43f1b0: pslldq xmm2, 0xb
43f1b5: movdqa xmm8, xmm1
43f1ba: movdqa xmm9, xmm6
43f1bf: movdqa xmm10, xmm2
43f1c4: movdqa xmm11, xmm6
43f1c9: pcmpgtb xmm8, xmm5
43f1ce: pcmpgtb xmm9, xmm1
43f1d3: pcmpgtb xmm10, xmm5
43f1d8: pcmpgtb xmm11, xmm2
43f1dd: pand xmm8, xmm9
43f1e2: pand xmm10, xmm11
43f1e7: pand xmm8, xmm7
43f1ec: pand xmm10, xmm7
43f1f1: por xmm1, xmm8
43f1f6: por xmm2, xmm10
43f1fb: pcmpeqb xmm2, xmm1
43f1ff: psubb xmm2, xmm0
43f203: pmovmskb r9d, xmm2
43f208: shr edx, cl
43f20a: shr r9d, cl
43f20d: sub edx, r9d
43f210: jne 0x4408a5
43f216: movdqa xmm3, xmmword ptr [rdi]
43f21a: pxor xmm0, xmm0
43f21e: mov rcx, 0x10
43f225: mov r9d, 5
43f22b: lea r10, [rdi + 5]
43f22f: and r10, 0xfff
43f236: sub r10, 0x1000
43f23d: nop dword ptr [rax]
43f240: add r10, 0x10
43f244: jg 0x43f370
43f24a: movdqa xmm1, xmmword ptr [rsi + rcx]
43f24f: movdqa xmm2, xmmword ptr [rdi + rcx]
43f254: movdqa xmm4, xmm2
43f258: psrldq xmm3, 5
43f25d: pslldq xmm2, 0xb
43f262: por xmm2, xmm3
43f266: movdqa xmm8, xmm1
43f26b: movdqa xmm9, xmm6
43f270: movdqa xmm10, xmm2
43f275: movdqa xmm11, xmm6
43f27a: pcmpgtb xmm8, xmm5
43f27f: pcmpgtb xmm9, xmm1
43f284: pcmpgtb xmm10, xmm5
43f289: pcmpgtb xmm11, xmm2
43f28e: pand xmm8, xmm9
43f293: pand xmm10, xmm11
43f298: pand xmm8, xmm7
43f29d: pand xmm10, xmm7
43f2a2: por xmm1, xmm8
43f2a7: por xmm2, xmm10
43f2ac: pcmpeqb xmm0, xmm1
43f2b0: pcmpeqb xmm1, xmm2
43f2b4: psubb xmm1, xmm0
43f2b8: pmovmskb edx, xmm1
43f2bc: sub edx, 0xffff
43f2c2: jne 0x4408a0
43f2c8: add rcx, 0x10
43f2cc: movdqa xmm3, xmm4
43f2d0: add r10, 0x10
43f2d4: jg 0x43f370
43f2da: movdqa xmm1, xmmword ptr [rsi + rcx]
43f2df: movdqa xmm2, xmmword ptr [rdi + rcx]
43f2e4: movdqa xmm4, xmm2
43f2e8: psrldq xmm3, 5
43f2ed: pslldq xmm2, 0xb
43f2f2: por xmm2, xmm3
43f2f6: movdqa xmm8, xmm1
43f2fb: movdqa xmm9, xmm6
43f300: movdqa xmm10, xmm2
43f305: movdqa xmm11, xmm6
43f30a: pcmpgtb xmm8, xmm5
43f30f: pcmpgtb xmm9, xmm1
43f314: pcmpgtb xmm10, xmm5
43f319: pcmpgtb xmm11, xmm2
43f31e: pand xmm8, xmm9
43f323: pand xmm10, xmm11
43f328: pand xmm8, xmm7
43f32d: pand xmm10, xmm7
43f332: por xmm1, xmm8
43f337: por xmm2, xmm10
43f33c: pcmpeqb xmm0, xmm1
43f340: pcmpeqb xmm1, xmm2
43f344: psubb xmm1, xmm0
43f348: pmovmskb edx, xmm1
43f34c: sub edx, 0xffff
43f352: jne 0x4408a0
43f358: add rcx, 0x10
43f35c: movdqa xmm3, xmm4
43f360: jmp 0x43f240
43f365: nop word ptr cs:[rax + rax]
43f370: pcmpeqb xmm0, xmm3
43f374: pmovmskb edx, xmm0
43f378: test edx, 0xffe0
43f37e: jne 0x43f390
43f380: pxor xmm0, xmm0
43f384: sub r10, 0x1000
43f38b: jmp 0x43f24a
43f390: movdqa xmm1, xmmword ptr [rsi + rcx]
43f395: psrldq xmm0, 5
43f39a: psrldq xmm3, 5
43f39f: jmp 0x440840
43f3a4: nop word ptr cs:[rax + rax]
43f3af: nop 
43f3b0: pxor xmm0, xmm0
43f3b4: movdqa xmm2, xmmword ptr [rdi]
43f3b8: movdqa xmm1, xmmword ptr [rsi]
43f3bc: pcmpeqb xmm0, xmm1
43f3c0: pslldq xmm2, 0xa
43f3c5: movdqa xmm8, xmm1
43f3ca: movdqa xmm9, xmm6
43f3cf: movdqa xmm10, xmm2
43f3d4: movdqa xmm11, xmm6
43f3d9: pcmpgtb xmm8, xmm5
43f3de: pcmpgtb xmm9, xmm1
43f3e3: pcmpgtb xmm10, xmm5
43f3e8: pcmpgtb xmm11, xmm2
43f3ed: pand xmm8, xmm9
43f3f2: pand xmm10, xmm11
43f3f7: pand xmm8, xmm7
43f3fc: pand xmm10, xmm7
43f401: por xmm1, xmm8
43f406: por xmm2, xmm10
43f40b: pcmpeqb xmm2, xmm1
43f40f: psubb xmm2, xmm0
43f413: pmovmskb r9d, xmm2
43f418: shr edx, cl
43f41a: shr r9d, cl
43f41d: sub edx, r9d
43f420: jne 0x4408a5
43f426: movdqa xmm3, xmmword ptr [rdi]
43f42a: pxor xmm0, xmm0
43f42e: mov rcx, 0x10
43f435: mov r9d, 6
43f43b: lea r10, [rdi + 6]
43f43f: and r10, 0xfff
43f446: sub r10, 0x1000
43f44d: nop dword ptr [rax]
43f450: add r10, 0x10
43f454: jg 0x43f580
43f45a: movdqa xmm1, xmmword ptr [rsi + rcx]
43f45f: movdqa xmm2, xmmword ptr [rdi + rcx]
43f464: movdqa xmm4, xmm2
43f468: psrldq xmm3, 6
43f46d: pslldq xmm2, 0xa
43f472: por xmm2, xmm3
43f476: movdqa xmm8, xmm1
43f47b: movdqa xmm9, xmm6
43f480: movdqa xmm10, xmm2
43f485: movdqa xmm11, xmm6
43f48a: pcmpgtb xmm8, xmm5
43f48f: pcmpgtb xmm9, xmm1
43f494: pcmpgtb xmm10, xmm5
43f499: pcmpgtb xmm11, xmm2
43f49e: pand xmm8, xmm9
43f4a3: pand xmm10, xmm11
43f4a8: pand xmm8, xmm7
43f4ad: pand xmm10, xmm7
43f4b2: por xmm1, xmm8
43f4b7: por xmm2, xmm10
43f4bc: pcmpeqb xmm0, xmm1
43f4c0: pcmpeqb xmm1, xmm2
43f4c4: psubb xmm1, xmm0
43f4c8: pmovmskb edx, xmm1
43f4cc: sub edx, 0xffff
43f4d2: jne 0x4408a0
43f4d8: add rcx, 0x10
43f4dc: movdqa xmm3, xmm4
43f4e0: add r10, 0x10
43f4e4: jg 0x43f580
43f4ea: movdqa xmm1, xmmword ptr [rsi + rcx]
43f4ef: movdqa xmm2, xmmword ptr [rdi + rcx]
43f4f4: movdqa xmm4, xmm2
43f4f8: psrldq xmm3, 6
43f4fd: pslldq xmm2, 0xa
43f502: por xmm2, xmm3
43f506: movdqa xmm8, xmm1
43f50b: movdqa xmm9, xmm6
43f510: movdqa xmm10, xmm2
43f515: movdqa xmm11, xmm6
43f51a: pcmpgtb xmm8, xmm5
43f51f: pcmpgtb xmm9, xmm1
43f524: pcmpgtb xmm10, xmm5
43f529: pcmpgtb xmm11, xmm2
43f52e: pand xmm8, xmm9
43f533: pand xmm10, xmm11
43f538: pand xmm8, xmm7
43f53d: pand xmm10, xmm7
43f542: por xmm1, xmm8
43f547: por xmm2, xmm10
43f54c: pcmpeqb xmm0, xmm1
43f550: pcmpeqb xmm1, xmm2
43f554: psubb xmm1, xmm0
43f558: pmovmskb edx, xmm1
43f55c: sub edx, 0xffff
43f562: jne 0x4408a0
43f568: add rcx, 0x10
43f56c: movdqa xmm3, xmm4
43f570: jmp 0x43f450
43f575: nop word ptr cs:[rax + rax]
43f580: pcmpeqb xmm0, xmm3
43f584: pmovmskb edx, xmm0
43f588: test edx, 0xffc0
43f58e: jne 0x43f5a0
43f590: pxor xmm0, xmm0
43f594: sub r10, 0x1000
43f59b: jmp 0x43f45a
43f5a0: movdqa xmm1, xmmword ptr [rsi + rcx]
43f5a5: psrldq xmm0, 6
43f5aa: psrldq xmm3, 6
43f5af: jmp 0x440840
43f5b4: nop word ptr cs:[rax + rax]
43f5bf: nop 
43f5c0: pxor xmm0, xmm0
43f5c4: movdqa xmm2, xmmword ptr [rdi]
43f5c8: movdqa xmm1, xmmword ptr [rsi]
43f5cc: pcmpeqb xmm0, xmm1
43f5d0: pslldq xmm2, 9
43f5d5: movdqa xmm8, xmm1
43f5da: movdqa xmm9, xmm6
43f5df: movdqa xmm10, xmm2
43f5e4: movdqa xmm11, xmm6
43f5e9: pcmpgtb xmm8, xmm5
43f5ee: pcmpgtb xmm9, xmm1
43f5f3: pcmpgtb xmm10, xmm5
43f5f8: pcmpgtb xmm11, xmm2
43f5fd: pand xmm8, xmm9
43f602: pand xmm10, xmm11
43f607: pand xmm8, xmm7
43f60c: pand xmm10, xmm7
43f611: por xmm1, xmm8
43f616: por xmm2, xmm10
43f61b: pcmpeqb xmm2, xmm1
43f61f: psubb xmm2, xmm0
43f623: pmovmskb r9d, xmm2
43f628: shr edx, cl
43f62a: shr r9d, cl
43f62d: sub edx, r9d
43f630: jne 0x4408a5
43f636: movdqa xmm3, xmmword ptr [rdi]
43f63a: pxor xmm0, xmm0
43f63e: mov rcx, 0x10
43f645: mov r9d, 7
43f64b: lea r10, [rdi + 7]
43f64f: and r10, 0xfff
43f656: sub r10, 0x1000
43f65d: nop dword ptr [rax]
43f660: add r10, 0x10
43f664: jg 0x43f790
43f66a: movdqa xmm1, xmmword ptr [rsi + rcx]
43f66f: movdqa xmm2, xmmword ptr [rdi + rcx]
43f674: movdqa xmm4, xmm2
43f678: psrldq xmm3, 7
43f67d: pslldq xmm2, 9
43f682: por xmm2, xmm3
43f686: movdqa xmm8, xmm1
43f68b: movdqa xmm9, xmm6
43f690: movdqa xmm10, xmm2
43f695: movdqa xmm11, xmm6
43f69a: pcmpgtb xmm8, xmm5
43f69f: pcmpgtb xmm9, xmm1
43f6a4: pcmpgtb xmm10, xmm5
43f6a9: pcmpgtb xmm11, xmm2
43f6ae: pand xmm8, xmm9
43f6b3: pand xmm10, xmm11
43f6b8: pand xmm8, xmm7
43f6bd: pand xmm10, xmm7
43f6c2: por xmm1, xmm8
43f6c7: por xmm2, xmm10
43f6cc: pcmpeqb xmm0, xmm1
43f6d0: pcmpeqb xmm1, xmm2
43f6d4: psubb xmm1, xmm0
43f6d8: pmovmskb edx, xmm1
43f6dc: sub edx, 0xffff
43f6e2: jne 0x4408a0
43f6e8: add rcx, 0x10
43f6ec: movdqa xmm3, xmm4
43f6f0: add r10, 0x10
43f6f4: jg 0x43f790
43f6fa: movdqa xmm1, xmmword ptr [rsi + rcx]
43f6ff: movdqa xmm2, xmmword ptr [rdi + rcx]
43f704: movdqa xmm4, xmm2
43f708: psrldq xmm3, 7
43f70d: pslldq xmm2, 9
43f712: por xmm2, xmm3
43f716: movdqa xmm8, xmm1
43f71b: movdqa xmm9, xmm6
43f720: movdqa xmm10, xmm2
43f725: movdqa xmm11, xmm6
43f72a: pcmpgtb xmm8, xmm5
43f72f: pcmpgtb xmm9, xmm1
43f734: pcmpgtb xmm10, xmm5
43f739: pcmpgtb xmm11, xmm2
43f73e: pand xmm8, xmm9
43f743: pand xmm10, xmm11
43f748: pand xmm8, xmm7
43f74d: pand xmm10, xmm7
43f752: por xmm1, xmm8
43f757: por xmm2, xmm10
43f75c: pcmpeqb xmm0, xmm1
43f760: pcmpeqb xmm1, xmm2
43f764: psubb xmm1, xmm0
43f768: pmovmskb edx, xmm1
43f76c: sub edx, 0xffff
43f772: jne 0x4408a0
43f778: add rcx, 0x10
43f77c: movdqa xmm3, xmm4
43f780: jmp 0x43f660
43f785: nop word ptr cs:[rax + rax]
43f790: pcmpeqb xmm0, xmm3
43f794: pmovmskb edx, xmm0
43f798: test edx, 0xff80
43f79e: jne 0x43f7b0
43f7a0: pxor xmm0, xmm0
43f7a4: sub r10, 0x1000
43f7ab: jmp 0x43f66a
43f7b0: movdqa xmm1, xmmword ptr [rsi + rcx]
43f7b5: psrldq xmm0, 7
43f7ba: psrldq xmm3, 7
43f7bf: jmp 0x440840
43f7c4: nop word ptr cs:[rax + rax]
43f7cf: nop 
43f7d0: pxor xmm0, xmm0
43f7d4: movdqa xmm2, xmmword ptr [rdi]
43f7d8: movdqa xmm1, xmmword ptr [rsi]
43f7dc: pcmpeqb xmm0, xmm1
43f7e0: pslldq xmm2, 8
43f7e5: movdqa xmm8, xmm1
43f7ea: movdqa xmm9, xmm6
43f7ef: movdqa xmm10, xmm2
43f7f4: movdqa xmm11, xmm6
43f7f9: pcmpgtb xmm8, xmm5
43f7fe: pcmpgtb xmm9, xmm1
43f803: pcmpgtb xmm10, xmm5
43f808: pcmpgtb xmm11, xmm2
43f80d: pand xmm8, xmm9
43f812: pand xmm10, xmm11
43f817: pand xmm8, xmm7
43f81c: pand xmm10, xmm7
43f821: por xmm1, xmm8
43f826: por xmm2, xmm10
43f82b: pcmpeqb xmm2, xmm1
43f82f: psubb xmm2, xmm0
43f833: pmovmskb r9d, xmm2
43f838: shr edx, cl
43f83a: shr r9d, cl
43f83d: sub edx, r9d
43f840: jne 0x4408a5
43f846: movdqa xmm3, xmmword ptr [rdi]
43f84a: pxor xmm0, xmm0
43f84e: mov rcx, 0x10
43f855: mov r9d, 8
43f85b: lea r10, [rdi + 8]
43f85f: and r10, 0xfff
43f866: sub r10, 0x1000
43f86d: nop dword ptr [rax]
43f870: add r10, 0x10
43f874: jg 0x43f9a0
43f87a: movdqa xmm1, xmmword ptr [rsi + rcx]
43f87f: movdqa xmm2, xmmword ptr [rdi + rcx]
43f884: movdqa xmm4, xmm2
43f888: psrldq xmm3, 8
43f88d: pslldq xmm2, 8
43f892: por xmm2, xmm3
43f896: movdqa xmm8, xmm1
43f89b: movdqa xmm9, xmm6
43f8a0: movdqa xmm10, xmm2
43f8a5: movdqa xmm11, xmm6
43f8aa: pcmpgtb xmm8, xmm5
43f8af: pcmpgtb xmm9, xmm1
43f8b4: pcmpgtb xmm10, xmm5
43f8b9: pcmpgtb xmm11, xmm2
43f8be: pand xmm8, xmm9
43f8c3: pand xmm10, xmm11
43f8c8: pand xmm8, xmm7
43f8cd: pand xmm10, xmm7
43f8d2: por xmm1, xmm8
43f8d7: por xmm2, xmm10
43f8dc: pcmpeqb xmm0, xmm1
43f8e0: pcmpeqb xmm1, xmm2
43f8e4: psubb xmm1, xmm0
43f8e8: pmovmskb edx, xmm1
43f8ec: sub edx, 0xffff
43f8f2: jne 0x4408a0
43f8f8: add rcx, 0x10
43f8fc: movdqa xmm3, xmm4
43f900: add r10, 0x10
43f904: jg 0x43f9a0
43f90a: movdqa xmm1, xmmword ptr [rsi + rcx]
43f90f: movdqa xmm2, xmmword ptr [rdi + rcx]
43f914: movdqa xmm4, xmm2
43f918: psrldq xmm3, 8
43f91d: pslldq xmm2, 8
43f922: por xmm2, xmm3
43f926: movdqa xmm8, xmm1
43f92b: movdqa xmm9, xmm6
43f930: movdqa xmm10, xmm2
43f935: movdqa xmm11, xmm6
43f93a: pcmpgtb xmm8, xmm5
43f93f: pcmpgtb xmm9, xmm1
43f944: pcmpgtb xmm10, xmm5
43f949: pcmpgtb xmm11, xmm2
43f94e: pand xmm8, xmm9
43f953: pand xmm10, xmm11
43f958: pand xmm8, xmm7
43f95d: pand xmm10, xmm7
43f962: por xmm1, xmm8
43f967: por xmm2, xmm10
43f96c: pcmpeqb xmm0, xmm1
43f970: pcmpeqb xmm1, xmm2
43f974: psubb xmm1, xmm0
43f978: pmovmskb edx, xmm1
43f97c: sub edx, 0xffff
43f982: jne 0x4408a0
43f988: add rcx, 0x10
43f98c: movdqa xmm3, xmm4
43f990: jmp 0x43f870
43f995: nop word ptr cs:[rax + rax]
43f9a0: pcmpeqb xmm0, xmm3
43f9a4: pmovmskb edx, xmm0
43f9a8: test edx, 0xff00
43f9ae: jne 0x43f9c0
43f9b0: pxor xmm0, xmm0
43f9b4: sub r10, 0x1000
43f9bb: jmp 0x43f87a
43f9c0: movdqa xmm1, xmmword ptr [rsi + rcx]
43f9c5: psrldq xmm0, 8
43f9ca: psrldq xmm3, 8
43f9cf: jmp 0x440840
43f9d4: nop word ptr cs:[rax + rax]
43f9df: nop 
43f9e0: pxor xmm0, xmm0
43f9e4: movdqa xmm2, xmmword ptr [rdi]
43f9e8: movdqa xmm1, xmmword ptr [rsi]
43f9ec: pcmpeqb xmm0, xmm1
43f9f0: pslldq xmm2, 7
43f9f5: movdqa xmm8, xmm1
43f9fa: movdqa xmm9, xmm6
43f9ff: movdqa xmm10, xmm2
43fa04: movdqa xmm11, xmm6
43fa09: pcmpgtb xmm8, xmm5
43fa0e: pcmpgtb xmm9, xmm1
43fa13: pcmpgtb xmm10, xmm5
43fa18: pcmpgtb xmm11, xmm2
43fa1d: pand xmm8, xmm9
43fa22: pand xmm10, xmm11
43fa27: pand xmm8, xmm7
43fa2c: pand xmm10, xmm7
43fa31: por xmm1, xmm8
43fa36: por xmm2, xmm10
43fa3b: pcmpeqb xmm2, xmm1
43fa3f: psubb xmm2, xmm0
43fa43: pmovmskb r9d, xmm2
43fa48: shr edx, cl
43fa4a: shr r9d, cl
43fa4d: sub edx, r9d
43fa50: jne 0x4408a5
43fa56: movdqa xmm3, xmmword ptr [rdi]
43fa5a: pxor xmm0, xmm0
43fa5e: mov rcx, 0x10
43fa65: mov r9d, 9
43fa6b: lea r10, [rdi + 9]
43fa6f: and r10, 0xfff
43fa76: sub r10, 0x1000
43fa7d: nop dword ptr [rax]
43fa80: add r10, 0x10
43fa84: jg 0x43fbb0
43fa8a: movdqa xmm1, xmmword ptr [rsi + rcx]
43fa8f: movdqa xmm2, xmmword ptr [rdi + rcx]
43fa94: movdqa xmm4, xmm2
43fa98: psrldq xmm3, 9
43fa9d: pslldq xmm2, 7
43faa2: por xmm2, xmm3
43faa6: movdqa xmm8, xmm1
43faab: movdqa xmm9, xmm6
43fab0: movdqa xmm10, xmm2
43fab5: movdqa xmm11, xmm6
43faba: pcmpgtb xmm8, xmm5
43fabf: pcmpgtb xmm9, xmm1
43fac4: pcmpgtb xmm10, xmm5
43fac9: pcmpgtb xmm11, xmm2
43face: pand xmm8, xmm9
43fad3: pand xmm10, xmm11
43fad8: pand xmm8, xmm7
43fadd: pand xmm10, xmm7
43fae2: por xmm1, xmm8
43fae7: por xmm2, xmm10
43faec: pcmpeqb xmm0, xmm1
43faf0: pcmpeqb xmm1, xmm2
43faf4: psubb xmm1, xmm0
43faf8: pmovmskb edx, xmm1
43fafc: sub edx, 0xffff
43fb02: jne 0x4408a0
43fb08: add rcx, 0x10
43fb0c: movdqa xmm3, xmm4
43fb10: add r10, 0x10
43fb14: jg 0x43fbb0
43fb1a: movdqa xmm1, xmmword ptr [rsi + rcx]
43fb1f: movdqa xmm2, xmmword ptr [rdi + rcx]
43fb24: movdqa xmm4, xmm2
43fb28: psrldq xmm3, 9
43fb2d: pslldq xmm2, 7
43fb32: por xmm2, xmm3
43fb36: movdqa xmm8, xmm1
43fb3b: movdqa xmm9, xmm6
43fb40: movdqa xmm10, xmm2
43fb45: movdqa xmm11, xmm6
43fb4a: pcmpgtb xmm8, xmm5
43fb4f: pcmpgtb xmm9, xmm1
43fb54: pcmpgtb xmm10, xmm5
43fb59: pcmpgtb xmm11, xmm2
43fb5e: pand xmm8, xmm9
43fb63: pand xmm10, xmm11
43fb68: pand xmm8, xmm7
43fb6d: pand xmm10, xmm7
43fb72: por xmm1, xmm8
43fb77: por xmm2, xmm10
43fb7c: pcmpeqb xmm0, xmm1
43fb80: pcmpeqb xmm1, xmm2
43fb84: psubb xmm1, xmm0
43fb88: pmovmskb edx, xmm1
43fb8c: sub edx, 0xffff
43fb92: jne 0x4408a0
43fb98: add rcx, 0x10
43fb9c: movdqa xmm3, xmm4
43fba0: jmp 0x43fa80
43fba5: nop word ptr cs:[rax + rax]
43fbb0: pcmpeqb xmm0, xmm3
43fbb4: pmovmskb edx, xmm0
43fbb8: test edx, 0xfe00
43fbbe: jne 0x43fbd0
43fbc0: pxor xmm0, xmm0
43fbc4: sub r10, 0x1000
43fbcb: jmp 0x43fa8a
43fbd0: movdqa xmm1, xmmword ptr [rsi + rcx]
43fbd5: psrldq xmm0, 9
43fbda: psrldq xmm3, 9
43fbdf: jmp 0x440840
43fbe4: nop word ptr cs:[rax + rax]
43fbef: nop 
43fbf0: pxor xmm0, xmm0
43fbf4: movdqa xmm2, xmmword ptr [rdi]
43fbf8: movdqa xmm1, xmmword ptr [rsi]
43fbfc: pcmpeqb xmm0, xmm1
43fc00: pslldq xmm2, 6
43fc05: movdqa xmm8, xmm1
43fc0a: movdqa xmm9, xmm6
43fc0f: movdqa xmm10, xmm2
43fc14: movdqa xmm11, xmm6
43fc19: pcmpgtb xmm8, xmm5
43fc1e: pcmpgtb xmm9, xmm1
43fc23: pcmpgtb xmm10, xmm5
43fc28: pcmpgtb xmm11, xmm2
43fc2d: pand xmm8, xmm9
43fc32: pand xmm10, xmm11
43fc37: pand xmm8, xmm7
43fc3c: pand xmm10, xmm7
43fc41: por xmm1, xmm8
43fc46: por xmm2, xmm10
43fc4b: pcmpeqb xmm2, xmm1
43fc4f: psubb xmm2, xmm0
43fc53: pmovmskb r9d, xmm2
43fc58: shr edx, cl
43fc5a: shr r9d, cl
43fc5d: sub edx, r9d
43fc60: jne 0x4408a5
43fc66: movdqa xmm3, xmmword ptr [rdi]
43fc6a: pxor xmm0, xmm0
43fc6e: mov rcx, 0x10
43fc75: mov r9d, 0xa
43fc7b: lea r10, [rdi + 0xa]
43fc7f: and r10, 0xfff
43fc86: sub r10, 0x1000
43fc8d: nop dword ptr [rax]
43fc90: add r10, 0x10
43fc94: jg 0x43fdc0
43fc9a: movdqa xmm1, xmmword ptr [rsi + rcx]
43fc9f: movdqa xmm2, xmmword ptr [rdi + rcx]
43fca4: movdqa xmm4, xmm2
43fca8: psrldq xmm3, 0xa
43fcad: pslldq xmm2, 6
43fcb2: por xmm2, xmm3
43fcb6: movdqa xmm8, xmm1
43fcbb: movdqa xmm9, xmm6
43fcc0: movdqa xmm10, xmm2
43fcc5: movdqa xmm11, xmm6
43fcca: pcmpgtb xmm8, xmm5
43fccf: pcmpgtb xmm9, xmm1
43fcd4: pcmpgtb xmm10, xmm5
43fcd9: pcmpgtb xmm11, xmm2
43fcde: pand xmm8, xmm9
43fce3: pand xmm10, xmm11
43fce8: pand xmm8, xmm7
43fced: pand xmm10, xmm7
43fcf2: por xmm1, xmm8
43fcf7: por xmm2, xmm10
43fcfc: pcmpeqb xmm0, xmm1
43fd00: pcmpeqb xmm1, xmm2
43fd04: psubb xmm1, xmm0
43fd08: pmovmskb edx, xmm1
43fd0c: sub edx, 0xffff
43fd12: jne 0x4408a0
43fd18: add rcx, 0x10
43fd1c: movdqa xmm3, xmm4
43fd20: add r10, 0x10
43fd24: jg 0x43fdc0
43fd2a: movdqa xmm1, xmmword ptr [rsi + rcx]
43fd2f: movdqa xmm2, xmmword ptr [rdi + rcx]
43fd34: movdqa xmm4, xmm2
43fd38: psrldq xmm3, 0xa
43fd3d: pslldq xmm2, 6
43fd42: por xmm2, xmm3
43fd46: movdqa xmm8, xmm1
43fd4b: movdqa xmm9, xmm6
43fd50: movdqa xmm10, xmm2
43fd55: movdqa xmm11, xmm6
43fd5a: pcmpgtb xmm8, xmm5
43fd5f: pcmpgtb xmm9, xmm1
43fd64: pcmpgtb xmm10, xmm5
43fd69: pcmpgtb xmm11, xmm2
43fd6e: pand xmm8, xmm9
43fd73: pand xmm10, xmm11
43fd78: pand xmm8, xmm7
43fd7d: pand xmm10, xmm7
43fd82: por xmm1, xmm8
43fd87: por xmm2, xmm10
43fd8c: pcmpeqb xmm0, xmm1
43fd90: pcmpeqb xmm1, xmm2
43fd94: psubb xmm1, xmm0
43fd98: pmovmskb edx, xmm1
43fd9c: sub edx, 0xffff
43fda2: jne 0x4408a0
43fda8: add rcx, 0x10
43fdac: movdqa xmm3, xmm4
43fdb0: jmp 0x43fc90
43fdb5: nop word ptr cs:[rax + rax]
43fdc0: pcmpeqb xmm0, xmm3
43fdc4: pmovmskb edx, xmm0
43fdc8: test edx, 0xfc00
43fdce: jne 0x43fde0
43fdd0: pxor xmm0, xmm0
43fdd4: sub r10, 0x1000
43fddb: jmp 0x43fc9a
43fde0: movdqa xmm1, xmmword ptr [rsi + rcx]
43fde5: psrldq xmm0, 0xa
43fdea: psrldq xmm3, 0xa
43fdef: jmp 0x440840
43fdf4: nop word ptr cs:[rax + rax]
43fdff: nop 
43fe00: pxor xmm0, xmm0
43fe04: movdqa xmm2, xmmword ptr [rdi]
43fe08: movdqa xmm1, xmmword ptr [rsi]
43fe0c: pcmpeqb xmm0, xmm1
43fe10: pslldq xmm2, 5
43fe15: movdqa xmm8, xmm1
43fe1a: movdqa xmm9, xmm6
43fe1f: movdqa xmm10, xmm2
43fe24: movdqa xmm11, xmm6
43fe29: pcmpgtb xmm8, xmm5
43fe2e: pcmpgtb xmm9, xmm1
43fe33: pcmpgtb xmm10, xmm5
43fe38: pcmpgtb xmm11, xmm2
43fe3d: pand xmm8, xmm9
43fe42: pand xmm10, xmm11
43fe47: pand xmm8, xmm7
43fe4c: pand xmm10, xmm7
43fe51: por xmm1, xmm8
43fe56: por xmm2, xmm10
43fe5b: pcmpeqb xmm2, xmm1
43fe5f: psubb xmm2, xmm0
43fe63: pmovmskb r9d, xmm2
43fe68: shr edx, cl
43fe6a: shr r9d, cl
43fe6d: sub edx, r9d
43fe70: jne 0x4408a5
43fe76: movdqa xmm3, xmmword ptr [rdi]
43fe7a: pxor xmm0, xmm0
43fe7e: mov rcx, 0x10
43fe85: mov r9d, 0xb
43fe8b: lea r10, [rdi + 0xb]
43fe8f: and r10, 0xfff
43fe96: sub r10, 0x1000
43fe9d: nop dword ptr [rax]
43fea0: add r10, 0x10
43fea4: jg 0x43ffd0
43feaa: movdqa xmm1, xmmword ptr [rsi + rcx]
43feaf: movdqa xmm2, xmmword ptr [rdi + rcx]
43feb4: movdqa xmm4, xmm2
43feb8: psrldq xmm3, 0xb
43febd: pslldq xmm2, 5
43fec2: por xmm2, xmm3
43fec6: movdqa xmm8, xmm1
43fecb: movdqa xmm9, xmm6
43fed0: movdqa xmm10, xmm2
43fed5: movdqa xmm11, xmm6
43feda: pcmpgtb xmm8, xmm5
43fedf: pcmpgtb xmm9, xmm1
43fee4: pcmpgtb xmm10, xmm5
43fee9: pcmpgtb xmm11, xmm2
43feee: pand xmm8, xmm9
43fef3: pand xmm10, xmm11
43fef8: pand xmm8, xmm7
43fefd: pand xmm10, xmm7
43ff02: por xmm1, xmm8
43ff07: por xmm2, xmm10
43ff0c: pcmpeqb xmm0, xmm1
43ff10: pcmpeqb xmm1, xmm2
43ff14: psubb xmm1, xmm0
43ff18: pmovmskb edx, xmm1
43ff1c: sub edx, 0xffff
43ff22: jne 0x4408a0
43ff28: add rcx, 0x10
43ff2c: movdqa xmm3, xmm4
43ff30: add r10, 0x10
43ff34: jg 0x43ffd0
43ff3a: movdqa xmm1, xmmword ptr [rsi + rcx]
43ff3f: movdqa xmm2, xmmword ptr [rdi + rcx]
43ff44: movdqa xmm4, xmm2
43ff48: psrldq xmm3, 0xb
43ff4d: pslldq xmm2, 5
43ff52: por xmm2, xmm3
43ff56: movdqa xmm8, xmm1
43ff5b: movdqa xmm9, xmm6
43ff60: movdqa xmm10, xmm2
43ff65: movdqa xmm11, xmm6
43ff6a: pcmpgtb xmm8, xmm5
43ff6f: pcmpgtb xmm9, xmm1
43ff74: pcmpgtb xmm10, xmm5
43ff79: pcmpgtb xmm11, xmm2
43ff7e: pand xmm8, xmm9
43ff83: pand xmm10, xmm11
43ff88: pand xmm8, xmm7
43ff8d: pand xmm10, xmm7
43ff92: por xmm1, xmm8
43ff97: por xmm2, xmm10
43ff9c: pcmpeqb xmm0, xmm1
43ffa0: pcmpeqb xmm1, xmm2
43ffa4: psubb xmm1, xmm0
43ffa8: pmovmskb edx, xmm1
43ffac: sub edx, 0xffff
43ffb2: jne 0x4408a0
43ffb8: add rcx, 0x10
43ffbc: movdqa xmm3, xmm4
43ffc0: jmp 0x43fea0
43ffc5: nop word ptr cs:[rax + rax]
43ffd0: pcmpeqb xmm0, xmm3
43ffd4: pmovmskb edx, xmm0
43ffd8: test edx, 0xf800
43ffde: jne 0x43fff0
43ffe0: pxor xmm0, xmm0
43ffe4: sub r10, 0x1000
43ffeb: jmp 0x43feaa
43fff0: movdqa xmm1, xmmword ptr [rsi + rcx]
43fff5: psrldq xmm0, 0xb
43fffa: psrldq xmm3, 0xb
43ffff: jmp 0x440840
440004: nop word ptr cs:[rax + rax]
44000f: nop 
440010: pxor xmm0, xmm0
440014: movdqa xmm2, xmmword ptr [rdi]
440018: movdqa xmm1, xmmword ptr [rsi]
44001c: pcmpeqb xmm0, xmm1
440020: pslldq xmm2, 4
440025: movdqa xmm8, xmm1
44002a: movdqa xmm9, xmm6
44002f: movdqa xmm10, xmm2
440034: movdqa xmm11, xmm6
440039: pcmpgtb xmm8, xmm5
44003e: pcmpgtb xmm9, xmm1
440043: pcmpgtb xmm10, xmm5
440048: pcmpgtb xmm11, xmm2
44004d: pand xmm8, xmm9
440052: pand xmm10, xmm11
440057: pand xmm8, xmm7
44005c: pand xmm10, xmm7
440061: por xmm1, xmm8
440066: por xmm2, xmm10
44006b: pcmpeqb xmm2, xmm1
44006f: psubb xmm2, xmm0
440073: pmovmskb r9d, xmm2
440078: shr edx, cl
44007a: shr r9d, cl
44007d: sub edx, r9d
440080: jne 0x4408a5
440086: movdqa xmm3, xmmword ptr [rdi]
44008a: pxor xmm0, xmm0
44008e: mov rcx, 0x10
440095: mov r9d, 0xc
44009b: lea r10, [rdi + 0xc]
44009f: and r10, 0xfff
4400a6: sub r10, 0x1000
4400ad: nop dword ptr [rax]
4400b0: add r10, 0x10
4400b4: jg 0x4401e0
4400ba: movdqa xmm1, xmmword ptr [rsi + rcx]
4400bf: movdqa xmm2, xmmword ptr [rdi + rcx]
4400c4: movdqa xmm4, xmm2
4400c8: psrldq xmm3, 0xc
4400cd: pslldq xmm2, 4
4400d2: por xmm2, xmm3
4400d6: movdqa xmm8, xmm1
4400db: movdqa xmm9, xmm6
4400e0: movdqa xmm10, xmm2
4400e5: movdqa xmm11, xmm6
4400ea: pcmpgtb xmm8, xmm5
4400ef: pcmpgtb xmm9, xmm1
4400f4: pcmpgtb xmm10, xmm5
4400f9: pcmpgtb xmm11, xmm2
4400fe: pand xmm8, xmm9
440103: pand xmm10, xmm11
440108: pand xmm8, xmm7
44010d: pand xmm10, xmm7
440112: por xmm1, xmm8
440117: por xmm2, xmm10
44011c: pcmpeqb xmm0, xmm1
440120: pcmpeqb xmm1, xmm2
440124: psubb xmm1, xmm0
440128: pmovmskb edx, xmm1
44012c: sub edx, 0xffff
440132: jne 0x4408a0
440138: add rcx, 0x10
44013c: movdqa xmm3, xmm4
440140: add r10, 0x10
440144: jg 0x4401e0
44014a: movdqa xmm1, xmmword ptr [rsi + rcx]
44014f: movdqa xmm2, xmmword ptr [rdi + rcx]
440154: movdqa xmm4, xmm2
440158: psrldq xmm3, 0xc
44015d: pslldq xmm2, 4
440162: por xmm2, xmm3
440166: movdqa xmm8, xmm1
44016b: movdqa xmm9, xmm6
440170: movdqa xmm10, xmm2
440175: movdqa xmm11, xmm6
44017a: pcmpgtb xmm8, xmm5
44017f: pcmpgtb xmm9, xmm1
440184: pcmpgtb xmm10, xmm5
440189: pcmpgtb xmm11, xmm2
44018e: pand xmm8, xmm9
440193: pand xmm10, xmm11
440198: pand xmm8, xmm7
44019d: pand xmm10, xmm7
4401a2: por xmm1, xmm8
4401a7: por xmm2, xmm10
4401ac: pcmpeqb xmm0, xmm1
4401b0: pcmpeqb xmm1, xmm2
4401b4: psubb xmm1, xmm0
4401b8: pmovmskb edx, xmm1
4401bc: sub edx, 0xffff
4401c2: jne 0x4408a0
4401c8: add rcx, 0x10
4401cc: movdqa xmm3, xmm4
4401d0: jmp 0x4400b0
4401d5: nop word ptr cs:[rax + rax]
4401e0: pcmpeqb xmm0, xmm3
4401e4: pmovmskb edx, xmm0
4401e8: test edx, 0xf000
4401ee: jne 0x440200
4401f0: pxor xmm0, xmm0
4401f4: sub r10, 0x1000
4401fb: jmp 0x4400ba
440200: movdqa xmm1, xmmword ptr [rsi + rcx]
440205: psrldq xmm0, 0xc
44020a: psrldq xmm3, 0xc
44020f: jmp 0x440840
440214: nop word ptr cs:[rax + rax]
44021f: nop 
440220: pxor xmm0, xmm0
440224: movdqa xmm2, xmmword ptr [rdi]
440228: movdqa xmm1, xmmword ptr [rsi]
44022c: pcmpeqb xmm0, xmm1
440230: pslldq xmm2, 3
440235: movdqa xmm8, xmm1
44023a: movdqa xmm9, xmm6
44023f: movdqa xmm10, xmm2
440244: movdqa xmm11, xmm6
440249: pcmpgtb xmm8, xmm5
44024e: pcmpgtb xmm9, xmm1
440253: pcmpgtb xmm10, xmm5
440258: pcmpgtb xmm11, xmm2
44025d: pand xmm8, xmm9
440262: pand xmm10, xmm11
440267: pand xmm8, xmm7
44026c: pand xmm10, xmm7
440271: por xmm1, xmm8
440276: por xmm2, xmm10
44027b: pcmpeqb xmm2, xmm1
44027f: psubb xmm2, xmm0
440283: pmovmskb r9d, xmm2
440288: shr edx, cl
44028a: shr r9d, cl
44028d: sub edx, r9d
440290: jne 0x4408a5
440296: movdqa xmm3, xmmword ptr [rdi]
44029a: pxor xmm0, xmm0
44029e: mov rcx, 0x10
4402a5: mov r9d, 0xd
4402ab: lea r10, [rdi + 0xd]
4402af: and r10, 0xfff
4402b6: sub r10, 0x1000
4402bd: nop dword ptr [rax]
4402c0: add r10, 0x10
4402c4: jg 0x4403f0
4402ca: movdqa xmm1, xmmword ptr [rsi + rcx]
4402cf: movdqa xmm2, xmmword ptr [rdi + rcx]
4402d4: movdqa xmm4, xmm2
4402d8: psrldq xmm3, 0xd
4402dd: pslldq xmm2, 3
4402e2: por xmm2, xmm3
4402e6: movdqa xmm8, xmm1
4402eb: movdqa xmm9, xmm6
4402f0: movdqa xmm10, xmm2
4402f5: movdqa xmm11, xmm6
4402fa: pcmpgtb xmm8, xmm5
4402ff: pcmpgtb xmm9, xmm1
440304: pcmpgtb xmm10, xmm5
440309: pcmpgtb xmm11, xmm2
44030e: pand xmm8, xmm9
440313: pand xmm10, xmm11
440318: pand xmm8, xmm7
44031d: pand xmm10, xmm7
440322: por xmm1, xmm8
440327: por xmm2, xmm10
44032c: pcmpeqb xmm0, xmm1
440330: pcmpeqb xmm1, xmm2
440334: psubb xmm1, xmm0
440338: pmovmskb edx, xmm1
44033c: sub edx, 0xffff
440342: jne 0x4408a0
440348: add rcx, 0x10
44034c: movdqa xmm3, xmm4
440350: add r10, 0x10
440354: jg 0x4403f0
44035a: movdqa xmm1, xmmword ptr [rsi + rcx]
44035f: movdqa xmm2, xmmword ptr [rdi + rcx]
440364: movdqa xmm4, xmm2
440368: psrldq xmm3, 0xd
44036d: pslldq xmm2, 3
440372: por xmm2, xmm3
440376: movdqa xmm8, xmm1
44037b: movdqa xmm9, xmm6
440380: movdqa xmm10, xmm2
440385: movdqa xmm11, xmm6
44038a: pcmpgtb xmm8, xmm5
44038f: pcmpgtb xmm9, xmm1
440394: pcmpgtb xmm10, xmm5
440399: pcmpgtb xmm11, xmm2
44039e: pand xmm8, xmm9
4403a3: pand xmm10, xmm11
4403a8: pand xmm8, xmm7
4403ad: pand xmm10, xmm7
4403b2: por xmm1, xmm8
4403b7: por xmm2, xmm10
4403bc: pcmpeqb xmm0, xmm1
4403c0: pcmpeqb xmm1, xmm2
4403c4: psubb xmm1, xmm0
4403c8: pmovmskb edx, xmm1
4403cc: sub edx, 0xffff
4403d2: jne 0x4408a0
4403d8: add rcx, 0x10
4403dc: movdqa xmm3, xmm4
4403e0: jmp 0x4402c0
4403e5: nop word ptr cs:[rax + rax]
4403f0: pcmpeqb xmm0, xmm3
4403f4: pmovmskb edx, xmm0
4403f8: test edx, 0xe000
4403fe: jne 0x440410
440400: pxor xmm0, xmm0
440404: sub r10, 0x1000
44040b: jmp 0x4402ca
440410: movdqa xmm1, xmmword ptr [rsi + rcx]
440415: psrldq xmm0, 0xd
44041a: psrldq xmm3, 0xd
44041f: jmp 0x440840
440424: nop word ptr cs:[rax + rax]
44042f: nop 
440430: pxor xmm0, xmm0
440434: movdqa xmm2, xmmword ptr [rdi]
440438: movdqa xmm1, xmmword ptr [rsi]
44043c: pcmpeqb xmm0, xmm1
440440: pslldq xmm2, 2
440445: movdqa xmm8, xmm1
44044a: movdqa xmm9, xmm6
44044f: movdqa xmm10, xmm2
440454: movdqa xmm11, xmm6
440459: pcmpgtb xmm8, xmm5
44045e: pcmpgtb xmm9, xmm1
440463: pcmpgtb xmm10, xmm5
440468: pcmpgtb xmm11, xmm2
44046d: pand xmm8, xmm9
440472: pand xmm10, xmm11
440477: pand xmm8, xmm7
44047c: pand xmm10, xmm7
440481: por xmm1, xmm8
440486: por xmm2, xmm10
44048b: pcmpeqb xmm2, xmm1
44048f: psubb xmm2, xmm0
440493: pmovmskb r9d, xmm2
440498: shr edx, cl
44049a: shr r9d, cl
44049d: sub edx, r9d
4404a0: jne 0x4408a5
4404a6: movdqa xmm3, xmmword ptr [rdi]
4404aa: pxor xmm0, xmm0
4404ae: mov rcx, 0x10
4404b5: mov r9d, 0xe
4404bb: lea r10, [rdi + 0xe]
4404bf: and r10, 0xfff
4404c6: sub r10, 0x1000
4404cd: nop dword ptr [rax]
4404d0: add r10, 0x10
4404d4: jg 0x440600
4404da: movdqa xmm1, xmmword ptr [rsi + rcx]
4404df: movdqa xmm2, xmmword ptr [rdi + rcx]
4404e4: movdqa xmm4, xmm2
4404e8: psrldq xmm3, 0xe
4404ed: pslldq xmm2, 2
4404f2: por xmm2, xmm3
4404f6: movdqa xmm8, xmm1
4404fb: movdqa xmm9, xmm6
440500: movdqa xmm10, xmm2
440505: movdqa xmm11, xmm6
44050a: pcmpgtb xmm8, xmm5
44050f: pcmpgtb xmm9, xmm1
440514: pcmpgtb xmm10, xmm5
440519: pcmpgtb xmm11, xmm2
44051e: pand xmm8, xmm9
440523: pand xmm10, xmm11
440528: pand xmm8, xmm7
44052d: pand xmm10, xmm7
440532: por xmm1, xmm8
440537: por xmm2, xmm10
44053c: pcmpeqb xmm0, xmm1
440540: pcmpeqb xmm1, xmm2
440544: psubb xmm1, xmm0
440548: pmovmskb edx, xmm1
44054c: sub edx, 0xffff
440552: jne 0x4408a0
440558: add rcx, 0x10
44055c: movdqa xmm3, xmm4
440560: add r10, 0x10
440564: jg 0x440600
44056a: movdqa xmm1, xmmword ptr [rsi + rcx]
44056f: movdqa xmm2, xmmword ptr [rdi + rcx]
440574: movdqa xmm4, xmm2
440578: psrldq xmm3, 0xe
44057d: pslldq xmm2, 2
440582: por xmm2, xmm3
440586: movdqa xmm8, xmm1
44058b: movdqa xmm9, xmm6
440590: movdqa xmm10, xmm2
440595: movdqa xmm11, xmm6
44059a: pcmpgtb xmm8, xmm5
44059f: pcmpgtb xmm9, xmm1
4405a4: pcmpgtb xmm10, xmm5
4405a9: pcmpgtb xmm11, xmm2
4405ae: pand xmm8, xmm9
4405b3: pand xmm10, xmm11
4405b8: pand xmm8, xmm7
4405bd: pand xmm10, xmm7
4405c2: por xmm1, xmm8
4405c7: por xmm2, xmm10
4405cc: pcmpeqb xmm0, xmm1
4405d0: pcmpeqb xmm1, xmm2
4405d4: psubb xmm1, xmm0
4405d8: pmovmskb edx, xmm1
4405dc: sub edx, 0xffff
4405e2: jne 0x4408a0
4405e8: add rcx, 0x10
4405ec: movdqa xmm3, xmm4
4405f0: jmp 0x4404d0
4405f5: nop word ptr cs:[rax + rax]
440600: pcmpeqb xmm0, xmm3
440604: pmovmskb edx, xmm0
440608: test edx, 0xc000
44060e: jne 0x440620
440610: pxor xmm0, xmm0
440614: sub r10, 0x1000
44061b: jmp 0x4404da
440620: movdqa xmm1, xmmword ptr [rsi + rcx]
440625: psrldq xmm0, 0xe
44062a: psrldq xmm3, 0xe
44062f: jmp 0x440840
440634: nop word ptr cs:[rax + rax]
44063f: nop 
440640: pxor xmm0, xmm0
440644: movdqa xmm2, xmmword ptr [rdi]
440648: movdqa xmm1, xmmword ptr [rsi]
44064c: pcmpeqb xmm0, xmm1
440650: pslldq xmm2, 1
440655: movdqa xmm8, xmm1
44065a: movdqa xmm9, xmm6
44065f: movdqa xmm10, xmm2
440664: movdqa xmm11, xmm6
440669: pcmpgtb xmm8, xmm5
44066e: pcmpgtb xmm9, xmm1
440673: pcmpgtb xmm10, xmm5
440678: pcmpgtb xmm11, xmm2
44067d: pand xmm8, xmm9
440682: pand xmm10, xmm11
440687: pand xmm8, xmm7
44068c: pand xmm10, xmm7
440691: por xmm1, xmm8
440696: por xmm2, xmm10
44069b: pcmpeqb xmm2, xmm1
44069f: psubb xmm2, xmm0
4406a3: pmovmskb r9d, xmm2
4406a8: shr edx, cl
4406aa: shr r9d, cl
4406ad: sub edx, r9d
4406b0: jne 0x4408a5
4406b6: movdqa xmm3, xmmword ptr [rdi]
4406ba: pxor xmm0, xmm0
4406be: mov rcx, 0x10
4406c5: mov r9d, 0xf
4406cb: lea r10, [rdi + 0xf]
4406cf: and r10, 0xfff
4406d6: sub r10, 0x1000
4406dd: nop dword ptr [rax]
4406e0: add r10, 0x10
4406e4: jg 0x440810
4406ea: movdqa xmm1, xmmword ptr [rsi + rcx]
4406ef: movdqa xmm2, xmmword ptr [rdi + rcx]
4406f4: movdqa xmm4, xmm2
4406f8: psrldq xmm3, 0xf
4406fd: pslldq xmm2, 1
440702: por xmm2, xmm3
440706: movdqa xmm8, xmm1
44070b: movdqa xmm9, xmm6
440710: movdqa xmm10, xmm2
440715: movdqa xmm11, xmm6
44071a: pcmpgtb xmm8, xmm5
44071f: pcmpgtb xmm9, xmm1
440724: pcmpgtb xmm10, xmm5
440729: pcmpgtb xmm11, xmm2
44072e: pand xmm8, xmm9
440733: pand xmm10, xmm11
440738: pand xmm8, xmm7
44073d: pand xmm10, xmm7
440742: por xmm1, xmm8
440747: por xmm2, xmm10
44074c: pcmpeqb xmm0, xmm1
440750: pcmpeqb xmm1, xmm2
440754: psubb xmm1, xmm0
440758: pmovmskb edx, xmm1
44075c: sub edx, 0xffff
440762: jne 0x4408a0
440768: add rcx, 0x10
44076c: movdqa xmm3, xmm4
440770: add r10, 0x10
440774: jg 0x440810
44077a: movdqa xmm1, xmmword ptr [rsi + rcx]
44077f: movdqa xmm2, xmmword ptr [rdi + rcx]
440784: movdqa xmm4, xmm2
440788: psrldq xmm3, 0xf
44078d: pslldq xmm2, 1
440792: por xmm2, xmm3
440796: movdqa xmm8, xmm1
44079b: movdqa xmm9, xmm6
4407a0: movdqa xmm10, xmm2
4407a5: movdqa xmm11, xmm6
4407aa: pcmpgtb xmm8, xmm5
4407af: pcmpgtb xmm9, xmm1
4407b4: pcmpgtb xmm10, xmm5
4407b9: pcmpgtb xmm11, xmm2
4407be: pand xmm8, xmm9
4407c3: pand xmm10, xmm11
4407c8: pand xmm8, xmm7
4407cd: pand xmm10, xmm7
4407d2: por xmm1, xmm8
4407d7: por xmm2, xmm10
4407dc: pcmpeqb xmm0, xmm1
4407e0: pcmpeqb xmm1, xmm2
4407e4: psubb xmm1, xmm0
4407e8: pmovmskb edx, xmm1
4407ec: sub edx, 0xffff
4407f2: jne 0x4408a0
4407f8: add rcx, 0x10
4407fc: movdqa xmm3, xmm4
440800: jmp 0x4406e0
440805: nop word ptr cs:[rax + rax]
440810: pcmpeqb xmm0, xmm3
440814: pmovmskb edx, xmm0
440818: test edx, 0x8000
44081e: jne 0x440830
440820: pxor xmm0, xmm0
440824: sub r10, 0x1000
44082b: jmp 0x4406ea
440830: movdqa xmm1, xmmword ptr [rsi + rcx]
440835: psrldq xmm3, 0xf
44083a: psrldq xmm0, 0xf
44083f: nop 
440840: movdqa xmm8, xmm1
440845: movdqa xmm9, xmm6
44084a: movdqa xmm10, xmm3
44084f: movdqa xmm11, xmm6
440854: pcmpgtb xmm8, xmm5
440859: pcmpgtb xmm9, xmm1
44085e: pcmpgtb xmm10, xmm5
440863: pcmpgtb xmm11, xmm3
440868: pand xmm8, xmm9
44086d: pand xmm10, xmm11
440872: pand xmm8, xmm7
440877: pand xmm10, xmm7
44087c: por xmm1, xmm8
440881: por xmm3, xmm10
440886: pcmpeqb xmm1, xmm3
44088a: psubb xmm1, xmm0
44088e: pmovmskb edx, xmm1
440892: not edx
440894: nop word ptr cs:[rax + rax]
44089f: nop 
4408a0: lea rax, [r9 + rcx - 0x10]
4408a5: lea rdi, [rdi + rax]
4408a9: lea rsi, [rsi + rcx]
4408ad: test r8d, r8d
4408b0: je 0x4408c0
4408b2: xchg rdi, rsi
4408b5: nop word ptr cs:[rax + rax]
4408c0: bsf rdx, rdx
4408c4: movzx ecx, byte ptr [rsi + rdx]
4408c8: movzx eax, byte ptr [rdi + rdx]
4408cc: lea rdx, [rip + 0x5b12d]
4408d3: mov ecx, dword ptr [rdx + rcx*4]
4408d6: mov eax, dword ptr [rdx + rax*4]
4408d9: sub eax, ecx
4408db: ret 
4408dc: xor eax, eax
4408de: ret 
4408df: nop 
4408e0: movzx ecx, byte ptr [rsi]
4408e3: movzx eax, byte ptr [rdi]
4408e6: lea rdx, [rip + 0x5b113]
4408ed: mov ecx, dword ptr [rdx + rcx*4]
4408f0: mov eax, dword ptr [rdx + rax*4]
4408f3: sub eax, ecx
4408f5: ret 
4408f6: nop word ptr cs:[rax + rax]
440900: endbr64 
440904: mov rax, 0xffffffffffffffb0
44090b: mov rdx, qword ptr fs:[rax]
44090f: nop dword ptr [rax + rax]
440914: nop word ptr cs:[rax + rax]
44091f: nop 
440920: endbr64 
440924: mov rax, qword ptr [rdx]
440927: test dword ptr [rax + 0x278], 1
440931: jne 0x44efc0
440937: mov ecx, esi
440939: mov eax, edi
44093b: and rcx, 0x3f
44093f: and rax, 0x3f
440943: movdqa xmm5, xmmword ptr [rip + 0x57975]
44094b: movdqa xmm6, xmmword ptr [rip + 0x5797d]
440953: movdqa xmm7, xmmword ptr [rip + 0x57985]
44095b: cmp ecx, 0x30
44095e: ja 0x4409f0
440964: cmp eax, 0x30
440967: ja 0x4409f0
44096d: movlpd xmm1, qword ptr [rdi]
440971: movlpd xmm2, qword ptr [rsi]
440975: movhpd xmm1, qword ptr [rdi + 8]
44097a: movhpd xmm2, qword ptr [rsi + 8]
44097f: movdqa xmm8, xmm1
440984: movdqa xmm9, xmm6
440989: movdqa xmm10, xmm2
44098e: movdqa xmm11, xmm6
440993: pcmpgtb xmm8, xmm5
440998: pcmpgtb xmm9, xmm1
44099d: pcmpgtb xmm10, xmm5
4409a2: pcmpgtb xmm11, xmm2
4409a7: pand xmm8, xmm9
4409ac: pand xmm10, xmm11
4409b1: pand xmm8, xmm7
4409b6: pand xmm10, xmm7
4409bb: por xmm1, xmm8
4409c0: por xmm2, xmm10
4409c5: pxor xmm0, xmm0
4409c9: pcmpeqb xmm0, xmm1
4409cd: pcmpeqb xmm1, xmm2
4409d1: psubb xmm1, xmm0
4409d5: pmovmskb edx, xmm1
4409d9: sub edx, 0xffff
4409df: jne 0x442a20
4409e5: add rsi, 0x10
4409e9: add rdi, 0x10
4409ed: nop dword ptr [rax]
4409f0: and rsi, 0xfffffffffffffff0
4409f4: and rdi, 0xfffffffffffffff0
4409f8: mov edx, 0xffff
4409fd: xor r8d, r8d
440a00: and ecx, 0xf
440a03: and eax, 0xf
440a06: cmp ecx, eax
440a08: je 0x440a30
440a0a: ja 0x440a13
440a0c: mov r8d, edx
440a0f: xchg ecx, eax
440a10: xchg rdi, rsi
440a13: lea r9, [rax + 0xf]
440a17: sub r9, rcx
440a1a: lea r10, [rip + 0x5790f]
440a21: movsxd r9, dword ptr [r10 + r9*4]
440a25: lea r10, [r10 + r9]
440a29: notrack jmp r10
440a2d: nop dword ptr [rax]
440a30: movdqa xmm1, xmmword ptr [rsi]
440a34: pxor xmm0, xmm0
440a38: pcmpeqb xmm0, xmm1
440a3c: movdqa xmm2, xmmword ptr [rdi]
440a40: movdqa xmm8, xmm1
440a45: movdqa xmm9, xmm6
440a4a: movdqa xmm10, xmm2
440a4f: movdqa xmm11, xmm6
440a54: pcmpgtb xmm8, xmm5
440a59: pcmpgtb xmm9, xmm1
440a5e: pcmpgtb xmm10, xmm5
440a63: pcmpgtb xmm11, xmm2
440a68: pand xmm8, xmm9
440a6d: pand xmm10, xmm11
440a72: pand xmm8, xmm7
440a77: pand xmm10, xmm7
440a7c: por xmm1, xmm8
440a81: por xmm2, xmm10
440a86: pcmpeqb xmm1, xmm2
440a8a: psubb xmm1, xmm0
440a8e: pmovmskb r9d, xmm1
440a93: shr edx, cl
440a95: shr r9d, cl
440a98: sub edx, r9d
440a9b: jne 0x442a05
440aa1: mov rcx, 0x10
440aa8: mov r9, 0x10
440aaf: pxor xmm0, xmm0
440ab3: nop word ptr cs:[rax + rax]
440abe: nop 
440ac0: movdqa xmm1, xmmword ptr [rsi + rcx]
440ac5: movdqa xmm2, xmmword ptr [rdi + rcx]
440aca: movdqa xmm8, xmm1
440acf: movdqa xmm9, xmm6
440ad4: movdqa xmm10, xmm2
440ad9: movdqa xmm11, xmm6
440ade: pcmpgtb xmm8, xmm5
440ae3: pcmpgtb xmm9, xmm1
440ae8: pcmpgtb xmm10, xmm5
440aed: pcmpgtb xmm11, xmm2
440af2: pand xmm8, xmm9
440af7: pand xmm10, xmm11
440afc: pand xmm8, xmm7
440b01: pand xmm10, xmm7
440b06: por xmm1, xmm8
440b0b: por xmm2, xmm10
440b10: pcmpeqb xmm0, xmm1
440b14: pcmpeqb xmm1, xmm2
440b18: psubb xmm1, xmm0
440b1c: pmovmskb edx, xmm1
440b20: sub edx, 0xffff
440b26: jne 0x442a00
440b2c: add rcx, 0x10
440b30: movdqa xmm1, xmmword ptr [rsi + rcx]
440b35: movdqa xmm2, xmmword ptr [rdi + rcx]
440b3a: movdqa xmm8, xmm1
440b3f: movdqa xmm9, xmm6
440b44: movdqa xmm10, xmm2
440b49: movdqa xmm11, xmm6
440b4e: pcmpgtb xmm8, xmm5
440b53: pcmpgtb xmm9, xmm1
440b58: pcmpgtb xmm10, xmm5
440b5d: pcmpgtb xmm11, xmm2
440b62: pand xmm8, xmm9
440b67: pand xmm10, xmm11
440b6c: pand xmm8, xmm7
440b71: pand xmm10, xmm7
440b76: por xmm1, xmm8
440b7b: por xmm2, xmm10
440b80: pcmpeqb xmm0, xmm1
440b84: pcmpeqb xmm1, xmm2
440b88: psubb xmm1, xmm0
440b8c: pmovmskb edx, xmm1
440b90: sub edx, 0xffff
440b96: jne 0x442a00
440b9c: add rcx, 0x10
440ba0: jmp 0x440ac0
440ba5: nop word ptr cs:[rax + rax]
440bb0: pxor xmm0, xmm0
440bb4: movdqa xmm2, xmmword ptr [rdi]
440bb8: movdqa xmm1, xmmword ptr [rsi]
440bbc: pcmpeqb xmm0, xmm1
440bc0: pslldq xmm2, 0xf
440bc5: movdqa xmm8, xmm1
440bca: movdqa xmm9, xmm6
440bcf: movdqa xmm10, xmm2
440bd4: movdqa xmm11, xmm6
440bd9: pcmpgtb xmm8, xmm5
440bde: pcmpgtb xmm9, xmm1
440be3: pcmpgtb xmm10, xmm5
440be8: pcmpgtb xmm11, xmm2
440bed: pand xmm8, xmm9
440bf2: pand xmm10, xmm11
440bf7: pand xmm8, xmm7
440bfc: pand xmm10, xmm7
440c01: por xmm1, xmm8
440c06: por xmm2, xmm10
440c0b: pcmpeqb xmm2, xmm1
440c0f: psubb xmm2, xmm0
440c13: pmovmskb r9d, xmm2
440c18: shr edx, cl
440c1a: shr r9d, cl
440c1d: sub edx, r9d
440c20: jne 0x442a05
440c26: movdqa xmm3, xmmword ptr [rdi]
440c2a: pxor xmm0, xmm0
440c2e: mov rcx, 0x10
440c35: mov r9d, 1
440c3b: lea r10, [rdi + 1]
440c3f: and r10, 0xfff
440c46: sub r10, 0x1000
440c4d: nop dword ptr [rax]
440c50: add r10, 0x10
440c54: jg 0x440d70
440c5a: movdqa xmm1, xmmword ptr [rsi + rcx]
440c5f: movdqa xmm2, xmmword ptr [rdi + rcx]
440c64: movdqa xmm4, xmm2
440c68: palignr xmm2, xmm3, 1
440c6e: movdqa xmm8, xmm1
440c73: movdqa xmm9, xmm6
440c78: movdqa xmm10, xmm2
440c7d: movdqa xmm11, xmm6
440c82: pcmpgtb xmm8, xmm5
440c87: pcmpgtb xmm9, xmm1
440c8c: pcmpgtb xmm10, xmm5
440c91: pcmpgtb xmm11, xmm2
440c96: pand xmm8, xmm9
440c9b: pand xmm10, xmm11
440ca0: pand xmm8, xmm7
440ca5: pand xmm10, xmm7
440caa: por xmm1, xmm8
440caf: por xmm2, xmm10
440cb4: pcmpeqb xmm0, xmm1
440cb8: pcmpeqb xmm1, xmm2
440cbc: psubb xmm1, xmm0
440cc0: pmovmskb edx, xmm1
440cc4: sub edx, 0xffff
440cca: jne 0x442a00
440cd0: add rcx, 0x10
440cd4: movdqa xmm3, xmm4
440cd8: add r10, 0x10
440cdc: jg 0x440d70
440ce2: movdqa xmm1, xmmword ptr [rsi + rcx]
440ce7: movdqa xmm2, xmmword ptr [rdi + rcx]
440cec: movdqa xmm4, xmm2
440cf0: palignr xmm2, xmm3, 1
440cf6: movdqa xmm8, xmm1
440cfb: movdqa xmm9, xmm6
440d00: movdqa xmm10, xmm2
440d05: movdqa xmm11, xmm6
440d0a: pcmpgtb xmm8, xmm5
440d0f: pcmpgtb xmm9, xmm1
440d14: pcmpgtb xmm10, xmm5
440d19: pcmpgtb xmm11, xmm2
440d1e: pand xmm8, xmm9
440d23: pand xmm10, xmm11
440d28: pand xmm8, xmm7
440d2d: pand xmm10, xmm7
440d32: por xmm1, xmm8
440d37: por xmm2, xmm10
440d3c: pcmpeqb xmm0, xmm1
440d40: pcmpeqb xmm1, xmm2
440d44: psubb xmm1, xmm0
440d48: pmovmskb edx, xmm1
440d4c: sub edx, 0xffff
440d52: jne 0x442a00
440d58: add rcx, 0x10
440d5c: movdqa xmm3, xmm4
440d60: jmp 0x440c50
440d65: nop word ptr cs:[rax + rax]
440d70: pcmpeqb xmm0, xmm3
440d74: pmovmskb edx, xmm0
440d78: test edx, 0xfffe
440d7e: jne 0x440d90
440d80: pxor xmm0, xmm0
440d84: sub r10, 0x1000
440d8b: jmp 0x440c5a
440d90: movdqa xmm1, xmmword ptr [rsi + rcx]
440d95: psrldq xmm0, 1
440d9a: psrldq xmm3, 1
440d9f: jmp 0x4429a0
440da4: nop word ptr cs:[rax + rax]
440daf: nop 
440db0: pxor xmm0, xmm0
440db4: movdqa xmm2, xmmword ptr [rdi]
440db8: movdqa xmm1, xmmword ptr [rsi]
440dbc: pcmpeqb xmm0, xmm1
440dc0: pslldq xmm2, 0xe
440dc5: movdqa xmm8, xmm1
440dca: movdqa xmm9, xmm6
440dcf: movdqa xmm10, xmm2
440dd4: movdqa xmm11, xmm6
440dd9: pcmpgtb xmm8, xmm5
440dde: pcmpgtb xmm9, xmm1
440de3: pcmpgtb xmm10, xmm5
440de8: pcmpgtb xmm11, xmm2
440ded: pand xmm8, xmm9
440df2: pand xmm10, xmm11
440df7: pand xmm8, xmm7
440dfc: pand xmm10, xmm7
440e01: por xmm1, xmm8
440e06: por xmm2, xmm10
440e0b: pcmpeqb xmm2, xmm1
440e0f: psubb xmm2, xmm0
440e13: pmovmskb r9d, xmm2
440e18: shr edx, cl
440e1a: shr r9d, cl
440e1d: sub edx, r9d
440e20: jne 0x442a05
440e26: movdqa xmm3, xmmword ptr [rdi]
440e2a: pxor xmm0, xmm0
440e2e: mov rcx, 0x10
440e35: mov r9d, 2
440e3b: lea r10, [rdi + 2]
440e3f: and r10, 0xfff
440e46: sub r10, 0x1000
440e4d: nop dword ptr [rax]
440e50: add r10, 0x10
440e54: jg 0x440f70
440e5a: movdqa xmm1, xmmword ptr [rsi + rcx]
440e5f: movdqa xmm2, xmmword ptr [rdi + rcx]
440e64: movdqa xmm4, xmm2
440e68: palignr xmm2, xmm3, 2
440e6e: movdqa xmm8, xmm1
440e73: movdqa xmm9, xmm6
440e78: movdqa xmm10, xmm2
440e7d: movdqa xmm11, xmm6
440e82: pcmpgtb xmm8, xmm5
440e87: pcmpgtb xmm9, xmm1
440e8c: pcmpgtb xmm10, xmm5
440e91: pcmpgtb xmm11, xmm2
440e96: pand xmm8, xmm9
440e9b: pand xmm10, xmm11
440ea0: pand xmm8, xmm7
440ea5: pand xmm10, xmm7
440eaa: por xmm1, xmm8
440eaf: por xmm2, xmm10
440eb4: pcmpeqb xmm0, xmm1
440eb8: pcmpeqb xmm1, xmm2
440ebc: psubb xmm1, xmm0
440ec0: pmovmskb edx, xmm1
440ec4: sub edx, 0xffff
440eca: jne 0x442a00
440ed0: add rcx, 0x10
440ed4: movdqa xmm3, xmm4
440ed8: add r10, 0x10
440edc: jg 0x440f70
440ee2: movdqa xmm1, xmmword ptr [rsi + rcx]
440ee7: movdqa xmm2, xmmword ptr [rdi + rcx]
440eec: movdqa xmm4, xmm2
440ef0: palignr xmm2, xmm3, 2
440ef6: movdqa xmm8, xmm1
440efb: movdqa xmm9, xmm6
440f00: movdqa xmm10, xmm2
440f05: movdqa xmm11, xmm6
440f0a: pcmpgtb xmm8, xmm5
440f0f: pcmpgtb xmm9, xmm1
440f14: pcmpgtb xmm10, xmm5
440f19: pcmpgtb xmm11, xmm2
440f1e: pand xmm8, xmm9
440f23: pand xmm10, xmm11
440f28: pand xmm8, xmm7
440f2d: pand xmm10, xmm7
440f32: por xmm1, xmm8
440f37: por xmm2, xmm10
440f3c: pcmpeqb xmm0, xmm1
440f40: pcmpeqb xmm1, xmm2
440f44: psubb xmm1, xmm0
440f48: pmovmskb edx, xmm1
440f4c: sub edx, 0xffff
440f52: jne 0x442a00
440f58: add rcx, 0x10
440f5c: movdqa xmm3, xmm4
440f60: jmp 0x440e50
440f65: nop word ptr cs:[rax + rax]
440f70: pcmpeqb xmm0, xmm3
440f74: pmovmskb edx, xmm0
440f78: test edx, 0xfffc
440f7e: jne 0x440f90
440f80: pxor xmm0, xmm0
440f84: sub r10, 0x1000
440f8b: jmp 0x440e5a
440f90: movdqa xmm1, xmmword ptr [rsi + rcx]
440f95: psrldq xmm0, 2
440f9a: psrldq xmm3, 2
440f9f: jmp 0x4429a0
440fa4: nop word ptr cs:[rax + rax]
440faf: nop 
440fb0: pxor xmm0, xmm0
440fb4: movdqa xmm2, xmmword ptr [rdi]
440fb8: movdqa xmm1, xmmword ptr [rsi]
440fbc: pcmpeqb xmm0, xmm1
440fc0: pslldq xmm2, 0xd
440fc5: movdqa xmm8, xmm1
440fca: movdqa xmm9, xmm6
440fcf: movdqa xmm10, xmm2
440fd4: movdqa xmm11, xmm6
440fd9: pcmpgtb xmm8, xmm5
440fde: pcmpgtb xmm9, xmm1
440fe3: pcmpgtb xmm10, xmm5
440fe8: pcmpgtb xmm11, xmm2
440fed: pand xmm8, xmm9
440ff2: pand xmm10, xmm11
440ff7: pand xmm8, xmm7
440ffc: pand xmm10, xmm7
441001: por xmm1, xmm8
441006: por xmm2, xmm10
44100b: pcmpeqb xmm2, xmm1
44100f: psubb xmm2, xmm0
441013: pmovmskb r9d, xmm2
441018: shr edx, cl
44101a: shr r9d, cl
44101d: sub edx, r9d
441020: jne 0x442a05
441026: movdqa xmm3, xmmword ptr [rdi]
44102a: pxor xmm0, xmm0
44102e: mov rcx, 0x10
441035: mov r9d, 3
44103b: lea r10, [rdi + 3]
44103f: and r10, 0xfff
441046: sub r10, 0x1000
44104d: nop dword ptr [rax]
441050: add r10, 0x10
441054: jg 0x441170
44105a: movdqa xmm1, xmmword ptr [rsi + rcx]
44105f: movdqa xmm2, xmmword ptr [rdi + rcx]
441064: movdqa xmm4, xmm2
441068: palignr xmm2, xmm3, 3
44106e: movdqa xmm8, xmm1
441073: movdqa xmm9, xmm6
441078: movdqa xmm10, xmm2
44107d: movdqa xmm11, xmm6
441082: pcmpgtb xmm8, xmm5
441087: pcmpgtb xmm9, xmm1
44108c: pcmpgtb xmm10, xmm5
441091: pcmpgtb xmm11, xmm2
441096: pand xmm8, xmm9
44109b: pand xmm10, xmm11
4410a0: pand xmm8, xmm7
4410a5: pand xmm10, xmm7
4410aa: por xmm1, xmm8
4410af: por xmm2, xmm10
4410b4: pcmpeqb xmm0, xmm1
4410b8: pcmpeqb xmm1, xmm2
4410bc: psubb xmm1, xmm0
4410c0: pmovmskb edx, xmm1
4410c4: sub edx, 0xffff
4410ca: jne 0x442a00
4410d0: add rcx, 0x10
4410d4: movdqa xmm3, xmm4
4410d8: add r10, 0x10
4410dc: jg 0x441170
4410e2: movdqa xmm1, xmmword ptr [rsi + rcx]
4410e7: movdqa xmm2, xmmword ptr [rdi + rcx]
4410ec: movdqa xmm4, xmm2
4410f0: palignr xmm2, xmm3, 3
4410f6: movdqa xmm8, xmm1
4410fb: movdqa xmm9, xmm6
441100: movdqa xmm10, xmm2
441105: movdqa xmm11, xmm6
44110a: pcmpgtb xmm8, xmm5
44110f: pcmpgtb xmm9, xmm1
441114: pcmpgtb xmm10, xmm5
441119: pcmpgtb xmm11, xmm2
44111e: pand xmm8, xmm9
441123: pand xmm10, xmm11
441128: pand xmm8, xmm7
44112d: pand xmm10, xmm7
441132: por xmm1, xmm8
441137: por xmm2, xmm10
44113c: pcmpeqb xmm0, xmm1
441140: pcmpeqb xmm1, xmm2
441144: psubb xmm1, xmm0
441148: pmovmskb edx, xmm1
44114c: sub edx, 0xffff
441152: jne 0x442a00
441158: add rcx, 0x10
44115c: movdqa xmm3, xmm4
441160: jmp 0x441050
441165: nop word ptr cs:[rax + rax]
441170: pcmpeqb xmm0, xmm3
441174: pmovmskb edx, xmm0
441178: test edx, 0xfff8
44117e: jne 0x441190
441180: pxor xmm0, xmm0
441184: sub r10, 0x1000
44118b: jmp 0x44105a
441190: movdqa xmm1, xmmword ptr [rsi + rcx]
441195: psrldq xmm0, 3
44119a: psrldq xmm3, 3
44119f: jmp 0x4429a0
4411a4: nop word ptr cs:[rax + rax]
4411af: nop 
4411b0: pxor xmm0, xmm0
4411b4: movdqa xmm2, xmmword ptr [rdi]
4411b8: movdqa xmm1, xmmword ptr [rsi]
4411bc: pcmpeqb xmm0, xmm1
4411c0: pslldq xmm2, 0xc
4411c5: movdqa xmm8, xmm1
4411ca: movdqa xmm9, xmm6
4411cf: movdqa xmm10, xmm2
4411d4: movdqa xmm11, xmm6
4411d9: pcmpgtb xmm8, xmm5
4411de: pcmpgtb xmm9, xmm1
4411e3: pcmpgtb xmm10, xmm5
4411e8: pcmpgtb xmm11, xmm2
4411ed: pand xmm8, xmm9
4411f2: pand xmm10, xmm11
4411f7: pand xmm8, xmm7
4411fc: pand xmm10, xmm7
441201: por xmm1, xmm8
441206: por xmm2, xmm10
44120b: pcmpeqb xmm2, xmm1
44120f: psubb xmm2, xmm0
441213: pmovmskb r9d, xmm2
441218: shr edx, cl
44121a: shr r9d, cl
44121d: sub edx, r9d
441220: jne 0x442a05
441226: movdqa xmm3, xmmword ptr [rdi]
44122a: pxor xmm0, xmm0
44122e: mov rcx, 0x10
441235: mov r9d, 4
44123b: lea r10, [rdi + 4]
44123f: and r10, 0xfff
441246: sub r10, 0x1000
44124d: nop dword ptr [rax]
441250: add r10, 0x10
441254: jg 0x441370
44125a: movdqa xmm1, xmmword ptr [rsi + rcx]
44125f: movdqa xmm2, xmmword ptr [rdi + rcx]
441264: movdqa xmm4, xmm2
441268: palignr xmm2, xmm3, 4
44126e: movdqa xmm8, xmm1
441273: movdqa xmm9, xmm6
441278: movdqa xmm10, xmm2
44127d: movdqa xmm11, xmm6
441282: pcmpgtb xmm8, xmm5
441287: pcmpgtb xmm9, xmm1
44128c: pcmpgtb xmm10, xmm5
441291: pcmpgtb xmm11, xmm2
441296: pand xmm8, xmm9
44129b: pand xmm10, xmm11
4412a0: pand xmm8, xmm7
4412a5: pand xmm10, xmm7
4412aa: por xmm1, xmm8
4412af: por xmm2, xmm10
4412b4: pcmpeqb xmm0, xmm1
4412b8: pcmpeqb xmm1, xmm2
4412bc: psubb xmm1, xmm0
4412c0: pmovmskb edx, xmm1
4412c4: sub edx, 0xffff
4412ca: jne 0x442a00
4412d0: add rcx, 0x10
4412d4: movdqa xmm3, xmm4
4412d8: add r10, 0x10
4412dc: jg 0x441370
4412e2: movdqa xmm1, xmmword ptr [rsi + rcx]
4412e7: movdqa xmm2, xmmword ptr [rdi + rcx]
4412ec: movdqa xmm4, xmm2
4412f0: palignr xmm2, xmm3, 4
4412f6: movdqa xmm8, xmm1
4412fb: movdqa xmm9, xmm6
441300: movdqa xmm10, xmm2
441305: movdqa xmm11, xmm6
44130a: pcmpgtb xmm8, xmm5
44130f: pcmpgtb xmm9, xmm1
441314: pcmpgtb xmm10, xmm5
441319: pcmpgtb xmm11, xmm2
44131e: pand xmm8, xmm9
441323: pand xmm10, xmm11
441328: pand xmm8, xmm7
44132d: pand xmm10, xmm7
441332: por xmm1, xmm8
441337: por xmm2, xmm10
44133c: pcmpeqb xmm0, xmm1
441340: pcmpeqb xmm1, xmm2
441344: psubb xmm1, xmm0
441348: pmovmskb edx, xmm1
44134c: sub edx, 0xffff
441352: jne 0x442a00
441358: add rcx, 0x10
44135c: movdqa xmm3, xmm4
441360: jmp 0x441250
441365: nop word ptr cs:[rax + rax]
441370: pcmpeqb xmm0, xmm3
441374: pmovmskb edx, xmm0
441378: test edx, 0xfff0
44137e: jne 0x441390
441380: pxor xmm0, xmm0
441384: sub r10, 0x1000
44138b: jmp 0x44125a
441390: movdqa xmm1, xmmword ptr [rsi + rcx]
441395: psrldq xmm0, 4
44139a: psrldq xmm3, 4
44139f: jmp 0x4429a0
4413a4: nop word ptr cs:[rax + rax]
4413af: nop 
4413b0: pxor xmm0, xmm0
4413b4: movdqa xmm2, xmmword ptr [rdi]
4413b8: movdqa xmm1, xmmword ptr [rsi]
4413bc: pcmpeqb xmm0, xmm1
4413c0: pslldq xmm2, 0xb
4413c5: movdqa xmm8, xmm1
4413ca: movdqa xmm9, xmm6
4413cf: movdqa xmm10, xmm2
4413d4: movdqa xmm11, xmm6
4413d9: pcmpgtb xmm8, xmm5
4413de: pcmpgtb xmm9, xmm1
4413e3: pcmpgtb xmm10, xmm5
4413e8: pcmpgtb xmm11, xmm2
4413ed: pand xmm8, xmm9
4413f2: pand xmm10, xmm11
4413f7: pand xmm8, xmm7
4413fc: pand xmm10, xmm7
441401: por xmm1, xmm8
441406: por xmm2, xmm10
44140b: pcmpeqb xmm2, xmm1
44140f: psubb xmm2, xmm0
441413: pmovmskb r9d, xmm2
441418: shr edx, cl
44141a: shr r9d, cl
44141d: sub edx, r9d
441420: jne 0x442a05
441426: movdqa xmm3, xmmword ptr [rdi]
44142a: pxor xmm0, xmm0
44142e: mov rcx, 0x10
441435: mov r9d, 5
44143b: lea r10, [rdi + 5]
44143f: and r10, 0xfff
441446: sub r10, 0x1000
44144d: nop dword ptr [rax]
441450: add r10, 0x10
441454: jg 0x441570
44145a: movdqa xmm1, xmmword ptr [rsi + rcx]
44145f: movdqa xmm2, xmmword ptr [rdi + rcx]
441464: movdqa xmm4, xmm2
441468: palignr xmm2, xmm3, 5
44146e: movdqa xmm8, xmm1
441473: movdqa xmm9, xmm6
441478: movdqa xmm10, xmm2
44147d: movdqa xmm11, xmm6
441482: pcmpgtb xmm8, xmm5
441487: pcmpgtb xmm9, xmm1
44148c: pcmpgtb xmm10, xmm5
441491: pcmpgtb xmm11, xmm2
441496: pand xmm8, xmm9
44149b: pand xmm10, xmm11
4414a0: pand xmm8, xmm7
4414a5: pand xmm10, xmm7
4414aa: por xmm1, xmm8
4414af: por xmm2, xmm10
4414b4: pcmpeqb xmm0, xmm1
4414b8: pcmpeqb xmm1, xmm2
4414bc: psubb xmm1, xmm0
4414c0: pmovmskb edx, xmm1
4414c4: sub edx, 0xffff
4414ca: jne 0x442a00
4414d0: add rcx, 0x10
4414d4: movdqa xmm3, xmm4
4414d8: add r10, 0x10
4414dc: jg 0x441570
4414e2: movdqa xmm1, xmmword ptr [rsi + rcx]
4414e7: movdqa xmm2, xmmword ptr [rdi + rcx]
4414ec: movdqa xmm4, xmm2
4414f0: palignr xmm2, xmm3, 5
4414f6: movdqa xmm8, xmm1
4414fb: movdqa xmm9, xmm6
441500: movdqa xmm10, xmm2
441505: movdqa xmm11, xmm6
44150a: pcmpgtb xmm8, xmm5
44150f: pcmpgtb xmm9, xmm1
441514: pcmpgtb xmm10, xmm5
441519: pcmpgtb xmm11, xmm2
44151e: pand xmm8, xmm9
441523: pand xmm10, xmm11
441528: pand xmm8, xmm7
44152d: pand xmm10, xmm7
441532: por xmm1, xmm8
441537: por xmm2, xmm10
44153c: pcmpeqb xmm0, xmm1
441540: pcmpeqb xmm1, xmm2
441544: psubb xmm1, xmm0
441548: pmovmskb edx, xmm1
44154c: sub edx, 0xffff
441552: jne 0x442a00
441558: add rcx, 0x10
44155c: movdqa xmm3, xmm4
441560: jmp 0x441450
441565: nop word ptr cs:[rax + rax]
441570: pcmpeqb xmm0, xmm3
441574: pmovmskb edx, xmm0
441578: test edx, 0xffe0
44157e: jne 0x441590
441580: pxor xmm0, xmm0
441584: sub r10, 0x1000
44158b: jmp 0x44145a
441590: movdqa xmm1, xmmword ptr [rsi + rcx]
441595: psrldq xmm0, 5
44159a: psrldq xmm3, 5
44159f: jmp 0x4429a0
4415a4: nop word ptr cs:[rax + rax]
4415af: nop 
4415b0: pxor xmm0, xmm0
4415b4: movdqa xmm2, xmmword ptr [rdi]
4415b8: movdqa xmm1, xmmword ptr [rsi]
4415bc: pcmpeqb xmm0, xmm1
4415c0: pslldq xmm2, 0xa
4415c5: movdqa xmm8, xmm1
4415ca: movdqa xmm9, xmm6
4415cf: movdqa xmm10, xmm2
4415d4: movdqa xmm11, xmm6
4415d9: pcmpgtb xmm8, xmm5
4415de: pcmpgtb xmm9, xmm1
4415e3: pcmpgtb xmm10, xmm5
4415e8: pcmpgtb xmm11, xmm2
4415ed: pand xmm8, xmm9
4415f2: pand xmm10, xmm11
4415f7: pand xmm8, xmm7
4415fc: pand xmm10, xmm7
441601: por xmm1, xmm8
441606: por xmm2, xmm10
44160b: pcmpeqb xmm2, xmm1
44160f: psubb xmm2, xmm0
441613: pmovmskb r9d, xmm2
441618: shr edx, cl
44161a: shr r9d, cl
44161d: sub edx, r9d
441620: jne 0x442a05
441626: movdqa xmm3, xmmword ptr [rdi]
44162a: pxor xmm0, xmm0
44162e: mov rcx, 0x10
441635: mov r9d, 6
44163b: lea r10, [rdi + 6]
44163f: and r10, 0xfff
441646: sub r10, 0x1000
44164d: nop dword ptr [rax]
441650: add r10, 0x10
441654: jg 0x441770
44165a: movdqa xmm1, xmmword ptr [rsi + rcx]
44165f: movdqa xmm2, xmmword ptr [rdi + rcx]
441664: movdqa xmm4, xmm2
441668: palignr xmm2, xmm3, 6
44166e: movdqa xmm8, xmm1
441673: movdqa xmm9, xmm6
441678: movdqa xmm10, xmm2
44167d: movdqa xmm11, xmm6
441682: pcmpgtb xmm8, xmm5
441687: pcmpgtb xmm9, xmm1
44168c: pcmpgtb xmm10, xmm5
441691: pcmpgtb xmm11, xmm2
441696: pand xmm8, xmm9
44169b: pand xmm10, xmm11
4416a0: pand xmm8, xmm7
4416a5: pand xmm10, xmm7
4416aa: por xmm1, xmm8
4416af: por xmm2, xmm10
4416b4: pcmpeqb xmm0, xmm1
4416b8: pcmpeqb xmm1, xmm2
4416bc: psubb xmm1, xmm0
4416c0: pmovmskb edx, xmm1
4416c4: sub edx, 0xffff
4416ca: jne 0x442a00
4416d0: add rcx, 0x10
4416d4: movdqa xmm3, xmm4
4416d8: add r10, 0x10
4416dc: jg 0x441770
4416e2: movdqa xmm1, xmmword ptr [rsi + rcx]
4416e7: movdqa xmm2, xmmword ptr [rdi + rcx]
4416ec: movdqa xmm4, xmm2
4416f0: palignr xmm2, xmm3, 6
4416f6: movdqa xmm8, xmm1
4416fb: movdqa xmm9, xmm6
441700: movdqa xmm10, xmm2
441705: movdqa xmm11, xmm6
44170a: pcmpgtb xmm8, xmm5
44170f: pcmpgtb xmm9, xmm1
441714: pcmpgtb xmm10, xmm5
441719: pcmpgtb xmm11, xmm2
44171e: pand xmm8, xmm9
441723: pand xmm10, xmm11
441728: pand xmm8, xmm7
44172d: pand xmm10, xmm7
441732: por xmm1, xmm8
441737: por xmm2, xmm10
44173c: pcmpeqb xmm0, xmm1
441740: pcmpeqb xmm1, xmm2
441744: psubb xmm1, xmm0
441748: pmovmskb edx, xmm1
44174c: sub edx, 0xffff
441752: jne 0x442a00
441758: add rcx, 0x10
44175c: movdqa xmm3, xmm4
441760: jmp 0x441650
441765: nop word ptr cs:[rax + rax]
441770: pcmpeqb xmm0, xmm3
441774: pmovmskb edx, xmm0
441778: test edx, 0xffc0
44177e: jne 0x441790
441780: pxor xmm0, xmm0
441784: sub r10, 0x1000
44178b: jmp 0x44165a
441790: movdqa xmm1, xmmword ptr [rsi + rcx]
441795: psrldq xmm0, 6
44179a: psrldq xmm3, 6
44179f: jmp 0x4429a0
4417a4: nop word ptr cs:[rax + rax]
4417af: nop 
4417b0: pxor xmm0, xmm0
4417b4: movdqa xmm2, xmmword ptr [rdi]
4417b8: movdqa xmm1, xmmword ptr [rsi]
4417bc: pcmpeqb xmm0, xmm1
4417c0: pslldq xmm2, 9
4417c5: movdqa xmm8, xmm1
4417ca: movdqa xmm9, xmm6
4417cf: movdqa xmm10, xmm2
4417d4: movdqa xmm11, xmm6
4417d9: pcmpgtb xmm8, xmm5
4417de: pcmpgtb xmm9, xmm1
4417e3: pcmpgtb xmm10, xmm5
4417e8: pcmpgtb xmm11, xmm2
4417ed: pand xmm8, xmm9
4417f2: pand xmm10, xmm11
4417f7: pand xmm8, xmm7
4417fc: pand xmm10, xmm7
441801: por xmm1, xmm8
441806: por xmm2, xmm10
44180b: pcmpeqb xmm2, xmm1
44180f: psubb xmm2, xmm0
441813: pmovmskb r9d, xmm2
441818: shr edx, cl
44181a: shr r9d, cl
44181d: sub edx, r9d
441820: jne 0x442a05
441826: movdqa xmm3, xmmword ptr [rdi]
44182a: pxor xmm0, xmm0
44182e: mov rcx, 0x10
441835: mov r9d, 7
44183b: lea r10, [rdi + 7]
44183f: and r10, 0xfff
441846: sub r10, 0x1000
44184d: nop dword ptr [rax]
441850: add r10, 0x10
441854: jg 0x441970
44185a: movdqa xmm1, xmmword ptr [rsi + rcx]
44185f: movdqa xmm2, xmmword ptr [rdi + rcx]
441864: movdqa xmm4, xmm2
441868: palignr xmm2, xmm3, 7
44186e: movdqa xmm8, xmm1
441873: movdqa xmm9, xmm6
441878: movdqa xmm10, xmm2
44187d: movdqa xmm11, xmm6
441882: pcmpgtb xmm8, xmm5
441887: pcmpgtb xmm9, xmm1
44188c: pcmpgtb xmm10, xmm5
441891: pcmpgtb xmm11, xmm2
441896: pand xmm8, xmm9
44189b: pand xmm10, xmm11
4418a0: pand xmm8, xmm7
4418a5: pand xmm10, xmm7
4418aa: por xmm1, xmm8
4418af: por xmm2, xmm10
4418b4: pcmpeqb xmm0, xmm1
4418b8: pcmpeqb xmm1, xmm2
4418bc: psubb xmm1, xmm0
4418c0: pmovmskb edx, xmm1
4418c4: sub edx, 0xffff
4418ca: jne 0x442a00
4418d0: add rcx, 0x10
4418d4: movdqa xmm3, xmm4
4418d8: add r10, 0x10
4418dc: jg 0x441970
4418e2: movdqa xmm1, xmmword ptr [rsi + rcx]
4418e7: movdqa xmm2, xmmword ptr [rdi + rcx]
4418ec: movdqa xmm4, xmm2
4418f0: palignr xmm2, xmm3, 7
4418f6: movdqa xmm8, xmm1
4418fb: movdqa xmm9, xmm6
441900: movdqa xmm10, xmm2
441905: movdqa xmm11, xmm6
44190a: pcmpgtb xmm8, xmm5
44190f: pcmpgtb xmm9, xmm1
441914: pcmpgtb xmm10, xmm5
441919: pcmpgtb xmm11, xmm2
44191e: pand xmm8, xmm9
441923: pand xmm10, xmm11
441928: pand xmm8, xmm7
44192d: pand xmm10, xmm7
441932: por xmm1, xmm8
441937: por xmm2, xmm10
44193c: pcmpeqb xmm0, xmm1
441940: pcmpeqb xmm1, xmm2
441944: psubb xmm1, xmm0
441948: pmovmskb edx, xmm1
44194c: sub edx, 0xffff
441952: jne 0x442a00
441958: add rcx, 0x10
44195c: movdqa xmm3, xmm4
441960: jmp 0x441850
441965: nop word ptr cs:[rax + rax]
441970: pcmpeqb xmm0, xmm3
441974: pmovmskb edx, xmm0
441978: test edx, 0xff80
44197e: jne 0x441990
441980: pxor xmm0, xmm0
441984: sub r10, 0x1000
44198b: jmp 0x44185a
441990: movdqa xmm1, xmmword ptr [rsi + rcx]
441995: psrldq xmm0, 7
44199a: psrldq xmm3, 7
44199f: jmp 0x4429a0
4419a4: nop word ptr cs:[rax + rax]
4419af: nop 
4419b0: pxor xmm0, xmm0
4419b4: movdqa xmm2, xmmword ptr [rdi]
4419b8: movdqa xmm1, xmmword ptr [rsi]
4419bc: pcmpeqb xmm0, xmm1
4419c0: pslldq xmm2, 8
4419c5: movdqa xmm8, xmm1
4419ca: movdqa xmm9, xmm6
4419cf: movdqa xmm10, xmm2
4419d4: movdqa xmm11, xmm6
4419d9: pcmpgtb xmm8, xmm5
4419de: pcmpgtb xmm9, xmm1
4419e3: pcmpgtb xmm10, xmm5
4419e8: pcmpgtb xmm11, xmm2
4419ed: pand xmm8, xmm9
4419f2: pand xmm10, xmm11
4419f7: pand xmm8, xmm7
4419fc: pand xmm10, xmm7
441a01: por xmm1, xmm8
441a06: por xmm2, xmm10
441a0b: pcmpeqb xmm2, xmm1
441a0f: psubb xmm2, xmm0
441a13: pmovmskb r9d, xmm2
441a18: shr edx, cl
441a1a: shr r9d, cl
441a1d: sub edx, r9d
441a20: jne 0x442a05
441a26: movdqa xmm3, xmmword ptr [rdi]
441a2a: pxor xmm0, xmm0
441a2e: mov rcx, 0x10
441a35: mov r9d, 8
441a3b: lea r10, [rdi + 8]
441a3f: and r10, 0xfff
441a46: sub r10, 0x1000
441a4d: nop dword ptr [rax]
441a50: add r10, 0x10
441a54: jg 0x441b70
441a5a: movdqa xmm1, xmmword ptr [rsi + rcx]
441a5f: movdqa xmm2, xmmword ptr [rdi + rcx]
441a64: movdqa xmm4, xmm2
441a68: palignr xmm2, xmm3, 8
441a6e: movdqa xmm8, xmm1
441a73: movdqa xmm9, xmm6
441a78: movdqa xmm10, xmm2
441a7d: movdqa xmm11, xmm6
441a82: pcmpgtb xmm8, xmm5
441a87: pcmpgtb xmm9, xmm1
441a8c: pcmpgtb xmm10, xmm5
441a91: pcmpgtb xmm11, xmm2
441a96: pand xmm8, xmm9
441a9b: pand xmm10, xmm11
441aa0: pand xmm8, xmm7
441aa5: pand xmm10, xmm7
441aaa: por xmm1, xmm8
441aaf: por xmm2, xmm10
441ab4: pcmpeqb xmm0, xmm1
441ab8: pcmpeqb xmm1, xmm2
441abc: psubb xmm1, xmm0
441ac0: pmovmskb edx, xmm1
441ac4: sub edx, 0xffff
441aca: jne 0x442a00
441ad0: add rcx, 0x10
441ad4: movdqa xmm3, xmm4
441ad8: add r10, 0x10
441adc: jg 0x441b70
441ae2: movdqa xmm1, xmmword ptr [rsi + rcx]
441ae7: movdqa xmm2, xmmword ptr [rdi + rcx]
441aec: movdqa xmm4, xmm2
441af0: palignr xmm2, xmm3, 8
441af6: movdqa xmm8, xmm1
441afb: movdqa xmm9, xmm6
441b00: movdqa xmm10, xmm2
441b05: movdqa xmm11, xmm6
441b0a: pcmpgtb xmm8, xmm5
441b0f: pcmpgtb xmm9, xmm1
441b14: pcmpgtb xmm10, xmm5
441b19: pcmpgtb xmm11, xmm2
441b1e: pand xmm8, xmm9
441b23: pand xmm10, xmm11
441b28: pand xmm8, xmm7
441b2d: pand xmm10, xmm7
441b32: por xmm1, xmm8
441b37: por xmm2, xmm10
441b3c: pcmpeqb xmm0, xmm1
441b40: pcmpeqb xmm1, xmm2
441b44: psubb xmm1, xmm0
441b48: pmovmskb edx, xmm1
441b4c: sub edx, 0xffff
441b52: jne 0x442a00
441b58: add rcx, 0x10
441b5c: movdqa xmm3, xmm4
441b60: jmp 0x441a50
441b65: nop word ptr cs:[rax + rax]
441b70: pcmpeqb xmm0, xmm3
441b74: pmovmskb edx, xmm0
441b78: test edx, 0xff00
441b7e: jne 0x441b90
441b80: pxor xmm0, xmm0
441b84: sub r10, 0x1000
441b8b: jmp 0x441a5a
441b90: movdqa xmm1, xmmword ptr [rsi + rcx]
441b95: psrldq xmm0, 8
441b9a: psrldq xmm3, 8
441b9f: jmp 0x4429a0
441ba4: nop word ptr cs:[rax + rax]
441baf: nop 
441bb0: pxor xmm0, xmm0
441bb4: movdqa xmm2, xmmword ptr [rdi]
441bb8: movdqa xmm1, xmmword ptr [rsi]
441bbc: pcmpeqb xmm0, xmm1
441bc0: pslldq xmm2, 7
441bc5: movdqa xmm8, xmm1
441bca: movdqa xmm9, xmm6
441bcf: movdqa xmm10, xmm2
441bd4: movdqa xmm11, xmm6
441bd9: pcmpgtb xmm8, xmm5
441bde: pcmpgtb xmm9, xmm1
441be3: pcmpgtb xmm10, xmm5
441be8: pcmpgtb xmm11, xmm2
441bed: pand xmm8, xmm9
441bf2: pand xmm10, xmm11
441bf7: pand xmm8, xmm7
441bfc: pand xmm10, xmm7
441c01: por xmm1, xmm8
441c06: por xmm2, xmm10
441c0b: pcmpeqb xmm2, xmm1
441c0f: psubb xmm2, xmm0
441c13: pmovmskb r9d, xmm2
441c18: shr edx, cl
441c1a: shr r9d, cl
441c1d: sub edx, r9d
441c20: jne 0x442a05
441c26: movdqa xmm3, xmmword ptr [rdi]
441c2a: pxor xmm0, xmm0
441c2e: mov rcx, 0x10
441c35: mov r9d, 9
441c3b: lea r10, [rdi + 9]
441c3f: and r10, 0xfff
441c46: sub r10, 0x1000
441c4d: nop dword ptr [rax]
441c50: add r10, 0x10
441c54: jg 0x441d70
441c5a: movdqa xmm1, xmmword ptr [rsi + rcx]
441c5f: movdqa xmm2, xmmword ptr [rdi + rcx]
441c64: movdqa xmm4, xmm2
441c68: palignr xmm2, xmm3, 9
441c6e: movdqa xmm8, xmm1
441c73: movdqa xmm9, xmm6
441c78: movdqa xmm10, xmm2
441c7d: movdqa xmm11, xmm6
441c82: pcmpgtb xmm8, xmm5
441c87: pcmpgtb xmm9, xmm1
441c8c: pcmpgtb xmm10, xmm5
441c91: pcmpgtb xmm11, xmm2
441c96: pand xmm8, xmm9
441c9b: pand xmm10, xmm11
441ca0: pand xmm8, xmm7
441ca5: pand xmm10, xmm7
441caa: por xmm1, xmm8
441caf: por xmm2, xmm10
441cb4: pcmpeqb xmm0, xmm1
441cb8: pcmpeqb xmm1, xmm2
441cbc: psubb xmm1, xmm0
441cc0: pmovmskb edx, xmm1
441cc4: sub edx, 0xffff
441cca: jne 0x442a00
441cd0: add rcx, 0x10
441cd4: movdqa xmm3, xmm4
441cd8: add r10, 0x10
441cdc: jg 0x441d70
441ce2: movdqa xmm1, xmmword ptr [rsi + rcx]
441ce7: movdqa xmm2, xmmword ptr [rdi + rcx]
441cec: movdqa xmm4, xmm2
441cf0: palignr xmm2, xmm3, 9
441cf6: movdqa xmm8, xmm1
441cfb: movdqa xmm9, xmm6
441d00: movdqa xmm10, xmm2
441d05: movdqa xmm11, xmm6
441d0a: pcmpgtb xmm8, xmm5
441d0f: pcmpgtb xmm9, xmm1
441d14: pcmpgtb xmm10, xmm5
441d19: pcmpgtb xmm11, xmm2
441d1e: pand xmm8, xmm9
441d23: pand xmm10, xmm11
441d28: pand xmm8, xmm7
441d2d: pand xmm10, xmm7
441d32: por xmm1, xmm8
441d37: por xmm2, xmm10
441d3c: pcmpeqb xmm0, xmm1
441d40: pcmpeqb xmm1, xmm2
441d44: psubb xmm1, xmm0
441d48: pmovmskb edx, xmm1
441d4c: sub edx, 0xffff
441d52: jne 0x442a00
441d58: add rcx, 0x10
441d5c: movdqa xmm3, xmm4
441d60: jmp 0x441c50
441d65: nop word ptr cs:[rax + rax]
441d70: pcmpeqb xmm0, xmm3
441d74: pmovmskb edx, xmm0
441d78: test edx, 0xfe00
441d7e: jne 0x441d90
441d80: pxor xmm0, xmm0
441d84: sub r10, 0x1000
441d8b: jmp 0x441c5a
441d90: movdqa xmm1, xmmword ptr [rsi + rcx]
441d95: psrldq xmm0, 9
441d9a: psrldq xmm3, 9
441d9f: jmp 0x4429a0
441da4: nop word ptr cs:[rax + rax]
441daf: nop 
441db0: pxor xmm0, xmm0
441db4: movdqa xmm2, xmmword ptr [rdi]
441db8: movdqa xmm1, xmmword ptr [rsi]
441dbc: pcmpeqb xmm0, xmm1
441dc0: pslldq xmm2, 6
441dc5: movdqa xmm8, xmm1
441dca: movdqa xmm9, xmm6
441dcf: movdqa xmm10, xmm2
441dd4: movdqa xmm11, xmm6
441dd9: pcmpgtb xmm8, xmm5
441dde: pcmpgtb xmm9, xmm1
441de3: pcmpgtb xmm10, xmm5
441de8: pcmpgtb xmm11, xmm2
441ded: pand xmm8, xmm9
441df2: pand xmm10, xmm11
441df7: pand xmm8, xmm7
441dfc: pand xmm10, xmm7
441e01: por xmm1, xmm8
441e06: por xmm2, xmm10
441e0b: pcmpeqb xmm2, xmm1
441e0f: psubb xmm2, xmm0
441e13: pmovmskb r9d, xmm2
441e18: shr edx, cl
441e1a: shr r9d, cl
441e1d: sub edx, r9d
441e20: jne 0x442a05
441e26: movdqa xmm3, xmmword ptr [rdi]
441e2a: pxor xmm0, xmm0
441e2e: mov rcx, 0x10
441e35: mov r9d, 0xa
441e3b: lea r10, [rdi + 0xa]
441e3f: and r10, 0xfff
441e46: sub r10, 0x1000
441e4d: nop dword ptr [rax]
441e50: add r10, 0x10
441e54: jg 0x441f70
441e5a: movdqa xmm1, xmmword ptr [rsi + rcx]
441e5f: movdqa xmm2, xmmword ptr [rdi + rcx]
441e64: movdqa xmm4, xmm2
441e68: palignr xmm2, xmm3, 0xa
441e6e: movdqa xmm8, xmm1
441e73: movdqa xmm9, xmm6
441e78: movdqa xmm10, xmm2
441e7d: movdqa xmm11, xmm6
441e82: pcmpgtb xmm8, xmm5
441e87: pcmpgtb xmm9, xmm1
441e8c: pcmpgtb xmm10, xmm5
441e91: pcmpgtb xmm11, xmm2
441e96: pand xmm8, xmm9
441e9b: pand xmm10, xmm11
441ea0: pand xmm8, xmm7
441ea5: pand xmm10, xmm7
441eaa: por xmm1, xmm8
441eaf: por xmm2, xmm10
441eb4: pcmpeqb xmm0, xmm1
441eb8: pcmpeqb xmm1, xmm2
441ebc: psubb xmm1, xmm0
441ec0: pmovmskb edx, xmm1
441ec4: sub edx, 0xffff
441eca: jne 0x442a00
441ed0: add rcx, 0x10
441ed4: movdqa xmm3, xmm4
441ed8: add r10, 0x10
441edc: jg 0x441f70
441ee2: movdqa xmm1, xmmword ptr [rsi + rcx]
441ee7: movdqa xmm2, xmmword ptr [rdi + rcx]
441eec: movdqa xmm4, xmm2
441ef0: palignr xmm2, xmm3, 0xa
441ef6: movdqa xmm8, xmm1
441efb: movdqa xmm9, xmm6
441f00: movdqa xmm10, xmm2
441f05: movdqa xmm11, xmm6
441f0a: pcmpgtb xmm8, xmm5
441f0f: pcmpgtb xmm9, xmm1
441f14: pcmpgtb xmm10, xmm5
441f19: pcmpgtb xmm11, xmm2
441f1e: pand xmm8, xmm9
441f23: pand xmm10, xmm11
441f28: pand xmm8, xmm7
441f2d: pand xmm10, xmm7
441f32: por xmm1, xmm8
441f37: por xmm2, xmm10
441f3c: pcmpeqb xmm0, xmm1
441f40: pcmpeqb xmm1, xmm2
441f44: psubb xmm1, xmm0
441f48: pmovmskb edx, xmm1
441f4c: sub edx, 0xffff
441f52: jne 0x442a00
441f58: add rcx, 0x10
441f5c: movdqa xmm3, xmm4
441f60: jmp 0x441e50
441f65: nop word ptr cs:[rax + rax]
441f70: pcmpeqb xmm0, xmm3
441f74: pmovmskb edx, xmm0
441f78: test edx, 0xfc00
441f7e: jne 0x441f90
441f80: pxor xmm0, xmm0
441f84: sub r10, 0x1000
441f8b: jmp 0x441e5a
441f90: movdqa xmm1, xmmword ptr [rsi + rcx]
441f95: psrldq xmm0, 0xa
441f9a: psrldq xmm3, 0xa
441f9f: jmp 0x4429a0
441fa4: nop word ptr cs:[rax + rax]
441faf: nop 
441fb0: pxor xmm0, xmm0
441fb4: movdqa xmm2, xmmword ptr [rdi]
441fb8: movdqa xmm1, xmmword ptr [rsi]
441fbc: pcmpeqb xmm0, xmm1
441fc0: pslldq xmm2, 5
441fc5: movdqa xmm8, xmm1
441fca: movdqa xmm9, xmm6
441fcf: movdqa xmm10, xmm2
441fd4: movdqa xmm11, xmm6
441fd9: pcmpgtb xmm8, xmm5
441fde: pcmpgtb xmm9, xmm1
441fe3: pcmpgtb xmm10, xmm5
441fe8: pcmpgtb xmm11, xmm2
441fed: pand xmm8, xmm9
441ff2: pand xmm10, xmm11
441ff7: pand xmm8, xmm7
441ffc: pand xmm10, xmm7
442001: por xmm1, xmm8
442006: por xmm2, xmm10
44200b: pcmpeqb xmm2, xmm1
44200f: psubb xmm2, xmm0
442013: pmovmskb r9d, xmm2
442018: shr edx, cl
44201a: shr r9d, cl
44201d: sub edx, r9d
442020: jne 0x442a05
442026: movdqa xmm3, xmmword ptr [rdi]
44202a: pxor xmm0, xmm0
44202e: mov rcx, 0x10
442035: mov r9d, 0xb
44203b: lea r10, [rdi + 0xb]
44203f: and r10, 0xfff
442046: sub r10, 0x1000
44204d: nop dword ptr [rax]
442050: add r10, 0x10
442054: jg 0x442170
44205a: movdqa xmm1, xmmword ptr [rsi + rcx]
44205f: movdqa xmm2, xmmword ptr [rdi + rcx]
442064: movdqa xmm4, xmm2
442068: palignr xmm2, xmm3, 0xb
44206e: movdqa xmm8, xmm1
442073: movdqa xmm9, xmm6
442078: movdqa xmm10, xmm2
44207d: movdqa xmm11, xmm6
442082: pcmpgtb xmm8, xmm5
442087: pcmpgtb xmm9, xmm1
44208c: pcmpgtb xmm10, xmm5
442091: pcmpgtb xmm11, xmm2
442096: pand xmm8, xmm9
44209b: pand xmm10, xmm11
4420a0: pand xmm8, xmm7
4420a5: pand xmm10, xmm7
4420aa: por xmm1, xmm8
4420af: por xmm2, xmm10
4420b4: pcmpeqb xmm0, xmm1
4420b8: pcmpeqb xmm1, xmm2
4420bc: psubb xmm1, xmm0
4420c0: pmovmskb edx, xmm1
4420c4: sub edx, 0xffff
4420ca: jne 0x442a00
4420d0: add rcx, 0x10
4420d4: movdqa xmm3, xmm4
4420d8: add r10, 0x10
4420dc: jg 0x442170
4420e2: movdqa xmm1, xmmword ptr [rsi + rcx]
4420e7: movdqa xmm2, xmmword ptr [rdi + rcx]
4420ec: movdqa xmm4, xmm2
4420f0: palignr xmm2, xmm3, 0xb
4420f6: movdqa xmm8, xmm1
4420fb: movdqa xmm9, xmm6
442100: movdqa xmm10, xmm2
442105: movdqa xmm11, xmm6
44210a: pcmpgtb xmm8, xmm5
44210f: pcmpgtb xmm9, xmm1
442114: pcmpgtb xmm10, xmm5
442119: pcmpgtb xmm11, xmm2
44211e: pand xmm8, xmm9
442123: pand xmm10, xmm11
442128: pand xmm8, xmm7
44212d: pand xmm10, xmm7
442132: por xmm1, xmm8
442137: por xmm2, xmm10
44213c: pcmpeqb xmm0, xmm1
442140: pcmpeqb xmm1, xmm2
442144: psubb xmm1, xmm0
442148: pmovmskb edx, xmm1
44214c: sub edx, 0xffff
442152: jne 0x442a00
442158: add rcx, 0x10
44215c: movdqa xmm3, xmm4
442160: jmp 0x442050
442165: nop word ptr cs:[rax + rax]
442170: pcmpeqb xmm0, xmm3
442174: pmovmskb edx, xmm0
442178: test edx, 0xf800
44217e: jne 0x442190
442180: pxor xmm0, xmm0
442184: sub r10, 0x1000
44218b: jmp 0x44205a
442190: movdqa xmm1, xmmword ptr [rsi + rcx]
442195: psrldq xmm0, 0xb
44219a: psrldq xmm3, 0xb
44219f: jmp 0x4429a0
4421a4: nop word ptr cs:[rax + rax]
4421af: nop 
4421b0: pxor xmm0, xmm0
4421b4: movdqa xmm2, xmmword ptr [rdi]
4421b8: movdqa xmm1, xmmword ptr [rsi]
4421bc: pcmpeqb xmm0, xmm1
4421c0: pslldq xmm2, 4
4421c5: movdqa xmm8, xmm1
4421ca: movdqa xmm9, xmm6
4421cf: movdqa xmm10, xmm2
4421d4: movdqa xmm11, xmm6
4421d9: pcmpgtb xmm8, xmm5
4421de: pcmpgtb xmm9, xmm1
4421e3: pcmpgtb xmm10, xmm5
4421e8: pcmpgtb xmm11, xmm2
4421ed: pand xmm8, xmm9
4421f2: pand xmm10, xmm11
4421f7: pand xmm8, xmm7
4421fc: pand xmm10, xmm7
442201: por xmm1, xmm8
442206: por xmm2, xmm10
44220b: pcmpeqb xmm2, xmm1
44220f: psubb xmm2, xmm0
442213: pmovmskb r9d, xmm2
442218: shr edx, cl
44221a: shr r9d, cl
44221d: sub edx, r9d
442220: jne 0x442a05
442226: movdqa xmm3, xmmword ptr [rdi]
44222a: pxor xmm0, xmm0
44222e: mov rcx, 0x10
442235: mov r9d, 0xc
44223b: lea r10, [rdi + 0xc]
44223f: and r10, 0xfff
442246: sub r10, 0x1000
44224d: nop dword ptr [rax]
442250: add r10, 0x10
442254: jg 0x442370
44225a: movdqa xmm1, xmmword ptr [rsi + rcx]
44225f: movdqa xmm2, xmmword ptr [rdi + rcx]
442264: movdqa xmm4, xmm2
442268: palignr xmm2, xmm3, 0xc
44226e: movdqa xmm8, xmm1
442273: movdqa xmm9, xmm6
442278: movdqa xmm10, xmm2
44227d: movdqa xmm11, xmm6
442282: pcmpgtb xmm8, xmm5
442287: pcmpgtb xmm9, xmm1
44228c: pcmpgtb xmm10, xmm5
442291: pcmpgtb xmm11, xmm2
442296: pand xmm8, xmm9
44229b: pand xmm10, xmm11
4422a0: pand xmm8, xmm7
4422a5: pand xmm10, xmm7
4422aa: por xmm1, xmm8
4422af: por xmm2, xmm10
4422b4: pcmpeqb xmm0, xmm1
4422b8: pcmpeqb xmm1, xmm2
4422bc: psubb xmm1, xmm0
4422c0: pmovmskb edx, xmm1
4422c4: sub edx, 0xffff
4422ca: jne 0x442a00
4422d0: add rcx, 0x10
4422d4: movdqa xmm3, xmm4
4422d8: add r10, 0x10
4422dc: jg 0x442370
4422e2: movdqa xmm1, xmmword ptr [rsi + rcx]
4422e7: movdqa xmm2, xmmword ptr [rdi + rcx]
4422ec: movdqa xmm4, xmm2
4422f0: palignr xmm2, xmm3, 0xc
4422f6: movdqa xmm8, xmm1
4422fb: movdqa xmm9, xmm6
442300: movdqa xmm10, xmm2
442305: movdqa xmm11, xmm6
44230a: pcmpgtb xmm8, xmm5
44230f: pcmpgtb xmm9, xmm1
442314: pcmpgtb xmm10, xmm5
442319: pcmpgtb xmm11, xmm2
44231e: pand xmm8, xmm9
442323: pand xmm10, xmm11
442328: pand xmm8, xmm7
44232d: pand xmm10, xmm7
442332: por xmm1, xmm8
442337: por xmm2, xmm10
44233c: pcmpeqb xmm0, xmm1
442340: pcmpeqb xmm1, xmm2
442344: psubb xmm1, xmm0
442348: pmovmskb edx, xmm1
44234c: sub edx, 0xffff
442352: jne 0x442a00
442358: add rcx, 0x10
44235c: movdqa xmm3, xmm4
442360: jmp 0x442250
442365: nop word ptr cs:[rax + rax]
442370: pcmpeqb xmm0, xmm3
442374: pmovmskb edx, xmm0
442378: test edx, 0xf000
44237e: jne 0x442390
442380: pxor xmm0, xmm0
442384: sub r10, 0x1000
44238b: jmp 0x44225a
442390: movdqa xmm1, xmmword ptr [rsi + rcx]
442395: psrldq xmm0, 0xc
44239a: psrldq xmm3, 0xc
44239f: jmp 0x4429a0
4423a4: nop word ptr cs:[rax + rax]
4423af: nop 
4423b0: pxor xmm0, xmm0
4423b4: movdqa xmm2, xmmword ptr [rdi]
4423b8: movdqa xmm1, xmmword ptr [rsi]
4423bc: pcmpeqb xmm0, xmm1
4423c0: pslldq xmm2, 3
4423c5: movdqa xmm8, xmm1
4423ca: movdqa xmm9, xmm6
4423cf: movdqa xmm10, xmm2
4423d4: movdqa xmm11, xmm6
4423d9: pcmpgtb xmm8, xmm5
4423de: pcmpgtb xmm9, xmm1
4423e3: pcmpgtb xmm10, xmm5
4423e8: pcmpgtb xmm11, xmm2
4423ed: pand xmm8, xmm9
4423f2: pand xmm10, xmm11
4423f7: pand xmm8, xmm7
4423fc: pand xmm10, xmm7
442401: por xmm1, xmm8
442406: por xmm2, xmm10
44240b: pcmpeqb xmm2, xmm1
44240f: psubb xmm2, xmm0
442413: pmovmskb r9d, xmm2
442418: shr edx, cl
44241a: shr r9d, cl
44241d: sub edx, r9d
442420: jne 0x442a05
442426: movdqa xmm3, xmmword ptr [rdi]
44242a: pxor xmm0, xmm0
44242e: mov rcx, 0x10
442435: mov r9d, 0xd
44243b: lea r10, [rdi + 0xd]
44243f: and r10, 0xfff
442446: sub r10, 0x1000
44244d: nop dword ptr [rax]
442450: add r10, 0x10
442454: jg 0x442570
44245a: movdqa xmm1, xmmword ptr [rsi + rcx]
44245f: movdqa xmm2, xmmword ptr [rdi + rcx]
442464: movdqa xmm4, xmm2
442468: palignr xmm2, xmm3, 0xd
44246e: movdqa xmm8, xmm1
442473: movdqa xmm9, xmm6
442478: movdqa xmm10, xmm2
44247d: movdqa xmm11, xmm6
442482: pcmpgtb xmm8, xmm5
442487: pcmpgtb xmm9, xmm1
44248c: pcmpgtb xmm10, xmm5
442491: pcmpgtb xmm11, xmm2
442496: pand xmm8, xmm9
44249b: pand xmm10, xmm11
4424a0: pand xmm8, xmm7
4424a5: pand xmm10, xmm7
4424aa: por xmm1, xmm8
4424af: por xmm2, xmm10
4424b4: pcmpeqb xmm0, xmm1
4424b8: pcmpeqb xmm1, xmm2
4424bc: psubb xmm1, xmm0
4424c0: pmovmskb edx, xmm1
4424c4: sub edx, 0xffff
4424ca: jne 0x442a00
4424d0: add rcx, 0x10
4424d4: movdqa xmm3, xmm4
4424d8: add r10, 0x10
4424dc: jg 0x442570
4424e2: movdqa xmm1, xmmword ptr [rsi + rcx]
4424e7: movdqa xmm2, xmmword ptr [rdi + rcx]
4424ec: movdqa xmm4, xmm2
4424f0: palignr xmm2, xmm3, 0xd
4424f6: movdqa xmm8, xmm1
4424fb: movdqa xmm9, xmm6
442500: movdqa xmm10, xmm2
442505: movdqa xmm11, xmm6
44250a: pcmpgtb xmm8, xmm5
44250f: pcmpgtb xmm9, xmm1
442514: pcmpgtb xmm10, xmm5
442519: pcmpgtb xmm11, xmm2
44251e: pand xmm8, xmm9
442523: pand xmm10, xmm11
442528: pand xmm8, xmm7
44252d: pand xmm10, xmm7
442532: por xmm1, xmm8
442537: por xmm2, xmm10
44253c: pcmpeqb xmm0, xmm1
442540: pcmpeqb xmm1, xmm2
442544: psubb xmm1, xmm0
442548: pmovmskb edx, xmm1
44254c: sub edx, 0xffff
442552: jne 0x442a00
442558: add rcx, 0x10
44255c: movdqa xmm3, xmm4
442560: jmp 0x442450
442565: nop word ptr cs:[rax + rax]
442570: pcmpeqb xmm0, xmm3
442574: pmovmskb edx, xmm0
442578: test edx, 0xe000
44257e: jne 0x442590
442580: pxor xmm0, xmm0
442584: sub r10, 0x1000
44258b: jmp 0x44245a
442590: movdqa xmm1, xmmword ptr [rsi + rcx]
442595: psrldq xmm0, 0xd
44259a: psrldq xmm3, 0xd
44259f: jmp 0x4429a0
4425a4: nop word ptr cs:[rax + rax]
4425af: nop 
4425b0: pxor xmm0, xmm0
4425b4: movdqa xmm2, xmmword ptr [rdi]
4425b8: movdqa xmm1, xmmword ptr [rsi]
4425bc: pcmpeqb xmm0, xmm1
4425c0: pslldq xmm2, 2
4425c5: movdqa xmm8, xmm1
4425ca: movdqa xmm9, xmm6
4425cf: movdqa xmm10, xmm2
4425d4: movdqa xmm11, xmm6
4425d9: pcmpgtb xmm8, xmm5
4425de: pcmpgtb xmm9, xmm1
4425e3: pcmpgtb xmm10, xmm5
4425e8: pcmpgtb xmm11, xmm2
4425ed: pand xmm8, xmm9
4425f2: pand xmm10, xmm11
4425f7: pand xmm8, xmm7
4425fc: pand xmm10, xmm7
442601: por xmm1, xmm8
442606: por xmm2, xmm10
44260b: pcmpeqb xmm2, xmm1
44260f: psubb xmm2, xmm0
442613: pmovmskb r9d, xmm2
442618: shr edx, cl
44261a: shr r9d, cl
44261d: sub edx, r9d
442620: jne 0x442a05
442626: movdqa xmm3, xmmword ptr [rdi]
44262a: pxor xmm0, xmm0
44262e: mov rcx, 0x10
442635: mov r9d, 0xe
44263b: lea r10, [rdi + 0xe]
44263f: and r10, 0xfff
442646: sub r10, 0x1000
44264d: nop dword ptr [rax]
442650: add r10, 0x10
442654: jg 0x442770
44265a: movdqa xmm1, xmmword ptr [rsi + rcx]
44265f: movdqa xmm2, xmmword ptr [rdi + rcx]
442664: movdqa xmm4, xmm2
442668: palignr xmm2, xmm3, 0xe
44266e: movdqa xmm8, xmm1
442673: movdqa xmm9, xmm6
442678: movdqa xmm10, xmm2
44267d: movdqa xmm11, xmm6
442682: pcmpgtb xmm8, xmm5
442687: pcmpgtb xmm9, xmm1
44268c: pcmpgtb xmm10, xmm5
442691: pcmpgtb xmm11, xmm2
442696: pand xmm8, xmm9
44269b: pand xmm10, xmm11
4426a0: pand xmm8, xmm7
4426a5: pand xmm10, xmm7
4426aa: por xmm1, xmm8
4426af: por xmm2, xmm10
4426b4: pcmpeqb xmm0, xmm1
4426b8: pcmpeqb xmm1, xmm2
4426bc: psubb xmm1, xmm0
4426c0: pmovmskb edx, xmm1
4426c4: sub edx, 0xffff
4426ca: jne 0x442a00
4426d0: add rcx, 0x10
4426d4: movdqa xmm3, xmm4
4426d8: add r10, 0x10
4426dc: jg 0x442770
4426e2: movdqa xmm1, xmmword ptr [rsi + rcx]
4426e7: movdqa xmm2, xmmword ptr [rdi + rcx]
4426ec: movdqa xmm4, xmm2
4426f0: palignr xmm2, xmm3, 0xe
4426f6: movdqa xmm8, xmm1
4426fb: movdqa xmm9, xmm6
442700: movdqa xmm10, xmm2
442705: movdqa xmm11, xmm6
44270a: pcmpgtb xmm8, xmm5
44270f: pcmpgtb xmm9, xmm1
442714: pcmpgtb xmm10, xmm5
442719: pcmpgtb xmm11, xmm2
44271e: pand xmm8, xmm9
442723: pand xmm10, xmm11
442728: pand xmm8, xmm7
44272d: pand xmm10, xmm7
442732: por xmm1, xmm8
442737: por xmm2, xmm10
44273c: pcmpeqb xmm0, xmm1
442740: pcmpeqb xmm1, xmm2
442744: psubb xmm1, xmm0
442748: pmovmskb edx, xmm1
44274c: sub edx, 0xffff
442752: jne 0x442a00
442758: add rcx, 0x10
44275c: movdqa xmm3, xmm4
442760: jmp 0x442650
442765: nop word ptr cs:[rax + rax]
442770: pcmpeqb xmm0, xmm3
442774: pmovmskb edx, xmm0
442778: test edx, 0xc000
44277e: jne 0x442790
442780: pxor xmm0, xmm0
442784: sub r10, 0x1000
44278b: jmp 0x44265a
442790: movdqa xmm1, xmmword ptr [rsi + rcx]
442795: psrldq xmm0, 0xe
44279a: psrldq xmm3, 0xe
44279f: jmp 0x4429a0
4427a4: nop word ptr cs:[rax + rax]
4427af: nop 
4427b0: pxor xmm0, xmm0
4427b4: movdqa xmm2, xmmword ptr [rdi]
4427b8: movdqa xmm1, xmmword ptr [rsi]
4427bc: pcmpeqb xmm0, xmm1
4427c0: pslldq xmm2, 1
4427c5: movdqa xmm8, xmm1
4427ca: movdqa xmm9, xmm6
4427cf: movdqa xmm10, xmm2
4427d4: movdqa xmm11, xmm6
4427d9: pcmpgtb xmm8, xmm5
4427de: pcmpgtb xmm9, xmm1
4427e3: pcmpgtb xmm10, xmm5
4427e8: pcmpgtb xmm11, xmm2
4427ed: pand xmm8, xmm9
4427f2: pand xmm10, xmm11
4427f7: pand xmm8, xmm7
4427fc: pand xmm10, xmm7
442801: por xmm1, xmm8
442806: por xmm2, xmm10
44280b: pcmpeqb xmm2, xmm1
44280f: psubb xmm2, xmm0
442813: pmovmskb r9d, xmm2
442818: shr edx, cl
44281a: shr r9d, cl
44281d: sub edx, r9d
442820: jne 0x442a05
442826: movdqa xmm3, xmmword ptr [rdi]
44282a: pxor xmm0, xmm0
44282e: mov rcx, 0x10
442835: mov r9d, 0xf
44283b: lea r10, [rdi + 0xf]
44283f: and r10, 0xfff
442846: sub r10, 0x1000
44284d: nop dword ptr [rax]
442850: add r10, 0x10
442854: jg 0x442970
44285a: movdqa xmm1, xmmword ptr [rsi + rcx]
44285f: movdqa xmm2, xmmword ptr [rdi + rcx]
442864: movdqa xmm4, xmm2
442868: palignr xmm2, xmm3, 0xf
44286e: movdqa xmm8, xmm1
442873: movdqa xmm9, xmm6
442878: movdqa xmm10, xmm2
44287d: movdqa xmm11, xmm6
442882: pcmpgtb xmm8, xmm5
442887: pcmpgtb xmm9, xmm1
44288c: pcmpgtb xmm10, xmm5
442891: pcmpgtb xmm11, xmm2
442896: pand xmm8, xmm9
44289b: pand xmm10, xmm11
4428a0: pand xmm8, xmm7
4428a5: pand xmm10, xmm7
4428aa: por xmm1, xmm8
4428af: por xmm2, xmm10
4428b4: pcmpeqb xmm0, xmm1
4428b8: pcmpeqb xmm1, xmm2
4428bc: psubb xmm1, xmm0
4428c0: pmovmskb edx, xmm1
4428c4: sub edx, 0xffff
4428ca: jne 0x442a00
4428d0: add rcx, 0x10
4428d4: movdqa xmm3, xmm4
4428d8: add r10, 0x10
4428dc: jg 0x442970
4428e2: movdqa xmm1, xmmword ptr [rsi + rcx]
4428e7: movdqa xmm2, xmmword ptr [rdi + rcx]
4428ec: movdqa xmm4, xmm2
4428f0: palignr xmm2, xmm3, 0xf
4428f6: movdqa xmm8, xmm1
4428fb: movdqa xmm9, xmm6
442900: movdqa xmm10, xmm2
442905: movdqa xmm11, xmm6
44290a: pcmpgtb xmm8, xmm5
44290f: pcmpgtb xmm9, xmm1
442914: pcmpgtb xmm10, xmm5
442919: pcmpgtb xmm11, xmm2
44291e: pand xmm8, xmm9
442923: pand xmm10, xmm11
442928: pand xmm8, xmm7
44292d: pand xmm10, xmm7
442932: por xmm1, xmm8
442937: por xmm2, xmm10
44293c: pcmpeqb xmm0, xmm1
442940: pcmpeqb xmm1, xmm2
442944: psubb xmm1, xmm0
442948: pmovmskb edx, xmm1
44294c: sub edx, 0xffff
442952: jne 0x442a00
442958: add rcx, 0x10
44295c: movdqa xmm3, xmm4
442960: jmp 0x442850
442965: nop word ptr cs:[rax + rax]
442970: pcmpeqb xmm0, xmm3
442974: pmovmskb edx, xmm0
442978: test edx, 0x8000
44297e: jne 0x442990
442980: pxor xmm0, xmm0
442984: sub r10, 0x1000
44298b: jmp 0x44285a
442990: movdqa xmm1, xmmword ptr [rsi + rcx]
442995: psrldq xmm3, 0xf
44299a: psrldq xmm0, 0xf
44299f: nop 
4429a0: movdqa xmm8, xmm1
4429a5: movdqa xmm9, xmm6
4429aa: movdqa xmm10, xmm3
4429af: movdqa xmm11, xmm6
4429b4: pcmpgtb xmm8, xmm5
4429b9: pcmpgtb xmm9, xmm1
4429be: pcmpgtb xmm10, xmm5
4429c3: pcmpgtb xmm11, xmm3
4429c8: pand xmm8, xmm9
4429cd: pand xmm10, xmm11
4429d2: pand xmm8, xmm7
4429d7: pand xmm10, xmm7
4429dc: por xmm1, xmm8
4429e1: por xmm3, xmm10
4429e6: pcmpeqb xmm1, xmm3
4429ea: psubb xmm1, xmm0
4429ee: pmovmskb edx, xmm1
4429f2: not edx
4429f4: nop word ptr cs:[rax + rax]
4429ff: nop 
442a00: lea rax, [r9 + rcx - 0x10]
442a05: lea rdi, [rdi + rax]
442a09: lea rsi, [rsi + rcx]
442a0d: test r8d, r8d
442a10: je 0x442a20
442a12: xchg rdi, rsi
442a15: nop word ptr cs:[rax + rax]
442a20: bsf rdx, rdx
442a24: movzx ecx, byte ptr [rsi + rdx]
442a28: movzx eax, byte ptr [rdi + rdx]
442a2c: lea rdx, [rip + 0x58fcd]
442a33: mov ecx, dword ptr [rdx + rcx*4]
442a36: mov eax, dword ptr [rdx + rax*4]
442a39: sub eax, ecx
442a3b: ret 
442a3c: xor eax, eax
442a3e: ret 
442a3f: nop 
442a40: movzx ecx, byte ptr [rsi]
442a43: movzx eax, byte ptr [rdi]
442a46: lea rdx, [rip + 0x58fb3]
442a4d: mov ecx, dword ptr [rdx + rcx*4]
442a50: mov eax, dword ptr [rdx + rax*4]
442a53: sub eax, ecx
442a55: ret 
442a56: nop word ptr cs:[rax + rax]
442a60: endbr64 
442a64: mov rax, 0xffffffffffffffb0
442a6b: mov rdx, qword ptr fs:[rax]
442a6f: nop dword ptr [rax + rax]
442a74: endbr64 
442a78: mov rax, qword ptr [rdx]
442a7b: test dword ptr [rax + 0x278], 1
442a85: jne 0x44efc0
442a8b: mov ecx, esi
442a8d: mov eax, edi
442a8f: and rcx, 0x3f
442a93: and rax, 0x3f
442a97: movdqa xmm4, xmmword ptr [rip + 0x55821]
442a9f: movdqa xmm5, xmmword ptr [rip + 0x55829]
442aa7: movdqa xmm6, xmmword ptr [rip + 0x55831]
442aaf: cmp ecx, 0x30
442ab2: ja 0x442b30
442ab4: cmp eax, 0x30
442ab7: ja 0x442b30
442ab9: movdqu xmm1, xmmword ptr [rdi]
442abd: movdqu xmm2, xmmword ptr [rsi]
442ac1: movdqa xmm7, xmm1
442ac5: movdqa xmm8, xmm5
442aca: movdqa xmm9, xmm2
442acf: movdqa xmm10, xmm5
442ad4: pcmpgtb xmm7, xmm4
442ad8: pcmpgtb xmm8, xmm1
442add: pcmpgtb xmm9, xmm4
442ae2: pcmpgtb xmm10, xmm2
442ae7: pand xmm7, xmm8
442aec: pand xmm9, xmm10
442af1: pand xmm7, xmm6
442af5: pand xmm9, xmm6
442afa: por xmm1, xmm7
442afe: por xmm2, xmm9
442b03: pxor xmm0, xmm0
442b07: pcmpeqb xmm0, xmm1
442b0b: pcmpeqb xmm1, xmm2
442b0f: psubb xmm1, xmm0
442b13: pmovmskb edx, xmm1
442b17: sub edx, 0xffff
442b1d: jne 0x4445d0
442b23: add rsi, 0x10
442b27: add rdi, 0x10
442b2b: nop dword ptr [rax + rax]
442b30: and rsi, 0xfffffffffffffff0
442b34: and rdi, 0xfffffffffffffff0
442b38: mov edx, 0xffff
442b3d: xor r8d, r8d
442b40: and ecx, 0xf
442b43: and eax, 0xf
442b46: pxor xmm0, xmm0
442b4a: cmp ecx, eax
442b4c: je 0x442b80
442b4e: ja 0x442b57
442b50: mov r8d, edx
442b53: xchg ecx, eax
442b54: xchg rdi, rsi
442b57: movdqa xmm2, xmmword ptr [rdi]
442b5b: movdqa xmm1, xmmword ptr [rsi]
442b5f: lea r9, [rax + 0xf]
442b63: sub r9, rcx
442b66: lea r10, [rip + 0x55803]
442b6d: movsxd r9, dword ptr [r10 + r9*4]
442b71: pcmpeqb xmm0, xmm1
442b75: lea r10, [r10 + r9]
442b79: notrack jmp r10
442b7d: nop dword ptr [rax]
442b80: movdqa xmm1, xmmword ptr [rsi]
442b84: pcmpeqb xmm0, xmm1
442b88: movdqa xmm2, xmmword ptr [rdi]
442b8c: movdqa xmm7, xmm1
442b90: movdqa xmm8, xmm5
442b95: movdqa xmm9, xmm2
442b9a: movdqa xmm10, xmm5
442b9f: pcmpgtb xmm7, xmm4
442ba3: pcmpgtb xmm8, xmm1
442ba8: pcmpgtb xmm9, xmm4
442bad: pcmpgtb xmm10, xmm2
442bb2: pand xmm7, xmm8
442bb7: pand xmm9, xmm10
442bbc: pand xmm7, xmm6
442bc0: pand xmm9, xmm6
442bc5: por xmm1, xmm7
442bc9: por xmm2, xmm9
442bce: pcmpeqb xmm1, xmm2
442bd2: psubb xmm1, xmm0
442bd6: pmovmskb r9d, xmm1
442bdb: shr edx, cl
442bdd: shr r9d, cl
442be0: sub edx, r9d
442be3: jne 0x4445b8
442be9: mov rcx, 0x10
442bf0: mov r9, 0x10
442bf7: mov rdx, rcx
442bfa: nop word ptr [rax + rax]
442c00: movdqa xmm0, xmmword ptr [rdi + rdx]
442c05: movdqa xmm1, xmmword ptr [rsi + rdx]
442c0a: movdqa xmm7, xmm0
442c0e: movdqa xmm8, xmm5
442c13: movdqa xmm9, xmm1
442c18: movdqa xmm10, xmm5
442c1d: pcmpgtb xmm7, xmm4
442c21: pcmpgtb xmm8, xmm0
442c26: pcmpgtb xmm9, xmm4
442c2b: pcmpgtb xmm10, xmm1
442c30: pand xmm7, xmm8
442c35: pand xmm9, xmm10
442c3a: pand xmm7, xmm6
442c3e: pand xmm9, xmm6
442c43: por xmm0, xmm7
442c47: por xmm1, xmm9
442c4c: pcmpistri xmm0, xmm1, 0x1a
442c52: lea rdx, [rdx + 0x10]
442c56: jbe 0x442cc0
442c58: movdqa xmm0, xmmword ptr [rdi + rdx]
442c5d: movdqa xmm1, xmmword ptr [rsi + rdx]
442c62: movdqa xmm7, xmm0
442c66: movdqa xmm8, xmm5
442c6b: movdqa xmm9, xmm1
442c70: movdqa xmm10, xmm5
442c75: pcmpgtb xmm7, xmm4
442c79: pcmpgtb xmm8, xmm0
442c7e: pcmpgtb xmm9, xmm4
442c83: pcmpgtb xmm10, xmm1
442c88: pand xmm7, xmm8
442c8d: pand xmm9, xmm10
442c92: pand xmm7, xmm6
442c96: pand xmm9, xmm6
442c9b: por xmm0, xmm7
442c9f: por xmm1, xmm9
442ca4: pcmpistri xmm0, xmm1, 0x1a
442caa: lea rdx, [rdx + 0x10]
442cae: jbe 0x442cc0
442cb0: jmp 0x442c00
442cb5: nop word ptr cs:[rax + rax]
442cc0: jae 0x4445ec
442cc6: lea rcx, [rdx + rcx - 0x10]
442ccb: movzx eax, byte ptr [rdi + rcx]
442ccf: movzx edx, byte ptr [rsi + rcx]
442cd3: lea rcx, [rip + 0x58d26]
442cda: mov eax, dword ptr [rcx + rax*4]
442cdd: mov edx, dword ptr [rcx + rdx*4]
442ce0: sub eax, edx
442ce2: ret 
442ce3: nop word ptr cs:[rax + rax]
442cee: nop 
442cf0: pslldq xmm2, 0xf
442cf5: movdqa xmm7, xmm1
442cf9: movdqa xmm8, xmm5
442cfe: movdqa xmm9, xmm2
442d03: movdqa xmm10, xmm5
442d08: pcmpgtb xmm7, xmm4
442d0c: pcmpgtb xmm8, xmm1
442d11: pcmpgtb xmm9, xmm4
442d16: pcmpgtb xmm10, xmm2
442d1b: pand xmm7, xmm8
442d20: pand xmm9, xmm10
442d25: pand xmm7, xmm6
442d29: pand xmm9, xmm6
442d2e: por xmm1, xmm7
442d32: por xmm2, xmm9
442d37: pcmpeqb xmm2, xmm1
442d3b: psubb xmm2, xmm0
442d3f: pmovmskb r9d, xmm2
442d44: shr edx, cl
442d46: shr r9d, cl
442d49: sub edx, r9d
442d4c: jne 0x4445b8
442d52: movdqa xmm3, xmmword ptr [rdi]
442d56: mov rcx, 0x10
442d5d: mov r9d, 1
442d63: lea r10, [rdi + 1]
442d67: and r10, 0xfff
442d6e: sub r10, 0x1000
442d75: mov rdx, rcx
442d78: nop dword ptr [rax + rax]
442d80: add r10, 0x10
442d84: jg 0x442e60
442d8a: movdqa xmm0, xmmword ptr [rdi + rdx]
442d8f: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 1
442d97: movdqa xmm1, xmmword ptr [rsi + rdx]
442d9c: movdqa xmm7, xmm0
442da0: movdqa xmm8, xmm5
442da5: movdqa xmm9, xmm1
442daa: movdqa xmm10, xmm5
442daf: pcmpgtb xmm7, xmm4
442db3: pcmpgtb xmm8, xmm0
442db8: pcmpgtb xmm9, xmm4
442dbd: pcmpgtb xmm10, xmm1
442dc2: pand xmm7, xmm8
442dc7: pand xmm9, xmm10
442dcc: pand xmm7, xmm6
442dd0: pand xmm9, xmm6
442dd5: por xmm0, xmm7
442dd9: por xmm1, xmm9
442dde: pcmpistri xmm0, xmm1, 0x1a
442de4: jbe 0x444590
442dea: add rdx, 0x10
442dee: add r10, 0x10
442df2: jg 0x442e60
442df4: movdqa xmm0, xmmword ptr [rdi + rdx]
442df9: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 1
442e01: movdqa xmm1, xmmword ptr [rsi + rdx]
442e06: movdqa xmm7, xmm0
442e0a: movdqa xmm8, xmm5
442e0f: movdqa xmm9, xmm1
442e14: movdqa xmm10, xmm5
442e19: pcmpgtb xmm7, xmm4
442e1d: pcmpgtb xmm8, xmm0
442e22: pcmpgtb xmm9, xmm4
442e27: pcmpgtb xmm10, xmm1
442e2c: pand xmm7, xmm8
442e31: pand xmm9, xmm10
442e36: pand xmm7, xmm6
442e3a: pand xmm9, xmm6
442e3f: por xmm0, xmm7
442e43: por xmm1, xmm9
442e48: pcmpistri xmm0, xmm1, 0x1a
442e50: cmp al, 0x17
442e52: add byte ptr [rax], al
442e54: add rdx, 0x10
442e58: jmp 0x442d80
442e5d: nop dword ptr [rax]
442e60: sub r10, 0x1000
442e67: movdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
442e6d: psrldq xmm0, 1
442e72: pcmpistri xmm0, xmm0, 0x3a
442e78: cmp ecx, 0xe
442e7b: ja 0x442d8a
442e81: jmp 0x444541
442e86: nop word ptr cs:[rax + rax]
442e90: pslldq xmm2, 0xe
442e95: movdqa xmm7, xmm1
442e99: movdqa xmm8, xmm5
442e9e: movdqa xmm9, xmm2
442ea3: movdqa xmm10, xmm5
442ea8: pcmpgtb xmm7, xmm4
442eac: pcmpgtb xmm8, xmm1
442eb1: pcmpgtb xmm9, xmm4
442eb6: pcmpgtb xmm10, xmm2
442ebb: pand xmm7, xmm8
442ec0: pand xmm9, xmm10
442ec5: pand xmm7, xmm6
442ec9: pand xmm9, xmm6
442ece: por xmm1, xmm7
442ed2: por xmm2, xmm9
442ed7: pcmpeqb xmm2, xmm1
442edb: psubb xmm2, xmm0
442edf: pmovmskb r9d, xmm2
442ee4: shr edx, cl
442ee6: shr r9d, cl
442ee9: sub edx, r9d
442eec: jne 0x4445b8
442ef2: movdqa xmm3, xmmword ptr [rdi]
442ef6: mov rcx, 0x10
442efd: mov r9d, 2
442f03: lea r10, [rdi + 2]
442f07: and r10, 0xfff
442f0e: sub r10, 0x1000
442f15: mov rdx, rcx
442f18: nop dword ptr [rax + rax]
442f20: add r10, 0x10
442f24: jg 0x443000
442f2a: movdqa xmm0, xmmword ptr [rdi + rdx]
442f2f: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 2
442f37: movdqa xmm1, xmmword ptr [rsi + rdx]
442f3c: movdqa xmm7, xmm0
442f40: movdqa xmm8, xmm5
442f45: movdqa xmm9, xmm1
442f4a: movdqa xmm10, xmm5
442f4f: pcmpgtb xmm7, xmm4
442f53: pcmpgtb xmm8, xmm0
442f58: pcmpgtb xmm9, xmm4
442f5d: pcmpgtb xmm10, xmm1
442f62: pand xmm7, xmm8
442f67: pand xmm9, xmm10
442f6c: pand xmm7, xmm6
442f70: pand xmm9, xmm6
442f75: por xmm0, xmm7
442f79: por xmm1, xmm9
442f7e: pcmpistri xmm0, xmm1, 0x1a
442f84: jbe 0x444590
442f8a: add rdx, 0x10
442f8e: add r10, 0x10
442f92: jg 0x443000
442f94: movdqa xmm0, xmmword ptr [rdi + rdx]
442f99: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 2
442fa1: movdqa xmm1, xmmword ptr [rsi + rdx]
442fa6: movdqa xmm7, xmm0
442faa: movdqa xmm8, xmm5
442faf: movdqa xmm9, xmm1
442fb4: movdqa xmm10, xmm5
442fb9: pcmpgtb xmm7, xmm4
442fbd: pcmpgtb xmm8, xmm0
442fc2: pcmpgtb xmm9, xmm4
442fc7: pcmpgtb xmm10, xmm1
442fcc: pand xmm7, xmm8
442fd1: pand xmm9, xmm10
442fd6: pand xmm7, xmm6
442fda: pand xmm9, xmm6
442fdf: por xmm0, xmm7
442fe3: por xmm1, xmm9
442fe8: pcmpistri xmm0, xmm1, 0x1a
442ff0: pushfq 
442ff1: adc eax, 0x83480000
442ff6: ret 0xe910
442ff9: and edi, edi
442ffd: nop dword ptr [rax]
443000: sub r10, 0x1000
443007: movdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
44300d: psrldq xmm0, 2
443012: pcmpistri xmm0, xmm0, 0x3a
443018: cmp ecx, 0xd
44301b: ja 0x442f2a
443021: jmp 0x444541
443026: nop word ptr cs:[rax + rax]
443030: pslldq xmm2, 0xd
443035: movdqa xmm7, xmm1
443039: movdqa xmm8, xmm5
44303e: movdqa xmm9, xmm2
443043: movdqa xmm10, xmm5
443048: pcmpgtb xmm7, xmm4
44304c: pcmpgtb xmm8, xmm1
443051: pcmpgtb xmm9, xmm4
443056: pcmpgtb xmm10, xmm2
44305b: pand xmm7, xmm8
443060: pand xmm9, xmm10
443065: pand xmm7, xmm6
443069: pand xmm9, xmm6
44306e: por xmm1, xmm7
443072: por xmm2, xmm9
443077: pcmpeqb xmm2, xmm1
44307b: psubb xmm2, xmm0
44307f: pmovmskb r9d, xmm2
443084: shr edx, cl
443086: shr r9d, cl
443089: sub edx, r9d
44308c: jne 0x4445b8
443092: movdqa xmm3, xmmword ptr [rdi]
443096: mov rcx, 0x10
44309d: mov r9d, 3
4430a3: lea r10, [rdi + 3]
4430a7: and r10, 0xfff
4430ae: sub r10, 0x1000
4430b5: mov rdx, rcx
4430b8: add r10, 0x10
4430bc: jg 0x4431a0
4430c2: movdqa xmm0, xmmword ptr [rdi + rdx]
4430c7: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 3
4430cf: movdqa xmm1, xmmword ptr [rsi + rdx]
4430d4: movdqa xmm7, xmm0
4430d8: movdqa xmm8, xmm5
4430dd: movdqa xmm9, xmm1
4430e2: movdqa xmm10, xmm5
4430e7: pcmpgtb xmm7, xmm4
4430eb: pcmpgtb xmm8, xmm0
4430f0: pcmpgtb xmm9, xmm4
4430f5: pcmpgtb xmm10, xmm1
4430fa: pand xmm7, xmm8
4430ff: pand xmm9, xmm10
443104: pand xmm7, xmm6
443108: pand xmm9, xmm6
44310d: por xmm0, xmm7
443111: por xmm1, xmm9
443116: pcmpistri xmm0, xmm1, 0x1a
44311c: jbe 0x444590
443122: add rdx, 0x10
443126: add r10, 0x10
44312a: jg 0x4431a0
44312c: movdqa xmm0, xmmword ptr [rdi + rdx]
443131: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 3
443139: movdqa xmm1, xmmword ptr [rsi + rdx]
44313e: movdqa xmm7, xmm0
443142: movdqa xmm8, xmm5
443147: movdqa xmm9, xmm1
44314c: movdqa xmm10, xmm5
443151: pcmpgtb xmm7, xmm4
443155: pcmpgtb xmm8, xmm0
44315a: pcmpgtb xmm9, xmm4
44315f: pcmpgtb xmm10, xmm1
443164: pand xmm7, xmm8
443169: pand xmm9, xmm10
44316e: pand xmm7, xmm6
443172: pand xmm9, xmm6
443177: por xmm0, xmm7
44317b: por xmm1, xmm9
443180: pcmpistri xmm0, xmm1, 0x1a
443186: jbe 0x444590
44318c: add rdx, 0x10
443190: jmp 0x4430b8
443195: nop word ptr cs:[rax + rax]
4431a0: sub r10, 0x1000
4431a7: movdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
4431ad: psrldq xmm0, 3
4431b2: pcmpistri xmm0, xmm0, 0x3a
4431b8: cmp ecx, 0xc
4431bb: ja 0x4430c2
4431c1: jmp 0x444541
4431c6: nop word ptr cs:[rax + rax]
4431d0: pslldq xmm2, 0xc
4431d5: movdqa xmm7, xmm1
4431d9: movdqa xmm8, xmm5
4431de: movdqa xmm9, xmm2
4431e3: movdqa xmm10, xmm5
4431e8: pcmpgtb xmm7, xmm4
4431ec: pcmpgtb xmm8, xmm1
4431f1: pcmpgtb xmm9, xmm4
4431f6: pcmpgtb xmm10, xmm2
4431fb: pand xmm7, xmm8
443200: pand xmm9, xmm10
443205: pand xmm7, xmm6
443209: pand xmm9, xmm6
44320e: por xmm1, xmm7
443212: por xmm2, xmm9
443217: pcmpeqb xmm2, xmm1
44321b: psubb xmm2, xmm0
44321f: pmovmskb r9d, xmm2
443224: shr edx, cl
443226: shr r9d, cl
443229: sub edx, r9d
44322c: jne 0x4445b8
443232: movdqa xmm3, xmmword ptr [rdi]
443236: mov rcx, 0x10
44323d: mov r9d, 4
443243: lea r10, [rdi + 4]
443247: and r10, 0xfff
44324e: sub r10, 0x1000
443255: mov rdx, rcx
443258: nop dword ptr [rax + rax]
443260: add r10, 0x10
443264: jg 0x443340
44326a: movdqa xmm0, xmmword ptr [rdi + rdx]
44326f: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 4
443277: movdqa xmm1, xmmword ptr [rsi + rdx]
44327c: movdqa xmm7, xmm0
443280: movdqa xmm8, xmm5
443285: movdqa xmm9, xmm1
44328a: movdqa xmm10, xmm5
44328f: pcmpgtb xmm7, xmm4
443293: pcmpgtb xmm8, xmm0
443298: pcmpgtb xmm9, xmm4
44329d: pcmpgtb xmm10, xmm1
4432a2: pand xmm7, xmm8
4432a7: pand xmm9, xmm10
4432ac: pand xmm7, xmm6
4432b0: pand xmm9, xmm6
4432b5: por xmm0, xmm7
4432b9: por xmm1, xmm9
4432be: pcmpistri xmm0, xmm1, 0x1a
4432c4: jbe 0x444590
4432ca: add rdx, 0x10
4432ce: add r10, 0x10
4432d2: jg 0x443340
4432d4: movdqa xmm0, xmmword ptr [rdi + rdx]
4432d9: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 4
4432e1: movdqa xmm1, xmmword ptr [rsi + rdx]
4432e6: movdqa xmm7, xmm0
4432ea: movdqa xmm8, xmm5
4432ef: movdqa xmm9, xmm1
4432f4: movdqa xmm10, xmm5
4432f9: pcmpgtb xmm7, xmm4
4432fd: pcmpgtb xmm8, xmm0
443302: pcmpgtb xmm9, xmm4
443307: pcmpgtb xmm10, xmm1
44330c: pand xmm7, xmm8
443311: pand xmm9, xmm10
443316: pand xmm7, xmm6
44331a: pand xmm9, xmm6
44331f: por xmm0, xmm7
443323: por xmm1, xmm9
443328: pcmpistri xmm0, xmm1, 0x1a
443330: pop rsp
443331: adc al, byte ptr [rax]
443333: add byte ptr [rax - 0x7d], cl
443336: ret 0xe910
443339: and edi, edi
44333d: nop dword ptr [rax]
443340: sub r10, 0x1000
443347: movdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
44334d: psrldq xmm0, 4
443352: pcmpistri xmm0, xmm0, 0x3a
443358: cmp ecx, 0xb
44335b: ja 0x44326a
443361: jmp 0x444541
443366: nop word ptr cs:[rax + rax]
443370: pslldq xmm2, 0xb
443375: movdqa xmm7, xmm1
443379: movdqa xmm8, xmm5
44337e: movdqa xmm9, xmm2
443383: movdqa xmm10, xmm5
443388: pcmpgtb xmm7, xmm4
44338c: pcmpgtb xmm8, xmm1
443391: pcmpgtb xmm9, xmm4
443396: pcmpgtb xmm10, xmm2
44339b: pand xmm7, xmm8
4433a0: pand xmm9, xmm10
4433a5: pand xmm7, xmm6
4433a9: pand xmm9, xmm6
4433ae: por xmm1, xmm7
4433b2: por xmm2, xmm9
4433b7: pcmpeqb xmm2, xmm1
4433bb: psubb xmm2, xmm0
4433bf: pmovmskb r9d, xmm2
4433c4: shr edx, cl
4433c6: shr r9d, cl
4433c9: sub edx, r9d
4433cc: jne 0x4445b8
4433d2: movdqa xmm3, xmmword ptr [rdi]
4433d6: mov rcx, 0x10
4433dd: mov r9d, 5
4433e3: lea r10, [rdi + 5]
4433e7: and r10, 0xfff
4433ee: sub r10, 0x1000
4433f5: mov rdx, rcx
4433f8: nop dword ptr [rax + rax]
443400: add r10, 0x10
443404: jg 0x4434e0
44340a: movdqa xmm0, xmmword ptr [rdi + rdx]
44340f: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 5
443417: movdqa xmm1, xmmword ptr [rsi + rdx]
44341c: movdqa xmm7, xmm0
443420: movdqa xmm8, xmm5
443425: movdqa xmm9, xmm1
44342a: movdqa xmm10, xmm5
44342f: pcmpgtb xmm7, xmm4
443433: pcmpgtb xmm8, xmm0
443438: pcmpgtb xmm9, xmm4
44343d: pcmpgtb xmm10, xmm1
443442: pand xmm7, xmm8
443447: pand xmm9, xmm10
44344c: pand xmm7, xmm6
443450: pand xmm9, xmm6
443455: por xmm0, xmm7
443459: por xmm1, xmm9
44345e: pcmpistri xmm0, xmm1, 0x1a
443464: jbe 0x444590
44346a: add rdx, 0x10
44346e: add r10, 0x10
443472: jg 0x4434e0
443474: movdqa xmm0, xmmword ptr [rdi + rdx]
443479: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 5
443481: movdqa xmm1, xmmword ptr [rsi + rdx]
443486: movdqa xmm7, xmm0
44348a: movdqa xmm8, xmm5
44348f: movdqa xmm9, xmm1
443494: movdqa xmm10, xmm5
443499: pcmpgtb xmm7, xmm4
44349d: pcmpgtb xmm8, xmm0
4434a2: pcmpgtb xmm9, xmm4
4434a7: pcmpgtb xmm10, xmm1
4434ac: pand xmm7, xmm8
4434b1: pand xmm9, xmm10
4434b6: pand xmm7, xmm6
4434ba: pand xmm9, xmm6
4434bf: por xmm0, xmm7
4434c3: por xmm1, xmm9
4434c8: pcmpistri xmm0, xmm1, 0x1a
4434d4: add rdx, 0x10
4434d8: jmp 0x443400
4434dd: nop dword ptr [rax]
4434e0: sub r10, 0x1000
4434e7: movdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
4434ed: psrldq xmm0, 5
4434f2: pcmpistri xmm0, xmm0, 0x3a
4434f8: cmp ecx, 0xa
4434fb: ja 0x44340a
443501: jmp 0x444541
443506: nop word ptr cs:[rax + rax]
443510: pslldq xmm2, 0xa
443515: movdqa xmm7, xmm1
443519: movdqa xmm8, xmm5
44351e: movdqa xmm9, xmm2
443523: movdqa xmm10, xmm5
443528: pcmpgtb xmm7, xmm4
44352c: pcmpgtb xmm8, xmm1
443531: pcmpgtb xmm9, xmm4
443536: pcmpgtb xmm10, xmm2
44353b: pand xmm7, xmm8
443540: pand xmm9, xmm10
443545: pand xmm7, xmm6
443549: pand xmm9, xmm6
44354e: por xmm1, xmm7
443552: por xmm2, xmm9
443557: pcmpeqb xmm2, xmm1
44355b: psubb xmm2, xmm0
44355f: pmovmskb r9d, xmm2
443564: shr edx, cl
443566: shr r9d, cl
443569: sub edx, r9d
44356c: jne 0x4445b8
443572: movdqa xmm3, xmmword ptr [rdi]
443576: mov rcx, 0x10
44357d: mov r9d, 6
443583: lea r10, [rdi + 6]
443587: and r10, 0xfff
44358e: sub r10, 0x1000
443595: mov rdx, rcx
443598: nop dword ptr [rax + rax]
4435a0: add r10, 0x10
4435a4: jg 0x443680
4435aa: movdqa xmm0, xmmword ptr [rdi + rdx]
4435af: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 6
4435b7: movdqa xmm1, xmmword ptr [rsi + rdx]
4435bc: movdqa xmm7, xmm0
4435c0: movdqa xmm8, xmm5
4435c5: movdqa xmm9, xmm1
4435ca: movdqa xmm10, xmm5
4435cf: pcmpgtb xmm7, xmm4
4435d3: pcmpgtb xmm8, xmm0
4435d8: pcmpgtb xmm9, xmm4
4435dd: pcmpgtb xmm10, xmm1
4435e2: pand xmm7, xmm8
4435e7: pand xmm9, xmm10
4435ec: pand xmm7, xmm6
4435f0: pand xmm9, xmm6
4435f5: por xmm0, xmm7
4435f9: por xmm1, xmm9
4435fe: pcmpistri xmm0, xmm1, 0x1a
443604: jbe 0x444590
44360a: add rdx, 0x10
44360e: add r10, 0x10
443612: jg 0x443680
443614: movdqa xmm0, xmmword ptr [rdi + rdx]
443619: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 6
443621: movdqa xmm1, xmmword ptr [rsi + rdx]
443626: movdqa xmm7, xmm0
44362a: movdqa xmm8, xmm5
44362f: movdqa xmm9, xmm1
443634: movdqa xmm10, xmm5
443639: pcmpgtb xmm7, xmm4
44363d: pcmpgtb xmm8, xmm0
443642: pcmpgtb xmm9, xmm4
443647: pcmpgtb xmm10, xmm1
44364c: pand xmm7, xmm8
443651: pand xmm9, xmm10
443656: pand xmm7, xmm6
44365a: pand xmm9, xmm6
44365f: por xmm0, xmm7
443663: por xmm1, xmm9
443668: pcmpistri xmm0, xmm1, 0x1a
443670: sbb al, 0xf
443672: add byte ptr [rax], al
443674: add rdx, 0x10
443678: jmp 0x4435a0
44367d: nop dword ptr [rax]
443680: sub r10, 0x1000
443687: movdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
44368d: psrldq xmm0, 6
443692: pcmpistri xmm0, xmm0, 0x3a
443698: cmp ecx, 9
44369b: ja 0x4435aa
4436a1: jmp 0x444541
4436a6: nop word ptr cs:[rax + rax]
4436b0: pslldq xmm2, 9
4436b5: movdqa xmm7, xmm1
4436b9: movdqa xmm8, xmm5
4436be: movdqa xmm9, xmm2
4436c3: movdqa xmm10, xmm5
4436c8: pcmpgtb xmm7, xmm4
4436cc: pcmpgtb xmm8, xmm1
4436d1: pcmpgtb xmm9, xmm4
4436d6: pcmpgtb xmm10, xmm2
4436db: pand xmm7, xmm8
4436e0: pand xmm9, xmm10
4436e5: pand xmm7, xmm6
4436e9: pand xmm9, xmm6
4436ee: por xmm1, xmm7
4436f2: por xmm2, xmm9
4436f7: pcmpeqb xmm2, xmm1
4436fb: psubb xmm2, xmm0
4436ff: pmovmskb r9d, xmm2
443704: shr edx, cl
443706: shr r9d, cl
443709: sub edx, r9d
44370c: jne 0x4445b8
443712: movdqa xmm3, xmmword ptr [rdi]
443716: mov rcx, 0x10
44371d: mov r9d, 7
443723: lea r10, [rdi + 7]
443727: and r10, 0xfff
44372e: sub r10, 0x1000
443735: mov rdx, rcx
443738: nop dword ptr [rax + rax]
443740: add r10, 0x10
443744: jg 0x443820
44374a: movdqa xmm0, xmmword ptr [rdi + rdx]
44374f: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 7
443757: movdqa xmm1, xmmword ptr [rsi + rdx]
44375c: movdqa xmm7, xmm0
443760: movdqa xmm8, xmm5
443765: movdqa xmm9, xmm1
44376a: movdqa xmm10, xmm5
44376f: pcmpgtb xmm7, xmm4
443773: pcmpgtb xmm8, xmm0
443778: pcmpgtb xmm9, xmm4
44377d: pcmpgtb xmm10, xmm1
443782: pand xmm7, xmm8
443787: pand xmm9, xmm10
44378c: pand xmm7, xmm6
443790: pand xmm9, xmm6
443795: por xmm0, xmm7
443799: por xmm1, xmm9
44379e: pcmpistri xmm0, xmm1, 0x1a
4437a4: jbe 0x444590
4437aa: add rdx, 0x10
4437ae: add r10, 0x10
4437b2: jg 0x443820
4437b4: movdqa xmm0, xmmword ptr [rdi + rdx]
4437b9: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 7
4437c1: movdqa xmm1, xmmword ptr [rsi + rdx]
4437c6: movdqa xmm7, xmm0
4437ca: movdqa xmm8, xmm5
4437cf: movdqa xmm9, xmm1
4437d4: movdqa xmm10, xmm5
4437d9: pcmpgtb xmm7, xmm4
4437dd: pcmpgtb xmm8, xmm0
4437e2: pcmpgtb xmm9, xmm4
4437e7: pcmpgtb xmm10, xmm1
4437ec: pand xmm7, xmm8
4437f1: pand xmm9, xmm10
4437f6: pand xmm7, xmm6
4437fa: pand xmm9, xmm6
4437ff: por xmm0, xmm7
443803: por xmm1, xmm9
443808: pcmpistri xmm0, xmm1, 0x1a
443810: jl 0x44381f
443812: add byte ptr [rax], al
443814: add rdx, 0x10
443818: jmp 0x443740
44381f: add byte ptr [rcx - 0x7f], cl
443823: add byte ptr [rax], dl
443825: add byte ptr [rax], al
443827: movdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
44382d: psrldq xmm0, 7
443832: pcmpistri xmm0, xmm0, 0x3a
443838: cmp ecx, 8
44383b: ja 0x44374a
443841: jmp 0x444541
443846: nop word ptr cs:[rax + rax]
443850: pslldq xmm2, 8
443855: movdqa xmm7, xmm1
443859: movdqa xmm8, xmm5
44385e: movdqa xmm9, xmm2
443863: movdqa xmm10, xmm5
443868: pcmpgtb xmm7, xmm4
44386c: pcmpgtb xmm8, xmm1
443871: pcmpgtb xmm9, xmm4
443876: pcmpgtb xmm10, xmm2
44387b: pand xmm7, xmm8
443880: pand xmm9, xmm10
443885: pand xmm7, xmm6
443889: pand xmm9, xmm6
44388e: por xmm1, xmm7
443892: por xmm2, xmm9
443897: pcmpeqb xmm2, xmm1
44389b: psubb xmm2, xmm0
44389f: pmovmskb r9d, xmm2
4438a4: shr edx, cl
4438a6: shr r9d, cl
4438a9: sub edx, r9d
4438ac: jne 0x4445b8
4438b2: movdqa xmm3, xmmword ptr [rdi]
4438b6: mov rcx, 0x10
4438bd: mov r9d, 8
4438c3: lea r10, [rdi + 8]
4438c7: and r10, 0xfff
4438ce: sub r10, 0x1000
4438d5: mov rdx, rcx
4438d8: nop dword ptr [rax + rax]
4438e0: add r10, 0x10
4438e4: jg 0x4439c0
4438ea: movdqa xmm0, xmmword ptr [rdi + rdx]
4438ef: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 8
4438f7: movdqa xmm1, xmmword ptr [rsi + rdx]
4438fc: movdqa xmm7, xmm0
443900: movdqa xmm8, xmm5
443905: movdqa xmm9, xmm1
44390a: movdqa xmm10, xmm5
44390f: pcmpgtb xmm7, xmm4
443913: pcmpgtb xmm8, xmm0
443918: pcmpgtb xmm9, xmm4
44391d: pcmpgtb xmm10, xmm1
443922: pand xmm7, xmm8
443927: pand xmm9, xmm10
44392c: pand xmm7, xmm6
443930: pand xmm9, xmm6
443935: por xmm0, xmm7
443939: por xmm1, xmm9
44393e: pcmpistri xmm0, xmm1, 0x1a
443944: jbe 0x444590
44394a: add rdx, 0x10
44394e: add r10, 0x10
443952: jg 0x4439c0
443954: movdqa xmm0, xmmword ptr [rdi + rdx]
443959: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 8
443961: movdqa xmm1, xmmword ptr [rsi + rdx]
443966: movdqa xmm7, xmm0
44396a: movdqa xmm8, xmm5
44396f: movdqa xmm9, xmm1
443974: movdqa xmm10, xmm5
443979: pcmpgtb xmm7, xmm4
44397d: pcmpgtb xmm8, xmm0
443982: pcmpgtb xmm9, xmm4
443987: pcmpgtb xmm10, xmm1
44398c: pand xmm7, xmm8
443991: pand xmm9, xmm10
443996: pand xmm7, xmm6
44399a: pand xmm9, xmm6
44399f: por xmm0, xmm7
4439a3: por xmm1, xmm9
4439a8: pcmpistri xmm0, xmm1, 0x1a
4439b0: fmul qword ptr [rbx]
4439b2: add byte ptr [rax], al
4439b4: add rdx, 0x10
4439b8: jmp 0x4438e0
4439bd: nop dword ptr [rax]
4439c0: sub r10, 0x1000
4439c7: movdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
4439cd: psrldq xmm0, 8
4439d2: pcmpistri xmm0, xmm0, 0x3a
4439d8: cmp ecx, 7
4439db: ja 0x4438ea
4439e1: jmp 0x444541
4439e6: nop word ptr cs:[rax + rax]
4439f0: pslldq xmm2, 7
4439f5: movdqa xmm7, xmm1
4439f9: movdqa xmm8, xmm5
4439fe: movdqa xmm9, xmm2
443a03: movdqa xmm10, xmm5
443a08: pcmpgtb xmm7, xmm4
443a0c: pcmpgtb xmm8, xmm1
443a11: pcmpgtb xmm9, xmm4
443a16: pcmpgtb xmm10, xmm2
443a1b: pand xmm7, xmm8
443a20: pand xmm9, xmm10
443a25: pand xmm7, xmm6
443a29: pand xmm9, xmm6
443a2e: por xmm1, xmm7
443a32: por xmm2, xmm9
443a37: pcmpeqb xmm2, xmm1
443a3b: psubb xmm2, xmm0
443a3f: pmovmskb r9d, xmm2
443a44: shr edx, cl
443a46: shr r9d, cl
443a49: sub edx, r9d
443a4c: jne 0x4445b8
443a52: movdqa xmm3, xmmword ptr [rdi]
443a56: mov rcx, 0x10
443a5d: mov r9d, 9
443a63: lea r10, [rdi + 9]
443a67: and r10, 0xfff
443a6e: sub r10, 0x1000
443a75: mov rdx, rcx
443a78: nop dword ptr [rax + rax]
443a80: add r10, 0x10
443a84: jg 0x443b60
443a8a: movdqa xmm0, xmmword ptr [rdi + rdx]
443a8f: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 9
443a97: movdqa xmm1, xmmword ptr [rsi + rdx]
443a9c: movdqa xmm7, xmm0
443aa0: movdqa xmm8, xmm5
443aa5: movdqa xmm9, xmm1
443aaa: movdqa xmm10, xmm5
443aaf: pcmpgtb xmm7, xmm4
443ab3: pcmpgtb xmm8, xmm0
443ab8: pcmpgtb xmm9, xmm4
443abd: pcmpgtb xmm10, xmm1
443ac2: pand xmm7, xmm8
443ac7: pand xmm9, xmm10
443acc: pand xmm7, xmm6
443ad0: pand xmm9, xmm6
443ad5: por xmm0, xmm7
443ad9: por xmm1, xmm9
443ade: pcmpistri xmm0, xmm1, 0x1a
443ae4: jbe 0x444590
443aea: add rdx, 0x10
443aee: add r10, 0x10
443af2: jg 0x443b60
443af4: movdqa xmm0, xmmword ptr [rdi + rdx]
443af9: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 9
443b01: movdqa xmm1, xmmword ptr [rsi + rdx]
443b06: movdqa xmm7, xmm0
443b0a: movdqa xmm8, xmm5
443b0f: movdqa xmm9, xmm1
443b14: movdqa xmm10, xmm5
443b19: pcmpgtb xmm7, xmm4
443b1d: pcmpgtb xmm8, xmm0
443b22: pcmpgtb xmm9, xmm4
443b27: pcmpgtb xmm10, xmm1
443b2c: pand xmm7, xmm8
443b31: pand xmm9, xmm10
443b36: pand xmm7, xmm6
443b3a: pand xmm9, xmm6
443b3f: por xmm0, xmm7
443b43: por xmm1, xmm9
443b48: pcmpistri xmm0, xmm1, 0x1a
443b50: cmp al, 0xa
443b52: add byte ptr [rax], al
443b54: add rdx, 0x10
443b58: jmp 0x443a80
443b5d: nop dword ptr [rax]
443b60: sub r10, 0x1000
443b67: movdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
443b6d: psrldq xmm0, 9
443b72: pcmpistri xmm0, xmm0, 0x3a
443b78: cmp ecx, 6
443b7b: ja 0x443a8a
443b81: jmp 0x444541
443b86: nop word ptr cs:[rax + rax]
443b90: pslldq xmm2, 6
443b95: movdqa xmm7, xmm1
443b99: movdqa xmm8, xmm5
443b9e: movdqa xmm9, xmm2
443ba3: movdqa xmm10, xmm5
443ba8: pcmpgtb xmm7, xmm4
443bac: pcmpgtb xmm8, xmm1
443bb1: pcmpgtb xmm9, xmm4
443bb6: pcmpgtb xmm10, xmm2
443bbb: pand xmm7, xmm8
443bc0: pand xmm9, xmm10
443bc5: pand xmm7, xmm6
443bc9: pand xmm9, xmm6
443bce: por xmm1, xmm7
443bd2: por xmm2, xmm9
443bd7: pcmpeqb xmm2, xmm1
443bdb: psubb xmm2, xmm0
443bdf: pmovmskb r9d, xmm2
443be4: shr edx, cl
443be6: shr r9d, cl
443be9: sub edx, r9d
443bec: jne 0x4445b8
443bf2: movdqa xmm3, xmmword ptr [rdi]
443bf6: mov rcx, 0x10
443bfd: mov r9d, 0xa
443c03: lea r10, [rdi + 0xa]
443c07: and r10, 0xfff
443c0e: sub r10, 0x1000
443c15: mov rdx, rcx
443c18: nop dword ptr [rax + rax]
443c20: add r10, 0x10
443c24: jg 0x443d00
443c2a: movdqa xmm0, xmmword ptr [rdi + rdx]
443c2f: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 0xa
443c37: movdqa xmm1, xmmword ptr [rsi + rdx]
443c3c: movdqa xmm7, xmm0
443c40: movdqa xmm8, xmm5
443c45: movdqa xmm9, xmm1
443c4a: movdqa xmm10, xmm5
443c4f: pcmpgtb xmm7, xmm4
443c53: pcmpgtb xmm8, xmm0
443c58: pcmpgtb xmm9, xmm4
443c5d: pcmpgtb xmm10, xmm1
443c62: pand xmm7, xmm8
443c67: pand xmm9, xmm10
443c6c: pand xmm7, xmm6
443c70: pand xmm9, xmm6
443c75: por xmm0, xmm7
443c79: por xmm1, xmm9
443c7e: pcmpistri xmm0, xmm1, 0x1a
443c84: jbe 0x444590
443c8a: add rdx, 0x10
443c8e: add r10, 0x10
443c92: jg 0x443d00
443c94: movdqa xmm0, xmmword ptr [rdi + rdx]
443c99: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 0xa
443ca1: movdqa xmm1, xmmword ptr [rsi + rdx]
443ca6: movdqa xmm7, xmm0
443caa: movdqa xmm8, xmm5
443caf: movdqa xmm9, xmm1
443cb4: movdqa xmm10, xmm5
443cb9: pcmpgtb xmm7, xmm4
443cbd: pcmpgtb xmm8, xmm0
443cc2: pcmpgtb xmm9, xmm4
443cc7: pcmpgtb xmm10, xmm1
443ccc: pand xmm7, xmm8
443cd1: pand xmm9, xmm10
443cd6: pand xmm7, xmm6
443cda: pand xmm9, xmm6
443cdf: por xmm0, xmm7
443ce3: por xmm1, xmm9
443ce8: pcmpistri xmm0, xmm1, 0x1a
443cf0: pushfq 
443cf1: or byte ptr [rax], al
443cf3: add byte ptr [rax - 0x7d], cl
443cf6: ret 0xe910
443cf9: and edi, edi
443cfd: nop dword ptr [rax]
443d00: sub r10, 0x1000
443d07: movdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
443d0d: psrldq xmm0, 0xa
443d12: pcmpistri xmm0, xmm0, 0x3a
443d18: cmp ecx, 5
443d1b: ja 0x443c2a
443d21: jmp 0x444541
443d26: nop word ptr cs:[rax + rax]
443d30: pslldq xmm2, 5
443d35: movdqa xmm7, xmm1
443d39: movdqa xmm8, xmm5
443d3e: movdqa xmm9, xmm2
443d43: movdqa xmm10, xmm5
443d48: pcmpgtb xmm7, xmm4
443d4c: pcmpgtb xmm8, xmm1
443d51: pcmpgtb xmm9, xmm4
443d56: pcmpgtb xmm10, xmm2
443d5b: pand xmm7, xmm8
443d60: pand xmm9, xmm10
443d65: pand xmm7, xmm6
443d69: pand xmm9, xmm6
443d6e: por xmm1, xmm7
443d72: por xmm2, xmm9
443d77: pcmpeqb xmm2, xmm1
443d7b: psubb xmm2, xmm0
443d7f: pmovmskb r9d, xmm2
443d84: shr edx, cl
443d86: shr r9d, cl
443d89: sub edx, r9d
443d8c: jne 0x4445b8
443d92: movdqa xmm3, xmmword ptr [rdi]
443d96: mov rcx, 0x10
443d9d: mov r9d, 0xb
443da3: lea r10, [rdi + 0xb]
443da7: and r10, 0xfff
443dae: sub r10, 0x1000
443db5: mov rdx, rcx
443db8: nop dword ptr [rax + rax]
443dc0: add r10, 0x10
443dc4: jg 0x443ea0
443dca: movdqa xmm0, xmmword ptr [rdi + rdx]
443dcf: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 0xb
443dd7: movdqa xmm1, xmmword ptr [rsi + rdx]
443ddc: movdqa xmm7, xmm0
443de0: movdqa xmm8, xmm5
443de5: movdqa xmm9, xmm1
443dea: movdqa xmm10, xmm5
443def: pcmpgtb xmm7, xmm4
443df3: pcmpgtb xmm8, xmm0
443df8: pcmpgtb xmm9, xmm4
443dfd: pcmpgtb xmm10, xmm1
443e02: pand xmm7, xmm8
443e07: pand xmm9, xmm10
443e0c: pand xmm7, xmm6
443e10: pand xmm9, xmm6
443e15: por xmm0, xmm7
443e19: por xmm1, xmm9
443e1e: pcmpistri xmm0, xmm1, 0x1a
443e24: jbe 0x444590
443e2a: add rdx, 0x10
443e2e: add r10, 0x10
443e32: jg 0x443ea0
443e34: movdqa xmm0, xmmword ptr [rdi + rdx]
443e39: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 0xb
443e41: movdqa xmm1, xmmword ptr [rsi + rdx]
443e46: movdqa xmm7, xmm0
443e4a: movdqa xmm8, xmm5
443e4f: movdqa xmm9, xmm1
443e54: movdqa xmm10, xmm5
443e59: pcmpgtb xmm7, xmm4
443e5d: pcmpgtb xmm8, xmm0
443e62: pcmpgtb xmm9, xmm4
443e67: pcmpgtb xmm10, xmm1
443e6c: pand xmm7, xmm8
443e71: pand xmm9, xmm10
443e76: pand xmm7, xmm6
443e7a: pand xmm9, xmm6
443e7f: por xmm0, xmm7
443e83: por xmm1, xmm9
443e88: pcmpistri xmm0, xmm1, 0x1a
443e90: cld 
443e94: add rdx, 0x10
443e98: jmp 0x443dc0
443e9d: nop dword ptr [rax]
443ea0: sub r10, 0x1000
443ea7: movdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
443ead: psrldq xmm0, 0xb
443eb2: pcmpistri xmm0, xmm0, 0x3a
443eb8: cmp ecx, 4
443ebb: ja 0x443dca
443ec1: jmp 0x444541
443ec6: nop word ptr cs:[rax + rax]
443ed0: pslldq xmm2, 4
443ed5: movdqa xmm7, xmm1
443ed9: movdqa xmm8, xmm5
443ede: movdqa xmm9, xmm2
443ee3: movdqa xmm10, xmm5
443ee8: pcmpgtb xmm7, xmm4
443eec: pcmpgtb xmm8, xmm1
443ef1: pcmpgtb xmm9, xmm4
443ef6: pcmpgtb xmm10, xmm2
443efb: pand xmm7, xmm8
443f00: pand xmm9, xmm10
443f05: pand xmm7, xmm6
443f09: pand xmm9, xmm6
443f0e: por xmm1, xmm7
443f12: por xmm2, xmm9
443f17: pcmpeqb xmm2, xmm1
443f1b: psubb xmm2, xmm0
443f1f: pmovmskb r9d, xmm2
443f24: shr edx, cl
443f26: shr r9d, cl
443f29: sub edx, r9d
443f2c: jne 0x4445b8
443f32: movdqa xmm3, xmmword ptr [rdi]
443f36: mov rcx, 0x10
443f3d: mov r9d, 0xc
443f43: lea r10, [rdi + 0xc]
443f47: and r10, 0xfff
443f4e: sub r10, 0x1000
443f55: mov rdx, rcx
443f58: nop dword ptr [rax + rax]
443f60: add r10, 0x10
443f64: jg 0x444040
443f6a: movdqa xmm0, xmmword ptr [rdi + rdx]
443f6f: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 0xc
443f77: movdqa xmm1, xmmword ptr [rsi + rdx]
443f7c: movdqa xmm7, xmm0
443f80: movdqa xmm8, xmm5
443f85: movdqa xmm9, xmm1
443f8a: movdqa xmm10, xmm5
443f8f: pcmpgtb xmm7, xmm4
443f93: pcmpgtb xmm8, xmm0
443f98: pcmpgtb xmm9, xmm4
443f9d: pcmpgtb xmm10, xmm1
443fa2: pand xmm7, xmm8
443fa7: pand xmm9, xmm10
443fac: pand xmm7, xmm6
443fb0: pand xmm9, xmm6
443fb5: por xmm0, xmm7
443fb9: por xmm1, xmm9
443fbe: pcmpistri xmm0, xmm1, 0x1a
443fc4: jbe 0x444590
443fca: add rdx, 0x10
443fce: add r10, 0x10
443fd2: jg 0x444040
443fd4: movdqa xmm0, xmmword ptr [rdi + rdx]
443fd9: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 0xc
443fe1: movdqa xmm1, xmmword ptr [rsi + rdx]
443fe6: movdqa xmm7, xmm0
443fea: movdqa xmm8, xmm5
443fef: movdqa xmm9, xmm1
443ff4: movdqa xmm10, xmm5
443ff9: pcmpgtb xmm7, xmm4
443ffd: pcmpgtb xmm8, xmm0
444002: pcmpgtb xmm9, xmm4
444007: pcmpgtb xmm10, xmm1
44400c: pand xmm7, xmm8
444011: pand xmm9, xmm10
444016: pand xmm7, xmm6
44401a: pand xmm9, xmm6
44401f: por xmm0, xmm7
444023: por xmm1, xmm9
444028: pcmpistri xmm0, xmm1, 0x1a
444030: pop rsp
444031: add eax, 0x83480000
444036: ret 0xe910
444039: and edi, edi
44403d: nop dword ptr [rax]
444040: sub r10, 0x1000
444047: movdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
44404d: psrldq xmm0, 0xc
444052: pcmpistri xmm0, xmm0, 0x3a
444058: cmp ecx, 3
44405b: ja 0x443f6a
444061: jmp 0x444541
444066: nop word ptr cs:[rax + rax]
444070: pslldq xmm2, 3
444075: movdqa xmm7, xmm1
444079: movdqa xmm8, xmm5
44407e: movdqa xmm9, xmm2
444083: movdqa xmm10, xmm5
444088: pcmpgtb xmm7, xmm4
44408c: pcmpgtb xmm8, xmm1
444091: pcmpgtb xmm9, xmm4
444096: pcmpgtb xmm10, xmm2
44409b: pand xmm7, xmm8
4440a0: pand xmm9, xmm10
4440a5: pand xmm7, xmm6
4440a9: pand xmm9, xmm6
4440ae: por xmm1, xmm7
4440b2: por xmm2, xmm9
4440b7: pcmpeqb xmm2, xmm1
4440bb: psubb xmm2, xmm0
4440bf: pmovmskb r9d, xmm2
4440c4: shr edx, cl
4440c6: shr r9d, cl
4440c9: sub edx, r9d
4440cc: jne 0x4445b8
4440d2: movdqa xmm3, xmmword ptr [rdi]
4440d6: mov rcx, 0x10
4440dd: mov r9d, 0xd
4440e3: lea r10, [rdi + 0xd]
4440e7: and r10, 0xfff
4440ee: sub r10, 0x1000
4440f5: mov rdx, rcx
4440f8: nop dword ptr [rax + rax]
444100: add r10, 0x10
444104: jg 0x4441e0
44410a: movdqa xmm0, xmmword ptr [rdi + rdx]
44410f: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 0xd
444117: movdqa xmm1, xmmword ptr [rsi + rdx]
44411c: movdqa xmm7, xmm0
444120: movdqa xmm8, xmm5
444125: movdqa xmm9, xmm1
44412a: movdqa xmm10, xmm5
44412f: pcmpgtb xmm7, xmm4
444133: pcmpgtb xmm8, xmm0
444138: pcmpgtb xmm9, xmm4
44413d: pcmpgtb xmm10, xmm1
444142: pand xmm7, xmm8
444147: pand xmm9, xmm10
44414c: pand xmm7, xmm6
444150: pand xmm9, xmm6
444155: por xmm0, xmm7
444159: por xmm1, xmm9
44415e: pcmpistri xmm0, xmm1, 0x1a
444164: jbe 0x444590
44416a: add rdx, 0x10
44416e: add r10, 0x10
444172: jg 0x4441e0
444174: movdqa xmm0, xmmword ptr [rdi + rdx]
444179: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 0xd
444181: movdqa xmm1, xmmword ptr [rsi + rdx]
444186: movdqa xmm7, xmm0
44418a: movdqa xmm8, xmm5
44418f: movdqa xmm9, xmm1
444194: movdqa xmm10, xmm5
444199: pcmpgtb xmm7, xmm4
44419d: pcmpgtb xmm8, xmm0
4441a2: pcmpgtb xmm9, xmm4
4441a7: pcmpgtb xmm10, xmm1
4441ac: pand xmm7, xmm8
4441b1: pand xmm9, xmm10
4441b6: pand xmm7, xmm6
4441ba: pand xmm9, xmm6
4441bf: por xmm0, xmm7
4441c3: por xmm1, xmm9
4441c8: pcmpistri xmm0, xmm1, 0x1a
4441d4: add rdx, 0x10
4441d8: jmp 0x444100
4441dd: nop dword ptr [rax]
4441e0: sub r10, 0x1000
4441e7: movdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
4441ed: psrldq xmm0, 0xd
4441f2: pcmpistri xmm0, xmm0, 0x3a
4441f8: cmp ecx, 2
4441fb: ja 0x44410a
444201: jmp 0x444541
444206: nop word ptr cs:[rax + rax]
444210: pslldq xmm2, 2
444215: movdqa xmm7, xmm1
444219: movdqa xmm8, xmm5
44421e: movdqa xmm9, xmm2
444223: movdqa xmm10, xmm5
444228: pcmpgtb xmm7, xmm4
44422c: pcmpgtb xmm8, xmm1
444231: pcmpgtb xmm9, xmm4
444236: pcmpgtb xmm10, xmm2
44423b: pand xmm7, xmm8
444240: pand xmm9, xmm10
444245: pand xmm7, xmm6
444249: pand xmm9, xmm6
44424e: por xmm1, xmm7
444252: por xmm2, xmm9
444257: pcmpeqb xmm2, xmm1
44425b: psubb xmm2, xmm0
44425f: pmovmskb r9d, xmm2
444264: shr edx, cl
444266: shr r9d, cl
444269: sub edx, r9d
44426c: jne 0x4445b8
444272: movdqa xmm3, xmmword ptr [rdi]
444276: mov rcx, 0x10
44427d: mov r9d, 0xe
444283: lea r10, [rdi + 0xe]
444287: and r10, 0xfff
44428e: sub r10, 0x1000
444295: mov rdx, rcx
444298: nop dword ptr [rax + rax]
4442a0: add r10, 0x10
4442a4: jg 0x444380
4442aa: movdqa xmm0, xmmword ptr [rdi + rdx]
4442af: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 0xe
4442b7: movdqa xmm1, xmmword ptr [rsi + rdx]
4442bc: movdqa xmm7, xmm0
4442c0: movdqa xmm8, xmm5
4442c5: movdqa xmm9, xmm1
4442ca: movdqa xmm10, xmm5
4442cf: pcmpgtb xmm7, xmm4
4442d3: pcmpgtb xmm8, xmm0
4442d8: pcmpgtb xmm9, xmm4
4442dd: pcmpgtb xmm10, xmm1
4442e2: pand xmm7, xmm8
4442e7: pand xmm9, xmm10
4442ec: pand xmm7, xmm6
4442f0: pand xmm9, xmm6
4442f5: por xmm0, xmm7
4442f9: por xmm1, xmm9
4442fe: pcmpistri xmm0, xmm1, 0x1a
444304: jbe 0x444590
44430a: add rdx, 0x10
44430e: add r10, 0x10
444312: jg 0x444380
444314: movdqa xmm0, xmmword ptr [rdi + rdx]
444319: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 0xe
444321: movdqa xmm1, xmmword ptr [rsi + rdx]
444326: movdqa xmm7, xmm0
44432a: movdqa xmm8, xmm5
44432f: movdqa xmm9, xmm1
444334: movdqa xmm10, xmm5
444339: pcmpgtb xmm7, xmm4
44433d: pcmpgtb xmm8, xmm0
444342: pcmpgtb xmm9, xmm4
444347: pcmpgtb xmm10, xmm1
44434c: pand xmm7, xmm8
444351: pand xmm9, xmm10
444356: pand xmm7, xmm6
44435a: pand xmm9, xmm6
44435f: por xmm0, xmm7
444363: por xmm1, xmm9
444368: pcmpistri xmm0, xmm1, 0x1a
444370: sbb al, 2
444372: add byte ptr [rax], al
444374: add rdx, 0x10
444378: jmp 0x4442a0
44437d: nop dword ptr [rax]
444380: sub r10, 0x1000
444387: movdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
44438d: psrldq xmm0, 0xe
444392: pcmpistri xmm0, xmm0, 0x3a
444398: cmp ecx, 1
44439b: ja 0x4442aa
4443a1: jmp 0x444541
4443a6: nop word ptr cs:[rax + rax]
4443b0: pslldq xmm2, 1
4443b5: movdqa xmm7, xmm1
4443b9: movdqa xmm8, xmm5
4443be: movdqa xmm9, xmm2
4443c3: movdqa xmm10, xmm5
4443c8: pcmpgtb xmm7, xmm4
4443cc: pcmpgtb xmm8, xmm1
4443d1: pcmpgtb xmm9, xmm4
4443d6: pcmpgtb xmm10, xmm2
4443db: pand xmm7, xmm8
4443e0: pand xmm9, xmm10
4443e5: pand xmm7, xmm6
4443e9: pand xmm9, xmm6
4443ee: por xmm1, xmm7
4443f2: por xmm2, xmm9
4443f7: pcmpeqb xmm2, xmm1
4443fb: psubb xmm2, xmm0
4443ff: pmovmskb r9d, xmm2
444404: shr edx, cl
444406: shr r9d, cl
444409: sub edx, r9d
44440c: jne 0x4445b8
444412: movdqa xmm3, xmmword ptr [rdi]
444416: mov rcx, 0x10
44441d: mov r9d, 0xf
444423: lea r10, [rdi + 0xf]
444427: and r10, 0xfff
44442e: sub r10, 0x1000
444435: mov rdx, rcx
444438: nop dword ptr [rax + rax]
444440: add r10, 0x10
444444: jg 0x444520
44444a: movdqa xmm0, xmmword ptr [rdi + rdx]
44444f: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 0xf
444457: movdqa xmm1, xmmword ptr [rsi + rdx]
44445c: movdqa xmm7, xmm0
444460: movdqa xmm8, xmm5
444465: movdqa xmm9, xmm1
44446a: movdqa xmm10, xmm5
44446f: pcmpgtb xmm7, xmm4
444473: pcmpgtb xmm8, xmm0
444478: pcmpgtb xmm9, xmm4
44447d: pcmpgtb xmm10, xmm1
444482: pand xmm7, xmm8
444487: pand xmm9, xmm10
44448c: pand xmm7, xmm6
444490: pand xmm9, xmm6
444495: por xmm0, xmm7
444499: por xmm1, xmm9
44449e: pcmpistri xmm0, xmm1, 0x1a
4444a4: jbe 0x444590
4444aa: add rdx, 0x10
4444ae: add r10, 0x10
4444b2: jg 0x444520
4444b4: movdqa xmm0, xmmword ptr [rdi + rdx]
4444b9: palignr xmm0, xmmword ptr [rdi + rdx - 0x10], 0xf
4444c1: movdqa xmm1, xmmword ptr [rsi + rdx]
4444c6: movdqa xmm7, xmm0
4444ca: movdqa xmm8, xmm5
4444cf: movdqa xmm9, xmm1
4444d4: movdqa xmm10, xmm5
4444d9: pcmpgtb xmm7, xmm4
4444dd: pcmpgtb xmm8, xmm0
4444e2: pcmpgtb xmm9, xmm4
4444e7: pcmpgtb xmm10, xmm1
4444ec: pand xmm7, xmm8
4444f1: pand xmm9, xmm10
4444f6: pand xmm7, xmm6
4444fa: pand xmm9, xmm6
4444ff: por xmm0, xmm7
444503: por xmm1, xmm9
444508: pcmpistri xmm0, xmm1, 0x1a
44450e: jbe 0x444590
444514: add rdx, 0x10
444518: jmp 0x444440
44451d: nop dword ptr [rax]
444520: sub r10, 0x1000
444527: movdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
44452d: psrldq xmm0, 0xf
444532: pcmpistri xmm0, xmm0, 0x3a
444538: cmp ecx, 0
44453b: ja 0x44444a
444541: movdqa xmm1, xmmword ptr [rsi + rdx]
444546: movdqa xmm7, xmm0
44454a: movdqa xmm8, xmm5
44454f: movdqa xmm9, xmm1
444554: movdqa xmm10, xmm5
444559: pcmpgtb xmm7, xmm4
44455d: pcmpgtb xmm8, xmm0
444562: pcmpgtb xmm9, xmm4
444567: pcmpgtb xmm10, xmm1
44456c: pand xmm7, xmm8
444571: pand xmm9, xmm10
444576: pand xmm7, xmm6
44457a: pand xmm9, xmm6
44457f: por xmm0, xmm7
444583: por xmm1, xmm9
444588: pcmpistri xmm0, xmm1, 0x1a
44458e: nop 
444590: jae 0x4445ec
444592: add rdx, rcx
444595: lea rdi, [rdi + r9 - 0x10]
44459a: movzx eax, byte ptr [rdi + rdx]
44459e: movzx edx, byte ptr [rsi + rdx]
4445a2: test r8d, r8d
4445a5: je 0x4445a8
4445a7: xchg edx, eax
4445a8: lea rcx, [rip + 0x57451]
4445af: mov edx, dword ptr [rcx + rdx*4]
4445b2: mov eax, dword ptr [rcx + rax*4]
4445b5: sub eax, edx
4445b7: ret 
4445b8: lea rdi, [rdi + rax]
4445bc: lea rsi, [rsi + rcx]
4445c0: test r8d, r8d
4445c3: je 0x4445d0
4445c5: xchg rdi, rsi
4445c8: nop dword ptr [rax + rax]
4445d0: bsf rdx, rdx
4445d4: movzx ecx, byte ptr [rsi + rdx]
4445d8: movzx eax, byte ptr [rdi + rdx]
4445dc: lea rdx, [rip + 0x5741d]
4445e3: mov ecx, dword ptr [rdx + rcx*4]
4445e6: mov eax, dword ptr [rdx + rax*4]
4445e9: sub eax, ecx
4445eb: ret 
4445ec: xor eax, eax
4445ee: ret 
4445ef: nop 
4445f0: movzx ecx, byte ptr [rsi]
4445f3: movzx eax, byte ptr [rdi]
4445f6: lea rdx, [rip + 0x57403]
4445fd: mov ecx, dword ptr [rdx + rcx*4]
444600: mov eax, dword ptr [rdx + rax*4]
444603: sub eax, ecx
444605: ret 
444606: nop word ptr cs:[rax + rax]
444610: endbr64 
444614: mov rax, 0xffffffffffffffb0
44461b: mov rdx, qword ptr fs:[rax]
44461f: nop dword ptr [rax + rax]
444624: endbr64 
444628: mov rax, qword ptr [rdx]
44462b: test dword ptr [rax + 0x278], 1
444635: jne 0x44efc0
44463b: mov ecx, esi
44463d: mov eax, edi
44463f: and rcx, 0x3f
444643: and rax, 0x3f
444647: vmovdqa xmm4, xmmword ptr [rip + 0x53c71]
44464f: vmovdqa xmm5, xmmword ptr [rip + 0x53d59]
444657: vmovdqa xmm6, xmmword ptr [rip + 0x53c81]
44465f: cmp ecx, 0x30
444662: ja 0x4446d0
444664: cmp eax, 0x30
444667: ja 0x4446d0
444669: vmovdqu xmm1, xmmword ptr [rdi]
44466d: vmovdqu xmm2, xmmword ptr [rsi]
444671: vpcmpgtb xmm7, xmm1, xmm4
444675: vpcmpgtb xmm8, xmm1, xmm5
444679: vpcmpgtb xmm9, xmm2, xmm4
44467d: vpcmpgtb xmm10, xmm2, xmm5
444681: vpandn xmm8, xmm8, xmm7
444685: vpandn xmm10, xmm10, xmm9
44468a: vpand xmm8, xmm8, xmm6
44468e: vpand xmm10, xmm10, xmm6
444692: vpor xmm1, xmm8, xmm1
444696: vpor xmm2, xmm10, xmm2
44469a: vpxor xmm0, xmm0, xmm0
44469e: vpcmpeqb xmm0, xmm0, xmm1
4446a2: vpcmpeqb xmm1, xmm1, xmm2
4446a6: vpsubb xmm1, xmm1, xmm0
4446aa: vpmovmskb edx, xmm1
4446ae: sub edx, 0xffff
4446b4: jne 0x445c50
4446ba: add rsi, 0x10
4446be: add rdi, 0x10
4446c2: nop word ptr cs:[rax + rax]
4446cd: nop dword ptr [rax]
4446d0: and rsi, 0xfffffffffffffff0
4446d4: and rdi, 0xfffffffffffffff0
4446d8: mov edx, 0xffff
4446dd: xor r8d, r8d
4446e0: and ecx, 0xf
4446e3: and eax, 0xf
4446e6: vpxor xmm0, xmm0, xmm0
4446ea: cmp ecx, eax
4446ec: je 0x444720
4446ee: ja 0x4446f7
4446f0: mov r8d, edx
4446f3: xchg ecx, eax
4446f4: xchg rdi, rsi
4446f7: vmovdqa xmm2, xmmword ptr [rdi]
4446fb: vmovdqa xmm1, xmmword ptr [rsi]
4446ff: lea r9, [rax + 0xf]
444703: sub r9, rcx
444706: lea r10, [rip + 0x53cb3]
44470d: movsxd r9, dword ptr [r10 + r9*4]
444711: vpcmpeqb xmm0, xmm0, xmm1
444715: lea r10, [r10 + r9]
444719: notrack jmp r10
44471d: nop dword ptr [rax]
444720: vmovdqa xmm1, xmmword ptr [rsi]
444724: vpcmpeqb xmm0, xmm0, xmm1
444728: vmovdqa xmm2, xmmword ptr [rdi]
44472c: vpcmpgtb xmm7, xmm1, xmm4
444730: vpcmpgtb xmm8, xmm1, xmm5
444734: vpcmpgtb xmm9, xmm2, xmm4
444738: vpcmpgtb xmm10, xmm2, xmm5
44473c: vpandn xmm8, xmm8, xmm7
444740: vpandn xmm10, xmm10, xmm9
444745: vpand xmm8, xmm8, xmm6
444749: vpand xmm10, xmm10, xmm6
44474d: vpor xmm1, xmm8, xmm1
444751: vpor xmm2, xmm10, xmm2
444755: vpcmpeqb xmm1, xmm1, xmm2
444759: vpsubb xmm1, xmm1, xmm0
44475d: vpmovmskb r9d, xmm1
444761: shr edx, cl
444763: shr r9d, cl
444766: sub edx, r9d
444769: jne 0x445c38
44476f: mov rcx, 0x10
444776: mov r9, 0x10
44477d: mov rdx, rcx
444780: vmovdqa xmm0, xmmword ptr [rdi + rdx]
444785: vmovdqa xmm1, xmmword ptr [rsi + rdx]
44478a: vpcmpgtb xmm7, xmm0, xmm4
44478e: vpcmpgtb xmm8, xmm0, xmm5
444792: vpcmpgtb xmm9, xmm1, xmm4
444796: vpcmpgtb xmm10, xmm1, xmm5
44479a: vpandn xmm8, xmm8, xmm7
44479e: vpandn xmm10, xmm10, xmm9
4447a3: vpand xmm8, xmm8, xmm6
4447a7: vpand xmm10, xmm10, xmm6
4447ab: vpor xmm0, xmm8, xmm0
4447af: vpor xmm1, xmm10, xmm1
4447b3: vpcmpistri xmm0, xmm1, 0x1a
4447b9: lea rdx, [rdx + 0x10]
4447bd: jbe 0x444800
4447bf: vmovdqa xmm0, xmmword ptr [rdi + rdx]
4447c4: vmovdqa xmm1, xmmword ptr [rsi + rdx]
4447c9: vpcmpgtb xmm7, xmm0, xmm4
4447cd: vpcmpgtb xmm8, xmm0, xmm5
4447d1: vpcmpgtb xmm9, xmm1, xmm4
4447d5: vpcmpgtb xmm10, xmm1, xmm5
4447d9: vpandn xmm8, xmm8, xmm7
4447dd: vpandn xmm10, xmm10, xmm9
4447e2: vpand xmm8, xmm8, xmm6
4447e6: vpand xmm10, xmm10, xmm6
4447ea: vpor xmm0, xmm8, xmm0
4447ee: vpor xmm1, xmm10, xmm1
4447f2: vpcmpistri xmm0, xmm1, 0x1a
4447f8: lea rdx, [rdx + 0x10]
4447fc: jbe 0x444800
4447fe: jmp 0x444780
444800: jae 0x445c6c
444806: lea rcx, [rdx + rcx - 0x10]
44480b: movzx eax, byte ptr [rdi + rcx]
44480f: movzx edx, byte ptr [rsi + rcx]
444813: lea rcx, [rip + 0x571e6]
44481a: mov eax, dword ptr [rcx + rax*4]
44481d: mov edx, dword ptr [rcx + rdx*4]
444820: sub eax, edx
444822: ret 
444823: nop word ptr cs:[rax + rax]
44482e: nop 
444830: vpslldq xmm2, xmm2, 0xf
444835: vpcmpgtb xmm7, xmm1, xmm4
444839: vpcmpgtb xmm8, xmm1, xmm5
44483d: vpcmpgtb xmm9, xmm2, xmm4
444841: vpcmpgtb xmm10, xmm2, xmm5
444845: vpandn xmm8, xmm8, xmm7
444849: vpandn xmm10, xmm10, xmm9
44484e: vpand xmm8, xmm8, xmm6
444852: vpand xmm10, xmm10, xmm6
444856: vpor xmm1, xmm8, xmm1
44485a: vpor xmm2, xmm10, xmm2
44485e: vpcmpeqb xmm2, xmm2, xmm1
444862: vpsubb xmm2, xmm2, xmm0
444866: vpmovmskb r9d, xmm2
44486a: shr edx, cl
44486c: shr r9d, cl
44486f: sub edx, r9d
444872: jne 0x445c38
444878: vmovdqa xmm3, xmmword ptr [rdi]
44487c: mov rcx, 0x10
444883: mov r9d, 1
444889: lea r10, [rdi + 1]
44488d: and r10, 0xfff
444894: sub r10, 0x1000
44489b: mov rdx, rcx
44489e: nop 
4448a0: add r10, 0x10
4448a4: jg 0x444950
4448aa: vmovdqa xmm0, xmmword ptr [rdi + rdx]
4448af: vpalignr xmm0, xmm0, xmmword ptr [rdi + rdx - 0x10], 1
4448b7: vmovdqa xmm1, xmmword ptr [rsi + rdx]
4448bc: vpcmpgtb xmm7, xmm0, xmm4
4448c0: vpcmpgtb xmm8, xmm0, xmm5
4448c4: vpcmpgtb xmm9, xmm1, xmm4
4448c8: vpcmpgtb xmm10, xmm1, xmm5
4448cc: vpandn xmm8, xmm8, xmm7
4448d0: vpandn xmm10, xmm10, xmm9
4448d5: vpand xmm8, xmm8, xmm6
4448d9: vpand xmm10, xmm10, xmm6
4448dd: vpor xmm0, xmm8, xmm0
4448e1: vpor xmm1, xmm10, xmm1
4448e5: vpcmpistri xmm0, xmm1, 0x1a
4448eb: jbe 0x445c10
4448f2: add edx, 0x10
4448f5: add r10, 0x10
4448f9: jg 0x444950
4448fb: vmovdqa xmm0, xmmword ptr [rdi + rdx]
444900: vpalignr xmm0, xmm0, xmmword ptr [rdi + rdx - 0x10], 1
444908: vmovdqa xmm1, xmmword ptr [rsi + rdx]
44490d: vpcmpgtb xmm7, xmm0, xmm4
444911: vpcmpgtb xmm8, xmm0, xmm5
444915: vpcmpgtb xmm9, xmm1, xmm4
444919: vpcmpgtb xmm10, xmm1, xmm5
44491d: vpandn xmm8, xmm8, xmm7
444921: vpandn xmm10, xmm10, xmm9
444926: vpand xmm8, xmm8, xmm6
44492a: vpand xmm10, xmm10, xmm6
444930: jmp 0x4448f2
444942: add rdx, 0x10
444946: jmp 0x4448a0
44494b: nop dword ptr [rax + rax]
444950: sub r10, 0x1000
444957: vmovdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
44495d: vpsrldq xmm0, xmm0, 1
444962: vpcmpistri xmm0, xmm0, 0x3a
444968: cmp ecx, 0xe
44496b: ja 0x4448aa
444971: jmp 0x445bd1
444976: nop word ptr cs:[rax + rax]
444980: vpslldq xmm2, xmm2, 0xe
444985: vpcmpgtb xmm7, xmm1, xmm4
444989: vpcmpgtb xmm8, xmm1, xmm5
44498d: vpcmpgtb xmm9, xmm2, xmm4
444991: vpcmpgtb xmm10, xmm2, xmm5
444995: vpandn xmm8, xmm8, xmm7
444999: vpandn xmm10, xmm10, xmm9
44499e: vpand xmm8, xmm8, xmm6
4449a2: vpand xmm10, xmm10, xmm6
4449a6: vpor xmm1, xmm8, xmm1
4449aa: vpor xmm2, xmm10, xmm2
4449ae: vpcmpeqb xmm2, xmm2, xmm1
4449b2: vpsubb xmm2, xmm2, xmm0
4449b6: vpmovmskb r9d, xmm2
4449ba: shr edx, cl
4449bc: shr r9d, cl
4449bf: sub edx, r9d
4449c2: jne 0x445c38
4449c8: vmovdqa xmm3, xmmword ptr [rdi]
4449cc: mov rcx, 0x10
4449d3: mov r9d, 2
4449d9: lea r10, [rdi + 2]
4449dd: and r10, 0xfff
4449e4: sub r10, 0x1000
4449eb: mov rdx, rcx
4449ee: nop 
4449f0: add r10, 0x10
4449f4: jg 0x444aa0
4449fa: vmovdqa xmm0, xmmword ptr [rdi + rdx]
4449ff: vpalignr xmm0, xmm0, xmmword ptr [rdi + rdx - 0x10], 2
444a07: vmovdqa xmm1, xmmword ptr [rsi + rdx]
444a0c: vpcmpgtb xmm7, xmm0, xmm4
444a10: vpcmpgtb xmm8, xmm0, xmm5
444a14: vpcmpgtb xmm9, xmm1, xmm4
444a18: vpcmpgtb xmm10, xmm1, xmm5
444a1c: vpandn xmm8, xmm8, xmm7
444a20: vpandn xmm10, xmm10, xmm9
444a25: vpand xmm8, xmm8, xmm6
444a29: vpand xmm10, xmm10, xmm6
444a2d: vpor xmm0, xmm8, xmm0
444a31: vpor xmm1, xmm10, xmm1
444a35: vpcmpistri xmm0, xmm1, 0x1a
444a3b: jbe 0x445c10
444a42: add edx, 0x10
444a45: add r10, 0x10
444a49: jg 0x444aa0
444a4b: vmovdqa xmm0, xmmword ptr [rdi + rdx]
444a50: vpalignr xmm0, xmm0, xmmword ptr [rdi + rdx - 0x10], 2
444a58: vmovdqa xmm1, xmmword ptr [rsi + rdx]
444a5d: vpcmpgtb xmm7, xmm0, xmm4
444a61: vpcmpgtb xmm8, xmm0, xmm5
444a65: vpcmpgtb xmm9, xmm1, xmm4
444a69: vpcmpgtb xmm10, xmm1, xmm5
444a6d: vpandn xmm8, xmm8, xmm7
444a71: vpandn xmm10, xmm10, xmm9
444a76: vpand xmm8, xmm8, xmm6
444a7a: vpand xmm10, xmm10, xmm6
444a80: jmp 0x444a42
444a92: add rdx, 0x10
444a96: jmp 0x4449f0
444a9b: nop dword ptr [rax + rax]
444aa0: sub r10, 0x1000
444aa7: vmovdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
444aad: vpsrldq xmm0, xmm0, 2
444ab2: vpcmpistri xmm0, xmm0, 0x3a
444ab8: cmp ecx, 0xd
444abb: ja 0x4449fa
444ac1: jmp 0x445bd1
444ac6: nop word ptr cs:[rax + rax]
444ad0: vpslldq xmm2, xmm2, 0xd
444ad5: vpcmpgtb xmm7, xmm1, xmm4
444ad9: vpcmpgtb xmm8, xmm1, xmm5
444add: vpcmpgtb xmm9, xmm2, xmm4
444ae1: vpcmpgtb xmm10, xmm2, xmm5
444ae5: vpandn xmm8, xmm8, xmm7
444ae9: vpandn xmm10, xmm10, xmm9
444aee: vpand xmm8, xmm8, xmm6
444af2: vpand xmm10, xmm10, xmm6
444af6: vpor xmm1, xmm8, xmm1
444afa: vpor xmm2, xmm10, xmm2
444afe: vpcmpeqb xmm2, xmm2, xmm1
444b02: vpsubb xmm2, xmm2, xmm0
444b06: vpmovmskb r9d, xmm2
444b0a: shr edx, cl
444b0c: shr r9d, cl
444b0f: sub edx, r9d
444b12: jne 0x445c38
444b18: vmovdqa xmm3, xmmword ptr [rdi]
444b1c: mov rcx, 0x10
444b23: mov r9d, 3
444b29: lea r10, [rdi + 3]
444b2d: and r10, 0xfff
444b34: sub r10, 0x1000
444b3b: mov rdx, rcx
444b3e: add r10, 0x10
444b42: jg 0x444bf0
444b48: vmovdqa xmm0, xmmword ptr [rdi + rdx]
444b4d: vpalignr xmm0, xmm0, xmmword ptr [rdi + rdx - 0x10], 3
444b55: vmovdqa xmm1, xmmword ptr [rsi + rdx]
444b5a: vpcmpgtb xmm7, xmm0, xmm4
444b5e: vpcmpgtb xmm8, xmm0, xmm5
444b62: vpcmpgtb xmm9, xmm1, xmm4
444b66: vpcmpgtb xmm10, xmm1, xmm5
444b6a: vpandn xmm8, xmm8, xmm7
444b6e: vpandn xmm10, xmm10, xmm9
444b73: vpand xmm8, xmm8, xmm6
444b77: vpand xmm10, xmm10, xmm6
444b7b: vpor xmm0, xmm8, xmm0
444b7f: vpor xmm1, xmm10, xmm1
444b83: vpcmpistri xmm0, xmm1, 0x1a
444b89: jbe 0x445c10
444b8f: add rdx, 0x10
444b93: add r10, 0x10
444b97: jg 0x444bf0
444b99: vmovdqa xmm0, xmmword ptr [rdi + rdx]
444b9e: vpalignr xmm0, xmm0, xmmword ptr [rdi + rdx - 0x10], 3
444ba6: vmovdqa xmm1, xmmword ptr [rsi + rdx]
444bab: vpcmpgtb xmm7, xmm0, xmm4
444baf: vpcmpgtb xmm8, xmm0, xmm5
444bb3: vpcmpgtb xmm9, xmm1, xmm4
444bb7: vpcmpgtb xmm10, xmm1, xmm5
444bbb: vpandn xmm8, xmm8, xmm7
444bbf: vpandn xmm10, xmm10, xmm9
444bc4: vpand xmm8, xmm8, xmm6
444bc8: vpand xmm10, xmm10, xmm6
444bcc: vpor xmm0, xmm8, xmm0
444bd0: vpor xmm1, xmm10, xmm1
444bd4: vpcmpistri xmm0, xmm1, 0x1a
444bda: jbe 0x445c10
444be0: add rdx, 0x10
444be4: jmp 0x444b3e
444be9: nop dword ptr [rax]
444bf0: sub r10, 0x1000
444bf7: vmovdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
444bfd: vpsrldq xmm0, xmm0, 3
444c02: vpcmpistri xmm0, xmm0, 0x3a
444c08: cmp ecx, 0xc
444c0b: ja 0x444b48
444c11: jmp 0x445bd1
444c16: nop word ptr cs:[rax + rax]
444c20: vpslldq xmm2, xmm2, 0xc
444c25: vpcmpgtb xmm7, xmm1, xmm4
444c29: vpcmpgtb xmm8, xmm1, xmm5
444c2d: vpcmpgtb xmm9, xmm2, xmm4
444c31: vpcmpgtb xmm10, xmm2, xmm5
444c35: vpandn xmm8, xmm8, xmm7
444c39: vpandn xmm10, xmm10, xmm9
444c3e: vpand xmm8, xmm8, xmm6
444c42: vpand xmm10, xmm10, xmm6
444c46: vpor xmm1, xmm8, xmm1
444c4a: vpor xmm2, xmm10, xmm2
444c4e: vpcmpeqb xmm2, xmm2, xmm1
444c52: vpsubb xmm2, xmm2, xmm0
444c56: vpmovmskb r9d, xmm2
444c5a: shr edx, cl
444c5c: shr r9d, cl
444c5f: sub edx, r9d
444c62: jne 0x445c38
444c68: vmovdqa xmm3, xmmword ptr [rdi]
444c6c: mov rcx, 0x10
444c73: mov r9d, 4
444c79: lea r10, [rdi + 4]
444c7d: and r10, 0xfff
444c84: sub r10, 0x1000
444c8b: mov rdx, rcx
444c8e: nop 
444c90: add r10, 0x10
444c94: jg 0x444d40
444c9a: vmovdqa xmm0, xmmword ptr [rdi + rdx]
444c9f: vpalignr xmm0, xmm0, xmmword ptr [rdi + rdx - 0x10], 4
444ca7: vmovdqa xmm1, xmmword ptr [rsi + rdx]
444cac: vpcmpgtb xmm7, xmm0, xmm4
444cb0: vpcmpgtb xmm8, xmm0, xmm5
444cb4: vpcmpgtb xmm9, xmm1, xmm4
444cb8: vpcmpgtb xmm10, xmm1, xmm5
444cbc: vpandn xmm8, xmm8, xmm7
444cc0: vpandn xmm10, xmm10, xmm9
444cc5: vpand xmm8, xmm8, xmm6
444cc9: vpand xmm10, xmm10, xmm6
444ccd: vpor xmm0, xmm8, xmm0
444cd1: vpor xmm1, xmm10, xmm1
444cd5: vpcmpistri xmm0, xmm1, 0x1a
444cdb: jbe 0x445c10
444ce2: add edx, 0x10
444ce5: add r10, 0x10
444ce9: jg 0x444d40
444ceb: vmovdqa xmm0, xmmword ptr [rdi + rdx]
444cf0: vpalignr xmm0, xmm0, xmmword ptr [rdi + rdx - 0x10], 4
444cf8: vmovdqa xmm1, xmmword ptr [rsi + rdx]
444cfd: vpcmpgtb xmm7, xmm0, xmm4
444d01: vpcmpgtb xmm8, xmm0, xmm5
444d05: vpcmpgtb xmm9, xmm1, xmm4
444d09: vpcmpgtb xmm10, xmm1, xmm5
444d0d: vpandn xmm8, xmm8, xmm7
444d11: vpandn xmm10, xmm10, xmm9
444d16: vpand xmm8, xmm8, xmm6
444d1a: vpand xmm10, xmm10, xmm6
444d20: jmp 0x444ce2
444d32: add rdx, 0x10
444d36: jmp 0x444c90
444d3b: nop dword ptr [rax + rax]
444d40: sub r10, 0x1000
444d47: vmovdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
444d4d: vpsrldq xmm0, xmm0, 4
444d52: vpcmpistri xmm0, xmm0, 0x3a
444d58: cmp ecx, 0xb
444d5b: ja 0x444c9a
444d61: jmp 0x445bd1
444d66: nop word ptr cs:[rax + rax]
444d70: vpslldq xmm2, xmm2, 0xb
444d75: vpcmpgtb xmm7, xmm1, xmm4
444d79: vpcmpgtb xmm8, xmm1, xmm5
444d7d: vpcmpgtb xmm9, xmm2, xmm4
444d81: vpcmpgtb xmm10, xmm2, xmm5
444d85: vpandn xmm8, xmm8, xmm7
444d89: vpandn xmm10, xmm10, xmm9
444d8e: vpand xmm8, xmm8, xmm6
444d92: vpand xmm10, xmm10, xmm6
444d96: vpor xmm1, xmm8, xmm1
444d9a: vpor xmm2, xmm10, xmm2
444d9e: vpcmpeqb xmm2, xmm2, xmm1
444da2: vpsubb xmm2, xmm2, xmm0
444da6: vpmovmskb r9d, xmm2
444daa: shr edx, cl
444dac: shr r9d, cl
444daf: sub edx, r9d
444db2: jne 0x445c38
444db8: vmovdqa xmm3, xmmword ptr [rdi]
444dbc: mov rcx, 0x10
444dc3: mov r9d, 5
444dc9: lea r10, [rdi + 5]
444dcd: and r10, 0xfff
444dd4: sub r10, 0x1000
444ddb: mov rdx, rcx
444dde: nop 
444de0: add r10, 0x10
444de4: jg 0x444e90
444dea: vmovdqa xmm0, xmmword ptr [rdi + rdx]
444def: vpalignr xmm0, xmm0, xmmword ptr [rdi + rdx - 0x10], 5
444df7: vmovdqa xmm1, xmmword ptr [rsi + rdx]
444dfc: vpcmpgtb xmm7, xmm0, xmm4
444e00: vpcmpgtb xmm8, xmm0, xmm5
444e04: vpcmpgtb xmm9, xmm1, xmm4
444e08: vpcmpgtb xmm10, xmm1, xmm5
444e0c: vpandn xmm8, xmm8, xmm7
444e10: vpandn xmm10, xmm10, xmm9
444e15: vpand xmm8, xmm8, xmm6
444e19: vpand xmm10, xmm10, xmm6
444e1d: vpor xmm0, xmm8, xmm0
444e21: vpor xmm1, xmm10, xmm1
444e25: vpcmpistri xmm0, xmm1, 0x1a
444e2b: jbe 0x445c10
444e32: add edx, 0x10
444e35: add r10, 0x10
444e39: jg 0x444e90
444e3b: vmovdqa xmm0, xmmword ptr [rdi + rdx]
444e40: vpalignr xmm0, xmm0, xmmword ptr [rdi + rdx - 0x10], 5
444e48: vmovdqa xmm1, xmmword ptr [rsi + rdx]
444e4d: vpcmpgtb xmm7, xmm0, xmm4
444e51: vpcmpgtb xmm8, xmm0, xmm5
444e55: vpcmpgtb xmm9, xmm1, xmm4
444e59: vpcmpgtb xmm10, xmm1, xmm5
444e5d: vpandn xmm8, xmm8, xmm7
444e61: vpandn xmm10, xmm10, xmm9
444e66: vpand xmm8, xmm8, xmm6
444e6a: vpand xmm10, xmm10, xmm6
444e70: jmp 0x444e32
444e82: add rdx, 0x10
444e86: jmp 0x444de0
444e8b: nop dword ptr [rax + rax]
444e90: sub r10, 0x1000
444e97: vmovdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
444e9d: vpsrldq xmm0, xmm0, 5
444ea2: vpcmpistri xmm0, xmm0, 0x3a
444ea8: cmp ecx, 0xa
444eab: ja 0x444dea
444eb1: jmp 0x445bd1
444eb6: nop word ptr cs:[rax + rax]
444ec0: vpslldq xmm2, xmm2, 0xa
444ec5: vpcmpgtb xmm7, xmm1, xmm4
444ec9: vpcmpgtb xmm8, xmm1, xmm5
444ecd: vpcmpgtb xmm9, xmm2, xmm4
444ed1: vpcmpgtb xmm10, xmm2, xmm5
444ed5: vpandn xmm8, xmm8, xmm7
444ed9: vpandn xmm10, xmm10, xmm9
444ede: vpand xmm8, xmm8, xmm6
444ee2: vpand xmm10, xmm10, xmm6
444ee6: vpor xmm1, xmm8, xmm1
444eea: vpor xmm2, xmm10, xmm2
444eee: vpcmpeqb xmm2, xmm2, xmm1
444ef2: vpsubb xmm2, xmm2, xmm0
444ef6: vpmovmskb r9d, xmm2
444efa: shr edx, cl
444efc: shr r9d, cl
444eff: sub edx, r9d
444f02: jne 0x445c38
444f08: vmovdqa xmm3, xmmword ptr [rdi]
444f0c: mov rcx, 0x10
444f13: mov r9d, 6
444f19: lea r10, [rdi + 6]
444f1d: and r10, 0xfff
444f24: sub r10, 0x1000
444f2b: mov rdx, rcx
444f2e: nop 
444f30: add r10, 0x10
444f34: jg 0x444fe0
444f3a: vmovdqa xmm0, xmmword ptr [rdi + rdx]
444f3f: vpalignr xmm0, xmm0, xmmword ptr [rdi + rdx - 0x10], 6
444f47: vmovdqa xmm1, xmmword ptr [rsi + rdx]
444f4c: vpcmpgtb xmm7, xmm0, xmm4
444f50: vpcmpgtb xmm8, xmm0, xmm5
444f54: vpcmpgtb xmm9, xmm1, xmm4
444f58: vpcmpgtb xmm10, xmm1, xmm5
444f5c: vpandn xmm8, xmm8, xmm7
444f60: vpandn xmm10, xmm10, xmm9
444f65: vpand xmm8, xmm8, xmm6
444f69: vpand xmm10, xmm10, xmm6
444f6d: vpor xmm0, xmm8, xmm0
444f71: vpor xmm1, xmm10, xmm1
444f75: vpcmpistri xmm0, xmm1, 0x1a
444f7b: jbe 0x445c10
444f82: add edx, 0x10
444f85: add r10, 0x10
444f89: jg 0x444fe0
444f8b: vmovdqa xmm0, xmmword ptr [rdi + rdx]
444f90: vpalignr xmm0, xmm0, xmmword ptr [rdi + rdx - 0x10], 6
444f98: vmovdqa xmm1, xmmword ptr [rsi + rdx]
444f9d: vpcmpgtb xmm7, xmm0, xmm4
444fa1: vpcmpgtb xmm8, xmm0, xmm5
444fa5: vpcmpgtb xmm9, xmm1, xmm4
444fa9: vpcmpgtb xmm10, xmm1, xmm5
444fad: vpandn xmm8, xmm8, xmm7
444fb1: vpandn xmm10, xmm10, xmm9
444fb6: vpand xmm8, xmm8, xmm6
444fba: vpand xmm10, xmm10, xmm6
444fc0: jmp 0x444f82
444fd2: add rdx, 0x10
444fd6: jmp 0x444f30
444fdb: nop dword ptr [rax + rax]
444fe0: sub r10, 0x1000
444fe7: vmovdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
444fed: vpsrldq xmm0, xmm0, 6
444ff2: vpcmpistri xmm0, xmm0, 0x3a
444ff8: cmp ecx, 9
444ffb: ja 0x444f3a
445001: jmp 0x445bd1
445006: nop word ptr cs:[rax + rax]
445010: vpslldq xmm2, xmm2, 9
445015: vpcmpgtb xmm7, xmm1, xmm4
445019: vpcmpgtb xmm8, xmm1, xmm5
44501d: vpcmpgtb xmm9, xmm2, xmm4
445021: vpcmpgtb xmm10, xmm2, xmm5
445025: vpandn xmm8, xmm8, xmm7
445029: vpandn xmm10, xmm10, xmm9
44502e: vpand xmm8, xmm8, xmm6
445032: vpand xmm10, xmm10, xmm6
445036: vpor xmm1, xmm8, xmm1
44503a: vpor xmm2, xmm10, xmm2
44503e: vpcmpeqb xmm2, xmm2, xmm1
445042: vpsubb xmm2, xmm2, xmm0
445046: vpmovmskb r9d, xmm2
44504a: shr edx, cl
44504c: shr r9d, cl
44504f: sub edx, r9d
445052: jne 0x445c38
445058: vmovdqa xmm3, xmmword ptr [rdi]
44505c: mov rcx, 0x10
445063: mov r9d, 7
445069: lea r10, [rdi + 7]
44506d: and r10, 0xfff
445074: sub r10, 0x1000
44507b: mov rdx, rcx
44507e: nop 
445080: add r10, 0x10
445084: jg 0x445130
44508a: vmovdqa xmm0, xmmword ptr [rdi + rdx]
44508f: vpalignr xmm0, xmm0, xmmword ptr [rdi + rdx - 0x10], 7
445097: vmovdqa xmm1, xmmword ptr [rsi + rdx]
44509c: vpcmpgtb xmm7, xmm0, xmm4
4450a0: vpcmpgtb xmm8, xmm0, xmm5
4450a4: vpcmpgtb xmm9, xmm1, xmm4
4450a8: vpcmpgtb xmm10, xmm1, xmm5
4450ac: vpandn xmm8, xmm8, xmm7
4450b0: vpandn xmm10, xmm10, xmm9
4450b5: vpand xmm8, xmm8, xmm6
4450b9: vpand xmm10, xmm10, xmm6
4450bd: vpor xmm0, xmm8, xmm0
4450c1: vpor xmm1, xmm10, xmm1
4450c5: vpcmpistri xmm0, xmm1, 0x1a
4450cb: jbe 0x445c10
4450d2: add edx, 0x10
4450d5: add r10, 0x10
4450d9: jg 0x445130
4450db: vmovdqa xmm0, xmmword ptr [rdi + rdx]
4450e0: vpalignr xmm0, xmm0, xmmword ptr [rdi + rdx - 0x10], 7
4450e8: vmovdqa xmm1, xmmword ptr [rsi + rdx]
4450ed: vpcmpgtb xmm7, xmm0, xmm4
4450f1: vpcmpgtb xmm8, xmm0, xmm5
4450f5: vpcmpgtb xmm9, xmm1, xmm4
4450f9: vpcmpgtb xmm10, xmm1, xmm5
4450fd: vpandn xmm8, xmm8, xmm7
445101: vpandn xmm10, xmm10, xmm9
445106: vpand xmm8, xmm8, xmm6
44510a: vpand xmm10, xmm10, xmm6
445110: jmp 0x4450d2
445122: add rdx, 0x10
445126: jmp 0x445080
44512b: nop dword ptr [rax + rax]
445130: sub r10, 0x1000
445137: vmovdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
44513d: vpsrldq xmm0, xmm0, 7
445142: vpcmpistri xmm0, xmm0, 0x3a
445148: cmp ecx, 8
44514b: ja 0x44508a
445151: jmp 0x445bd1
445156: nop word ptr cs:[rax + rax]
445160: vpslldq xmm2, xmm2, 8
445165: vpcmpgtb xmm7, xmm1, xmm4
445169: vpcmpgtb xmm8, xmm1, xmm5
44516d: vpcmpgtb xmm9, xmm2, xmm4
445171: vpcmpgtb xmm10, xmm2, xmm5
445175: vpandn xmm8, xmm8, xmm7
445179: vpandn xmm10, xmm10, xmm9
44517e: vpand xmm8, xmm8, xmm6
445182: vpand xmm10, xmm10, xmm6
445186: vpor xmm1, xmm8, xmm1
44518a: vpor xmm2, xmm10, xmm2
44518e: vpcmpeqb xmm2, xmm2, xmm1
445192: vpsubb xmm2, xmm2, xmm0
445196: vpmovmskb r9d, xmm2
44519a: shr edx, cl
44519c: shr r9d, cl
44519f: sub edx, r9d
4451a2: jne 0x445c38
4451a8: vmovdqa xmm3, xmmword ptr [rdi]
4451ac: mov rcx, 0x10
4451b3: mov r9d, 8
4451b9: lea r10, [rdi + 8]
4451bd: and r10, 0xfff
4451c4: sub r10, 0x1000
4451cb: mov rdx, rcx
4451ce: nop 
4451d0: add r10, 0x10
4451d4: jg 0x445280
4451da: vmovdqa xmm0, xmmword ptr [rdi + rdx]
4451df: vpalignr xmm0, xmm0, xmmword ptr [rdi + rdx - 0x10], 8
4451e7: vmovdqa xmm1, xmmword ptr [rsi + rdx]
4451ec: vpcmpgtb xmm7, xmm0, xmm4
4451f0: vpcmpgtb xmm8, xmm0, xmm5
4451f4: vpcmpgtb xmm9, xmm1, xmm4
4451f8: vpcmpgtb xmm10, xmm1, xmm5
4451fc: vpandn xmm8, xmm8, xmm7
445200: vpandn xmm10, xmm10, xmm9
445205: vpand xmm8, xmm8, xmm6
445209: vpand xmm10, xmm10, xmm6
44520d: vpor xmm0, xmm8, xmm0
445211: vpor xmm1, xmm10, xmm1
445215: vpcmpistri xmm0, xmm1, 0x1a
44521b: jbe 0x445c10
445222: add edx, 0x10
445225: add r10, 0x10
445229: jg 0x445280
44522b: vmovdqa xmm0, xmmword ptr [rdi + rdx]
445230: vpalignr xmm0, xmm0, xmmword ptr [rdi + rdx - 0x10], 8
445238: vmovdqa xmm1, xmmword ptr [rsi + rdx]
44523d: vpcmpgtb xmm7, xmm0, xmm4
445241: vpcmpgtb xmm8, xmm0, xmm5
445245: vpcmpgtb xmm9, xmm1, xmm4
445249: vpcmpgtb xmm10, xmm1, xmm5
44524d: vpandn xmm8, xmm8, xmm7
445251: vpandn xmm10, xmm10, xmm9
445256: vpand xmm8, xmm8, xmm6
44525a: vpand xmm10, xmm10, xmm6
445260: jmp 0x445222
445272: add rdx, 0x10
445276: jmp 0x4451d0
44527b: nop dword ptr [rax + rax]
445280: sub r10, 0x1000
445287: vmovdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
44528d: vpsrldq xmm0, xmm0, 8
445292: vpcmpistri xmm0, xmm0, 0x3a
445298: cmp ecx, 7
44529b: ja 0x4451da
4452a1: jmp 0x445bd1
4452a6: nop word ptr cs:[rax + rax]
4452b0: vpslldq xmm2, xmm2, 7
4452b5: vpcmpgtb xmm7, xmm1, xmm4
4452b9: vpcmpgtb xmm8, xmm1, xmm5
4452bd: vpcmpgtb xmm9, xmm2, xmm4
4452c1: vpcmpgtb xmm10, xmm2, xmm5
4452c5: vpandn xmm8, xmm8, xmm7
4452c9: vpandn xmm10, xmm10, xmm9
4452ce: vpand xmm8, xmm8, xmm6
4452d2: vpand xmm10, xmm10, xmm6
4452d6: vpor xmm1, xmm8, xmm1
4452da: vpor xmm2, xmm10, xmm2
4452de: vpcmpeqb xmm2, xmm2, xmm1
4452e2: vpsubb xmm2, xmm2, xmm0
4452e6: vpmovmskb r9d, xmm2
4452ea: shr edx, cl
4452ec: shr r9d, cl
4452ef: sub edx, r9d
4452f2: jne 0x445c38
4452f8: vmovdqa xmm3, xmmword ptr [rdi]
4452fc: mov rcx, 0x10
445303: mov r9d, 9
445309: lea r10, [rdi + 9]
44530d: and r10, 0xfff
445314: sub r10, 0x1000
44531b: mov rdx, rcx
44531e: nop 
445320: add r10, 0x10
445324: jg 0x4453d0
44532a: vmovdqa xmm0, xmmword ptr [rdi + rdx]
44532f: vpalignr xmm0, xmm0, xmmword ptr [rdi + rdx - 0x10], 9
445337: vmovdqa xmm1, xmmword ptr [rsi + rdx]
44533c: vpcmpgtb xmm7, xmm0, xmm4
445340: vpcmpgtb xmm8, xmm0, xmm5
445344: vpcmpgtb xmm9, xmm1, xmm4
445348: vpcmpgtb xmm10, xmm1, xmm5
44534c: vpandn xmm8, xmm8, xmm7
445350: vpandn xmm10, xmm10, xmm9
445355: vpand xmm8, xmm8, xmm6
445359: vpand xmm10, xmm10, xmm6
44535d: vpor xmm0, xmm8, xmm0
445361: vpor xmm1, xmm10, xmm1
445365: vpcmpistri xmm0, xmm1, 0x1a
44536b: jbe 0x445c10
445372: add edx, 0x10
445375: add r10, 0x10
445379: jg 0x4453d0
44537b: vmovdqa xmm0, xmmword ptr [rdi + rdx]
445380: vpalignr xmm0, xmm0, xmmword ptr [rdi + rdx - 0x10], 9
445388: vmovdqa xmm1, xmmword ptr [rsi + rdx]
44538d: vpcmpgtb xmm7, xmm0, xmm4
445391: vpcmpgtb xmm8, xmm0, xmm5
445395: vpcmpgtb xmm9, xmm1, xmm4
445399: vpcmpgtb xmm10, xmm1, xmm5
44539d: vpandn xmm8, xmm8, xmm7
4453a1: vpandn xmm10, xmm10, xmm9
4453a6: vpand xmm8, xmm8, xmm6
4453aa: vpand xmm10, xmm10, xmm6
4453b0: jmp 0x445372
4453c2: add rdx, 0x10
4453c6: jmp 0x445320
4453cb: nop dword ptr [rax + rax]
4453d0: sub r10, 0x1000
4453d7: vmovdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
4453dd: vpsrldq xmm0, xmm0, 9
4453e2: vpcmpistri xmm0, xmm0, 0x3a
4453e8: cmp ecx, 6
4453eb: ja 0x44532a
4453f1: jmp 0x445bd1
4453f6: nop word ptr cs:[rax + rax]
445400: vpslldq xmm2, xmm2, 6
445405: vpcmpgtb xmm7, xmm1, xmm4
445409: vpcmpgtb xmm8, xmm1, xmm5
44540d: vpcmpgtb xmm9, xmm2, xmm4
445411: vpcmpgtb xmm10, xmm2, xmm5
445415: vpandn xmm8, xmm8, xmm7
445419: vpandn xmm10, xmm10, xmm9
44541e: vpand xmm8, xmm8, xmm6
445422: vpand xmm10, xmm10, xmm6
445426: vpor xmm1, xmm8, xmm1
44542a: vpor xmm2, xmm10, xmm2
44542e: vpcmpeqb xmm2, xmm2, xmm1
445432: vpsubb xmm2, xmm2, xmm0
445436: vpmovmskb r9d, xmm2
44543a: shr edx, cl
44543c: shr r9d, cl
44543f: sub edx, r9d
445442: jne 0x445c38
445448: vmovdqa xmm3, xmmword ptr [rdi]
44544c: mov rcx, 0x10
445453: mov r9d, 0xa
445459: lea r10, [rdi + 0xa]
44545d: and r10, 0xfff
445464: sub r10, 0x1000
44546b: mov rdx, rcx
44546e: nop 
445470: add r10, 0x10
445474: jg 0x445520
44547a: vmovdqa xmm0, xmmword ptr [rdi + rdx]
44547f: vpalignr xmm0, xmm0, xmmword ptr [rdi + rdx - 0x10], 0xa
445487: vmovdqa xmm1, xmmword ptr [rsi + rdx]
44548c: vpcmpgtb xmm7, xmm0, xmm4
445490: vpcmpgtb xmm8, xmm0, xmm5
445494: vpcmpgtb xmm9, xmm1, xmm4
445498: vpcmpgtb xmm10, xmm1, xmm5
44549c: vpandn xmm8, xmm8, xmm7
4454a0: vpandn xmm10, xmm10, xmm9
4454a5: vpand xmm8, xmm8, xmm6
4454a9: vpand xmm10, xmm10, xmm6
4454ad: vpor xmm0, xmm8, xmm0
4454b1: vpor xmm1, xmm10, xmm1
4454b5: vpcmpistri xmm0, xmm1, 0x1a
4454bb: jbe 0x445c10
4454c2: add edx, 0x10
4454c5: add r10, 0x10
4454c9: jg 0x445520
4454cb: vmovdqa xmm0, xmmword ptr [rdi + rdx]
4454d0: vpalignr xmm0, xmm0, xmmword ptr [rdi + rdx - 0x10], 0xa
4454d8: vmovdqa xmm1, xmmword ptr [rsi + rdx]
4454dd: vpcmpgtb xmm7, xmm0, xmm4
4454e1: vpcmpgtb xmm8, xmm0, xmm5
4454e5: vpcmpgtb xmm9, xmm1, xmm4
4454e9: vpcmpgtb xmm10, xmm1, xmm5
4454ed: vpandn xmm8, xmm8, xmm7
4454f1: vpandn xmm10, xmm10, xmm9
4454f6: vpand xmm8, xmm8, xmm6
4454fa: vpand xmm10, xmm10, xmm6
445500: jmp 0x4454c2
445512: add rdx, 0x10
445516: jmp 0x445470
44551b: nop dword ptr [rax + rax]
445520: sub r10, 0x1000
445527: vmovdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
44552d: vpsrldq xmm0, xmm0, 0xa
445532: vpcmpistri xmm0, xmm0, 0x3a
445538: cmp ecx, 5
44553b: ja 0x44547a
445541: jmp 0x445bd1
445546: nop word ptr cs:[rax + rax]
445550: vpslldq xmm2, xmm2, 5
445555: vpcmpgtb xmm7, xmm1, xmm4
445559: vpcmpgtb xmm8, xmm1, xmm5
44555d: vpcmpgtb xmm9, xmm2, xmm4
445561: vpcmpgtb xmm10, xmm2, xmm5
445565: vpandn xmm8, xmm8, xmm7
445569: vpandn xmm10, xmm10, xmm9
44556e: vpand xmm8, xmm8, xmm6
445572: vpand xmm10, xmm10, xmm6
445576: vpor xmm1, xmm8, xmm1
44557a: vpor xmm2, xmm10, xmm2
44557e: vpcmpeqb xmm2, xmm2, xmm1
445582: vpsubb xmm2, xmm2, xmm0
445586: vpmovmskb r9d, xmm2
44558a: shr edx, cl
44558c: shr r9d, cl
44558f: sub edx, r9d
445592: jne 0x445c38
445598: vmovdqa xmm3, xmmword ptr [rdi]
44559c: mov rcx, 0x10
4455a3: mov r9d, 0xb
4455a9: lea r10, [rdi + 0xb]
4455ad: and r10, 0xfff
4455b4: sub r10, 0x1000
4455bb: mov rdx, rcx
4455be: nop 
4455c0: add r10, 0x10
4455c4: jg 0x445670
4455ca: vmovdqa xmm0, xmmword ptr [rdi + rdx]
4455cf: vpalignr xmm0, xmm0, xmmword ptr [rdi + rdx - 0x10], 0xb
4455d7: vmovdqa xmm1, xmmword ptr [rsi + rdx]
4455dc: vpcmpgtb xmm7, xmm0, xmm4
4455e0: vpcmpgtb xmm8, xmm0, xmm5
4455e4: vpcmpgtb xmm9, xmm1, xmm4
4455e8: vpcmpgtb xmm10, xmm1, xmm5
4455ec: vpandn xmm8, xmm8, xmm7
4455f0: vpandn xmm10, xmm10, xmm9
4455f5: vpand xmm8, xmm8, xmm6
4455f9: vpand xmm10, xmm10, xmm6
4455fd: vpor xmm0, xmm8, xmm0
445601: vpor xmm1, xmm10, xmm1
445605: vpcmpistri xmm0, xmm1, 0x1a
44560b: jbe 0x445c10
445611: add rdx, 0x10
445615: add r10, 0x10
445619: jg 0x445670
44561b: vmovdqa xmm0, xmmword ptr [rdi + rdx]
445620: vpalignr xmm0, xmm0, xmmword ptr [rdi + rdx - 0x10], 0xb
445628: vmovdqa xmm1, xmmword ptr [rsi + rdx]
44562d: vpcmpgtb xmm7, xmm0, xmm4
445631: vpcmpgtb xmm8, xmm0, xmm5
445635: vpcmpgtb xmm9, xmm1, xmm4
445639: vpcmpgtb xmm10, xmm1, xmm5
44563d: vpandn xmm8, xmm8, xmm7
445641: vpandn xmm10, xmm10, xmm9
445646: vpand xmm8, xmm8, xmm6
44564a: vpand xmm10, xmm10, xmm6
44564e: vpor xmm0, xmm8, xmm0
445652: vpor xmm1, xmm10, xmm1
445656: vpcmpistri xmm0, xmm1, 0x1a
44565c: jbe 0x445c10
445662: add rdx, 0x10
445666: jmp 0x4455c0
44566b: nop dword ptr [rax + rax]
445670: sub r10, 0x1000
445677: vmovdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
44567d: vpsrldq xmm0, xmm0, 0xb
445682: vpcmpistri xmm0, xmm0, 0x3a
445688: cmp ecx, 4
44568b: ja 0x4455ca
445691: jmp 0x445bd1
445696: nop word ptr cs:[rax + rax]
4456a0: vpslldq xmm2, xmm2, 4
4456a5: vpcmpgtb xmm7, xmm1, xmm4
4456a9: vpcmpgtb xmm8, xmm1, xmm5
4456ad: vpcmpgtb xmm9, xmm2, xmm4
4456b1: vpcmpgtb xmm10, xmm2, xmm5
4456b5: vpandn xmm8, xmm8, xmm7
4456b9: vpandn xmm10, xmm10, xmm9
4456be: vpand xmm8, xmm8, xmm6
4456c2: vpand xmm10, xmm10, xmm6
4456c6: vpor xmm1, xmm8, xmm1
4456ca: vpor xmm2, xmm10, xmm2
4456ce: vpcmpeqb xmm2, xmm2, xmm1
4456d2: vpsubb xmm2, xmm2, xmm0
4456d6: vpmovmskb r9d, xmm2
4456da: shr edx, cl
4456dc: shr r9d, cl
4456df: sub edx, r9d
4456e2: jne 0x445c38
4456e8: vmovdqa xmm3, xmmword ptr [rdi]
4456ec: mov rcx, 0x10
4456f3: mov r9d, 0xc
4456f9: lea r10, [rdi + 0xc]
4456fd: and r10, 0xfff
445704: sub r10, 0x1000
44570b: mov rdx, rcx
44570e: nop 
445710: add r10, 0x10
445714: jg 0x4457c0
44571a: vmovdqa xmm0, xmmword ptr [rdi + rdx]
44571f: vpalignr xmm0, xmm0, xmmword ptr [rdi + rdx - 0x10], 0xc
445727: vmovdqa xmm1, xmmword ptr [rsi + rdx]
44572c: vpcmpgtb xmm7, xmm0, xmm4
445730: vpcmpgtb xmm8, xmm0, xmm5
445734: vpcmpgtb xmm9, xmm1, xmm4
445738: vpcmpgtb xmm10, xmm1, xmm5
44573c: vpandn xmm8, xmm8, xmm7
445740: vpandn xmm10, xmm10, xmm9
445745: vpand xmm8, xmm8, xmm6
445749: vpand xmm10, xmm10, xmm6
44574d: vpor xmm0, xmm8, xmm0
445751: vpor xmm1, xmm10, xmm1
445755: vpcmpistri xmm0, xmm1, 0x1a
44575b: jbe 0x445c10
445761: add rdx, 0x10
445765: add r10, 0x10
445769: jg 0x4457c0
44576b: vmovdqa xmm0, xmmword ptr [rdi + rdx]
445770: vpalignr xmm0, xmm0, xmmword ptr [rdi + rdx - 0x10], 0xc
445778: vmovdqa xmm1, xmmword ptr [rsi + rdx]
44577d: vpcmpgtb xmm7, xmm0, xmm4
445781: vpcmpgtb xmm8, xmm0, xmm5
445785: vpcmpgtb xmm9, xmm1, xmm4
445789: vpcmpgtb xmm10, xmm1, xmm5
44578d: vpandn xmm8, xmm8, xmm7
445791: vpandn xmm10, xmm10, xmm9
445796: vpand xmm8, xmm8, xmm6
44579a: vpand xmm10, xmm10, xmm6
44579e: vpor xmm0, xmm8, xmm0
4457a2: vpor xmm1, xmm10, xmm1
4457a6: vpcmpistri xmm0, xmm1, 0x1a
4457ac: jbe 0x445c10
4457b2: add rdx, 0x10
4457b6: jmp 0x445710
4457bb: nop dword ptr [rax + rax]
4457c0: sub r10, 0x1000
4457c7: vmovdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
4457cd: vpsrldq xmm0, xmm0, 0xc
4457d2: vpcmpistri xmm0, xmm0, 0x3a
4457d8: cmp ecx, 3
4457db: ja 0x44571a
4457e1: jmp 0x445bd1
4457e6: nop word ptr cs:[rax + rax]
4457f0: vpslldq xmm2, xmm2, 3
4457f5: vpcmpgtb xmm7, xmm1, xmm4
4457f9: vpcmpgtb xmm8, xmm1, xmm5
4457fd: vpcmpgtb xmm9, xmm2, xmm4
445801: vpcmpgtb xmm10, xmm2, xmm5
445805: vpandn xmm8, xmm8, xmm7
445809: vpandn xmm10, xmm10, xmm9
44580e: vpand xmm8, xmm8, xmm6
445812: vpand xmm10, xmm10, xmm6
445816: vpor xmm1, xmm8, xmm1
44581a: vpor xmm2, xmm10, xmm2
44581e: vpcmpeqb xmm2, xmm2, xmm1
445822: vpsubb xmm2, xmm2, xmm0
445826: vpmovmskb r9d, xmm2
44582a: shr edx, cl
44582c: shr r9d, cl
44582f: sub edx, r9d
445832: jne 0x445c38
445838: vmovdqa xmm3, xmmword ptr [rdi]
44583c: mov rcx, 0x10
445843: mov r9d, 0xd
445849: lea r10, [rdi + 0xd]
44584d: and r10, 0xfff
445854: sub r10, 0x1000
44585b: mov rdx, rcx
44585e: nop 
445860: add r10, 0x10
445864: jg 0x445910
44586a: vmovdqa xmm0, xmmword ptr [rdi + rdx]
44586f: vpalignr xmm0, xmm0, xmmword ptr [rdi + rdx - 0x10], 0xd
445877: vmovdqa xmm1, xmmword ptr [rsi + rdx]
44587c: vpcmpgtb xmm7, xmm0, xmm4
445880: vpcmpgtb xmm8, xmm0, xmm5
445884: vpcmpgtb xmm9, xmm1, xmm4
445888: vpcmpgtb xmm10, xmm1, xmm5
44588c: vpandn xmm8, xmm8, xmm7
445890: vpandn xmm10, xmm10, xmm9
445895: vpand xmm8, xmm8, xmm6
445899: vpand xmm10, xmm10, xmm6
44589d: vpor xmm0, xmm8, xmm0
4458a1: vpor xmm1, xmm10, xmm1
4458a5: vpcmpistri xmm0, xmm1, 0x1a
4458ab: jbe 0x445c10
4458b1: add rdx, 0x10
4458b5: add r10, 0x10
4458b9: jg 0x445910
4458bb: vmovdqa xmm0, xmmword ptr [rdi + rdx]
4458c0: vpalignr xmm0, xmm0, xmmword ptr [rdi + rdx - 0x10], 0xd
4458c8: vmovdqa xmm1, xmmword ptr [rsi + rdx]
4458cd: vpcmpgtb xmm7, xmm0, xmm4
4458d1: vpcmpgtb xmm8, xmm0, xmm5
4458d5: vpcmpgtb xmm9, xmm1, xmm4
4458d9: vpcmpgtb xmm10, xmm1, xmm5
4458dd: vpandn xmm8, xmm8, xmm7
4458e1: vpandn xmm10, xmm10, xmm9
4458e6: vpand xmm8, xmm8, xmm6
4458ea: vpand xmm10, xmm10, xmm6
4458ee: vpor xmm0, xmm8, xmm0
4458f2: vpor xmm1, xmm10, xmm1
4458f6: vpcmpistri xmm0, xmm1, 0x1a
4458fc: jbe 0x445c10
445902: add rdx, 0x10
445906: jmp 0x445860
44590b: nop dword ptr [rax + rax]
445910: sub r10, 0x1000
445917: vmovdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
44591d: vpsrldq xmm0, xmm0, 0xd
445922: vpcmpistri xmm0, xmm0, 0x3a
445928: cmp ecx, 2
44592b: ja 0x44586a
445931: jmp 0x445bd1
445936: nop word ptr cs:[rax + rax]
445940: vpslldq xmm2, xmm2, 2
445945: vpcmpgtb xmm7, xmm1, xmm4
445949: vpcmpgtb xmm8, xmm1, xmm5
44594d: vpcmpgtb xmm9, xmm2, xmm4
445951: vpcmpgtb xmm10, xmm2, xmm5
445955: vpandn xmm8, xmm8, xmm7
445959: vpandn xmm10, xmm10, xmm9
44595e: vpand xmm8, xmm8, xmm6
445962: vpand xmm10, xmm10, xmm6
445966: vpor xmm1, xmm8, xmm1
44596a: vpor xmm2, xmm10, xmm2
44596e: vpcmpeqb xmm2, xmm2, xmm1
445972: vpsubb xmm2, xmm2, xmm0
445976: vpmovmskb r9d, xmm2
44597a: shr edx, cl
44597c: shr r9d, cl
44597f: sub edx, r9d
445982: jne 0x445c38
445988: vmovdqa xmm3, xmmword ptr [rdi]
44598c: mov rcx, 0x10
445993: mov r9d, 0xe
445999: lea r10, [rdi + 0xe]
44599d: and r10, 0xfff
4459a4: sub r10, 0x1000
4459ab: mov rdx, rcx
4459ae: nop 
4459b0: add r10, 0x10
4459b4: jg 0x445a60
4459ba: vmovdqa xmm0, xmmword ptr [rdi + rdx]
4459bf: vpalignr xmm0, xmm0, xmmword ptr [rdi + rdx - 0x10], 0xe
4459c7: vmovdqa xmm1, xmmword ptr [rsi + rdx]
4459cc: vpcmpgtb xmm7, xmm0, xmm4
4459d0: vpcmpgtb xmm8, xmm0, xmm5
4459d4: vpcmpgtb xmm9, xmm1, xmm4
4459d8: vpcmpgtb xmm10, xmm1, xmm5
4459dc: vpandn xmm8, xmm8, xmm7
4459e0: vpandn xmm10, xmm10, xmm9
4459e5: vpand xmm8, xmm8, xmm6
4459e9: vpand xmm10, xmm10, xmm6
4459ed: vpor xmm0, xmm8, xmm0
4459f1: vpor xmm1, xmm10, xmm1
4459f5: vpcmpistri xmm0, xmm1, 0x1a
4459fb: jbe 0x445c10
445a01: add rdx, 0x10
445a05: add r10, 0x10
445a09: jg 0x445a60
445a0b: vmovdqa xmm0, xmmword ptr [rdi + rdx]
445a10: vpalignr xmm0, xmm0, xmmword ptr [rdi + rdx - 0x10], 0xe
445a18: vmovdqa xmm1, xmmword ptr [rsi + rdx]
445a1d: vpcmpgtb xmm7, xmm0, xmm4
445a21: vpcmpgtb xmm8, xmm0, xmm5
445a25: vpcmpgtb xmm9, xmm1, xmm4
445a29: vpcmpgtb xmm10, xmm1, xmm5
445a2d: vpandn xmm8, xmm8, xmm7
445a31: vpandn xmm10, xmm10, xmm9
445a36: vpand xmm8, xmm8, xmm6
445a3a: vpand xmm10, xmm10, xmm6
445a3e: vpor xmm0, xmm8, xmm0
445a42: vpor xmm1, xmm10, xmm1
445a46: vpcmpistri xmm0, xmm1, 0x1a
445a4c: jbe 0x445c10
445a52: add rdx, 0x10
445a56: jmp 0x4459b0
445a5b: nop dword ptr [rax + rax]
445a60: sub r10, 0x1000
445a67: vmovdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
445a6d: vpsrldq xmm0, xmm0, 0xe
445a72: vpcmpistri xmm0, xmm0, 0x3a
445a78: cmp ecx, 1
445a7b: ja 0x4459ba
445a81: jmp 0x445bd1
445a86: nop word ptr cs:[rax + rax]
445a90: vpslldq xmm2, xmm2, 1
445a95: vpcmpgtb xmm7, xmm1, xmm4
445a99: vpcmpgtb xmm8, xmm1, xmm5
445a9d: vpcmpgtb xmm9, xmm2, xmm4
445aa1: vpcmpgtb xmm10, xmm2, xmm5
445aa5: vpandn xmm8, xmm8, xmm7
445aa9: vpandn xmm10, xmm10, xmm9
445aae: vpand xmm8, xmm8, xmm6
445ab2: vpand xmm10, xmm10, xmm6
445ab6: vpor xmm1, xmm8, xmm1
445aba: vpor xmm2, xmm10, xmm2
445abe: vpcmpeqb xmm2, xmm2, xmm1
445ac2: vpsubb xmm2, xmm2, xmm0
445ac6: vpmovmskb r9d, xmm2
445aca: shr edx, cl
445acc: shr r9d, cl
445acf: sub edx, r9d
445ad2: jne 0x445c38
445ad8: vmovdqa xmm3, xmmword ptr [rdi]
445adc: mov rcx, 0x10
445ae3: mov r9d, 0xf
445ae9: lea r10, [rdi + 0xf]
445aed: and r10, 0xfff
445af4: sub r10, 0x1000
445afb: mov rdx, rcx
445afe: nop 
445b00: add r10, 0x10
445b04: jg 0x445bb0
445b0a: vmovdqa xmm0, xmmword ptr [rdi + rdx]
445b0f: vpalignr xmm0, xmm0, xmmword ptr [rdi + rdx - 0x10], 0xf
445b17: vmovdqa xmm1, xmmword ptr [rsi + rdx]
445b1c: vpcmpgtb xmm7, xmm0, xmm4
445b20: vpcmpgtb xmm8, xmm0, xmm5
445b24: vpcmpgtb xmm9, xmm1, xmm4
445b28: vpcmpgtb xmm10, xmm1, xmm5
445b2c: vpandn xmm8, xmm8, xmm7
445b30: vpandn xmm10, xmm10, xmm9
445b35: vpand xmm8, xmm8, xmm6
445b39: vpand xmm10, xmm10, xmm6
445b3d: vpor xmm0, xmm8, xmm0
445b41: vpor xmm1, xmm10, xmm1
445b45: vpcmpistri xmm0, xmm1, 0x1a
445b4b: jbe 0x445c10
445b51: add rdx, 0x10
445b55: add r10, 0x10
445b59: jg 0x445bb0
445b5b: vmovdqa xmm0, xmmword ptr [rdi + rdx]
445b60: vpalignr xmm0, xmm0, xmmword ptr [rdi + rdx - 0x10], 0xf
445b68: vmovdqa xmm1, xmmword ptr [rsi + rdx]
445b6d: vpcmpgtb xmm7, xmm0, xmm4
445b71: vpcmpgtb xmm8, xmm0, xmm5
445b75: vpcmpgtb xmm9, xmm1, xmm4
445b79: vpcmpgtb xmm10, xmm1, xmm5
445b7d: vpandn xmm8, xmm8, xmm7
445b81: vpandn xmm10, xmm10, xmm9
445b86: vpand xmm8, xmm8, xmm6
445b8a: vpand xmm10, xmm10, xmm6
445b8e: vpor xmm0, xmm8, xmm0
445b92: vpor xmm1, xmm10, xmm1
445b96: vpcmpistri xmm0, xmm1, 0x1a
445b9c: jbe 0x445c10
445b9e: add rdx, 0x10
445ba2: jmp 0x445b00
445ba7: nop word ptr [rax + rax]
445bb0: sub r10, 0x1000
445bb7: vmovdqa xmm0, xmmword ptr [rdi + rdx - 0x10]
445bbd: vpsrldq xmm0, xmm0, 0xf
445bc2: vpcmpistri xmm0, xmm0, 0x3a
445bc8: cmp ecx, 0
445bcb: ja 0x445b0a
445bd1: vmovdqa xmm1, xmmword ptr [rsi + rdx]
445bd6: vpcmpgtb xmm7, xmm0, xmm4
445bda: vpcmpgtb xmm8, xmm0, xmm5
445bde: vpcmpgtb xmm9, xmm1, xmm4
445be2: vpcmpgtb xmm10, xmm1, xmm5
445be6: vpandn xmm8, xmm8, xmm7
445bea: vpandn xmm10, xmm10, xmm9
445bef: vpand xmm8, xmm8, xmm6
445bf3: vpand xmm10, xmm10, xmm6
445bf7: vpor xmm0, xmm8, xmm0
445bfb: vpor xmm1, xmm10, xmm1
445bff: vpcmpistri xmm0, xmm1, 0x1a
445c05: nop word ptr cs:[rax + rax]
445c10: jae 0x445c6c
445c12: add rdx, rcx
445c15: lea rdi, [rdi + r9 - 0x10]
445c1a: movzx eax, byte ptr [rdi + rdx]
445c1e: movzx edx, byte ptr [rsi + rdx]
445c22: test r8d, r8d
445c25: je 0x445c28
445c27: xchg edx, eax
445c28: lea rcx, [rip + 0x55dd1]
445c2f: mov edx, dword ptr [rcx + rdx*4]
445c32: mov eax, dword ptr [rcx + rax*4]
445c35: sub eax, edx
445c37: ret 
445c38: lea rdi, [rdi + rax]
445c3c: lea rsi, [rsi + rcx]
445c40: test r8d, r8d
445c43: je 0x445c50
445c45: xchg rdi, rsi
445c48: nop dword ptr [rax + rax]
445c50: bsf rdx, rdx
445c54: movzx ecx, byte ptr [rsi + rdx]
445c58: movzx eax, byte ptr [rdi + rdx]
445c5c: lea rdx, [rip + 0x55d9d]
445c63: mov ecx, dword ptr [rdx + rcx*4]
445c66: mov eax, dword ptr [rdx + rax*4]
445c69: sub eax, ecx
445c6b: ret 
445c6c: xor eax, eax
445c6e: ret 
445c6f: nop 
445c70: movzx ecx, byte ptr [rsi]
445c73: movzx eax, byte ptr [rdi]
445c76: lea rdx, [rip + 0x55d83]
445c7d: mov ecx, dword ptr [rdx + rcx*4]
445c80: mov eax, dword ptr [rdx + rax*4]
445c83: sub eax, ecx
445c85: ret 
445c86: nop word ptr cs:[rax + rax]
445c90: endbr64 
445c94: movd xmm1, esi
445c98: mov eax, edi
445c9a: and eax, 0xfff
445c9f: punpcklbw xmm1, xmm1
445ca3: cmp eax, 0xfc0
445ca8: punpcklwd xmm1, xmm1
445cac: pshufd xmm1, xmm1, 0
445cb1: jg 0x445e20
445cb7: movdqu xmm0, xmmword ptr [rdi]
445cbb: pxor xmm3, xmm3
445cbf: movdqa xmm4, xmm0
445cc3: pcmpeqb xmm0, xmm1
445cc7: pcmpeqb xmm4, xmm3
445ccb: por xmm0, xmm4
445ccf: pmovmskb eax, xmm0
445cd3: test eax, eax
445cd5: je 0x445cf0
445cd7: bsf eax, eax
445cda: mov edx, 0
445cdf: lea rax, [rdi + rax]
445ce3: cmp byte ptr [rax], sil
445ce6: cmovne rax, rdx
445cea: ret 
445ceb: nop dword ptr [rax + rax]
445cf0: movdqu xmm0, xmmword ptr [rdi + 0x10]
445cf5: movdqa xmm4, xmm0
445cf9: pcmpeqb xmm0, xmm1
445cfd: pcmpeqb xmm4, xmm3
445d01: por xmm0, xmm4
445d05: pmovmskb ecx, xmm0
445d09: movdqu xmm0, xmmword ptr [rdi + 0x20]
445d0e: movdqa xmm4, xmm0
445d12: pcmpeqb xmm0, xmm1
445d16: shl rcx, 0x10
445d1a: pcmpeqb xmm4, xmm3
445d1e: por xmm0, xmm4
445d22: pmovmskb eax, xmm0
445d26: movdqu xmm0, xmmword ptr [rdi + 0x30]
445d2b: pcmpeqb xmm3, xmm0
445d2f: shl rax, 0x20
445d33: pcmpeqb xmm0, xmm1
445d37: or rax, rcx
445d3a: por xmm0, xmm3
445d3e: pmovmskb ecx, xmm0
445d42: shl rcx, 0x30
445d46: or rax, rcx
445d49: test rax, rax
445d4c: jne 0x445e00
445d52: nop word ptr cs:[rax + rax]
445d5d: nop dword ptr [rax]
445d60: pxor xmm6, xmm6
445d64: and rdi, 0xffffffffffffffc0
445d68: add rdi, 0x40
445d6c: movdqa xmm5, xmmword ptr [rdi]
445d70: movdqa xmm2, xmmword ptr [rdi + 0x10]
445d75: movdqa xmm3, xmmword ptr [rdi + 0x20]
445d7a: pxor xmm5, xmm1
445d7e: movdqa xmm4, xmmword ptr [rdi + 0x30]
445d83: pxor xmm2, xmm1
445d87: pxor xmm3, xmm1
445d8b: pminub xmm5, xmmword ptr [rdi]
445d8f: pxor xmm4, xmm1
445d93: pminub xmm2, xmmword ptr [rdi + 0x10]
445d98: pminub xmm3, xmmword ptr [rdi + 0x20]
445d9d: pminub xmm5, xmm2
445da1: pminub xmm4, xmmword ptr [rdi + 0x30]
445da6: pminub xmm5, xmm3
445daa: pminub xmm5, xmm4
445dae: pcmpeqb xmm5, xmm6
445db2: pmovmskb eax, xmm5
445db6: test eax, eax
445db8: je 0x445d68
445dba: movdqa xmm5, xmmword ptr [rdi]
445dbe: movdqa xmm0, xmm5
445dc2: pcmpeqb xmm5, xmm1
445dc6: pcmpeqb xmm0, xmm6
445dca: por xmm5, xmm0
445dce: pcmpeqb xmm2, xmm6
445dd2: pcmpeqb xmm3, xmm6
445dd6: pcmpeqb xmm4, xmm6
445dda: pmovmskb ecx, xmm5
445dde: pmovmskb eax, xmm2
445de2: shl rax, 0x10
445de6: pmovmskb r8d, xmm3
445deb: pmovmskb edx, xmm4
445def: shl r8, 0x20
445df3: or rax, r8
445df6: or rax, rcx
445df9: shl rdx, 0x30
445dfd: or rax, rdx
445e00: bsf rax, rax
445e04: mov edx, 0
445e09: lea rax, [rdi + rax]
445e0d: cmp byte ptr [rax], sil
445e10: cmovne rax, rdx
445e14: ret 
445e15: nop word ptr cs:[rax + rax]
445e20: mov rdx, rdi
445e23: pxor xmm2, xmm2
445e27: and rdx, 0xffffffffffffffc0
445e2b: movdqa xmm0, xmm1
445e2f: movdqa xmm3, xmmword ptr [rdx]
445e33: movdqa xmm4, xmm3
445e37: pcmpeqb xmm3, xmm1
445e3b: pcmpeqb xmm4, xmm2
445e3f: por xmm3, xmm4
445e43: pmovmskb r8d, xmm3
445e48: movdqa xmm3, xmmword ptr [rdx + 0x10]
445e4d: movdqa xmm4, xmm3
445e51: pcmpeqb xmm3, xmm1
445e55: pcmpeqb xmm4, xmm2
445e59: por xmm3, xmm4
445e5d: pmovmskb eax, xmm3
445e61: movdqa xmm3, xmmword ptr [rdx + 0x20]
445e66: movdqa xmm4, xmm3
445e6a: pcmpeqb xmm3, xmm1
445e6e: shl rax, 0x10
445e72: pcmpeqb xmm4, xmm2
445e76: por xmm3, xmm4
445e7a: pmovmskb r9d, xmm3
445e7f: movdqa xmm3, xmmword ptr [rdx + 0x30]
445e84: pcmpeqb xmm2, xmm3
445e88: shl r9, 0x20
445e8c: pcmpeqb xmm0, xmm3
445e90: or rax, r9
445e93: or rax, r8
445e96: por xmm0, xmm2
445e9a: pmovmskb ecx, xmm0
445e9e: shl rcx, 0x30
445ea2: or rax, rcx
445ea5: mov ecx, edi
445ea7: sub cl, dl
445ea9: shr rax, cl
445eac: test rax, rax
445eaf: jne 0x445e00
445eb5: jmp 0x445d52
445eba: nop word ptr [rax + rax]
445ec0: endbr64 
445ec4: movd xmm1, esi
445ec8: mov eax, edi
445eca: and eax, 0xfff
445ecf: punpcklbw xmm1, xmm1
445ed3: cmp eax, 0xfc0
445ed8: punpcklwd xmm1, xmm1
445edc: pshufd xmm1, xmm1, 0
445ee1: jg 0x446030
445ee7: movdqu xmm0, xmmword ptr [rdi]
445eeb: pxor xmm3, xmm3
445eef: movdqa xmm4, xmm0
445ef3: pcmpeqb xmm0, xmm1
445ef7: pcmpeqb xmm4, xmm3
445efb: por xmm0, xmm4
445eff: pmovmskb eax, xmm0
445f03: test eax, eax
445f05: je 0x445f10
445f07: bsf eax, eax
445f0a: lea rax, [rdi + rax]
445f0e: ret 
445f0f: nop 
445f10: movdqu xmm0, xmmword ptr [rdi + 0x10]
445f15: movdqa xmm4, xmm0
445f19: pcmpeqb xmm0, xmm1
445f1d: pcmpeqb xmm4, xmm3
445f21: por xmm0, xmm4
445f25: pmovmskb ecx, xmm0
445f29: movdqu xmm0, xmmword ptr [rdi + 0x20]
445f2e: movdqa xmm4, xmm0
445f32: pcmpeqb xmm0, xmm1
445f36: shl rcx, 0x10
445f3a: pcmpeqb xmm4, xmm3
445f3e: por xmm0, xmm4
445f42: pmovmskb eax, xmm0
445f46: movdqu xmm0, xmmword ptr [rdi + 0x30]
445f4b: pcmpeqb xmm3, xmm0
445f4f: shl rax, 0x20
445f53: pcmpeqb xmm0, xmm1
445f57: or rax, rcx
445f5a: por xmm0, xmm3
445f5e: pmovmskb ecx, xmm0
445f62: shl rcx, 0x30
445f66: or rax, rcx
445f69: test rax, rax
445f6c: jne 0x446020
445f72: nop word ptr cs:[rax + rax]
445f7d: nop dword ptr [rax]
445f80: pxor xmm6, xmm6
445f84: and rdi, 0xffffffffffffffc0
445f88: add rdi, 0x40
445f8c: movdqa xmm5, xmmword ptr [rdi]
445f90: movdqa xmm2, xmmword ptr [rdi + 0x10]
445f95: movdqa xmm3, xmmword ptr [rdi + 0x20]
445f9a: pxor xmm5, xmm1
445f9e: movdqa xmm4, xmmword ptr [rdi + 0x30]
445fa3: pxor xmm2, xmm1
445fa7: pxor xmm3, xmm1
445fab: pminub xmm5, xmmword ptr [rdi]
445faf: pxor xmm4, xmm1
445fb3: pminub xmm2, xmmword ptr [rdi + 0x10]
445fb8: pminub xmm3, xmmword ptr [rdi + 0x20]
445fbd: pminub xmm5, xmm2
445fc1: pminub xmm4, xmmword ptr [rdi + 0x30]
445fc6: pminub xmm5, xmm3
445fca: pminub xmm5, xmm4
445fce: pcmpeqb xmm5, xmm6
445fd2: pmovmskb eax, xmm5
445fd6: test eax, eax
445fd8: je 0x445f88
445fda: movdqa xmm5, xmmword ptr [rdi]
445fde: movdqa xmm0, xmm5
445fe2: pcmpeqb xmm5, xmm1
445fe6: pcmpeqb xmm0, xmm6
445fea: por xmm5, xmm0
445fee: pcmpeqb xmm2, xmm6
445ff2: pcmpeqb xmm3, xmm6
445ff6: pcmpeqb xmm4, xmm6
445ffa: pmovmskb ecx, xmm5
445ffe: pmovmskb eax, xmm2
446002: shl rax, 0x10
446006: pmovmskb r8d, xmm3
44600b: pmovmskb edx, xmm4
44600f: shl r8, 0x20
446013: or rax, r8
446016: or rax, rcx
446019: shl rdx, 0x30
44601d: or rax, rdx
446020: bsf rax, rax
446024: lea rax, [rdi + rax]
446028: ret 
446029: nop dword ptr [rax]
446030: mov rdx, rdi
446033: pxor xmm2, xmm2
446037: and rdx, 0xffffffffffffffc0
44603b: movdqa xmm0, xmm1
44603f: movdqa xmm3, xmmword ptr [rdx]
446043: movdqa xmm4, xmm3
446047: pcmpeqb xmm3, xmm1
44604b: pcmpeqb xmm4, xmm2
44604f: por xmm3, xmm4
446053: pmovmskb r8d, xmm3
446058: movdqa xmm3, xmmword ptr [rdx + 0x10]
44605d: movdqa xmm4, xmm3
446061: pcmpeqb xmm3, xmm1
446065: pcmpeqb xmm4, xmm2
446069: por xmm3, xmm4
44606d: pmovmskb eax, xmm3
446071: movdqa xmm3, xmmword ptr [rdx + 0x20]
446076: movdqa xmm4, xmm3
44607a: pcmpeqb xmm3, xmm1
44607e: shl rax, 0x10
446082: pcmpeqb xmm4, xmm2
446086: por xmm3, xmm4
44608a: pmovmskb r9d, xmm3
44608f: movdqa xmm3, xmmword ptr [rdx + 0x30]
446094: pcmpeqb xmm2, xmm3
446098: shl r9, 0x20
44609c: pcmpeqb xmm0, xmm3
4460a0: or rax, r9
4460a3: or rax, r8
4460a6: por xmm0, xmm2
4460aa: pmovmskb ecx, xmm0
4460ae: shl rcx, 0x30
4460b2: or rax, rcx
4460b5: mov ecx, edi
4460b7: sub cl, dl
4460b9: shr rax, cl
4460bc: test rax, rax
4460bf: jne 0x446020
4460c5: jmp 0x445f72
4460ca: nop word ptr [rax + rax]
4460d0: endbr64 
4460d4: mov ecx, edi
4460d6: vmovd xmm0, esi
4460da: vpxor xmm9, xmm9, xmm9
4460df: vpbroadcastb ymm0, xmm0
4460e4: and ecx, 0x3f
4460e7: cmp ecx, 0x20
4460ea: ja 0x446120
4460ec: vmovdqu ymm8, ymmword ptr [rdi]
4460f0: vpcmpeqb ymm1, ymm0, ymm8
4460f5: vpcmpeqb ymm2, ymm9, ymm8
4460fa: vpor ymm1, ymm2, ymm1
4460fe: vpmovmskb eax, ymm1
446102: test eax, eax
446104: jne 0x446260
44610a: add rdi, 0x20
44610e: and ecx, 0x1f
446111: and rdi, 0xffffffffffffffe0
446115: jmp 0x446164
446117: nop word ptr [rax + rax]
446120: and ecx, 0x1f
446123: and rdi, 0xffffffffffffffe0
446127: vmovdqu ymm8, ymmword ptr [rdi]
44612b: vpcmpeqb ymm1, ymm0, ymm8
446130: vpcmpeqb ymm2, ymm9, ymm8
446135: vpor ymm1, ymm2, ymm1
446139: vpmovmskb eax, ymm1
44613d: sar eax, cl
44613f: test eax, eax
446141: je 0x446160
446143: tzcnt eax, eax
446147: add rax, rcx
44614a: xor edx, edx
44614c: lea rax, [rdi + rax]
446150: cmp sil, byte ptr [rax]
446153: cmovne rax, rdx
446157: vzeroupper 
44615a: ret 
44615b: nop dword ptr [rax + rax]
446160: add rdi, 0x20
446164: vmovdqa ymm8, ymmword ptr [rdi]
446168: vpcmpeqb ymm1, ymm0, ymm8
44616d: vpcmpeqb ymm2, ymm9, ymm8
446172: vpor ymm1, ymm2, ymm1
446176: vpmovmskb eax, ymm1
44617a: test eax, eax
44617c: jne 0x446260
446182: vmovdqa ymm8, ymmword ptr [rdi + 0x20]
446187: vpcmpeqb ymm1, ymm0, ymm8
44618c: vpcmpeqb ymm2, ymm9, ymm8
446191: vpor ymm1, ymm2, ymm1
446195: vpmovmskb eax, ymm1
446199: test eax, eax
44619b: jne 0x446280
4461a1: vmovdqa ymm8, ymmword ptr [rdi + 0x40]
4461a6: vpcmpeqb ymm1, ymm0, ymm8
4461ab: vpcmpeqb ymm2, ymm9, ymm8
4461b0: vpor ymm1, ymm2, ymm1
4461b4: vpmovmskb eax, ymm1
4461b8: test eax, eax
4461ba: jne 0x4462a0
4461c0: vmovdqa ymm8, ymmword ptr [rdi + 0x60]
4461c5: vpcmpeqb ymm1, ymm0, ymm8
4461ca: vpcmpeqb ymm2, ymm9, ymm8
4461cf: vpor ymm1, ymm2, ymm1
4461d3: vpmovmskb eax, ymm1
4461d7: test eax, eax
4461d9: jne 0x4462de
4461df: add rdi, 0x80
4461e6: mov rcx, rdi
4461e9: and ecx, 0x7f
4461ec: and rdi, 0xffffffffffffff80
4461f0: vmovdqa ymm5, ymmword ptr [rdi]
4461f4: vmovdqa ymm6, ymmword ptr [rdi + 0x20]
4461f9: vmovdqa ymm7, ymmword ptr [rdi + 0x40]
4461fe: vmovdqa ymm8, ymmword ptr [rdi + 0x60]
446203: vpcmpeqb ymm1, ymm0, ymm5
446207: vpcmpeqb ymm2, ymm0, ymm6
44620b: vpcmpeqb ymm3, ymm0, ymm7
44620f: vpcmpeqb ymm4, ymm0, ymm8
446214: vpcmpeqb ymm5, ymm9, ymm5
446218: vpcmpeqb ymm6, ymm9, ymm6
44621c: vpcmpeqb ymm7, ymm9, ymm7
446220: vpcmpeqb ymm8, ymm9, ymm8
446225: vpor ymm1, ymm5, ymm1
446229: vpor ymm2, ymm6, ymm2
44622d: vpor ymm3, ymm7, ymm3
446231: vpor ymm4, ymm8, ymm4
446235: vpor ymm5, ymm2, ymm1
446239: vpor ymm6, ymm4, ymm3
44623d: vpor ymm5, ymm6, ymm5
446241: vpmovmskb eax, ymm5
446245: test eax, eax
446247: jne 0x4462c0
446249: add rdi, 0x80
446250: jmp 0x4461f0
446252: nop word ptr cs:[rax + rax]
44625d: nop dword ptr [rax]
446260: tzcnt eax, eax
446264: xor edx, edx
446266: lea rax, [rdi + rax]
44626a: cmp sil, byte ptr [rax]
44626d: cmovne rax, rdx
446271: vzeroupper 
446274: ret 
446275: nop word ptr cs:[rax + rax]
446280: tzcnt eax, eax
446284: xor edx, edx
446286: lea rax, [rdi + rax + 0x20]
44628b: cmp sil, byte ptr [rax]
44628e: cmovne rax, rdx
446292: vzeroupper 
446295: ret 
446296: nop word ptr cs:[rax + rax]
4462a0: tzcnt eax, eax
4462a4: xor edx, edx
4462a6: lea rax, [rdi + rax + 0x40]
4462ab: cmp sil, byte ptr [rax]
4462ae: cmovne rax, rdx
4462b2: vzeroupper 
4462b5: ret 
4462b6: nop word ptr cs:[rax + rax]
4462c0: vpmovmskb eax, ymm1
4462c4: test eax, eax
4462c6: jne 0x446260
4462c8: vpmovmskb eax, ymm2
4462cc: test eax, eax
4462ce: jne 0x446280
4462d0: vpmovmskb eax, ymm3
4462d4: test eax, eax
4462d6: jne 0x4462a0
4462d8: vpmovmskb eax, ymm4
4462dc: test eax, eax
4462de: tzcnt eax, eax
4462e2: xor edx, edx
4462e4: lea rax, [rdi + rax + 0x60]
4462e9: cmp sil, byte ptr [rax]
4462ec: cmovne rax, rdx
4462f0: vzeroupper 
4462f3: ret 
4462f4: nop word ptr cs:[rax + rax]
4462fe: nop 
446300: endbr64 
446304: mov ecx, edi
446306: vmovd xmm0, esi
44630a: vpxor xmm9, xmm9, xmm9
44630f: vpbroadcastb ymm0, xmm0
446314: and ecx, 0x3f
446317: cmp ecx, 0x20
44631a: ja 0x446350
44631c: vmovdqu ymm8, ymmword ptr [rdi]
446320: vpcmpeqb ymm1, ymm0, ymm8
446325: vpcmpeqb ymm2, ymm9, ymm8
44632a: vpor ymm1, ymm2, ymm1
44632e: vpmovmskb eax, ymm1
446332: test eax, eax
446334: jne 0x446490
44633a: add rdi, 0x20
44633e: and ecx, 0x1f
446341: and rdi, 0xffffffffffffffe0
446345: jmp 0x446394
446347: nop word ptr [rax + rax]
446350: and ecx, 0x1f
446353: and rdi, 0xffffffffffffffe0
446357: vmovdqu ymm8, ymmword ptr [rdi]
44635b: vpcmpeqb ymm1, ymm0, ymm8
446360: vpcmpeqb ymm2, ymm9, ymm8
446365: vpor ymm1, ymm2, ymm1
446369: vpmovmskb eax, ymm1
44636d: sar eax, cl
44636f: test eax, eax
446371: je 0x446390
446373: tzcnt eax, eax
446377: add rax, rcx
44637a: add rax, rdi
44637d: vzeroupper 
446380: ret 
446381: nop word ptr cs:[rax + rax]
44638c: nop dword ptr [rax]
446390: add rdi, 0x20
446394: vmovdqa ymm8, ymmword ptr [rdi]
446398: vpcmpeqb ymm1, ymm0, ymm8
44639d: vpcmpeqb ymm2, ymm9, ymm8
4463a2: vpor ymm1, ymm2, ymm1
4463a6: vpmovmskb eax, ymm1
4463aa: test eax, eax
4463ac: jne 0x446490
4463b2: vmovdqa ymm8, ymmword ptr [rdi + 0x20]
4463b7: vpcmpeqb ymm1, ymm0, ymm8
4463bc: vpcmpeqb ymm2, ymm9, ymm8
4463c1: vpor ymm1, ymm2, ymm1
4463c5: vpmovmskb eax, ymm1
4463c9: test eax, eax
4463cb: jne 0x4464a0
4463d1: vmovdqa ymm8, ymmword ptr [rdi + 0x40]
4463d6: vpcmpeqb ymm1, ymm0, ymm8
4463db: vpcmpeqb ymm2, ymm9, ymm8
4463e0: vpor ymm1, ymm2, ymm1
4463e4: vpmovmskb eax, ymm1
4463e8: test eax, eax
4463ea: jne 0x4464b0
4463f0: vmovdqa ymm8, ymmword ptr [rdi + 0x60]
4463f5: vpcmpeqb ymm1, ymm0, ymm8
4463fa: vpcmpeqb ymm2, ymm9, ymm8
4463ff: vpor ymm1, ymm2, ymm1
446403: vpmovmskb eax, ymm1
446407: test eax, eax
446409: jne 0x4464de
44640f: add rdi, 0x80
446416: mov rcx, rdi
446419: and ecx, 0x7f
44641c: and rdi, 0xffffffffffffff80
446420: vmovdqa ymm5, ymmword ptr [rdi]
446424: vmovdqa ymm6, ymmword ptr [rdi + 0x20]
446429: vmovdqa ymm7, ymmword ptr [rdi + 0x40]
44642e: vmovdqa ymm8, ymmword ptr [rdi + 0x60]
446433: vpcmpeqb ymm1, ymm0, ymm5
446437: vpcmpeqb ymm2, ymm0, ymm6
44643b: vpcmpeqb ymm3, ymm0, ymm7
44643f: vpcmpeqb ymm4, ymm0, ymm8
446444: vpcmpeqb ymm5, ymm9, ymm5
446448: vpcmpeqb ymm6, ymm9, ymm6
44644c: vpcmpeqb ymm7, ymm9, ymm7
446450: vpcmpeqb ymm8, ymm9, ymm8
446455: vpor ymm1, ymm5, ymm1
446459: vpor ymm2, ymm6, ymm2
44645d: vpor ymm3, ymm7, ymm3
446461: vpor ymm4, ymm8, ymm4
446465: vpor ymm5, ymm2, ymm1
446469: vpor ymm6, ymm4, ymm3
44646d: vpor ymm5, ymm6, ymm5
446471: vpmovmskb eax, ymm5
446475: test eax, eax
446477: jne 0x4464c0
446479: add rdi, 0x80
446480: jmp 0x446420
446482: nop word ptr cs:[rax + rax]
44648d: nop dword ptr [rax]
446490: tzcnt eax, eax
446494: add rax, rdi
446497: vzeroupper 
44649a: ret 
44649b: nop dword ptr [rax + rax]
4464a0: tzcnt eax, eax
4464a4: add rax, 0x20
4464a8: add rax, rdi
4464ab: vzeroupper 
4464ae: ret 
4464af: nop 
4464b0: tzcnt eax, eax
4464b4: add rax, 0x40
4464b8: add rax, rdi
4464bb: vzeroupper 
4464be: ret 
4464bf: nop 
4464c0: vpmovmskb eax, ymm1
4464c4: test eax, eax
4464c6: jne 0x446490
4464c8: vpmovmskb eax, ymm2
4464cc: test eax, eax
4464ce: jne 0x4464a0
4464d0: vpmovmskb eax, ymm3
4464d4: test eax, eax
4464d6: jne 0x4464b0
4464d8: vpmovmskb eax, ymm4
4464dc: test eax, eax
4464de: tzcnt eax, eax
4464e2: add rax, 0x60
4464e6: add rax, rdi
4464e9: vzeroupper 
4464ec: ret 
4464ed: nop dword ptr [rax]
4464f0: endbr64 
4464f4: pxor xmm0, xmm0
4464f8: pxor xmm1, xmm1
4464fc: pxor xmm2, xmm2
446500: pxor xmm3, xmm3
446504: mov rax, rdi
446507: mov rcx, rdi
44650a: and rcx, 0xfff
446511: cmp rcx, 0xfcf
446518: ja 0x446580
44651a: movdqu xmm4, xmmword ptr [rax]
44651e: pcmpeqb xmm4, xmm0
446522: pmovmskb edx, xmm4
446526: test edx, edx
446528: je 0x44652e
44652a: bsf eax, edx
44652d: ret 
44652e: and rax, 0xfffffffffffffff0
446532: pcmpeqb xmm1, xmmword ptr [rax + 0x10]
446537: pcmpeqb xmm2, xmmword ptr [rax + 0x20]
44653c: pcmpeqb xmm3, xmmword ptr [rax + 0x30]
446541: pmovmskb edx, xmm1
446545: pmovmskb r8d, xmm2
44654a: pmovmskb ecx, xmm3
44654e: shl rdx, 0x10
446552: shl rcx, 0x10
446556: or rcx, r8
446559: shl rcx, 0x20
44655d: or rdx, rcx
446560: mov rcx, rdi
446563: xor rcx, rax
446566: and rax, 0xffffffffffffffc0
44656a: sar rdx, cl
44656d: test rdx, rdx
446570: je 0x4465f0
446572: bsf rax, rdx
446576: ret 
446577: nop word ptr [rax + rax]
446580: and rax, 0xffffffffffffffc0
446584: pcmpeqb xmm0, xmmword ptr [rax]
446588: pcmpeqb xmm1, xmmword ptr [rax + 0x10]
44658d: pcmpeqb xmm2, xmmword ptr [rax + 0x20]
446592: pcmpeqb xmm3, xmmword ptr [rax + 0x30]
446597: pmovmskb esi, xmm0
44659b: pmovmskb edx, xmm1
44659f: pmovmskb r8d, xmm2
4465a4: pmovmskb ecx, xmm3
4465a8: shl rdx, 0x10
4465ac: shl rcx, 0x10
4465b0: or rdx, rsi
4465b3: or rcx, r8
4465b6: shl rcx, 0x20
4465ba: or rdx, rcx
4465bd: mov rcx, rdi
4465c0: xor rcx, rax
4465c3: and rax, 0xffffffffffffffc0
4465c7: sar rdx, cl
4465ca: test rdx, rdx
4465cd: je 0x4465e0
4465cf: bsf rax, rdx
4465d3: ret 
4465d4: nop word ptr cs:[rax + rax]
4465df: nop 
4465e0: pxor xmm1, xmm1
4465e4: pxor xmm2, xmm2
4465e8: pxor xmm3, xmm3
4465ec: nop dword ptr [rax]
4465f0: movdqa xmm0, xmmword ptr [rax + 0x40]
4465f5: pminub xmm0, xmmword ptr [rax + 0x50]
4465fa: pminub xmm0, xmmword ptr [rax + 0x60]
4465ff: pminub xmm0, xmmword ptr [rax + 0x70]
446604: pcmpeqb xmm0, xmm3
446608: pmovmskb edx, xmm0
44660c: test edx, edx
44660e: jne 0x446640
446610: sub rax, -0x80
446614: movdqa xmm0, xmmword ptr [rax]
446618: pminub xmm0, xmmword ptr [rax + 0x10]
44661d: pminub xmm0, xmmword ptr [rax + 0x20]
446622: pminub xmm0, xmmword ptr [rax + 0x30]
446627: pcmpeqb xmm0, xmm3
44662b: pmovmskb edx, xmm0
44662f: test edx, edx
446631: jne 0x446644
446633: jmp 0x4465f0
446635: nop word ptr cs:[rax + rax]
446640: add rax, 0x40
446644: pxor xmm0, xmm0
446648: pcmpeqb xmm0, xmmword ptr [rax]
44664c: pcmpeqb xmm1, xmmword ptr [rax + 0x10]
446651: pcmpeqb xmm2, xmmword ptr [rax + 0x20]
446656: pcmpeqb xmm3, xmmword ptr [rax + 0x30]
44665b: pmovmskb esi, xmm0
44665f: pmovmskb edx, xmm1
446663: pmovmskb r8d, xmm2
446668: pmovmskb ecx, xmm3
44666c: shl rdx, 0x10
446670: shl rcx, 0x10
446674: or rdx, rsi
446677: or rcx, r8
44667a: shl rcx, 0x20
44667e: or rdx, rcx
446681: bsf rdx, rdx
446685: add rax, rdx
446688: sub rax, rdi
44668b: ret 
44668c: nop dword ptr [rax]
446690: endbr64 
446694: test rsi, rsi
446697: jne 0x44669d
446699: xor rax, rax
44669c: ret 
44669d: add rsi, rdi
4466a0: mov r10, rsi
4466a3: and r10, 0xffffffffffffffc0
4466a7: mov r11, rsi
4466aa: pxor xmm0, xmm0
4466ae: pxor xmm1, xmm1
4466b2: pxor xmm2, xmm2
4466b6: pxor xmm3, xmm3
4466ba: mov rax, rdi
4466bd: mov rcx, rdi
4466c0: and rcx, 0xfff
4466c7: cmp rcx, 0xfcf
4466ce: ja 0x446740
4466d0: and rax, 0xfffffffffffffff0
4466d4: pcmpeqb xmm0, xmmword ptr [rax]
4466d8: pcmpeqb xmm1, xmmword ptr [rax + 0x10]
4466dd: pcmpeqb xmm2, xmmword ptr [rax + 0x20]
4466e2: pcmpeqb xmm3, xmmword ptr [rax + 0x30]
4466e7: pmovmskb esi, xmm0
4466eb: pmovmskb edx, xmm1
4466ef: pmovmskb r8d, xmm2
4466f4: pmovmskb ecx, xmm3
4466f8: shl rdx, 0x10
4466fc: shl rcx, 0x10
446700: or rdx, rsi
446703: or rcx, r8
446706: shl rcx, 0x20
44670a: or rdx, rcx
44670d: mov rcx, rdi
446710: xor rcx, rax
446713: mov rsi, r11
446716: sub rsi, rax
446719: and rax, 0xffffffffffffffc0
44671d: test rsi, -0x40
446724: je 0x4467a3
446726: sar rdx, cl
446729: test rdx, rdx
44672c: je 0x4467d0
446732: bsf rax, rdx
446736: ret 
446737: nop word ptr [rax + rax]
446740: and rax, 0xffffffffffffffc0
446744: pcmpeqb xmm0, xmmword ptr [rax]
446748: pcmpeqb xmm1, xmmword ptr [rax + 0x10]
44674d: pcmpeqb xmm2, xmmword ptr [rax + 0x20]
446752: pcmpeqb xmm3, xmmword ptr [rax + 0x30]
446757: pmovmskb esi, xmm0
44675b: pmovmskb edx, xmm1
44675f: pmovmskb r8d, xmm2
446764: pmovmskb ecx, xmm3
446768: shl rdx, 0x10
44676c: shl rcx, 0x10
446770: or rdx, rsi
446773: or rcx, r8
446776: shl rcx, 0x20
44677a: or rdx, rcx
44677d: mov rcx, rdi
446780: xor rcx, rax
446783: mov rsi, r11
446786: sub rsi, rax
446789: and rax, 0xffffffffffffffc0
44678d: test rsi, -0x40
446794: je 0x4467a3
446796: sar rdx, cl
446799: test rdx, rdx
44679c: je 0x4467c0
44679e: bsf rax, rdx
4467a2: ret 
4467a3: bts rdx, rsi
4467a7: sar rdx, cl
4467aa: test rdx, rdx
4467ad: je 0x4467c0
4467af: bsf rax, rdx
4467b3: ret 
4467b4: nop word ptr cs:[rax + rax]
4467bf: nop 
4467c0: pxor xmm1, xmm1
4467c4: pxor xmm2, xmm2
4467c8: pxor xmm3, xmm3
4467cc: nop dword ptr [rax]
4467d0: add rax, 0x40
4467d4: cmp r10, rax
4467d7: je 0x446800
4467d9: movdqa xmm0, xmmword ptr [rax]
4467dd: pminub xmm0, xmmword ptr [rax + 0x10]
4467e2: pminub xmm0, xmmword ptr [rax + 0x20]
4467e7: pminub xmm0, xmmword ptr [rax + 0x30]
4467ec: pcmpeqb xmm0, xmm3
4467f0: pmovmskb edx, xmm0
4467f4: test edx, edx
4467f6: jne 0x446860
4467f8: jmp 0x4467d0
4467fa: nop word ptr [rax + rax]
446800: cmp r11, rax
446803: je 0x446842
446805: pxor xmm0, xmm0
446809: pcmpeqb xmm0, xmmword ptr [rax]
44680d: pcmpeqb xmm1, xmmword ptr [rax + 0x10]
446812: pcmpeqb xmm2, xmmword ptr [rax + 0x20]
446817: pcmpeqb xmm3, xmmword ptr [rax + 0x30]
44681c: pmovmskb esi, xmm0
446820: pmovmskb edx, xmm1
446824: pmovmskb r8d, xmm2
446829: pmovmskb ecx, xmm3
44682d: shl rdx, 0x10
446831: shl rcx, 0x10
446835: or rdx, rsi
446838: or rcx, r8
44683b: shl rcx, 0x20
44683f: or rdx, rcx
446842: bts rdx, r11
446846: bsf rdx, rdx
44684a: add rax, rdx
44684d: sub rax, rdi
446850: ret 
446851: nop word ptr cs:[rax + rax]
44685c: nop dword ptr [rax]
446860: pxor xmm0, xmm0
446864: pcmpeqb xmm0, xmmword ptr [rax]
446868: pcmpeqb xmm1, xmmword ptr [rax + 0x10]
44686d: pcmpeqb xmm2, xmmword ptr [rax + 0x20]
446872: pcmpeqb xmm3, xmmword ptr [rax + 0x30]
446877: pmovmskb esi, xmm0
44687b: pmovmskb edx, xmm1
44687f: pmovmskb r8d, xmm2
446884: pmovmskb ecx, xmm3
446888: shl rdx, 0x10
44688c: shl rcx, 0x10
446890: or rdx, rsi
446893: or rcx, r8
446896: shl rcx, 0x20
44689a: or rdx, rcx
44689d: bsf rdx, rdx
4468a1: add rax, rdx
4468a4: sub rax, rdi
4468a7: ret 
4468a8: nop dword ptr [rax + rax]
4468b0: endbr64 
4468b4: mov ecx, edi
4468b6: mov rdx, rdi
4468b9: vpxor xmm0, xmm0, xmm0
4468bd: and ecx, 0x3f
4468c0: cmp ecx, 0x20
4468c3: ja 0x4468f0
4468c5: vpcmpeqb ymm1, ymm0, ymmword ptr [rdi]
4468c9: vpmovmskb eax, ymm1
4468cd: test eax, eax
4468cf: jne 0x4469c0
4468d5: add rdi, 0x20
4468d9: and ecx, 0x1f
4468dc: and rdi, 0xffffffffffffffe0
4468e0: jmp 0x446924
4468e2: nop word ptr cs:[rax + rax]
4468ed: nop dword ptr [rax]
4468f0: and ecx, 0x1f
4468f3: and rdi, 0xffffffffffffffe0
4468f7: vpcmpeqb ymm1, ymm0, ymmword ptr [rdi]
4468fb: vpmovmskb eax, ymm1
4468ff: sar eax, cl
446901: test eax, eax
446903: je 0x446920
446905: tzcnt eax, eax
446909: add rax, rdi
44690c: add rax, rcx
44690f: sub rax, rdx
446912: vzeroupper 
446915: ret 
446916: nop word ptr cs:[rax + rax]
446920: add rdi, 0x20
446924: vpcmpeqb ymm1, ymm0, ymmword ptr [rdi]
446928: vpmovmskb eax, ymm1
44692c: test eax, eax
44692e: jne 0x4469c0
446934: vpcmpeqb ymm1, ymm0, ymmword ptr [rdi + 0x20]
446939: vpmovmskb eax, ymm1
44693d: test eax, eax
44693f: jne 0x4469d0
446945: vpcmpeqb ymm1, ymm0, ymmword ptr [rdi + 0x40]
44694a: vpmovmskb eax, ymm1
44694e: test eax, eax
446950: jne 0x4469f0
446956: vpcmpeqb ymm1, ymm0, ymmword ptr [rdi + 0x60]
44695b: vpmovmskb eax, ymm1
44695f: test eax, eax
446961: jne 0x446a3c
446967: add rdi, 0x80
44696e: mov rcx, rdi
446971: and ecx, 0x7f
446974: and rdi, 0xffffffffffffff80
446978: nop dword ptr [rax + rax]
446980: vmovdqa ymm1, ymmword ptr [rdi]
446984: vmovdqa ymm2, ymmword ptr [rdi + 0x20]
446989: vmovdqa ymm3, ymmword ptr [rdi + 0x40]
44698e: vmovdqa ymm4, ymmword ptr [rdi + 0x60]
446993: vpminub ymm5, ymm2, ymm1
446997: vpminub ymm6, ymm4, ymm3
44699b: vpminub ymm5, ymm6, ymm5
44699f: vpcmpeqb ymm5, ymm0, ymm5
4469a3: vpmovmskb eax, ymm5
4469a7: test eax, eax
4469a9: jne 0x446a10
4469ab: add rdi, 0x80
4469b2: jmp 0x446980
4469b4: nop word ptr cs:[rax + rax]
4469bf: nop 
4469c0: tzcnt eax, eax
4469c4: add rax, rdi
4469c7: sub rax, rdx
4469ca: vzeroupper 
4469cd: ret 
4469ce: nop 
4469d0: tzcnt eax, eax
4469d4: add rax, 0x20
4469d8: add rax, rdi
4469db: sub rax, rdx
4469de: vzeroupper 
4469e1: ret 
4469e2: nop word ptr cs:[rax + rax]
4469ed: nop dword ptr [rax]
4469f0: tzcnt eax, eax
4469f4: add rax, 0x40
4469f8: add rax, rdi
4469fb: sub rax, rdx
4469fe: vzeroupper 
446a01: ret 
446a02: nop word ptr cs:[rax + rax]
446a0d: nop dword ptr [rax]
446a10: vpcmpeqb ymm1, ymm0, ymm1
446a14: vpmovmskb eax, ymm1
446a18: test eax, eax
446a1a: jne 0x4469c0
446a1c: vpcmpeqb ymm2, ymm0, ymm2
446a20: vpmovmskb eax, ymm2
446a24: test eax, eax
446a26: jne 0x4469d0
446a28: vpcmpeqb ymm3, ymm0, ymm3
446a2c: vpmovmskb eax, ymm3
446a30: test eax, eax
446a32: jne 0x4469f0
446a34: vpcmpeqb ymm4, ymm0, ymm4
446a38: vpmovmskb eax, ymm4
446a3c: tzcnt eax, eax
446a40: add rax, 0x60
446a44: add rax, rdi
446a47: sub rax, rdx
446a4a: vzeroupper 
446a4d: ret 
446a4e: nop 
446a50: endbr64 
446a54: test rsi, rsi
446a57: je 0x446cd0
446a5d: mov r8, rsi
446a60: mov ecx, edi
446a62: mov rdx, rdi
446a65: vpxor xmm0, xmm0, xmm0
446a69: and ecx, 0x3f
446a6c: cmp ecx, 0x20
446a6f: ja 0x446ab0
446a71: vpcmpeqb ymm1, ymm0, ymmword ptr [rdi]
446a75: vpmovmskb eax, ymm1
446a79: test eax, eax
446a7b: jne 0x446c40
446a81: sub rsi, 0x20
446a85: jbe 0x446cc0
446a8b: add rdi, 0x20
446a8f: and ecx, 0x1f
446a92: and rdi, 0xffffffffffffffe0
446a96: add rsi, rcx
446a99: sub rsi, 0x80
446aa0: jbe 0x446baf
446aa6: jmp 0x446b01
446aa8: nop dword ptr [rax + rax]
446ab0: and ecx, 0x1f
446ab3: and rdi, 0xffffffffffffffe0
446ab7: vpcmpeqb ymm1, ymm0, ymmword ptr [rdi]
446abb: vpmovmskb eax, ymm1
446abf: sar eax, cl
446ac1: test eax, eax
446ac3: je 0x446ae0
446ac5: tzcnt eax, eax
446ac9: cmp rsi, rax
446acc: jbe 0x446cc0
446ad2: add rax, rdi
446ad5: add rax, rcx
446ad8: sub rax, rdx
446adb: vzeroupper 
446ade: ret 
446adf: nop 
446ae0: neg rcx
446ae3: add rcx, 0x20
446ae7: sub rsi, rcx
446aea: jbe 0x446cc0
446af0: add rdi, 0x20
446af4: sub rsi, 0x80
446afb: jbe 0x446baf
446b01: vpcmpeqb ymm1, ymm0, ymmword ptr [rdi]
446b05: vpmovmskb eax, ymm1
446b09: test eax, eax
446b0b: jne 0x446ce0
446b11: vpcmpeqb ymm1, ymm0, ymmword ptr [rdi + 0x20]
446b16: vpmovmskb eax, ymm1
446b1a: test eax, eax
446b1c: jne 0x446cf0
446b22: vpcmpeqb ymm1, ymm0, ymmword ptr [rdi + 0x40]
446b27: vpmovmskb eax, ymm1
446b2b: test eax, eax
446b2d: jne 0x446d10
446b33: vpcmpeqb ymm1, ymm0, ymmword ptr [rdi + 0x60]
446b38: vpmovmskb eax, ymm1
446b3c: test eax, eax
446b3e: jne 0x446d5c
446b44: add rdi, 0x80
446b4b: sub rsi, 0x80
446b52: jbe 0x446baf
446b54: mov rcx, rdi
446b57: and ecx, 0x7f
446b5a: and rdi, 0xffffffffffffff80
446b5e: add rsi, rcx
446b61: nop word ptr cs:[rax + rax]
446b6c: nop dword ptr [rax]
446b70: vmovdqa ymm1, ymmword ptr [rdi]
446b74: vmovdqa ymm2, ymmword ptr [rdi + 0x20]
446b79: vmovdqa ymm3, ymmword ptr [rdi + 0x40]
446b7e: vmovdqa ymm4, ymmword ptr [rdi + 0x60]
446b83: vpminub ymm5, ymm2, ymm1
446b87: vpminub ymm6, ymm4, ymm3
446b8b: vpminub ymm5, ymm6, ymm5
446b8f: vpcmpeqb ymm5, ymm0, ymm5
446b93: vpmovmskb eax, ymm5
446b97: test eax, eax
446b99: jne 0x446d30
446b9f: add rdi, 0x80
446ba6: sub rsi, 0x80
446bad: ja 0x446b70
446baf: add esi, 0x40
446bb2: jle 0x446c10
446bb4: vpcmpeqb ymm1, ymm0, ymmword ptr [rdi]
446bb8: vpmovmskb eax, ymm1
446bbc: test eax, eax
446bbe: jne 0x446ce0
446bc4: vpcmpeqb ymm1, ymm0, ymmword ptr [rdi + 0x20]
446bc9: vpmovmskb eax, ymm1
446bcd: test eax, eax
446bcf: jne 0x446cf0
446bd5: vpcmpeqb ymm1, ymm0, ymmword ptr [rdi + 0x40]
446bda: vpmovmskb eax, ymm1
446bde: test eax, eax
446be0: jne 0x446c80
446be6: sub esi, 0x20
446be9: jle 0x446cc0
446bef: vpcmpeqb ymm1, ymm0, ymmword ptr [rdi + 0x60]
446bf4: vpmovmskb eax, ymm1
446bf8: test eax, eax
446bfa: jne 0x446ca0
446c00: mov rax, r8
446c03: vzeroupper 
446c06: ret 
446c07: nop word ptr [rax + rax]
446c10: add esi, 0x40
446c13: vpcmpeqb ymm1, ymm0, ymmword ptr [rdi]
446c17: vpmovmskb eax, ymm1
446c1b: test eax, eax
446c1d: jne 0x446c40
446c1f: sub esi, 0x20
446c22: jle 0x446cc0
446c28: vpcmpeqb ymm1, ymm0, ymmword ptr [rdi + 0x20]
446c2d: vpmovmskb eax, ymm1
446c31: test eax, eax
446c33: jne 0x446c60
446c35: mov rax, r8
446c38: vzeroupper 
446c3b: ret 
446c3c: nop dword ptr [rax]
446c40: tzcnt eax, eax
446c44: cmp rsi, rax
446c47: jbe 0x446cc0
446c49: add rax, rdi
446c4c: sub rax, rdx
446c4f: vzeroupper 
446c52: ret 
446c53: nop word ptr cs:[rax + rax]
446c5e: nop 
446c60: tzcnt eax, eax
446c64: cmp rsi, rax
446c67: jbe 0x446cc0
446c69: add rax, 0x20
446c6d: add rax, rdi
446c70: sub rax, rdx
446c73: vzeroupper 
446c76: ret 
446c77: nop word ptr [rax + rax]
446c80: tzcnt eax, eax
446c84: cmp rsi, rax
446c87: jbe 0x446cc0
446c89: add rax, 0x40
446c8d: add rax, rdi
446c90: sub rax, rdx
446c93: vzeroupper 
446c96: ret 
446c97: nop word ptr [rax + rax]
446ca0: tzcnt eax, eax
446ca4: cmp rsi, rax
446ca7: jbe 0x446cc0
446ca9: add rax, 0x60
446cad: add rax, rdi
446cb0: sub rax, rdx
446cb3: vzeroupper 
446cb6: ret 
446cb7: nop word ptr [rax + rax]
446cc0: mov rax, r8
446cc3: vzeroupper 
446cc6: ret 
446cc7: nop word ptr [rax + rax]
446cd0: xor eax, eax
446cd2: ret 
446cd3: nop word ptr cs:[rax + rax]
446cde: nop 
446ce0: tzcnt eax, eax
446ce4: add rax, rdi
446ce7: sub rax, rdx
446cea: vzeroupper 
446ced: ret 
446cee: nop 
446cf0: tzcnt eax, eax
446cf4: add rax, 0x20
446cf8: add rax, rdi
446cfb: sub rax, rdx
446cfe: vzeroupper 
446d01: ret 
446d02: nop word ptr cs:[rax + rax]
446d0d: nop dword ptr [rax]
446d10: tzcnt eax, eax
446d14: add rax, 0x40
446d18: add rax, rdi
446d1b: sub rax, rdx
446d1e: vzeroupper 
446d21: ret 
446d22: nop word ptr cs:[rax + rax]
446d2d: nop dword ptr [rax]
446d30: vpcmpeqb ymm1, ymm0, ymm1
446d34: vpmovmskb eax, ymm1
446d38: test eax, eax
446d3a: jne 0x446ce0
446d3c: vpcmpeqb ymm2, ymm0, ymm2
446d40: vpmovmskb eax, ymm2
446d44: test eax, eax
446d46: jne 0x446cf0
446d48: vpcmpeqb ymm3, ymm0, ymm3
446d4c: vpmovmskb eax, ymm3
446d50: test eax, eax
446d52: jne 0x446d10
446d54: vpcmpeqb ymm4, ymm0, ymm4
446d58: vpmovmskb eax, ymm4
446d5c: tzcnt eax, eax
446d60: add rax, 0x60
446d64: add rax, rdi
446d67: sub rax, rdx
446d6a: vzeroupper 
446d6d: ret 
446d6e: nop 
446d70: endbr64 
446d74: mov rcx, rsi
446d77: mov rax, rdi
446d7a: vpxor xmm0, xmm0, xmm0
446d7e: and ecx, 0x7f
446d81: cmp ecx, 0x40
446d84: jbe 0x446f6b
446d8a: and rsi, 0xffffffffffffffe0
446d8e: and ecx, 0x1f
446d91: vpcmpeqb ymm1, ymm0, ymmword ptr [rsi]
446d95: vpmovmskb edx, ymm1
446d99: shr rdx, cl
446d9c: test edx, edx
446d9e: jne 0x446fa3
446da4: vpcmpeqb ymm2, ymm0, ymmword ptr [rsi + 0x20]
446da9: vpmovmskb edx, ymm2
446dad: test edx, edx
446daf: jne 0x447000
446db5: vmovdqu ymm2, ymmword ptr [rsi + rcx]
446dba: vmovdqu ymmword ptr [rdi], ymm2
446dbe: nop 
446dc0: sub rdi, rcx
446dc3: mov rcx, 0x20
446dca: vmovdqa ymm2, ymmword ptr [rsi + rcx]
446dcf: vmovdqu ymmword ptr [rdi + rcx], ymm2
446dd4: vmovdqa ymm2, ymmword ptr [rsi + rcx + 0x20]
446dda: vpcmpeqb ymm1, ymm0, ymm2
446dde: vpmovmskb edx, ymm1
446de2: add rcx, 0x20
446de6: test edx, edx
446de8: jne 0x446fa0
446dee: vmovdqu ymmword ptr [rdi + rcx], ymm2
446df3: vmovdqa ymm3, ymmword ptr [rsi + rcx + 0x20]
446df9: vpcmpeqb ymm1, ymm0, ymm3
446dfd: vpmovmskb edx, ymm1
446e01: add rcx, 0x20
446e05: test edx, edx
446e07: jne 0x446fa0
446e0d: vmovdqu ymmword ptr [rdi + rcx], ymm3
446e12: vmovdqa ymm4, ymmword ptr [rsi + rcx + 0x20]
446e18: vpcmpeqb ymm1, ymm0, ymm4
446e1c: vpmovmskb edx, ymm1
446e20: add rcx, 0x20
446e24: test edx, edx
446e26: jne 0x446fa0
446e2c: vmovdqu ymmword ptr [rdi + rcx], ymm4
446e31: vmovdqa ymm2, ymmword ptr [rsi + rcx + 0x20]
446e37: vpcmpeqb ymm1, ymm0, ymm2
446e3b: vpmovmskb edx, ymm1
446e3f: add rcx, 0x20
446e43: test edx, edx
446e45: jne 0x446fa0
446e4b: vmovdqu ymmword ptr [rdi + rcx], ymm2
446e50: vmovdqa ymm2, ymmword ptr [rsi + rcx + 0x20]
446e56: vpcmpeqb ymm1, ymm0, ymm2
446e5a: vpmovmskb edx, ymm1
446e5e: add rcx, 0x20
446e62: test edx, edx
446e64: jne 0x446fa0
446e6a: vmovdqa ymm3, ymmword ptr [rsi + rcx + 0x20]
446e70: vmovdqu ymmword ptr [rdi + rcx], ymm2
446e75: vpcmpeqb ymm1, ymm0, ymm3
446e79: vpmovmskb edx, ymm1
446e7d: add rcx, 0x20
446e81: test edx, edx
446e83: jne 0x446fa0
446e89: vmovdqu ymmword ptr [rdi + rcx], ymm3
446e8e: mov rdx, rsi
446e91: lea rsi, [rsi + rcx + 0x20]
446e96: and rsi, 0xffffffffffffff80
446e9a: sub rdx, rsi
446e9d: sub rdi, rdx
446ea0: vmovdqa ymm4, ymmword ptr [rsi]
446ea4: vmovdqa ymm5, ymmword ptr [rsi + 0x20]
446ea9: vmovdqa ymm6, ymmword ptr [rsi + 0x40]
446eae: vmovdqa ymm7, ymmword ptr [rsi + 0x60]
446eb3: vpminub ymm2, ymm4, ymm5
446eb7: vpminub ymm3, ymm6, ymm7
446ebb: vpminub ymm3, ymm3, ymm2
446ebf: vpcmpeqb ymm3, ymm3, ymm1
446ec3: vpmovmskb edx, ymm3
446ec7: test edx, edx
446ec9: jne 0x446f18
446ecb: add rdi, 0x80
446ed2: add rsi, 0x80
446ed9: vmovdqu ymmword ptr [rdi - 0x80], ymm4
446ede: vmovdqa ymm4, ymmword ptr [rsi]
446ee2: vmovdqu ymmword ptr [rdi - 0x60], ymm5
446ee7: vmovdqa ymm5, ymmword ptr [rsi + 0x20]
446eec: vpminub ymm2, ymm4, ymm5
446ef0: vmovdqu ymmword ptr [rdi - 0x40], ymm6
446ef5: vmovdqa ymm6, ymmword ptr [rsi + 0x40]
446efa: vmovdqu ymmword ptr [rdi - 0x20], ymm7
446eff: vmovdqa ymm7, ymmword ptr [rsi + 0x60]
446f04: vpminub ymm3, ymm6, ymm7
446f08: vpminub ymm3, ymm3, ymm2
446f0c: vpcmpeqb ymm3, ymm3, ymm1
446f10: vpmovmskb edx, ymm3
446f14: test edx, edx
446f16: je 0x446ecb
446f18: vpcmpeqb ymm1, ymm0, ymm4
446f1c: vpmovmskb edx, ymm1
446f20: test edx, edx
446f22: jne 0x447010
446f28: vpcmpeqb ymm1, ymm0, ymm5
446f2c: vpmovmskb ecx, ymm1
446f30: test ecx, ecx
446f32: jne 0x447020
446f38: vpcmpeqb ymm1, ymm0, ymm6
446f3c: vpmovmskb edx, ymm1
446f40: test edx, edx
446f42: jne 0x447040
446f48: vpcmpeqb ymm1, ymm0, ymm7
446f4c: vpmovmskb ecx, ymm1
446f50: bsf edx, ecx
446f53: vmovdqu ymmword ptr [rdi], ymm4
446f57: vmovdqu ymmword ptr [rdi + 0x20], ymm5
446f5c: vmovdqu ymmword ptr [rdi + 0x40], ymm6
446f61: add rsi, 0x60
446f65: add rdi, 0x60
446f69: jmp 0x446fa9
446f6b: vmovdqu ymm3, ymmword ptr [rsi]
446f6f: vmovdqu ymm2, ymmword ptr [rsi + 0x20]
446f74: vpcmpeqb ymm1, ymm0, ymm3
446f78: vpmovmskb edx, ymm1
446f7c: test edx, edx
446f7e: jne 0x446fa6
446f80: vmovdqu ymmword ptr [rdi], ymm3
446f84: vpcmpeqb ymm1, ymm0, ymm2
446f88: vpmovmskb edx, ymm1
446f8c: test edx, edx
446f8e: jne 0x446ff0
446f90: and rsi, 0xffffffffffffffe0
446f94: and ecx, 0x1f
446f97: jmp 0x446dc0
446f9c: nop dword ptr [rax]
446fa0: add rdi, rcx
446fa3: add rsi, rcx
446fa6: bsf edx, edx
446fa9: cmp edx, 0x20
446fac: jae 0x4470e0
446fb2: cmp edx, 0x10
446fb5: jae 0x4470c0
446fbb: cmp edx, 8
446fbe: jae 0x4470a0
446fc4: cmp edx, 4
446fc7: jae 0x447090
446fcd: cmp edx, 3
446fd0: je 0x447080
446fd6: cmp edx, 1
446fd9: ja 0x447070
446fdf: je 0x447060
446fe1: mov byte ptr [rdi], 0
446fe4: vzeroupper 
446fe7: ret 
446fe8: nop dword ptr [rax + rax]
446ff0: add rsi, 0x20
446ff4: add rdi, 0x20
446ff8: jmp 0x446fa6
446ffa: nop word ptr [rax + rax]
447000: bsf edx, edx
447003: add rsi, rcx
447006: add edx, 0x20
447009: sub edx, ecx
44700b: jmp 0x446fa9
44700d: nop dword ptr [rax]
447010: bsf edx, edx
447013: jmp 0x446fa9
447015: nop word ptr cs:[rax + rax]
447020: bsf edx, ecx
447023: vmovdqu ymmword ptr [rdi], ymm4
447027: add rsi, 0x20
44702b: add rdi, 0x20
44702f: jmp 0x446fa9
447034: nop word ptr cs:[rax + rax]
44703f: nop 
447040: bsf edx, edx
447043: vmovdqu ymmword ptr [rdi], ymm4
447047: vmovdqu ymmword ptr [rdi + 0x20], ymm5
44704c: add rsi, 0x40
447050: add rdi, 0x40
447054: jmp 0x446fa9
447059: nop dword ptr [rax]
447060: movzx edx, word ptr [rsi]
447063: mov word ptr [rdi], dx
447066: vzeroupper 
447069: ret 
44706a: nop word ptr [rax + rax]
447070: movzx ecx, word ptr [rsi]
447073: mov word ptr [rdi], cx
447076: mov byte ptr [rdi + 2], 0
44707a: vzeroupper 
44707d: ret 
44707e: nop 
447080: mov edx, dword ptr [rsi]
447082: mov dword ptr [rdi], edx
447084: vzeroupper 
447087: ret 
447088: nop dword ptr [rax + rax]
447090: mov ecx, dword ptr [rsi]
447092: mov dword ptr [rdi], ecx
447094: mov ecx, dword ptr [rsi + rdx - 3]
447098: mov dword ptr [rdi + rdx - 3], ecx
44709c: vzeroupper 
44709f: ret 
4470a0: mov rcx, qword ptr [rsi]
4470a3: mov r9, qword ptr [rsi + rdx - 7]
4470a8: mov qword ptr [rdi], rcx
4470ab: mov qword ptr [rdi + rdx - 7], r9
4470b0: vzeroupper 
4470b3: ret 
4470b4: nop word ptr cs:[rax + rax]
4470bf: nop 
4470c0: vmovdqu xmm2, xmmword ptr [rsi]
4470c4: vmovdqu xmm3, xmmword ptr [rsi + rdx - 0xf]
4470ca: vmovdqu xmmword ptr [rdi], xmm2
4470ce: vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3
4470d4: vzeroupper 
4470d7: ret 
4470d8: nop dword ptr [rax + rax]
4470e0: vmovdqu ymm2, ymmword ptr [rsi]
4470e4: vmovdqu ymm3, ymmword ptr [rsi + rdx - 0x1f]
4470ea: vmovdqu ymmword ptr [rdi], ymm2
4470ee: vmovdqu ymmword ptr [rdi + rdx - 0x1f], ymm3
4470f4: vzeroupper 
4470f7: ret 
4470f8: nop dword ptr [rax + rax]
447100: endbr64 
447104: mov rcx, rsi
447107: and ecx, 7
44710a: mov rdx, rdi
44710d: je 0x44712a
44710f: neg ecx
447111: add ecx, 8
447114: mov al, byte ptr [rsi]
447116: test al, al
447118: mov byte ptr [rdx], al
44711a: je 0x4471e8
447120: inc rsi
447123: inc rdx
447126: dec ecx
447128: jne 0x447114
44712a: movabs r8, 0xfefefefefefefeff
447134: nop word ptr cs:[rax + rax]
44713f: nop 
447140: mov rax, qword ptr [rsi]
447143: add rsi, 8
447147: mov r9, rax
44714a: add r9, r8
44714d: jae 0x4471d0
447153: xor r9, rax
447156: or r9, r8
447159: inc r9
44715c: jne 0x4471d0
44715e: mov qword ptr [rdx], rax
447161: add rdx, 8
447165: mov rax, qword ptr [rsi]
447168: add rsi, 8
44716c: mov r9, rax
44716f: add r9, r8
447172: jae 0x4471d0
447174: xor r9, rax
447177: or r9, r8
44717a: inc r9
44717d: jne 0x4471d0
44717f: mov qword ptr [rdx], rax
447182: add rdx, 8
447186: mov rax, qword ptr [rsi]
447189: add rsi, 8
44718d: mov r9, rax
447190: add r9, r8
447193: jae 0x4471d0
447195: xor r9, rax
447198: or r9, r8
44719b: inc r9
44719e: jne 0x4471d0
4471a0: mov qword ptr [rdx], rax
4471a3: add rdx, 8
4471a7: mov rax, qword ptr [rsi]
4471aa: add rsi, 8
4471ae: mov r9, rax
4471b1: add r9, r8
4471b4: jae 0x4471d0
4471b6: xor r9, rax
4471b9: or r9, r8
4471bc: inc r9
4471bf: jne 0x4471d0
4471c1: mov qword ptr [rdx], rax
4471c4: add rdx, 8
4471c8: jmp 0x447140
4471cd: nop dword ptr [rax]
4471d0: mov byte ptr [rdx], al
4471d2: test al, al
4471d4: je 0x4471e8
4471d6: inc rdx
4471d9: mov byte ptr [rdx], ah
4471db: test ah, ah
4471dd: je 0x4471e8
4471df: inc rdx
4471e2: shr rax, 0x10
4471e6: jmp 0x4471d0
4471e8: mov rax, rdi
4471eb: ret 
4471ec: nop dword ptr [rax]
4471f0: endbr64 
4471f4: mov rcx, rsi
4471f7: and ecx, 7
4471fa: mov rdx, rdi
4471fd: je 0x44721a
4471ff: neg ecx
447201: add ecx, 8
447204: mov al, byte ptr [rsi]
447206: test al, al
447208: mov byte ptr [rdx], al
44720a: je 0x4472d8
447210: inc rsi
447213: inc rdx
447216: dec ecx
447218: jne 0x447204
44721a: movabs r8, 0xfefefefefefefeff
447224: nop word ptr cs:[rax + rax]
44722f: nop 
447230: mov rax, qword ptr [rsi]
447233: add rsi, 8
447237: mov r9, rax
44723a: add r9, r8
44723d: jae 0x4472c0
447243: xor r9, rax
447246: or r9, r8
447249: inc r9
44724c: jne 0x4472c0
44724e: mov qword ptr [rdx], rax
447251: add rdx, 8
447255: mov rax, qword ptr [rsi]
447258: add rsi, 8
44725c: mov r9, rax
44725f: add r9, r8
447262: jae 0x4472c0
447264: xor r9, rax
447267: or r9, r8
44726a: inc r9
44726d: jne 0x4472c0
44726f: mov qword ptr [rdx], rax
447272: add rdx, 8
447276: mov rax, qword ptr [rsi]
447279: add rsi, 8
44727d: mov r9, rax
447280: add r9, r8
447283: jae 0x4472c0
447285: xor r9, rax
447288: or r9, r8
44728b: inc r9
44728e: jne 0x4472c0
447290: mov qword ptr [rdx], rax
447293: add rdx, 8
447297: mov rax, qword ptr [rsi]
44729a: add rsi, 8
44729e: mov r9, rax
4472a1: add r9, r8
4472a4: jae 0x4472c0
4472a6: xor r9, rax
4472a9: or r9, r8
4472ac: inc r9
4472af: jne 0x4472c0
4472b1: mov qword ptr [rdx], rax
4472b4: add rdx, 8
4472b8: jmp 0x447230
4472bd: nop dword ptr [rax]
4472c0: mov byte ptr [rdx], al
4472c2: test al, al
4472c4: je 0x4472d8
4472c6: inc rdx
4472c9: mov byte ptr [rdx], ah
4472cb: test ah, ah
4472cd: je 0x4472d8
4472cf: inc rdx
4472d2: shr rax, 0x10
4472d6: jmp 0x4472c0
4472d8: mov rax, rdx
4472db: ret 
4472dc: nop dword ptr [rax]
4472e0: endbr64 
4472e4: mov rcx, rsi
4472e7: mov rdx, rdi
4472ea: cmp byte ptr [rcx], 0
4472ed: je 0x448980
4472f3: cmp byte ptr [rcx + 1], 0
4472f7: je 0x448990
4472fd: cmp byte ptr [rcx + 2], 0
447301: je 0x4489a0
447307: cmp byte ptr [rcx + 3], 0
44730b: je 0x4489b0
447311: cmp byte ptr [rcx + 4], 0
447315: je 0x4489c0
44731b: cmp byte ptr [rcx + 5], 0
44731f: je 0x4489d0
447325: cmp byte ptr [rcx + 6], 0
447329: je 0x4489e0
44732f: cmp byte ptr [rcx + 7], 0
447333: je 0x448910
447339: cmp byte ptr [rcx + 8], 0
44733d: je 0x4489f0
447343: cmp byte ptr [rcx + 9], 0
447347: je 0x448a00
44734d: cmp byte ptr [rcx + 0xa], 0
447351: je 0x448a10
447357: cmp byte ptr [rcx + 0xb], 0
44735b: je 0x448a20
447361: cmp byte ptr [rcx + 0xc], 0
447365: je 0x448a30
44736b: cmp byte ptr [rcx + 0xd], 0
44736f: je 0x448a50
447375: cmp byte ptr [rcx + 0xe], 0
447379: je 0x448a70
44737f: cmp byte ptr [rcx + 0xf], 0
447383: je 0x448960
447389: lea rsi, [rcx + 0x10]
44738d: and rsi, 0xfffffffffffffff0
447391: pxor xmm0, xmm0
447395: mov r9, qword ptr [rcx]
447398: mov qword ptr [rdx], r9
44739b: pcmpeqb xmm0, xmmword ptr [rsi]
44739f: mov r9, qword ptr [rcx + 8]
4473a3: mov qword ptr [rdx + 8], r9
4473a7: pmovmskb eax, xmm0
4473ab: sub rsi, rcx
4473ae: test rax, rax
4473b1: jne 0x4488c0
4473b7: mov rax, rdx
4473ba: lea rdx, [rdx + 0x10]
4473be: and rdx, 0xfffffffffffffff0
4473c2: sub rax, rdx
4473c5: sub rcx, rax
4473c8: mov rax, rcx
4473cb: and rax, 0xf
4473cf: mov rsi, 0
4473d6: je 0x44746a
4473dc: cmp rax, 8
4473e0: jae 0x447423
4473e2: cmp rax, 1
4473e6: je 0x4475e0
4473ec: cmp rax, 2
4473f0: je 0x447720
4473f6: cmp rax, 3
4473fa: je 0x447860
447400: cmp rax, 4
447404: je 0x4479a0
44740a: cmp rax, 5
44740e: je 0x447ae0
447414: cmp rax, 6
447418: je 0x447c20
44741e: jmp 0x447d70
447423: je 0x447ec0
447429: cmp rax, 9
44742d: je 0x448000
447433: cmp rax, 0xa
447437: je 0x448140
44743d: cmp rax, 0xb
447441: je 0x448280
447447: cmp rax, 0xc
44744b: je 0x4483c0
447451: cmp rax, 0xd
447455: je 0x448500
44745b: cmp rax, 0xe
44745f: je 0x448640
447465: jmp 0x448780
44746a: movaps xmm1, xmmword ptr [rcx]
44746d: movaps xmm2, xmmword ptr [rcx + 0x10]
447471: movaps xmmword ptr [rdx], xmm1
447474: pcmpeqb xmm0, xmm2
447478: pmovmskb eax, xmm0
44747c: lea rsi, [rsi + 0x10]
447480: test rax, rax
447483: jne 0x4488c0
447489: movaps xmm3, xmmword ptr [rcx + rsi + 0x10]
44748e: movaps xmmword ptr [rdx + rsi], xmm2
447492: pcmpeqb xmm0, xmm3
447496: pmovmskb eax, xmm0
44749a: lea rsi, [rsi + 0x10]
44749e: test rax, rax
4474a1: jne 0x4488c0
4474a7: movaps xmm4, xmmword ptr [rcx + rsi + 0x10]
4474ac: movaps xmmword ptr [rdx + rsi], xmm3
4474b0: pcmpeqb xmm0, xmm4
4474b4: pmovmskb eax, xmm0
4474b8: lea rsi, [rsi + 0x10]
4474bc: test rax, rax
4474bf: jne 0x4488c0
4474c5: movaps xmm1, xmmword ptr [rcx + rsi + 0x10]
4474ca: movaps xmmword ptr [rdx + rsi], xmm4
4474ce: pcmpeqb xmm0, xmm1
4474d2: pmovmskb eax, xmm0
4474d6: lea rsi, [rsi + 0x10]
4474da: test rax, rax
4474dd: jne 0x4488c0
4474e3: movaps xmm2, xmmword ptr [rcx + rsi + 0x10]
4474e8: movaps xmmword ptr [rdx + rsi], xmm1
4474ec: pcmpeqb xmm0, xmm2
4474f0: pmovmskb eax, xmm0
4474f4: lea rsi, [rsi + 0x10]
4474f8: test rax, rax
4474fb: jne 0x4488c0
447501: movaps xmm3, xmmword ptr [rcx + rsi + 0x10]
447506: movaps xmmword ptr [rdx + rsi], xmm2
44750a: pcmpeqb xmm0, xmm3
44750e: pmovmskb eax, xmm0
447512: lea rsi, [rsi + 0x10]
447516: test rax, rax
447519: jne 0x4488c0
44751f: movaps xmmword ptr [rdx + rsi], xmm3
447523: mov rax, rcx
447526: lea rcx, [rcx + rsi + 0x10]
44752b: and rcx, 0xffffffffffffffc0
44752f: sub rax, rcx
447532: sub rdx, rax
447535: mov rsi, 0xffffffffffffffc0
44753c: nop dword ptr [rax]
447540: movaps xmm2, xmmword ptr [rcx]
447543: movaps xmm4, xmm2
447546: movaps xmm5, xmmword ptr [rcx + 0x10]
44754a: movaps xmm3, xmmword ptr [rcx + 0x20]
44754e: movaps xmm6, xmm3
447551: movaps xmm7, xmmword ptr [rcx + 0x30]
447555: pminub xmm2, xmm5
447559: pminub xmm3, xmm7
44755d: pminub xmm3, xmm2
447561: pcmpeqb xmm3, xmm0
447565: pmovmskb eax, xmm3
447569: lea rdx, [rdx + 0x40]
44756d: lea rcx, [rcx + 0x40]
447571: test rax, rax
447574: jne 0x447588
447576: movaps xmmword ptr [rdx - 0x40], xmm4
44757a: movaps xmmword ptr [rdx - 0x30], xmm5
44757e: movaps xmmword ptr [rdx - 0x20], xmm6
447582: movaps xmmword ptr [rdx - 0x10], xmm7
447586: jmp 0x447540
447588: pcmpeqb xmm0, xmm4
44758c: pmovmskb eax, xmm0
447590: test rax, rax
447593: jne 0x4488c0
447599: pcmpeqb xmm0, xmm5
44759d: pmovmskb eax, xmm0
4475a1: movaps xmmword ptr [rdx - 0x40], xmm4
4475a5: test rax, rax
4475a8: lea rsi, [rsi + 0x10]
4475ac: jne 0x4488c0
4475b2: pcmpeqb xmm0, xmm6
4475b6: pmovmskb eax, xmm0
4475ba: movaps xmmword ptr [rdx - 0x30], xmm5
4475be: test rax, rax
4475c1: lea rsi, [rsi + 0x10]
4475c5: jne 0x4488c0
4475cb: movaps xmmword ptr [rdx - 0x20], xmm6
4475cf: pcmpeqb xmm0, xmm7
4475d3: pmovmskb eax, xmm0
4475d7: lea rsi, [rsi + 0x10]
4475db: jmp 0x4488c0
4475e0: movaps xmm1, xmmword ptr [rcx - 1]
4475e4: movaps xmm2, xmmword ptr [rcx + 0xf]
4475e8: pcmpeqb xmm0, xmm2
4475ec: pmovmskb eax, xmm0
4475f0: movaps xmm3, xmm2
4475f3: test rax, rax
4475f6: jne 0x44770a
4475fc: palignr xmm2, xmm1, 1
447602: movaps xmmword ptr [rdx], xmm2
447605: movaps xmm2, xmmword ptr [rcx + 0x1f]
447609: pcmpeqb xmm0, xmm2
44760d: lea rdx, [rdx + 0x10]
447611: pmovmskb eax, xmm0
447615: lea rcx, [rcx + 0x10]
447619: movaps xmm1, xmm2
44761c: test rax, rax
44761f: jne 0x44770a
447625: palignr xmm2, xmm3, 1
44762b: movaps xmmword ptr [rdx], xmm2
44762e: movaps xmm2, xmmword ptr [rcx + 0x1f]
447632: pcmpeqb xmm0, xmm2
447636: lea rdx, [rdx + 0x10]
44763a: pmovmskb eax, xmm0
44763e: lea rcx, [rcx + 0x10]
447642: movaps xmm3, xmm2
447645: test rax, rax
447648: jne 0x44770a
44764e: palignr xmm2, xmm1, 1
447654: movaps xmmword ptr [rdx], xmm2
447657: movaps xmm2, xmmword ptr [rcx + 0x1f]
44765b: pcmpeqb xmm0, xmm2
44765f: lea rdx, [rdx + 0x10]
447663: pmovmskb eax, xmm0
447667: lea rcx, [rcx + 0x10]
44766b: test rax, rax
44766e: jne 0x44770a
447674: palignr xmm2, xmm3, 1
44767a: movaps xmmword ptr [rdx], xmm2
44767d: lea rcx, [rcx + 0x1f]
447681: lea rdx, [rdx + 0x10]
447685: mov rax, rcx
447688: and rcx, 0xffffffffffffffc0
44768c: sub rax, rcx
44768f: lea rcx, [rcx - 0xf]
447693: sub rdx, rax
447696: movaps xmm1, xmmword ptr [rcx - 1]
44769a: nop word ptr [rax + rax]
4476a0: movaps xmm2, xmmword ptr [rcx + 0xf]
4476a4: movaps xmm3, xmmword ptr [rcx + 0x1f]
4476a8: movaps xmm6, xmm3
4476ab: movaps xmm4, xmmword ptr [rcx + 0x2f]
4476af: movaps xmm7, xmm4
4476b2: movaps xmm5, xmmword ptr [rcx + 0x3f]
4476b6: pminub xmm6, xmm2
4476ba: pminub xmm7, xmm5
4476be: pminub xmm7, xmm6
4476c2: pcmpeqb xmm7, xmm0
4476c6: pmovmskb eax, xmm7
4476ca: movaps xmm7, xmm5
4476cd: palignr xmm5, xmm4, 1
4476d3: test rax, rax
4476d6: palignr xmm4, xmm3, 1
4476dc: jne 0x4475e8
4476e2: palignr xmm3, xmm2, 1
4476e8: lea rcx, [rcx + 0x40]
4476ec: palignr xmm2, xmm1, 1
4476f2: movaps xmm1, xmm7
4476f5: movaps xmmword ptr [rdx + 0x30], xmm5
4476f9: movaps xmmword ptr [rdx + 0x20], xmm4
4476fd: movaps xmmword ptr [rdx + 0x10], xmm3
447701: movaps xmmword ptr [rdx], xmm2
447704: lea rdx, [rdx + 0x40]
447708: jmp 0x4476a0
44770a: movdqu xmm1, xmmword ptr [rcx - 1]
44770f: mov rsi, 0xf
447716: movdqu xmmword ptr [rdx - 1], xmm1
44771b: jmp 0x4488c0
447720: movaps xmm1, xmmword ptr [rcx - 2]
447724: movaps xmm2, xmmword ptr [rcx + 0xe]
447728: pcmpeqb xmm0, xmm2
44772c: pmovmskb eax, xmm0
447730: movaps xmm3, xmm2
447733: test rax, rax
447736: jne 0x44784a
44773c: palignr xmm2, xmm1, 2
447742: movaps xmmword ptr [rdx], xmm2
447745: movaps xmm2, xmmword ptr [rcx + 0x1e]
447749: pcmpeqb xmm0, xmm2
44774d: lea rdx, [rdx + 0x10]
447751: pmovmskb eax, xmm0
447755: lea rcx, [rcx + 0x10]
447759: movaps xmm1, xmm2
44775c: test rax, rax
44775f: jne 0x44784a
447765: palignr xmm2, xmm3, 2
44776b: movaps xmmword ptr [rdx], xmm2
44776e: movaps xmm2, xmmword ptr [rcx + 0x1e]
447772: pcmpeqb xmm0, xmm2
447776: lea rdx, [rdx + 0x10]
44777a: pmovmskb eax, xmm0
44777e: lea rcx, [rcx + 0x10]
447782: movaps xmm3, xmm2
447785: test rax, rax
447788: jne 0x44784a
44778e: palignr xmm2, xmm1, 2
447794: movaps xmmword ptr [rdx], xmm2
447797: movaps xmm2, xmmword ptr [rcx + 0x1e]
44779b: pcmpeqb xmm0, xmm2
44779f: lea rdx, [rdx + 0x10]
4477a3: pmovmskb eax, xmm0
4477a7: lea rcx, [rcx + 0x10]
4477ab: test rax, rax
4477ae: jne 0x44784a
4477b4: palignr xmm2, xmm3, 2
4477ba: movaps xmmword ptr [rdx], xmm2
4477bd: lea rcx, [rcx + 0x1e]
4477c1: lea rdx, [rdx + 0x10]
4477c5: mov rax, rcx
4477c8: and rcx, 0xffffffffffffffc0
4477cc: sub rax, rcx
4477cf: lea rcx, [rcx - 0xe]
4477d3: sub rdx, rax
4477d6: movaps xmm1, xmmword ptr [rcx - 2]
4477da: nop word ptr [rax + rax]
4477e0: movaps xmm2, xmmword ptr [rcx + 0xe]
4477e4: movaps xmm3, xmmword ptr [rcx + 0x1e]
4477e8: movaps xmm6, xmm3
4477eb: movaps xmm4, xmmword ptr [rcx + 0x2e]
4477ef: movaps xmm7, xmm4
4477f2: movaps xmm5, xmmword ptr [rcx + 0x3e]
4477f6: pminub xmm6, xmm2
4477fa: pminub xmm7, xmm5
4477fe: pminub xmm7, xmm6
447802: pcmpeqb xmm7, xmm0
447806: pmovmskb eax, xmm7
44780a: movaps xmm7, xmm5
44780d: palignr xmm5, xmm4, 2
447813: test rax, rax
447816: palignr xmm4, xmm3, 2
44781c: jne 0x447728
447822: palignr xmm3, xmm2, 2
447828: lea rcx, [rcx + 0x40]
44782c: palignr xmm2, xmm1, 2
447832: movaps xmm1, xmm7
447835: movaps xmmword ptr [rdx + 0x30], xmm5
447839: movaps xmmword ptr [rdx + 0x20], xmm4
44783d: movaps xmmword ptr [rdx + 0x10], xmm3
447841: movaps xmmword ptr [rdx], xmm2
447844: lea rdx, [rdx + 0x40]
447848: jmp 0x4477e0
44784a: movdqu xmm1, xmmword ptr [rcx - 2]
44784f: mov rsi, 0xe
447856: movdqu xmmword ptr [rdx - 2], xmm1
44785b: jmp 0x4488c0
447860: movaps xmm1, xmmword ptr [rcx - 3]
447864: movaps xmm2, xmmword ptr [rcx + 0xd]
447868: pcmpeqb xmm0, xmm2
44786c: pmovmskb eax, xmm0
447870: movaps xmm3, xmm2
447873: test rax, rax
447876: jne 0x44798a
44787c: palignr xmm2, xmm1, 3
447882: movaps xmmword ptr [rdx], xmm2
447885: movaps xmm2, xmmword ptr [rcx + 0x1d]
447889: pcmpeqb xmm0, xmm2
44788d: lea rdx, [rdx + 0x10]
447891: pmovmskb eax, xmm0
447895: lea rcx, [rcx + 0x10]
447899: movaps xmm1, xmm2
44789c: test rax, rax
44789f: jne 0x44798a
4478a5: palignr xmm2, xmm3, 3
4478ab: movaps xmmword ptr [rdx], xmm2
4478ae: movaps xmm2, xmmword ptr [rcx + 0x1d]
4478b2: pcmpeqb xmm0, xmm2
4478b6: lea rdx, [rdx + 0x10]
4478ba: pmovmskb eax, xmm0
4478be: lea rcx, [rcx + 0x10]
4478c2: movaps xmm3, xmm2
4478c5: test rax, rax
4478c8: jne 0x44798a
4478ce: palignr xmm2, xmm1, 3
4478d4: movaps xmmword ptr [rdx], xmm2
4478d7: movaps xmm2, xmmword ptr [rcx + 0x1d]
4478db: pcmpeqb xmm0, xmm2
4478df: lea rdx, [rdx + 0x10]
4478e3: pmovmskb eax, xmm0
4478e7: lea rcx, [rcx + 0x10]
4478eb: test rax, rax
4478ee: jne 0x44798a
4478f4: palignr xmm2, xmm3, 3
4478fa: movaps xmmword ptr [rdx], xmm2
4478fd: lea rcx, [rcx + 0x1d]
447901: lea rdx, [rdx + 0x10]
447905: mov rax, rcx
447908: and rcx, 0xffffffffffffffc0
44790c: sub rax, rcx
44790f: lea rcx, [rcx - 0xd]
447913: sub rdx, rax
447916: movaps xmm1, xmmword ptr [rcx - 3]
44791a: nop word ptr [rax + rax]
447920: movaps xmm2, xmmword ptr [rcx + 0xd]
447924: movaps xmm3, xmmword ptr [rcx + 0x1d]
447928: movaps xmm6, xmm3
44792b: movaps xmm4, xmmword ptr [rcx + 0x2d]
44792f: movaps xmm7, xmm4
447932: movaps xmm5, xmmword ptr [rcx + 0x3d]
447936: pminub xmm6, xmm2
44793a: pminub xmm7, xmm5
44793e: pminub xmm7, xmm6
447942: pcmpeqb xmm7, xmm0
447946: pmovmskb eax, xmm7
44794a: movaps xmm7, xmm5
44794d: palignr xmm5, xmm4, 3
447953: test rax, rax
447956: palignr xmm4, xmm3, 3
44795c: jne 0x447868
447962: palignr xmm3, xmm2, 3
447968: lea rcx, [rcx + 0x40]
44796c: palignr xmm2, xmm1, 3
447972: movaps xmm1, xmm7
447975: movaps xmmword ptr [rdx + 0x30], xmm5
447979: movaps xmmword ptr [rdx + 0x20], xmm4
44797d: movaps xmmword ptr [rdx + 0x10], xmm3
447981: movaps xmmword ptr [rdx], xmm2
447984: lea rdx, [rdx + 0x40]
447988: jmp 0x447920
44798a: movdqu xmm1, xmmword ptr [rcx - 3]
44798f: mov rsi, 0xd
447996: movdqu xmmword ptr [rdx - 3], xmm1
44799b: jmp 0x4488c0
4479a0: movaps xmm1, xmmword ptr [rcx - 4]
4479a4: movaps xmm2, xmmword ptr [rcx + 0xc]
4479a8: pcmpeqb xmm0, xmm2
4479ac: pmovmskb eax, xmm0
4479b0: movaps xmm3, xmm2
4479b3: test rax, rax
4479b6: jne 0x447aca
4479bc: palignr xmm2, xmm1, 4
4479c2: movaps xmmword ptr [rdx], xmm2
4479c5: movaps xmm2, xmmword ptr [rcx + 0x1c]
4479c9: pcmpeqb xmm0, xmm2
4479cd: lea rdx, [rdx + 0x10]
4479d1: pmovmskb eax, xmm0
4479d5: lea rcx, [rcx + 0x10]
4479d9: movaps xmm1, xmm2
4479dc: test rax, rax
4479df: jne 0x447aca
4479e5: palignr xmm2, xmm3, 4
4479eb: movaps xmmword ptr [rdx], xmm2
4479ee: movaps xmm2, xmmword ptr [rcx + 0x1c]
4479f2: pcmpeqb xmm0, xmm2
4479f6: lea rdx, [rdx + 0x10]
4479fa: pmovmskb eax, xmm0
4479fe: lea rcx, [rcx + 0x10]
447a02: movaps xmm3, xmm2
447a05: test rax, rax
447a08: jne 0x447aca
447a0e: palignr xmm2, xmm1, 4
447a14: movaps xmmword ptr [rdx], xmm2
447a17: movaps xmm2, xmmword ptr [rcx + 0x1c]
447a1b: pcmpeqb xmm0, xmm2
447a1f: lea rdx, [rdx + 0x10]
447a23: pmovmskb eax, xmm0
447a27: lea rcx, [rcx + 0x10]
447a2b: test rax, rax
447a2e: jne 0x447aca
447a34: palignr xmm2, xmm3, 4
447a3a: movaps xmmword ptr [rdx], xmm2
447a3d: lea rcx, [rcx + 0x1c]
447a41: lea rdx, [rdx + 0x10]
447a45: mov rax, rcx
447a48: and rcx, 0xffffffffffffffc0
447a4c: sub rax, rcx
447a4f: lea rcx, [rcx - 0xc]
447a53: sub rdx, rax
447a56: movaps xmm1, xmmword ptr [rcx - 4]
447a5a: nop word ptr [rax + rax]
447a60: movaps xmm2, xmmword ptr [rcx + 0xc]
447a64: movaps xmm3, xmmword ptr [rcx + 0x1c]
447a68: movaps xmm6, xmm3
447a6b: movaps xmm4, xmmword ptr [rcx + 0x2c]
447a6f: movaps xmm7, xmm4
447a72: movaps xmm5, xmmword ptr [rcx + 0x3c]
447a76: pminub xmm6, xmm2
447a7a: pminub xmm7, xmm5
447a7e: pminub xmm7, xmm6
447a82: pcmpeqb xmm7, xmm0
447a86: pmovmskb eax, xmm7
447a8a: movaps xmm7, xmm5
447a8d: palignr xmm5, xmm4, 4
447a93: test rax, rax
447a96: palignr xmm4, xmm3, 4
447a9c: jne 0x4479a8
447aa2: palignr xmm3, xmm2, 4
447aa8: lea rcx, [rcx + 0x40]
447aac: palignr xmm2, xmm1, 4
447ab2: movaps xmm1, xmm7
447ab5: movaps xmmword ptr [rdx + 0x30], xmm5
447ab9: movaps xmmword ptr [rdx + 0x20], xmm4
447abd: movaps xmmword ptr [rdx + 0x10], xmm3
447ac1: movaps xmmword ptr [rdx], xmm2
447ac4: lea rdx, [rdx + 0x40]
447ac8: jmp 0x447a60
447aca: movdqu xmm1, xmmword ptr [rcx - 4]
447acf: mov rsi, 0xc
447ad6: movdqu xmmword ptr [rdx - 4], xmm1
447adb: jmp 0x4488c0
447ae0: movaps xmm1, xmmword ptr [rcx - 5]
447ae4: movaps xmm2, xmmword ptr [rcx + 0xb]
447ae8: pcmpeqb xmm0, xmm2
447aec: pmovmskb eax, xmm0
447af0: movaps xmm3, xmm2
447af3: test rax, rax
447af6: jne 0x447c0a
447afc: palignr xmm2, xmm1, 5
447b02: movaps xmmword ptr [rdx], xmm2
447b05: movaps xmm2, xmmword ptr [rcx + 0x1b]
447b09: pcmpeqb xmm0, xmm2
447b0d: lea rdx, [rdx + 0x10]
447b11: pmovmskb eax, xmm0
447b15: lea rcx, [rcx + 0x10]
447b19: movaps xmm1, xmm2
447b1c: test rax, rax
447b1f: jne 0x447c0a
447b25: palignr xmm2, xmm3, 5
447b2b: movaps xmmword ptr [rdx], xmm2
447b2e: movaps xmm2, xmmword ptr [rcx + 0x1b]
447b32: pcmpeqb xmm0, xmm2
447b36: lea rdx, [rdx + 0x10]
447b3a: pmovmskb eax, xmm0
447b3e: lea rcx, [rcx + 0x10]
447b42: movaps xmm3, xmm2
447b45: test rax, rax
447b48: jne 0x447c0a
447b4e: palignr xmm2, xmm1, 5
447b54: movaps xmmword ptr [rdx], xmm2
447b57: movaps xmm2, xmmword ptr [rcx + 0x1b]
447b5b: pcmpeqb xmm0, xmm2
447b5f: lea rdx, [rdx + 0x10]
447b63: pmovmskb eax, xmm0
447b67: lea rcx, [rcx + 0x10]
447b6b: test rax, rax
447b6e: jne 0x447c0a
447b74: palignr xmm2, xmm3, 5
447b7a: movaps xmmword ptr [rdx], xmm2
447b7d: lea rcx, [rcx + 0x1b]
447b81: lea rdx, [rdx + 0x10]
447b85: mov rax, rcx
447b88: and rcx, 0xffffffffffffffc0
447b8c: sub rax, rcx
447b8f: lea rcx, [rcx - 0xb]
447b93: sub rdx, rax
447b96: movaps xmm1, xmmword ptr [rcx - 5]
447b9a: nop word ptr [rax + rax]
447ba0: movaps xmm2, xmmword ptr [rcx + 0xb]
447ba4: movaps xmm3, xmmword ptr [rcx + 0x1b]
447ba8: movaps xmm6, xmm3
447bab: movaps xmm4, xmmword ptr [rcx + 0x2b]
447baf: movaps xmm7, xmm4
447bb2: movaps xmm5, xmmword ptr [rcx + 0x3b]
447bb6: pminub xmm6, xmm2
447bba: pminub xmm7, xmm5
447bbe: pminub xmm7, xmm6
447bc2: pcmpeqb xmm7, xmm0
447bc6: pmovmskb eax, xmm7
447bca: movaps xmm7, xmm5
447bcd: palignr xmm5, xmm4, 5
447bd3: test rax, rax
447bd6: palignr xmm4, xmm3, 5
447bdc: jne 0x447ae8
447be2: palignr xmm3, xmm2, 5
447be8: lea rcx, [rcx + 0x40]
447bec: palignr xmm2, xmm1, 5
447bf2: movaps xmm1, xmm7
447bf5: movaps xmmword ptr [rdx + 0x30], xmm5
447bf9: movaps xmmword ptr [rdx + 0x20], xmm4
447bfd: movaps xmmword ptr [rdx + 0x10], xmm3
447c01: movaps xmmword ptr [rdx], xmm2
447c04: lea rdx, [rdx + 0x40]
447c08: jmp 0x447ba0
447c0a: movdqu xmm1, xmmword ptr [rcx - 5]
447c0f: mov rsi, 0xb
447c16: movdqu xmmword ptr [rdx - 5], xmm1
447c1b: jmp 0x4488c0
447c20: movaps xmm1, xmmword ptr [rcx - 6]
447c24: movaps xmm2, xmmword ptr [rcx + 0xa]
447c28: pcmpeqb xmm0, xmm2
447c2c: pmovmskb eax, xmm0
447c30: movaps xmm3, xmm2
447c33: test rax, rax
447c36: jne 0x447d4a
447c3c: palignr xmm2, xmm1, 6
447c42: movaps xmmword ptr [rdx], xmm2
447c45: movaps xmm2, xmmword ptr [rcx + 0x1a]
447c49: pcmpeqb xmm0, xmm2
447c4d: lea rdx, [rdx + 0x10]
447c51: pmovmskb eax, xmm0
447c55: lea rcx, [rcx + 0x10]
447c59: movaps xmm1, xmm2
447c5c: test rax, rax
447c5f: jne 0x447d4a
447c65: palignr xmm2, xmm3, 6
447c6b: movaps xmmword ptr [rdx], xmm2
447c6e: movaps xmm2, xmmword ptr [rcx + 0x1a]
447c72: pcmpeqb xmm0, xmm2
447c76: lea rdx, [rdx + 0x10]
447c7a: pmovmskb eax, xmm0
447c7e: lea rcx, [rcx + 0x10]
447c82: movaps xmm3, xmm2
447c85: test rax, rax
447c88: jne 0x447d4a
447c8e: palignr xmm2, xmm1, 6
447c94: movaps xmmword ptr [rdx], xmm2
447c97: movaps xmm2, xmmword ptr [rcx + 0x1a]
447c9b: pcmpeqb xmm0, xmm2
447c9f: lea rdx, [rdx + 0x10]
447ca3: pmovmskb eax, xmm0
447ca7: lea rcx, [rcx + 0x10]
447cab: test rax, rax
447cae: jne 0x447d4a
447cb4: palignr xmm2, xmm3, 6
447cba: movaps xmmword ptr [rdx], xmm2
447cbd: lea rcx, [rcx + 0x1a]
447cc1: lea rdx, [rdx + 0x10]
447cc5: mov rax, rcx
447cc8: and rcx, 0xffffffffffffffc0
447ccc: sub rax, rcx
447ccf: lea rcx, [rcx - 0xa]
447cd3: sub rdx, rax
447cd6: movaps xmm1, xmmword ptr [rcx - 6]
447cda: nop word ptr [rax + rax]
447ce0: movaps xmm2, xmmword ptr [rcx + 0xa]
447ce4: movaps xmm3, xmmword ptr [rcx + 0x1a]
447ce8: movaps xmm6, xmm3
447ceb: movaps xmm4, xmmword ptr [rcx + 0x2a]
447cef: movaps xmm7, xmm4
447cf2: movaps xmm5, xmmword ptr [rcx + 0x3a]
447cf6: pminub xmm6, xmm2
447cfa: pminub xmm7, xmm5
447cfe: pminub xmm7, xmm6
447d02: pcmpeqb xmm7, xmm0
447d06: pmovmskb eax, xmm7
447d0a: movaps xmm7, xmm5
447d0d: palignr xmm5, xmm4, 6
447d13: test rax, rax
447d16: palignr xmm4, xmm3, 6
447d1c: jne 0x447c28
447d22: palignr xmm3, xmm2, 6
447d28: lea rcx, [rcx + 0x40]
447d2c: palignr xmm2, xmm1, 6
447d32: movaps xmm1, xmm7
447d35: movaps xmmword ptr [rdx + 0x30], xmm5
447d39: movaps xmmword ptr [rdx + 0x20], xmm4
447d3d: movaps xmmword ptr [rdx + 0x10], xmm3
447d41: movaps xmmword ptr [rdx], xmm2
447d44: lea rdx, [rdx + 0x40]
447d48: jmp 0x447ce0
447d4a: mov r9, qword ptr [rcx]
447d4d: mov esi, dword ptr [rcx + 6]
447d50: mov qword ptr [rdx], r9
447d53: mov dword ptr [rdx + 6], esi
447d56: mov rsi, 0xa
447d5d: jmp 0x4488c0
447d62: nop word ptr cs:[rax + rax]
447d6d: nop dword ptr [rax]
447d70: movaps xmm1, xmmword ptr [rcx - 7]
447d74: movaps xmm2, xmmword ptr [rcx + 9]
447d78: pcmpeqb xmm0, xmm2
447d7c: pmovmskb eax, xmm0
447d80: movaps xmm3, xmm2
447d83: test rax, rax
447d86: jne 0x447e9a
447d8c: palignr xmm2, xmm1, 7
447d92: movaps xmmword ptr [rdx], xmm2
447d95: movaps xmm2, xmmword ptr [rcx + 0x19]
447d99: pcmpeqb xmm0, xmm2
447d9d: lea rdx, [rdx + 0x10]
447da1: pmovmskb eax, xmm0
447da5: lea rcx, [rcx + 0x10]
447da9: movaps xmm1, xmm2
447dac: test rax, rax
447daf: jne 0x447e9a
447db5: palignr xmm2, xmm3, 7
447dbb: movaps xmmword ptr [rdx], xmm2
447dbe: movaps xmm2, xmmword ptr [rcx + 0x19]
447dc2: pcmpeqb xmm0, xmm2
447dc6: lea rdx, [rdx + 0x10]
447dca: pmovmskb eax, xmm0
447dce: lea rcx, [rcx + 0x10]
447dd2: movaps xmm3, xmm2
447dd5: test rax, rax
447dd8: jne 0x447e9a
447dde: palignr xmm2, xmm1, 7
447de4: movaps xmmword ptr [rdx], xmm2
447de7: movaps xmm2, xmmword ptr [rcx + 0x19]
447deb: pcmpeqb xmm0, xmm2
447def: lea rdx, [rdx + 0x10]
447df3: pmovmskb eax, xmm0
447df7: lea rcx, [rcx + 0x10]
447dfb: test rax, rax
447dfe: jne 0x447e9a
447e04: palignr xmm2, xmm3, 7
447e0a: movaps xmmword ptr [rdx], xmm2
447e0d: lea rcx, [rcx + 0x19]
447e11: lea rdx, [rdx + 0x10]
447e15: mov rax, rcx
447e18: and rcx, 0xffffffffffffffc0
447e1c: sub rax, rcx
447e1f: lea rcx, [rcx - 9]
447e23: sub rdx, rax
447e26: movaps xmm1, xmmword ptr [rcx - 7]
447e2a: nop word ptr [rax + rax]
447e30: movaps xmm2, xmmword ptr [rcx + 9]
447e34: movaps xmm3, xmmword ptr [rcx + 0x19]
447e38: movaps xmm6, xmm3
447e3b: movaps xmm4, xmmword ptr [rcx + 0x29]
447e3f: movaps xmm7, xmm4
447e42: movaps xmm5, xmmword ptr [rcx + 0x39]
447e46: pminub xmm6, xmm2
447e4a: pminub xmm7, xmm5
447e4e: pminub xmm7, xmm6
447e52: pcmpeqb xmm7, xmm0
447e56: pmovmskb eax, xmm7
447e5a: movaps xmm7, xmm5
447e5d: palignr xmm5, xmm4, 7
447e63: test rax, rax
447e66: palignr xmm4, xmm3, 7
447e6c: jne 0x447d78
447e72: palignr xmm3, xmm2, 7
447e78: lea rcx, [rcx + 0x40]
447e7c: palignr xmm2, xmm1, 7
447e82: movaps xmm1, xmm7
447e85: movaps xmmword ptr [rdx + 0x30], xmm5
447e89: movaps xmmword ptr [rdx + 0x20], xmm4
447e8d: movaps xmmword ptr [rdx + 0x10], xmm3
447e91: movaps xmmword ptr [rdx], xmm2
447e94: lea rdx, [rdx + 0x40]
447e98: jmp 0x447e30
447e9a: mov r9, qword ptr [rcx]
447e9d: mov esi, dword ptr [rcx + 5]
447ea0: mov qword ptr [rdx], r9
447ea3: mov dword ptr [rdx + 5], esi
447ea6: mov rsi, 9
447ead: jmp 0x4488c0
447eb2: nop word ptr cs:[rax + rax]
447ebd: nop dword ptr [rax]
447ec0: movaps xmm1, xmmword ptr [rcx - 8]
447ec4: movaps xmm2, xmmword ptr [rcx + 8]
447ec8: pcmpeqb xmm0, xmm2
447ecc: pmovmskb eax, xmm0
447ed0: movaps xmm3, xmm2
447ed3: test rax, rax
447ed6: jne 0x447fea
447edc: palignr xmm2, xmm1, 8
447ee2: movaps xmmword ptr [rdx], xmm2
447ee5: movaps xmm2, xmmword ptr [rcx + 0x18]
447ee9: pcmpeqb xmm0, xmm2
447eed: lea rdx, [rdx + 0x10]
447ef1: pmovmskb eax, xmm0
447ef5: lea rcx, [rcx + 0x10]
447ef9: movaps xmm1, xmm2
447efc: test rax, rax
447eff: jne 0x447fea
447f05: palignr xmm2, xmm3, 8
447f0b: movaps xmmword ptr [rdx], xmm2
447f0e: movaps xmm2, xmmword ptr [rcx + 0x18]
447f12: pcmpeqb xmm0, xmm2
447f16: lea rdx, [rdx + 0x10]
447f1a: pmovmskb eax, xmm0
447f1e: lea rcx, [rcx + 0x10]
447f22: movaps xmm3, xmm2
447f25: test rax, rax
447f28: jne 0x447fea
447f2e: palignr xmm2, xmm1, 8
447f34: movaps xmmword ptr [rdx], xmm2
447f37: movaps xmm2, xmmword ptr [rcx + 0x18]
447f3b: pcmpeqb xmm0, xmm2
447f3f: lea rdx, [rdx + 0x10]
447f43: pmovmskb eax, xmm0
447f47: lea rcx, [rcx + 0x10]
447f4b: test rax, rax
447f4e: jne 0x447fea
447f54: palignr xmm2, xmm3, 8
447f5a: movaps xmmword ptr [rdx], xmm2
447f5d: lea rcx, [rcx + 0x18]
447f61: lea rdx, [rdx + 0x10]
447f65: mov rax, rcx
447f68: and rcx, 0xffffffffffffffc0
447f6c: sub rax, rcx
447f6f: lea rcx, [rcx - 8]
447f73: sub rdx, rax
447f76: movaps xmm1, xmmword ptr [rcx - 8]
447f7a: nop word ptr [rax + rax]
447f80: movaps xmm2, xmmword ptr [rcx + 8]
447f84: movaps xmm3, xmmword ptr [rcx + 0x18]
447f88: movaps xmm6, xmm3
447f8b: movaps xmm4, xmmword ptr [rcx + 0x28]
447f8f: movaps xmm7, xmm4
447f92: movaps xmm5, xmmword ptr [rcx + 0x38]
447f96: pminub xmm6, xmm2
447f9a: pminub xmm7, xmm5
447f9e: pminub xmm7, xmm6
447fa2: pcmpeqb xmm7, xmm0
447fa6: pmovmskb eax, xmm7
447faa: movaps xmm7, xmm5
447fad: palignr xmm5, xmm4, 8
447fb3: test rax, rax
447fb6: palignr xmm4, xmm3, 8
447fbc: jne 0x447ec8
447fc2: palignr xmm3, xmm2, 8
447fc8: lea rcx, [rcx + 0x40]
447fcc: palignr xmm2, xmm1, 8
447fd2: movaps xmm1, xmm7
447fd5: movaps xmmword ptr [rdx + 0x30], xmm5
447fd9: movaps xmmword ptr [rdx + 0x20], xmm4
447fdd: movaps xmmword ptr [rdx + 0x10], xmm3
447fe1: movaps xmmword ptr [rdx], xmm2
447fe4: lea rdx, [rdx + 0x40]
447fe8: jmp 0x447f80
447fea: mov r9, qword ptr [rcx]
447fed: mov rsi, 8
447ff4: mov qword ptr [rdx], r9
447ff7: jmp 0x4488c0
447ffc: nop dword ptr [rax]
448000: movaps xmm1, xmmword ptr [rcx - 9]
448004: movaps xmm2, xmmword ptr [rcx + 7]
448008: pcmpeqb xmm0, xmm2
44800c: pmovmskb eax, xmm0
448010: movaps xmm3, xmm2
448013: test rax, rax
448016: jne 0x44812a
44801c: palignr xmm2, xmm1, 9
448022: movaps xmmword ptr [rdx], xmm2
448025: movaps xmm2, xmmword ptr [rcx + 0x17]
448029: pcmpeqb xmm0, xmm2
44802d: lea rdx, [rdx + 0x10]
448031: pmovmskb eax, xmm0
448035: lea rcx, [rcx + 0x10]
448039: movaps xmm1, xmm2
44803c: test rax, rax
44803f: jne 0x44812a
448045: palignr xmm2, xmm3, 9
44804b: movaps xmmword ptr [rdx], xmm2
44804e: movaps xmm2, xmmword ptr [rcx + 0x17]
448052: pcmpeqb xmm0, xmm2
448056: lea rdx, [rdx + 0x10]
44805a: pmovmskb eax, xmm0
44805e: lea rcx, [rcx + 0x10]
448062: movaps xmm3, xmm2
448065: test rax, rax
448068: jne 0x44812a
44806e: palignr xmm2, xmm1, 9
448074: movaps xmmword ptr [rdx], xmm2
448077: movaps xmm2, xmmword ptr [rcx + 0x17]
44807b: pcmpeqb xmm0, xmm2
44807f: lea rdx, [rdx + 0x10]
448083: pmovmskb eax, xmm0
448087: lea rcx, [rcx + 0x10]
44808b: test rax, rax
44808e: jne 0x44812a
448094: palignr xmm2, xmm3, 9
44809a: movaps xmmword ptr [rdx], xmm2
44809d: lea rcx, [rcx + 0x17]
4480a1: lea rdx, [rdx + 0x10]
4480a5: mov rax, rcx
4480a8: and rcx, 0xffffffffffffffc0
4480ac: sub rax, rcx
4480af: lea rcx, [rcx - 7]
4480b3: sub rdx, rax
4480b6: movaps xmm1, xmmword ptr [rcx - 9]
4480ba: nop word ptr [rax + rax]
4480c0: movaps xmm2, xmmword ptr [rcx + 7]
4480c4: movaps xmm3, xmmword ptr [rcx + 0x17]
4480c8: movaps xmm6, xmm3
4480cb: movaps xmm4, xmmword ptr [rcx + 0x27]
4480cf: movaps xmm7, xmm4
4480d2: movaps xmm5, xmmword ptr [rcx + 0x37]
4480d6: pminub xmm6, xmm2
4480da: pminub xmm7, xmm5
4480de: pminub xmm7, xmm6
4480e2: pcmpeqb xmm7, xmm0
4480e6: pmovmskb eax, xmm7
4480ea: movaps xmm7, xmm5
4480ed: palignr xmm5, xmm4, 9
4480f3: test rax, rax
4480f6: palignr xmm4, xmm3, 9
4480fc: jne 0x448008
448102: palignr xmm3, xmm2, 9
448108: lea rcx, [rcx + 0x40]
44810c: palignr xmm2, xmm1, 9
448112: movaps xmm1, xmm7
448115: movaps xmmword ptr [rdx + 0x30], xmm5
448119: movaps xmmword ptr [rdx + 0x20], xmm4
44811d: movaps xmmword ptr [rdx + 0x10], xmm3
448121: movaps xmmword ptr [rdx], xmm2
448124: lea rdx, [rdx + 0x40]
448128: jmp 0x4480c0
44812a: mov r9, qword ptr [rcx - 1]
44812e: mov rsi, 7
448135: mov qword ptr [rdx - 1], r9
448139: jmp 0x4488c0
44813e: nop 
448140: movaps xmm1, xmmword ptr [rcx - 0xa]
448144: movaps xmm2, xmmword ptr [rcx + 6]
448148: pcmpeqb xmm0, xmm2
44814c: pmovmskb eax, xmm0
448150: movaps xmm3, xmm2
448153: test rax, rax
448156: jne 0x44826a
44815c: palignr xmm2, xmm1, 0xa
448162: movaps xmmword ptr [rdx], xmm2
448165: movaps xmm2, xmmword ptr [rcx + 0x16]
448169: pcmpeqb xmm0, xmm2
44816d: lea rdx, [rdx + 0x10]
448171: pmovmskb eax, xmm0
448175: lea rcx, [rcx + 0x10]
448179: movaps xmm1, xmm2
44817c: test rax, rax
44817f: jne 0x44826a
448185: palignr xmm2, xmm3, 0xa
44818b: movaps xmmword ptr [rdx], xmm2
44818e: movaps xmm2, xmmword ptr [rcx + 0x16]
448192: pcmpeqb xmm0, xmm2
448196: lea rdx, [rdx + 0x10]
44819a: pmovmskb eax, xmm0
44819e: lea rcx, [rcx + 0x10]
4481a2: movaps xmm3, xmm2
4481a5: test rax, rax
4481a8: jne 0x44826a
4481ae: palignr xmm2, xmm1, 0xa
4481b4: movaps xmmword ptr [rdx], xmm2
4481b7: movaps xmm2, xmmword ptr [rcx + 0x16]
4481bb: pcmpeqb xmm0, xmm2
4481bf: lea rdx, [rdx + 0x10]
4481c3: pmovmskb eax, xmm0
4481c7: lea rcx, [rcx + 0x10]
4481cb: test rax, rax
4481ce: jne 0x44826a
4481d4: palignr xmm2, xmm3, 0xa
4481da: movaps xmmword ptr [rdx], xmm2
4481dd: lea rcx, [rcx + 0x16]
4481e1: lea rdx, [rdx + 0x10]
4481e5: mov rax, rcx
4481e8: and rcx, 0xffffffffffffffc0
4481ec: sub rax, rcx
4481ef: lea rcx, [rcx - 6]
4481f3: sub rdx, rax
4481f6: movaps xmm1, xmmword ptr [rcx - 0xa]
4481fa: nop word ptr [rax + rax]
448200: movaps xmm2, xmmword ptr [rcx + 6]
448204: movaps xmm3, xmmword ptr [rcx + 0x16]
448208: movaps xmm6, xmm3
44820b: movaps xmm4, xmmword ptr [rcx + 0x26]
44820f: movaps xmm7, xmm4
448212: movaps xmm5, xmmword ptr [rcx + 0x36]
448216: pminub xmm6, xmm2
44821a: pminub xmm7, xmm5
44821e: pminub xmm7, xmm6
448222: pcmpeqb xmm7, xmm0
448226: pmovmskb eax, xmm7
44822a: movaps xmm7, xmm5
44822d: palignr xmm5, xmm4, 0xa
448233: test rax, rax
448236: palignr xmm4, xmm3, 0xa
44823c: jne 0x448148
448242: palignr xmm3, xmm2, 0xa
448248: lea rcx, [rcx + 0x40]
44824c: palignr xmm2, xmm1, 0xa
448252: movaps xmm1, xmm7
448255: movaps xmmword ptr [rdx + 0x30], xmm5
448259: movaps xmmword ptr [rdx + 0x20], xmm4
44825d: movaps xmmword ptr [rdx + 0x10], xmm3
448261: movaps xmmword ptr [rdx], xmm2
448264: lea rdx, [rdx + 0x40]
448268: jmp 0x448200
44826a: mov r9, qword ptr [rcx - 2]
44826e: mov rsi, 6
448275: mov qword ptr [rdx - 2], r9
448279: jmp 0x4488c0
44827e: nop 
448280: movaps xmm1, xmmword ptr [rcx - 0xb]
448284: movaps xmm2, xmmword ptr [rcx + 5]
448288: pcmpeqb xmm0, xmm2
44828c: pmovmskb eax, xmm0
448290: movaps xmm3, xmm2
448293: test rax, rax
448296: jne 0x4483aa
44829c: palignr xmm2, xmm1, 0xb
4482a2: movaps xmmword ptr [rdx], xmm2
4482a5: movaps xmm2, xmmword ptr [rcx + 0x15]
4482a9: pcmpeqb xmm0, xmm2
4482ad: lea rdx, [rdx + 0x10]
4482b1: pmovmskb eax, xmm0
4482b5: lea rcx, [rcx + 0x10]
4482b9: movaps xmm1, xmm2
4482bc: test rax, rax
4482bf: jne 0x4483aa
4482c5: palignr xmm2, xmm3, 0xb
4482cb: movaps xmmword ptr [rdx], xmm2
4482ce: movaps xmm2, xmmword ptr [rcx + 0x15]
4482d2: pcmpeqb xmm0, xmm2
4482d6: lea rdx, [rdx + 0x10]
4482da: pmovmskb eax, xmm0
4482de: lea rcx, [rcx + 0x10]
4482e2: movaps xmm3, xmm2
4482e5: test rax, rax
4482e8: jne 0x4483aa
4482ee: palignr xmm2, xmm1, 0xb
4482f4: movaps xmmword ptr [rdx], xmm2
4482f7: movaps xmm2, xmmword ptr [rcx + 0x15]
4482fb: pcmpeqb xmm0, xmm2
4482ff: lea rdx, [rdx + 0x10]
448303: pmovmskb eax, xmm0
448307: lea rcx, [rcx + 0x10]
44830b: test rax, rax
44830e: jne 0x4483aa
448314: palignr xmm2, xmm3, 0xb
44831a: movaps xmmword ptr [rdx], xmm2
44831d: lea rcx, [rcx + 0x15]
448321: lea rdx, [rdx + 0x10]
448325: mov rax, rcx
448328: and rcx, 0xffffffffffffffc0
44832c: sub rax, rcx
44832f: lea rcx, [rcx - 5]
448333: sub rdx, rax
448336: movaps xmm1, xmmword ptr [rcx - 0xb]
44833a: nop word ptr [rax + rax]
448340: movaps xmm2, xmmword ptr [rcx + 5]
448344: movaps xmm3, xmmword ptr [rcx + 0x15]
448348: movaps xmm6, xmm3
44834b: movaps xmm4, xmmword ptr [rcx + 0x25]
44834f: movaps xmm7, xmm4
448352: movaps xmm5, xmmword ptr [rcx + 0x35]
448356: pminub xmm6, xmm2
44835a: pminub xmm7, xmm5
44835e: pminub xmm7, xmm6
448362: pcmpeqb xmm7, xmm0
448366: pmovmskb eax, xmm7
44836a: movaps xmm7, xmm5
44836d: palignr xmm5, xmm4, 0xb
448373: test rax, rax
448376: palignr xmm4, xmm3, 0xb
44837c: jne 0x448288
448382: palignr xmm3, xmm2, 0xb
448388: lea rcx, [rcx + 0x40]
44838c: palignr xmm2, xmm1, 0xb
448392: movaps xmm1, xmm7
448395: movaps xmmword ptr [rdx + 0x30], xmm5
448399: movaps xmmword ptr [rdx + 0x20], xmm4
44839d: movaps xmmword ptr [rdx + 0x10], xmm3
4483a1: movaps xmmword ptr [rdx], xmm2
4483a4: lea rdx, [rdx + 0x40]
4483a8: jmp 0x448340
4483aa: mov r9, qword ptr [rcx - 3]
4483ae: mov rsi, 5
4483b5: mov qword ptr [rdx - 3], r9
4483b9: jmp 0x4488c0
4483be: nop 
4483c0: movaps xmm1, xmmword ptr [rcx - 0xc]
4483c4: movaps xmm2, xmmword ptr [rcx + 4]
4483c8: pcmpeqb xmm0, xmm2
4483cc: pmovmskb eax, xmm0
4483d0: movaps xmm3, xmm2
4483d3: test rax, rax
4483d6: jne 0x4484ea
4483dc: palignr xmm2, xmm1, 0xc
4483e2: movaps xmmword ptr [rdx], xmm2
4483e5: movaps xmm2, xmmword ptr [rcx + 0x14]
4483e9: pcmpeqb xmm0, xmm2
4483ed: lea rdx, [rdx + 0x10]
4483f1: pmovmskb eax, xmm0
4483f5: lea rcx, [rcx + 0x10]
4483f9: movaps xmm1, xmm2
4483fc: test rax, rax
4483ff: jne 0x4484ea
448405: palignr xmm2, xmm3, 0xc
44840b: movaps xmmword ptr [rdx], xmm2
44840e: movaps xmm2, xmmword ptr [rcx + 0x14]
448412: pcmpeqb xmm0, xmm2
448416: lea rdx, [rdx + 0x10]
44841a: pmovmskb eax, xmm0
44841e: lea rcx, [rcx + 0x10]
448422: movaps xmm3, xmm2
448425: test rax, rax
448428: jne 0x4484ea
44842e: palignr xmm2, xmm1, 0xc
448434: movaps xmmword ptr [rdx], xmm2
448437: movaps xmm2, xmmword ptr [rcx + 0x14]
44843b: pcmpeqb xmm0, xmm2
44843f: lea rdx, [rdx + 0x10]
448443: pmovmskb eax, xmm0
448447: lea rcx, [rcx + 0x10]
44844b: test rax, rax
44844e: jne 0x4484ea
448454: palignr xmm2, xmm3, 0xc
44845a: movaps xmmword ptr [rdx], xmm2
44845d: lea rcx, [rcx + 0x14]
448461: lea rdx, [rdx + 0x10]
448465: mov rax, rcx
448468: and rcx, 0xffffffffffffffc0
44846c: sub rax, rcx
44846f: lea rcx, [rcx - 4]
448473: sub rdx, rax
448476: movaps xmm1, xmmword ptr [rcx - 0xc]
44847a: nop word ptr [rax + rax]
448480: movaps xmm2, xmmword ptr [rcx + 4]
448484: movaps xmm3, xmmword ptr [rcx + 0x14]
448488: movaps xmm6, xmm3
44848b: movaps xmm4, xmmword ptr [rcx + 0x24]
44848f: movaps xmm7, xmm4
448492: movaps xmm5, xmmword ptr [rcx + 0x34]
448496: pminub xmm6, xmm2
44849a: pminub xmm7, xmm5
44849e: pminub xmm7, xmm6
4484a2: pcmpeqb xmm7, xmm0
4484a6: pmovmskb eax, xmm7
4484aa: movaps xmm7, xmm5
4484ad: palignr xmm5, xmm4, 0xc
4484b3: test rax, rax
4484b6: palignr xmm4, xmm3, 0xc
4484bc: jne 0x4483c8
4484c2: palignr xmm3, xmm2, 0xc
4484c8: lea rcx, [rcx + 0x40]
4484cc: palignr xmm2, xmm1, 0xc
4484d2: movaps xmm1, xmm7
4484d5: movaps xmmword ptr [rdx + 0x30], xmm5
4484d9: movaps xmmword ptr [rdx + 0x20], xmm4
4484dd: movaps xmmword ptr [rdx + 0x10], xmm3
4484e1: movaps xmmword ptr [rdx], xmm2
4484e4: lea rdx, [rdx + 0x40]
4484e8: jmp 0x448480
4484ea: mov r9d, dword ptr [rcx]
4484ed: mov rsi, 4
4484f4: mov dword ptr [rdx], r9d
4484f7: jmp 0x4488c0
4484fc: nop dword ptr [rax]
448500: movaps xmm1, xmmword ptr [rcx - 0xd]
448504: movaps xmm2, xmmword ptr [rcx + 3]
448508: pcmpeqb xmm0, xmm2
44850c: pmovmskb eax, xmm0
448510: movaps xmm3, xmm2
448513: test rax, rax
448516: jne 0x44862a
44851c: palignr xmm2, xmm1, 0xd
448522: movaps xmmword ptr [rdx], xmm2
448525: movaps xmm2, xmmword ptr [rcx + 0x13]
448529: pcmpeqb xmm0, xmm2
44852d: lea rdx, [rdx + 0x10]
448531: pmovmskb eax, xmm0
448535: lea rcx, [rcx + 0x10]
448539: movaps xmm1, xmm2
44853c: test rax, rax
44853f: jne 0x44862a
448545: palignr xmm2, xmm3, 0xd
44854b: movaps xmmword ptr [rdx], xmm2
44854e: movaps xmm2, xmmword ptr [rcx + 0x13]
448552: pcmpeqb xmm0, xmm2
448556: lea rdx, [rdx + 0x10]
44855a: pmovmskb eax, xmm0
44855e: lea rcx, [rcx + 0x10]
448562: movaps xmm3, xmm2
448565: test rax, rax
448568: jne 0x44862a
44856e: palignr xmm2, xmm1, 0xd
448574: movaps xmmword ptr [rdx], xmm2
448577: movaps xmm2, xmmword ptr [rcx + 0x13]
44857b: pcmpeqb xmm0, xmm2
44857f: lea rdx, [rdx + 0x10]
448583: pmovmskb eax, xmm0
448587: lea rcx, [rcx + 0x10]
44858b: test rax, rax
44858e: jne 0x44862a
448594: palignr xmm2, xmm3, 0xd
44859a: movaps xmmword ptr [rdx], xmm2
44859d: lea rcx, [rcx + 0x13]
4485a1: lea rdx, [rdx + 0x10]
4485a5: mov rax, rcx
4485a8: and rcx, 0xffffffffffffffc0
4485ac: sub rax, rcx
4485af: lea rcx, [rcx - 3]
4485b3: sub rdx, rax
4485b6: movaps xmm1, xmmword ptr [rcx - 0xd]
4485ba: nop word ptr [rax + rax]
4485c0: movaps xmm2, xmmword ptr [rcx + 3]
4485c4: movaps xmm3, xmmword ptr [rcx + 0x13]
4485c8: movaps xmm6, xmm3
4485cb: movaps xmm4, xmmword ptr [rcx + 0x23]
4485cf: movaps xmm7, xmm4
4485d2: movaps xmm5, xmmword ptr [rcx + 0x33]
4485d6: pminub xmm6, xmm2
4485da: pminub xmm7, xmm5
4485de: pminub xmm7, xmm6
4485e2: pcmpeqb xmm7, xmm0
4485e6: pmovmskb eax, xmm7
4485ea: movaps xmm7, xmm5
4485ed: palignr xmm5, xmm4, 0xd
4485f3: test rax, rax
4485f6: palignr xmm4, xmm3, 0xd
4485fc: jne 0x448508
448602: palignr xmm3, xmm2, 0xd
448608: lea rcx, [rcx + 0x40]
44860c: palignr xmm2, xmm1, 0xd
448612: movaps xmm1, xmm7
448615: movaps xmmword ptr [rdx + 0x30], xmm5
448619: movaps xmmword ptr [rdx + 0x20], xmm4
44861d: movaps xmmword ptr [rdx + 0x10], xmm3
448621: movaps xmmword ptr [rdx], xmm2
448624: lea rdx, [rdx + 0x40]
448628: jmp 0x4485c0
44862a: mov r9d, dword ptr [rcx - 1]
44862e: mov rsi, 3
448635: mov dword ptr [rdx - 1], r9d
448639: jmp 0x4488c0
44863e: nop 
448640: movaps xmm1, xmmword ptr [rcx - 0xe]
448644: movaps xmm2, xmmword ptr [rcx + 2]
448648: pcmpeqb xmm0, xmm2
44864c: pmovmskb eax, xmm0
448650: movaps xmm3, xmm2
448653: test rax, rax
448656: jne 0x44876a
44865c: palignr xmm2, xmm1, 0xe
448662: movaps xmmword ptr [rdx], xmm2
448665: movaps xmm2, xmmword ptr [rcx + 0x12]
448669: pcmpeqb xmm0, xmm2
44866d: lea rdx, [rdx + 0x10]
448671: pmovmskb eax, xmm0
448675: lea rcx, [rcx + 0x10]
448679: movaps xmm1, xmm2
44867c: test rax, rax
44867f: jne 0x44876a
448685: palignr xmm2, xmm3, 0xe
44868b: movaps xmmword ptr [rdx], xmm2
44868e: movaps xmm2, xmmword ptr [rcx + 0x12]
448692: pcmpeqb xmm0, xmm2
448696: lea rdx, [rdx + 0x10]
44869a: pmovmskb eax, xmm0
44869e: lea rcx, [rcx + 0x10]
4486a2: movaps xmm3, xmm2
4486a5: test rax, rax
4486a8: jne 0x44876a
4486ae: palignr xmm2, xmm1, 0xe
4486b4: movaps xmmword ptr [rdx], xmm2
4486b7: movaps xmm2, xmmword ptr [rcx + 0x12]
4486bb: pcmpeqb xmm0, xmm2
4486bf: lea rdx, [rdx + 0x10]
4486c3: pmovmskb eax, xmm0
4486c7: lea rcx, [rcx + 0x10]
4486cb: test rax, rax
4486ce: jne 0x44876a
4486d4: palignr xmm2, xmm3, 0xe
4486da: movaps xmmword ptr [rdx], xmm2
4486dd: lea rcx, [rcx + 0x12]
4486e1: lea rdx, [rdx + 0x10]
4486e5: mov rax, rcx
4486e8: and rcx, 0xffffffffffffffc0
4486ec: sub rax, rcx
4486ef: lea rcx, [rcx - 2]
4486f3: sub rdx, rax
4486f6: movaps xmm1, xmmword ptr [rcx - 0xe]
4486fa: nop word ptr [rax + rax]
448700: movaps xmm2, xmmword ptr [rcx + 2]
448704: movaps xmm3, xmmword ptr [rcx + 0x12]
448708: movaps xmm6, xmm3
44870b: movaps xmm4, xmmword ptr [rcx + 0x22]
44870f: movaps xmm7, xmm4
448712: movaps xmm5, xmmword ptr [rcx + 0x32]
448716: pminub xmm6, xmm2
44871a: pminub xmm7, xmm5
44871e: pminub xmm7, xmm6
448722: pcmpeqb xmm7, xmm0
448726: pmovmskb eax, xmm7
44872a: movaps xmm7, xmm5
44872d: palignr xmm5, xmm4, 0xe
448733: test rax, rax
448736: palignr xmm4, xmm3, 0xe
44873c: jne 0x448648
448742: palignr xmm3, xmm2, 0xe
448748: lea rcx, [rcx + 0x40]
44874c: palignr xmm2, xmm1, 0xe
448752: movaps xmm1, xmm7
448755: movaps xmmword ptr [rdx + 0x30], xmm5
448759: movaps xmmword ptr [rdx + 0x20], xmm4
44875d: movaps xmmword ptr [rdx + 0x10], xmm3
448761: movaps xmmword ptr [rdx], xmm2
448764: lea rdx, [rdx + 0x40]
448768: jmp 0x448700
44876a: mov r9d, dword ptr [rcx - 2]
44876e: mov rsi, 2
448775: mov dword ptr [rdx - 2], r9d
448779: jmp 0x4488c0
44877e: nop 
448780: movaps xmm1, xmmword ptr [rcx - 0xf]
448784: movaps xmm2, xmmword ptr [rcx + 1]
448788: pcmpeqb xmm0, xmm2
44878c: pmovmskb eax, xmm0
448790: movaps xmm3, xmm2
448793: test rax, rax
448796: jne 0x4488aa
44879c: palignr xmm2, xmm1, 0xf
4487a2: movaps xmmword ptr [rdx], xmm2
4487a5: movaps xmm2, xmmword ptr [rcx + 0x11]
4487a9: pcmpeqb xmm0, xmm2
4487ad: lea rdx, [rdx + 0x10]
4487b1: pmovmskb eax, xmm0
4487b5: lea rcx, [rcx + 0x10]
4487b9: movaps xmm1, xmm2
4487bc: test rax, rax
4487bf: jne 0x4488aa
4487c5: palignr xmm2, xmm3, 0xf
4487cb: movaps xmmword ptr [rdx], xmm2
4487ce: movaps xmm2, xmmword ptr [rcx + 0x11]
4487d2: pcmpeqb xmm0, xmm2
4487d6: lea rdx, [rdx + 0x10]
4487da: pmovmskb eax, xmm0
4487de: lea rcx, [rcx + 0x10]
4487e2: movaps xmm3, xmm2
4487e5: test rax, rax
4487e8: jne 0x4488aa
4487ee: palignr xmm2, xmm1, 0xf
4487f4: movaps xmmword ptr [rdx], xmm2
4487f7: movaps xmm2, xmmword ptr [rcx + 0x11]
4487fb: pcmpeqb xmm0, xmm2
4487ff: lea rdx, [rdx + 0x10]
448803: pmovmskb eax, xmm0
448807: lea rcx, [rcx + 0x10]
44880b: test rax, rax
44880e: jne 0x4488aa
448814: palignr xmm2, xmm3, 0xf
44881a: movaps xmmword ptr [rdx], xmm2
44881d: lea rcx, [rcx + 0x11]
448821: lea rdx, [rdx + 0x10]
448825: mov rax, rcx
448828: and rcx, 0xffffffffffffffc0
44882c: sub rax, rcx
44882f: lea rcx, [rcx - 1]
448833: sub rdx, rax
448836: movaps xmm1, xmmword ptr [rcx - 0xf]
44883a: nop word ptr [rax + rax]
448840: movaps xmm2, xmmword ptr [rcx + 1]
448844: movaps xmm3, xmmword ptr [rcx + 0x11]
448848: movaps xmm6, xmm3
44884b: movaps xmm4, xmmword ptr [rcx + 0x21]
44884f: movaps xmm7, xmm4
448852: movaps xmm5, xmmword ptr [rcx + 0x31]
448856: pminub xmm6, xmm2
44885a: pminub xmm7, xmm5
44885e: pminub xmm7, xmm6
448862: pcmpeqb xmm7, xmm0
448866: pmovmskb eax, xmm7
44886a: movaps xmm7, xmm5
44886d: palignr xmm5, xmm4, 0xf
448873: test rax, rax
448876: palignr xmm4, xmm3, 0xf
44887c: jne 0x448788
448882: palignr xmm3, xmm2, 0xf
448888: lea rcx, [rcx + 0x40]
44888c: palignr xmm2, xmm1, 0xf
448892: movaps xmm1, xmm7
448895: movaps xmmword ptr [rdx + 0x30], xmm5
448899: movaps xmmword ptr [rdx + 0x20], xmm4
44889d: movaps xmmword ptr [rdx + 0x10], xmm3
4488a1: movaps xmmword ptr [rdx], xmm2
4488a4: lea rdx, [rdx + 0x40]
4488a8: jmp 0x448840
4488aa: mov r9d, dword ptr [rcx - 3]
4488ae: mov rsi, 1
4488b5: mov dword ptr [rdx - 3], r9d
4488b9: nop dword ptr [rax]
4488c0: add rdx, rsi
4488c3: add rcx, rsi
4488c6: test al, al
4488c8: je 0x448920
4488ca: test al, 1
4488cc: jne 0x448980
4488d2: test al, 2
4488d4: jne 0x448990
4488da: test al, 4
4488dc: jne 0x4489a0
4488e2: test al, 8
4488e4: jne 0x4489b0
4488ea: test al, 0x10
4488ec: jne 0x4489c0
4488f2: test al, 0x20
4488f4: jne 0x4489d0
4488fa: test al, 0x40
4488fc: jne 0x4489e0
448902: nop word ptr cs:[rax + rax]
44890d: nop dword ptr [rax]
448910: mov rax, qword ptr [rcx]
448913: mov qword ptr [rdx], rax
448916: mov rax, rdi
448919: ret 
44891a: nop word ptr [rax + rax]
448920: test ah, 1
448923: jne 0x4489f0
448929: test ah, 2
44892c: jne 0x448a00
448932: test ah, 4
448935: jne 0x448a10
44893b: test ah, 8
44893e: jne 0x448a20
448944: test ah, 0x10
448947: jne 0x448a30
44894d: test ah, 0x20
448950: jne 0x448a50
448956: test ah, 0x40
448959: jne 0x448a70
44895f: nop 
448960: mov rax, qword ptr [rcx]
448963: mov qword ptr [rdx], rax
448966: mov rax, qword ptr [rcx + 8]
44896a: mov qword ptr [rdx + 8], rax
44896e: mov rax, rdi
448971: ret 
448972: nop word ptr cs:[rax + rax]
44897d: nop dword ptr [rax]
448980: mov al, byte ptr [rcx]
448982: mov byte ptr [rdx], al
448984: mov rax, rdi
448987: ret 
448988: nop dword ptr [rax + rax]
448990: mov ax, word ptr [rcx]
448993: mov word ptr [rdx], ax
448996: mov rax, rdi
448999: ret 
44899a: nop word ptr [rax + rax]
4489a0: mov ax, word ptr [rcx]
4489a3: mov word ptr [rdx], ax
4489a6: mov al, byte ptr [rcx + 2]
4489a9: mov byte ptr [rdx + 2], al
4489ac: mov rax, rdi
4489af: ret 
4489b0: mov eax, dword ptr [rcx]
4489b2: mov dword ptr [rdx], eax
4489b4: mov rax, rdi
4489b7: ret 
4489b8: nop dword ptr [rax + rax]
4489c0: mov eax, dword ptr [rcx]
4489c2: mov dword ptr [rdx], eax
4489c4: mov al, byte ptr [rcx + 4]
4489c7: mov byte ptr [rdx + 4], al
4489ca: mov rax, rdi
4489cd: ret 
4489ce: nop 
4489d0: mov eax, dword ptr [rcx]
4489d2: mov dword ptr [rdx], eax
4489d4: mov ax, word ptr [rcx + 4]
4489d8: mov word ptr [rdx + 4], ax
4489dc: mov rax, rdi
4489df: ret 
4489e0: mov eax, dword ptr [rcx]
4489e2: mov dword ptr [rdx], eax
4489e4: mov eax, dword ptr [rcx + 3]
4489e7: mov dword ptr [rdx + 3], eax
4489ea: mov rax, rdi
4489ed: ret 
4489ee: nop 
4489f0: mov rax, qword ptr [rcx]
4489f3: mov qword ptr [rdx], rax
4489f6: mov eax, dword ptr [rcx + 5]
4489f9: mov dword ptr [rdx + 5], eax
4489fc: mov rax, rdi
4489ff: ret 
448a00: mov rax, qword ptr [rcx]
448a03: mov qword ptr [rdx], rax
448a06: mov eax, dword ptr [rcx + 6]
448a09: mov dword ptr [rdx + 6], eax
448a0c: mov rax, rdi
448a0f: ret 
448a10: mov rax, qword ptr [rcx]
448a13: mov qword ptr [rdx], rax
448a16: mov eax, dword ptr [rcx + 7]
448a19: mov dword ptr [rdx + 7], eax
448a1c: mov rax, rdi
448a1f: ret 
448a20: mov rax, qword ptr [rcx]
448a23: mov qword ptr [rdx], rax
448a26: mov eax, dword ptr [rcx + 8]
448a29: mov dword ptr [rdx + 8], eax
448a2c: mov rax, rdi
448a2f: ret 
448a30: mov rax, qword ptr [rcx]
448a33: mov qword ptr [rdx], rax
448a36: mov rax, qword ptr [rcx + 5]
448a3a: mov qword ptr [rdx + 5], rax
448a3e: mov rax, rdi
448a41: ret 
448a42: nop word ptr cs:[rax + rax]
448a4d: nop dword ptr [rax]
448a50: mov rax, qword ptr [rcx]
448a53: mov qword ptr [rdx], rax
448a56: mov rax, qword ptr [rcx + 6]
448a5a: mov qword ptr [rdx + 6], rax
448a5e: mov rax, rdi
448a61: ret 
448a62: nop word ptr cs:[rax + rax]
448a6d: nop dword ptr [rax]
448a70: mov rax, qword ptr [rcx]
448a73: mov qword ptr [rdx], rax
448a76: mov rax, qword ptr [rcx + 7]
448a7a: mov qword ptr [rdx + 7], rax
448a7e: mov rax, rdi
448a81: ret 
448a82: nop word ptr cs:[rax + rax]
448a8c: nop dword ptr [rax]
448a90: endbr64 
448a94: mov rcx, rsi
448a97: mov rdx, rdi
448a9a: cmp byte ptr [rcx], 0
448a9d: je 0x44a130
448aa3: cmp byte ptr [rcx + 1], 0
448aa7: je 0x44a140
448aad: cmp byte ptr [rcx + 2], 0
448ab1: je 0x44a150
448ab7: cmp byte ptr [rcx + 3], 0
448abb: je 0x44a170
448ac1: cmp byte ptr [rcx + 4], 0
448ac5: je 0x44a180
448acb: cmp byte ptr [rcx + 5], 0
448acf: je 0x44a190
448ad5: cmp byte ptr [rcx + 6], 0
448ad9: je 0x44a1b0
448adf: cmp byte ptr [rcx + 7], 0
448ae3: je 0x44a0c0
448ae9: cmp byte ptr [rcx + 8], 0
448aed: je 0x44a1c0
448af3: cmp byte ptr [rcx + 9], 0
448af7: je 0x44a1e0
448afd: cmp byte ptr [rcx + 0xa], 0
448b01: je 0x44a200
448b07: cmp byte ptr [rcx + 0xb], 0
448b0b: je 0x44a220
448b11: cmp byte ptr [rcx + 0xc], 0
448b15: je 0x44a240
448b1b: cmp byte ptr [rcx + 0xd], 0
448b1f: je 0x44a260
448b25: cmp byte ptr [rcx + 0xe], 0
448b29: je 0x44a280
448b2f: cmp byte ptr [rcx + 0xf], 0
448b33: je 0x44a110
448b39: lea rsi, [rcx + 0x10]
448b3d: and rsi, 0xfffffffffffffff0
448b41: pxor xmm0, xmm0
448b45: mov r9, qword ptr [rcx]
448b48: mov qword ptr [rdx], r9
448b4b: pcmpeqb xmm0, xmmword ptr [rsi]
448b4f: mov r9, qword ptr [rcx + 8]
448b53: mov qword ptr [rdx + 8], r9
448b57: pmovmskb eax, xmm0
448b5b: sub rsi, rcx
448b5e: test rax, rax
448b61: jne 0x44a070
448b67: mov rax, rdx
448b6a: lea rdx, [rdx + 0x10]
448b6e: and rdx, 0xfffffffffffffff0
448b72: sub rax, rdx
448b75: sub rcx, rax
448b78: mov rax, rcx
448b7b: and rax, 0xf
448b7f: mov rsi, 0
448b86: je 0x448c1a
448b8c: cmp rax, 8
448b90: jae 0x448bd3
448b92: cmp rax, 1
448b96: je 0x448d90
448b9c: cmp rax, 2
448ba0: je 0x448ed0
448ba6: cmp rax, 3
448baa: je 0x449010
448bb0: cmp rax, 4
448bb4: je 0x449150
448bba: cmp rax, 5
448bbe: je 0x449290
448bc4: cmp rax, 6
448bc8: je 0x4493d0
448bce: jmp 0x449520
448bd3: je 0x449670
448bd9: cmp rax, 9
448bdd: je 0x4497b0
448be3: cmp rax, 0xa
448be7: je 0x4498f0
448bed: cmp rax, 0xb
448bf1: je 0x449a30
448bf7: cmp rax, 0xc
448bfb: je 0x449b70
448c01: cmp rax, 0xd
448c05: je 0x449cb0
448c0b: cmp rax, 0xe
448c0f: je 0x449df0
448c15: jmp 0x449f30
448c1a: movaps xmm1, xmmword ptr [rcx]
448c1d: movaps xmm2, xmmword ptr [rcx + 0x10]
448c21: movaps xmmword ptr [rdx], xmm1
448c24: pcmpeqb xmm0, xmm2
448c28: pmovmskb eax, xmm0
448c2c: lea rsi, [rsi + 0x10]
448c30: test rax, rax
448c33: jne 0x44a070
448c39: movaps xmm3, xmmword ptr [rcx + rsi + 0x10]
448c3e: movaps xmmword ptr [rdx + rsi], xmm2
448c42: pcmpeqb xmm0, xmm3
448c46: pmovmskb eax, xmm0
448c4a: lea rsi, [rsi + 0x10]
448c4e: test rax, rax
448c51: jne 0x44a070
448c57: movaps xmm4, xmmword ptr [rcx + rsi + 0x10]
448c5c: movaps xmmword ptr [rdx + rsi], xmm3
448c60: pcmpeqb xmm0, xmm4
448c64: pmovmskb eax, xmm0
448c68: lea rsi, [rsi + 0x10]
448c6c: test rax, rax
448c6f: jne 0x44a070
448c75: movaps xmm1, xmmword ptr [rcx + rsi + 0x10]
448c7a: movaps xmmword ptr [rdx + rsi], xmm4
448c7e: pcmpeqb xmm0, xmm1
448c82: pmovmskb eax, xmm0
448c86: lea rsi, [rsi + 0x10]
448c8a: test rax, rax
448c8d: jne 0x44a070
448c93: movaps xmm2, xmmword ptr [rcx + rsi + 0x10]
448c98: movaps xmmword ptr [rdx + rsi], xmm1
448c9c: pcmpeqb xmm0, xmm2
448ca0: pmovmskb eax, xmm0
448ca4: lea rsi, [rsi + 0x10]
448ca8: test rax, rax
448cab: jne 0x44a070
448cb1: movaps xmm3, xmmword ptr [rcx + rsi + 0x10]
448cb6: movaps xmmword ptr [rdx + rsi], xmm2
448cba: pcmpeqb xmm0, xmm3
448cbe: pmovmskb eax, xmm0
448cc2: lea rsi, [rsi + 0x10]
448cc6: test rax, rax
448cc9: jne 0x44a070
448ccf: movaps xmmword ptr [rdx + rsi], xmm3
448cd3: mov rax, rcx
448cd6: lea rcx, [rcx + rsi + 0x10]
448cdb: and rcx, 0xffffffffffffffc0
448cdf: sub rax, rcx
448ce2: sub rdx, rax
448ce5: mov rsi, 0xffffffffffffffc0
448cec: nop dword ptr [rax]
448cf0: movaps xmm2, xmmword ptr [rcx]
448cf3: movaps xmm4, xmm2
448cf6: movaps xmm5, xmmword ptr [rcx + 0x10]
448cfa: movaps xmm3, xmmword ptr [rcx + 0x20]
448cfe: movaps xmm6, xmm3
448d01: movaps xmm7, xmmword ptr [rcx + 0x30]
448d05: pminub xmm2, xmm5
448d09: pminub xmm3, xmm7
448d0d: pminub xmm3, xmm2
448d11: pcmpeqb xmm3, xmm0
448d15: pmovmskb eax, xmm3
448d19: lea rdx, [rdx + 0x40]
448d1d: lea rcx, [rcx + 0x40]
448d21: test rax, rax
448d24: jne 0x448d38
448d26: movaps xmmword ptr [rdx - 0x40], xmm4
448d2a: movaps xmmword ptr [rdx - 0x30], xmm5
448d2e: movaps xmmword ptr [rdx - 0x20], xmm6
448d32: movaps xmmword ptr [rdx - 0x10], xmm7
448d36: jmp 0x448cf0
448d38: pcmpeqb xmm0, xmm4
448d3c: pmovmskb eax, xmm0
448d40: test rax, rax
448d43: jne 0x44a070
448d49: pcmpeqb xmm0, xmm5
448d4d: pmovmskb eax, xmm0
448d51: movaps xmmword ptr [rdx - 0x40], xmm4
448d55: test rax, rax
448d58: lea rsi, [rsi + 0x10]
448d5c: jne 0x44a070
448d62: pcmpeqb xmm0, xmm6
448d66: pmovmskb eax, xmm0
448d6a: movaps xmmword ptr [rdx - 0x30], xmm5
448d6e: test rax, rax
448d71: lea rsi, [rsi + 0x10]
448d75: jne 0x44a070
448d7b: movaps xmmword ptr [rdx - 0x20], xmm6
448d7f: pcmpeqb xmm0, xmm7
448d83: pmovmskb eax, xmm0
448d87: lea rsi, [rsi + 0x10]
448d8b: jmp 0x44a070
448d90: movaps xmm1, xmmword ptr [rcx - 1]
448d94: movaps xmm2, xmmword ptr [rcx + 0xf]
448d98: pcmpeqb xmm0, xmm2
448d9c: pmovmskb eax, xmm0
448da0: movaps xmm3, xmm2
448da3: test rax, rax
448da6: jne 0x448eba
448dac: palignr xmm2, xmm1, 1
448db2: movaps xmmword ptr [rdx], xmm2
448db5: movaps xmm2, xmmword ptr [rcx + 0x1f]
448db9: pcmpeqb xmm0, xmm2
448dbd: lea rdx, [rdx + 0x10]
448dc1: pmovmskb eax, xmm0
448dc5: lea rcx, [rcx + 0x10]
448dc9: movaps xmm1, xmm2
448dcc: test rax, rax
448dcf: jne 0x448eba
448dd5: palignr xmm2, xmm3, 1
448ddb: movaps xmmword ptr [rdx], xmm2
448dde: movaps xmm2, xmmword ptr [rcx + 0x1f]
448de2: pcmpeqb xmm0, xmm2
448de6: lea rdx, [rdx + 0x10]
448dea: pmovmskb eax, xmm0
448dee: lea rcx, [rcx + 0x10]
448df2: movaps xmm3, xmm2
448df5: test rax, rax
448df8: jne 0x448eba
448dfe: palignr xmm2, xmm1, 1
448e04: movaps xmmword ptr [rdx], xmm2
448e07: movaps xmm2, xmmword ptr [rcx + 0x1f]
448e0b: pcmpeqb xmm0, xmm2
448e0f: lea rdx, [rdx + 0x10]
448e13: pmovmskb eax, xmm0
448e17: lea rcx, [rcx + 0x10]
448e1b: test rax, rax
448e1e: jne 0x448eba
448e24: palignr xmm2, xmm3, 1
448e2a: movaps xmmword ptr [rdx], xmm2
448e2d: lea rcx, [rcx + 0x1f]
448e31: lea rdx, [rdx + 0x10]
448e35: mov rax, rcx
448e38: and rcx, 0xffffffffffffffc0
448e3c: sub rax, rcx
448e3f: lea rcx, [rcx - 0xf]
448e43: sub rdx, rax
448e46: movaps xmm1, xmmword ptr [rcx - 1]
448e4a: nop word ptr [rax + rax]
448e50: movaps xmm2, xmmword ptr [rcx + 0xf]
448e54: movaps xmm3, xmmword ptr [rcx + 0x1f]
448e58: movaps xmm6, xmm3
448e5b: movaps xmm4, xmmword ptr [rcx + 0x2f]
448e5f: movaps xmm7, xmm4
448e62: movaps xmm5, xmmword ptr [rcx + 0x3f]
448e66: pminub xmm6, xmm2
448e6a: pminub xmm7, xmm5
448e6e: pminub xmm7, xmm6
448e72: pcmpeqb xmm7, xmm0
448e76: pmovmskb eax, xmm7
448e7a: movaps xmm7, xmm5
448e7d: palignr xmm5, xmm4, 1
448e83: test rax, rax
448e86: palignr xmm4, xmm3, 1
448e8c: jne 0x448d98
448e92: palignr xmm3, xmm2, 1
448e98: lea rcx, [rcx + 0x40]
448e9c: palignr xmm2, xmm1, 1
448ea2: movaps xmm1, xmm7
448ea5: movaps xmmword ptr [rdx + 0x30], xmm5
448ea9: movaps xmmword ptr [rdx + 0x20], xmm4
448ead: movaps xmmword ptr [rdx + 0x10], xmm3
448eb1: movaps xmmword ptr [rdx], xmm2
448eb4: lea rdx, [rdx + 0x40]
448eb8: jmp 0x448e50
448eba: movdqu xmm1, xmmword ptr [rcx - 1]
448ebf: mov rsi, 0xf
448ec6: movdqu xmmword ptr [rdx - 1], xmm1
448ecb: jmp 0x44a070
448ed0: movaps xmm1, xmmword ptr [rcx - 2]
448ed4: movaps xmm2, xmmword ptr [rcx + 0xe]
448ed8: pcmpeqb xmm0, xmm2
448edc: pmovmskb eax, xmm0
448ee0: movaps xmm3, xmm2
448ee3: test rax, rax
448ee6: jne 0x448ffa
448eec: palignr xmm2, xmm1, 2
448ef2: movaps xmmword ptr [rdx], xmm2
448ef5: movaps xmm2, xmmword ptr [rcx + 0x1e]
448ef9: pcmpeqb xmm0, xmm2
448efd: lea rdx, [rdx + 0x10]
448f01: pmovmskb eax, xmm0
448f05: lea rcx, [rcx + 0x10]
448f09: movaps xmm1, xmm2
448f0c: test rax, rax
448f0f: jne 0x448ffa
448f15: palignr xmm2, xmm3, 2
448f1b: movaps xmmword ptr [rdx], xmm2
448f1e: movaps xmm2, xmmword ptr [rcx + 0x1e]
448f22: pcmpeqb xmm0, xmm2
448f26: lea rdx, [rdx + 0x10]
448f2a: pmovmskb eax, xmm0
448f2e: lea rcx, [rcx + 0x10]
448f32: movaps xmm3, xmm2
448f35: test rax, rax
448f38: jne 0x448ffa
448f3e: palignr xmm2, xmm1, 2
448f44: movaps xmmword ptr [rdx], xmm2
448f47: movaps xmm2, xmmword ptr [rcx + 0x1e]
448f4b: pcmpeqb xmm0, xmm2
448f4f: lea rdx, [rdx + 0x10]
448f53: pmovmskb eax, xmm0
448f57: lea rcx, [rcx + 0x10]
448f5b: test rax, rax
448f5e: jne 0x448ffa
448f64: palignr xmm2, xmm3, 2
448f6a: movaps xmmword ptr [rdx], xmm2
448f6d: lea rcx, [rcx + 0x1e]
448f71: lea rdx, [rdx + 0x10]
448f75: mov rax, rcx
448f78: and rcx, 0xffffffffffffffc0
448f7c: sub rax, rcx
448f7f: lea rcx, [rcx - 0xe]
448f83: sub rdx, rax
448f86: movaps xmm1, xmmword ptr [rcx - 2]
448f8a: nop word ptr [rax + rax]
448f90: movaps xmm2, xmmword ptr [rcx + 0xe]
448f94: movaps xmm3, xmmword ptr [rcx + 0x1e]
448f98: movaps xmm6, xmm3
448f9b: movaps xmm4, xmmword ptr [rcx + 0x2e]
448f9f: movaps xmm7, xmm4
448fa2: movaps xmm5, xmmword ptr [rcx + 0x3e]
448fa6: pminub xmm6, xmm2
448faa: pminub xmm7, xmm5
448fae: pminub xmm7, xmm6
448fb2: pcmpeqb xmm7, xmm0
448fb6: pmovmskb eax, xmm7
448fba: movaps xmm7, xmm5
448fbd: palignr xmm5, xmm4, 2
448fc3: test rax, rax
448fc6: palignr xmm4, xmm3, 2
448fcc: jne 0x448ed8
448fd2: palignr xmm3, xmm2, 2
448fd8: lea rcx, [rcx + 0x40]
448fdc: palignr xmm2, xmm1, 2
448fe2: movaps xmm1, xmm7
448fe5: movaps xmmword ptr [rdx + 0x30], xmm5
448fe9: movaps xmmword ptr [rdx + 0x20], xmm4
448fed: movaps xmmword ptr [rdx + 0x10], xmm3
448ff1: movaps xmmword ptr [rdx], xmm2
448ff4: lea rdx, [rdx + 0x40]
448ff8: jmp 0x448f90
448ffa: movdqu xmm1, xmmword ptr [rcx - 2]
448fff: mov rsi, 0xe
449006: movdqu xmmword ptr [rdx - 2], xmm1
44900b: jmp 0x44a070
449010: movaps xmm1, xmmword ptr [rcx - 3]
449014: movaps xmm2, xmmword ptr [rcx + 0xd]
449018: pcmpeqb xmm0, xmm2
44901c: pmovmskb eax, xmm0
449020: movaps xmm3, xmm2
449023: test rax, rax
449026: jne 0x44913a
44902c: palignr xmm2, xmm1, 3
449032: movaps xmmword ptr [rdx], xmm2
449035: movaps xmm2, xmmword ptr [rcx + 0x1d]
449039: pcmpeqb xmm0, xmm2
44903d: lea rdx, [rdx + 0x10]
449041: pmovmskb eax, xmm0
449045: lea rcx, [rcx + 0x10]
449049: movaps xmm1, xmm2
44904c: test rax, rax
44904f: jne 0x44913a
449055: palignr xmm2, xmm3, 3
44905b: movaps xmmword ptr [rdx], xmm2
44905e: movaps xmm2, xmmword ptr [rcx + 0x1d]
449062: pcmpeqb xmm0, xmm2
449066: lea rdx, [rdx + 0x10]
44906a: pmovmskb eax, xmm0
44906e: lea rcx, [rcx + 0x10]
449072: movaps xmm3, xmm2
449075: test rax, rax
449078: jne 0x44913a
44907e: palignr xmm2, xmm1, 3
449084: movaps xmmword ptr [rdx], xmm2
449087: movaps xmm2, xmmword ptr [rcx + 0x1d]
44908b: pcmpeqb xmm0, xmm2
44908f: lea rdx, [rdx + 0x10]
449093: pmovmskb eax, xmm0
449097: lea rcx, [rcx + 0x10]
44909b: test rax, rax
44909e: jne 0x44913a
4490a4: palignr xmm2, xmm3, 3
4490aa: movaps xmmword ptr [rdx], xmm2
4490ad: lea rcx, [rcx + 0x1d]
4490b1: lea rdx, [rdx + 0x10]
4490b5: mov rax, rcx
4490b8: and rcx, 0xffffffffffffffc0
4490bc: sub rax, rcx
4490bf: lea rcx, [rcx - 0xd]
4490c3: sub rdx, rax
4490c6: movaps xmm1, xmmword ptr [rcx - 3]
4490ca: nop word ptr [rax + rax]
4490d0: movaps xmm2, xmmword ptr [rcx + 0xd]
4490d4: movaps xmm3, xmmword ptr [rcx + 0x1d]
4490d8: movaps xmm6, xmm3
4490db: movaps xmm4, xmmword ptr [rcx + 0x2d]
4490df: movaps xmm7, xmm4
4490e2: movaps xmm5, xmmword ptr [rcx + 0x3d]
4490e6: pminub xmm6, xmm2
4490ea: pminub xmm7, xmm5
4490ee: pminub xmm7, xmm6
4490f2: pcmpeqb xmm7, xmm0
4490f6: pmovmskb eax, xmm7
4490fa: movaps xmm7, xmm5
4490fd: palignr xmm5, xmm4, 3
449103: test rax, rax
449106: palignr xmm4, xmm3, 3
44910c: jne 0x449018
449112: palignr xmm3, xmm2, 3
449118: lea rcx, [rcx + 0x40]
44911c: palignr xmm2, xmm1, 3
449122: movaps xmm1, xmm7
449125: movaps xmmword ptr [rdx + 0x30], xmm5
449129: movaps xmmword ptr [rdx + 0x20], xmm4
44912d: movaps xmmword ptr [rdx + 0x10], xmm3
449131: movaps xmmword ptr [rdx], xmm2
449134: lea rdx, [rdx + 0x40]
449138: jmp 0x4490d0
44913a: movdqu xmm1, xmmword ptr [rcx - 3]
44913f: mov rsi, 0xd
449146: movdqu xmmword ptr [rdx - 3], xmm1
44914b: jmp 0x44a070
449150: movaps xmm1, xmmword ptr [rcx - 4]
449154: movaps xmm2, xmmword ptr [rcx + 0xc]
449158: pcmpeqb xmm0, xmm2
44915c: pmovmskb eax, xmm0
449160: movaps xmm3, xmm2
449163: test rax, rax
449166: jne 0x44927a
44916c: palignr xmm2, xmm1, 4
449172: movaps xmmword ptr [rdx], xmm2
449175: movaps xmm2, xmmword ptr [rcx + 0x1c]
449179: pcmpeqb xmm0, xmm2
44917d: lea rdx, [rdx + 0x10]
449181: pmovmskb eax, xmm0
449185: lea rcx, [rcx + 0x10]
449189: movaps xmm1, xmm2
44918c: test rax, rax
44918f: jne 0x44927a
449195: palignr xmm2, xmm3, 4
44919b: movaps xmmword ptr [rdx], xmm2
44919e: movaps xmm2, xmmword ptr [rcx + 0x1c]
4491a2: pcmpeqb xmm0, xmm2
4491a6: lea rdx, [rdx + 0x10]
4491aa: pmovmskb eax, xmm0
4491ae: lea rcx, [rcx + 0x10]
4491b2: movaps xmm3, xmm2
4491b5: test rax, rax
4491b8: jne 0x44927a
4491be: palignr xmm2, xmm1, 4
4491c4: movaps xmmword ptr [rdx], xmm2
4491c7: movaps xmm2, xmmword ptr [rcx + 0x1c]
4491cb: pcmpeqb xmm0, xmm2
4491cf: lea rdx, [rdx + 0x10]
4491d3: pmovmskb eax, xmm0
4491d7: lea rcx, [rcx + 0x10]
4491db: test rax, rax
4491de: jne 0x44927a
4491e4: palignr xmm2, xmm3, 4
4491ea: movaps xmmword ptr [rdx], xmm2
4491ed: lea rcx, [rcx + 0x1c]
4491f1: lea rdx, [rdx + 0x10]
4491f5: mov rax, rcx
4491f8: and rcx, 0xffffffffffffffc0
4491fc: sub rax, rcx
4491ff: lea rcx, [rcx - 0xc]
449203: sub rdx, rax
449206: movaps xmm1, xmmword ptr [rcx - 4]
44920a: nop word ptr [rax + rax]
449210: movaps xmm2, xmmword ptr [rcx + 0xc]
449214: movaps xmm3, xmmword ptr [rcx + 0x1c]
449218: movaps xmm6, xmm3
44921b: movaps xmm4, xmmword ptr [rcx + 0x2c]
44921f: movaps xmm7, xmm4
449222: movaps xmm5, xmmword ptr [rcx + 0x3c]
449226: pminub xmm6, xmm2
44922a: pminub xmm7, xmm5
44922e: pminub xmm7, xmm6
449232: pcmpeqb xmm7, xmm0
449236: pmovmskb eax, xmm7
44923a: movaps xmm7, xmm5
44923d: palignr xmm5, xmm4, 4
449243: test rax, rax
449246: palignr xmm4, xmm3, 4
44924c: jne 0x449158
449252: palignr xmm3, xmm2, 4
449258: lea rcx, [rcx + 0x40]
44925c: palignr xmm2, xmm1, 4
449262: movaps xmm1, xmm7
449265: movaps xmmword ptr [rdx + 0x30], xmm5
449269: movaps xmmword ptr [rdx + 0x20], xmm4
44926d: movaps xmmword ptr [rdx + 0x10], xmm3
449271: movaps xmmword ptr [rdx], xmm2
449274: lea rdx, [rdx + 0x40]
449278: jmp 0x449210
44927a: movdqu xmm1, xmmword ptr [rcx - 4]
44927f: mov rsi, 0xc
449286: movdqu xmmword ptr [rdx - 4], xmm1
44928b: jmp 0x44a070
449290: movaps xmm1, xmmword ptr [rcx - 5]
449294: movaps xmm2, xmmword ptr [rcx + 0xb]
449298: pcmpeqb xmm0, xmm2
44929c: pmovmskb eax, xmm0
4492a0: movaps xmm3, xmm2
4492a3: test rax, rax
4492a6: jne 0x4493ba
4492ac: palignr xmm2, xmm1, 5
4492b2: movaps xmmword ptr [rdx], xmm2
4492b5: movaps xmm2, xmmword ptr [rcx + 0x1b]
4492b9: pcmpeqb xmm0, xmm2
4492bd: lea rdx, [rdx + 0x10]
4492c1: pmovmskb eax, xmm0
4492c5: lea rcx, [rcx + 0x10]
4492c9: movaps xmm1, xmm2
4492cc: test rax, rax
4492cf: jne 0x4493ba
4492d5: palignr xmm2, xmm3, 5
4492db: movaps xmmword ptr [rdx], xmm2
4492de: movaps xmm2, xmmword ptr [rcx + 0x1b]
4492e2: pcmpeqb xmm0, xmm2
4492e6: lea rdx, [rdx + 0x10]
4492ea: pmovmskb eax, xmm0
4492ee: lea rcx, [rcx + 0x10]
4492f2: movaps xmm3, xmm2
4492f5: test rax, rax
4492f8: jne 0x4493ba
4492fe: palignr xmm2, xmm1, 5
449304: movaps xmmword ptr [rdx], xmm2
449307: movaps xmm2, xmmword ptr [rcx + 0x1b]
44930b: pcmpeqb xmm0, xmm2
44930f: lea rdx, [rdx + 0x10]
449313: pmovmskb eax, xmm0
449317: lea rcx, [rcx + 0x10]
44931b: test rax, rax
44931e: jne 0x4493ba
449324: palignr xmm2, xmm3, 5
44932a: movaps xmmword ptr [rdx], xmm2
44932d: lea rcx, [rcx + 0x1b]
449331: lea rdx, [rdx + 0x10]
449335: mov rax, rcx
449338: and rcx, 0xffffffffffffffc0
44933c: sub rax, rcx
44933f: lea rcx, [rcx - 0xb]
449343: sub rdx, rax
449346: movaps xmm1, xmmword ptr [rcx - 5]
44934a: nop word ptr [rax + rax]
449350: movaps xmm2, xmmword ptr [rcx + 0xb]
449354: movaps xmm3, xmmword ptr [rcx + 0x1b]
449358: movaps xmm6, xmm3
44935b: movaps xmm4, xmmword ptr [rcx + 0x2b]
44935f: movaps xmm7, xmm4
449362: movaps xmm5, xmmword ptr [rcx + 0x3b]
449366: pminub xmm6, xmm2
44936a: pminub xmm7, xmm5
44936e: pminub xmm7, xmm6
449372: pcmpeqb xmm7, xmm0
449376: pmovmskb eax, xmm7
44937a: movaps xmm7, xmm5
44937d: palignr xmm5, xmm4, 5
449383: test rax, rax
449386: palignr xmm4, xmm3, 5
44938c: jne 0x449298
449392: palignr xmm3, xmm2, 5
449398: lea rcx, [rcx + 0x40]
44939c: palignr xmm2, xmm1, 5
4493a2: movaps xmm1, xmm7
4493a5: movaps xmmword ptr [rdx + 0x30], xmm5
4493a9: movaps xmmword ptr [rdx + 0x20], xmm4
4493ad: movaps xmmword ptr [rdx + 0x10], xmm3
4493b1: movaps xmmword ptr [rdx], xmm2
4493b4: lea rdx, [rdx + 0x40]
4493b8: jmp 0x449350
4493ba: movdqu xmm1, xmmword ptr [rcx - 5]
4493bf: mov rsi, 0xb
4493c6: movdqu xmmword ptr [rdx - 5], xmm1
4493cb: jmp 0x44a070
4493d0: movaps xmm1, xmmword ptr [rcx - 6]
4493d4: movaps xmm2, xmmword ptr [rcx + 0xa]
4493d8: pcmpeqb xmm0, xmm2
4493dc: pmovmskb eax, xmm0
4493e0: movaps xmm3, xmm2
4493e3: test rax, rax
4493e6: jne 0x4494fa
4493ec: palignr xmm2, xmm1, 6
4493f2: movaps xmmword ptr [rdx], xmm2
4493f5: movaps xmm2, xmmword ptr [rcx + 0x1a]
4493f9: pcmpeqb xmm0, xmm2
4493fd: lea rdx, [rdx + 0x10]
449401: pmovmskb eax, xmm0
449405: lea rcx, [rcx + 0x10]
449409: movaps xmm1, xmm2
44940c: test rax, rax
44940f: jne 0x4494fa
449415: palignr xmm2, xmm3, 6
44941b: movaps xmmword ptr [rdx], xmm2
44941e: movaps xmm2, xmmword ptr [rcx + 0x1a]
449422: pcmpeqb xmm0, xmm2
449426: lea rdx, [rdx + 0x10]
44942a: pmovmskb eax, xmm0
44942e: lea rcx, [rcx + 0x10]
449432: movaps xmm3, xmm2
449435: test rax, rax
449438: jne 0x4494fa
44943e: palignr xmm2, xmm1, 6
449444: movaps xmmword ptr [rdx], xmm2
449447: movaps xmm2, xmmword ptr [rcx + 0x1a]
44944b: pcmpeqb xmm0, xmm2
44944f: lea rdx, [rdx + 0x10]
449453: pmovmskb eax, xmm0
449457: lea rcx, [rcx + 0x10]
44945b: test rax, rax
44945e: jne 0x4494fa
449464: palignr xmm2, xmm3, 6
44946a: movaps xmmword ptr [rdx], xmm2
44946d: lea rcx, [rcx + 0x1a]
449471: lea rdx, [rdx + 0x10]
449475: mov rax, rcx
449478: and rcx, 0xffffffffffffffc0
44947c: sub rax, rcx
44947f: lea rcx, [rcx - 0xa]
449483: sub rdx, rax
449486: movaps xmm1, xmmword ptr [rcx - 6]
44948a: nop word ptr [rax + rax]
449490: movaps xmm2, xmmword ptr [rcx + 0xa]
449494: movaps xmm3, xmmword ptr [rcx + 0x1a]
449498: movaps xmm6, xmm3
44949b: movaps xmm4, xmmword ptr [rcx + 0x2a]
44949f: movaps xmm7, xmm4
4494a2: movaps xmm5, xmmword ptr [rcx + 0x3a]
4494a6: pminub xmm6, xmm2
4494aa: pminub xmm7, xmm5
4494ae: pminub xmm7, xmm6
4494b2: pcmpeqb xmm7, xmm0
4494b6: pmovmskb eax, xmm7
4494ba: movaps xmm7, xmm5
4494bd: palignr xmm5, xmm4, 6
4494c3: test rax, rax
4494c6: palignr xmm4, xmm3, 6
4494cc: jne 0x4493d8
4494d2: palignr xmm3, xmm2, 6
4494d8: lea rcx, [rcx + 0x40]
4494dc: palignr xmm2, xmm1, 6
4494e2: movaps xmm1, xmm7
4494e5: movaps xmmword ptr [rdx + 0x30], xmm5
4494e9: movaps xmmword ptr [rdx + 0x20], xmm4
4494ed: movaps xmmword ptr [rdx + 0x10], xmm3
4494f1: movaps xmmword ptr [rdx], xmm2
4494f4: lea rdx, [rdx + 0x40]
4494f8: jmp 0x449490
4494fa: mov r9, qword ptr [rcx]
4494fd: mov esi, dword ptr [rcx + 6]
449500: mov qword ptr [rdx], r9
449503: mov dword ptr [rdx + 6], esi
449506: mov rsi, 0xa
44950d: jmp 0x44a070
449512: nop word ptr cs:[rax + rax]
44951d: nop dword ptr [rax]
449520: movaps xmm1, xmmword ptr [rcx - 7]
449524: movaps xmm2, xmmword ptr [rcx + 9]
449528: pcmpeqb xmm0, xmm2
44952c: pmovmskb eax, xmm0
449530: movaps xmm3, xmm2
449533: test rax, rax
449536: jne 0x44964a
44953c: palignr xmm2, xmm1, 7
449542: movaps xmmword ptr [rdx], xmm2
449545: movaps xmm2, xmmword ptr [rcx + 0x19]
449549: pcmpeqb xmm0, xmm2
44954d: lea rdx, [rdx + 0x10]
449551: pmovmskb eax, xmm0
449555: lea rcx, [rcx + 0x10]
449559: movaps xmm1, xmm2
44955c: test rax, rax
44955f: jne 0x44964a
449565: palignr xmm2, xmm3, 7
44956b: movaps xmmword ptr [rdx], xmm2
44956e: movaps xmm2, xmmword ptr [rcx + 0x19]
449572: pcmpeqb xmm0, xmm2
449576: lea rdx, [rdx + 0x10]
44957a: pmovmskb eax, xmm0
44957e: lea rcx, [rcx + 0x10]
449582: movaps xmm3, xmm2
449585: test rax, rax
449588: jne 0x44964a
44958e: palignr xmm2, xmm1, 7
449594: movaps xmmword ptr [rdx], xmm2
449597: movaps xmm2, xmmword ptr [rcx + 0x19]
44959b: pcmpeqb xmm0, xmm2
44959f: lea rdx, [rdx + 0x10]
4495a3: pmovmskb eax, xmm0
4495a7: lea rcx, [rcx + 0x10]
4495ab: test rax, rax
4495ae: jne 0x44964a
4495b4: palignr xmm2, xmm3, 7
4495ba: movaps xmmword ptr [rdx], xmm2
4495bd: lea rcx, [rcx + 0x19]
4495c1: lea rdx, [rdx + 0x10]
4495c5: mov rax, rcx
4495c8: and rcx, 0xffffffffffffffc0
4495cc: sub rax, rcx
4495cf: lea rcx, [rcx - 9]
4495d3: sub rdx, rax
4495d6: movaps xmm1, xmmword ptr [rcx - 7]
4495da: nop word ptr [rax + rax]
4495e0: movaps xmm2, xmmword ptr [rcx + 9]
4495e4: movaps xmm3, xmmword ptr [rcx + 0x19]
4495e8: movaps xmm6, xmm3
4495eb: movaps xmm4, xmmword ptr [rcx + 0x29]
4495ef: movaps xmm7, xmm4
4495f2: movaps xmm5, xmmword ptr [rcx + 0x39]
4495f6: pminub xmm6, xmm2
4495fa: pminub xmm7, xmm5
4495fe: pminub xmm7, xmm6
449602: pcmpeqb xmm7, xmm0
449606: pmovmskb eax, xmm7
44960a: movaps xmm7, xmm5
44960d: palignr xmm5, xmm4, 7
449613: test rax, rax
449616: palignr xmm4, xmm3, 7
44961c: jne 0x449528
449622: palignr xmm3, xmm2, 7
449628: lea rcx, [rcx + 0x40]
44962c: palignr xmm2, xmm1, 7
449632: movaps xmm1, xmm7
449635: movaps xmmword ptr [rdx + 0x30], xmm5
449639: movaps xmmword ptr [rdx + 0x20], xmm4
44963d: movaps xmmword ptr [rdx + 0x10], xmm3
449641: movaps xmmword ptr [rdx], xmm2
449644: lea rdx, [rdx + 0x40]
449648: jmp 0x4495e0
44964a: mov r9, qword ptr [rcx]
44964d: mov esi, dword ptr [rcx + 5]
449650: mov qword ptr [rdx], r9
449653: mov dword ptr [rdx + 5], esi
449656: mov rsi, 9
44965d: jmp 0x44a070
449662: nop word ptr cs:[rax + rax]
44966d: nop dword ptr [rax]
449670: movaps xmm1, xmmword ptr [rcx - 8]
449674: movaps xmm2, xmmword ptr [rcx + 8]
449678: pcmpeqb xmm0, xmm2
44967c: pmovmskb eax, xmm0
449680: movaps xmm3, xmm2
449683: test rax, rax
449686: jne 0x44979a
44968c: palignr xmm2, xmm1, 8
449692: movaps xmmword ptr [rdx], xmm2
449695: movaps xmm2, xmmword ptr [rcx + 0x18]
449699: pcmpeqb xmm0, xmm2
44969d: lea rdx, [rdx + 0x10]
4496a1: pmovmskb eax, xmm0
4496a5: lea rcx, [rcx + 0x10]
4496a9: movaps xmm1, xmm2
4496ac: test rax, rax
4496af: jne 0x44979a
4496b5: palignr xmm2, xmm3, 8
4496bb: movaps xmmword ptr [rdx], xmm2
4496be: movaps xmm2, xmmword ptr [rcx + 0x18]
4496c2: pcmpeqb xmm0, xmm2
4496c6: lea rdx, [rdx + 0x10]
4496ca: pmovmskb eax, xmm0
4496ce: lea rcx, [rcx + 0x10]
4496d2: movaps xmm3, xmm2
4496d5: test rax, rax
4496d8: jne 0x44979a
4496de: palignr xmm2, xmm1, 8
4496e4: movaps xmmword ptr [rdx], xmm2
4496e7: movaps xmm2, xmmword ptr [rcx + 0x18]
4496eb: pcmpeqb xmm0, xmm2
4496ef: lea rdx, [rdx + 0x10]
4496f3: pmovmskb eax, xmm0
4496f7: lea rcx, [rcx + 0x10]
4496fb: test rax, rax
4496fe: jne 0x44979a
449704: palignr xmm2, xmm3, 8
44970a: movaps xmmword ptr [rdx], xmm2
44970d: lea rcx, [rcx + 0x18]
449711: lea rdx, [rdx + 0x10]
449715: mov rax, rcx
449718: and rcx, 0xffffffffffffffc0
44971c: sub rax, rcx
44971f: lea rcx, [rcx - 8]
449723: sub rdx, rax
449726: movaps xmm1, xmmword ptr [rcx - 8]
44972a: nop word ptr [rax + rax]
449730: movaps xmm2, xmmword ptr [rcx + 8]
449734: movaps xmm3, xmmword ptr [rcx + 0x18]
449738: movaps xmm6, xmm3
44973b: movaps xmm4, xmmword ptr [rcx + 0x28]
44973f: movaps xmm7, xmm4
449742: movaps xmm5, xmmword ptr [rcx + 0x38]
449746: pminub xmm6, xmm2
44974a: pminub xmm7, xmm5
44974e: pminub xmm7, xmm6
449752: pcmpeqb xmm7, xmm0
449756: pmovmskb eax, xmm7
44975a: movaps xmm7, xmm5
44975d: palignr xmm5, xmm4, 8
449763: test rax, rax
449766: palignr xmm4, xmm3, 8
44976c: jne 0x449678
449772: palignr xmm3, xmm2, 8
449778: lea rcx, [rcx + 0x40]
44977c: palignr xmm2, xmm1, 8
449782: movaps xmm1, xmm7
449785: movaps xmmword ptr [rdx + 0x30], xmm5
449789: movaps xmmword ptr [rdx + 0x20], xmm4
44978d: movaps xmmword ptr [rdx + 0x10], xmm3
449791: movaps xmmword ptr [rdx], xmm2
449794: lea rdx, [rdx + 0x40]
449798: jmp 0x449730
44979a: mov r9, qword ptr [rcx]
44979d: mov rsi, 8
4497a4: mov qword ptr [rdx], r9
4497a7: jmp 0x44a070
4497ac: nop dword ptr [rax]
4497b0: movaps xmm1, xmmword ptr [rcx - 9]
4497b4: movaps xmm2, xmmword ptr [rcx + 7]
4497b8: pcmpeqb xmm0, xmm2
4497bc: pmovmskb eax, xmm0
4497c0: movaps xmm3, xmm2
4497c3: test rax, rax
4497c6: jne 0x4498da
4497cc: palignr xmm2, xmm1, 9
4497d2: movaps xmmword ptr [rdx], xmm2
4497d5: movaps xmm2, xmmword ptr [rcx + 0x17]
4497d9: pcmpeqb xmm0, xmm2
4497dd: lea rdx, [rdx + 0x10]
4497e1: pmovmskb eax, xmm0
4497e5: lea rcx, [rcx + 0x10]
4497e9: movaps xmm1, xmm2
4497ec: test rax, rax
4497ef: jne 0x4498da
4497f5: palignr xmm2, xmm3, 9
4497fb: movaps xmmword ptr [rdx], xmm2
4497fe: movaps xmm2, xmmword ptr [rcx + 0x17]
449802: pcmpeqb xmm0, xmm2
449806: lea rdx, [rdx + 0x10]
44980a: pmovmskb eax, xmm0
44980e: lea rcx, [rcx + 0x10]
449812: movaps xmm3, xmm2
449815: test rax, rax
449818: jne 0x4498da
44981e: palignr xmm2, xmm1, 9
449824: movaps xmmword ptr [rdx], xmm2
449827: movaps xmm2, xmmword ptr [rcx + 0x17]
44982b: pcmpeqb xmm0, xmm2
44982f: lea rdx, [rdx + 0x10]
449833: pmovmskb eax, xmm0
449837: lea rcx, [rcx + 0x10]
44983b: test rax, rax
44983e: jne 0x4498da
449844: palignr xmm2, xmm3, 9
44984a: movaps xmmword ptr [rdx], xmm2
44984d: lea rcx, [rcx + 0x17]
449851: lea rdx, [rdx + 0x10]
449855: mov rax, rcx
449858: and rcx, 0xffffffffffffffc0
44985c: sub rax, rcx
44985f: lea rcx, [rcx - 7]
449863: sub rdx, rax
449866: movaps xmm1, xmmword ptr [rcx - 9]
44986a: nop word ptr [rax + rax]
449870: movaps xmm2, xmmword ptr [rcx + 7]
449874: movaps xmm3, xmmword ptr [rcx + 0x17]
449878: movaps xmm6, xmm3
44987b: movaps xmm4, xmmword ptr [rcx + 0x27]
44987f: movaps xmm7, xmm4
449882: movaps xmm5, xmmword ptr [rcx + 0x37]
449886: pminub xmm6, xmm2
44988a: pminub xmm7, xmm5
44988e: pminub xmm7, xmm6
449892: pcmpeqb xmm7, xmm0
449896: pmovmskb eax, xmm7
44989a: movaps xmm7, xmm5
44989d: palignr xmm5, xmm4, 9
4498a3: test rax, rax
4498a6: palignr xmm4, xmm3, 9
4498ac: jne 0x4497b8
4498b2: palignr xmm3, xmm2, 9
4498b8: lea rcx, [rcx + 0x40]
4498bc: palignr xmm2, xmm1, 9
4498c2: movaps xmm1, xmm7
4498c5: movaps xmmword ptr [rdx + 0x30], xmm5
4498c9: movaps xmmword ptr [rdx + 0x20], xmm4
4498cd: movaps xmmword ptr [rdx + 0x10], xmm3
4498d1: movaps xmmword ptr [rdx], xmm2
4498d4: lea rdx, [rdx + 0x40]
4498d8: jmp 0x449870
4498da: mov r9, qword ptr [rcx - 1]
4498de: mov rsi, 7
4498e5: mov qword ptr [rdx - 1], r9
4498e9: jmp 0x44a070
4498ee: nop 
4498f0: movaps xmm1, xmmword ptr [rcx - 0xa]
4498f4: movaps xmm2, xmmword ptr [rcx + 6]
4498f8: pcmpeqb xmm0, xmm2
4498fc: pmovmskb eax, xmm0
449900: movaps xmm3, xmm2
449903: test rax, rax
449906: jne 0x449a1a
44990c: palignr xmm2, xmm1, 0xa
449912: movaps xmmword ptr [rdx], xmm2
449915: movaps xmm2, xmmword ptr [rcx + 0x16]
449919: pcmpeqb xmm0, xmm2
44991d: lea rdx, [rdx + 0x10]
449921: pmovmskb eax, xmm0
449925: lea rcx, [rcx + 0x10]
449929: movaps xmm1, xmm2
44992c: test rax, rax
44992f: jne 0x449a1a
449935: palignr xmm2, xmm3, 0xa
44993b: movaps xmmword ptr [rdx], xmm2
44993e: movaps xmm2, xmmword ptr [rcx + 0x16]
449942: pcmpeqb xmm0, xmm2
449946: lea rdx, [rdx + 0x10]
44994a: pmovmskb eax, xmm0
44994e: lea rcx, [rcx + 0x10]
449952: movaps xmm3, xmm2
449955: test rax, rax
449958: jne 0x449a1a
44995e: palignr xmm2, xmm1, 0xa
449964: movaps xmmword ptr [rdx], xmm2
449967: movaps xmm2, xmmword ptr [rcx + 0x16]
44996b: pcmpeqb xmm0, xmm2
44996f: lea rdx, [rdx + 0x10]
449973: pmovmskb eax, xmm0
449977: lea rcx, [rcx + 0x10]
44997b: test rax, rax
44997e: jne 0x449a1a
449984: palignr xmm2, xmm3, 0xa
44998a: movaps xmmword ptr [rdx], xmm2
44998d: lea rcx, [rcx + 0x16]
449991: lea rdx, [rdx + 0x10]
449995: mov rax, rcx
449998: and rcx, 0xffffffffffffffc0
44999c: sub rax, rcx
44999f: lea rcx, [rcx - 6]
4499a3: sub rdx, rax
4499a6: movaps xmm1, xmmword ptr [rcx - 0xa]
4499aa: nop word ptr [rax + rax]
4499b0: movaps xmm2, xmmword ptr [rcx + 6]
4499b4: movaps xmm3, xmmword ptr [rcx + 0x16]
4499b8: movaps xmm6, xmm3
4499bb: movaps xmm4, xmmword ptr [rcx + 0x26]
4499bf: movaps xmm7, xmm4
4499c2: movaps xmm5, xmmword ptr [rcx + 0x36]
4499c6: pminub xmm6, xmm2
4499ca: pminub xmm7, xmm5
4499ce: pminub xmm7, xmm6
4499d2: pcmpeqb xmm7, xmm0
4499d6: pmovmskb eax, xmm7
4499da: movaps xmm7, xmm5
4499dd: palignr xmm5, xmm4, 0xa
4499e3: test rax, rax
4499e6: palignr xmm4, xmm3, 0xa
4499ec: jne 0x4498f8
4499f2: palignr xmm3, xmm2, 0xa
4499f8: lea rcx, [rcx + 0x40]
4499fc: palignr xmm2, xmm1, 0xa
449a02: movaps xmm1, xmm7
449a05: movaps xmmword ptr [rdx + 0x30], xmm5
449a09: movaps xmmword ptr [rdx + 0x20], xmm4
449a0d: movaps xmmword ptr [rdx + 0x10], xmm3
449a11: movaps xmmword ptr [rdx], xmm2
449a14: lea rdx, [rdx + 0x40]
449a18: jmp 0x4499b0
449a1a: mov r9, qword ptr [rcx - 2]
449a1e: mov rsi, 6
449a25: mov qword ptr [rdx - 2], r9
449a29: jmp 0x44a070
449a2e: nop 
449a30: movaps xmm1, xmmword ptr [rcx - 0xb]
449a34: movaps xmm2, xmmword ptr [rcx + 5]
449a38: pcmpeqb xmm0, xmm2
449a3c: pmovmskb eax, xmm0
449a40: movaps xmm3, xmm2
449a43: test rax, rax
449a46: jne 0x449b5a
449a4c: palignr xmm2, xmm1, 0xb
449a52: movaps xmmword ptr [rdx], xmm2
449a55: movaps xmm2, xmmword ptr [rcx + 0x15]
449a59: pcmpeqb xmm0, xmm2
449a5d: lea rdx, [rdx + 0x10]
449a61: pmovmskb eax, xmm0
449a65: lea rcx, [rcx + 0x10]
449a69: movaps xmm1, xmm2
449a6c: test rax, rax
449a6f: jne 0x449b5a
449a75: palignr xmm2, xmm3, 0xb
449a7b: movaps xmmword ptr [rdx], xmm2
449a7e: movaps xmm2, xmmword ptr [rcx + 0x15]
449a82: pcmpeqb xmm0, xmm2
449a86: lea rdx, [rdx + 0x10]
449a8a: pmovmskb eax, xmm0
449a8e: lea rcx, [rcx + 0x10]
449a92: movaps xmm3, xmm2
449a95: test rax, rax
449a98: jne 0x449b5a
449a9e: palignr xmm2, xmm1, 0xb
449aa4: movaps xmmword ptr [rdx], xmm2
449aa7: movaps xmm2, xmmword ptr [rcx + 0x15]
449aab: pcmpeqb xmm0, xmm2
449aaf: lea rdx, [rdx + 0x10]
449ab3: pmovmskb eax, xmm0
449ab7: lea rcx, [rcx + 0x10]
449abb: test rax, rax
449abe: jne 0x449b5a
449ac4: palignr xmm2, xmm3, 0xb
449aca: movaps xmmword ptr [rdx], xmm2
449acd: lea rcx, [rcx + 0x15]
449ad1: lea rdx, [rdx + 0x10]
449ad5: mov rax, rcx
449ad8: and rcx, 0xffffffffffffffc0
449adc: sub rax, rcx
449adf: lea rcx, [rcx - 5]
449ae3: sub rdx, rax
449ae6: movaps xmm1, xmmword ptr [rcx - 0xb]
449aea: nop word ptr [rax + rax]
449af0: movaps xmm2, xmmword ptr [rcx + 5]
449af4: movaps xmm3, xmmword ptr [rcx + 0x15]
449af8: movaps xmm6, xmm3
449afb: movaps xmm4, xmmword ptr [rcx + 0x25]
449aff: movaps xmm7, xmm4
449b02: movaps xmm5, xmmword ptr [rcx + 0x35]
449b06: pminub xmm6, xmm2
449b0a: pminub xmm7, xmm5
449b0e: pminub xmm7, xmm6
449b12: pcmpeqb xmm7, xmm0
449b16: pmovmskb eax, xmm7
449b1a: movaps xmm7, xmm5
449b1d: palignr xmm5, xmm4, 0xb
449b23: test rax, rax
449b26: palignr xmm4, xmm3, 0xb
449b2c: jne 0x449a38
449b32: palignr xmm3, xmm2, 0xb
449b38: lea rcx, [rcx + 0x40]
449b3c: palignr xmm2, xmm1, 0xb
449b42: movaps xmm1, xmm7
449b45: movaps xmmword ptr [rdx + 0x30], xmm5
449b49: movaps xmmword ptr [rdx + 0x20], xmm4
449b4d: movaps xmmword ptr [rdx + 0x10], xmm3
449b51: movaps xmmword ptr [rdx], xmm2
449b54: lea rdx, [rdx + 0x40]
449b58: jmp 0x449af0
449b5a: mov r9, qword ptr [rcx - 3]
449b5e: mov rsi, 5
449b65: mov qword ptr [rdx - 3], r9
449b69: jmp 0x44a070
449b6e: nop 
449b70: movaps xmm1, xmmword ptr [rcx - 0xc]
449b74: movaps xmm2, xmmword ptr [rcx + 4]
449b78: pcmpeqb xmm0, xmm2
449b7c: pmovmskb eax, xmm0
449b80: movaps xmm3, xmm2
449b83: test rax, rax
449b86: jne 0x449c9a
449b8c: palignr xmm2, xmm1, 0xc
449b92: movaps xmmword ptr [rdx], xmm2
449b95: movaps xmm2, xmmword ptr [rcx + 0x14]
449b99: pcmpeqb xmm0, xmm2
449b9d: lea rdx, [rdx + 0x10]
449ba1: pmovmskb eax, xmm0
449ba5: lea rcx, [rcx + 0x10]
449ba9: movaps xmm1, xmm2
449bac: test rax, rax
449baf: jne 0x449c9a
449bb5: palignr xmm2, xmm3, 0xc
449bbb: movaps xmmword ptr [rdx], xmm2
449bbe: movaps xmm2, xmmword ptr [rcx + 0x14]
449bc2: pcmpeqb xmm0, xmm2
449bc6: lea rdx, [rdx + 0x10]
449bca: pmovmskb eax, xmm0
449bce: lea rcx, [rcx + 0x10]
449bd2: movaps xmm3, xmm2
449bd5: test rax, rax
449bd8: jne 0x449c9a
449bde: palignr xmm2, xmm1, 0xc
449be4: movaps xmmword ptr [rdx], xmm2
449be7: movaps xmm2, xmmword ptr [rcx + 0x14]
449beb: pcmpeqb xmm0, xmm2
449bef: lea rdx, [rdx + 0x10]
449bf3: pmovmskb eax, xmm0
449bf7: lea rcx, [rcx + 0x10]
449bfb: test rax, rax
449bfe: jne 0x449c9a
449c04: palignr xmm2, xmm3, 0xc
449c0a: movaps xmmword ptr [rdx], xmm2
449c0d: lea rcx, [rcx + 0x14]
449c11: lea rdx, [rdx + 0x10]
449c15: mov rax, rcx
449c18: and rcx, 0xffffffffffffffc0
449c1c: sub rax, rcx
449c1f: lea rcx, [rcx - 4]
449c23: sub rdx, rax
449c26: movaps xmm1, xmmword ptr [rcx - 0xc]
449c2a: nop word ptr [rax + rax]
449c30: movaps xmm2, xmmword ptr [rcx + 4]
449c34: movaps xmm3, xmmword ptr [rcx + 0x14]
449c38: movaps xmm6, xmm3
449c3b: movaps xmm4, xmmword ptr [rcx + 0x24]
449c3f: movaps xmm7, xmm4
449c42: movaps xmm5, xmmword ptr [rcx + 0x34]
449c46: pminub xmm6, xmm2
449c4a: pminub xmm7, xmm5
449c4e: pminub xmm7, xmm6
449c52: pcmpeqb xmm7, xmm0
449c56: pmovmskb eax, xmm7
449c5a: movaps xmm7, xmm5
449c5d: palignr xmm5, xmm4, 0xc
449c63: test rax, rax
449c66: palignr xmm4, xmm3, 0xc
449c6c: jne 0x449b78
449c72: palignr xmm3, xmm2, 0xc
449c78: lea rcx, [rcx + 0x40]
449c7c: palignr xmm2, xmm1, 0xc
449c82: movaps xmm1, xmm7
449c85: movaps xmmword ptr [rdx + 0x30], xmm5
449c89: movaps xmmword ptr [rdx + 0x20], xmm4
449c8d: movaps xmmword ptr [rdx + 0x10], xmm3
449c91: movaps xmmword ptr [rdx], xmm2
449c94: lea rdx, [rdx + 0x40]
449c98: jmp 0x449c30
449c9a: mov r9d, dword ptr [rcx]
449c9d: mov rsi, 4
449ca4: mov dword ptr [rdx], r9d
449ca7: jmp 0x44a070
449cac: nop dword ptr [rax]
449cb0: movaps xmm1, xmmword ptr [rcx - 0xd]
449cb4: movaps xmm2, xmmword ptr [rcx + 3]
449cb8: pcmpeqb xmm0, xmm2
449cbc: pmovmskb eax, xmm0
449cc0: movaps xmm3, xmm2
449cc3: test rax, rax
449cc6: jne 0x449dda
449ccc: palignr xmm2, xmm1, 0xd
449cd2: movaps xmmword ptr [rdx], xmm2
449cd5: movaps xmm2, xmmword ptr [rcx + 0x13]
449cd9: pcmpeqb xmm0, xmm2
449cdd: lea rdx, [rdx + 0x10]
449ce1: pmovmskb eax, xmm0
449ce5: lea rcx, [rcx + 0x10]
449ce9: movaps xmm1, xmm2
449cec: test rax, rax
449cef: jne 0x449dda
449cf5: palignr xmm2, xmm3, 0xd
449cfb: movaps xmmword ptr [rdx], xmm2
449cfe: movaps xmm2, xmmword ptr [rcx + 0x13]
449d02: pcmpeqb xmm0, xmm2
449d06: lea rdx, [rdx + 0x10]
449d0a: pmovmskb eax, xmm0
449d0e: lea rcx, [rcx + 0x10]
449d12: movaps xmm3, xmm2
449d15: test rax, rax
449d18: jne 0x449dda
449d1e: palignr xmm2, xmm1, 0xd
449d24: movaps xmmword ptr [rdx], xmm2
449d27: movaps xmm2, xmmword ptr [rcx + 0x13]
449d2b: pcmpeqb xmm0, xmm2
449d2f: lea rdx, [rdx + 0x10]
449d33: pmovmskb eax, xmm0
449d37: lea rcx, [rcx + 0x10]
449d3b: test rax, rax
449d3e: jne 0x449dda
449d44: palignr xmm2, xmm3, 0xd
449d4a: movaps xmmword ptr [rdx], xmm2
449d4d: lea rcx, [rcx + 0x13]
449d51: lea rdx, [rdx + 0x10]
449d55: mov rax, rcx
449d58: and rcx, 0xffffffffffffffc0
449d5c: sub rax, rcx
449d5f: lea rcx, [rcx - 3]
449d63: sub rdx, rax
449d66: movaps xmm1, xmmword ptr [rcx - 0xd]
449d6a: nop word ptr [rax + rax]
449d70: movaps xmm2, xmmword ptr [rcx + 3]
449d74: movaps xmm3, xmmword ptr [rcx + 0x13]
449d78: movaps xmm6, xmm3
449d7b: movaps xmm4, xmmword ptr [rcx + 0x23]
449d7f: movaps xmm7, xmm4
449d82: movaps xmm5, xmmword ptr [rcx + 0x33]
449d86: pminub xmm6, xmm2
449d8a: pminub xmm7, xmm5
449d8e: pminub xmm7, xmm6
449d92: pcmpeqb xmm7, xmm0
449d96: pmovmskb eax, xmm7
449d9a: movaps xmm7, xmm5
449d9d: palignr xmm5, xmm4, 0xd
449da3: test rax, rax
449da6: palignr xmm4, xmm3, 0xd
449dac: jne 0x449cb8
449db2: palignr xmm3, xmm2, 0xd
449db8: lea rcx, [rcx + 0x40]
449dbc: palignr xmm2, xmm1, 0xd
449dc2: movaps xmm1, xmm7
449dc5: movaps xmmword ptr [rdx + 0x30], xmm5
449dc9: movaps xmmword ptr [rdx + 0x20], xmm4
449dcd: movaps xmmword ptr [rdx + 0x10], xmm3
449dd1: movaps xmmword ptr [rdx], xmm2
449dd4: lea rdx, [rdx + 0x40]
449dd8: jmp 0x449d70
449dda: mov r9d, dword ptr [rcx - 1]
449dde: mov rsi, 3
449de5: mov dword ptr [rdx - 1], r9d
449de9: jmp 0x44a070
449dee: nop 
449df0: movaps xmm1, xmmword ptr [rcx - 0xe]
449df4: movaps xmm2, xmmword ptr [rcx + 2]
449df8: pcmpeqb xmm0, xmm2
449dfc: pmovmskb eax, xmm0
449e00: movaps xmm3, xmm2
449e03: test rax, rax
449e06: jne 0x449f1a
449e0c: palignr xmm2, xmm1, 0xe
449e12: movaps xmmword ptr [rdx], xmm2
449e15: movaps xmm2, xmmword ptr [rcx + 0x12]
449e19: pcmpeqb xmm0, xmm2
449e1d: lea rdx, [rdx + 0x10]
449e21: pmovmskb eax, xmm0
449e25: lea rcx, [rcx + 0x10]
449e29: movaps xmm1, xmm2
449e2c: test rax, rax
449e2f: jne 0x449f1a
449e35: palignr xmm2, xmm3, 0xe
449e3b: movaps xmmword ptr [rdx], xmm2
449e3e: movaps xmm2, xmmword ptr [rcx + 0x12]
449e42: pcmpeqb xmm0, xmm2
449e46: lea rdx, [rdx + 0x10]
449e4a: pmovmskb eax, xmm0
449e4e: lea rcx, [rcx + 0x10]
449e52: movaps xmm3, xmm2
449e55: test rax, rax
449e58: jne 0x449f1a
449e5e: palignr xmm2, xmm1, 0xe
449e64: movaps xmmword ptr [rdx], xmm2
449e67: movaps xmm2, xmmword ptr [rcx + 0x12]
449e6b: pcmpeqb xmm0, xmm2
449e6f: lea rdx, [rdx + 0x10]
449e73: pmovmskb eax, xmm0
449e77: lea rcx, [rcx + 0x10]
449e7b: test rax, rax
449e7e: jne 0x449f1a
449e84: palignr xmm2, xmm3, 0xe
449e8a: movaps xmmword ptr [rdx], xmm2
449e8d: lea rcx, [rcx + 0x12]
449e91: lea rdx, [rdx + 0x10]
449e95: mov rax, rcx
449e98: and rcx, 0xffffffffffffffc0
449e9c: sub rax, rcx
449e9f: lea rcx, [rcx - 2]
449ea3: sub rdx, rax
449ea6: movaps xmm1, xmmword ptr [rcx - 0xe]
449eaa: nop word ptr [rax + rax]
449eb0: movaps xmm2, xmmword ptr [rcx + 2]
449eb4: movaps xmm3, xmmword ptr [rcx + 0x12]
449eb8: movaps xmm6, xmm3
449ebb: movaps xmm4, xmmword ptr [rcx + 0x22]
449ebf: movaps xmm7, xmm4
449ec2: movaps xmm5, xmmword ptr [rcx + 0x32]
449ec6: pminub xmm6, xmm2
449eca: pminub xmm7, xmm5
449ece: pminub xmm7, xmm6
449ed2: pcmpeqb xmm7, xmm0
449ed6: pmovmskb eax, xmm7
449eda: movaps xmm7, xmm5
449edd: palignr xmm5, xmm4, 0xe
449ee3: test rax, rax
449ee6: palignr xmm4, xmm3, 0xe
449eec: jne 0x449df8
449ef2: palignr xmm3, xmm2, 0xe
449ef8: lea rcx, [rcx + 0x40]
449efc: palignr xmm2, xmm1, 0xe
449f02: movaps xmm1, xmm7
449f05: movaps xmmword ptr [rdx + 0x30], xmm5
449f09: movaps xmmword ptr [rdx + 0x20], xmm4
449f0d: movaps xmmword ptr [rdx + 0x10], xmm3
449f11: movaps xmmword ptr [rdx], xmm2
449f14: lea rdx, [rdx + 0x40]
449f18: jmp 0x449eb0
449f1a: mov r9d, dword ptr [rcx - 2]
449f1e: mov rsi, 2
449f25: mov dword ptr [rdx - 2], r9d
449f29: jmp 0x44a070
449f2e: nop 
449f30: movaps xmm1, xmmword ptr [rcx - 0xf]
449f34: movaps xmm2, xmmword ptr [rcx + 1]
449f38: pcmpeqb xmm0, xmm2
449f3c: pmovmskb eax, xmm0
449f40: movaps xmm3, xmm2
449f43: test rax, rax
449f46: jne 0x44a05a
449f4c: palignr xmm2, xmm1, 0xf
449f52: movaps xmmword ptr [rdx], xmm2
449f55: movaps xmm2, xmmword ptr [rcx + 0x11]
449f59: pcmpeqb xmm0, xmm2
449f5d: lea rdx, [rdx + 0x10]
449f61: pmovmskb eax, xmm0
449f65: lea rcx, [rcx + 0x10]
449f69: movaps xmm1, xmm2
449f6c: test rax, rax
449f6f: jne 0x44a05a
449f75: palignr xmm2, xmm3, 0xf
449f7b: movaps xmmword ptr [rdx], xmm2
449f7e: movaps xmm2, xmmword ptr [rcx + 0x11]
449f82: pcmpeqb xmm0, xmm2
449f86: lea rdx, [rdx + 0x10]
449f8a: pmovmskb eax, xmm0
449f8e: lea rcx, [rcx + 0x10]
449f92: movaps xmm3, xmm2
449f95: test rax, rax
449f98: jne 0x44a05a
449f9e: palignr xmm2, xmm1, 0xf
449fa4: movaps xmmword ptr [rdx], xmm2
449fa7: movaps xmm2, xmmword ptr [rcx + 0x11]
449fab: pcmpeqb xmm0, xmm2
449faf: lea rdx, [rdx + 0x10]
449fb3: pmovmskb eax, xmm0
449fb7: lea rcx, [rcx + 0x10]
449fbb: test rax, rax
449fbe: jne 0x44a05a
449fc4: palignr xmm2, xmm3, 0xf
449fca: movaps xmmword ptr [rdx], xmm2
449fcd: lea rcx, [rcx + 0x11]
449fd1: lea rdx, [rdx + 0x10]
449fd5: mov rax, rcx
449fd8: and rcx, 0xffffffffffffffc0
449fdc: sub rax, rcx
449fdf: lea rcx, [rcx - 1]
449fe3: sub rdx, rax
449fe6: movaps xmm1, xmmword ptr [rcx - 0xf]
449fea: nop word ptr [rax + rax]
449ff0: movaps xmm2, xmmword ptr [rcx + 1]
449ff4: movaps xmm3, xmmword ptr [rcx + 0x11]
449ff8: movaps xmm6, xmm3
449ffb: movaps xmm4, xmmword ptr [rcx + 0x21]
449fff: movaps xmm7, xmm4
44a002: movaps xmm5, xmmword ptr [rcx + 0x31]
44a006: pminub xmm6, xmm2
44a00a: pminub xmm7, xmm5
44a00e: pminub xmm7, xmm6
44a012: pcmpeqb xmm7, xmm0
44a016: pmovmskb eax, xmm7
44a01a: movaps xmm7, xmm5
44a01d: palignr xmm5, xmm4, 0xf
44a023: test rax, rax
44a026: palignr xmm4, xmm3, 0xf
44a02c: jne 0x449f38
44a032: palignr xmm3, xmm2, 0xf
44a038: lea rcx, [rcx + 0x40]
44a03c: palignr xmm2, xmm1, 0xf
44a042: movaps xmm1, xmm7
44a045: movaps xmmword ptr [rdx + 0x30], xmm5
44a049: movaps xmmword ptr [rdx + 0x20], xmm4
44a04d: movaps xmmword ptr [rdx + 0x10], xmm3
44a051: movaps xmmword ptr [rdx], xmm2
44a054: lea rdx, [rdx + 0x40]
44a058: jmp 0x449ff0
44a05a: mov r9d, dword ptr [rcx - 3]
44a05e: mov rsi, 1
44a065: mov dword ptr [rdx - 3], r9d
44a069: nop dword ptr [rax]
44a070: add rdx, rsi
44a073: add rcx, rsi
44a076: test al, al
44a078: je 0x44a0d0
44a07a: test al, 1
44a07c: jne 0x44a130
44a082: test al, 2
44a084: jne 0x44a140
44a08a: test al, 4
44a08c: jne 0x44a150
44a092: test al, 8
44a094: jne 0x44a170
44a09a: test al, 0x10
44a09c: jne 0x44a180
44a0a2: test al, 0x20
44a0a4: jne 0x44a190
44a0aa: test al, 0x40
44a0ac: jne 0x44a1b0
44a0b2: nop word ptr cs:[rax + rax]
44a0bd: nop dword ptr [rax]
44a0c0: mov rax, qword ptr [rcx]
44a0c3: mov qword ptr [rdx], rax
44a0c6: lea rax, [rdx + 7]
44a0ca: ret 
44a0cb: nop dword ptr [rax + rax]
44a0d0: test ah, 1
44a0d3: jne 0x44a1c0
44a0d9: test ah, 2
44a0dc: jne 0x44a1e0
44a0e2: test ah, 4
44a0e5: jne 0x44a200
44a0eb: test ah, 8
44a0ee: jne 0x44a220
44a0f4: test ah, 0x10
44a0f7: jne 0x44a240
44a0fd: test ah, 0x20
44a100: jne 0x44a260
44a106: test ah, 0x40
44a109: jne 0x44a280
44a10f: nop 
44a110: mov rax, qword ptr [rcx]
44a113: mov qword ptr [rdx], rax
44a116: mov rax, qword ptr [rcx + 8]
44a11a: mov qword ptr [rdx + 8], rax
44a11e: lea rax, [rdx + 0xf]
44a122: ret 
44a123: nop word ptr cs:[rax + rax]
44a12e: nop 
44a130: mov al, byte ptr [rcx]
44a132: mov byte ptr [rdx], al
44a134: lea rax, [rdx]
44a137: ret 
44a138: nop dword ptr [rax + rax]
44a140: mov ax, word ptr [rcx]
44a143: mov word ptr [rdx], ax
44a146: lea rax, [rdx + 1]
44a14a: ret 
44a14b: nop dword ptr [rax + rax]
44a150: mov ax, word ptr [rcx]
44a153: mov word ptr [rdx], ax
44a156: mov al, byte ptr [rcx + 2]
44a159: mov byte ptr [rdx + 2], al
44a15c: lea rax, [rdx + 2]
44a160: ret 
44a161: nop word ptr cs:[rax + rax]
44a16c: nop dword ptr [rax]
44a170: mov eax, dword ptr [rcx]
44a172: mov dword ptr [rdx], eax
44a174: lea rax, [rdx + 3]
44a178: ret 
44a179: nop dword ptr [rax]
44a180: mov eax, dword ptr [rcx]
44a182: mov dword ptr [rdx], eax
44a184: mov al, byte ptr [rcx + 4]
44a187: mov byte ptr [rdx + 4], al
44a18a: lea rax, [rdx + 4]
44a18e: ret 
44a18f: nop 
44a190: mov eax, dword ptr [rcx]
44a192: mov dword ptr [rdx], eax
44a194: mov ax, word ptr [rcx + 4]
44a198: mov word ptr [rdx + 4], ax
44a19c: lea rax, [rdx + 5]
44a1a0: ret 
44a1a1: nop word ptr cs:[rax + rax]
44a1ac: nop dword ptr [rax]
44a1b0: mov eax, dword ptr [rcx]
44a1b2: mov dword ptr [rdx], eax
44a1b4: mov eax, dword ptr [rcx + 3]
44a1b7: mov dword ptr [rdx + 3], eax
44a1ba: lea rax, [rdx + 6]
44a1be: ret 
44a1bf: nop 
44a1c0: mov rax, qword ptr [rcx]
44a1c3: mov qword ptr [rdx], rax
44a1c6: mov eax, dword ptr [rcx + 5]
44a1c9: mov dword ptr [rdx + 5], eax
44a1cc: lea rax, [rdx + 8]
44a1d0: ret 
44a1d1: nop word ptr cs:[rax + rax]
44a1dc: nop dword ptr [rax]
44a1e0: mov rax, qword ptr [rcx]
44a1e3: mov qword ptr [rdx], rax
44a1e6: mov eax, dword ptr [rcx + 6]
44a1e9: mov dword ptr [rdx + 6], eax
44a1ec: lea rax, [rdx + 9]
44a1f0: ret 
44a1f1: nop word ptr cs:[rax + rax]
44a1fc: nop dword ptr [rax]
44a200: mov rax, qword ptr [rcx]
44a203: mov qword ptr [rdx], rax
44a206: mov eax, dword ptr [rcx + 7]
44a209: mov dword ptr [rdx + 7], eax
44a20c: lea rax, [rdx + 0xa]
44a210: ret 
44a211: nop word ptr cs:[rax + rax]
44a21c: nop dword ptr [rax]
44a220: mov rax, qword ptr [rcx]
44a223: mov qword ptr [rdx], rax
44a226: mov eax, dword ptr [rcx + 8]
44a229: mov dword ptr [rdx + 8], eax
44a22c: lea rax, [rdx + 0xb]
44a230: ret 
44a231: nop word ptr cs:[rax + rax]
44a23c: nop dword ptr [rax]
44a240: mov rax, qword ptr [rcx]
44a243: mov qword ptr [rdx], rax
44a246: mov rax, qword ptr [rcx + 5]
44a24a: mov qword ptr [rdx + 5], rax
44a24e: lea rax, [rdx + 0xc]
44a252: ret 
44a253: nop word ptr cs:[rax + rax]
44a25e: nop 
44a260: mov rax, qword ptr [rcx]
44a263: mov qword ptr [rdx], rax
44a266: mov rax, qword ptr [rcx + 6]
44a26a: mov qword ptr [rdx + 6], rax
44a26e: lea rax, [rdx + 0xd]
44a272: ret 
44a273: nop word ptr cs:[rax + rax]
44a27e: nop 
44a280: mov rax, qword ptr [rcx]
44a283: mov qword ptr [rdx], rax
44a286: mov rax, qword ptr [rcx + 7]
44a28a: mov qword ptr [rdx + 7], rax
44a28e: lea rax, [rdx + 0xe]
44a292: ret 
44a293: nop word ptr cs:[rax + rax]
44a29d: nop dword ptr [rax]
44a2a0: endbr64 
44a2a4: mov rcx, rsi
44a2a7: mov rax, rdi
44a2aa: and rcx, 0x3f
44a2ae: cmp rcx, 0x20
44a2b2: jbe 0x44a4c4
44a2b8: and rsi, 0xfffffffffffffff0
44a2bc: and rcx, 0xf
44a2c0: pxor xmm0, xmm0
44a2c4: pxor xmm1, xmm1
44a2c8: pcmpeqb xmm1, xmmword ptr [rsi]
44a2cc: pmovmskb edx, xmm1
44a2d0: shr rdx, cl
44a2d3: test rdx, rdx
44a2d6: jne 0x44a520
44a2dc: pcmpeqb xmm0, xmmword ptr [rsi + 0x10]
44a2e1: pmovmskb edx, xmm0
44a2e5: test rdx, rdx
44a2e8: jne 0x44a560
44a2ee: movdqu xmm1, xmmword ptr [rsi + rcx]
44a2f3: movdqu xmmword ptr [rdi], xmm1
44a2f7: nop word ptr [rax + rax]
44a300: sub rdi, rcx
44a303: mov rcx, 0x10
44a30a: movdqa xmm1, xmmword ptr [rsi + rcx]
44a30f: movaps xmm2, xmmword ptr [rsi + rcx + 0x10]
44a314: movdqu xmmword ptr [rdi + rcx], xmm1
44a319: pcmpeqb xmm0, xmm2
44a31d: pmovmskb edx, xmm0
44a321: add rcx, 0x10
44a325: test rdx, rdx
44a328: jne 0x44a500
44a32e: movaps xmm3, xmmword ptr [rsi + rcx + 0x10]
44a333: movdqu xmmword ptr [rdi + rcx], xmm2
44a338: pcmpeqb xmm0, xmm3
44a33c: pmovmskb edx, xmm0
44a340: add rcx, 0x10
44a344: test rdx, rdx
44a347: jne 0x44a500
44a34d: movaps xmm4, xmmword ptr [rsi + rcx + 0x10]
44a352: movdqu xmmword ptr [rdi + rcx], xmm3
44a357: pcmpeqb xmm0, xmm4
44a35b: pmovmskb edx, xmm0
44a35f: add rcx, 0x10
44a363: test rdx, rdx
44a366: jne 0x44a500
44a36c: movaps xmm1, xmmword ptr [rsi + rcx + 0x10]
44a371: movdqu xmmword ptr [rdi + rcx], xmm4
44a376: pcmpeqb xmm0, xmm1
44a37a: pmovmskb edx, xmm0
44a37e: add rcx, 0x10
44a382: test rdx, rdx
44a385: jne 0x44a500
44a38b: movaps xmm2, xmmword ptr [rsi + rcx + 0x10]
44a390: movdqu xmmword ptr [rdi + rcx], xmm1
44a395: pcmpeqb xmm0, xmm2
44a399: pmovmskb edx, xmm0
44a39d: add rcx, 0x10
44a3a1: test rdx, rdx
44a3a4: jne 0x44a500
44a3aa: movaps xmm3, xmmword ptr [rsi + rcx + 0x10]
44a3af: movdqu xmmword ptr [rdi + rcx], xmm2
44a3b4: pcmpeqb xmm0, xmm3
44a3b8: pmovmskb edx, xmm0
44a3bc: add rcx, 0x10
44a3c0: test rdx, rdx
44a3c3: jne 0x44a500
44a3c9: movdqu xmmword ptr [rdi + rcx], xmm3
44a3ce: mov rdx, rsi
44a3d1: lea rsi, [rsi + rcx + 0x10]
44a3d6: and rsi, 0xffffffffffffffc0
44a3da: sub rdx, rsi
44a3dd: sub rdi, rdx
44a3e0: movaps xmm2, xmmword ptr [rsi]
44a3e3: movaps xmm4, xmm2
44a3e6: movaps xmm5, xmmword ptr [rsi + 0x10]
44a3ea: movaps xmm3, xmmword ptr [rsi + 0x20]
44a3ee: movaps xmm6, xmm3
44a3f1: movaps xmm7, xmmword ptr [rsi + 0x30]
44a3f5: pminub xmm2, xmm5
44a3f9: pminub xmm3, xmm7
44a3fd: pminub xmm3, xmm2
44a401: pcmpeqb xmm3, xmm0
44a405: pmovmskb edx, xmm3
44a409: test rdx, rdx
44a40c: jne 0x44a459
44a40e: add rdi, 0x40
44a412: add rsi, 0x40
44a416: movdqu xmmword ptr [rdi - 0x40], xmm4
44a41b: movaps xmm2, xmmword ptr [rsi]
44a41e: movdqa xmm4, xmm2
44a422: movdqu xmmword ptr [rdi - 0x30], xmm5
44a427: movaps xmm5, xmmword ptr [rsi + 0x10]
44a42b: pminub xmm2, xmm5
44a42f: movaps xmm3, xmmword ptr [rsi + 0x20]
44a433: movdqu xmmword ptr [rdi - 0x20], xmm6
44a438: movaps xmm6, xmm3
44a43b: movdqu xmmword ptr [rdi - 0x10], xmm7
44a440: movaps xmm7, xmmword ptr [rsi + 0x30]
44a444: pminub xmm3, xmm7
44a448: pminub xmm3, xmm2
44a44c: pcmpeqb xmm3, xmm0
44a450: pmovmskb edx, xmm3
44a454: test rdx, rdx
44a457: je 0x44a40e
44a459: pxor xmm1, xmm1
44a45d: pcmpeqb xmm0, xmm4
44a461: pcmpeqb xmm1, xmm5
44a465: pmovmskb edx, xmm0
44a469: pmovmskb ecx, xmm1
44a46d: test rdx, rdx
44a470: jne 0x44a580
44a476: test rcx, rcx
44a479: jne 0x44a5a0
44a47f: pcmpeqb xmm0, xmm6
44a483: pcmpeqb xmm1, xmm7
44a487: pmovmskb edx, xmm0
44a48b: pmovmskb ecx, xmm1
44a48f: test rdx, rdx
44a492: jne 0x44a5d0
44a498: bsf rdx, rcx
44a49c: movdqu xmmword ptr [rdi], xmm4
44a4a0: movdqu xmmword ptr [rdi + 0x10], xmm5
44a4a5: movdqu xmmword ptr [rdi + 0x20], xmm6
44a4aa: add rsi, 0x30
44a4ae: add rdi, 0x30
44a4b2: lea r11, [rip + 0x4df47]
44a4b9: movsxd rcx, dword ptr [r11 + rdx*4]
44a4bd: lea rcx, [r11 + rcx]
44a4c1: notrack jmp rcx
44a4c4: pxor xmm0, xmm0
44a4c8: movdqu xmm1, xmmword ptr [rsi]
44a4cc: movdqu xmm2, xmmword ptr [rsi + 0x10]
44a4d1: pcmpeqb xmm0, xmm1
44a4d5: pmovmskb edx, xmm0
44a4d9: test rdx, rdx
44a4dc: jne 0x44a548
44a4de: pcmpeqb xmm0, xmm2
44a4e2: movdqu xmmword ptr [rdi], xmm1
44a4e6: pmovmskb edx, xmm0
44a4ea: test rdx, rdx
44a4ed: jne 0x44a540
44a4ef: and rsi, 0xfffffffffffffff0
44a4f3: and rcx, 0xf
44a4f7: jmp 0x44a300
44a4fc: nop dword ptr [rax]
44a500: add rdi, rcx
44a503: add rsi, rcx
44a506: bsf rdx, rdx
44a50a: lea r11, [rip + 0x4deef]
44a511: movsxd rcx, dword ptr [r11 + rdx*4]
44a515: lea rcx, [r11 + rcx]
44a519: notrack jmp rcx
44a51c: nop dword ptr [rax]
44a520: add rsi, rcx
44a523: bsf rdx, rdx
44a527: lea r11, [rip + 0x4ded2]
44a52e: movsxd rcx, dword ptr [r11 + rdx*4]
44a532: lea rcx, [r11 + rcx]
44a536: notrack jmp rcx
44a539: nop dword ptr [rax]
44a540: add rsi, 0x10
44a544: add rdi, 0x10
44a548: bsf rdx, rdx
44a54c: lea r11, [rip + 0x4dead]
44a553: movsxd rcx, dword ptr [r11 + rdx*4]
44a557: lea rcx, [r11 + rcx]
44a55b: notrack jmp rcx
44a55e: nop 
44a560: bsf rdx, rdx
44a564: add rsi, rcx
44a567: add rdx, 0x10
44a56b: sub rdx, rcx
44a56e: lea r11, [rip + 0x4de8b]
44a575: movsxd rcx, dword ptr [r11 + rdx*4]
44a579: lea rcx, [r11 + rcx]
44a57d: notrack jmp rcx
44a580: bsf rdx, rdx
44a584: lea r11, [rip + 0x4de75]
44a58b: movsxd rcx, dword ptr [r11 + rdx*4]
44a58f: lea rcx, [r11 + rcx]
44a593: notrack jmp rcx
44a596: nop word ptr cs:[rax + rax]
44a5a0: bsf rdx, rcx
44a5a4: movdqu xmmword ptr [rdi], xmm4
44a5a8: add rsi, 0x10
44a5ac: add rdi, 0x10
44a5b0: lea r11, [rip + 0x4de49]
44a5b7: movsxd rcx, dword ptr [r11 + rdx*4]
44a5bb: lea rcx, [r11 + rcx]
44a5c0: jmp rcx
44a5c2: nop word ptr cs:[rax + rax]
44a5cd: nop dword ptr [rax]
44a5d0: bsf rdx, rdx
44a5d4: movdqu xmmword ptr [rdi], xmm4
44a5d8: movdqu xmmword ptr [rdi + 0x10], xmm5
44a5dd: add rsi, 0x20
44a5e1: add rdi, 0x20
44a5e5: lea r11, [rip + 0x4de14]
44a5ec: movsxd rcx, dword ptr [r11 + rdx*4]
44a5f0: lea rcx, [r11 + rcx]
44a5f4: notrack jmp rcx
44a5f7: nop word ptr [rax + rax]
44a600: mov byte ptr [rdi], dh
44a602: ret 
44a603: nop word ptr cs:[rax + rax]
44a60e: nop 
44a610: mov dx, word ptr [rsi]
44a613: mov word ptr [rdi], dx
44a616: ret 
44a617: nop word ptr [rax + rax]
44a620: mov cx, word ptr [rsi]
44a623: mov word ptr [rdi], cx
44a626: mov byte ptr [rdi + 2], dh
44a629: ret 
44a62a: nop word ptr [rax + rax]
44a630: mov edx, dword ptr [rsi]
44a632: mov dword ptr [rdi], edx
44a634: ret 
44a635: nop word ptr cs:[rax + rax]
44a640: mov ecx, dword ptr [rsi]
44a642: mov byte ptr [rdi + 4], dh
44a645: mov dword ptr [rdi], ecx
44a647: ret 
44a648: nop dword ptr [rax + rax]
44a650: mov ecx, dword ptr [rsi]
44a652: mov dx, word ptr [rsi + 4]
44a656: mov dword ptr [rdi], ecx
44a658: mov word ptr [rdi + 4], dx
44a65c: ret 
44a65d: nop dword ptr [rax]
44a660: mov ecx, dword ptr [rsi]
44a662: mov edx, dword ptr [rsi + 3]
44a665: mov dword ptr [rdi], ecx
44a667: mov dword ptr [rdi + 3], edx
44a66a: ret 
44a66b: nop dword ptr [rax + rax]
44a670: mov rdx, qword ptr [rsi]
44a673: mov qword ptr [rdi], rdx
44a676: ret 
44a677: nop word ptr [rax + rax]
44a680: mov rcx, qword ptr [rsi]
44a683: mov byte ptr [rdi + 8], dh
44a686: mov qword ptr [rdi], rcx
44a689: ret 
44a68a: nop word ptr [rax + rax]
44a690: mov rcx, qword ptr [rsi]
44a693: mov dx, word ptr [rsi + 8]
44a697: mov qword ptr [rdi], rcx
44a69a: mov word ptr [rdi + 8], dx
44a69e: ret 
44a69f: nop 
44a6a0: mov rcx, qword ptr [rsi]
44a6a3: mov edx, dword ptr [rsi + 7]
44a6a6: mov qword ptr [rdi], rcx
44a6a9: mov dword ptr [rdi + 7], edx
44a6ac: ret 
44a6ad: nop dword ptr [rax]
44a6b0: mov rcx, qword ptr [rsi]
44a6b3: mov edx, dword ptr [rsi + 8]
44a6b6: mov qword ptr [rdi], rcx
44a6b9: mov dword ptr [rdi + 8], edx
44a6bc: ret 
44a6bd: nop dword ptr [rax]
44a6c0: mov rcx, qword ptr [rsi]
44a6c3: mov rdx, qword ptr [rsi + 5]
44a6c7: mov qword ptr [rdi], rcx
44a6ca: mov qword ptr [rdi + 5], rdx
44a6ce: ret 
44a6cf: nop 
44a6d0: mov rcx, qword ptr [rsi]
44a6d3: mov rdx, qword ptr [rsi + 6]
44a6d7: mov qword ptr [rdi], rcx
44a6da: mov qword ptr [rdi + 6], rdx
44a6de: ret 
44a6df: nop 
44a6e0: mov rcx, qword ptr [rsi]
44a6e3: mov rdx, qword ptr [rsi + 7]
44a6e7: mov qword ptr [rdi], rcx
44a6ea: mov qword ptr [rdi + 7], rdx
44a6ee: ret 
44a6ef: nop 
44a6f0: movdqu xmm0, xmmword ptr [rsi]
44a6f4: movdqu xmmword ptr [rdi], xmm0
44a6f8: ret 
44a6f9: nop dword ptr [rax]
44a700: movdqu xmm0, xmmword ptr [rsi]
44a704: movdqu xmmword ptr [rdi], xmm0
44a708: mov byte ptr [rdi + 0x10], dh
44a70b: ret 
44a70c: nop dword ptr [rax]
44a710: movdqu xmm0, xmmword ptr [rsi]
44a714: mov cx, word ptr [rsi + 0x10]
44a718: movdqu xmmword ptr [rdi], xmm0
44a71c: mov word ptr [rdi + 0x10], cx
44a720: ret 
44a721: nop word ptr cs:[rax + rax]
44a72c: nop dword ptr [rax]
44a730: movdqu xmm0, xmmword ptr [rsi]
44a734: mov ecx, dword ptr [rsi + 0xf]
44a737: movdqu xmmword ptr [rdi], xmm0
44a73b: mov dword ptr [rdi + 0xf], ecx
44a73e: ret 
44a73f: nop 
44a740: movdqu xmm0, xmmword ptr [rsi]
44a744: mov ecx, dword ptr [rsi + 0x10]
44a747: movdqu xmmword ptr [rdi], xmm0
44a74b: mov dword ptr [rdi + 0x10], ecx
44a74e: ret 
44a74f: nop 
44a750: movdqu xmm0, xmmword ptr [rsi]
44a754: mov ecx, dword ptr [rsi + 0x10]
44a757: movdqu xmmword ptr [rdi], xmm0
44a75b: mov dword ptr [rdi + 0x10], ecx
44a75e: mov byte ptr [rdi + 0x14], dh
44a761: ret 
44a762: nop word ptr cs:[rax + rax]
44a76d: nop dword ptr [rax]
44a770: movdqu xmm0, xmmword ptr [rsi]
44a774: mov rcx, qword ptr [rsi + 0xe]
44a778: movdqu xmmword ptr [rdi], xmm0
44a77c: mov qword ptr [rdi + 0xe], rcx
44a780: ret 
44a781: nop word ptr cs:[rax + rax]
44a78c: nop dword ptr [rax]
44a790: movdqu xmm0, xmmword ptr [rsi]
44a794: mov rcx, qword ptr [rsi + 0xf]
44a798: movdqu xmmword ptr [rdi], xmm0
44a79c: mov qword ptr [rdi + 0xf], rcx
44a7a0: ret 
44a7a1: nop word ptr cs:[rax + rax]
44a7ac: nop dword ptr [rax]
44a7b0: movdqu xmm0, xmmword ptr [rsi]
44a7b4: mov rcx, qword ptr [rsi + 0x10]
44a7b8: movdqu xmmword ptr [rdi], xmm0
44a7bc: mov qword ptr [rdi + 0x10], rcx
44a7c0: ret 
44a7c1: nop word ptr cs:[rax + rax]
44a7cc: nop dword ptr [rax]
44a7d0: movdqu xmm0, xmmword ptr [rsi]
44a7d4: mov rcx, qword ptr [rsi + 0x10]
44a7d8: movdqu xmmword ptr [rdi], xmm0
44a7dc: mov qword ptr [rdi + 0x10], rcx
44a7e0: mov byte ptr [rdi + 0x18], dh
44a7e3: ret 
44a7e4: nop word ptr cs:[rax + rax]
44a7ef: nop 
44a7f0: movdqu xmm0, xmmword ptr [rsi]
44a7f4: mov rdx, qword ptr [rsi + 0x10]
44a7f8: mov cx, word ptr [rsi + 0x18]
44a7fc: movdqu xmmword ptr [rdi], xmm0
44a800: mov qword ptr [rdi + 0x10], rdx
44a804: mov word ptr [rdi + 0x18], cx
44a808: ret 
44a809: nop dword ptr [rax]
44a810: movdqu xmm0, xmmword ptr [rsi]
44a814: mov rdx, qword ptr [rsi + 0x10]
44a818: mov ecx, dword ptr [rsi + 0x17]
44a81b: movdqu xmmword ptr [rdi], xmm0
44a81f: mov qword ptr [rdi + 0x10], rdx
44a823: mov dword ptr [rdi + 0x17], ecx
44a826: ret 
44a827: nop word ptr [rax + rax]
44a830: movdqu xmm0, xmmword ptr [rsi]
44a834: mov rdx, qword ptr [rsi + 0x10]
44a838: mov ecx, dword ptr [rsi + 0x18]
44a83b: movdqu xmmword ptr [rdi], xmm0
44a83f: mov qword ptr [rdi + 0x10], rdx
44a843: mov dword ptr [rdi + 0x18], ecx
44a846: ret 
44a847: nop word ptr [rax + rax]
44a850: movdqu xmm0, xmmword ptr [rsi]
44a854: movdqu xmm2, xmmword ptr [rsi + 0xd]
44a859: movdqu xmmword ptr [rdi], xmm0
44a85d: movdqu xmmword ptr [rdi + 0xd], xmm2
44a862: ret 
44a863: nop word ptr cs:[rax + rax]
44a86e: nop 
44a870: movdqu xmm0, xmmword ptr [rsi]
44a874: movdqu xmm2, xmmword ptr [rsi + 0xe]
44a879: movdqu xmmword ptr [rdi], xmm0
44a87d: movdqu xmmword ptr [rdi + 0xe], xmm2
44a882: ret 
44a883: nop word ptr cs:[rax + rax]
44a88e: nop 
44a890: movdqu xmm0, xmmword ptr [rsi]
44a894: movdqu xmm2, xmmword ptr [rsi + 0xf]
44a899: movdqu xmmword ptr [rdi], xmm0
44a89d: movdqu xmmword ptr [rdi + 0xf], xmm2
44a8a2: ret 
44a8a3: nop word ptr cs:[rax + rax]
44a8ae: nop 
44a8b0: movdqu xmm0, xmmword ptr [rsi]
44a8b4: movdqu xmm2, xmmword ptr [rsi + 0x10]
44a8b9: movdqu xmmword ptr [rdi], xmm0
44a8bd: movdqu xmmword ptr [rdi + 0x10], xmm2
44a8c2: ret 
44a8c3: nop word ptr cs:[rax + rax]
44a8ce: nop 
44a8d0: endbr64 
44a8d4: mov rcx, rsi
44a8d7: and rcx, 0x3f
44a8db: cmp rcx, 0x20
44a8df: jbe 0x44aaf4
44a8e5: and rsi, 0xfffffffffffffff0
44a8e9: and rcx, 0xf
44a8ed: pxor xmm0, xmm0
44a8f1: pxor xmm1, xmm1
44a8f5: pcmpeqb xmm1, xmmword ptr [rsi]
44a8f9: pmovmskb edx, xmm1
44a8fd: shr rdx, cl
44a900: test rdx, rdx
44a903: jne 0x44ab50
44a909: pcmpeqb xmm0, xmmword ptr [rsi + 0x10]
44a90e: pmovmskb edx, xmm0
44a912: test rdx, rdx
44a915: jne 0x44ab90
44a91b: movdqu xmm1, xmmword ptr [rsi + rcx]
44a920: movdqu xmmword ptr [rdi], xmm1
44a924: nop word ptr cs:[rax + rax]
44a92f: nop 
44a930: sub rdi, rcx
44a933: mov rcx, 0x10
44a93a: movdqa xmm1, xmmword ptr [rsi + rcx]
44a93f: movaps xmm2, xmmword ptr [rsi + rcx + 0x10]
44a944: movdqu xmmword ptr [rdi + rcx], xmm1
44a949: pcmpeqb xmm0, xmm2
44a94d: pmovmskb edx, xmm0
44a951: add rcx, 0x10
44a955: test rdx, rdx
44a958: jne 0x44ab30
44a95e: movaps xmm3, xmmword ptr [rsi + rcx + 0x10]
44a963: movdqu xmmword ptr [rdi + rcx], xmm2
44a968: pcmpeqb xmm0, xmm3
44a96c: pmovmskb edx, xmm0
44a970: add rcx, 0x10
44a974: test rdx, rdx
44a977: jne 0x44ab30
44a97d: movaps xmm4, xmmword ptr [rsi + rcx + 0x10]
44a982: movdqu xmmword ptr [rdi + rcx], xmm3
44a987: pcmpeqb xmm0, xmm4
44a98b: pmovmskb edx, xmm0
44a98f: add rcx, 0x10
44a993: test rdx, rdx
44a996: jne 0x44ab30
44a99c: movaps xmm1, xmmword ptr [rsi + rcx + 0x10]
44a9a1: movdqu xmmword ptr [rdi + rcx], xmm4
44a9a6: pcmpeqb xmm0, xmm1
44a9aa: pmovmskb edx, xmm0
44a9ae: add rcx, 0x10
44a9b2: test rdx, rdx
44a9b5: jne 0x44ab30
44a9bb: movaps xmm2, xmmword ptr [rsi + rcx + 0x10]
44a9c0: movdqu xmmword ptr [rdi + rcx], xmm1
44a9c5: pcmpeqb xmm0, xmm2
44a9c9: pmovmskb edx, xmm0
44a9cd: add rcx, 0x10
44a9d1: test rdx, rdx
44a9d4: jne 0x44ab30
44a9da: movaps xmm3, xmmword ptr [rsi + rcx + 0x10]
44a9df: movdqu xmmword ptr [rdi + rcx], xmm2
44a9e4: pcmpeqb xmm0, xmm3
44a9e8: pmovmskb edx, xmm0
44a9ec: add rcx, 0x10
44a9f0: test rdx, rdx
44a9f3: jne 0x44ab30
44a9f9: movdqu xmmword ptr [rdi + rcx], xmm3
44a9fe: mov rdx, rsi
44aa01: lea rsi, [rsi + rcx + 0x10]
44aa06: and rsi, 0xffffffffffffffc0
44aa0a: sub rdx, rsi
44aa0d: sub rdi, rdx
44aa10: movaps xmm2, xmmword ptr [rsi]
44aa13: movaps xmm4, xmm2
44aa16: movaps xmm5, xmmword ptr [rsi + 0x10]
44aa1a: movaps xmm3, xmmword ptr [rsi + 0x20]
44aa1e: movaps xmm6, xmm3
44aa21: movaps xmm7, xmmword ptr [rsi + 0x30]
44aa25: pminub xmm2, xmm5
44aa29: pminub xmm3, xmm7
44aa2d: pminub xmm3, xmm2
44aa31: pcmpeqb xmm3, xmm0
44aa35: pmovmskb edx, xmm3
44aa39: test rdx, rdx
44aa3c: jne 0x44aa89
44aa3e: add rdi, 0x40
44aa42: add rsi, 0x40
44aa46: movdqu xmmword ptr [rdi - 0x40], xmm4
44aa4b: movaps xmm2, xmmword ptr [rsi]
44aa4e: movdqa xmm4, xmm2
44aa52: movdqu xmmword ptr [rdi - 0x30], xmm5
44aa57: movaps xmm5, xmmword ptr [rsi + 0x10]
44aa5b: pminub xmm2, xmm5
44aa5f: movaps xmm3, xmmword ptr [rsi + 0x20]
44aa63: movdqu xmmword ptr [rdi - 0x20], xmm6
44aa68: movaps xmm6, xmm3
44aa6b: movdqu xmmword ptr [rdi - 0x10], xmm7
44aa70: movaps xmm7, xmmword ptr [rsi + 0x30]
44aa74: pminub xmm3, xmm7
44aa78: pminub xmm3, xmm2
44aa7c: pcmpeqb xmm3, xmm0
44aa80: pmovmskb edx, xmm3
44aa84: test rdx, rdx
44aa87: je 0x44aa3e
44aa89: pxor xmm1, xmm1
44aa8d: pcmpeqb xmm0, xmm4
44aa91: pcmpeqb xmm1, xmm5
44aa95: pmovmskb edx, xmm0
44aa99: pmovmskb ecx, xmm1
44aa9d: test rdx, rdx
44aaa0: jne 0x44abb0
44aaa6: test rcx, rcx
44aaa9: jne 0x44abd0
44aaaf: pcmpeqb xmm0, xmm6
44aab3: pcmpeqb xmm1, xmm7
44aab7: pmovmskb edx, xmm0
44aabb: pmovmskb ecx, xmm1
44aabf: test rdx, rdx
44aac2: jne 0x44ac00
44aac8: bsf rdx, rcx
44aacc: movdqu xmmword ptr [rdi], xmm4
44aad0: movdqu xmmword ptr [rdi + 0x10], xmm5
44aad5: movdqu xmmword ptr [rdi + 0x20], xmm6
44aada: add rsi, 0x30
44aade: add rdi, 0x30
44aae2: lea r11, [rip + 0x4d997]
44aae9: movsxd rcx, dword ptr [r11 + rdx*4]
44aaed: lea rcx, [r11 + rcx]
44aaf1: notrack jmp rcx
44aaf4: pxor xmm0, xmm0
44aaf8: movdqu xmm1, xmmword ptr [rsi]
44aafc: movdqu xmm2, xmmword ptr [rsi + 0x10]
44ab01: pcmpeqb xmm0, xmm1
44ab05: pmovmskb edx, xmm0
44ab09: test rdx, rdx
44ab0c: jne 0x44ab78
44ab0e: pcmpeqb xmm0, xmm2
44ab12: movdqu xmmword ptr [rdi], xmm1
44ab16: pmovmskb edx, xmm0
44ab1a: test rdx, rdx
44ab1d: jne 0x44ab70
44ab1f: and rsi, 0xfffffffffffffff0
44ab23: and rcx, 0xf
44ab27: jmp 0x44a930
44ab2c: nop dword ptr [rax]
44ab30: add rdi, rcx
44ab33: add rsi, rcx
44ab36: bsf rdx, rdx
44ab3a: lea r11, [rip + 0x4d93f]
44ab41: movsxd rcx, dword ptr [r11 + rdx*4]
44ab45: lea rcx, [r11 + rcx]
44ab49: notrack jmp rcx
44ab4c: nop dword ptr [rax]
44ab50: add rsi, rcx
44ab53: bsf rdx, rdx
44ab57: lea r11, [rip + 0x4d922]
44ab5e: movsxd rcx, dword ptr [r11 + rdx*4]
44ab62: lea rcx, [r11 + rcx]
44ab66: notrack jmp rcx
44ab69: nop dword ptr [rax]
44ab70: add rsi, 0x10
44ab74: add rdi, 0x10
44ab78: bsf rdx, rdx
44ab7c: lea r11, [rip + 0x4d8fd]
44ab83: movsxd rcx, dword ptr [r11 + rdx*4]
44ab87: lea rcx, [r11 + rcx]
44ab8b: notrack jmp rcx
44ab8e: nop 
44ab90: bsf rdx, rdx
44ab94: add rsi, rcx
44ab97: add rdx, 0x10
44ab9b: sub rdx, rcx
44ab9e: lea r11, [rip + 0x4d8db]
44aba5: movsxd rcx, dword ptr [r11 + rdx*4]
44aba9: lea rcx, [r11 + rcx]
44abad: notrack jmp rcx
44abb0: bsf rdx, rdx
44abb4: lea r11, [rip + 0x4d8c5]
44abbb: movsxd rcx, dword ptr [r11 + rdx*4]
44abbf: lea rcx, [r11 + rcx]
44abc3: notrack jmp rcx
44abc6: nop word ptr cs:[rax + rax]
44abd0: bsf rdx, rcx
44abd4: movdqu xmmword ptr [rdi], xmm4
44abd8: add rsi, 0x10
44abdc: add rdi, 0x10
44abe0: lea r11, [rip + 0x4d899]
44abe7: movsxd rcx, dword ptr [r11 + rdx*4]
44abeb: lea rcx, [r11 + rcx]
44abef: notrack jmp rcx
44abf2: nop word ptr cs:[rax + rax]
44abfd: nop dword ptr [rax]
44ac00: bsf rdx, rdx
44ac04: movdqu xmmword ptr [rdi], xmm4
44ac08: movdqu xmmword ptr [rdi + 0x10], xmm5
44ac0d: add rsi, 0x20
44ac11: add rdi, 0x20
44ac15: lea r11, [rip + 0x4d864]
44ac1c: movsxd rcx, dword ptr [r11 + rdx*4]
44ac20: lea rcx, [r11 + rcx]
44ac24: notrack jmp rcx
44ac27: nop word ptr [rax + rax]
44ac30: mov byte ptr [rdi], dh
44ac32: lea rax, [rdi]
44ac35: ret 
44ac36: nop word ptr cs:[rax + rax]
44ac40: mov dx, word ptr [rsi]
44ac43: mov word ptr [rdi], dx
44ac46: lea rax, [rdi + 1]
44ac4a: ret 
44ac4b: nop dword ptr [rax + rax]
44ac50: mov cx, word ptr [rsi]
44ac53: mov word ptr [rdi], cx
44ac56: mov byte ptr [rdi + 2], dh
44ac59: lea rax, [rdi + 2]
44ac5d: ret 
44ac5e: nop 
44ac60: mov edx, dword ptr [rsi]
44ac62: mov dword ptr [rdi], edx
44ac64: lea rax, [rdi + 3]
44ac68: ret 
44ac69: nop dword ptr [rax]
44ac70: mov ecx, dword ptr [rsi]
44ac72: mov byte ptr [rdi + 4], dh
44ac75: mov dword ptr [rdi], ecx
44ac77: lea rax, [rdi + 4]
44ac7b: ret 
44ac7c: nop dword ptr [rax]
44ac80: mov ecx, dword ptr [rsi]
44ac82: mov dx, word ptr [rsi + 4]
44ac86: mov dword ptr [rdi], ecx
44ac88: mov word ptr [rdi + 4], dx
44ac8c: lea rax, [rdi + 5]
44ac90: ret 
44ac91: nop word ptr cs:[rax + rax]
44ac9c: nop dword ptr [rax]
44aca0: mov ecx, dword ptr [rsi]
44aca2: mov edx, dword ptr [rsi + 3]
44aca5: mov dword ptr [rdi], ecx
44aca7: mov dword ptr [rdi + 3], edx
44acaa: lea rax, [rdi + 6]
44acae: ret 
44acaf: nop 
44acb0: mov rdx, qword ptr [rsi]
44acb3: mov qword ptr [rdi], rdx
44acb6: lea rax, [rdi + 7]
44acba: ret 
44acbb: nop dword ptr [rax + rax]
44acc0: mov rcx, qword ptr [rsi]
44acc3: mov byte ptr [rdi + 8], dh
44acc6: mov qword ptr [rdi], rcx
44acc9: lea rax, [rdi + 8]
44accd: ret 
44acce: nop 
44acd0: mov rcx, qword ptr [rsi]
44acd3: mov dx, word ptr [rsi + 8]
44acd7: mov qword ptr [rdi], rcx
44acda: mov word ptr [rdi + 8], dx
44acde: lea rax, [rdi + 9]
44ace2: ret 
44ace3: nop word ptr cs:[rax + rax]
44acee: nop 
44acf0: mov rcx, qword ptr [rsi]
44acf3: mov edx, dword ptr [rsi + 7]
44acf6: mov qword ptr [rdi], rcx
44acf9: mov dword ptr [rdi + 7], edx
44acfc: lea rax, [rdi + 0xa]
44ad00: ret 
44ad01: nop word ptr cs:[rax + rax]
44ad0c: nop dword ptr [rax]
44ad10: mov rcx, qword ptr [rsi]
44ad13: mov edx, dword ptr [rsi + 8]
44ad16: mov qword ptr [rdi], rcx
44ad19: mov dword ptr [rdi + 8], edx
44ad1c: lea rax, [rdi + 0xb]
44ad20: ret 
44ad21: nop word ptr cs:[rax + rax]
44ad2c: nop dword ptr [rax]
44ad30: mov rcx, qword ptr [rsi]
44ad33: mov rdx, qword ptr [rsi + 5]
44ad37: mov qword ptr [rdi], rcx
44ad3a: mov qword ptr [rdi + 5], rdx
44ad3e: lea rax, [rdi + 0xc]
44ad42: ret 
44ad43: nop word ptr cs:[rax + rax]
44ad4e: nop 
44ad50: mov rcx, qword ptr [rsi]
44ad53: mov rdx, qword ptr [rsi + 6]
44ad57: mov qword ptr [rdi], rcx
44ad5a: mov qword ptr [rdi + 6], rdx
44ad5e: lea rax, [rdi + 0xd]
44ad62: ret 
44ad63: nop word ptr cs:[rax + rax]
44ad6e: nop 
44ad70: mov rcx, qword ptr [rsi]
44ad73: mov rdx, qword ptr [rsi + 7]
44ad77: mov qword ptr [rdi], rcx
44ad7a: mov qword ptr [rdi + 7], rdx
44ad7e: lea rax, [rdi + 0xe]
44ad82: ret 
44ad83: nop word ptr cs:[rax + rax]
44ad8e: nop 
44ad90: movdqu xmm0, xmmword ptr [rsi]
44ad94: movdqu xmmword ptr [rdi], xmm0
44ad98: lea rax, [rdi + 0xf]
44ad9c: ret 
44ad9d: nop dword ptr [rax]
44ada0: movdqu xmm0, xmmword ptr [rsi]
44ada4: movdqu xmmword ptr [rdi], xmm0
44ada8: mov byte ptr [rdi + 0x10], dh
44adab: lea rax, [rdi + 0x10]
44adaf: ret 
44adb0: movdqu xmm0, xmmword ptr [rsi]
44adb4: mov cx, word ptr [rsi + 0x10]
44adb8: movdqu xmmword ptr [rdi], xmm0
44adbc: mov word ptr [rdi + 0x10], cx
44adc0: lea rax, [rdi + 0x11]
44adc4: ret 
44adc5: nop word ptr cs:[rax + rax]
44add0: movdqu xmm0, xmmword ptr [rsi]
44add4: mov ecx, dword ptr [rsi + 0xf]
44add7: movdqu xmmword ptr [rdi], xmm0
44addb: mov dword ptr [rdi + 0xf], ecx
44adde: lea rax, [rdi + 0x12]
44ade2: ret 
44ade3: nop word ptr cs:[rax + rax]
44adee: nop 
44adf0: movdqu xmm0, xmmword ptr [rsi]
44adf4: mov ecx, dword ptr [rsi + 0x10]
44adf7: movdqu xmmword ptr [rdi], xmm0
44adfb: mov dword ptr [rdi + 0x10], ecx
44adfe: lea rax, [rdi + 0x13]
44ae02: ret 
44ae03: nop word ptr cs:[rax + rax]
44ae0e: nop 
44ae10: movdqu xmm0, xmmword ptr [rsi]
44ae14: mov ecx, dword ptr [rsi + 0x10]
44ae17: movdqu xmmword ptr [rdi], xmm0
44ae1b: mov dword ptr [rdi + 0x10], ecx
44ae1e: mov byte ptr [rdi + 0x14], dh
44ae21: lea rax, [rdi + 0x14]
44ae25: ret 
44ae26: nop word ptr cs:[rax + rax]
44ae30: movdqu xmm0, xmmword ptr [rsi]
44ae34: mov rcx, qword ptr [rsi + 0xe]
44ae38: movdqu xmmword ptr [rdi], xmm0
44ae3c: mov qword ptr [rdi + 0xe], rcx
44ae40: lea rax, [rdi + 0x15]
44ae44: ret 
44ae45: nop word ptr cs:[rax + rax]
44ae50: movdqu xmm0, xmmword ptr [rsi]
44ae54: mov rcx, qword ptr [rsi + 0xf]
44ae58: movdqu xmmword ptr [rdi], xmm0
44ae5c: mov qword ptr [rdi + 0xf], rcx
44ae60: lea rax, [rdi + 0x16]
44ae64: ret 
44ae65: nop word ptr cs:[rax + rax]
44ae70: movdqu xmm0, xmmword ptr [rsi]
44ae74: mov rcx, qword ptr [rsi + 0x10]
44ae78: movdqu xmmword ptr [rdi], xmm0
44ae7c: mov qword ptr [rdi + 0x10], rcx
44ae80: lea rax, [rdi + 0x17]
44ae84: ret 
44ae85: nop word ptr cs:[rax + rax]
44ae90: movdqu xmm0, xmmword ptr [rsi]
44ae94: mov rcx, qword ptr [rsi + 0x10]
44ae98: movdqu xmmword ptr [rdi], xmm0
44ae9c: mov qword ptr [rdi + 0x10], rcx
44aea0: mov byte ptr [rdi + 0x18], dh
44aea3: lea rax, [rdi + 0x18]
44aea7: ret 
44aea8: nop dword ptr [rax + rax]
44aeb0: movdqu xmm0, xmmword ptr [rsi]
44aeb4: mov rdx, qword ptr [rsi + 0x10]
44aeb8: mov cx, word ptr [rsi + 0x18]
44aebc: movdqu xmmword ptr [rdi], xmm0
44aec0: mov qword ptr [rdi + 0x10], rdx
44aec4: mov word ptr [rdi + 0x18], cx
44aec8: lea rax, [rdi + 0x19]
44aecc: ret 
44aecd: nop dword ptr [rax]
44aed0: movdqu xmm0, xmmword ptr [rsi]
44aed4: mov rdx, qword ptr [rsi + 0x10]
44aed8: mov ecx, dword ptr [rsi + 0x17]
44aedb: movdqu xmmword ptr [rdi], xmm0
44aedf: mov qword ptr [rdi + 0x10], rdx
44aee3: mov dword ptr [rdi + 0x17], ecx
44aee6: lea rax, [rdi + 0x1a]
44aeea: ret 
44aeeb: nop dword ptr [rax + rax]
44aef0: movdqu xmm0, xmmword ptr [rsi]
44aef4: mov rdx, qword ptr [rsi + 0x10]
44aef8: mov ecx, dword ptr [rsi + 0x18]
44aefb: movdqu xmmword ptr [rdi], xmm0
44aeff: mov qword ptr [rdi + 0x10], rdx
44af03: mov dword ptr [rdi + 0x18], ecx
44af06: lea rax, [rdi + 0x1b]
44af0a: ret 
44af0b: nop dword ptr [rax + rax]
44af10: movdqu xmm0, xmmword ptr [rsi]
44af14: movdqu xmm2, xmmword ptr [rsi + 0xd]
44af19: movdqu xmmword ptr [rdi], xmm0
44af1d: movdqu xmmword ptr [rdi + 0xd], xmm2
44af22: lea rax, [rdi + 0x1c]
44af26: ret 
44af27: nop word ptr [rax + rax]
44af30: movdqu xmm0, xmmword ptr [rsi]
44af34: movdqu xmm2, xmmword ptr [rsi + 0xe]
44af39: movdqu xmmword ptr [rdi], xmm0
44af3d: movdqu xmmword ptr [rdi + 0xe], xmm2
44af42: lea rax, [rdi + 0x1d]
44af46: ret 
44af47: nop word ptr [rax + rax]
44af50: movdqu xmm0, xmmword ptr [rsi]
44af54: movdqu xmm2, xmmword ptr [rsi + 0xf]
44af59: movdqu xmmword ptr [rdi], xmm0
44af5d: movdqu xmmword ptr [rdi + 0xf], xmm2
44af62: lea rax, [rdi + 0x1e]
44af66: ret 
44af67: nop word ptr [rax + rax]
44af70: movdqu xmm0, xmmword ptr [rsi]
44af74: movdqu xmm2, xmmword ptr [rsi + 0x10]
44af79: movdqu xmmword ptr [rdi], xmm0
44af7d: movdqu xmmword ptr [rdi + 0x10], xmm2
44af82: lea rax, [rdi + 0x1f]
44af86: ret 
44af87: nop word ptr [rax + rax]
44af90: endbr64 
44af94: mov rcx, rsi
44af97: vpxor xmm0, xmm0, xmm0
44af9b: and ecx, 0x7f
44af9e: cmp ecx, 0x40
44afa1: jbe 0x44b18b
44afa7: and rsi, 0xffffffffffffffe0
44afab: and ecx, 0x1f
44afae: vpcmpeqb ymm1, ymm0, ymmword ptr [rsi]
44afb2: vpmovmskb edx, ymm1
44afb6: shr rdx, cl
44afb9: test edx, edx
44afbb: jne 0x44b1c3
44afc1: vpcmpeqb ymm2, ymm0, ymmword ptr [rsi + 0x20]
44afc6: vpmovmskb edx, ymm2
44afca: test edx, edx
44afcc: jne 0x44b220
44afd2: vmovdqu ymm2, ymmword ptr [rsi + rcx]
44afd7: vmovdqu ymmword ptr [rdi], ymm2
44afdb: nop dword ptr [rax + rax]
44afe0: sub rdi, rcx
44afe3: mov rcx, 0x20
44afea: vmovdqa ymm2, ymmword ptr [rsi + rcx]
44afef: vmovdqu ymmword ptr [rdi + rcx], ymm2
44aff4: vmovdqa ymm2, ymmword ptr [rsi + rcx + 0x20]
44affa: vpcmpeqb ymm1, ymm0, ymm2
44affe: vpmovmskb edx, ymm1
44b002: add rcx, 0x20
44b006: test edx, edx
44b008: jne 0x44b1c0
44b00e: vmovdqu ymmword ptr [rdi + rcx], ymm2
44b013: vmovdqa ymm3, ymmword ptr [rsi + rcx + 0x20]
44b019: vpcmpeqb ymm1, ymm0, ymm3
44b01d: vpmovmskb edx, ymm1
44b021: add rcx, 0x20
44b025: test edx, edx
44b027: jne 0x44b1c0
44b02d: vmovdqu ymmword ptr [rdi + rcx], ymm3
44b032: vmovdqa ymm4, ymmword ptr [rsi + rcx + 0x20]
44b038: vpcmpeqb ymm1, ymm0, ymm4
44b03c: vpmovmskb edx, ymm1
44b040: add rcx, 0x20
44b044: test edx, edx
44b046: jne 0x44b1c0
44b04c: vmovdqu ymmword ptr [rdi + rcx], ymm4
44b051: vmovdqa ymm2, ymmword ptr [rsi + rcx + 0x20]
44b057: vpcmpeqb ymm1, ymm0, ymm2
44b05b: vpmovmskb edx, ymm1
44b05f: add rcx, 0x20
44b063: test edx, edx
44b065: jne 0x44b1c0
44b06b: vmovdqu ymmword ptr [rdi + rcx], ymm2
44b070: vmovdqa ymm2, ymmword ptr [rsi + rcx + 0x20]
44b076: vpcmpeqb ymm1, ymm0, ymm2
44b07a: vpmovmskb edx, ymm1
44b07e: add rcx, 0x20
44b082: test edx, edx
44b084: jne 0x44b1c0
44b08a: vmovdqa ymm3, ymmword ptr [rsi + rcx + 0x20]
44b090: vmovdqu ymmword ptr [rdi + rcx], ymm2
44b095: vpcmpeqb ymm1, ymm0, ymm3
44b099: vpmovmskb edx, ymm1
44b09d: add rcx, 0x20
44b0a1: test edx, edx
44b0a3: jne 0x44b1c0
44b0a9: vmovdqu ymmword ptr [rdi + rcx], ymm3
44b0ae: mov rdx, rsi
44b0b1: lea rsi, [rsi + rcx + 0x20]
44b0b6: and rsi, 0xffffffffffffff80
44b0ba: sub rdx, rsi
44b0bd: sub rdi, rdx
44b0c0: vmovdqa ymm4, ymmword ptr [rsi]
44b0c4: vmovdqa ymm5, ymmword ptr [rsi + 0x20]
44b0c9: vmovdqa ymm6, ymmword ptr [rsi + 0x40]
44b0ce: vmovdqa ymm7, ymmword ptr [rsi + 0x60]
44b0d3: vpminub ymm2, ymm4, ymm5
44b0d7: vpminub ymm3, ymm6, ymm7
44b0db: vpminub ymm3, ymm3, ymm2
44b0df: vpcmpeqb ymm3, ymm3, ymm1
44b0e3: vpmovmskb edx, ymm3
44b0e7: test edx, edx
44b0e9: jne 0x44b138
44b0eb: add rdi, 0x80
44b0f2: add rsi, 0x80
44b0f9: vmovdqu ymmword ptr [rdi - 0x80], ymm4
44b0fe: vmovdqa ymm4, ymmword ptr [rsi]
44b102: vmovdqu ymmword ptr [rdi - 0x60], ymm5
44b107: vmovdqa ymm5, ymmword ptr [rsi + 0x20]
44b10c: vpminub ymm2, ymm4, ymm5
44b110: vmovdqu ymmword ptr [rdi - 0x40], ymm6
44b115: vmovdqa ymm6, ymmword ptr [rsi + 0x40]
44b11a: vmovdqu ymmword ptr [rdi - 0x20], ymm7
44b11f: vmovdqa ymm7, ymmword ptr [rsi + 0x60]
44b124: vpminub ymm3, ymm6, ymm7
44b128: vpminub ymm3, ymm3, ymm2
44b12c: vpcmpeqb ymm3, ymm3, ymm1
44b130: vpmovmskb edx, ymm3
44b134: test edx, edx
44b136: je 0x44b0eb
44b138: vpcmpeqb ymm1, ymm0, ymm4
44b13c: vpmovmskb edx, ymm1
44b140: test edx, edx
44b142: jne 0x44b230
44b148: vpcmpeqb ymm1, ymm0, ymm5
44b14c: vpmovmskb ecx, ymm1
44b150: test ecx, ecx
44b152: jne 0x44b240
44b158: vpcmpeqb ymm1, ymm0, ymm6
44b15c: vpmovmskb edx, ymm1
44b160: test edx, edx
44b162: jne 0x44b260
44b168: vpcmpeqb ymm1, ymm0, ymm7
44b16c: vpmovmskb ecx, ymm1
44b170: bsf edx, ecx
44b173: vmovdqu ymmword ptr [rdi], ymm4
44b177: vmovdqu ymmword ptr [rdi + 0x20], ymm5
44b17c: vmovdqu ymmword ptr [rdi + 0x40], ymm6
44b181: add rsi, 0x60
44b185: add rdi, 0x60
44b189: jmp 0x44b1c9
44b18b: vmovdqu ymm3, ymmword ptr [rsi]
44b18f: vmovdqu ymm2, ymmword ptr [rsi + 0x20]
44b194: vpcmpeqb ymm1, ymm0, ymm3
44b198: vpmovmskb edx, ymm1
44b19c: test edx, edx
44b19e: jne 0x44b1c6
44b1a0: vmovdqu ymmword ptr [rdi], ymm3
44b1a4: vpcmpeqb ymm1, ymm0, ymm2
44b1a8: vpmovmskb edx, ymm1
44b1ac: test edx, edx
44b1ae: jne 0x44b210
44b1b0: and rsi, 0xffffffffffffffe0
44b1b4: and ecx, 0x1f
44b1b7: jmp 0x44afe0
44b1bc: nop dword ptr [rax]
44b1c0: add rdi, rcx
44b1c3: add rsi, rcx
44b1c6: bsf edx, edx
44b1c9: cmp edx, 0x20
44b1cc: jae 0x44b320
44b1d2: cmp edx, 0x10
44b1d5: jae 0x44b300
44b1db: cmp edx, 8
44b1de: jae 0x44b2e0
44b1e4: cmp edx, 4
44b1e7: jae 0x44b2c0
44b1ed: cmp edx, 3
44b1f0: je 0x44b2b0
44b1f6: cmp edx, 1
44b1f9: ja 0x44b290
44b1ff: je 0x44b280
44b201: mov byte ptr [rdi], 0
44b204: lea rax, [rdi]
44b207: vzeroupper 
44b20a: ret 
44b20b: nop dword ptr [rax + rax]
44b210: add rsi, 0x20
44b214: add rdi, 0x20
44b218: jmp 0x44b1c6
44b21a: nop word ptr [rax + rax]
44b220: bsf edx, edx
44b223: add rsi, rcx
44b226: add edx, 0x20
44b229: sub edx, ecx
44b22b: jmp 0x44b1c9
44b22d: nop dword ptr [rax]
44b230: bsf edx, edx
44b233: jmp 0x44b1c9
44b235: nop word ptr cs:[rax + rax]
44b240: bsf edx, ecx
44b243: vmovdqu ymmword ptr [rdi], ymm4
44b247: add rsi, 0x20
44b24b: add rdi, 0x20
44b24f: jmp 0x44b1c9
44b254: nop word ptr cs:[rax + rax]
44b25f: nop 
44b260: bsf edx, edx
44b263: vmovdqu ymmword ptr [rdi], ymm4
44b267: vmovdqu ymmword ptr [rdi + 0x20], ymm5
44b26c: add rsi, 0x40
44b270: add rdi, 0x40
44b274: jmp 0x44b1c9
44b279: nop dword ptr [rax]
44b280: movzx edx, word ptr [rsi]
44b283: mov word ptr [rdi], dx
44b286: lea rax, [rdi + 1]
44b28a: vzeroupper 
44b28d: ret 
44b28e: nop 
44b290: movzx ecx, word ptr [rsi]
44b293: mov word ptr [rdi], cx
44b296: mov byte ptr [rdi + 2], 0
44b29a: lea rax, [rdi + 2]
44b29e: vzeroupper 
44b2a1: ret 
44b2a2: nop word ptr cs:[rax + rax]
44b2ad: nop dword ptr [rax]
44b2b0: mov edx, dword ptr [rsi]
44b2b2: mov dword ptr [rdi], edx
44b2b4: lea rax, [rdi + 3]
44b2b8: vzeroupper 
44b2bb: ret 
44b2bc: nop dword ptr [rax]
44b2c0: mov ecx, dword ptr [rsi]
44b2c2: mov dword ptr [rdi], ecx
44b2c4: mov ecx, dword ptr [rsi + rdx - 3]
44b2c8: mov dword ptr [rdi + rdx - 3], ecx
44b2cc: lea rax, [rdi + rdx]
44b2d0: vzeroupper 
44b2d3: ret 
44b2d4: nop word ptr cs:[rax + rax]
44b2df: nop 
44b2e0: mov rcx, qword ptr [rsi]
44b2e3: mov r9, qword ptr [rsi + rdx - 7]
44b2e8: mov qword ptr [rdi], rcx
44b2eb: mov qword ptr [rdi + rdx - 7], r9
44b2f0: lea rax, [rdi + rdx]
44b2f4: vzeroupper 
44b2f7: ret 
44b2f8: nop dword ptr [rax + rax]
44b300: vmovdqu xmm2, xmmword ptr [rsi]
44b304: vmovdqu xmm3, xmmword ptr [rsi + rdx - 0xf]
44b30a: vmovdqu xmmword ptr [rdi], xmm2
44b30e: vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3
44b314: lea rax, [rdi + rdx]
44b318: vzeroupper 
44b31b: ret 
44b31c: nop dword ptr [rax]
44b320: vmovdqu ymm2, ymmword ptr [rsi]
44b324: vmovdqu ymm3, ymmword ptr [rsi + rdx - 0x1f]
44b32a: vmovdqu ymmword ptr [rdi], ymm2
44b32e: vmovdqu ymmword ptr [rdi + rdx - 0x1f], ymm3
44b334: lea rax, [rdi + rdx]
44b338: vzeroupper 
44b33b: ret 
44b33c: nop dword ptr [rax]
44b340: endbr64 
44b344: movd xmm1, esi
44b348: mov rcx, rdi
44b34b: punpcklbw xmm1, xmm1
44b34f: and rdi, 0xfffffffffffffff0
44b353: pxor xmm2, xmm2
44b357: punpcklbw xmm1, xmm1
44b35b: or esi, 0xffffffff
44b35e: movdqa xmm0, xmmword ptr [rdi]
44b362: pshufd xmm1, xmm1, 0
44b367: sub rcx, rdi
44b36a: movdqa xmm3, xmm0
44b36e: lea rdi, [rdi + 0x10]
44b372: pcmpeqb xmm0, xmm1
44b376: pcmpeqb xmm3, xmm2
44b37a: shl esi, cl
44b37c: pmovmskb eax, xmm0
44b380: pmovmskb edx, xmm3
44b384: and eax, esi
44b386: and edx, esi
44b388: test eax, eax
44b38a: jne 0x44b3c4
44b38c: test edx, edx
44b38e: jne 0x44b3c0
44b390: movdqa xmm0, xmmword ptr [rdi]
44b394: lea rdi, [rdi + 0x10]
44b398: movdqa xmm3, xmm0
44b39c: pcmpeqb xmm0, xmm1
44b3a0: pcmpeqb xmm3, xmm2
44b3a4: pmovmskb eax, xmm0
44b3a8: pmovmskb edx, xmm3
44b3ac: or edx, eax
44b3ae: je 0x44b390
44b3b0: pmovmskb edx, xmm3
44b3b4: test eax, eax
44b3b6: jne 0x44b3c4
44b3b8: nop dword ptr [rax + rax]
44b3c0: xor rax, rax
44b3c3: ret 
44b3c4: lea rdi, [rdi - 0x10]
44b3c8: test edx, edx
44b3ca: je 0x44b4e0
44b3d0: test al, al
44b3d2: je 0x44b440
44b3d4: mov cl, al
44b3d6: and cl, 0xf
44b3d9: jne 0x44b410
44b3db: mov ch, dl
44b3dd: and ch, 0xf
44b3e0: jne 0x44b3c0
44b3e2: test al, 0x10
44b3e4: jne 0x44b5c0
44b3ea: test dl, 0x10
44b3ed: jne 0x44b3c0
44b3ef: test al, 0x20
44b3f1: jne 0x44b5d0
44b3f7: test dl, 0x20
44b3fa: jne 0x44b3c0
44b3fc: test al, 0x40
44b3fe: jne 0x44b5e0
44b404: test dl, 0x40
44b407: jne 0x44b3c0
44b409: lea rax, [rdi + 7]
44b40d: ret 
44b40e: nop 
44b410: test al, 1
44b412: jne 0x44b580
44b418: test dl, 1
44b41b: jne 0x44b3c0
44b41d: test al, 2
44b41f: jne 0x44b590
44b425: test dl, 2
44b428: jne 0x44b3c0
44b42a: test al, 4
44b42c: jne 0x44b5a0
44b432: test dl, 4
44b435: jne 0x44b3c0
44b437: lea rax, [rdi + 3]
44b43b: ret 
44b43c: nop dword ptr [rax]
44b440: test dl, dl
44b442: jne 0x44b3c0
44b448: mov cl, ah
44b44a: and cl, 0xf
44b44d: jne 0x44b4a0
44b44f: mov ch, dh
44b451: and ch, 0xf
44b454: jne 0x44b3c0
44b45a: test ah, 0x10
44b45d: jne 0x44b630
44b463: test dh, 0x10
44b466: jne 0x44b3c0
44b46c: test ah, 0x20
44b46f: jne 0x44b640
44b475: test dh, 0x20
44b478: jne 0x44b3c0
44b47e: test ah, 0x40
44b481: jne 0x44b650
44b487: test dh, 0x40
44b48a: jne 0x44b3c0
44b490: lea rax, [rdi + 0xf]
44b494: ret 
44b495: nop word ptr cs:[rax + rax]
44b4a0: test ah, 1
44b4a3: jne 0x44b5f0
44b4a9: test dh, 1
44b4ac: jne 0x44b3c0
44b4b2: test ah, 2
44b4b5: jne 0x44b600
44b4bb: test dh, 2
44b4be: jne 0x44b3c0
44b4c4: test ah, 4
44b4c7: jne 0x44b610
44b4cd: test dh, 4
44b4d0: jne 0x44b3c0
44b4d6: lea rax, [rdi + 0xb]
44b4da: ret 
44b4db: nop dword ptr [rax + rax]
44b4e0: test al, al
44b4e2: je 0x44b530
44b4e4: test al, 1
44b4e6: jne 0x44b580
44b4ec: test al, 2
44b4ee: jne 0x44b590
44b4f4: test al, 4
44b4f6: jne 0x44b5a0
44b4fc: test al, 8
44b4fe: jne 0x44b5b0
44b504: test al, 0x10
44b506: jne 0x44b5c0
44b50c: test al, 0x20
44b50e: jne 0x44b5d0
44b514: test al, 0x40
44b516: jne 0x44b5e0
44b51c: lea rax, [rdi + 7]
44b520: ret 
44b521: nop word ptr cs:[rax + rax]
44b52c: nop dword ptr [rax]
44b530: test ah, 1
44b533: jne 0x44b5f0
44b539: test ah, 2
44b53c: jne 0x44b600
44b542: test ah, 4
44b545: jne 0x44b610
44b54b: test ah, 8
44b54e: jne 0x44b620
44b554: test ah, 0x10
44b557: jne 0x44b630
44b55d: test ah, 0x20
44b560: jne 0x44b640
44b566: test ah, 0x40
44b569: jne 0x44b650
44b56f: lea rax, [rdi + 0xf]
44b573: ret 
44b574: nop word ptr cs:[rax + rax]
44b57f: nop 
44b580: lea rax, [rdi]
44b583: ret 
44b584: nop word ptr cs:[rax + rax]
44b58f: nop 
44b590: lea rax, [rdi + 1]
44b594: ret 
44b595: nop word ptr cs:[rax + rax]
44b5a0: lea rax, [rdi + 2]
44b5a4: ret 
44b5a5: nop word ptr cs:[rax + rax]
44b5b0: lea rax, [rdi + 3]
44b5b4: ret 
44b5b5: nop word ptr cs:[rax + rax]
44b5c0: lea rax, [rdi + 4]
44b5c4: ret 
44b5c5: nop word ptr cs:[rax + rax]
44b5d0: lea rax, [rdi + 5]
44b5d4: ret 
44b5d5: nop word ptr cs:[rax + rax]
44b5e0: lea rax, [rdi + 6]
44b5e4: ret 
44b5e5: nop word ptr cs:[rax + rax]
44b5f0: lea rax, [rdi + 8]
44b5f4: ret 
44b5f5: nop word ptr cs:[rax + rax]
44b600: lea rax, [rdi + 9]
44b604: ret 
44b605: nop word ptr cs:[rax + rax]
44b610: lea rax, [rdi + 0xa]
44b614: ret 
44b615: nop word ptr cs:[rax + rax]
44b620: lea rax, [rdi + 0xb]
44b624: ret 
44b625: nop word ptr cs:[rax + rax]
44b630: lea rax, [rdi + 0xc]
44b634: ret 
44b635: nop word ptr cs:[rax + rax]
44b640: lea rax, [rdi + 0xd]
44b644: ret 
44b645: nop word ptr cs:[rax + rax]
44b650: lea rax, [rdi + 0xe]
44b654: ret 
44b655: nop word ptr cs:[rax + rax]
44b65f: nop 
44b660: endbr64 
44b664: mov rcx, rdx
44b667: mov rdx, rdi
44b66a: cmp rcx, 0x30
44b66e: jae 0x44b680
44b670: add rsi, rcx
44b673: add rdi, rcx
44b676: jmp 0x44c930
44b67b: nop dword ptr [rax + rax]
44b680: movdqu xmm3, xmmword ptr [rdi]
44b684: movdqu xmm0, xmmword ptr [rsi]
44b688: pcmpeqb xmm3, xmm0
44b68c: pmovmskb edx, xmm3
44b690: lea rdi, [rdi + 0x10]
44b694: lea rsi, [rsi + 0x10]
44b698: sub edx, 0xffff
44b69e: jne 0x44c83c
44b6a4: mov edx, edi
44b6a6: and edx, 0xf
44b6a9: xor rdi, rdx
44b6ac: sub rsi, rdx
44b6af: add rcx, rdx
44b6b2: mov edx, esi
44b6b4: and edx, 0xf
44b6b7: je 0x44b750
44b6bd: xor rsi, rdx
44b6c0: cmp edx, 8
44b6c3: jae 0x44b70c
44b6c5: cmp edx, 0
44b6c8: je 0x44b750
44b6ce: cmp edx, 1
44b6d1: je 0x44b830
44b6d7: cmp edx, 2
44b6da: je 0x44b940
44b6e0: cmp edx, 3
44b6e3: je 0x44ba50
44b6e9: cmp edx, 4
44b6ec: je 0x44bb60
44b6f2: cmp edx, 5
44b6f5: je 0x44bc70
44b6fb: cmp edx, 6
44b6fe: je 0x44bd80
44b704: jmp 0x44be90
44b709: nop dword ptr [rax]
44b70c: cmp edx, 8
44b70f: je 0x44bfa0
44b715: cmp edx, 9
44b718: je 0x44c0b0
44b71e: cmp edx, 0xa
44b721: je 0x44c1c0
44b727: cmp edx, 0xb
44b72a: je 0x44c2d0
44b730: cmp edx, 0xc
44b733: je 0x44c3e0
44b739: cmp edx, 0xd
44b73c: je 0x44c4f0
44b742: cmp edx, 0xe
44b745: je 0x44c600
44b74b: jmp 0x44c710
44b750: cmp rcx, 0x50
44b754: lea rcx, [rcx - 0x30]
44b758: jae 0x44b7a0
44b75a: xor eax, eax
44b75c: movdqa xmm1, xmmword ptr [rsi]
44b760: pcmpeqb xmm1, xmmword ptr [rdi]
44b764: movdqa xmm2, xmmword ptr [rsi + 0x10]
44b769: pcmpeqb xmm2, xmmword ptr [rdi + 0x10]
44b76e: pand xmm2, xmm1
44b772: pmovmskb edx, xmm2
44b776: lea rdi, [rdi + 0x20]
44b77a: lea rsi, [rsi + 0x20]
44b77e: sub edx, 0xffff
44b784: jne 0x44c820
44b78a: add rsi, rcx
44b78d: add rdi, rcx
44b790: jmp 0x44c930
44b795: nop word ptr cs:[rax + rax]
44b7a0: movdqa xmm0, xmmword ptr [rsi]
44b7a4: xor eax, eax
44b7a6: pcmpeqb xmm0, xmmword ptr [rdi]
44b7aa: sub rcx, 0x20
44b7ae: movdqa xmm2, xmmword ptr [rsi + 0x10]
44b7b3: pcmpeqb xmm2, xmmword ptr [rdi + 0x10]
44b7b8: pand xmm2, xmm0
44b7bc: sub rcx, 0x20
44b7c0: pmovmskb edx, xmm2
44b7c4: movdqa xmm1, xmm0
44b7c8: movdqa xmm0, xmmword ptr [rsi + 0x20]
44b7cd: movdqa xmm2, xmmword ptr [rsi + 0x30]
44b7d2: sbb edx, 0xffff
44b7d8: pcmpeqb xmm0, xmmword ptr [rdi + 0x20]
44b7dd: pcmpeqb xmm2, xmmword ptr [rdi + 0x30]
44b7e2: lea rdi, [rdi + 0x20]
44b7e6: lea rsi, [rsi + 0x20]
44b7ea: je 0x44b7b8
44b7ec: pand xmm2, xmm0
44b7f0: cmp rcx, 0
44b7f4: jge 0x44b7fc
44b7f6: inc edx
44b7f8: add rcx, 0x20
44b7fc: test edx, edx
44b7fe: jne 0x44c820
44b804: pmovmskb edx, xmm2
44b808: movdqa xmm1, xmm0
44b80c: lea rdi, [rdi + 0x20]
44b810: lea rsi, [rsi + 0x20]
44b814: sub edx, 0xffff
44b81a: jne 0x44c820
44b820: add rsi, rcx
44b823: add rdi, rcx
44b826: jmp 0x44c930
44b82b: nop dword ptr [rax + rax]
44b830: cmp rcx, 0x50
44b834: lea rcx, [rcx - 0x30]
44b838: mov eax, edx
44b83a: jae 0x44b890
44b83c: movdqa xmm1, xmmword ptr [rsi + 0x10]
44b841: movdqa xmm2, xmm1
44b845: palignr xmm1, xmmword ptr [rsi], 1
44b84b: pcmpeqb xmm1, xmmword ptr [rdi]
44b84f: movdqa xmm3, xmmword ptr [rsi + 0x20]
44b854: palignr xmm3, xmm2, 1
44b85a: pcmpeqb xmm3, xmmword ptr [rdi + 0x10]
44b85f: pand xmm3, xmm1
44b863: pmovmskb edx, xmm3
44b867: lea rdi, [rdi + 0x20]
44b86b: lea rsi, [rsi + 0x20]
44b86f: sub edx, 0xffff
44b875: jne 0x44c820
44b87b: add rsi, 1
44b87f: add rsi, rcx
44b882: add rdi, rcx
44b885: jmp 0x44c930
44b88a: nop word ptr [rax + rax]
44b890: sub rcx, 0x20
44b894: movdqa xmm0, xmmword ptr [rsi + 0x10]
44b899: palignr xmm0, xmmword ptr [rsi], 1
44b89f: pcmpeqb xmm0, xmmword ptr [rdi]
44b8a3: movdqa xmm3, xmmword ptr [rsi + 0x20]
44b8a8: palignr xmm3, xmmword ptr [rsi + 0x10], 1
44b8af: pcmpeqb xmm3, xmmword ptr [rdi + 0x10]
44b8b4: pand xmm3, xmm0
44b8b8: sub rcx, 0x20
44b8bc: pmovmskb edx, xmm3
44b8c0: movdqa xmm1, xmm0
44b8c4: movdqa xmm3, xmmword ptr [rsi + 0x40]
44b8c9: palignr xmm3, xmmword ptr [rsi + 0x30], 1
44b8d0: sbb edx, 0xffff
44b8d6: movdqa xmm0, xmmword ptr [rsi + 0x30]
44b8db: palignr xmm0, xmmword ptr [rsi + 0x20], 1
44b8e2: pcmpeqb xmm0, xmmword ptr [rdi + 0x20]
44b8e7: lea rsi, [rsi + 0x20]
44b8eb: pcmpeqb xmm3, xmmword ptr [rdi + 0x30]
44b8f0: lea rdi, [rdi + 0x20]
44b8f4: je 0x44b8b4
44b8f6: pand xmm3, xmm0
44b8fa: cmp rcx, 0
44b8fe: jge 0x44b906
44b900: inc edx
44b902: add rcx, 0x20
44b906: test edx, edx
44b908: jne 0x44c820
44b90e: pmovmskb edx, xmm3
44b912: movdqa xmm1, xmm0
44b916: lea rdi, [rdi + 0x20]
44b91a: lea rsi, [rsi + 0x20]
44b91e: sub edx, 0xffff
44b924: jne 0x44c820
44b92a: lea rsi, [rsi + 1]
44b92e: add rsi, rcx
44b931: add rdi, rcx
44b934: jmp 0x44c930
44b939: nop dword ptr [rax]
44b940: cmp rcx, 0x50
44b944: lea rcx, [rcx - 0x30]
44b948: mov eax, edx
44b94a: jae 0x44b9a0
44b94c: movdqa xmm1, xmmword ptr [rsi + 0x10]
44b951: movdqa xmm2, xmm1
44b955: palignr xmm1, xmmword ptr [rsi], 2
44b95b: pcmpeqb xmm1, xmmword ptr [rdi]
44b95f: movdqa xmm3, xmmword ptr [rsi + 0x20]
44b964: palignr xmm3, xmm2, 2
44b96a: pcmpeqb xmm3, xmmword ptr [rdi + 0x10]
44b96f: pand xmm3, xmm1
44b973: pmovmskb edx, xmm3
44b977: lea rdi, [rdi + 0x20]
44b97b: lea rsi, [rsi + 0x20]
44b97f: sub edx, 0xffff
44b985: jne 0x44c820
44b98b: add rsi, 2
44b98f: add rsi, rcx
44b992: add rdi, rcx
44b995: jmp 0x44c930
44b99a: nop word ptr [rax + rax]
44b9a0: sub rcx, 0x20
44b9a4: movdqa xmm0, xmmword ptr [rsi + 0x10]
44b9a9: palignr xmm0, xmmword ptr [rsi], 2
44b9af: pcmpeqb xmm0, xmmword ptr [rdi]
44b9b3: movdqa xmm3, xmmword ptr [rsi + 0x20]
44b9b8: palignr xmm3, xmmword ptr [rsi + 0x10], 2
44b9bf: pcmpeqb xmm3, xmmword ptr [rdi + 0x10]
44b9c4: pand xmm3, xmm0
44b9c8: sub rcx, 0x20
44b9cc: pmovmskb edx, xmm3
44b9d0: movdqa xmm1, xmm0
44b9d4: movdqa xmm3, xmmword ptr [rsi + 0x40]
44b9d9: palignr xmm3, xmmword ptr [rsi + 0x30], 2
44b9e0: sbb edx, 0xffff
44b9e6: movdqa xmm0, xmmword ptr [rsi + 0x30]
44b9eb: palignr xmm0, xmmword ptr [rsi + 0x20], 2
44b9f2: pcmpeqb xmm0, xmmword ptr [rdi + 0x20]
44b9f7: lea rsi, [rsi + 0x20]
44b9fb: pcmpeqb xmm3, xmmword ptr [rdi + 0x30]
44ba00: lea rdi, [rdi + 0x20]
44ba04: je 0x44b9c4
44ba06: pand xmm3, xmm0
44ba0a: cmp rcx, 0
44ba0e: jge 0x44ba16
44ba10: inc edx
44ba12: add rcx, 0x20
44ba16: test edx, edx
44ba18: jne 0x44c820
44ba1e: pmovmskb edx, xmm3
44ba22: movdqa xmm1, xmm0
44ba26: lea rdi, [rdi + 0x20]
44ba2a: lea rsi, [rsi + 0x20]
44ba2e: sub edx, 0xffff
44ba34: jne 0x44c820
44ba3a: lea rsi, [rsi + 2]
44ba3e: add rsi, rcx
44ba41: add rdi, rcx
44ba44: jmp 0x44c930
44ba49: nop dword ptr [rax]
44ba50: cmp rcx, 0x50
44ba54: lea rcx, [rcx - 0x30]
44ba58: mov eax, edx
44ba5a: jae 0x44bab0
44ba5c: movdqa xmm1, xmmword ptr [rsi + 0x10]
44ba61: movdqa xmm2, xmm1
44ba65: palignr xmm1, xmmword ptr [rsi], 3
44ba6b: pcmpeqb xmm1, xmmword ptr [rdi]
44ba6f: movdqa xmm3, xmmword ptr [rsi + 0x20]
44ba74: palignr xmm3, xmm2, 3
44ba7a: pcmpeqb xmm3, xmmword ptr [rdi + 0x10]
44ba7f: pand xmm3, xmm1
44ba83: pmovmskb edx, xmm3
44ba87: lea rdi, [rdi + 0x20]
44ba8b: lea rsi, [rsi + 0x20]
44ba8f: sub edx, 0xffff
44ba95: jne 0x44c820
44ba9b: add rsi, 3
44ba9f: add rsi, rcx
44baa2: add rdi, rcx
44baa5: jmp 0x44c930
44baaa: nop word ptr [rax + rax]
44bab0: sub rcx, 0x20
44bab4: movdqa xmm0, xmmword ptr [rsi + 0x10]
44bab9: palignr xmm0, xmmword ptr [rsi], 3
44babf: pcmpeqb xmm0, xmmword ptr [rdi]
44bac3: movdqa xmm3, xmmword ptr [rsi + 0x20]
44bac8: palignr xmm3, xmmword ptr [rsi + 0x10], 3
44bacf: pcmpeqb xmm3, xmmword ptr [rdi + 0x10]
44bad4: pand xmm3, xmm0
44bad8: sub rcx, 0x20
44badc: pmovmskb edx, xmm3
44bae0: movdqa xmm1, xmm0
44bae4: movdqa xmm3, xmmword ptr [rsi + 0x40]
44bae9: palignr xmm3, xmmword ptr [rsi + 0x30], 3
44baf0: sbb edx, 0xffff
44baf6: movdqa xmm0, xmmword ptr [rsi + 0x30]
44bafb: palignr xmm0, xmmword ptr [rsi + 0x20], 3
44bb02: pcmpeqb xmm0, xmmword ptr [rdi + 0x20]
44bb07: lea rsi, [rsi + 0x20]
44bb0b: pcmpeqb xmm3, xmmword ptr [rdi + 0x30]
44bb10: lea rdi, [rdi + 0x20]
44bb14: je 0x44bad4
44bb16: pand xmm3, xmm0
44bb1a: cmp rcx, 0
44bb1e: jge 0x44bb26
44bb20: inc edx
44bb22: add rcx, 0x20
44bb26: test edx, edx
44bb28: jne 0x44c820
44bb2e: pmovmskb edx, xmm3
44bb32: movdqa xmm1, xmm0
44bb36: lea rdi, [rdi + 0x20]
44bb3a: lea rsi, [rsi + 0x20]
44bb3e: sub edx, 0xffff
44bb44: jne 0x44c820
44bb4a: lea rsi, [rsi + 3]
44bb4e: add rsi, rcx
44bb51: add rdi, rcx
44bb54: jmp 0x44c930
44bb59: nop dword ptr [rax]
44bb60: cmp rcx, 0x50
44bb64: lea rcx, [rcx - 0x30]
44bb68: mov eax, edx
44bb6a: jae 0x44bbc0
44bb6c: movdqa xmm1, xmmword ptr [rsi + 0x10]
44bb71: movdqa xmm2, xmm1
44bb75: palignr xmm1, xmmword ptr [rsi], 4
44bb7b: pcmpeqb xmm1, xmmword ptr [rdi]
44bb7f: movdqa xmm3, xmmword ptr [rsi + 0x20]
44bb84: palignr xmm3, xmm2, 4
44bb8a: pcmpeqb xmm3, xmmword ptr [rdi + 0x10]
44bb8f: pand xmm3, xmm1
44bb93: pmovmskb edx, xmm3
44bb97: lea rdi, [rdi + 0x20]
44bb9b: lea rsi, [rsi + 0x20]
44bb9f: sub edx, 0xffff
44bba5: jne 0x44c820
44bbab: add rsi, 4
44bbaf: add rsi, rcx
44bbb2: add rdi, rcx
44bbb5: jmp 0x44c930
44bbba: nop word ptr [rax + rax]
44bbc0: sub rcx, 0x20
44bbc4: movdqa xmm0, xmmword ptr [rsi + 0x10]
44bbc9: palignr xmm0, xmmword ptr [rsi], 4
44bbcf: pcmpeqb xmm0, xmmword ptr [rdi]
44bbd3: movdqa xmm3, xmmword ptr [rsi + 0x20]
44bbd8: palignr xmm3, xmmword ptr [rsi + 0x10], 4
44bbdf: pcmpeqb xmm3, xmmword ptr [rdi + 0x10]
44bbe4: pand xmm3, xmm0
44bbe8: sub rcx, 0x20
44bbec: pmovmskb edx, xmm3
44bbf0: movdqa xmm1, xmm0
44bbf4: movdqa xmm3, xmmword ptr [rsi + 0x40]
44bbf9: palignr xmm3, xmmword ptr [rsi + 0x30], 4
44bc00: sbb edx, 0xffff
44bc06: movdqa xmm0, xmmword ptr [rsi + 0x30]
44bc0b: palignr xmm0, xmmword ptr [rsi + 0x20], 4
44bc12: pcmpeqb xmm0, xmmword ptr [rdi + 0x20]
44bc17: lea rsi, [rsi + 0x20]
44bc1b: pcmpeqb xmm3, xmmword ptr [rdi + 0x30]
44bc20: lea rdi, [rdi + 0x20]
44bc24: je 0x44bbe4
44bc26: pand xmm3, xmm0
44bc2a: cmp rcx, 0
44bc2e: jge 0x44bc36
44bc30: inc edx
44bc32: add rcx, 0x20
44bc36: test edx, edx
44bc38: jne 0x44c820
44bc3e: pmovmskb edx, xmm3
44bc42: movdqa xmm1, xmm0
44bc46: lea rdi, [rdi + 0x20]
44bc4a: lea rsi, [rsi + 0x20]
44bc4e: sub edx, 0xffff
44bc54: jne 0x44c820
44bc5a: lea rsi, [rsi + 4]
44bc5e: add rsi, rcx
44bc61: add rdi, rcx
44bc64: jmp 0x44c930
44bc69: nop dword ptr [rax]
44bc70: cmp rcx, 0x50
44bc74: lea rcx, [rcx - 0x30]
44bc78: mov eax, edx
44bc7a: jae 0x44bcd0
44bc7c: movdqa xmm1, xmmword ptr [rsi + 0x10]
44bc81: movdqa xmm2, xmm1
44bc85: palignr xmm1, xmmword ptr [rsi], 5
44bc8b: pcmpeqb xmm1, xmmword ptr [rdi]
44bc8f: movdqa xmm3, xmmword ptr [rsi + 0x20]
44bc94: palignr xmm3, xmm2, 5
44bc9a: pcmpeqb xmm3, xmmword ptr [rdi + 0x10]
44bc9f: pand xmm3, xmm1
44bca3: pmovmskb edx, xmm3
44bca7: lea rdi, [rdi + 0x20]
44bcab: lea rsi, [rsi + 0x20]
44bcaf: sub edx, 0xffff
44bcb5: jne 0x44c820
44bcbb: add rsi, 5
44bcbf: add rsi, rcx
44bcc2: add rdi, rcx
44bcc5: jmp 0x44c930
44bcca: nop word ptr [rax + rax]
44bcd0: sub rcx, 0x20
44bcd4: movdqa xmm0, xmmword ptr [rsi + 0x10]
44bcd9: palignr xmm0, xmmword ptr [rsi], 5
44bcdf: pcmpeqb xmm0, xmmword ptr [rdi]
44bce3: movdqa xmm3, xmmword ptr [rsi + 0x20]
44bce8: palignr xmm3, xmmword ptr [rsi + 0x10], 5
44bcef: pcmpeqb xmm3, xmmword ptr [rdi + 0x10]
44bcf4: pand xmm3, xmm0
44bcf8: sub rcx, 0x20
44bcfc: pmovmskb edx, xmm3
44bd00: movdqa xmm1, xmm0
44bd04: movdqa xmm3, xmmword ptr [rsi + 0x40]
44bd09: palignr xmm3, xmmword ptr [rsi + 0x30], 5
44bd10: sbb edx, 0xffff
44bd16: movdqa xmm0, xmmword ptr [rsi + 0x30]
44bd1b: palignr xmm0, xmmword ptr [rsi + 0x20], 5
44bd22: pcmpeqb xmm0, xmmword ptr [rdi + 0x20]
44bd27: lea rsi, [rsi + 0x20]
44bd2b: pcmpeqb xmm3, xmmword ptr [rdi + 0x30]
44bd30: lea rdi, [rdi + 0x20]
44bd34: je 0x44bcf4
44bd36: pand xmm3, xmm0
44bd3a: cmp rcx, 0
44bd3e: jge 0x44bd46
44bd40: inc edx
44bd42: add rcx, 0x20
44bd46: test edx, edx
44bd48: jne 0x44c820
44bd4e: pmovmskb edx, xmm3
44bd52: movdqa xmm1, xmm0
44bd56: lea rdi, [rdi + 0x20]
44bd5a: lea rsi, [rsi + 0x20]
44bd5e: sub edx, 0xffff
44bd64: jne 0x44c820
44bd6a: lea rsi, [rsi + 5]
44bd6e: add rsi, rcx
44bd71: add rdi, rcx
44bd74: jmp 0x44c930
44bd79: nop dword ptr [rax]
44bd80: cmp rcx, 0x50
44bd84: lea rcx, [rcx - 0x30]
44bd88: mov eax, edx
44bd8a: jae 0x44bde0
44bd8c: movdqa xmm1, xmmword ptr [rsi + 0x10]
44bd91: movdqa xmm2, xmm1
44bd95: palignr xmm1, xmmword ptr [rsi], 6
44bd9b: pcmpeqb xmm1, xmmword ptr [rdi]
44bd9f: movdqa xmm3, xmmword ptr [rsi + 0x20]
44bda4: palignr xmm3, xmm2, 6
44bdaa: pcmpeqb xmm3, xmmword ptr [rdi + 0x10]
44bdaf: pand xmm3, xmm1
44bdb3: pmovmskb edx, xmm3
44bdb7: lea rdi, [rdi + 0x20]
44bdbb: lea rsi, [rsi + 0x20]
44bdbf: sub edx, 0xffff
44bdc5: jne 0x44c820
44bdcb: add rsi, 6
44bdcf: add rsi, rcx
44bdd2: add rdi, rcx
44bdd5: jmp 0x44c930
44bdda: nop word ptr [rax + rax]
44bde0: sub rcx, 0x20
44bde4: movdqa xmm0, xmmword ptr [rsi + 0x10]
44bde9: palignr xmm0, xmmword ptr [rsi], 6
44bdef: pcmpeqb xmm0, xmmword ptr [rdi]
44bdf3: movdqa xmm3, xmmword ptr [rsi + 0x20]
44bdf8: palignr xmm3, xmmword ptr [rsi + 0x10], 6
44bdff: pcmpeqb xmm3, xmmword ptr [rdi + 0x10]
44be04: pand xmm3, xmm0
44be08: sub rcx, 0x20
44be0c: pmovmskb edx, xmm3
44be10: movdqa xmm1, xmm0
44be14: movdqa xmm3, xmmword ptr [rsi + 0x40]
44be19: palignr xmm3, xmmword ptr [rsi + 0x30], 6
44be20: sbb edx, 0xffff
44be26: movdqa xmm0, xmmword ptr [rsi + 0x30]
44be2b: palignr xmm0, xmmword ptr [rsi + 0x20], 6
44be32: pcmpeqb xmm0, xmmword ptr [rdi + 0x20]
44be37: lea rsi, [rsi + 0x20]
44be3b: pcmpeqb xmm3, xmmword ptr [rdi + 0x30]
44be40: lea rdi, [rdi + 0x20]
44be44: je 0x44be04
44be46: pand xmm3, xmm0
44be4a: cmp rcx, 0
44be4e: jge 0x44be56
44be50: inc edx
44be52: add rcx, 0x20
44be56: test edx, edx
44be58: jne 0x44c820
44be5e: pmovmskb edx, xmm3
44be62: movdqa xmm1, xmm0
44be66: lea rdi, [rdi + 0x20]
44be6a: lea rsi, [rsi + 0x20]
44be6e: sub edx, 0xffff
44be74: jne 0x44c820
44be7a: lea rsi, [rsi + 6]
44be7e: add rsi, rcx
44be81: add rdi, rcx
44be84: jmp 0x44c930
44be89: nop dword ptr [rax]
44be90: cmp rcx, 0x50
44be94: lea rcx, [rcx - 0x30]
44be98: mov eax, edx
44be9a: jae 0x44bef0
44be9c: movdqa xmm1, xmmword ptr [rsi + 0x10]
44bea1: movdqa xmm2, xmm1
44bea5: palignr xmm1, xmmword ptr [rsi], 7
44beab: pcmpeqb xmm1, xmmword ptr [rdi]
44beaf: movdqa xmm3, xmmword ptr [rsi + 0x20]
44beb4: palignr xmm3, xmm2, 7
44beba: pcmpeqb xmm3, xmmword ptr [rdi + 0x10]
44bebf: pand xmm3, xmm1
44bec3: pmovmskb edx, xmm3
44bec7: lea rdi, [rdi + 0x20]
44becb: lea rsi, [rsi + 0x20]
44becf: sub edx, 0xffff
44bed5: jne 0x44c820
44bedb: add rsi, 7
44bedf: add rsi, rcx
44bee2: add rdi, rcx
44bee5: jmp 0x44c930
44beea: nop word ptr [rax + rax]
44bef0: sub rcx, 0x20
44bef4: movdqa xmm0, xmmword ptr [rsi + 0x10]
44bef9: palignr xmm0, xmmword ptr [rsi], 7
44beff: pcmpeqb xmm0, xmmword ptr [rdi]
44bf03: movdqa xmm3, xmmword ptr [rsi + 0x20]
44bf08: palignr xmm3, xmmword ptr [rsi + 0x10], 7
44bf0f: pcmpeqb xmm3, xmmword ptr [rdi + 0x10]
44bf14: pand xmm3, xmm0
44bf18: sub rcx, 0x20
44bf1c: pmovmskb edx, xmm3
44bf20: movdqa xmm1, xmm0
44bf24: movdqa xmm3, xmmword ptr [rsi + 0x40]
44bf29: palignr xmm3, xmmword ptr [rsi + 0x30], 7
44bf30: sbb edx, 0xffff
44bf36: movdqa xmm0, xmmword ptr [rsi + 0x30]
44bf3b: palignr xmm0, xmmword ptr [rsi + 0x20], 7
44bf42: pcmpeqb xmm0, xmmword ptr [rdi + 0x20]
44bf47: lea rsi, [rsi + 0x20]
44bf4b: pcmpeqb xmm3, xmmword ptr [rdi + 0x30]
44bf50: lea rdi, [rdi + 0x20]
44bf54: je 0x44bf14
44bf56: pand xmm3, xmm0
44bf5a: cmp rcx, 0
44bf5e: jge 0x44bf66
44bf60: inc edx
44bf62: add rcx, 0x20
44bf66: test edx, edx
44bf68: jne 0x44c820
44bf6e: pmovmskb edx, xmm3
44bf72: movdqa xmm1, xmm0
44bf76: lea rdi, [rdi + 0x20]
44bf7a: lea rsi, [rsi + 0x20]
44bf7e: sub edx, 0xffff
44bf84: jne 0x44c820
44bf8a: lea rsi, [rsi + 7]
44bf8e: add rsi, rcx
44bf91: add rdi, rcx
44bf94: jmp 0x44c930
44bf99: nop dword ptr [rax]
44bfa0: cmp rcx, 0x50
44bfa4: lea rcx, [rcx - 0x30]
44bfa8: mov eax, edx
44bfaa: jae 0x44c000
44bfac: movdqa xmm1, xmmword ptr [rsi + 0x10]
44bfb1: movdqa xmm2, xmm1
44bfb5: palignr xmm1, xmmword ptr [rsi], 8
44bfbb: pcmpeqb xmm1, xmmword ptr [rdi]
44bfbf: movdqa xmm3, xmmword ptr [rsi + 0x20]
44bfc4: palignr xmm3, xmm2, 8
44bfca: pcmpeqb xmm3, xmmword ptr [rdi + 0x10]
44bfcf: pand xmm3, xmm1
44bfd3: pmovmskb edx, xmm3
44bfd7: lea rdi, [rdi + 0x20]
44bfdb: lea rsi, [rsi + 0x20]
44bfdf: sub edx, 0xffff
44bfe5: jne 0x44c820
44bfeb: add rsi, 8
44bfef: add rsi, rcx
44bff2: add rdi, rcx
44bff5: jmp 0x44c930
44bffa: nop word ptr [rax + rax]
44c000: sub rcx, 0x20
44c004: movdqa xmm0, xmmword ptr [rsi + 0x10]
44c009: palignr xmm0, xmmword ptr [rsi], 8
44c00f: pcmpeqb xmm0, xmmword ptr [rdi]
44c013: movdqa xmm3, xmmword ptr [rsi + 0x20]
44c018: palignr xmm3, xmmword ptr [rsi + 0x10], 8
44c01f: pcmpeqb xmm3, xmmword ptr [rdi + 0x10]
44c024: pand xmm3, xmm0
44c028: sub rcx, 0x20
44c02c: pmovmskb edx, xmm3
44c030: movdqa xmm1, xmm0
44c034: movdqa xmm3, xmmword ptr [rsi + 0x40]
44c039: palignr xmm3, xmmword ptr [rsi + 0x30], 8
44c040: sbb edx, 0xffff
44c046: movdqa xmm0, xmmword ptr [rsi + 0x30]
44c04b: palignr xmm0, xmmword ptr [rsi + 0x20], 8
44c052: pcmpeqb xmm0, xmmword ptr [rdi + 0x20]
44c057: lea rsi, [rsi + 0x20]
44c05b: pcmpeqb xmm3, xmmword ptr [rdi + 0x30]
44c060: lea rdi, [rdi + 0x20]
44c064: je 0x44c024
44c066: pand xmm3, xmm0
44c06a: cmp rcx, 0
44c06e: jge 0x44c076
44c070: inc edx
44c072: add rcx, 0x20
44c076: test edx, edx
44c078: jne 0x44c820
44c07e: pmovmskb edx, xmm3
44c082: movdqa xmm1, xmm0
44c086: lea rdi, [rdi + 0x20]
44c08a: lea rsi, [rsi + 0x20]
44c08e: sub edx, 0xffff
44c094: jne 0x44c820
44c09a: lea rsi, [rsi + 8]
44c09e: add rsi, rcx
44c0a1: add rdi, rcx
44c0a4: jmp 0x44c930
44c0a9: nop dword ptr [rax]
44c0b0: cmp rcx, 0x50
44c0b4: lea rcx, [rcx - 0x30]
44c0b8: mov eax, edx
44c0ba: jae 0x44c110
44c0bc: movdqa xmm1, xmmword ptr [rsi + 0x10]
44c0c1: movdqa xmm2, xmm1
44c0c5: palignr xmm1, xmmword ptr [rsi], 9
44c0cb: pcmpeqb xmm1, xmmword ptr [rdi]
44c0cf: movdqa xmm3, xmmword ptr [rsi + 0x20]
44c0d4: palignr xmm3, xmm2, 9
44c0da: pcmpeqb xmm3, xmmword ptr [rdi + 0x10]
44c0df: pand xmm3, xmm1
44c0e3: pmovmskb edx, xmm3
44c0e7: lea rdi, [rdi + 0x20]
44c0eb: lea rsi, [rsi + 0x20]
44c0ef: sub edx, 0xffff
44c0f5: jne 0x44c820
44c0fb: add rsi, 9
44c0ff: add rsi, rcx
44c102: add rdi, rcx
44c105: jmp 0x44c930
44c10a: nop word ptr [rax + rax]
44c110: sub rcx, 0x20
44c114: movdqa xmm0, xmmword ptr [rsi + 0x10]
44c119: palignr xmm0, xmmword ptr [rsi], 9
44c11f: pcmpeqb xmm0, xmmword ptr [rdi]
44c123: movdqa xmm3, xmmword ptr [rsi + 0x20]
44c128: palignr xmm3, xmmword ptr [rsi + 0x10], 9
44c12f: pcmpeqb xmm3, xmmword ptr [rdi + 0x10]
44c134: pand xmm3, xmm0
44c138: sub rcx, 0x20
44c13c: pmovmskb edx, xmm3
44c140: movdqa xmm1, xmm0
44c144: movdqa xmm3, xmmword ptr [rsi + 0x40]
44c149: palignr xmm3, xmmword ptr [rsi + 0x30], 9
44c150: sbb edx, 0xffff
44c156: movdqa xmm0, xmmword ptr [rsi + 0x30]
44c15b: palignr xmm0, xmmword ptr [rsi + 0x20], 9
44c162: pcmpeqb xmm0, xmmword ptr [rdi + 0x20]
44c167: lea rsi, [rsi + 0x20]
44c16b: pcmpeqb xmm3, xmmword ptr [rdi + 0x30]
44c170: lea rdi, [rdi + 0x20]
44c174: je 0x44c134
44c176: pand xmm3, xmm0
44c17a: cmp rcx, 0
44c17e: jge 0x44c186
44c180: inc edx
44c182: add rcx, 0x20
44c186: test edx, edx
44c188: jne 0x44c820
44c18e: pmovmskb edx, xmm3
44c192: movdqa xmm1, xmm0
44c196: lea rdi, [rdi + 0x20]
44c19a: lea rsi, [rsi + 0x20]
44c19e: sub edx, 0xffff
44c1a4: jne 0x44c820
44c1aa: lea rsi, [rsi + 9]
44c1ae: add rsi, rcx
44c1b1: add rdi, rcx
44c1b4: jmp 0x44c930
44c1b9: nop dword ptr [rax]
44c1c0: cmp rcx, 0x50
44c1c4: lea rcx, [rcx - 0x30]
44c1c8: mov eax, edx
44c1ca: jae 0x44c220
44c1cc: movdqa xmm1, xmmword ptr [rsi + 0x10]
44c1d1: movdqa xmm2, xmm1
44c1d5: palignr xmm1, xmmword ptr [rsi], 0xa
44c1db: pcmpeqb xmm1, xmmword ptr [rdi]
44c1df: movdqa xmm3, xmmword ptr [rsi + 0x20]
44c1e4: palignr xmm3, xmm2, 0xa
44c1ea: pcmpeqb xmm3, xmmword ptr [rdi + 0x10]
44c1ef: pand xmm3, xmm1
44c1f3: pmovmskb edx, xmm3
44c1f7: lea rdi, [rdi + 0x20]
44c1fb: lea rsi, [rsi + 0x20]
44c1ff: sub edx, 0xffff
44c205: jne 0x44c820
44c20b: add rsi, 0xa
44c20f: add rsi, rcx
44c212: add rdi, rcx
44c215: jmp 0x44c930
44c21a: nop word ptr [rax + rax]
44c220: sub rcx, 0x20
44c224: movdqa xmm0, xmmword ptr [rsi + 0x10]
44c229: palignr xmm0, xmmword ptr [rsi], 0xa
44c22f: pcmpeqb xmm0, xmmword ptr [rdi]
44c233: movdqa xmm3, xmmword ptr [rsi + 0x20]
44c238: palignr xmm3, xmmword ptr [rsi + 0x10], 0xa
44c23f: pcmpeqb xmm3, xmmword ptr [rdi + 0x10]
44c244: pand xmm3, xmm0
44c248: sub rcx, 0x20
44c24c: pmovmskb edx, xmm3
44c250: movdqa xmm1, xmm0
44c254: movdqa xmm3, xmmword ptr [rsi + 0x40]
44c259: palignr xmm3, xmmword ptr [rsi + 0x30], 0xa
44c260: sbb edx, 0xffff
44c266: movdqa xmm0, xmmword ptr [rsi + 0x30]
44c26b: palignr xmm0, xmmword ptr [rsi + 0x20], 0xa
44c272: pcmpeqb xmm0, xmmword ptr [rdi + 0x20]
44c277: lea rsi, [rsi + 0x20]
44c27b: pcmpeqb xmm3, xmmword ptr [rdi + 0x30]
44c280: lea rdi, [rdi + 0x20]
44c284: je 0x44c244
44c286: pand xmm3, xmm0
44c28a: cmp rcx, 0
44c28e: jge 0x44c296
44c290: inc edx
44c292: add rcx, 0x20
44c296: test edx, edx
44c298: jne 0x44c820
44c29e: pmovmskb edx, xmm3
44c2a2: movdqa xmm1, xmm0
44c2a6: lea rdi, [rdi + 0x20]
44c2aa: lea rsi, [rsi + 0x20]
44c2ae: sub edx, 0xffff
44c2b4: jne 0x44c820
44c2ba: lea rsi, [rsi + 0xa]
44c2be: add rsi, rcx
44c2c1: add rdi, rcx
44c2c4: jmp 0x44c930
44c2c9: nop dword ptr [rax]
44c2d0: cmp rcx, 0x50
44c2d4: lea rcx, [rcx - 0x30]
44c2d8: mov eax, edx
44c2da: jae 0x44c330
44c2dc: movdqa xmm1, xmmword ptr [rsi + 0x10]
44c2e1: movdqa xmm2, xmm1
44c2e5: palignr xmm1, xmmword ptr [rsi], 0xb
44c2eb: pcmpeqb xmm1, xmmword ptr [rdi]
44c2ef: movdqa xmm3, xmmword ptr [rsi + 0x20]
44c2f4: palignr xmm3, xmm2, 0xb
44c2fa: pcmpeqb xmm3, xmmword ptr [rdi + 0x10]
44c2ff: pand xmm3, xmm1
44c303: pmovmskb edx, xmm3
44c307: lea rdi, [rdi + 0x20]
44c30b: lea rsi, [rsi + 0x20]
44c30f: sub edx, 0xffff
44c315: jne 0x44c820
44c31b: add rsi, 0xb
44c31f: add rsi, rcx
44c322: add rdi, rcx
44c325: jmp 0x44c930
44c32a: nop word ptr [rax + rax]
44c330: sub rcx, 0x20
44c334: movdqa xmm0, xmmword ptr [rsi + 0x10]
44c339: palignr xmm0, xmmword ptr [rsi], 0xb
44c33f: pcmpeqb xmm0, xmmword ptr [rdi]
44c343: movdqa xmm3, xmmword ptr [rsi + 0x20]
44c348: palignr xmm3, xmmword ptr [rsi + 0x10], 0xb
44c34f: pcmpeqb xmm3, xmmword ptr [rdi + 0x10]
44c354: pand xmm3, xmm0
44c358: sub rcx, 0x20
44c35c: pmovmskb edx, xmm3
44c360: movdqa xmm1, xmm0
44c364: movdqa xmm3, xmmword ptr [rsi + 0x40]
44c369: palignr xmm3, xmmword ptr [rsi + 0x30], 0xb
44c370: sbb edx, 0xffff
44c376: movdqa xmm0, xmmword ptr [rsi + 0x30]
44c37b: palignr xmm0, xmmword ptr [rsi + 0x20], 0xb
44c382: pcmpeqb xmm0, xmmword ptr [rdi + 0x20]
44c387: lea rsi, [rsi + 0x20]
44c38b: pcmpeqb xmm3, xmmword ptr [rdi + 0x30]
44c390: lea rdi, [rdi + 0x20]
44c394: je 0x44c354
44c396: pand xmm3, xmm0
44c39a: cmp rcx, 0
44c39e: jge 0x44c3a6
44c3a0: inc edx
44c3a2: add rcx, 0x20
44c3a6: test edx, edx
44c3a8: jne 0x44c820
44c3ae: pmovmskb edx, xmm3
44c3b2: movdqa xmm1, xmm0
44c3b6: lea rdi, [rdi + 0x20]
44c3ba: lea rsi, [rsi + 0x20]
44c3be: sub edx, 0xffff
44c3c4: jne 0x44c820
44c3ca: lea rsi, [rsi + 0xb]
44c3ce: add rsi, rcx
44c3d1: add rdi, rcx
44c3d4: jmp 0x44c930
44c3d9: nop dword ptr [rax]
44c3e0: cmp rcx, 0x50
44c3e4: lea rcx, [rcx - 0x30]
44c3e8: mov eax, edx
44c3ea: jae 0x44c440
44c3ec: movdqa xmm1, xmmword ptr [rsi + 0x10]
44c3f1: movdqa xmm2, xmm1
44c3f5: palignr xmm1, xmmword ptr [rsi], 0xc
44c3fb: pcmpeqb xmm1, xmmword ptr [rdi]
44c3ff: movdqa xmm3, xmmword ptr [rsi + 0x20]
44c404: palignr xmm3, xmm2, 0xc
44c40a: pcmpeqb xmm3, xmmword ptr [rdi + 0x10]
44c40f: pand xmm3, xmm1
44c413: pmovmskb edx, xmm3
44c417: lea rdi, [rdi + 0x20]
44c41b: lea rsi, [rsi + 0x20]
44c41f: sub edx, 0xffff
44c425: jne 0x44c820
44c42b: add rsi, 0xc
44c42f: add rsi, rcx
44c432: add rdi, rcx
44c435: jmp 0x44c930
44c43a: nop word ptr [rax + rax]
44c440: sub rcx, 0x20
44c444: movdqa xmm0, xmmword ptr [rsi + 0x10]
44c449: palignr xmm0, xmmword ptr [rsi], 0xc
44c44f: pcmpeqb xmm0, xmmword ptr [rdi]
44c453: movdqa xmm3, xmmword ptr [rsi + 0x20]
44c458: palignr xmm3, xmmword ptr [rsi + 0x10], 0xc
44c45f: pcmpeqb xmm3, xmmword ptr [rdi + 0x10]
44c464: pand xmm3, xmm0
44c468: sub rcx, 0x20
44c46c: pmovmskb edx, xmm3
44c470: movdqa xmm1, xmm0
44c474: movdqa xmm3, xmmword ptr [rsi + 0x40]
44c479: palignr xmm3, xmmword ptr [rsi + 0x30], 0xc
44c480: sbb edx, 0xffff
44c486: movdqa xmm0, xmmword ptr [rsi + 0x30]
44c48b: palignr xmm0, xmmword ptr [rsi + 0x20], 0xc
44c492: pcmpeqb xmm0, xmmword ptr [rdi + 0x20]
44c497: lea rsi, [rsi + 0x20]
44c49b: pcmpeqb xmm3, xmmword ptr [rdi + 0x30]
44c4a0: lea rdi, [rdi + 0x20]
44c4a4: je 0x44c464
44c4a6: pand xmm3, xmm0
44c4aa: cmp rcx, 0
44c4ae: jge 0x44c4b6
44c4b0: inc edx
44c4b2: add rcx, 0x20
44c4b6: test edx, edx
44c4b8: jne 0x44c820
44c4be: pmovmskb edx, xmm3
44c4c2: movdqa xmm1, xmm0
44c4c6: lea rdi, [rdi + 0x20]
44c4ca: lea rsi, [rsi + 0x20]
44c4ce: sub edx, 0xffff
44c4d4: jne 0x44c820
44c4da: lea rsi, [rsi + 0xc]
44c4de: add rsi, rcx
44c4e1: add rdi, rcx
44c4e4: jmp 0x44c930
44c4e9: nop dword ptr [rax]
44c4f0: cmp rcx, 0x50
44c4f4: lea rcx, [rcx - 0x30]
44c4f8: mov eax, edx
44c4fa: jae 0x44c550
44c4fc: movdqa xmm1, xmmword ptr [rsi + 0x10]
44c501: movdqa xmm2, xmm1
44c505: palignr xmm1, xmmword ptr [rsi], 0xd
44c50b: pcmpeqb xmm1, xmmword ptr [rdi]
44c50f: movdqa xmm3, xmmword ptr [rsi + 0x20]
44c514: palignr xmm3, xmm2, 0xd
44c51a: pcmpeqb xmm3, xmmword ptr [rdi + 0x10]
44c51f: pand xmm3, xmm1
44c523: pmovmskb edx, xmm3
44c527: lea rdi, [rdi + 0x20]
44c52b: lea rsi, [rsi + 0x20]
44c52f: sub edx, 0xffff
44c535: jne 0x44c820
44c53b: add rsi, 0xd
44c53f: add rsi, rcx
44c542: add rdi, rcx
44c545: jmp 0x44c930
44c54a: nop word ptr [rax + rax]
44c550: sub rcx, 0x20
44c554: movdqa xmm0, xmmword ptr [rsi + 0x10]
44c559: palignr xmm0, xmmword ptr [rsi], 0xd
44c55f: pcmpeqb xmm0, xmmword ptr [rdi]
44c563: movdqa xmm3, xmmword ptr [rsi + 0x20]
44c568: palignr xmm3, xmmword ptr [rsi + 0x10], 0xd
44c56f: pcmpeqb xmm3, xmmword ptr [rdi + 0x10]
44c574: pand xmm3, xmm0
44c578: sub rcx, 0x20
44c57c: pmovmskb edx, xmm3
44c580: movdqa xmm1, xmm0
44c584: movdqa xmm3, xmmword ptr [rsi + 0x40]
44c589: palignr xmm3, xmmword ptr [rsi + 0x30], 0xd
44c590: sbb edx, 0xffff
44c596: movdqa xmm0, xmmword ptr [rsi + 0x30]
44c59b: palignr xmm0, xmmword ptr [rsi + 0x20], 0xd
44c5a2: pcmpeqb xmm0, xmmword ptr [rdi + 0x20]
44c5a7: lea rsi, [rsi + 0x20]
44c5ab: pcmpeqb xmm3, xmmword ptr [rdi + 0x30]
44c5b0: lea rdi, [rdi + 0x20]
44c5b4: je 0x44c574
44c5b6: pand xmm3, xmm0
44c5ba: cmp rcx, 0
44c5be: jge 0x44c5c6
44c5c0: inc edx
44c5c2: add rcx, 0x20
44c5c6: test edx, edx
44c5c8: jne 0x44c820
44c5ce: pmovmskb edx, xmm3
44c5d2: movdqa xmm1, xmm0
44c5d6: lea rdi, [rdi + 0x20]
44c5da: lea rsi, [rsi + 0x20]
44c5de: sub edx, 0xffff
44c5e4: jne 0x44c820
44c5ea: lea rsi, [rsi + 0xd]
44c5ee: add rsi, rcx
44c5f1: add rdi, rcx
44c5f4: jmp 0x44c930
44c5f9: nop dword ptr [rax]
44c600: cmp rcx, 0x50
44c604: lea rcx, [rcx - 0x30]
44c608: mov eax, edx
44c60a: jae 0x44c660
44c60c: movdqa xmm1, xmmword ptr [rsi + 0x10]
44c611: movdqa xmm2, xmm1
44c615: palignr xmm1, xmmword ptr [rsi], 0xe
44c61b: pcmpeqb xmm1, xmmword ptr [rdi]
44c61f: movdqa xmm3, xmmword ptr [rsi + 0x20]
44c624: palignr xmm3, xmm2, 0xe
44c62a: pcmpeqb xmm3, xmmword ptr [rdi + 0x10]
44c62f: pand xmm3, xmm1
44c633: pmovmskb edx, xmm3
44c637: lea rdi, [rdi + 0x20]
44c63b: lea rsi, [rsi + 0x20]
44c63f: sub edx, 0xffff
44c645: jne 0x44c820
44c64b: add rsi, 0xe
44c64f: add rsi, rcx
44c652: add rdi, rcx
44c655: jmp 0x44c930
44c65a: nop word ptr [rax + rax]
44c660: sub rcx, 0x20
44c664: movdqa xmm0, xmmword ptr [rsi + 0x10]
44c669: palignr xmm0, xmmword ptr [rsi], 0xe
44c66f: pcmpeqb xmm0, xmmword ptr [rdi]
44c673: movdqa xmm3, xmmword ptr [rsi + 0x20]
44c678: palignr xmm3, xmmword ptr [rsi + 0x10], 0xe
44c67f: pcmpeqb xmm3, xmmword ptr [rdi + 0x10]
44c684: pand xmm3, xmm0
44c688: sub rcx, 0x20
44c68c: pmovmskb edx, xmm3
44c690: movdqa xmm1, xmm0
44c694: movdqa xmm3, xmmword ptr [rsi + 0x40]
44c699: palignr xmm3, xmmword ptr [rsi + 0x30], 0xe
44c6a0: sbb edx, 0xffff
44c6a6: movdqa xmm0, xmmword ptr [rsi + 0x30]
44c6ab: palignr xmm0, xmmword ptr [rsi + 0x20], 0xe
44c6b2: pcmpeqb xmm0, xmmword ptr [rdi + 0x20]
44c6b7: lea rsi, [rsi + 0x20]
44c6bb: pcmpeqb xmm3, xmmword ptr [rdi + 0x30]
44c6c0: lea rdi, [rdi + 0x20]
44c6c4: je 0x44c684
44c6c6: pand xmm3, xmm0
44c6ca: cmp rcx, 0
44c6ce: jge 0x44c6d6
44c6d0: inc edx
44c6d2: add rcx, 0x20
44c6d6: test edx, edx
44c6d8: jne 0x44c820
44c6de: pmovmskb edx, xmm3
44c6e2: movdqa xmm1, xmm0
44c6e6: lea rdi, [rdi + 0x20]
44c6ea: lea rsi, [rsi + 0x20]
44c6ee: sub edx, 0xffff
44c6f4: jne 0x44c820
44c6fa: lea rsi, [rsi + 0xe]
44c6fe: add rsi, rcx
44c701: add rdi, rcx
44c704: jmp 0x44c930
44c709: nop dword ptr [rax]
44c710: cmp rcx, 0x50
44c714: lea rcx, [rcx - 0x30]
44c718: mov eax, edx
44c71a: jae 0x44c770
44c71c: movdqa xmm1, xmmword ptr [rsi + 0x10]
44c721: movdqa xmm2, xmm1
44c725: palignr xmm1, xmmword ptr [rsi], 0xf
44c72b: pcmpeqb xmm1, xmmword ptr [rdi]
44c72f: movdqa xmm3, xmmword ptr [rsi + 0x20]
44c734: palignr xmm3, xmm2, 0xf
44c73a: pcmpeqb xmm3, xmmword ptr [rdi + 0x10]
44c73f: pand xmm3, xmm1
44c743: pmovmskb edx, xmm3
44c747: lea rdi, [rdi + 0x20]
44c74b: lea rsi, [rsi + 0x20]
44c74f: sub edx, 0xffff
44c755: jne 0x44c820
44c75b: add rsi, 0xf
44c75f: add rsi, rcx
44c762: add rdi, rcx
44c765: jmp 0x44c930
44c76a: nop word ptr [rax + rax]
44c770: sub rcx, 0x20
44c774: movdqa xmm0, xmmword ptr [rsi + 0x10]
44c779: palignr xmm0, xmmword ptr [rsi], 0xf
44c77f: pcmpeqb xmm0, xmmword ptr [rdi]
44c783: movdqa xmm3, xmmword ptr [rsi + 0x20]
44c788: palignr xmm3, xmmword ptr [rsi + 0x10], 0xf
44c78f: pcmpeqb xmm3, xmmword ptr [rdi + 0x10]
44c794: pand xmm3, xmm0
44c798: sub rcx, 0x20
44c79c: pmovmskb edx, xmm3
44c7a0: movdqa xmm1, xmm0
44c7a4: movdqa xmm3, xmmword ptr [rsi + 0x40]
44c7a9: palignr xmm3, xmmword ptr [rsi + 0x30], 0xf
44c7b0: sbb edx, 0xffff
44c7b6: movdqa xmm0, xmmword ptr [rsi + 0x30]
44c7bb: palignr xmm0, xmmword ptr [rsi + 0x20], 0xf
44c7c2: pcmpeqb xmm0, xmmword ptr [rdi + 0x20]
44c7c7: lea rsi, [rsi + 0x20]
44c7cb: pcmpeqb xmm3, xmmword ptr [rdi + 0x30]
44c7d0: lea rdi, [rdi + 0x20]
44c7d4: je 0x44c794
44c7d6: pand xmm3, xmm0
44c7da: cmp rcx, 0
44c7de: jge 0x44c7e6
44c7e0: inc edx
44c7e2: add rcx, 0x20
44c7e6: test edx, edx
44c7e8: jne 0x44c820
44c7ea: pmovmskb edx, xmm3
44c7ee: movdqa xmm1, xmm0
44c7f2: lea rdi, [rdi + 0x20]
44c7f6: lea rsi, [rsi + 0x20]
44c7fa: sub edx, 0xffff
44c800: jne 0x44c820
44c802: lea rsi, [rsi + 0xf]
44c806: add rsi, rcx
44c809: add rdi, rcx
44c80c: jmp 0x44c930
44c811: nop word ptr cs:[rax + rax]
44c81c: nop dword ptr [rax]
44c820: pmovmskb r8d, xmm1
44c825: sub r8d, 0xffff
44c82c: je 0x44c839
44c82e: lea rsi, [rsi - 0x10]
44c832: lea rdi, [rdi - 0x10]
44c836: mov edx, r8d
44c839: add rsi, rax
44c83c: test dl, dl
44c83e: je 0x44c8f0
44c844: test dl, 1
44c847: jne 0x44c880
44c849: test dl, 2
44c84c: jne 0x44c890
44c84e: test dl, 4
44c851: jne 0x44c8a0
44c853: test dl, 8
44c856: jne 0x44c8b0
44c858: test dl, 0x10
44c85b: jne 0x44c8c0
44c85d: test dl, 0x20
44c860: jne 0x44c8d0
44c862: test dl, 0x40
44c865: jne 0x44c8e0
44c867: movzx eax, byte ptr [rdi - 9]
44c86b: movzx edx, byte ptr [rsi - 9]
44c86f: sub eax, edx
44c871: ret 
44c872: nop word ptr cs:[rax + rax]
44c87d: nop dword ptr [rax]
44c880: movzx eax, byte ptr [rdi - 0x10]
44c884: movzx edx, byte ptr [rsi - 0x10]
44c888: sub eax, edx
44c88a: ret 
44c88b: nop dword ptr [rax + rax]
44c890: movzx eax, byte ptr [rdi - 0xf]
44c894: movzx edx, byte ptr [rsi - 0xf]
44c898: sub eax, edx
44c89a: ret 
44c89b: nop dword ptr [rax + rax]
44c8a0: movzx eax, byte ptr [rdi - 0xe]
44c8a4: movzx edx, byte ptr [rsi - 0xe]
44c8a8: sub eax, edx
44c8aa: ret 
44c8ab: nop dword ptr [rax + rax]
44c8b0: movzx eax, byte ptr [rdi - 0xd]
44c8b4: movzx edx, byte ptr [rsi - 0xd]
44c8b8: sub eax, edx
44c8ba: ret 
44c8bb: nop dword ptr [rax + rax]
44c8c0: movzx eax, byte ptr [rdi - 0xc]
44c8c4: movzx edx, byte ptr [rsi - 0xc]
44c8c8: sub eax, edx
44c8ca: ret 
44c8cb: nop dword ptr [rax + rax]
44c8d0: movzx eax, byte ptr [rdi - 0xb]
44c8d4: movzx edx, byte ptr [rsi - 0xb]
44c8d8: sub eax, edx
44c8da: ret 
44c8db: nop dword ptr [rax + rax]
44c8e0: movzx eax, byte ptr [rdi - 0xa]
44c8e4: movzx edx, byte ptr [rsi - 0xa]
44c8e8: sub eax, edx
44c8ea: ret 
44c8eb: nop dword ptr [rax + rax]
44c8f0: lea rdi, [rdi + 8]
44c8f4: lea rsi, [rsi + 8]
44c8f8: test dh, 1
44c8fb: jne 0x44c880
44c8fd: test dh, 2
44c900: jne 0x44c890
44c902: test dh, 4
44c905: jne 0x44c8a0
44c907: test dh, 8
44c90a: jne 0x44c8b0
44c90c: test dh, 0x10
44c90f: jne 0x44c8c0
44c911: test dh, 0x20
44c914: jne 0x44c8d0
44c916: test dh, 0x40
44c919: jne 0x44c8e0
44c91b: movzx eax, byte ptr [rdi - 9]
44c91f: movzx edx, byte ptr [rsi - 9]
44c923: sub eax, edx
44c925: ret 
44c926: nop word ptr cs:[rax + rax]
44c930: cmp ecx, 8
44c933: jae 0x44c980
44c935: cmp ecx, 0
44c938: je 0x44cb9a
44c93e: cmp ecx, 1
44c941: je 0x44cc3a
44c947: cmp ecx, 2
44c94a: je 0x44ccea
44c950: cmp ecx, 3
44c953: je 0x44cd82
44c959: cmp ecx, 4
44c95c: je 0x44cb8c
44c962: cmp ecx, 5
44c965: je 0x44cc2c
44c96b: cmp ecx, 6
44c96e: je 0x44ccdc
44c974: jmp 0x44cd78
44c979: nop dword ptr [rax]
44c980: cmp ecx, 0x10
44c983: jae 0x44c9d0
44c985: cmp ecx, 8
44c988: je 0x44cb7e
44c98e: cmp ecx, 9
44c991: je 0x44cc1e
44c997: cmp ecx, 0xa
44c99a: je 0x44ccce
44c9a0: cmp ecx, 0xb
44c9a3: je 0x44cd6e
44c9a9: cmp ecx, 0xc
44c9ac: je 0x44cb70
44c9b2: cmp ecx, 0xd
44c9b5: je 0x44cc10
44c9bb: cmp ecx, 0xe
44c9be: je 0x44ccc0
44c9c4: jmp 0x44cd64
44c9c9: nop dword ptr [rax]
44c9d0: cmp ecx, 0x18
44c9d3: jae 0x44ca20
44c9d5: cmp ecx, 0x10
44c9d8: je 0x44cb62
44c9de: cmp ecx, 0x11
44c9e1: je 0x44cc02
44c9e7: cmp ecx, 0x12
44c9ea: je 0x44ccb2
44c9f0: cmp ecx, 0x13
44c9f3: je 0x44cd5a
44c9f9: cmp ecx, 0x14
44c9fc: je 0x44cb54
44ca02: cmp ecx, 0x15
44ca05: je 0x44cbf4
44ca0b: cmp ecx, 0x16
44ca0e: je 0x44cca4
44ca14: jmp 0x44cd50
44ca19: nop dword ptr [rax]
44ca20: cmp ecx, 0x20
44ca23: jae 0x44ca70
44ca25: cmp ecx, 0x18
44ca28: je 0x44cb46
44ca2e: cmp ecx, 0x19
44ca31: je 0x44cbe6
44ca37: cmp ecx, 0x1a
44ca3a: je 0x44cc96
44ca40: cmp ecx, 0x1b
44ca43: je 0x44cd46
44ca49: cmp ecx, 0x1c
44ca4c: je 0x44cb38
44ca52: cmp ecx, 0x1d
44ca55: je 0x44cbd8
44ca5b: cmp ecx, 0x1e
44ca5e: je 0x44cc88
44ca64: jmp 0x44cd3c
44ca69: nop dword ptr [rax]
44ca70: cmp ecx, 0x28
44ca73: jae 0x44cac0
44ca75: cmp ecx, 0x20
44ca78: je 0x44cb2a
44ca7e: cmp ecx, 0x21
44ca81: je 0x44cbca
44ca87: cmp ecx, 0x22
44ca8a: je 0x44cc7a
44ca90: cmp ecx, 0x23
44ca93: je 0x44cd32
44ca99: cmp ecx, 0x24
44ca9c: je 0x44cb1c
44ca9e: cmp ecx, 0x25
44caa1: je 0x44cbbc
44caa7: cmp ecx, 0x26
44caaa: je 0x44cc6c
44cab0: jmp 0x44cd28
44cab5: nop word ptr cs:[rax + rax]
44cac0: cmp ecx, 0x28
44cac3: je 0x44cb0e
44cac5: cmp ecx, 0x29
44cac8: je 0x44cbae
44cace: cmp ecx, 0x2a
44cad1: je 0x44cc5e
44cad7: cmp ecx, 0x2b
44cada: je 0x44cd1e
44cae0: cmp ecx, 0x2c
44cae3: je 0x44cb00
44cae5: cmp ecx, 0x2d
44cae8: je 0x44cba0
44caee: cmp ecx, 0x2e
44caf1: je 0x44cc50
44caf7: jmp 0x44cd10
44cafc: nop dword ptr [rax]
44cb00: mov eax, dword ptr [rdi - 0x2c]
44cb03: mov ecx, dword ptr [rsi - 0x2c]
44cb06: cmp eax, ecx
44cb08: jne 0x44cda0
44cb0e: mov eax, dword ptr [rdi - 0x28]
44cb11: mov ecx, dword ptr [rsi - 0x28]
44cb14: cmp eax, ecx
44cb16: jne 0x44cda0
44cb1c: mov eax, dword ptr [rdi - 0x24]
44cb1f: mov ecx, dword ptr [rsi - 0x24]
44cb22: cmp eax, ecx
44cb24: jne 0x44cda0
44cb2a: mov eax, dword ptr [rdi - 0x20]
44cb2d: mov ecx, dword ptr [rsi - 0x20]
44cb30: cmp eax, ecx
44cb32: jne 0x44cda0
44cb38: mov eax, dword ptr [rdi - 0x1c]
44cb3b: mov ecx, dword ptr [rsi - 0x1c]
44cb3e: cmp eax, ecx
44cb40: jne 0x44cda0
44cb46: mov eax, dword ptr [rdi - 0x18]
44cb49: mov ecx, dword ptr [rsi - 0x18]
44cb4c: cmp eax, ecx
44cb4e: jne 0x44cda0
44cb54: mov eax, dword ptr [rdi - 0x14]
44cb57: mov ecx, dword ptr [rsi - 0x14]
44cb5a: cmp eax, ecx
44cb5c: jne 0x44cda0
44cb62: mov eax, dword ptr [rdi - 0x10]
44cb65: mov ecx, dword ptr [rsi - 0x10]
44cb68: cmp eax, ecx
44cb6a: jne 0x44cda0
44cb70: mov eax, dword ptr [rdi - 0xc]
44cb73: mov ecx, dword ptr [rsi - 0xc]
44cb76: cmp eax, ecx
44cb78: jne 0x44cda0
44cb7e: mov eax, dword ptr [rdi - 8]
44cb81: mov ecx, dword ptr [rsi - 8]
44cb84: cmp eax, ecx
44cb86: jne 0x44cda0
44cb8c: mov eax, dword ptr [rdi - 4]
44cb8f: mov ecx, dword ptr [rsi - 4]
44cb92: cmp eax, ecx
44cb94: jne 0x44cda0
44cb9a: xor eax, eax
44cb9c: ret 
44cb9d: nop dword ptr [rax]
44cba0: mov eax, dword ptr [rdi - 0x2d]
44cba3: mov ecx, dword ptr [rsi - 0x2d]
44cba6: cmp eax, ecx
44cba8: jne 0x44cda0
44cbae: mov eax, dword ptr [rdi - 0x29]
44cbb1: mov ecx, dword ptr [rsi - 0x29]
44cbb4: cmp eax, ecx
44cbb6: jne 0x44cda0
44cbbc: mov eax, dword ptr [rdi - 0x25]
44cbbf: mov ecx, dword ptr [rsi - 0x25]
44cbc2: cmp eax, ecx
44cbc4: jne 0x44cda0
44cbca: mov eax, dword ptr [rdi - 0x21]
44cbcd: mov ecx, dword ptr [rsi - 0x21]
44cbd0: cmp eax, ecx
44cbd2: jne 0x44cda0
44cbd8: mov eax, dword ptr [rdi - 0x1d]
44cbdb: mov ecx, dword ptr [rsi - 0x1d]
44cbde: cmp eax, ecx
44cbe0: jne 0x44cda0
44cbe6: mov eax, dword ptr [rdi - 0x19]
44cbe9: mov ecx, dword ptr [rsi - 0x19]
44cbec: cmp eax, ecx
44cbee: jne 0x44cda0
44cbf4: mov eax, dword ptr [rdi - 0x15]
44cbf7: mov ecx, dword ptr [rsi - 0x15]
44cbfa: cmp eax, ecx
44cbfc: jne 0x44cda0
44cc02: mov eax, dword ptr [rdi - 0x11]
44cc05: mov ecx, dword ptr [rsi - 0x11]
44cc08: cmp eax, ecx
44cc0a: jne 0x44cda0
44cc10: mov eax, dword ptr [rdi - 0xd]
44cc13: mov ecx, dword ptr [rsi - 0xd]
44cc16: cmp eax, ecx
44cc18: jne 0x44cda0
44cc1e: mov eax, dword ptr [rdi - 9]
44cc21: mov ecx, dword ptr [rsi - 9]
44cc24: cmp eax, ecx
44cc26: jne 0x44cda0
44cc2c: mov eax, dword ptr [rdi - 5]
44cc2f: mov ecx, dword ptr [rsi - 5]
44cc32: cmp eax, ecx
44cc34: jne 0x44cda0
44cc3a: movzx eax, byte ptr [rdi - 1]
44cc3e: cmp al, byte ptr [rsi - 1]
44cc41: jne 0x44cdb5
44cc47: xor eax, eax
44cc49: ret 
44cc4a: nop word ptr [rax + rax]
44cc50: mov eax, dword ptr [rdi - 0x2e]
44cc53: mov ecx, dword ptr [rsi - 0x2e]
44cc56: cmp eax, ecx
44cc58: jne 0x44cda0
44cc5e: mov eax, dword ptr [rdi - 0x2a]
44cc61: mov ecx, dword ptr [rsi - 0x2a]
44cc64: cmp eax, ecx
44cc66: jne 0x44cda0
44cc6c: mov eax, dword ptr [rdi - 0x26]
44cc6f: mov ecx, dword ptr [rsi - 0x26]
44cc72: cmp eax, ecx
44cc74: jne 0x44cda0
44cc7a: mov eax, dword ptr [rdi - 0x22]
44cc7d: mov ecx, dword ptr [rsi - 0x22]
44cc80: cmp eax, ecx
44cc82: jne 0x44cda0
44cc88: mov eax, dword ptr [rdi - 0x1e]
44cc8b: mov ecx, dword ptr [rsi - 0x1e]
44cc8e: cmp eax, ecx
44cc90: jne 0x44cda0
44cc96: mov eax, dword ptr [rdi - 0x1a]
44cc99: mov ecx, dword ptr [rsi - 0x1a]
44cc9c: cmp eax, ecx
44cc9e: jne 0x44cda0
44cca4: mov eax, dword ptr [rdi - 0x16]
44cca7: mov ecx, dword ptr [rsi - 0x16]
44ccaa: cmp eax, ecx
44ccac: jne 0x44cda0
44ccb2: mov eax, dword ptr [rdi - 0x12]
44ccb5: mov ecx, dword ptr [rsi - 0x12]
44ccb8: cmp eax, ecx
44ccba: jne 0x44cda0
44ccc0: mov eax, dword ptr [rdi - 0xe]
44ccc3: mov ecx, dword ptr [rsi - 0xe]
44ccc6: cmp eax, ecx
44ccc8: jne 0x44cda0
44ccce: mov eax, dword ptr [rdi - 0xa]
44ccd1: mov ecx, dword ptr [rsi - 0xa]
44ccd4: cmp eax, ecx
44ccd6: jne 0x44cda0
44ccdc: mov eax, dword ptr [rdi - 6]
44ccdf: mov ecx, dword ptr [rsi - 6]
44cce2: cmp eax, ecx
44cce4: jne 0x44cda0
44ccea: movzx eax, word ptr [rdi - 2]
44ccee: movzx ecx, word ptr [rsi - 2]
44ccf2: cmp al, cl
44ccf4: jne 0x44cdb5
44ccfa: cmp eax, ecx
44ccfc: jne 0x44cdb5
44cd02: xor eax, eax
44cd04: ret 
44cd05: nop word ptr cs:[rax + rax]
44cd10: mov eax, dword ptr [rdi - 0x2f]
44cd13: mov ecx, dword ptr [rsi - 0x2f]
44cd16: cmp eax, ecx
44cd18: jne 0x44cda0
44cd1e: mov eax, dword ptr [rdi - 0x2b]
44cd21: mov ecx, dword ptr [rsi - 0x2b]
44cd24: cmp eax, ecx
44cd26: jne 0x44cda0
44cd28: mov eax, dword ptr [rdi - 0x27]
44cd2b: mov ecx, dword ptr [rsi - 0x27]
44cd2e: cmp eax, ecx
44cd30: jne 0x44cda0
44cd32: mov eax, dword ptr [rdi - 0x23]
44cd35: mov ecx, dword ptr [rsi - 0x23]
44cd38: cmp eax, ecx
44cd3a: jne 0x44cda0
44cd3c: mov eax, dword ptr [rdi - 0x1f]
44cd3f: mov ecx, dword ptr [rsi - 0x1f]
44cd42: cmp eax, ecx
44cd44: jne 0x44cda0
44cd46: mov eax, dword ptr [rdi - 0x1b]
44cd49: mov ecx, dword ptr [rsi - 0x1b]
44cd4c: cmp eax, ecx
44cd4e: jne 0x44cda0
44cd50: mov eax, dword ptr [rdi - 0x17]
44cd53: mov ecx, dword ptr [rsi - 0x17]
44cd56: cmp eax, ecx
44cd58: jne 0x44cda0
44cd5a: mov eax, dword ptr [rdi - 0x13]
44cd5d: mov ecx, dword ptr [rsi - 0x13]
44cd60: cmp eax, ecx
44cd62: jne 0x44cda0
44cd64: mov eax, dword ptr [rdi - 0xf]
44cd67: mov ecx, dword ptr [rsi - 0xf]
44cd6a: cmp eax, ecx
44cd6c: jne 0x44cda0
44cd6e: mov eax, dword ptr [rdi - 0xb]
44cd71: mov ecx, dword ptr [rsi - 0xb]
44cd74: cmp eax, ecx
44cd76: jne 0x44cda0
44cd78: mov eax, dword ptr [rdi - 7]
44cd7b: mov ecx, dword ptr [rsi - 7]
44cd7e: cmp eax, ecx
44cd80: jne 0x44cda0
44cd82: movzx eax, word ptr [rdi - 3]
44cd86: movzx ecx, word ptr [rsi - 3]
44cd8a: cmp al, cl
44cd8c: jne 0x44cdb5
44cd8e: cmp eax, ecx
44cd90: jne 0x44cdb5
44cd92: movzx eax, byte ptr [rdi - 1]
44cd96: cmp al, byte ptr [rsi - 1]
44cd99: jne 0x44cdb5
44cd9b: xor eax, eax
44cd9d: ret 
44cd9e: nop 
44cda0: cmp al, cl
44cda2: jne 0x44cdb5
44cda4: cmp ax, cx
44cda7: jne 0x44cdb5
44cda9: shr eax, 0x10
44cdac: shr ecx, 0x10
44cdaf: cmp al, cl
44cdb1: jne 0x44cdb5
44cdb3: cmp eax, ecx
44cdb5: sbb eax, eax
44cdb7: sbb eax, -1
44cdba: ret 
44cdbb: nop dword ptr [rax + rax]
44cdc0: xor eax, eax
44cdc2: ret 
44cdc3: nop word ptr cs:[rax + rax]
44cdcd: nop dword ptr [rax]
44cdd0: endbr64 
44cdd4: movzx eax, byte ptr [rsi]
44cdd7: test al, al
44cdd9: je 0x44cf77
44cddf: movzx edx, byte ptr [rsi + 1]
44cde3: test dl, dl
44cde5: je 0x44cea0
44cdeb: movd xmm1, eax
44cdef: movd xmm2, edx
44cdf3: mov rax, rdi
44cdf6: and eax, 0xfff
44cdfb: punpcklbw xmm1, xmm1
44cdff: cmp rax, 0xfbf
44ce05: punpcklbw xmm2, xmm2
44ce09: punpcklwd xmm1, xmm1
44ce0d: punpcklwd xmm2, xmm2
44ce11: pshufd xmm1, xmm1, 0
44ce16: pshufd xmm2, xmm2, 0
44ce1b: ja 0x44d120
44ce21: movdqu xmm3, xmmword ptr [rdi]
44ce25: pxor xmm5, xmm5
44ce29: movdqu xmm4, xmmword ptr [rdi + 1]
44ce2e: movdqa xmm6, xmm3
44ce32: pcmpeqb xmm3, xmm1
44ce36: pcmpeqb xmm4, xmm2
44ce3a: movdqu xmm0, xmmword ptr [rdi + 0x10]
44ce3f: pcmpeqb xmm6, xmm5
44ce43: pminub xmm3, xmm4
44ce47: movdqa xmm4, xmm3
44ce4b: movdqu xmm3, xmmword ptr [rdi + 0x11]
44ce50: pcmpeqb xmm5, xmm0
44ce54: pcmpeqb xmm3, xmm2
44ce58: por xmm4, xmm6
44ce5c: pcmpeqb xmm0, xmm1
44ce60: pminub xmm0, xmm3
44ce64: por xmm0, xmm5
44ce68: pmovmskb r8d, xmm4
44ce6d: pmovmskb eax, xmm0
44ce71: shl rax, 0x10
44ce75: or r8, rax
44ce78: je 0x44cee0
44ce7a: bsf rax, r8
44ce7e: add rax, rdi
44ce81: cmp byte ptr [rax], 0
44ce84: je 0x44cec4
44ce86: movzx edx, byte ptr [rsi + 2]
44ce8a: test dl, dl
44ce8c: je 0x44cec3
44ce8e: cmp dl, byte ptr [rax + 2]
44ce91: jne 0x44ced0
44ce93: xor edx, edx
44ce95: jmp 0x44ceba
44ce97: nop word ptr [rax + rax]
44cea0: movzx esi, al
44cea3: jmp 0x445c90
44cea8: nop dword ptr [rax + rax]
44ceb0: add rdx, 1
44ceb4: cmp cl, byte ptr [rax + rdx + 2]
44ceb8: jne 0x44ced0
44ceba: movzx ecx, byte ptr [rsi + rdx + 3]
44cebf: test cl, cl
44cec1: jne 0x44ceb0
44cec3: ret 
44cec4: xor eax, eax
44cec6: ret 
44cec7: nop word ptr [rax + rax]
44ced0: lea rax, [r8 - 1]
44ced4: and r8, rax
44ced7: jne 0x44ce7a
44ced9: nop dword ptr [rax]
44cee0: movdqu xmm3, xmmword ptr [rdi + 0x20]
44cee5: pxor xmm5, xmm5
44cee9: movdqu xmm4, xmmword ptr [rdi + 0x21]
44ceee: movdqa xmm6, xmm3
44cef2: pcmpeqb xmm3, xmm1
44cef6: pcmpeqb xmm4, xmm2
44cefa: movdqu xmm0, xmmword ptr [rdi + 0x30]
44ceff: pcmpeqb xmm6, xmm5
44cf03: pminub xmm3, xmm4
44cf07: movdqa xmm4, xmm3
44cf0b: movdqu xmm3, xmmword ptr [rdi + 0x31]
44cf10: pcmpeqb xmm5, xmm0
44cf14: pcmpeqb xmm3, xmm2
44cf18: por xmm4, xmm6
44cf1c: pcmpeqb xmm0, xmm1
44cf20: pminub xmm0, xmm3
44cf24: por xmm0, xmm5
44cf28: pmovmskb eax, xmm4
44cf2c: shl rax, 0x20
44cf30: pmovmskb r8d, xmm0
44cf35: shl r8, 0x30
44cf39: or r8, rax
44cf3c: je 0x44cf89
44cf3e: bsf rax, r8
44cf42: add rax, rdi
44cf45: cmp byte ptr [rax], 0
44cf48: je 0x44cf74
44cf4a: movzx edx, byte ptr [rsi + 2]
44cf4e: test dl, dl
44cf50: je 0x44cf73
44cf52: cmp dl, byte ptr [rax + 2]
44cf55: jne 0x44cf80
44cf57: xor edx, edx
44cf59: jmp 0x44cf6a
44cf5b: nop dword ptr [rax + rax]
44cf60: add rdx, 1
44cf64: cmp cl, byte ptr [rax + rdx + 2]
44cf68: jne 0x44cf80
44cf6a: movzx ecx, byte ptr [rsi + rdx + 3]
44cf6f: test cl, cl
44cf71: jne 0x44cf60
44cf73: ret 
44cf74: xor eax, eax
44cf76: ret 
44cf77: mov rax, rdi
44cf7a: ret 
44cf7b: nop dword ptr [rax + rax]
44cf80: lea rax, [r8 - 1]
44cf84: and r8, rax
44cf87: jne 0x44cf3e
44cf89: mov r11, 0xfffffffffffffe00
44cf90: mov r9, rdi
44cf93: pxor xmm7, xmm7
44cf97: and rdi, 0xffffffffffffffc0
44cf9b: nop dword ptr [rax + rax]
44cfa0: movdqa xmm3, xmmword ptr [rdi + 0x40]
44cfa5: movdqu xmm6, xmmword ptr [rdi + 0x3f]
44cfaa: movdqa xmm0, xmm3
44cfae: pxor xmm3, xmm2
44cfb2: pxor xmm6, xmm1
44cfb6: movdqa xmm10, xmmword ptr [rdi + 0x50]
44cfbc: por xmm6, xmm3
44cfc0: pminub xmm0, xmm10
44cfc5: movdqu xmm3, xmmword ptr [rdi + 0x4f]
44cfca: pxor xmm10, xmm2
44cfcf: pxor xmm3, xmm1
44cfd3: movdqa xmm9, xmmword ptr [rdi + 0x60]
44cfd9: por xmm3, xmm10
44cfde: pminub xmm0, xmm9
44cfe3: pxor xmm9, xmm2
44cfe8: movdqa xmm8, xmmword ptr [rdi + 0x70]
44cfee: add rdi, 0x40
44cff2: pminub xmm3, xmm6
44cff6: movdqu xmm4, xmmword ptr [rdi + 0x1f]
44cffb: pminub xmm0, xmm8
44d000: pxor xmm8, xmm2
44d005: pxor xmm4, xmm1
44d009: por xmm4, xmm9
44d00e: pminub xmm3, xmm4
44d012: movdqu xmm5, xmmword ptr [rdi + 0x2f]
44d017: pxor xmm5, xmm1
44d01b: por xmm5, xmm8
44d020: pminub xmm3, xmm5
44d024: pminub xmm0, xmm3
44d028: pcmpeqb xmm0, xmm7
44d02c: pmovmskb eax, xmm0
44d030: test eax, eax
44d032: je 0x44cfa0
44d038: pminub xmm6, xmmword ptr [rdi]
44d03c: pminub xmm4, xmmword ptr [rdi + 0x20]
44d041: pminub xmm5, xmmword ptr [rdi + 0x30]
44d046: pcmpeqb xmm6, xmm7
44d04a: pcmpeqb xmm5, xmm7
44d04e: pmovmskb edx, xmm6
44d052: movdqa xmm8, xmmword ptr [rdi + 0x10]
44d058: pcmpeqb xmm4, xmm7
44d05c: movdqu xmm0, xmmword ptr [rdi + 0xf]
44d061: pmovmskb r8d, xmm5
44d066: movdqa xmm3, xmm8
44d06b: pmovmskb ecx, xmm4
44d06f: pcmpeqb xmm0, xmm1
44d073: pcmpeqb xmm3, xmm2
44d077: shl rcx, 0x20
44d07b: pcmpeqb xmm8, xmm7
44d080: shl r8, 0x30
44d084: pminub xmm3, xmm0
44d088: or rdx, rcx
44d08b: por xmm8, xmm3
44d090: or r8, rdx
44d093: pmovmskb eax, xmm8
44d098: shl rax, 0x10
44d09c: or r8, rax
44d09f: je 0x44cfa0
44d0a5: bsf rcx, r8
44d0a9: add rcx, rdi
44d0ac: cmp byte ptr [rcx], 0
44d0af: je 0x44d260
44d0b5: xor eax, eax
44d0b7: movzx edx, byte ptr [rsi + 2]
44d0bb: test dl, dl
44d0bd: je 0x44d0e3
44d0bf: cmp dl, byte ptr [rcx + 1]
44d0c2: jne 0x44d0f0
44d0c4: jmp 0x44d0da
44d0c6: nop word ptr cs:[rax + rax]
44d0d0: add rax, 1
44d0d4: cmp dl, byte ptr [rcx + rax + 1]
44d0d8: jne 0x44d0f0
44d0da: movzx edx, byte ptr [rsi + rax + 3]
44d0df: test dl, dl
44d0e1: jne 0x44d0d0
44d0e3: lea rax, [rcx - 1]
44d0e7: ret 
44d0e8: nop dword ptr [rax + rax]
44d0f0: add r11, rax
44d0f3: mov rax, rdi
44d0f6: sub rax, r9
44d0f9: cmp rax, r11
44d0fc: jl 0x44d110
44d0fe: lea rax, [r8 - 1]
44d102: and r8, rax
44d105: jne 0x44d0a5
44d107: jmp 0x44cfa0
44d10c: nop dword ptr [rax]
44d110: mov rdi, rdi
44d113: jmp 0x429770
44d118: nop dword ptr [rax + rax]
44d120: mov rax, rdi
44d123: pxor xmm0, xmm0
44d127: and rax, 0xffffffffffffffc0
44d12b: movdqa xmm3, xmmword ptr [rax]
44d12f: movdqu xmm4, xmmword ptr [rax - 1]
44d134: movdqa xmm8, xmm3
44d139: movdqa xmm5, xmmword ptr [rax + 0x10]
44d13e: pcmpeqb xmm4, xmm1
44d142: pcmpeqb xmm8, xmm0
44d147: pcmpeqb xmm3, xmm2
44d14b: movdqa xmm7, xmm5
44d14f: pminub xmm3, xmm4
44d153: movdqu xmm4, xmmword ptr [rax + 0xf]
44d158: pcmpeqb xmm7, xmm0
44d15c: por xmm8, xmm3
44d161: movdqa xmm3, xmm5
44d165: movdqa xmm5, xmmword ptr [rax + 0x20]
44d16a: pcmpeqb xmm4, xmm1
44d16e: pcmpeqb xmm3, xmm2
44d172: movdqa xmm6, xmm5
44d176: pmovmskb ecx, xmm8
44d17b: pminub xmm3, xmm4
44d17f: movdqu xmm4, xmmword ptr [rax + 0x1f]
44d184: por xmm7, xmm3
44d188: movdqa xmm3, xmm5
44d18c: pcmpeqb xmm6, xmm0
44d190: movdqa xmm5, xmmword ptr [rax + 0x30]
44d195: pcmpeqb xmm4, xmm1
44d199: pmovmskb r8d, xmm7
44d19e: pcmpeqb xmm3, xmm2
44d1a2: pcmpeqb xmm0, xmm5
44d1a6: pminub xmm3, xmm4
44d1aa: movdqu xmm4, xmmword ptr [rax + 0x2f]
44d1af: por xmm6, xmm3
44d1b3: movdqa xmm3, xmm5
44d1b7: shl r8, 0x10
44d1bb: pcmpeqb xmm4, xmm1
44d1bf: pcmpeqb xmm3, xmm2
44d1c3: pmovmskb r10d, xmm6
44d1c8: pminub xmm3, xmm4
44d1cc: por xmm0, xmm3
44d1d0: shl r10, 0x20
44d1d4: or r8, r10
44d1d7: or r8, rcx
44d1da: mov ecx, edi
44d1dc: pmovmskb edx, xmm0
44d1e0: sub ecx, eax
44d1e2: shl rdx, 0x30
44d1e6: or r8, rdx
44d1e9: shr r8, cl
44d1ec: je 0x44cf89
44d1f2: bsf rax, r8
44d1f6: add rax, rdi
44d1f9: cmp byte ptr [rax], 0
44d1fc: je 0x44d260
44d1fe: cmp rdi, rax
44d201: je 0x44d240
44d203: movzx edx, byte ptr [rsi + 2]
44d207: test dl, dl
44d209: je 0x44d233
44d20b: cmp dl, byte ptr [rax + 1]
44d20e: jne 0x44d240
44d210: xor edx, edx
44d212: jmp 0x44d22a
44d214: nop word ptr cs:[rax + rax]
44d21f: nop 
44d220: add rdx, 1
44d224: cmp cl, byte ptr [rax + rdx + 1]
44d228: jne 0x44d240
44d22a: movzx ecx, byte ptr [rsi + rdx + 3]
44d22f: test cl, cl
44d231: jne 0x44d220
44d233: sub rax, 1
44d237: ret 
44d238: nop dword ptr [rax + rax]
44d240: lea rax, [r8 - 1]
44d244: and r8, rax
44d247: jne 0x44d1f2
44d249: jmp 0x44cf89
44d24e: nop 
44d250: repz ret 
44d252: nop word ptr cs:[rax + rax]
44d25d: nop dword ptr [rax]
44d260: xor eax, eax
44d262: ret 
44d263: nop word ptr cs:[rax + rax]
44d26d: nop dword ptr [rax]
44d270: endbr64 
44d274: mov rdx, rdi
44d277: mov r8, rdi
44d27a: sub rsp, 0x100
44d281: mov ecx, 0x20
44d286: mov rdi, rsp
44d289: xor eax, eax
44d28b: cld 
44d28c: rep stosq qword ptr [rdi], rax
44d28f: mov rax, rsi
44d292: nop word ptr cs:[rax + rax]
44d29d: nop dword ptr [rax]
44d2a0: mov cl, byte ptr [rax]
44d2a2: test cl, cl
44d2a4: je 0x44d2ce
44d2a6: mov byte ptr [rsp + rcx], cl
44d2a9: mov cl, byte ptr [rax + 1]
44d2ac: test cl, 0xff
44d2af: je 0x44d2ce
44d2b1: mov byte ptr [rsp + rcx], cl
44d2b4: mov cl, byte ptr [rax + 2]
44d2b7: test cl, 0xff
44d2ba: je 0x44d2ce
44d2bc: mov byte ptr [rsp + rcx], cl
44d2bf: mov cl, byte ptr [rax + 3]
44d2c2: add rax, 4
44d2c6: mov byte ptr [rsp + rcx], cl
44d2c9: test cl, 0xff
44d2cc: jne 0x44d2a0
44d2ce: lea rax, [rdx - 4]
44d2d2: nop word ptr cs:[rax + rax]
44d2dd: nop dword ptr [rax]
44d2e0: add rax, 4
44d2e4: mov cl, byte ptr [rax]
44d2e6: cmp byte ptr [rsp + rcx], cl
44d2e9: je 0x44d30c
44d2eb: mov cl, byte ptr [rax + 1]
44d2ee: cmp byte ptr [rsp + rcx], cl
44d2f1: je 0x44d309
44d2f3: mov cl, byte ptr [rax + 2]
44d2f6: cmp byte ptr [rsp + rcx], cl
44d2f9: je 0x44d306
44d2fb: mov cl, byte ptr [rax + 3]
44d2fe: cmp byte ptr [rsp + rcx], cl
44d301: jne 0x44d2e0
44d303: inc rax
44d306: inc rax
44d309: inc rax
44d30c: add rsp, 0x100
44d313: sub rax, rdx
44d316: ret 
44d317: nop word ptr [rax + rax]
44d320: endbr64 
44d324: cmp byte ptr [rsi], 0
44d327: je 0x44d430
44d32d: mov edx, esi
44d32f: and edx, 0xf
44d332: jne 0x44d3d0
44d338: movdqa xmm1, xmmword ptr [rsi]
44d33c: pcmpistri xmm1, xmm1, 0x3a
44d342: cmp ecx, 0x10
44d345: je 0x44d450
44d34b: mov esi, edi
44d34d: mov rax, rdi
44d350: and esi, 0xf
44d353: je 0x44d3a4
44d355: and rax, 0xfffffffffffffff0
44d359: lea rcx, [rip + 0x4b1a0]
44d360: movsxd rdx, esi
44d363: movdqu xmm0, xmmword ptr [rcx + rdx]
44d368: movdqa xmm2, xmmword ptr [rax]
44d36c: pshufb xmm2, xmm0
44d371: pcmpistri xmm1, xmm2, 2
44d377: jb 0x44d38e
44d379: mov edx, 0x10
44d37e: pcmpistri xmm2, xmm2, 0x3a
44d384: add rax, 0x10
44d388: sub edx, esi
44d38a: cmp edx, ecx
44d38c: jle 0x44d3a4
44d38e: movsxd rax, ecx
44d391: ret 
44d392: nop word ptr [rax + rax]
44d398: test esi, esi
44d39a: jne 0x44d438
44d3a0: add rax, 0x10
44d3a4: movdqa xmm3, xmmword ptr [rax]
44d3a8: mov edx, 0
44d3ad: pcmpistri xmm1, xmm3, 2
44d3b3: sete sil
44d3b7: setb dl
44d3ba: movzx esi, sil
44d3be: test edx, edx
44d3c0: je 0x44d398
44d3c2: movsxd rcx, ecx
44d3c5: add rax, rcx
44d3c8: sub rax, rdi
44d3cb: ret 
44d3cc: nop dword ptr [rax]
44d3d0: mov r8, rsi
44d3d3: movsxd rax, edx
44d3d6: lea rcx, [rip + 0x4b123]
44d3dd: and r8, 0xfffffffffffffff0
44d3e1: movdqu xmm0, xmmword ptr [rcx + rax]
44d3e6: mov eax, 0x10
44d3eb: movdqa xmm1, xmmword ptr [r8]
44d3f0: pshufb xmm1, xmm0
44d3f5: pcmpistri xmm1, xmm1, 0x3a
44d3fb: sub eax, edx
44d3fd: cmp eax, ecx
44d3ff: jne 0x44d34b
44d405: movdqa xmm0, xmmword ptr [r8 + 0x10]
44d40b: pcmpistri xmm0, xmm0, 0x3a
44d411: add eax, ecx
44d413: cmp eax, 0x10
44d416: jg 0x44d45a
44d418: test ecx, ecx
44d41a: je 0x44d34b
44d420: movdqu xmm1, xmmword ptr [rsi]
44d424: jmp 0x44d34b
44d429: nop dword ptr [rax]
44d430: jmp 0x401180
44d435: nop dword ptr [rax]
44d438: pcmpistri xmm3, xmm3, 0x3a
44d43e: movsxd rcx, ecx
44d441: add rax, rcx
44d444: sub rax, rdi
44d447: ret 
44d448: nop dword ptr [rax + rax]
44d450: cmp byte ptr [rsi + 0x10], 0
44d454: je 0x44d34b
44d45a: jmp 0x44d270
44d45f: nop 
44d460: endbr64 
44d464: cmp rcx, rdx
44d467: jb 0x454570
44d46d: nop dword ptr [rax]
44d470: endbr64 
44d474: vpxor xmm0, xmm0, xmm0
44d478: vmovd xmm1, esi
44d47c: lea rsi, [rdi + rdx]
44d480: mov rax, rdi
44d483: vpshufb xmm0, xmm1, xmm0
44d488: cmp rdx, 0x10
44d48c: jb 0x44d533
44d492: cmp rdx, 0x200
44d49a: bnd jge 0x44d4e5
44d49d: sbb al, dl
44d49f: ja 0x44d566
44d4a5: cmp rdx, 0x100
44d4ac: jb 0x44d4e6
44d4b0: jl 0x44d4fa
44d4b2: adc dword ptr [rdi], edx
44d4b6: jl 0x44d500
44d4b8: adc dword ptr [rdi + 1], edx
44d4bd: jl 0x44d507
44d4bf: adc dword ptr [rdi + 2], edx
44d4c4: jl 0x44d50e
44d4c6: adc dword ptr [rdi + 3], edx
44d4cb: jl 0x44d515
44d4cd: adc dword ptr [rsi - 4], edx
44d4d2: jl 0x44d51c
44d4d4: adc dword ptr [rsi - 3], edx
44d4d9: jl 0x44d523
44d4db: adc dword ptr [rsi - 2], edx
44d4e0: jl 0x44d52a
44d4e2: adc dword ptr [rsi - 1], edx
44d4e5: ret 
44d4e6: cmp dl, 0x80
44d4e9: jb 0x44d507
44d4ed: jl 0x44d537
44d4ef: adc dword ptr [rdi], edx
44d4f3: jl 0x44d53d
44d4f5: adc dword ptr [rdi + 1], edx
44d4fa: jl 0x44d544
44d4fc: adc dword ptr [rsi - 2], edx
44d501: jl 0x44d54b
44d503: adc dword ptr [rsi - 1], edx
44d506: ret 
44d507: cmp dl, 0x40
44d50a: jb 0x44d51a
44d50e: jl 0x44d558
44d510: adc dword ptr [rdi], edx
44d516: adc dword ptr [rsi - 1], edx
44d519: ret 
44d51c: and byte ptr [rdx + 0xa], dh
44d51f: vmovdqu ymmword ptr [rdi], ymm2
44d523: vmovdqu ymmword ptr [rsi - 0x20], ymm2
44d528: ret 
44d52a: cli 
44d533: cmp dl, 8
44d537: or al, ch
44d539: stc 
44d53d: stc 
44d544: jle 0x44d507
44d546: cmp dl, 4
44d549: jb 0x44d551
44d54b: mov dword ptr [rdi], ecx
44d54d: mov dword ptr [rsi - 4], ecx
44d550: ret 
44d551: cmp dl, 2
44d554: jb 0x44d55e
44d558: pcmpgtd mm1, qword ptr [rcx - 0x7f3c01b2]
44d55f: cli 
44d560: add dword ptr [rdx + 2], esi
44d563: mov byte ptr [rdi], cl
44d563: mov byte ptr [rdi], cl
44d565: ret 
44d565: ret 
44d566: mov rcx, qword ptr [rip + 0x73aeb]
44d56d: cmp rdx, rcx
44d570: ja 0x44d647
44d576: cmp rdx, 0x400
44d57d: ja 0x44d5ef
44d581: jl 0x44d5cb
44d583: adc dword ptr [rdi], edx
44d587: jl 0x44d5d1
44d589: adc dword ptr [rdi + 1], edx
44d58e: jl 0x44d5d8
44d590: adc dword ptr [rdi + 2], edx
44d595: jl 0x44d5df
44d597: adc dword ptr [rdi + 3], edx
44d59c: jl 0x44d5e6
44d59e: adc dword ptr [rdi + 4], edx
44d5a3: jl 0x44d5ed
44d5a5: adc dword ptr [rdi + 5], edx
44d5aa: jl 0x44d5f4
44d5ac: adc dword ptr [rdi + 6], edx
44d5b1: jl 0x44d5fb
44d5b3: adc dword ptr [rdi + 7], edx
44d5b8: jl 0x44d602
44d5ba: adc dword ptr [rsi - 8], edx
44d5bf: jl 0x44d609
44d5c1: adc dword ptr [rsi - 7], edx
44d5c6: jl 0x44d610
44d5c8: adc dword ptr [rsi - 6], edx
44d5cd: jl 0x44d617
44d5d1: sti 
44d5d4: jl 0x44d61e
44d5d8: cld 
44d5db: jl 0x44d625
44d5df: std 
44d5e2: jl 0x44d62c
44d5e5: push rsi
44d5e9: jl 0x44d633
44d5ed: inc ebx
44d5f4: add byte ptr [rax], al
44d5f8: jl 0x44d642
44d5fb: adc byte ptr [rax - 0x7d], cl
44d5fe: out 0xc0, eax
44d600: add rdi, 0x40
44d606: jl 0x44d650
44d60c: jl 0x44d656
44d610: add dword ptr [rdx - 0xf], esp
44d613: jl 0x44d65d
44d615: sub dword ptr [rdi + 2], edx
44d61a: jl 0x44d664
44d61e: add ecx, dword ptr [rax - 0x7f]
44d625: add byte ptr [rax + 0x39], cl
44d628: div dword ptr [rdx - 0x27]
44d62d: jl 0x44d677
44d62f: adc dword ptr [rsi], edx
44d633: jl 0x44d67d
44d635: adc dword ptr [rsi + 1], edx
44d63a: jl 0x44d684
44d63c: adc dword ptr [rsi + 2], edx
44d643: adc dword ptr [rsi + 3], edx
44d646: ret 
44d647: and rdi, 0xffffffffffffff80
44d650: add byte ptr [rax], al
44d654: jl 0x44d69e
44d656: adc dword ptr [rax], edx
44d65a: jl 0x44d6a4
44d65d: push rax
44d65e: add dword ptr [rax - 0x7f], ecx
44d661: out dx, al
44d662: add byte ptr [rdx], al
44d664: add byte ptr [rax], al
44d668: jge 0x44d6b2
44d66a: out 0x17, eax
44d66e: jge 0x44d6b8
44d670: out 0x57, eax
44d672: add dword ptr [rdx - 0xf], esp
44d675: jge 0x44d6bf
44d677: out 0x57, eax
44d679: add ah, byte ptr [rdx - 0xf]
44d67e: out 0x57, eax
44d680: add esp, dword ptr [rdx - 0xf]
44d685: out 0x57, eax
44d687: add al, 0x62
44d68c: out 0x57, eax
44d68e: add eax, 0x487df162
44d693: out 0x57, eax
44d698: jge 0x44d6e2
44d69a: out 0x57, eax
44d69e: add edi, 0x200
44d6a4: cmp rdi, rsi
44d6a7: jb 0x44d666
44d6a9: sfence 
44d6ae: jl 0x44d6f8
44d6b0: adc dword ptr [rsi], edx
44d6b4: jl 0x44d6fe
44d6b8: add dword ptr [rdx - 0xf], esp
44d6bb: jl 0x44d705
44d6bf: add ah, byte ptr [rdx - 0xf]
44d6c2: jl 0x44d70c
44d6c4: adc dword ptr [rsi + 3], edx
44d6c9: jl 0x44d713
44d6cb: adc dword ptr [rsi + 4], edx
44d6d0: jl 0x44d71a
44d6d2: adc dword ptr [rsi + 5], edx
44d6d7: jl 0x44d721
44d6d9: adc dword ptr [rsi + 6], edx
44d6de: jl 0x44d728
44d6e1: push rsi
44d6e3: ret 
44d6e4: nop word ptr cs:[rax + rax]
44d6ee: nop 
44d6f0: endbr64 
44d6f4: mov rax, rdi
44d6f8: add eax, edx
44d6fa: jmp 0x44d707
44d700: endbr64 
44d705: mov eax, edi
44d707: cmp rdx, 0x10
44d70b: jb 0x44d80b
44d713: cli 
44d71b: movups xmm0, xmmword ptr [rsi]
44d71e: movups xmm1, xmmword ptr [rsi + rdx - 0x10]
44d723: movups xmmword ptr [rdi], xmm0
44d726: movups xmmword ptr [rdi + rdx - 0x10], xmm1
44d72b: ret 
44d72c: nop dword ptr [rax]
44d730: endbr64 
44d734: cmp rcx, rdx
44d737: jb 0x454570
44d73d: nop dword ptr [rax]
44d740: endbr64 
44d744: mov rax, rdi
44d747: test rdx, rdx
44d74a: je 0x44d791
44d74c: add rax, rdx
44d74f: jmp 0x44d77c
44d751: nop word ptr cs:[rax + rax]
44d75c: nop dword ptr [rax]
44d760: endbr64 
44d764: cmp rcx, rdx
44d767: jb 0x454570
44d76d: nop dword ptr [rax]
44d770: endbr64 
44d774: mov rax, rdi
44d777: test rdx, rdx
44d77a: je 0x44d791
44d77c: mov rcx, rdx
44d77f: cmp rdi, rsi
44d782: jb 0x44d78f
44d784: je 0x44d791
44d786: lea rdx, [rsi + rcx]
44d78a: cmp rdi, rdx
44d78d: jb 0x44d792
44d78f: rep movsb byte ptr [rdi], byte ptr [rsi]
44d791: ret 
44d792: lea rdi, [rdi + rcx - 1]
44d797: lea rsi, [rsi + rcx - 1]
44d79c: std 
44d79d: rep movsb byte ptr [rdi], byte ptr [rsi]
44d79f: cld 
44d7a0: ret 
44d7a1: nop word ptr cs:[rax + rax]
44d7ac: nop dword ptr [rax]
44d7b0: endbr64 
44d7b4: mov rax, rdi
44d7b7: add rax, rdx
44d7ba: jmp 0x44d7c7
44d7bc: nop dword ptr [rax]
44d7c0: endbr64 
44d7c4: mov rax, rdi
44d7c7: cmp rdx, 0x10
44d7cb: jb 0x44d80b
44d7cd: cmp rdx, 0x20
44d7d1: ja 0x44d851
44d7d3: movups xmm0, xmmword ptr [rsi]
44d7d6: movups xmm1, xmmword ptr [rsi + rdx - 0x10]
44d7db: movups xmmword ptr [rdi], xmm0
44d7de: movups xmmword ptr [rdi + rdx - 0x10], xmm1
44d7e3: ret 
44d7e4: cmp rdx, qword ptr [rip + 0x75f75]
44d7eb: jae 0x44d8d3
44d7f1: cmp rdi, rsi
44d7f4: jb 0x44d805
44d7f6: je 0x44d80a
44d7f8: lea r9, [rsi + rdx]
44d7fc: cmp rdi, r9
44d7ff: jb 0x44d968
44d805: mov rcx, rdx
44d808: rep movsb byte ptr [rdi], byte ptr [rsi]
44d80a: ret 
44d80b: cmp dl, 8
44d80e: jae 0x44d822
44d810: cmp dl, 4
44d813: jae 0x44d833
44d815: cmp dl, 1
44d818: ja 0x44d840
44d81a: jb 0x44d821
44d81c: movzx ecx, byte ptr [rsi]
44d81f: mov byte ptr [rdi], cl
44d821: ret 
44d822: mov rcx, qword ptr [rsi + rdx - 8]
44d827: mov rsi, qword ptr [rsi]
44d82a: mov qword ptr [rdi + rdx - 8], rcx
44d82f: mov qword ptr [rdi], rsi
44d832: ret 
44d833: mov ecx, dword ptr [rsi + rdx - 4]
44d837: mov esi, dword ptr [rsi]
44d839: mov dword ptr [rdi + rdx - 4], ecx
44d83d: mov dword ptr [rdi], esi
44d83f: ret 
44d840: movzx ecx, word ptr [rsi + rdx - 2]
44d845: movzx esi, word ptr [rsi]
44d848: mov word ptr [rdi + rdx - 2], cx
44d84d: mov word ptr [rdi], si
44d850: ret 
44d851: cmp rdx, 0x800
44d858: ja 0x44d7e4
44d85a: cmp rdx, 0x80
44d861: ja 0x44d8d3
44d863: cmp rdx, 0x40
44d867: jb 0x44d8b0
44d869: movups xmm0, xmmword ptr [rsi]
44d86c: movups xmm1, xmmword ptr [rsi + 0x10]
44d870: movups xmm2, xmmword ptr [rsi + 0x20]
44d874: movups xmm3, xmmword ptr [rsi + 0x30]
44d878: movups xmm4, xmmword ptr [rsi + rdx - 0x10]
44d87d: movups xmm5, xmmword ptr [rsi + rdx - 0x20]
44d882: movups xmm6, xmmword ptr [rsi + rdx - 0x30]
44d887: movups xmm7, xmmword ptr [rsi + rdx - 0x40]
44d88c: movups xmmword ptr [rdi], xmm0
44d88f: movups xmmword ptr [rdi + 0x10], xmm1
44d893: movups xmmword ptr [rdi + 0x20], xmm2
44d897: movups xmmword ptr [rdi + 0x30], xmm3
44d89b: movups xmmword ptr [rdi + rdx - 0x10], xmm4
44d8a0: movups xmmword ptr [rdi + rdx - 0x20], xmm5
44d8a5: movups xmmword ptr [rdi + rdx - 0x30], xmm6
44d8aa: movups xmmword ptr [rdi + rdx - 0x40], xmm7
44d8af: ret 
44d8b0: movups xmm0, xmmword ptr [rsi]
44d8b3: movups xmm1, xmmword ptr [rsi + 0x10]
44d8b7: movups xmm2, xmmword ptr [rsi + rdx - 0x10]
44d8bc: movups xmm3, xmmword ptr [rsi + rdx - 0x20]
44d8c1: movups xmmword ptr [rdi], xmm0
44d8c4: movups xmmword ptr [rdi + 0x10], xmm1
44d8c8: movups xmmword ptr [rdi + rdx - 0x10], xmm2
44d8cd: movups xmmword ptr [rdi + rdx - 0x20], xmm3
44d8d2: ret 
44d8d3: cmp rdi, rsi
44d8d6: ja 0x44d968
44d8dc: je 0x44d80a
44d8e2: movups xmm4, xmmword ptr [rsi]
44d8e5: movups xmm5, xmmword ptr [rsi + rdx - 0x10]
44d8ea: movups xmm6, xmmword ptr [rsi + rdx - 0x20]
44d8ef: movups xmm7, xmmword ptr [rsi + rdx - 0x30]
44d8f4: movups xmm8, xmmword ptr [rsi + rdx - 0x40]
44d8fa: mov r11, rdi
44d8fd: lea rcx, [rdi + rdx - 0x10]
44d902: mov r8, rdi
44d905: and r8, 0xf
44d909: sub r8, 0x10
44d90d: sub rsi, r8
44d910: sub rdi, r8
44d913: add rdx, r8
44d916: cmp rdx, qword ptr [rip + 0x75e43]
44d91d: ja 0x44d9ef
44d923: movups xmm0, xmmword ptr [rsi]
44d926: movups xmm1, xmmword ptr [rsi + 0x10]
44d92a: movups xmm2, xmmword ptr [rsi + 0x20]
44d92e: movups xmm3, xmmword ptr [rsi + 0x30]
44d932: add rsi, 0x40
44d936: sub rdx, 0x40
44d93a: movaps xmmword ptr [rdi], xmm0
44d93d: movaps xmmword ptr [rdi + 0x10], xmm1
44d941: movaps xmmword ptr [rdi + 0x20], xmm2
44d945: movaps xmmword ptr [rdi + 0x30], xmm3
44d949: add rdi, 0x40
44d94d: cmp rdx, 0x40
44d951: ja 0x44d923
44d953: movups xmmword ptr [rcx], xmm5
44d956: movups xmmword ptr [rcx - 0x10], xmm6
44d95a: movups xmmword ptr [rcx - 0x20], xmm7
44d95e: movups xmmword ptr [rcx - 0x30], xmm8
44d963: movups xmmword ptr [r11], xmm4
44d967: ret 
44d968: movups xmm4, xmmword ptr [rsi]
44d96b: movups xmm5, xmmword ptr [rsi + 0x10]
44d96f: movups xmm6, xmmword ptr [rsi + 0x20]
44d973: movups xmm7, xmmword ptr [rsi + 0x30]
44d977: movups xmm8, xmmword ptr [rsi + rdx - 0x10]
44d97d: lea r11, [rdi + rdx - 0x10]
44d982: lea rcx, [rsi + rdx - 0x10]
44d987: mov r9, r11
44d98a: mov r8, r11
44d98d: and r8, 0xf
44d991: sub rcx, r8
44d994: sub r9, r8
44d997: sub rdx, r8
44d99a: cmp rdx, qword ptr [rip + 0x75dbf]
44d9a1: ja 0x44da56
44d9a7: movups xmm0, xmmword ptr [rcx]
44d9aa: movups xmm1, xmmword ptr [rcx - 0x10]
44d9ae: movups xmm2, xmmword ptr [rcx - 0x20]
44d9b2: movups xmm3, xmmword ptr [rcx - 0x30]
44d9b6: sub rcx, 0x40
44d9ba: sub rdx, 0x40
44d9be: movaps xmmword ptr [r9], xmm0
44d9c2: movaps xmmword ptr [r9 - 0x10], xmm1
44d9c7: movaps xmmword ptr [r9 - 0x20], xmm2
44d9cc: movaps xmmword ptr [r9 - 0x30], xmm3
44d9d1: sub r9, 0x40
44d9d5: cmp rdx, 0x40
44d9d9: ja 0x44d9a7
44d9db: movups xmmword ptr [rdi], xmm4
44d9de: movups xmmword ptr [rdi + 0x10], xmm5
44d9e2: movups xmmword ptr [rdi + 0x20], xmm6
44d9e6: movups xmmword ptr [rdi + 0x30], xmm7
44d9ea: movups xmmword ptr [r11], xmm8
44d9ee: ret 
44d9ef: lea r10, [rdi + rdx]
44d9f3: cmp rsi, r10
44d9f6: jb 0x44d923
44d9fc: prefetcht0 byte ptr [rsi + 0x80]
44da03: prefetcht0 byte ptr [rsi + 0xc0]
44da0a: movups xmm0, xmmword ptr [rsi]
44da0d: movups xmm1, xmmword ptr [rsi + 0x10]
44da11: movups xmm2, xmmword ptr [rsi + 0x20]
44da15: movups xmm3, xmmword ptr [rsi + 0x30]
44da19: add rsi, 0x40
44da1d: sub rdx, 0x40
44da21: movntdq xmmword ptr [rdi], xmm0
44da25: movntdq xmmword ptr [rdi + 0x10], xmm1
44da2a: movntdq xmmword ptr [rdi + 0x20], xmm2
44da2f: movntdq xmmword ptr [rdi + 0x30], xmm3
44da34: add rdi, 0x40
44da38: cmp rdx, 0x40
44da3c: ja 0x44d9fc
44da3e: sfence 
44da41: movups xmmword ptr [rcx], xmm5
44da44: movups xmmword ptr [rcx - 0x10], xmm6
44da48: movups xmmword ptr [rcx - 0x20], xmm7
44da4c: movups xmmword ptr [rcx - 0x30], xmm8
44da51: movups xmmword ptr [r11], xmm4
44da55: ret 
44da56: lea r10, [rcx + rdx]
44da5a: cmp r9, r10
44da5d: jb 0x44d9a7
44da63: prefetcht0 byte ptr [rcx - 0x80]
44da67: prefetcht0 byte ptr [rcx - 0xc0]
44da6e: movups xmm0, xmmword ptr [rcx]
44da71: movups xmm1, xmmword ptr [rcx - 0x10]
44da75: movups xmm2, xmmword ptr [rcx - 0x20]
44da79: movups xmm3, xmmword ptr [rcx - 0x30]
44da7d: sub rcx, 0x40
44da81: sub rdx, 0x40
44da85: movntdq xmmword ptr [r9], xmm0
44da8a: movntdq xmmword ptr [r9 - 0x10], xmm1
44da90: movntdq xmmword ptr [r9 - 0x20], xmm2
44da96: movntdq xmmword ptr [r9 - 0x30], xmm3
44da9c: sub r9, 0x40
44daa0: cmp rdx, 0x40
44daa4: ja 0x44da63
44daa6: sfence 
44daa9: movups xmmword ptr [rdi], xmm4
44daac: movups xmmword ptr [rdi + 0x10], xmm5
44dab0: movups xmmword ptr [rdi + 0x20], xmm6
44dab4: movups xmmword ptr [rdi + 0x30], xmm7
44dab8: movups xmmword ptr [r11], xmm8
44dabc: ret 
44dabd: nop dword ptr [rax]
44dac0: endbr64 
44dac4: mov rax, rdi
44dac7: add rax, rdx
44daca: jmp 0x44dad7
44dacc: nop dword ptr [rax]
44dad0: endbr64 
44dad4: mov rax, rdi
44dad7: cmp rdx, 0x20
44dadb: jb 0x44db76
44dae1: cmp rdx, 0x40
44dae5: ja 0x44dbe3
44daeb: vmovdqu ymm0, ymmword ptr [rsi]
44daef: vmovdqu ymm1, ymmword ptr [rsi + rdx - 0x20]
44daf5: vmovdqu ymmword ptr [rdi], ymm0
44daf9: vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1
44daff: vzeroupper 
44db02: ret 
44db03: nop word ptr cs:[rax + rax]
44db0e: nop 
44db10: endbr64 
44db14: mov rax, rdi
44db17: add rax, rdx
44db1a: jmp 0x44db27
44db1c: nop dword ptr [rax]
44db20: endbr64 
44db24: mov rax, rdi
44db27: cmp rdx, 0x20
44db2b: jb 0x44db76
44db2d: cmp rdx, 0x40
44db31: ja 0x44dbd6
44db37: vmovdqu ymm0, ymmword ptr [rsi]
44db3b: vmovdqu ymm1, ymmword ptr [rsi + rdx - 0x20]
44db41: vmovdqu ymmword ptr [rdi], ymm0
44db45: vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1
44db4b: vzeroupper 
44db4e: ret 
44db4f: cmp rdx, qword ptr [rip + 0x75c0a]
44db56: jae 0x44dc81
44db5c: cmp rdi, rsi
44db5f: jb 0x44db70
44db61: je 0x44db75
44db63: lea r9, [rsi + rdx]
44db67: cmp rdi, r9
44db6a: jb 0x44dd35
44db70: mov rcx, rdx
44db73: rep movsb byte ptr [rdi], byte ptr [rsi]
44db75: ret 
44db76: cmp dl, 0x10
44db79: jae 0x44db92
44db7b: cmp dl, 8
44db7e: jae 0x44dba7
44db80: cmp dl, 4
44db83: jae 0x44dbb8
44db85: cmp dl, 1
44db88: ja 0x44dbc5
44db8a: jb 0x44db91
44db8c: movzx ecx, byte ptr [rsi]
44db8f: mov byte ptr [rdi], cl
44db91: ret 
44db92: vmovdqu xmm0, xmmword ptr [rsi]
44db96: vmovdqu xmm1, xmmword ptr [rsi + rdx - 0x10]
44db9c: vmovdqu xmmword ptr [rdi], xmm0
44dba0: vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1
44dba6: ret 
44dba7: mov rcx, qword ptr [rsi + rdx - 8]
44dbac: mov rsi, qword ptr [rsi]
44dbaf: mov qword ptr [rdi + rdx - 8], rcx
44dbb4: mov qword ptr [rdi], rsi
44dbb7: ret 
44dbb8: mov ecx, dword ptr [rsi + rdx - 4]
44dbbc: mov esi, dword ptr [rsi]
44dbbe: mov dword ptr [rdi + rdx - 4], ecx
44dbc2: mov dword ptr [rdi], esi
44dbc4: ret 
44dbc5: movzx ecx, word ptr [rsi + rdx - 2]
44dbca: movzx esi, word ptr [rsi]
44dbcd: mov word ptr [rdi + rdx - 2], cx
44dbd2: mov word ptr [rdi], si
44dbd5: ret 
44dbd6: cmp rdx, 0x1000
44dbdd: ja 0x44db4f
44dbe3: cmp rdx, 0x100
44dbea: ja 0x44dc81
44dbf0: cmp rdx, 0x80
44dbf7: jb 0x44dc53
44dbf9: vmovdqu ymm0, ymmword ptr [rsi]
44dbfd: vmovdqu ymm1, ymmword ptr [rsi + 0x20]
44dc02: vmovdqu ymm2, ymmword ptr [rsi + 0x40]
44dc07: vmovdqu ymm3, ymmword ptr [rsi + 0x60]
44dc0c: vmovdqu ymm4, ymmword ptr [rsi + rdx - 0x20]
44dc12: vmovdqu ymm5, ymmword ptr [rsi + rdx - 0x40]
44dc18: vmovdqu ymm6, ymmword ptr [rsi + rdx - 0x60]
44dc1e: vmovdqu ymm7, ymmword ptr [rsi + rdx - 0x80]
44dc24: vmovdqu ymmword ptr [rdi], ymm0
44dc28: vmovdqu ymmword ptr [rdi + 0x20], ymm1
44dc2d: vmovdqu ymmword ptr [rdi + 0x40], ymm2
44dc32: vmovdqu ymmword ptr [rdi + 0x60], ymm3
44dc37: vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm4
44dc3d: vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm5
44dc43: vmovdqu ymmword ptr [rdi + rdx - 0x60], ymm6
44dc49: vmovdqu ymmword ptr [rdi + rdx - 0x80], ymm7
44dc4f: vzeroupper 
44dc52: ret 
44dc53: vmovdqu ymm0, ymmword ptr [rsi]
44dc57: vmovdqu ymm1, ymmword ptr [rsi + 0x20]
44dc5c: vmovdqu ymm2, ymmword ptr [rsi + rdx - 0x20]
44dc62: vmovdqu ymm3, ymmword ptr [rsi + rdx - 0x40]
44dc68: vmovdqu ymmword ptr [rdi], ymm0
44dc6c: vmovdqu ymmword ptr [rdi + 0x20], ymm1
44dc71: vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm2
44dc77: vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3
44dc7d: vzeroupper 
44dc80: ret 
44dc81: cmp rdi, rsi
44dc84: ja 0x44dd35
44dc8a: je 0x44db75
44dc90: vmovdqu ymm4, ymmword ptr [rsi]
44dc94: vmovdqu ymm5, ymmword ptr [rsi + rdx - 0x20]
44dc9a: vmovdqu ymm6, ymmword ptr [rsi + rdx - 0x40]
44dca0: vmovdqu ymm7, ymmword ptr [rsi + rdx - 0x60]
44dca6: vmovdqu ymm8, ymmword ptr [rsi + rdx - 0x80]
44dcac: mov r11, rdi
44dcaf: lea rcx, [rdi + rdx - 0x20]
44dcb4: mov r8, rdi
44dcb7: and r8, 0x1f
44dcbb: sub r8, 0x20
44dcbf: sub rsi, r8
44dcc2: sub rdi, r8
44dcc5: add rdx, r8
44dcc8: cmp rdx, qword ptr [rip + 0x75a91]
44dccf: ja 0x44dddc
44dcd5: vmovdqu ymm0, ymmword ptr [rsi]
44dcd9: vmovdqu ymm1, ymmword ptr [rsi + 0x20]
44dcde: vmovdqu ymm2, ymmword ptr [rsi + 0x40]
44dce3: vmovdqu ymm3, ymmword ptr [rsi + 0x60]
44dce8: add rsi, 0x80
44dcef: sub rdx, 0x80
44dcf6: vmovdqa ymmword ptr [rdi], ymm0
44dcfa: vmovdqa ymmword ptr [rdi + 0x20], ymm1
44dcff: vmovdqa ymmword ptr [rdi + 0x40], ymm2
44dd04: vmovdqa ymmword ptr [rdi + 0x60], ymm3
44dd09: add rdi, 0x80
44dd10: cmp rdx, 0x80
44dd17: ja 0x44dcd5
44dd19: vmovdqu ymmword ptr [rcx], ymm5
44dd1d: vmovdqu ymmword ptr [rcx - 0x20], ymm6
44dd22: vmovdqu ymmword ptr [rcx - 0x40], ymm7
44dd27: vmovdqu ymmword ptr [rcx - 0x60], ymm8
44dd2c: vmovdqu ymmword ptr [r11], ymm4
44dd31: vzeroupper 
44dd34: ret 
44dd35: vmovdqu ymm4, ymmword ptr [rsi]
44dd39: vmovdqu ymm5, ymmword ptr [rsi + 0x20]
44dd3e: vmovdqu ymm6, ymmword ptr [rsi + 0x40]
44dd43: vmovdqu ymm7, ymmword ptr [rsi + 0x60]
44dd48: vmovdqu ymm8, ymmword ptr [rsi + rdx - 0x20]
44dd4e: lea r11, [rdi + rdx - 0x20]
44dd53: lea rcx, [rsi + rdx - 0x20]
44dd58: mov r9, r11
44dd5b: mov r8, r11
44dd5e: and r8, 0x1f
44dd62: sub rcx, r8
44dd65: sub r9, r8
44dd68: sub rdx, r8
44dd6b: cmp rdx, qword ptr [rip + 0x759ee]
44dd72: ja 0x44de68
44dd78: vmovdqu ymm0, ymmword ptr [rcx]
44dd7c: vmovdqu ymm1, ymmword ptr [rcx - 0x20]
44dd81: vmovdqu ymm2, ymmword ptr [rcx - 0x40]
44dd86: vmovdqu ymm3, ymmword ptr [rcx - 0x60]
44dd8b: sub rcx, 0x80
44dd92: sub rdx, 0x80
44dd99: vmovdqa ymmword ptr [r9], ymm0
44dd9e: vmovdqa ymmword ptr [r9 - 0x20], ymm1
44dda4: vmovdqa ymmword ptr [r9 - 0x40], ymm2
44ddaa: vmovdqa ymmword ptr [r9 - 0x60], ymm3
44ddb0: sub r9, 0x80
44ddb7: cmp rdx, 0x80
44ddbe: ja 0x44dd78
44ddc0: vmovdqu ymmword ptr [rdi], ymm4
44ddc4: vmovdqu ymmword ptr [rdi + 0x20], ymm5
44ddc9: vmovdqu ymmword ptr [rdi + 0x40], ymm6
44ddce: vmovdqu ymmword ptr [rdi + 0x60], ymm7
44ddd3: vmovdqu ymmword ptr [r11], ymm8
44ddd8: vzeroupper 
44dddb: ret 
44dddc: lea r10, [rdi + rdx]
44dde0: cmp rsi, r10
44dde3: jb 0x44dcd5
44dde9: prefetcht0 byte ptr [rsi + 0x100]
44ddf0: prefetcht0 byte ptr [rsi + 0x140]
44ddf7: prefetcht0 byte ptr [rsi + 0x180]
44ddfe: prefetcht0 byte ptr [rsi + 0x1c0]
44de05: vmovdqu ymm0, ymmword ptr [rsi]
44de09: vmovdqu ymm1, ymmword ptr [rsi + 0x20]
44de0e: vmovdqu ymm2, ymmword ptr [rsi + 0x40]
44de13: vmovdqu ymm3, ymmword ptr [rsi + 0x60]
44de18: add rsi, 0x80
44de1f: sub rdx, 0x80
44de26: vmovntdq ymmword ptr [rdi], ymm0
44de2a: vmovntdq ymmword ptr [rdi + 0x20], ymm1
44de2f: vmovntdq ymmword ptr [rdi + 0x40], ymm2
44de34: vmovntdq ymmword ptr [rdi + 0x60], ymm3
44de39: add rdi, 0x80
44de40: cmp rdx, 0x80
44de47: ja 0x44dde9
44de49: sfence 
44de4c: vmovdqu ymmword ptr [rcx], ymm5
44de50: vmovdqu ymmword ptr [rcx - 0x20], ymm6
44de55: vmovdqu ymmword ptr [rcx - 0x40], ymm7
44de5a: vmovdqu ymmword ptr [rcx - 0x60], ymm8
44de5f: vmovdqu ymmword ptr [r11], ymm4
44de64: vzeroupper 
44de67: ret 
44de68: lea r10, [rcx + rdx]
44de6c: cmp r9, r10
44de6f: jb 0x44dd78
44de75: prefetcht0 byte ptr [rcx - 0x100]
44de7c: prefetcht0 byte ptr [rcx - 0x140]
44de83: prefetcht0 byte ptr [rcx - 0x180]
44de8a: prefetcht0 byte ptr [rcx - 0x1c0]
44de91: vmovdqu ymm0, ymmword ptr [rcx]
44de95: vmovdqu ymm1, ymmword ptr [rcx - 0x20]
44de9a: vmovdqu ymm2, ymmword ptr [rcx - 0x40]
44de9f: vmovdqu ymm3, ymmword ptr [rcx - 0x60]
44dea4: sub rcx, 0x80
44deab: sub rdx, 0x80
44deb2: vmovntdq ymmword ptr [r9], ymm0
44deb7: vmovntdq ymmword ptr [r9 - 0x20], ymm1
44debd: vmovntdq ymmword ptr [r9 - 0x40], ymm2
44dec3: vmovntdq ymmword ptr [r9 - 0x60], ymm3
44dec9: sub r9, 0x80
44ded0: cmp rdx, 0x80
44ded7: ja 0x44de75
44ded9: sfence 
44dedc: vmovdqu ymmword ptr [rdi], ymm4
44dee0: vmovdqu ymmword ptr [rdi + 0x20], ymm5
44dee5: vmovdqu ymmword ptr [rdi + 0x40], ymm6
44deea: vmovdqu ymmword ptr [rdi + 0x60], ymm7
44deef: vmovdqu ymmword ptr [r11], ymm8
44def4: vzeroupper 
44def7: ret 
44def8: nop dword ptr [rax + rax]
44df00: endbr64 
44df04: mov rax, rdi
44df07: add rax, rdx
44df0a: jmp 0x44df17
44df0c: nop dword ptr [rax]
44df10: endbr64 
44df14: mov rax, rdi
44df17: cmp rdx, 0x40
44df1b: jb 0x44dfc1
44df21: cmp rdx, 0x80
44df28: ja 0x44e04b
44df30: dec byte ptr [rax + 0x6f]
44df36: dec byte ptr [rax + 0x6f]
44df3b: jmp qword ptr [rdx - 0xf]
44df3e: dec byte ptr [rax + 0x7f]
44df44: dec byte ptr [rax + 0x7f]
44df49: inc ebp
44df4b: clc 
44df4c: ja 0x44df11
44df4e: nop 
44df50: endbr64 
44df54: mov rax, rdi
44df57: add rax, rdx
44df5a: jmp 0x44df67
44df5c: nop dword ptr [rax]
44df60: endbr64 
44df64: mov rax, rdi
44df67: cmp rdx, 0x40
44df6b: jb 0x44dfc1
44df6d: cmp rdx, 0x80
44df74: ja 0x44e03e
44df7c: dec byte ptr [rax + 0x6f]
44df82: dec byte ptr [rax + 0x6f]
44df87: jmp qword ptr [rdx - 0xf]
44df8a: dec byte ptr [rax + 0x7f]
44df90: dec byte ptr [rax + 0x7f]
44df95: inc ebp
44df97: clc 
44df98: ja 0x44df5d
44df9a: cmp rdx, qword ptr [rip + 0x757bf]
44dfa1: jae 0x44e119
44dfa7: cmp rdi, rsi
44dfaa: jb 0x44dfbb
44dfac: je 0x44dfc0
44dfae: lea r9, [rsi + rdx]
44dfb2: cmp rdi, r9
44dfb5: jb 0x44e1f0
44dfbb: mov rcx, rdx
44dfbe: rep movsb byte ptr [rdi], byte ptr [rsi]
44dfc0: ret 
44dfc1: cmp dl, 0x20
44dfc4: jae 0x44dfe2
44dfc6: cmp dl, 0x10
44dfc9: jae 0x44dffa
44dfcb: cmp dl, 8
44dfce: jae 0x44e00f
44dfd0: cmp dl, 4
44dfd3: jae 0x44e020
44dfd5: cmp dl, 1
44dfd8: ja 0x44e02d
44dfda: jb 0x44dfe1
44dfdc: movzx ecx, byte ptr [rsi]
44dfdf: mov byte ptr [rdi], cl
44dfe1: ret 
44dfe2: vmovdqu ymm0, ymmword ptr [rsi]
44dfe6: vmovdqu ymm1, ymmword ptr [rsi + rdx - 0x20]
44dfec: vmovdqu ymmword ptr [rdi], ymm0
44dff0: vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1
44dff6: vzeroupper 
44dff9: ret 
44dffa: vmovdqu xmm0, xmmword ptr [rsi]
44dffe: vmovdqu xmm1, xmmword ptr [rsi + rdx - 0x10]
44e004: vmovdqu xmmword ptr [rdi], xmm0
44e008: vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1
44e00e: ret 
44e00f: mov rcx, qword ptr [rsi + rdx - 8]
44e014: mov rsi, qword ptr [rsi]
44e017: mov qword ptr [rdi + rdx - 8], rcx
44e01c: mov qword ptr [rdi], rsi
44e01f: ret 
44e020: mov ecx, dword ptr [rsi + rdx - 4]
44e024: mov esi, dword ptr [rsi]
44e026: mov dword ptr [rdi + rdx - 4], ecx
44e02a: mov dword ptr [rdi], esi
44e02c: ret 
44e02d: movzx ecx, word ptr [rsi + rdx - 2]
44e032: movzx esi, word ptr [rsi]
44e035: mov word ptr [rdi + rdx - 2], cx
44e03a: mov word ptr [rdi], si
44e03d: ret 
44e03e: cmp rdx, 0x2000
44e045: ja 0x44df9a
44e04b: cmp rdx, 0x200
44e052: ja 0x44e119
44e058: cmp rdx, 0x100
44e05f: jb 0x44e0db
44e063: dec byte ptr [rax + 0x6f]
44e069: dec byte ptr [rax + 0x6f]
44e06c: add qword ptr [rdx - 0xf], r12
44e070: dec byte ptr [rax + 0x6f]
44e073: push rsi
44e074: add ah, byte ptr [rdx - 0xf]
44e077: dec byte ptr [rax + 0x6f]
44e07a: pop rsi
44e07b: add esp, dword ptr [rdx - 0xf]
44e07e: dec byte ptr [rax + 0x6f]
44e083: jmp qword ptr [rdx - 0xf]
44e086: dec byte ptr [rax + 0x6f]
44e08e: dec byte ptr [rax + 0x6f]
44e091: je 0x44e0a9
44e093: std 
44e096: dec byte ptr [rax + 0x6f]
44e099: jl 0x44e0b1
44e09b: cld 
44e09e: dec byte ptr [rax + 0x7f]
44e0a4: dec byte ptr [rax + 0x7f]
44e0ab: dec byte ptr [rax + 0x7f]
44e0ae: push rdi
44e0b2: dec byte ptr [rax + 0x7f]
44e0b5: pop rdi
44e0b6: add esp, dword ptr [rdx - 0xf]
44e0b9: dec byte ptr [rax + 0x7f]
44e0be: jmp qword ptr [rdx - 0xf]
44e0c1: dec byte ptr [rax + 0x7f]
44e0c9: dec byte ptr [rax + 0x7f]
44e0cc: je 0x44e0e5
44e0ce: std 
44e0d1: dec byte ptr [rax + 0x7f]
44e0d4: jl 0x44e0ed
44e0d6: cld 
44e0d7: vzeroupper 
44e0da: ret 
44e0dd: dec byte ptr [rax + 0x6f]
44e0e6: add qword ptr [rdx - 0xf], r12
44e0ea: dec byte ptr [rax + 0x6f]
44e0ed: push rsp
44e0ef: jmp qword ptr [rdx - 0xf]
44e0f2: dec byte ptr [rax + 0x6f]
44e0f5: pop rsp
44e0fa: dec byte ptr [rax + 0x7f]
44e100: dec byte ptr [rax + 0x7f]
44e103: add qword ptr [r10 - 0xf], r12
44e107: dec byte ptr [rax + 0x7f]
44e10a: push rsp
44e10c: jmp qword ptr [rdx - 0xf]
44e10f: dec byte ptr [rax + 0x7f]
44e112: pop rsp
44e114: inc ch
44e116: clc 
44e117: ja 0x44e0dc
44e119: cmp rdi, rsi
44e11c: ja 0x44e1f0
44e122: je 0x44dfc0
44e12a: dec byte ptr [rax + 0x6f]
44e130: dec byte ptr [rax + 0x6f]
44e135: jmp qword ptr [rdx - 0xf]
44e138: dec byte ptr [rax + 0x6f]
44e13b: je 0x44e153
44e140: dec byte ptr [rax + 0x6f]
44e143: jl 0x44e15b
44e145: std 
44e147: jno 0x44e147
44e14d: cld 
44e14e: mov r11, rdi
44e155: ror byte ptr [rcx - 0x77], 0xf8
44e15b: loopne 0x44e19c
44e15d: sub r8, 0x40
44e161: sub rsi, r8
44e164: sub rdi, r8
44e167: add rdx, r8
44e16a: cmp rdx, qword ptr [rip + 0x755ef]
44e171: ja 0x44e2b6
44e179: dec byte ptr [rax + 0x6f]
44e17f: dec byte ptr [rax + 0x6f]
44e182: add qword ptr [rdx - 0xf], r12
44e186: dec byte ptr [rax + 0x6f]
44e189: push rsi
44e18a: add ah, byte ptr [rdx - 0xf]
44e18d: dec byte ptr [rax + 0x6f]
44e190: pop rsi
44e191: add ecx, dword ptr [rax - 0x7f]
44e194: mov byte ptr [rax], 1
44e197: add byte ptr [rax], al
44e19c: add byte ptr [rcx], al
44e19e: add byte ptr [rax], al
44e1a2: std 
44e1a3: jg 0x44e1ad
44e1a8: std 
44e1a9: jg 0x44e1fb
44e1af: std 
44e1b0: jg 0x44e20a
44e1b3: add ah, byte ptr [rdx - 0xf]
44e1b6: std 
44e1b7: jg 0x44e219
44e1ba: add ecx, dword ptr [rax - 0x7f]
44e1bd: mov dword ptr [rax], 0x48000001
44e1c3: cmp edx, 0x100
44e1c9: ja 0x44e177
44e1cd: dec byte ptr [rax + 0x7f]
44e1d0: sub dword ptr [rdx - 0xf], esp
44e1d3: dec byte ptr [rax + 0x7f]
44e1d6: jno 0x44e1d7
44e1da: dec byte ptr [rax + 0x7f]
44e1dd: jns 0x44e1dd
44e1e0: jno 0x44e1e0
44e1e2: jg 0x44e226
44e1e5: std 
44e1e7: sar esi, 1
44e1e9: jg 0x44e20f
44e1ec: vzeroupper 
44e1ef: ret 
44e1f2: dec byte ptr [rax + 0x6f]
44e1f8: dec byte ptr [rax + 0x6f]
44e1fc: add dword ptr [rdx - 0xf], esp
44e1ff: dec byte ptr [rax + 0x6f]
44e202: jbe 0x44e206
44e206: dec byte ptr [rax + 0x6f]
44e20a: add esp, dword ptr [rdx + 0x71]
44e20d: dec byte ptr [rax + 0x6f]
44e212: dec dword ptr [rbp + rcx*4 + 0x5c]
44e219: lea ecx, [rsi + rdx - 0x40]
44e21d: mov r9, r11
44e220: mov r8, r11
44e223: and r8, 0x3f
44e227: sub rcx, r8
44e22a: sub r9, r8
44e22d: sub rdx, r8
44e230: cmp rdx, qword ptr [rip + 0x75529]
44e237: ja 0x44e37b
44e23f: dec byte ptr [rax + 0x6f]
44e242: add dword ptr [rdx - 0xf], esp
44e245: dec byte ptr [rax + 0x6f]
44e248: jmp qword ptr [r10 - 0xf]
44e24c: dec byte ptr [rax + 0x6f]
44e24f: push rcx
44e253: dec byte ptr [rax + 0x6f]
44e256: pop rcx
44e257: std 
44e258: sub rcx, 0x100
44e25f: sub rdx, 0x100
44e267: sar ebp, 1
44e269: jg 0x44e26d
44e26d: sar ebp, 1
44e26f: jg 0x44e2bb
44e272: jmp qword ptr [rdx - 0x2f]
44e275: std 
44e276: jg 0x44e2ca
44e27b: sar ebp, 1
44e27d: jg 0x44e2d9
44e280: std 
44e281: sub r9, 0x100
44e288: cmp rdx, 0x100
44e28f: ja 0x44e23d
44e293: dec byte ptr [rax + 0x7f]
44e299: dec byte ptr [rax + 0x7f]
44e29d: add dword ptr [rdx - 0xf], esp
44e2a0: dec byte ptr [rax + 0x7f]
44e2a3: ja 0x44e2a7
44e2a7: dec byte ptr [rax + 0x7f]
44e2aa: jg 0x44e2af
44e2ad: push rcx
44e2af: jg 0x44e2b5
44e2b2: vzeroupper 
44e2b5: ret 
44e2b6: lea r10, [rdi + rdx]
44e2bb: cmp esi, edx
44e2bd: jb 0x44e177
44e2c3: prefetcht0 byte ptr [rsi + 0x200]
44e2ca: prefetcht0 byte ptr [rsi + 0x240]
44e2d1: prefetcht0 byte ptr [rsi + 0x280]
44e2d9: sbb byte ptr [rsi + 0x2c0], cl
44e2df: prefetcht0 byte ptr [rsi + 0x300]
44e2e6: prefetcht0 byte ptr [rsi + 0x340]
44e2ed: prefetcht0 byte ptr [rsi + 0x380]
44e2f4: prefetcht0 byte ptr [rsi + 0x3c0]
44e2fd: dec byte ptr [rax + 0x6f]
44e303: dec byte ptr [rax + 0x6f]
44e306: add qword ptr [rdx - 0xf], r12
44e30a: dec byte ptr [rax + 0x6f]
44e30d: push rsi
44e30e: add ah, byte ptr [rdx - 0xf]
44e311: dec byte ptr [rax + 0x6f]
44e314: pop rsi
44e315: add ecx, dword ptr [rax - 0x7f]
44e318: mov byte ptr [rax], 1
44e31b: add byte ptr [rax], al
44e31d: sub rdx, 0x100
44e326: jge 0x44e370
44e328: out 7, eax
44e32c: jge 0x44e376
44e32e: out 0x4f, eax
44e330: add dword ptr [rdx - 0xf], esp
44e333: jge 0x44e37d
44e335: out 0x57, eax
44e337: add ah, byte ptr [rdx - 0xf]
44e33a: jge 0x44e384
44e33c: out 0x5f, eax
44e33e: add ecx, dword ptr [rax - 0x7f]
44e341: mov dword ptr [rax], 0x48000001
44e347: cmp edx, 0x100
44e34d: ja 0x44e2c3
44e353: sfence 
44e358: dec byte ptr [rax + 0x7f]
44e35b: sub dword ptr [rdx - 0xf], esp
44e35e: dec byte ptr [rax + 0x7f]
44e361: jno 0x44e362
44e365: dec byte ptr [rax + 0x7f]
44e368: jns 0x44e368
44e36b: jno 0x44e36b
44e36d: jg 0x44e3b1
44e370: std 
44e372: sar esi, 1
44e377: vzeroupper 
44e37a: ret 
44e37d: adc al, 0x11
44e37f: cmp r9, r10
44e384: mov ch, 0xfe
44e388: prefetcht0 byte ptr [rcx - 0x200]
44e38f: prefetcht0 byte ptr [rcx - 0x240]
44e39a: std 
44e3b1: dec dword ptr [rdi]
44e3b3: sbb byte ptr [rcx - 0x380], cl
44e3b9: prefetcht0 byte ptr [rcx - 0x3c0]
44e3c2: dec byte ptr [rax + 0x6f]
44e3c5: add dword ptr [rdx - 0xf], esp
44e3c8: dec byte ptr [rax + 0x6f]
44e3cb: jmp qword ptr [r10 - 0xf]
44e3cf: dec byte ptr [rax + 0x6f]
44e3d2: push rcx
44e3d6: dec byte ptr [rax + 0x6f]
44e3d9: pop rcx
44e3da: std 
44e3db: sub rcx, 0x100
44e3e2: sub rdx, 0x100
44e3ea: sar dword ptr [rbp + 0x48], 1
44e3ed: out 1, eax
44e3f0: sar dword ptr [rbp + 0x48], 1
44e3f3: out 0x49, eax
44e3f5: jmp qword ptr [rdx - 0x2f]
44e3f8: jge 0x44e442
44e3fa: out 0x51, eax
44e3fe: sar dword ptr [rbp + 0x48], 1
44e401: out 0x59, eax
44e403: std 
44e404: sub r9, 0x100
44e40b: cmp rdx, 0x100
44e412: ja 0x44e388
44e418: sfence 
44e41d: dec byte ptr [rax + 0x7f]
44e423: dec byte ptr [rax + 0x7f]
44e427: add dword ptr [rdx - 0xf], esp
44e42a: dec byte ptr [rax + 0x7f]
44e42d: ja 0x44e431
44e431: dec byte ptr [rax + 0x7f]
44e434: jg 0x44e439
44e437: push rcx
44e439: jg 0x44e43f
44e43c: vzeroupper 
44e43f: ret 
44e440: endbr64 
44e444: mov rax, rdi
44e447: mov rdx, rsi
44e44a: pxor xmm0, xmm0
44e44e: jmp 0x44e488
44e450: endbr64 
44e454: shl rdx, 2
44e458: movd xmm0, esi
44e45c: mov rax, rdi
44e45f: pshufd xmm0, xmm0, 0
44e464: jmp 0x44e488
44e466: nop word ptr cs:[rax + rax]
44e470: endbr64 
44e474: movd xmm0, esi
44e478: mov rax, rdi
44e47b: punpcklbw xmm0, xmm0
44e47f: punpcklwd xmm0, xmm0
44e483: pshufd xmm0, xmm0, 0
44e488: cmp rdx, 0x10
44e48c: jb 0x44e595
44e492: cmp rdx, 0x20
44e496: ja 0x44e51c
44e49c: movdqu xmmword ptr [rdi + rdx - 0x10], xmm0
44e4a2: movdqu xmmword ptr [rdi], xmm0
44e4a6: ret 
44e4a7: nop word ptr [rax + rax]
44e4b0: endbr64 
44e4b4: cmp rcx, rdx
44e4b7: jb 0x454570
44e4bd: nop dword ptr [rax]
44e4c0: endbr64 
44e4c4: test rdx, rdx
44e4c7: jne 0x44e4cd
44e4c9: mov rax, rdi
44e4cc: ret 
44e4cd: mov rcx, rdx
44e4d0: movzx eax, sil
44e4d4: mov rdx, rdi
44e4d7: rep stosb byte ptr [rdi], al
44e4d9: mov rax, rdx
44e4dc: ret 
44e4dd: nop dword ptr [rax]
44e4e0: endbr64 
44e4e4: movd xmm0, esi
44e4e8: mov rax, rdi
44e4eb: punpcklbw xmm0, xmm0
44e4ef: punpcklwd xmm0, xmm0
44e4f3: pshufd xmm0, xmm0, 0
44e4f8: cmp rdx, 0x10
44e4fc: jb 0x44e595
44e502: cmp rdx, 0x20
44e506: ja 0x44e513
44e508: movdqu xmmword ptr [rdi + rdx - 0x10], xmm0
44e50e: movdqu xmmword ptr [rdi], xmm0
44e512: ret 
44e513: cmp rdx, 0x800
44e51a: ja 0x44e4cd
44e51c: cmp rdx, 0x40
44e520: ja 0x44e538
44e522: movdqu xmmword ptr [rdi], xmm0
44e526: movdqu xmmword ptr [rdi + 0x10], xmm0
44e52b: movdqu xmmword ptr [rdi + rdx - 0x10], xmm0
44e531: movdqu xmmword ptr [rdi + rdx - 0x20], xmm0
44e537: ret 
44e538: lea rcx, [rdi + 0x40]
44e53c: movdqu xmmword ptr [rdi], xmm0
44e540: and rcx, 0xffffffffffffffc0
44e544: movdqu xmmword ptr [rdi + rdx - 0x10], xmm0
44e54a: movdqu xmmword ptr [rdi + 0x10], xmm0
44e54f: movdqu xmmword ptr [rdi + rdx - 0x20], xmm0
44e555: movdqu xmmword ptr [rdi + 0x20], xmm0
44e55a: movdqu xmmword ptr [rdi + rdx - 0x30], xmm0
44e560: movdqu xmmword ptr [rdi + 0x30], xmm0
44e565: movdqu xmmword ptr [rdi + rdx - 0x40], xmm0
44e56b: add rdx, rdi
44e56e: and rdx, 0xffffffffffffffc0
44e572: cmp rcx, rdx
44e575: je 0x44e537
44e577: movdqa xmmword ptr [rcx], xmm0
44e57b: movdqa xmmword ptr [rcx + 0x10], xmm0
44e580: movdqa xmmword ptr [rcx + 0x20], xmm0
44e585: movdqa xmmword ptr [rcx + 0x30], xmm0
44e58a: add rcx, 0x40
44e58e: cmp rdx, rcx
44e591: jne 0x44e577
44e593: repz ret 
44e595: movq rcx, xmm0
44e59a: cmp dl, 8
44e59d: jae 0x44e5ae
44e59f: cmp dl, 4
44e5a2: jae 0x44e5b7
44e5a4: cmp dl, 1
44e5a7: ja 0x44e5be
44e5a9: jb 0x44e5ad
44e5ab: mov byte ptr [rdi], cl
44e5ad: ret 
44e5ae: mov qword ptr [rdi + rdx - 8], rcx
44e5b3: mov qword ptr [rdi], rcx
44e5b6: ret 
44e5b7: mov dword ptr [rdi + rdx - 4], ecx
44e5bb: mov dword ptr [rdi], ecx
44e5bd: ret 
44e5be: mov word ptr [rdi + rdx - 2], cx
44e5c3: mov word ptr [rdi], cx
44e5c6: ret 
44e5c7: nop word ptr [rax + rax]
44e5d0: endbr64 
44e5d4: shl rdx, 2
44e5d8: vmovd xmm0, esi
44e5dc: mov rax, rdi
44e5df: vpbroadcastd ymm0, xmm0
44e5e4: jmp 0x44e600
44e5e6: nop word ptr cs:[rax + rax]
44e5f0: endbr64 
44e5f4: vmovd xmm0, esi
44e5f8: mov rax, rdi
44e5fb: vpbroadcastb ymm0, xmm0
44e600: cmp rdx, 0x20
44e604: jb 0x44e6fe
44e60a: cmp rdx, 0x40
44e60e: ja 0x44e677
44e610: vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0
44e616: vmovdqu ymmword ptr [rdi], ymm0
44e61a: vzeroupper 
44e61d: ret 
44e61e: nop 
44e620: endbr64 
44e624: vzeroupper 
44e627: mov rcx, rdx
44e62a: movzx eax, sil
44e62e: mov rdx, rdi
44e631: rep stosb byte ptr [rdi], al
44e633: mov rax, rdx
44e636: ret 
44e637: nop word ptr [rax + rax]
44e640: endbr64 
44e644: vmovd xmm0, esi
44e648: mov rax, rdi
44e64b: vpbroadcastb ymm0, xmm0
44e650: cmp rdx, 0x20
44e654: jb 0x44e6fe
44e65a: cmp rdx, 0x40
44e65e: ja 0x44e66e
44e660: vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0
44e666: vmovdqu ymmword ptr [rdi], ymm0
44e66a: vzeroupper 
44e66d: ret 
44e66e: cmp rdx, 0x800
44e675: ja 0x44e624
44e677: cmp rdx, 0x80
44e67e: ja 0x44e699
44e680: vmovdqu ymmword ptr [rdi], ymm0
44e684: vmovdqu ymmword ptr [rdi + 0x20], ymm0
44e689: vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0
44e68f: vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0
44e695: vzeroupper 
44e698: ret 
44e699: lea rcx, [rdi + 0x80]
44e6a0: vmovdqu ymmword ptr [rdi], ymm0
44e6a4: and rcx, 0xffffffffffffff80
44e6a8: vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0
44e6ae: vmovdqu ymmword ptr [rdi + 0x20], ymm0
44e6b3: vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0
44e6b9: vmovdqu ymmword ptr [rdi + 0x40], ymm0
44e6be: vmovdqu ymmword ptr [rdi + rdx - 0x60], ymm0
44e6c4: vmovdqu ymmword ptr [rdi + 0x60], ymm0
44e6c9: vmovdqu ymmword ptr [rdi + rdx - 0x80], ymm0
44e6cf: add rdx, rdi
44e6d2: and rdx, 0xffffffffffffff80
44e6d6: cmp rcx, rdx
44e6d9: je 0x44e695
44e6db: vmovdqa ymmword ptr [rcx], ymm0
44e6df: vmovdqa ymmword ptr [rcx + 0x20], ymm0
44e6e4: vmovdqa ymmword ptr [rcx + 0x40], ymm0
44e6e9: vmovdqa ymmword ptr [rcx + 0x60], ymm0
44e6ee: add rcx, 0x80
44e6f5: cmp rdx, rcx
44e6f8: jne 0x44e6db
44e6fa: vzeroupper 
44e6fd: ret 
44e6fe: cmp dl, 0x10
44e701: jae 0x44e71f
44e703: vmovq rcx, xmm0
44e708: cmp dl, 8
44e70b: jae 0x44e72d
44e70d: cmp dl, 4
44e710: jae 0x44e739
44e712: cmp dl, 1
44e715: ja 0x44e743
44e717: jb 0x44e71b
44e719: mov byte ptr [rdi], cl
44e71b: vzeroupper 
44e71e: ret 
44e71f: vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm0
44e725: vmovdqu xmmword ptr [rdi], xmm0
44e729: vzeroupper 
44e72c: ret 
44e72d: mov qword ptr [rdi + rdx - 8], rcx
44e732: mov qword ptr [rdi], rcx
44e735: vzeroupper 
44e738: ret 
44e739: mov dword ptr [rdi + rdx - 4], ecx
44e73d: mov dword ptr [rdi], ecx
44e73f: vzeroupper 
44e742: ret 
44e743: mov word ptr [rdi + rdx - 2], cx
44e748: mov word ptr [rdi], cx
44e74b: vzeroupper 
44e74e: ret 
44e74f: nop 
44e750: endbr64 
44e754: shl rdx, 2
44e758: vmovd xmm0, esi
44e75c: mov rax, rdi
44e75f: vpbroadcastd xmm0, xmm0
44e766: std 
44e767: pop rcx
44e769: shr bl, 0x1a
44e76c: nop dword ptr [rax]
44e770: endbr64 
44e774: vmovd xmm0, esi
44e778: mov rax, rdi
44e77b: vpbroadcastb xmm0, xmm0
44e782: std 
44e783: pop rcx
44e785: ror byte ptr [rax - 0x7d], 0xfa
44e789: jb 0x44e8c1
44e790: cmp rdx, 0x80
44e797: ja 0x44e814
44e79b: dec byte ptr [rax + 0x7f]
44e7a0: jmp qword ptr [rdx - 0xf]
44e7a3: dec byte ptr [rax + 0x7f]
44e7a7: vzeroupper 
44e7aa: ret 
44e7ab: nop dword ptr [rax + rax]
44e7b0: endbr64 
44e7b4: vzeroupper 
44e7b7: mov rcx, rdx
44e7ba: movzx eax, sil
44e7be: mov rdx, rdi
44e7c1: rep stosb byte ptr [rdi], al
44e7c3: mov rax, rdx
44e7c6: ret 
44e7c7: nop word ptr [rax + rax]
44e7d0: endbr64 
44e7d4: vmovd xmm0, esi
44e7d8: mov rax, rdi
44e7db: vpbroadcastb xmm0, xmm0
44e7e2: std 
44e7e3: pop rcx
44e7e5: ror byte ptr [rax - 0x7d], 0xfa
44e7e9: jb 0x44e8c1
44e7f0: cmp rdx, 0x80
44e7f7: ja 0x44e80b
44e7fb: dec byte ptr [rax + 0x7f]
44e800: jmp qword ptr [rdx - 0xf]
44e803: dec byte ptr [rax + 0x7f]
44e807: vzeroupper 
44e80a: ret 
44e80b: cmp rdx, 0x800
44e812: ja 0x44e7b4
44e814: cmp rdx, 0x100
44e81b: ja 0x44e83e
44e81f: dec byte ptr [rax + 0x7f]
44e825: dec byte ptr [rax + 0x7f]
44e828: add dword ptr [r10 - 0xf], r12d
44e82c: dec byte ptr [rax + 0x7f]
44e831: jmp qword ptr [rdx - 0xf]
44e834: dec byte ptr [rax + 0x7f]
44e83a: vzeroupper 
44e83d: ret 
44e83e: lea rcx, [rdi + 0x100]
44e847: dec byte ptr [rax + 0x7f]
44e84b: and rcx, 0xffffffffffffff00
44e854: dec byte ptr [rax + 0x7f]
44e859: jmp qword ptr [rdx - 0xf]
44e85c: dec byte ptr [rax + 0x7f]
44e85f: add dword ptr [r10 - 0xf], r12d
44e863: dec byte ptr [rax + 0x7f]
44e86b: dec byte ptr [rax + 0x7f]
44e86e: add r12b, byte ptr [r10 - 0xf]
44e872: dec byte ptr [rax + 0x7f]
44e877: std 
44e87a: dec byte ptr [rax + 0x7f]
44e87d: add r12d, dword ptr [r10 - 0xf]
44e881: dec byte ptr [rax + 0x7f]
44e886: cld 
44e887: add rdx, rdi
44e88a: and rdx, 0xffffffffffffff00
44e891: cmp rcx, rdx
44e894: je 0x44e83a
44e898: std 
44e899: jg 0x44e89d
44e89e: std 
44e89f: jg 0x44e8e3
44e8a2: add dword ptr [rdx - 0xf], esp
44e8a5: std 
44e8a6: jg 0x44e8ea
44e8a9: add ah, byte ptr [rdx - 0xf]
44e8ac: std 
44e8ad: jg 0x44e8f1
44e8b0: add ecx, dword ptr [rax - 0x7f]
44e8b3: rol dword ptr [rax], 1
44e8b6: add byte ptr [rax], al
44e8b8: cmp rdx, rcx
44e8bb: jne 0x44e896
44e8bd: vzeroupper 
44e8c0: ret 
44e8c1: cmp dl, 0x20
44e8c4: jae 0x44e8e7
44e8c6: cmp dl, 0x10
44e8c9: jae 0x44e8f5
44e8cb: vmovq rcx, xmm0
44e8d0: cmp dl, 8
44e8d3: jae 0x44e903
44e8d5: cmp dl, 4
44e8d8: jae 0x44e90f
44e8da: cmp dl, 1
44e8dd: ja 0x44e919
44e8df: jb 0x44e8e3
44e8e1: mov byte ptr [rdi], cl
44e8e3: vzeroupper 
44e8e6: ret 
44e8e7: vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0
44e8ed: vmovdqu ymmword ptr [rdi], ymm0
44e8f1: vzeroupper 
44e8f4: ret 
44e8f5: vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm0
44e8fb: vmovdqu xmmword ptr [rdi], xmm0
44e8ff: vzeroupper 
44e902: ret 
44e903: mov qword ptr [rdi + rdx - 8], rcx
44e908: mov qword ptr [rdi], rcx
44e90b: vzeroupper 
44e90e: ret 
44e90f: mov dword ptr [rdi + rdx - 4], ecx
44e913: mov dword ptr [rdi], ecx
44e915: vzeroupper 
44e918: ret 
44e919: mov word ptr [rdi + rdx - 2], cx
44e91e: mov word ptr [rdi], cx
44e921: vzeroupper 
44e924: ret 
44e925: nop word ptr cs:[rax + rax]
44e92f: nop 
44e930: push rbx
44e931: mov eax, 0x80000000
44e936: cpuid 
44e938: cmp edi, 0xc4
44e93e: jg 0x44e990
44e940: xor edx, edx
44e942: cmp edi, 0xbe
44e948: setg dl
44e94b: sub edx, 0x7ffffffb
44e951: cmp edx, eax
44e953: ja 0x44e990
44e955: mov eax, edx
44e957: cpuid 
44e959: cmp edi, 0xbb
44e95f: jg 0x44e966
44e961: add edi, 3
44e964: mov ecx, edx
44e966: sub edi, 0xbc
44e96c: cmp edi, 8
44e96f: ja 0x44eae0
44e975: lea rsi, [rip + 0x49be4]
44e97c: movsxd rax, dword ptr [rsi + rdi*4]
44e980: add rax, rsi
44e983: notrack jmp rax
44e986: nop word ptr cs:[rax + rax]
44e990: xor eax, eax
44e992: pop rbx
44e993: ret 
44e994: nop dword ptr [rax]
44e998: mov eax, edx
44e99a: lea rsi, [rip + 0x49be3]
44e9a1: shr eax, 0xc
44e9a4: and eax, 0xf
44e9a7: movsxd rcx, dword ptr [rsi + rax*4]
44e9ab: add rcx, rsi
44e9ae: notrack jmp rcx
44e9b1: nop dword ptr [rax]
44e9b8: movzx eax, dl
44e9bb: and dh, 0xf0
44e9be: mov edx, 0
44e9c3: pop rbx
44e9c4: cmove rax, rdx
44e9c8: ret 
44e9c9: nop dword ptr [rax]
44e9d0: mov eax, ecx
44e9d2: pop rbx
44e9d3: shr eax, 0xe
44e9d6: and eax, 0x3fc00
44e9db: ret 
44e9dc: nop dword ptr [rax]
44e9e0: mov eax, ecx
44e9e2: pop rbx
44e9e3: shr eax, 0x10
44e9e6: movzx edx, al
44e9e9: shl eax, 2
44e9ec: mov ecx, eax
44e9ee: mov eax, edx
44e9f0: and ecx, 0x3fc00
44e9f6: cmp edx, 0xff
44e9fc: cmove rax, rcx
44ea00: ret 
44ea01: nop dword ptr [rax]
44ea08: movzx eax, cl
44ea0b: pop rbx
44ea0c: ret 
44ea0d: nop dword ptr [rax]
44ea10: xor eax, eax
44ea12: test ch, 0xf0
44ea15: je 0x44e992
44ea1b: mov eax, ecx
44ea1d: pop rbx
44ea1e: shr eax, 6
44ea21: and eax, 0x3fffc00
44ea26: ret 
44ea27: nop word ptr [rax + rax]
44ea30: mov eax, ecx
44ea32: lea rsi, [rip + 0x49b8b]
44ea39: shr eax, 0xc
44ea3c: mov edx, eax
44ea3e: and edx, 0xf
44ea41: movsxd rax, dword ptr [rsi + rdx*4]
44ea45: add rax, rsi
44ea48: notrack jmp rax
44ea4b: nop dword ptr [rax + rax]
44ea50: movzx edx, cl
44ea53: mov eax, 0
44ea58: and ch, 0xf0
44ea5b: pop rbx
44ea5c: cmovne rax, rdx
44ea60: ret 
44ea61: nop dword ptr [rax]
44ea68: xor eax, eax
44ea6a: test dh, 0xf0
44ea6d: je 0x44e992
44ea73: lea eax, [rdx + rdx]
44ea76: pop rbx
44ea77: and eax, 0x7ff80000
44ea7c: ret 
44ea7d: nop dword ptr [rax]
44ea80: mov rax, rdx
44ea83: pop rbx
44ea84: ret 
44ea85: mov eax, 0x60
44ea8a: pop rbx
44ea8b: ret 
44ea8c: mov eax, 0x40
44ea91: pop rbx
44ea92: ret 
44ea93: mov eax, 0x30
44ea98: pop rbx
44ea99: ret 
44ea9a: mov eax, 0x20
44ea9f: pop rbx
44eaa0: ret 
44eaa1: mov eax, 0x10
44eaa6: pop rbx
44eaa7: ret 
44eaa8: mov eax, 8
44eaad: pop rbx
44eaae: ret 
44eaaf: mov eax, 0x80
44eab4: pop rbx
44eab5: ret 
44eab6: lea eax, [rdx + rdx]
44eab9: movzx ecx, dl
44eabc: xor edx, edx
44eabe: pop rbx
44eabf: and eax, 0x7ff80000
44eac4: div ecx
44eac6: mov eax, eax
44eac8: ret 
44eac9: mov edx, ecx
44eacb: movzx ecx, cl
44eace: pop rbx
44eacf: shr edx, 6
44ead2: mov eax, edx
44ead4: xor edx, edx
44ead6: and eax, 0x3fffc00
44eadb: div ecx
44eadd: mov eax, eax
44eadf: ret 
44eae0: lea rcx, [rip + 0x49dd9]
44eae7: mov edx, 0x1b1
44eaec: lea rsi, [rip + 0x49a2c]
44eaf3: lea rdi, [rip + 0x49a40]
44eafa: call 0x4032a0
44eaff: nop 
44eb00: test esi, esi
44eb02: js 0x44ec2b
44eb08: push r13
44eb0a: mov r13, r9
44eb0d: push r12
44eb0f: push rbp
44eb10: push rbx
44eb11: mov rbx, rdx
44eb14: lea edx, [rdi - 0xb9]
44eb1a: movsxd rax, edx
44eb1d: sar edx, 0x1f
44eb20: imul rax, rax, 0x55555556
44eb27: sub rsp, 8
44eb2b: shr rax, 0x20
44eb2f: sub eax, edx
44eb31: lea r9d, [rax + rax*2]
44eb35: test esi, esi
44eb37: je 0x44ebfd
44eb3d: mov r12, r8
44eb40: mov rbp, rcx
44eb43: lea r8, [rip + 0x49b56]
44eb4a: jmp 0x44eb67
44eb4c: nop dword ptr [rax]
44eb50: mov byte ptr [rbp], 1
44eb54: cmp r9d, 9
44eb58: je 0x44ebfd
44eb5e: shr esi, 8
44eb61: je 0x44ebfd
44eb67: movzx eax, sil
44eb6b: cmp sil, 0x40
44eb6f: je 0x44eb50
44eb71: cmp eax, 0xff
44eb76: je 0x44ec2e
44eb7c: cmp eax, 0x49
44eb7f: jne 0x44eba6
44eb81: cmp r9d, 9
44eb85: jne 0x44eba6
44eb87: cmp dword ptr [r12], 0xf
44eb8c: jne 0x44ec20
44eb92: cmp dword ptr [r13], 6
44eb97: jne 0x44ec20
44eb9d: sub edi, 3
44eba0: mov r9d, 6
44eba6: mov ecx, esi
44eba8: mov edx, 0x44
44ebad: xor r10d, r10d
44ebb0: lea rax, [r10 + rdx]
44ebb4: shr rax, 1
44ebb7: lea r11, [r8 + rax*8]
44ebbb: cmp cl, byte ptr [r11]
44ebbe: je 0x44ebda
44ebc0: jae 0x44ec10
44ebc2: cmp rax, r10
44ebc5: jbe 0x44eb5e
44ebc7: mov rdx, rax
44ebca: lea rax, [r10 + rdx]
44ebce: shr rax, 1
44ebd1: lea r11, [r8 + rax*8]
44ebd5: cmp cl, byte ptr [r11]
44ebd8: jne 0x44ebc0
44ebda: movzx edx, byte ptr [r11 + 3]
44ebdf: cmp edx, r9d
44ebe2: je 0x44ecd1
44ebe8: cmp dl, 6
44ebeb: jne 0x44eb5e
44ebf1: shr esi, 8
44ebf4: mov byte ptr [rbx], 1
44ebf7: jne 0x44eb67
44ebfd: xor eax, eax
44ebff: add rsp, 8
44ec03: pop rbx
44ec04: pop rbp
44ec05: pop r12
44ec07: pop r13
44ec09: ret 
44ec0a: nop word ptr [rax + rax]
44ec10: lea r10, [rax + 1]
44ec14: cmp r10, rdx
44ec17: jb 0x44ebb0
44ec19: jmp 0x44eb5e
44ec1e: nop 
44ec20: mov r9d, 9
44ec26: jmp 0x44eba6
44ec2b: xor eax, eax
44ec2d: ret 
44ec2e: mov eax, 4
44ec33: xor ecx, ecx
44ec35: cpuid 
44ec37: mov edx, eax
44ec39: and edx, 0x1f
44ec3c: je 0x44ebfd
44ec3e: xor esi, esi
44ec40: cmp r9d, 3
44ec44: je 0x44edf8
44ec4a: test r9d, r9d
44ec4d: je 0x44edb0
44ec53: mov r10d, 4
44ec59: jmp 0x44ec76
44ec5b: nop dword ptr [rax + rax]
44ec60: test r8b, r8b
44ec63: je 0x44ec88
44ec65: add esi, 1
44ec68: mov eax, r10d
44ec6b: mov ecx, esi
44ec6d: cpuid 
44ec6f: mov edx, eax
44ec71: and edx, 0x1f
44ec74: je 0x44ebfd
44ec76: shr eax, 5
44ec79: and eax, 7
44ec7c: cmp eax, 1
44ec7f: sete r8b
44ec83: cmp edx, 1
44ec86: je 0x44ec60
44ec88: cmp edx, 2
44ec8b: jne 0x44ec92
44ec8d: test r8b, r8b
44ec90: jne 0x44ec65
44ec92: cmp eax, 2
44ec95: jne 0x44ed39
44ec9b: cmp r9d, 6
44ec9f: jne 0x44ed39
44eca5: lea eax, [rdi - 0xb9]
44ecab: sub eax, r9d
44ecae: je 0x44ecfe
44ecb0: cmp eax, 1
44ecb3: je 0x44ed60
44ecb9: cmp eax, 2
44ecbc: jne 0x44ed8c
44ecc2: and ebx, 0xfff
44ecc8: lea rax, [rbx + 1]
44eccc: jmp 0x44ebff
44ecd1: lea eax, [rdi - 0xb9]
44ecd7: sub eax, r9d
44ecda: je 0x44ed30
44ecdc: cmp eax, 1
44ecdf: je 0x44ecf4
44ece1: cmp eax, 2
44ece4: jne 0x44ed6d
44ecea: movzx eax, byte ptr [r11 + 2]
44ecef: jmp 0x44ebff
44ecf4: movzx eax, byte ptr [r11 + 1]
44ecf9: jmp 0x44ebff
44ecfe: mov eax, ebx
44ed00: mov edx, ebx
44ed02: shr ebx, 0xc
44ed05: shr eax, 0x16
44ed08: and edx, 0xfff
44ed0e: add edx, 1
44ed11: add eax, 1
44ed14: imul eax, edx
44ed17: lea edx, [rcx + 1]
44ed1a: imul eax, edx
44ed1d: mov edx, ebx
44ed1f: and edx, 0x3ff
44ed25: add edx, 1
44ed28: imul eax, edx
44ed2b: jmp 0x44ebff
44ed30: mov eax, dword ptr [r11 + 4]
44ed34: jmp 0x44ebff
44ed39: cmp eax, 3
44ed3c: jne 0x44ed48
44ed3e: cmp r9d, 9
44ed42: je 0x44eca5
44ed48: cmp eax, 4
44ed4b: jne 0x44ec65
44ed51: cmp r9d, 0xc
44ed55: je 0x44eca5
44ed5b: jmp 0x44ec65
44ed60: mov eax, ebx
44ed62: shr eax, 0x16
44ed65: add eax, 1
44ed68: jmp 0x44ebff
44ed6d: lea rcx, [rip + 0x49b5c]
44ed74: mov edx, 0xf0
44ed79: lea rsi, [rip + 0x4979f]
44ed80: lea rdi, [rip + 0x497c5]
44ed87: call 0x4032a0
44ed8c: lea rcx, [rip + 0x49b3d]
44ed93: mov edx, 0xc0
44ed98: lea rsi, [rip + 0x49780]
44ed9f: lea rdi, [rip + 0x497a6]
44eda6: call 0x4032a0
44edab: nop dword ptr [rax + rax]
44edb0: mov r8d, 4
44edb6: jmp 0x44edd1
44edb8: test al, al
44edba: je 0x44ede2
44edbc: add esi, 1
44edbf: mov eax, r8d
44edc2: mov ecx, esi
44edc4: cpuid 
44edc6: mov edx, eax
44edc8: and edx, 0x1f
44edcb: je 0x44ebfd
44edd1: shr eax, 5
44edd4: and eax, 7
44edd7: cmp eax, 1
44edda: sete al
44eddd: cmp edx, 1
44ede0: je 0x44edb8
44ede2: cmp edx, 2
44ede5: jne 0x44edbc
44ede7: test al, al
44ede9: jne 0x44eca5
44edef: jmp 0x44edbc
44edf1: nop dword ptr [rax]
44edf8: mov r8d, 4
44edfe: shr eax, 5
44ee01: and eax, 7
44ee04: cmp eax, 1
44ee07: jne 0x44ee12
44ee09: cmp edx, 1
44ee0c: je 0x44eca5
44ee12: add esi, 1
44ee15: mov eax, r8d
44ee18: mov ecx, esi
44ee1a: cpuid 
44ee1c: mov edx, eax
44ee1e: and edx, 0x1f
44ee21: jne 0x44edfe
44ee23: jmp 0x44ebfd
44ee28: nop dword ptr [rax + rax]
44ee30: push r15
44ee32: push r14
44ee34: push r13
44ee36: push r12
44ee38: push rbp
44ee39: push rbx
44ee3a: sub rsp, 0x28
44ee3e: mov rax, qword ptr fs:[0x28]
44ee47: mov qword ptr [rsp + 0x18], rax
44ee4c: xor eax, eax
44ee4e: cmp dword ptr [rip + 0x73f37], 1
44ee55: jbe 0x44ef7a
44ee5b: mov byte ptr [rsp + 0x16], 0
44ee60: mov ebp, edi
44ee62: mov r14d, 1
44ee68: lea r13, [rsp + 0x16]
44ee6d: mov byte ptr [rsp + 0x17], 0
44ee72: lea r12, [rsp + 0x17]
44ee77: mov dword ptr [rsp + 0xc], 1
44ee7f: jmp 0x44ee8b
44ee81: nop dword ptr [rax]
44ee88: mov r14d, edx
44ee8b: mov eax, 2
44ee90: cpuid 
44ee92: mov dword ptr [rsp + 8], edx
44ee96: mov r15d, ecx
44ee99: mov esi, eax
44ee9b: cmp r14d, 1
44ee9f: jne 0x44eeab
44eea1: movzx eax, al
44eea4: xor sil, sil
44eea7: mov dword ptr [rsp + 0xc], eax
44eeab: lea r9, [rip + 0x73ee2]
44eeb2: mov rcx, r13
44eeb5: mov rdx, r12
44eeb8: mov edi, ebp
44eeba: lea r8, [r9 - 4]
44eebe: call 0x44eb00
44eec3: test rax, rax
44eec6: jne 0x44ef50
44eecc: lea r9, [rip + 0x73ec1]
44eed3: mov rcx, r13
44eed6: mov rdx, r12
44eed9: mov esi, ebx
44eedb: lea r8, [r9 - 4]
44eedf: mov edi, ebp
44eee1: call 0x44eb00
44eee6: test rax, rax
44eee9: jne 0x44ef50
44eeeb: lea r9, [rip + 0x73ea2]
44eef2: mov rcx, r13
44eef5: mov rdx, r12
44eef8: mov esi, r15d
44eefb: lea r8, [r9 - 4]
44eeff: mov edi, ebp
44ef01: call 0x44eb00
44ef06: test rax, rax
44ef09: jne 0x44ef50
44ef0b: lea r9, [rip + 0x73e82]
44ef12: mov esi, dword ptr [rsp + 8]
44ef16: mov rcx, r13
44ef19: mov edi, ebp
44ef1b: lea r8, [r9 - 4]
44ef1f: mov rdx, r12
44ef22: call 0x44eb00
44ef27: test rax, rax
44ef2a: jne 0x44ef50
44ef2c: lea edx, [r14 + 1]
44ef30: cmp dword ptr [rsp + 0xc], r14d
44ef35: ja 0x44ee88
44ef3b: sub ebp, 0xbf
44ef41: cmp ebp, 5
44ef44: jbe 0x44ef70
44ef46: nop word ptr cs:[rax + rax]
44ef50: mov rbx, qword ptr [rsp + 0x18]
44ef55: xor rbx, qword ptr fs:[0x28]
44ef5e: jne 0x44ef83
44ef60: add rsp, 0x28
44ef64: pop rbx
44ef65: pop rbp
44ef66: pop r12
44ef68: pop r13
44ef6a: pop r14
44ef6c: pop r15
44ef6e: ret 
44ef6f: nop 
44ef70: movzx eax, byte ptr [rsp + 0x16]
44ef75: neg rax
44ef78: jmp 0x44ef50
44ef7a: mov rax, 0xffffffffffffffff
44ef81: jmp 0x44ef50
44ef83: call 0x4547a0
44ef88: nop dword ptr [rax + rax]
44ef90: endbr64 
44ef94: mov eax, dword ptr [rip + 0x73dee]
44ef9a: cmp eax, 1
44ef9d: je 0x44efb0
44ef9f: cmp eax, 2
44efa2: je 0x44efb8
44efa4: xor eax, eax
44efa6: ret 
44efa7: nop word ptr [rax + rax]
44efb0: jmp 0x44ee30
44efb5: nop dword ptr [rax]
44efb8: jmp 0x44e930
44efbd: nop dword ptr [rax]
44efc0: endbr64 
44efc4: cmp rdi, rsi
44efc7: je 0x44f000
44efc9: mov rcx, qword ptr [rdx + 0x70]
44efcd: xor edx, edx
44efcf: jmp 0x44efe1
44efd1: nop dword ptr [rax]
44efd8: add rdx, 1
44efdc: test r9b, r9b
44efdf: je 0x44f002
44efe1: movzx eax, byte ptr [rdi + rdx]
44efe5: movzx r8d, byte ptr [rsi + rdx]
44efea: mov r9, rax
44efed: mov eax, dword ptr [rcx + rax*4]
44eff0: sub eax, dword ptr [rcx + r8*4]
44eff4: je 0x44efd8
44eff6: ret 
44eff7: nop word ptr [rax + rax]
44f000: xor eax, eax
44f002: ret 
44f003: nop word ptr cs:[rax + rax]
44f00d: nop dword ptr [rax]
44f010: endbr64 
44f014: shl rdx, 2
44f018: jmp 0x401150
44f01d: nop dword ptr [rax]
44f020: endbr64 
44f024: push r12
44f026: push rbp
44f027: mov rbp, rdi
44f02a: push rbx
44f02b: sub rsp, 0x70
44f02f: mov dword ptr [rsp + 0xc], esi
44f033: mov rax, qword ptr fs:[0x28]
44f03c: mov qword ptr [rsp + 0x68], rax
44f041: xor eax, eax
44f043: test rdx, rdx
44f046: lea rax, [rip + 0x73c73]
44f04d: mov qword ptr [rsp + 0x30], 1
44f056: cmove rdx, rax
44f05a: mov dword ptr [rsp + 0x38], 1
44f062: mov qword ptr [rsp + 0x40], rdx
44f067: test rdi, rdi
44f06a: je 0x44f1a0
44f070: mov rax, 0xffffffffffffffa0
44f077: mov qword ptr [rsp + 0x20], rbp
44f07c: mov rax, qword ptr fs:[rax]
44f080: mov rbx, qword ptr [rax]
44f083: mov eax, dword ptr [rbx + 0xa8]
44f089: mov r12, qword ptr [rbx + 0x28]
44f08d: add rax, rbp
44f090: mov qword ptr [rsp + 0x28], rax
44f095: test r12, r12
44f098: je 0x44f1b8
44f09e: mov rax, qword ptr [r12 + 0x10]
44f0a3: cmp qword ptr [rax], 0
44f0a7: mov rbx, qword ptr [rax + 0x28]
44f0ab: je 0x44f0ba
44f0ad: ror rbx, 0x11
44f0b1: xor rbx, qword ptr fs:[0x30]
44f0ba: mov r8d, dword ptr [rsp + 0xc]
44f0bf: test r8d, r8d
44f0c2: jne 0x44f120
44f0c4: mov rdi, rbx
44f0c7: call 0x456100
44f0cc: lea rsi, [rsp + 0x20]
44f0d1: xor r8d, r8d
44f0d4: xor ecx, ecx
44f0d6: mov rdi, qword ptr [r12 + 0x10]
44f0db: push 1
44f0dd: xor edx, edx
44f0df: push 1
44f0e1: lea r9, [rsp + 0x20]
44f0e6: call rbx
44f0e8: pop rsi
44f0e9: pop rdi
44f0ea: test eax, 0xfffffffb
44f0ef: je 0x44f188
44f0f5: lea edx, [rax - 5]
44f0f8: cmp edx, 2
44f0fb: ja 0x44f1e5
44f101: cmp eax, 5
44f104: je 0x44f161
44f106: mov rax, 0xffffffffffffffc0
44f10d: mov dword ptr fs:[rax], 0x54
44f114: mov rax, 0xffffffffffffffff
44f11b: jmp 0x44f169
44f11d: nop dword ptr [rax]
44f120: lea rax, [rsp + 0xc]
44f125: mov rdi, rbx
44f128: mov qword ptr [rsp + 0x18], rax
44f12d: call 0x456100
44f132: mov rax, qword ptr [rsp + 0x18]
44f137: lea rdx, [rsp + 0x18]
44f13c: xor r8d, r8d
44f13f: lea rsi, [rsp + 0x20]
44f144: mov rdi, qword ptr [r12 + 0x10]
44f149: push 1
44f14b: push 0
44f14d: lea rcx, [rax + 4]
44f151: lea r9, [rsp + 0x20]
44f156: call rbx
44f158: pop rdx
44f159: pop rcx
44f15a: test eax, 0xfffffffb
44f15f: jne 0x44f0f5
44f161: mov rax, qword ptr [rsp + 0x20]
44f166: sub rax, rbp
44f169: mov rcx, qword ptr [rsp + 0x68]
44f16e: xor rcx, qword ptr fs:[0x28]
44f177: jne 0x44f1e0
44f179: add rsp, 0x70
44f17d: pop rbx
44f17e: pop rbp
44f17f: pop r12
44f181: ret 
44f182: nop word ptr [rax + rax]
44f188: mov rax, qword ptr [rsp + 0x20]
44f18d: lea rdx, [rax + 1]
44f191: mov qword ptr [rsp + 0x20], rdx
44f196: mov byte ptr [rax], 0
44f199: jmp 0x44f161
44f19b: nop dword ptr [rax + rax]
44f1a0: mov dword ptr [rsp + 0xc], 0
44f1a8: lea rbp, [rsp + 0x50]
44f1ad: jmp 0x44f070
44f1b2: nop word ptr [rax + rax]
44f1b8: lea rax, [rip + 0x6e701]
44f1bf: lea r12, [rip + 0x6e65a]
44f1c6: cmp rbx, rax
44f1c9: je 0x44f09e
44f1cf: mov rdi, rbx
44f1d2: call 0x44f660
44f1d7: mov r12, qword ptr [rbx + 0x28]
44f1db: jmp 0x44f09e
44f1e0: call 0x4547a0
44f1e5: lea rcx, [rip + 0x497a4]
44f1ec: mov edx, 0x62
44f1f1: lea rsi, [rip + 0x496e9]
44f1f8: lea rdi, [rip + 0x496f1]
44f1ff: call 0x4032a0
44f204: nop word ptr cs:[rax + rax]
44f20e: nop 
44f210: endbr64 
44f214: lea rax, [rip + 0x73aad]
44f21b: test rcx, rcx
44f21e: cmove rcx, rax
44f222: mov rax, 0xffffffffffffffb0
44f229: mov r8, qword ptr fs:[rax]
44f22d: jmp 0x44fca0
44f232: nop word ptr cs:[rax + rax]
44f23c: nop dword ptr [rax]
44f240: endbr64 
44f244: push r15
44f246: push r14
44f248: mov r14, rdx
44f24b: push r13
44f24d: mov r13, rsi
44f250: push r12
44f252: push rbp
44f253: mov rbp, rdi
44f256: push rbx
44f257: sub rsp, 0x178
44f25e: mov rax, qword ptr fs:[0x28]
44f267: mov qword ptr [rsp + 0x168], rax
44f26f: xor eax, eax
44f271: lea rax, [rip + 0x73a58]
44f278: test rcx, rcx
44f27b: mov qword ptr [rsp + 0x40], 1
44f284: cmove rcx, rax
44f288: mov rax, 0xffffffffffffffa0
44f28f: mov dword ptr [rsp + 0x48], 1
44f297: mov qword ptr [rsp + 0x50], rcx
44f29c: mov rax, qword ptr fs:[rax]
44f2a0: mov rbx, qword ptr [rax]
44f2a3: mov rax, qword ptr [rbx + 0x28]
44f2a7: test rax, rax
44f2aa: je 0x44f4b0
44f2b0: mov r12, qword ptr [rax + 0x10]
44f2b4: cmp qword ptr [r12], 0
44f2b9: mov rbx, qword ptr [r12 + 0x28]
44f2be: je 0x44f2cd
44f2c0: ror rbx, 0x11
44f2c4: xor rbx, qword ptr fs:[0x30]
44f2cd: mov rdx, qword ptr [r13]
44f2d1: test rbp, rbp
44f2d4: je 0x44f3f0
44f2da: mov rsi, r14
44f2dd: mov rdi, rdx
44f2e0: mov qword ptr [rsp], rdx
44f2e4: add r14, rbp
44f2e7: call 0x401120
44f2ec: mov rdx, qword ptr [rsp]
44f2f0: mov rdi, rbx
44f2f3: mov qword ptr [rsp + 0x38], r14
44f2f8: mov qword ptr [rsp + 0x30], rbp
44f2fd: lea r15, [rdx + rax*4 + 4]
44f302: call 0x456100
44f307: lea rsi, [rsp + 0x30]
44f30c: push 1
44f30e: mov rcx, r15
44f311: push 0
44f313: mov rdx, r13
44f316: xor r8d, r8d
44f319: mov rdi, r12
44f31c: lea r9, [rsp + 0x30]
44f321: call rbx
44f323: mov rdx, qword ptr [rsp + 0x40]
44f328: pop rcx
44f329: pop rsi
44f32a: mov r14, rdx
44f32d: sub r14, rbp
44f330: test eax, 0xfffffffb
44f335: je 0x44f3a0
44f337: lea edx, [rax - 4]
44f33a: test eax, eax
44f33c: je 0x44f371
44f33e: cmp edx, 3
44f341: jbe 0x44f368
44f343: lea rcx, [rip + 0x496be]
44f34a: mov edx, 0x83
44f34f: lea rsi, [rip + 0x49644]
44f356: lea rdi, [rip + 0x49593]
44f35d: call 0x4032a0
44f362: nop word ptr [rax + rax]
44f368: test eax, eax
44f36a: je 0x44f371
44f36c: cmp edx, 1
44f36f: ja 0x44f3d0
44f371: mov rax, qword ptr [rsp + 0x168]
44f379: xor rax, qword ptr fs:[0x28]
44f382: jne 0x44f4d8
44f388: add rsp, 0x178
44f38f: mov rax, r14
44f392: pop rbx
44f393: pop rbp
44f394: pop r12
44f396: pop r13
44f398: pop r14
44f39a: pop r15
44f39c: ret 
44f39d: nop dword ptr [rax]
44f3a0: cmp byte ptr [rdx - 1], 0
44f3a4: jne 0x44f337
44f3a6: cmp rdx, rbp
44f3a9: je 0x44f4fc
44f3af: mov rdx, qword ptr [rsp + 0x50]
44f3b4: mov edx, dword ptr [rdx]
44f3b6: test edx, edx
44f3b8: jne 0x44f4dd
44f3be: mov qword ptr [r13], 0
44f3c6: jmp 0x44f4a0
44f3cb: nop dword ptr [rax + rax]
44f3d0: mov rax, 0xffffffffffffffc0
44f3d7: mov r14, 0xffffffffffffffff
44f3de: mov dword ptr fs:[rax], 0x54
44f3e5: jmp 0x44f371
44f3e7: nop word ptr [rax + rax]
44f3f0: mov rdi, rdx
44f3f3: mov qword ptr [rsp], rdx
44f3f7: xor r14d, r14d
44f3fa: lea rbp, [rsp + 0x60]
44f3ff: call 0x401070
44f404: mov rdx, qword ptr [rsp]
44f408: lea r13, [rsp + 0x18]
44f40d: lea r15, [rdx + rax*4 + 4]
44f412: mov rax, qword ptr [rsp + 0x50]
44f417: mov qword ptr [rsp + 0x18], rdx
44f41c: mov rax, qword ptr [rax]
44f41f: mov qword ptr [rsp + 0x28], rax
44f424: lea rax, [rsp + 0x28]
44f429: mov qword ptr [rsp + 0x50], rax
44f42e: lea rax, [rsp + 0x160]
44f436: mov qword ptr [rsp + 0x38], rax
44f43b: lea rax, [rsp + 0x20]
44f440: mov qword ptr [rsp], rax
44f444: lea rax, [rsp + 0x30]
44f449: mov qword ptr [rsp + 8], rax
44f44e: nop 
44f450: mov rdi, rbx
44f453: mov qword ptr [rsp + 0x30], rbp
44f458: call 0x456100
44f45d: push 1
44f45f: xor r8d, r8d
44f462: mov rcx, r15
44f465: push 0
44f467: mov rdx, r13
44f46a: mov r9, qword ptr [rsp + 0x10]
44f46f: mov rdi, r12
44f472: mov rsi, qword ptr [rsp + 0x18]
44f477: call rbx
44f479: mov rdx, qword ptr [rsp + 0x40]
44f47e: pop rdi
44f47f: pop r8
44f481: mov rcx, rdx
44f484: sub rcx, rbp
44f487: add r14, rcx
44f48a: cmp eax, 5
44f48d: je 0x44f450
44f48f: test eax, 0xfffffffb
44f494: jne 0x44f337
44f49a: cmp byte ptr [rdx - 1], 0
44f49e: jne 0x44f51b
44f4a0: sub r14, 1
44f4a4: jmp 0x44f337
44f4a9: nop dword ptr [rax]
44f4b0: lea rdx, [rip + 0x6e409]
44f4b7: lea rax, [rip + 0x6e362]
44f4be: cmp rbx, rdx
44f4c1: je 0x44f2b0
44f4c7: mov rdi, rbx
44f4ca: call 0x44f660
44f4cf: mov rax, qword ptr [rbx + 0x28]
44f4d3: jmp 0x44f2b0
44f4d8: call 0x4547a0
44f4dd: lea rcx, [rip + 0x49524]
44f4e4: mov edx, 0x7b
44f4e9: lea rsi, [rip + 0x494aa]
44f4f0: lea rdi, [rip + 0x494c9]
44f4f7: call 0x4032a0
44f4fc: lea rcx, [rip + 0x49505]
44f503: mov edx, 0x7a
44f508: lea rsi, [rip + 0x4948b]
44f50f: lea rdi, [rip + 0x494ca]
44f516: call 0x4032a0
44f51b: lea rcx, [rip + 0x494e6]
44f522: mov edx, 0x5e
44f527: lea rsi, [rip + 0x4946c]
44f52e: lea rdi, [rip + 0x49471]
44f535: call 0x4032a0
44f53a: nop word ptr [rax + rax]
44f540: endbr64 
44f544: movabs rdx, 0x90000000002
44f54e: and rdx, qword ptr [rip + 0x7382b]
44f555: movabs rcx, 0x10000000002
44f55f: lea rax, [rip + 0xd0a]
44f566: cmp rdx, rcx
44f569: je 0x44f584
44f56b: test byte ptr [rip + 0x737b8], 8
44f572: lea rax, [rip + 0xcb7]
44f579: lea rdx, [rip + 0xa90]
44f580: cmovne rax, rdx
44f584: ret 
44f585: nop word ptr cs:[rax + rax]
44f58f: nop 
44f590: endbr64 
44f594: push rbp
44f595: mov rbp, qword ptr [rdi + 0x28]
44f599: test rbp, rbp
44f59c: je 0x44f5d8
44f59e: mov qword ptr [rdi + 0x28], 0
44f5a6: mov rsi, qword ptr [rbp + 0x18]
44f5aa: mov qword ptr [rdi + 0x20], 0
44f5b2: mov rdi, qword ptr [rbp + 0x10]
44f5b6: call 0x458830
44f5bb: mov rdi, qword ptr [rbp]
44f5bf: mov rsi, qword ptr [rbp + 8]
44f5c3: call 0x458830
44f5c8: mov rdi, rbp
44f5cb: pop rbp
44f5cc: jmp 0x426a00
44f5d1: nop dword ptr [rax]
44f5d8: pop rbp
44f5d9: ret 
44f5da: nop word ptr [rax + rax]
44f5e0: endbr64 
44f5e4: push rbx
44f5e5: xor r8d, r8d
44f5e8: mov rbx, rdx
44f5eb: sub rsp, 0x20
44f5ef: mov rax, qword ptr fs:[0x28]
44f5f8: mov qword ptr [rsp + 0x18], rax
44f5fd: xor eax, eax
44f5ff: lea rcx, [rsp + 8]
44f604: lea rdx, [rsp + 0x10]
44f609: call 0x458520
44f60e: test eax, eax
44f610: jne 0x44f650
44f612: mov rsi, qword ptr [rsp + 8]
44f617: mov rax, qword ptr [rsp + 0x10]
44f61c: cmp rsi, 1
44f620: ja 0x44f640
44f622: mov qword ptr [rbx], rsi
44f625: mov rbx, qword ptr [rsp + 0x18]
44f62a: xor rbx, qword ptr fs:[0x28]
44f633: jne 0x44f654
44f635: add rsp, 0x20
44f639: pop rbx
44f63a: ret 
44f63b: nop dword ptr [rax + rax]
44f640: mov rdi, rax
44f643: call 0x458830
44f648: xor eax, eax
44f64a: jmp 0x44f625
44f64c: nop dword ptr [rax]
44f650: xor eax, eax
44f652: jmp 0x44f625
44f654: call 0x4547a0
44f659: nop dword ptr [rax]
44f660: endbr64 
44f664: push rbp
44f665: mov rbp, rsp
44f668: push r15
44f66a: push r14
44f66c: push r13
44f66e: push r12
44f670: push rbx
44f671: mov rbx, rdi
44f674: sub rsp, 0x28
44f678: mov rax, qword ptr fs:[0x28]
44f681: mov qword ptr [rbp - 0x38], rax
44f685: xor eax, eax
44f687: cmp qword ptr [rip + 0x708a1], 0
44f68f: je 0x44f69d
44f691: lea rdi, [rip + 0x73768]
44f698: call 0
44f69d: cmp qword ptr [rbx + 0x28], 0
44f6a2: jne 0x44f856
44f6a8: mov esi, 0x20
44f6ad: mov edi, 1
44f6b2: call 0x427d10
44f6b7: mov r12, rax
44f6ba: test rax, rax
44f6bd: je 0x44f8ad
44f6c3: cmp dword ptr [rbx + 0x34], 1
44f6c7: mov eax, dword ptr [rbx + 0x34]
44f6ca: lea r9, [rip + 0x4b153]
44f6d1: sbb rdx, rdx
44f6d4: mov rsi, qword ptr [rbx + 0xb0]
44f6db: and rdx, 0xfffffffffffffff8
44f6df: add rdx, 0xb
44f6e3: cmp dword ptr [rbx + 0x34], 1
44f6e7: sbb r8, r8
44f6ea: not r8
44f6ed: and r8d, 8
44f6f1: test eax, eax
44f6f3: lea rax, [rip + 0x5c31b]
44f6fa: cmove r9, rax
44f6fe: movsx rax, byte ptr [rsi]
44f702: test al, al
44f704: je 0x44f960
44f70a: mov rdx, rsi
44f70d: mov ecx, eax
44f70f: xor edi, edi
44f711: nop dword ptr [rax]
44f718: add rdx, 1
44f71c: cmp cl, 0x2f
44f71f: sete cl
44f722: movzx ecx, cl
44f725: add rdi, rcx
44f728: movzx ecx, byte ptr [rdx]
44f72b: test cl, cl
44f72d: jne 0x44f718
44f72f: sub rdx, rsi
44f732: mov r11, rsp
44f735: lea rdx, [r8 + rdx + 0x1a]
44f73a: mov rcx, rdx
44f73d: and rdx, 0xfffffffffffff000
44f744: sub r11, rdx
44f747: and rcx, 0xfffffffffffffff0
44f74b: mov rdx, r11
44f74e: cmp rsp, rdx
44f751: je 0x44f768
44f753: sub rsp, 0x1000
44f75a: or qword ptr [rsp + 0xff8], 0
44f763: cmp rsp, rdx
44f766: jne 0x44f753
44f768: and ecx, 0xfff
44f76e: sub rsp, rcx
44f771: test rcx, rcx
44f774: jne 0x44f900
44f77a: lea r13, [rsp + 0xf]
44f77f: mov rcx, qword ptr [rip + 0x706b2]
44f786: and r13, 0xfffffffffffffff0
44f78a: mov rdx, r13
44f78d: nop dword ptr [rax]
44f790: mov eax, dword ptr [rcx + rax*4]
44f793: mov r10, rdx
44f796: add rsi, 1
44f79a: add rdx, 1
44f79e: mov byte ptr [rdx - 1], al
44f7a1: movsx rax, byte ptr [rsi]
44f7a5: test al, al
44f7a7: jne 0x44f790
44f7a9: cmp rdi, 1
44f7ad: jbe 0x44f8c0
44f7b3: mov byte ptr [rdx], 0
44f7b6: lea r15, [rbp - 0x48]
44f7ba: lea r14, [rbp - 0x40]
44f7be: xor r8d, r8d
44f7c1: mov rcx, r15
44f7c4: mov rdx, r14
44f7c7: lea rdi, [rip + 0x4a51e]
44f7ce: mov rsi, r13
44f7d1: call 0x458520
44f7d6: test eax, eax
44f7d8: jne 0x44f895
44f7de: mov rsi, qword ptr [rbp - 0x48]
44f7e2: mov rdi, qword ptr [rbp - 0x40]
44f7e6: cmp rsi, 1
44f7ea: ja 0x44f890
44f7f0: mov qword ptr [r12 + 8], rsi
44f7f5: mov qword ptr [r12], rdi
44f7f9: test rdi, rdi
44f7fc: je 0x44f89d
44f802: xor r8d, r8d
44f805: mov rcx, r15
44f808: mov rdx, r14
44f80b: mov rdi, r13
44f80e: lea rsi, [rip + 0x4a4d7]
44f815: call 0x458520
44f81a: test eax, eax
44f81c: jne 0x44f8dd
44f822: mov rsi, qword ptr [rbp - 0x48]
44f826: mov rdi, qword ptr [rbp - 0x40]
44f82a: cmp rsi, 1
44f82e: ja 0x44f8d8
44f834: mov qword ptr [r12 + 0x18], rsi
44f839: mov qword ptr [r12 + 0x10], rdi
44f83e: test rdi, rdi
44f841: je 0x44f8e6
44f847: lea rax, [rip - 0x2be]
44f84e: mov qword ptr [rbx + 0x28], r12
44f852: mov qword ptr [rbx + 0x20], rax
44f856: cmp qword ptr [rip + 0x70702], 0
44f85e: je 0x44f86c
44f860: lea rdi, [rip + 0x73599]
44f867: call 0
44f86c: mov rax, qword ptr [rbp - 0x38]
44f870: xor rax, qword ptr fs:[0x28]
44f879: jne 0x44fa2d
44f87f: lea rsp, [rbp - 0x28]
44f883: pop rbx
44f884: pop r12
44f886: pop r13
44f888: pop r14
44f88a: pop r15
44f88c: pop rbp
44f88d: ret 
44f88e: nop 
44f890: call 0x458830
44f895: mov qword ptr [r12], 0
44f89d: cmp qword ptr [r12 + 0x10], 0
44f8a3: jne 0x44f847
44f8a5: mov rdi, r12
44f8a8: call 0x426a00
44f8ad: lea rax, [rip + 0x6df6c]
44f8b4: mov qword ptr [rbx + 0x28], rax
44f8b8: jmp 0x44f856
44f8ba: nop word ptr [rax + rax]
44f8c0: mov byte ptr [rdx], 0x2f
44f8c3: test rdi, rdi
44f8c6: je 0x44f910
44f8c8: lea rdx, [r10 + 2]
44f8cc: jmp 0x44f7b3
44f8d1: nop dword ptr [rax]
44f8d8: call 0x458830
44f8dd: mov qword ptr [r12 + 0x10], 0
44f8e6: mov rdi, qword ptr [r12]
44f8ea: test rdi, rdi
44f8ed: je 0x44f8a5
44f8ef: mov rsi, qword ptr [r12 + 8]
44f8f4: call 0x458830
44f8f9: jmp 0x44f8a5
44f8fb: nop dword ptr [rax + rax]
44f900: or qword ptr [rsp + rcx - 8], 0
44f906: jmp 0x44f77a
44f90b: nop dword ptr [rax + rax]
44f910: mov rax, rdx
44f913: mov byte ptr [rax + 1], 0x2f
44f917: lea rdx, [rax + 2]
44f91b: test r8, r8
44f91e: je 0x44f7b3
44f924: mov ecx, r8d
44f927: cmp r8d, 8
44f92b: jae 0x44f9bc
44f931: test r8b, 4
44f935: jne 0x44fa0a
44f93b: test ecx, ecx
44f93d: je 0x44f94e
44f93f: movzx eax, byte ptr [r9]
44f943: mov byte ptr [rdx], al
44f945: test cl, 2
44f948: jne 0x44fa1d
44f94e: add rdx, r8
44f951: jmp 0x44f7b3
44f956: nop word ptr cs:[rax + rax]
44f960: add rdx, 0x17
44f964: mov rdi, rsp
44f967: mov rax, rdx
44f96a: and rdx, 0xfffffffffffff000
44f971: sub rdi, rdx
44f974: and rax, 0xfffffffffffffff0
44f978: mov rdx, rdi
44f97b: cmp rsp, rdx
44f97e: je 0x44f995
44f980: sub rsp, 0x1000
44f987: or qword ptr [rsp + 0xff8], 0
44f990: cmp rsp, rdx
44f993: jne 0x44f980
44f995: and eax, 0xfff
44f99a: sub rsp, rax
44f99d: test rax, rax
44f9a0: je 0x44f9a8
44f9a2: or qword ptr [rsp + rax - 8], 0
44f9a8: lea rax, [rsp + 0xf]
44f9ad: and rax, 0xfffffffffffffff0
44f9b1: mov byte ptr [rax], 0x2f
44f9b4: mov r13, rax
44f9b7: jmp 0x44f913
44f9bc: mov rcx, qword ptr [r9]
44f9bf: add rax, 0xa
44f9c3: and rax, 0xfffffffffffffff8
44f9c7: mov qword ptr [rdx], rcx
44f9ca: mov ecx, r8d
44f9cd: mov rsi, qword ptr [r9 + rcx - 8]
44f9d2: mov qword ptr [rdx + rcx - 8], rsi
44f9d7: mov rcx, rdx
44f9da: sub rcx, rax
44f9dd: sub r9, rcx
44f9e0: add ecx, r8d
44f9e3: and ecx, 0xfffffff8
44f9e6: cmp ecx, 8
44f9e9: jb 0x44f94e
44f9ef: and ecx, 0xfffffff8
44f9f2: xor esi, esi
44f9f4: mov edi, esi
44f9f6: add esi, 8
44f9f9: mov r10, qword ptr [r9 + rdi]
44f9fd: mov qword ptr [rax + rdi], r10
44fa01: cmp esi, ecx
44fa03: jb 0x44f9f4
44fa05: jmp 0x44f94e
44fa0a: mov eax, dword ptr [r9]
44fa0d: mov dword ptr [rdx], eax
44fa0f: mov eax, dword ptr [r9 + rcx - 4]
44fa14: mov dword ptr [rdx + rcx - 4], eax
44fa18: jmp 0x44f94e
44fa1d: movzx eax, word ptr [r9 + rcx - 2]
44fa23: mov word ptr [rdx + rcx - 2], ax
44fa28: jmp 0x44f94e
44fa2d: call 0x4547a0
44fa32: nop word ptr cs:[rax + rax]
44fa3d: nop dword ptr [rax]
44fa40: endbr64 
44fa44: push rbp
44fa45: push rbx
44fa46: mov rbx, rdi
44fa49: sub rsp, 8
44fa4d: mov rax, 0xffffffffffffffa0
44fa54: mov rax, qword ptr fs:[rax]
44fa58: mov rbp, qword ptr [rax]
44fa5b: mov rax, qword ptr [rbp + 0x28]
44fa5f: test rax, rax
44fa62: je 0x44faf0
44fa68: movdqu xmm0, xmmword ptr [rax]
44fa6c: movups xmmword ptr [rbx], xmm0
44fa6f: movdqu xmm1, xmmword ptr [rax + 0x10]
44fa74: movups xmmword ptr [rbx + 0x10], xmm1
44fa78: mov eax, dword ptr fs:[0x18]
44fa80: test eax, eax
44fa82: jne 0x44fb20
44fa88: mov edx, 1
44fa8d: cmpxchg dword ptr [rip + 0x73e1c], edx
44fa94: mov rdx, qword ptr [rbx]
44fa97: xor r8d, r8d
44fa9a: cmp qword ptr [rdx], 0
44fa9e: je 0x44faad
44faa0: mov eax, dword ptr [rdx + 0x10]
44faa3: add eax, 1
44faa6: mov dword ptr [rdx + 0x10], eax
44faa9: seto r8b
44faad: mov rdx, qword ptr [rbx + 0x10]
44fab1: cmp qword ptr [rdx], 0
44fab5: je 0x44fac6
44fab7: mov eax, dword ptr [rdx + 0x10]
44faba: add eax, 1
44fabd: mov dword ptr [rdx + 0x10], eax
44fac0: seto al
44fac3: or r8d, eax
44fac6: mov eax, dword ptr fs:[0x18]
44face: test eax, eax
44fad0: jne 0x44fb50
44fad2: sub dword ptr [rip + 0x73dd7], 1
44fad9: test r8b, r8b
44fadc: jne 0x44fb81
44fae2: add rsp, 8
44fae6: pop rbx
44fae7: pop rbp
44fae8: ret 
44fae9: nop dword ptr [rax]
44faf0: lea rdx, [rip + 0x6ddc9]
44faf7: lea rax, [rip + 0x6dd22]
44fafe: cmp rbp, rdx
44fb01: je 0x44fa68
44fb07: mov rdi, rbp
44fb0a: call 0x44f660
44fb0f: mov rax, qword ptr [rbp + 0x28]
44fb13: jmp 0x44fa68
44fb18: nop dword ptr [rax + rax]
44fb20: xor eax, eax
44fb22: mov edx, 1
44fb27: lock cmpxchg dword ptr [rip + 0x73d81], edx
44fb2f: je 0x44fa94
44fb35: lea rdi, [rip + 0x73d74]
44fb3c: call 0x421250
44fb41: jmp 0x44fa94
44fb46: nop word ptr cs:[rax + rax]
44fb50: xor eax, eax
44fb52: xchg dword ptr [rip + 0x73d58], eax
44fb58: cmp eax, 1
44fb5b: jle 0x44fad9
44fb61: xor r10d, r10d
44fb64: mov edx, 1
44fb69: mov esi, 0x81
44fb6e: mov eax, 0xca
44fb73: lea rdi, [rip + 0x73d36]
44fb7a: syscall 
44fb7c: jmp 0x44fad9
44fb81: lea rdi, [rip + 0x48ea8]
44fb88: call 0x41b220
44fb8d: nop dword ptr [rax]
44fb90: endbr64 
44fb94: push r13
44fb96: xor r8d, r8d
44fb99: push r12
44fb9b: push rbp
44fb9c: mov rbp, rsi
44fb9f: push rbx
44fba0: mov rbx, rdi
44fba3: lea rdi, [rip + 0x4a142]
44fbaa: sub rsp, 0x28
44fbae: mov rax, qword ptr fs:[0x28]
44fbb7: mov qword ptr [rsp + 0x18], rax
44fbbc: xor eax, eax
44fbbe: lea r13, [rsp + 8]
44fbc3: lea r12, [rsp + 0x10]
44fbc8: mov rcx, r13
44fbcb: mov rdx, r12
44fbce: call 0x458520
44fbd3: test eax, eax
44fbd5: jne 0x44fc55
44fbd7: mov rsi, qword ptr [rsp + 8]
44fbdc: mov rdi, qword ptr [rsp + 0x10]
44fbe1: cmp rsi, 1
44fbe5: ja 0x44fc50
44fbe7: mov qword ptr [rbx + 8], rsi
44fbeb: mov qword ptr [rbx], rdi
44fbee: test rdi, rdi
44fbf1: je 0x44fc8d
44fbf7: xor r8d, r8d
44fbfa: mov rcx, r13
44fbfd: mov rdx, r12
44fc00: mov rdi, rbp
44fc03: lea rsi, [rip + 0x4a0e2]
44fc0a: call 0x458520
44fc0f: test eax, eax
44fc11: jne 0x44fc6d
44fc13: mov rsi, qword ptr [rsp + 8]
44fc18: mov rdi, qword ptr [rsp + 0x10]
44fc1d: cmp rsi, 1
44fc21: ja 0x44fc68
44fc23: mov qword ptr [rbx + 0x18], rsi
44fc27: mov qword ptr [rbx + 0x10], rdi
44fc2b: test rdi, rdi
44fc2e: je 0x44fc75
44fc30: mov rdx, qword ptr [rsp + 0x18]
44fc35: xor rdx, qword ptr fs:[0x28]
44fc3e: jne 0x44fc88
44fc40: add rsp, 0x28
44fc44: pop rbx
44fc45: pop rbp
44fc46: pop r12
44fc48: pop r13
44fc4a: ret 
44fc4b: nop dword ptr [rax + rax]
44fc50: call 0x458830
44fc55: mov qword ptr [rbx], 0
44fc5c: mov eax, 1
44fc61: jmp 0x44fc30
44fc63: nop dword ptr [rax + rax]
44fc68: call 0x458830
44fc6d: mov qword ptr [rbx + 0x10], 0
44fc75: mov rsi, qword ptr [rbx + 8]
44fc79: mov rdi, qword ptr [rbx]
44fc7c: call 0x458830
44fc81: mov eax, 1
44fc86: jmp 0x44fc30
44fc88: call 0x4547a0
44fc8d: mov eax, 1
44fc92: jmp 0x44fc30
44fc94: nop word ptr cs:[rax + rax]
44fc9e: nop 
44fca0: endbr64 
44fca4: push r15
44fca6: push r14
44fca8: push r13
44fcaa: push r12
44fcac: push rbp
44fcad: push rbx
44fcae: sub rsp, 0x188
44fcb5: mov rbx, qword ptr [r8]
44fcb8: mov qword ptr [rsp + 0x18], rsi
44fcbd: mov rsi, rdx
44fcc0: mov qword ptr [rsp + 0x10], rdi
44fcc5: mov rax, qword ptr fs:[0x28]
44fcce: mov qword ptr [rsp + 0x178], rax
44fcd6: xor eax, eax
44fcd8: mov rax, qword ptr [rbx + 0x28]
44fcdc: mov dword ptr [rsp + 0x58], 1
44fce4: mov qword ptr [rsp + 0x50], 1
44fced: mov qword ptr [rsp + 0x60], rcx
44fcf2: test rax, rax
44fcf5: je 0x44ff88
44fcfb: mov rbp, qword ptr [rax]
44fcfe: cmp qword ptr [rbp], 0
44fd03: mov rbx, qword ptr [rbp + 0x28]
44fd07: je 0x44fd16
44fd09: ror rbx, 0x11
44fd0d: xor rbx, qword ptr fs:[0x30]
44fd16: mov rax, qword ptr [rsp + 0x18]
44fd1b: cmp qword ptr [rsp + 0x10], 0
44fd21: mov r15, qword ptr [rax]
44fd24: mov qword ptr [rsp + 0x30], r15
44fd29: je 0x44feb0
44fd2f: mov rax, qword ptr [rsp + 0x10]
44fd34: lea r14, [rsp + 0x28]
44fd39: lea r13, [rsp + 0x30]
44fd3e: mov qword ptr [rsp + 0x40], rax
44fd43: lea rax, [rax + rsi*4]
44fd47: mov qword ptr [rsp + 0x48], rax
44fd4c: lea rax, [rsp + 0x40]
44fd51: mov qword ptr [rsp + 8], rax
44fd56: test rsi, rsi
44fd59: jne 0x44fd7e
44fd5b: jmp 0x44ffba
44fd60: cmp r15, r12
44fd63: jne 0x44fdc4
44fd65: cmp byte ptr [r12 - 1], 0
44fd6b: je 0x44fdc4
44fd6d: mov rdx, qword ptr [rsp + 0x48]
44fd72: sub rdx, rdi
44fd75: mov rsi, rdx
44fd78: sar rsi, 2
44fd7c: je 0x44fdc4
44fd7e: mov rdi, r15
44fd81: call 0x401030
44fd86: mov rdi, rbx
44fd89: lea r12, [r15 + rax + 1]
44fd8e: call 0x456100
44fd93: push 1
44fd95: xor r8d, r8d
44fd98: mov rdi, rbp
44fd9b: push 0
44fd9d: mov r9, r14
44fda0: mov rsi, qword ptr [rsp + 0x18]
44fda5: mov rcx, r12
44fda8: mov rdx, r13
44fdab: call rbx
44fdad: pop rdi
44fdae: pop r8
44fdb0: mov r15, qword ptr [rsp + 0x30]
44fdb5: mov rdi, qword ptr [rsp + 0x40]
44fdba: cmp eax, 4
44fdbd: je 0x44fd60
44fdbf: cmp eax, 7
44fdc2: je 0x44fd60
44fdc4: mov rcx, qword ptr [rsp + 0x18]
44fdc9: mov rdx, rdi
44fdcc: sub rdx, qword ptr [rsp + 0x10]
44fdd1: sar rdx, 2
44fdd5: mov qword ptr [rcx], r15
44fdd8: mov r15, rdx
44fddb: test eax, 0xfffffffb
44fde0: jne 0x44fe60
44fde2: mov esi, dword ptr [rdi - 4]
44fde5: test esi, esi
44fde7: jne 0x44fe0c
44fde9: test rdx, rdx
44fdec: je 0x44ffc7
44fdf2: mov rdx, qword ptr [rsp + 0x60]
44fdf7: mov edx, dword ptr [rdx]
44fdf9: test edx, edx
44fdfb: jne 0x44ffe6
44fe01: mov qword ptr [rcx], 0
44fe08: sub r15, 1
44fe0c: lea edx, [rax - 4]
44fe0f: cmp edx, 3
44fe12: setbe dl
44fe15: test eax, eax
44fe17: sete cl
44fe1a: or edx, ecx
44fe1c: test dl, dl
44fe1e: je 0x44fe6d
44fe20: cmp eax, 7
44fe23: ja 0x44fe90
44fe25: mov edx, 0xb1
44fe2a: bt rdx, rax
44fe2e: jae 0x44fe90
44fe30: mov rax, qword ptr [rsp + 0x178]
44fe38: xor rax, qword ptr fs:[0x28]
44fe41: jne 0x44ffc2
44fe47: add rsp, 0x188
44fe4e: mov rax, r15
44fe51: pop rbx
44fe52: pop rbp
44fe53: pop r12
44fe55: pop r13
44fe57: pop r14
44fe59: pop r15
44fe5b: ret 
44fe5c: nop dword ptr [rax]
44fe60: lea edx, [rax - 4]
44fe63: cmp edx, 3
44fe66: setbe dl
44fe69: test dl, dl
44fe6b: jne 0x44fe20
44fe6d: lea rcx, [rip + 0x48c44]
44fe74: mov edx, 0x96
44fe79: lea rsi, [rip + 0x48bec]
44fe80: lea rdi, [rip + 0x48a69]
44fe87: call 0x4032a0
44fe8c: nop dword ptr [rax]
44fe90: mov rax, 0xffffffffffffffc0
44fe97: mov r15, 0xffffffffffffffff
44fe9e: mov dword ptr fs:[rax], 0x54
44fea5: jmp 0x44fe30
44fea7: nop word ptr [rax + rax]
44feb0: mov rdi, r15
44feb3: lea r12, [rsp + 0x70]
44feb8: lea r14, [rsp + 0x28]
44febd: call 0x401180
44fec2: lea r13, [rsp + 0x30]
44fec7: lea rax, [r15 + rax + 1]
44fecc: xor r15d, r15d
44fecf: mov qword ptr [rsp + 0x10], rax
44fed4: mov rax, qword ptr [rsp + 0x60]
44fed9: mov rax, qword ptr [rax]
44fedc: mov qword ptr [rsp + 0x38], rax
44fee1: lea rax, [rsp + 0x38]
44fee6: mov qword ptr [rsp + 0x60], rax
44feeb: lea rax, [rsp + 0x170]
44fef3: mov qword ptr [rsp + 0x48], rax
44fef8: lea rax, [rsp + 0x40]
44fefd: mov qword ptr [rsp + 8], rax
44ff02: nop word ptr [rax + rax]
44ff08: mov rdi, rbx
44ff0b: mov qword ptr [rsp + 0x40], r12
44ff10: call 0x456100
44ff15: push 1
44ff17: mov rdx, r13
44ff1a: mov r9, r14
44ff1d: push 0
44ff1f: xor r8d, r8d
44ff22: mov rcx, qword ptr [rsp + 0x20]
44ff27: mov rdi, rbp
44ff2a: mov rsi, qword ptr [rsp + 0x18]
44ff2f: call rbx
44ff31: mov rcx, qword ptr [rsp + 0x50]
44ff36: pop r10
44ff38: pop r11
44ff3a: mov rdx, rcx
44ff3d: sub rdx, r12
44ff40: sar rdx, 2
44ff44: add r15, rdx
44ff47: cmp eax, 5
44ff4a: je 0x44ff08
44ff4c: test eax, 0xfffffffb
44ff51: jne 0x44fe0c
44ff57: mov r9d, dword ptr [rcx - 4]
44ff5b: test r9d, r9d
44ff5e: je 0x44fe08
44ff64: lea rcx, [rip + 0x48b4d]
44ff6b: mov edx, 0x5e
44ff70: lea rsi, [rip + 0x48af5]
44ff77: lea rdi, [rip + 0x48b0a]
44ff7e: call 0x4032a0
44ff83: nop dword ptr [rax + rax]
44ff88: lea rdx, [rip + 0x6d931]
44ff8f: lea rax, [rip + 0x6d88a]
44ff96: cmp rbx, rdx
44ff99: je 0x44fcfb
44ff9f: mov rdi, rbx
44ffa2: mov qword ptr [rsp + 8], rsi
44ffa7: call 0x44f660
44ffac: mov rax, qword ptr [rbx + 0x28]
44ffb0: mov rsi, qword ptr [rsp + 8]
44ffb5: jmp 0x44fcfb
44ffba: xor r15d, r15d
44ffbd: jmp 0x44fe30
44ffc2: call 0x4547a0
44ffc7: lea rcx, [rip + 0x48aea]
44ffce: mov edx, 0x8d
44ffd3: lea rsi, [rip + 0x48a92]
44ffda: lea rdi, [rip + 0x48a99]
44ffe1: call 0x4032a0
44ffe6: lea rcx, [rip + 0x48acb]
44ffed: mov edx, 0x8e
44fff2: lea rsi, [rip + 0x48a73]
44fff9: lea rdi, [rip + 0x489c0]
450000: call 0x4032a0
450005: nop word ptr cs:[rax + rax]
45000f: nop 
450010: endbr64 
450014: test rsi, rsi
450017: jne 0x45001d
450019: xor rax, rax
45001c: ret 
45001d: shl rsi, 2
450021: add rsi, rdi
450024: mov r10, rsi
450027: and r10, 0xffffffffffffffc0
45002b: mov r11, rsi
45002e: pxor xmm0, xmm0
450032: pxor xmm1, xmm1
450036: pxor xmm2, xmm2
45003a: pxor xmm3, xmm3
45003e: mov rax, rdi
450041: mov rcx, rdi
450044: and rcx, 0xfff
45004b: cmp rcx, 0xfcf
450052: ja 0x4500c0
450054: and rax, 0xfffffffffffffff0
450058: pcmpeqd xmm0, xmmword ptr [rax]
45005c: pcmpeqd xmm1, xmmword ptr [rax + 0x10]
450061: pcmpeqd xmm2, xmmword ptr [rax + 0x20]
450066: pcmpeqd xmm3, xmmword ptr [rax + 0x30]
45006b: pmovmskb esi, xmm0
45006f: pmovmskb edx, xmm1
450073: pmovmskb r8d, xmm2
450078: pmovmskb ecx, xmm3
45007c: shl rdx, 0x10
450080: shl rcx, 0x10
450084: or rdx, rsi
450087: or rcx, r8
45008a: shl rcx, 0x20
45008e: or rdx, rcx
450091: mov rcx, rdi
450094: xor rcx, rax
450097: mov rsi, r11
45009a: sub rsi, rax
45009d: and rax, 0xffffffffffffffc0
4500a1: test rsi, -0x40
4500a8: je 0x450127
4500aa: sar rdx, cl
4500ad: test rdx, rdx
4500b0: je 0x450150
4500b6: bsf rax, rdx
4500ba: shr rax, 2
4500be: ret 
4500bf: nop 
4500c0: and rax, 0xffffffffffffffc0
4500c4: pcmpeqd xmm0, xmmword ptr [rax]
4500c8: pcmpeqd xmm1, xmmword ptr [rax + 0x10]
4500cd: pcmpeqd xmm2, xmmword ptr [rax + 0x20]
4500d2: pcmpeqd xmm3, xmmword ptr [rax + 0x30]
4500d7: pmovmskb esi, xmm0
4500db: pmovmskb edx, xmm1
4500df: pmovmskb r8d, xmm2
4500e4: pmovmskb ecx, xmm3
4500e8: shl rdx, 0x10
4500ec: shl rcx, 0x10
4500f0: or rdx, rsi
4500f3: or rcx, r8
4500f6: shl rcx, 0x20
4500fa: or rdx, rcx
4500fd: mov rcx, rdi
450100: xor rcx, rax
450103: mov rsi, r11
450106: sub rsi, rax
450109: and rax, 0xffffffffffffffc0
45010d: test rsi, -0x40
450114: je 0x450127
450116: sar rdx, cl
450119: test rdx, rdx
45011c: je 0x450140
45011e: bsf rax, rdx
450122: shr rax, 2
450126: ret 
450127: bts rdx, rsi
45012b: sar rdx, cl
45012e: test rdx, rdx
450131: je 0x450140
450133: bsf rax, rdx
450137: shr rax, 2
45013b: ret 
45013c: nop dword ptr [rax]
450140: pxor xmm1, xmm1
450144: pxor xmm2, xmm2
450148: pxor xmm3, xmm3
45014c: nop dword ptr [rax]
450150: add rax, 0x40
450154: cmp r10, rax
450157: je 0x450180
450159: movdqa xmm0, xmmword ptr [rax]
45015d: pminud xmm0, xmmword ptr [rax + 0x10]
450163: pminud xmm0, xmmword ptr [rax + 0x20]
450169: pminud xmm0, xmmword ptr [rax + 0x30]
45016f: pcmpeqd xmm0, xmm3
450173: pmovmskb edx, xmm0
450177: test edx, edx
450179: jne 0x4501e0
45017b: jmp 0x450150
45017d: nop dword ptr [rax]
450180: cmp r11, rax
450183: je 0x4501c2
450185: pxor xmm0, xmm0
450189: pcmpeqd xmm0, xmmword ptr [rax]
45018d: pcmpeqd xmm1, xmmword ptr [rax + 0x10]
450192: pcmpeqd xmm2, xmmword ptr [rax + 0x20]
450197: pcmpeqd xmm3, xmmword ptr [rax + 0x30]
45019c: pmovmskb esi, xmm0
4501a0: pmovmskb edx, xmm1
4501a4: pmovmskb r8d, xmm2
4501a9: pmovmskb ecx, xmm3
4501ad: shl rdx, 0x10
4501b1: shl rcx, 0x10
4501b5: or rdx, rsi
4501b8: or rcx, r8
4501bb: shl rcx, 0x20
4501bf: or rdx, rcx
4501c2: bts rdx, r11
4501c6: bsf rdx, rdx
4501ca: add rax, rdx
4501cd: sub rax, rdi
4501d0: shr rax, 2
4501d4: ret 
4501d5: nop word ptr cs:[rax + rax]
4501e0: pxor xmm0, xmm0
4501e4: pcmpeqd xmm0, xmmword ptr [rax]
4501e8: pcmpeqd xmm1, xmmword ptr [rax + 0x10]
4501ed: pcmpeqd xmm2, xmmword ptr [rax + 0x20]
4501f2: pcmpeqd xmm3, xmmword ptr [rax + 0x30]
4501f7: pmovmskb esi, xmm0
4501fb: pmovmskb edx, xmm1
4501ff: pmovmskb r8d, xmm2
450204: pmovmskb ecx, xmm3
450208: shl rdx, 0x10
45020c: shl rcx, 0x10
450210: or rdx, rsi
450213: or rcx, r8
450216: shl rcx, 0x20
45021a: or rdx, rcx
45021d: bsf rdx, rdx
450221: add rax, rdx
450224: sub rax, rdi
450227: shr rax, 2
45022b: ret 
45022c: nop dword ptr [rax]
450230: endbr64 
450234: push rbp
450235: mov rdx, rsi
450238: mov rbp, rdi
45023b: push rbx
45023c: mov rbx, rsi
45023f: xor esi, esi
450241: sub rsp, 8
450245: call 0x401100
45024a: mov rdx, rax
45024d: sub rax, rbp
450250: sar rax, 2
450254: test rdx, rdx
450257: cmove rax, rbx
45025b: add rsp, 8
45025f: pop rbx
450260: pop rbp
450261: ret 
450262: nop word ptr cs:[rax + rax]
45026c: nop dword ptr [rax]
450270: endbr64 
450274: test rsi, rsi
450277: je 0x450500
45027d: shl rsi, 2
450281: mov r8, rsi
450284: mov ecx, edi
450286: mov rdx, rdi
450289: vpxor xmm0, xmm0, xmm0
45028d: and ecx, 0x3f
450290: cmp ecx, 0x20
450293: ja 0x4502d0
450295: vpcmpeqd ymm1, ymm0, ymmword ptr [rdi]
450299: vpmovmskb eax, ymm1
45029d: test eax, eax
45029f: jne 0x450470
4502a5: sub rsi, 0x20
4502a9: jbe 0x4504f0
4502af: add rdi, 0x20
4502b3: and ecx, 0x1f
4502b6: and rdi, 0xffffffffffffffe0
4502ba: add rsi, rcx
4502bd: sub rsi, 0x80
4502c4: jbe 0x4503e2
4502ca: jmp 0x450331
4502cc: nop dword ptr [rax]
4502d0: and ecx, 0x1f
4502d3: and rdi, 0xffffffffffffffe0
4502d7: vpcmpeqd ymm1, ymm0, ymmword ptr [rdi]
4502db: vpmovmskb eax, ymm1
4502df: sar eax, cl
4502e1: test eax, eax
4502e3: je 0x450310
4502e5: tzcnt eax, eax
4502e9: cmp rsi, rax
4502ec: jbe 0x4504f0
4502f2: add rax, rdi
4502f5: add rax, rcx
4502f8: sub rax, rdx
4502fb: shr rax, 2
4502ff: vzeroupper 
450302: ret 
450303: nop word ptr cs:[rax + rax]
45030e: nop 
450310: neg rcx
450313: add rcx, 0x20
450317: sub rsi, rcx
45031a: jbe 0x4504f0
450320: add rdi, 0x20
450324: sub rsi, 0x80
45032b: jbe 0x4503e2
450331: vpcmpeqd ymm1, ymm0, ymmword ptr [rdi]
450335: vpmovmskb eax, ymm1
450339: test eax, eax
45033b: jne 0x450510
450341: vpcmpeqd ymm1, ymm0, ymmword ptr [rdi + 0x20]
450346: vpmovmskb eax, ymm1
45034a: test eax, eax
45034c: jne 0x450530
450352: vpcmpeqd ymm1, ymm0, ymmword ptr [rdi + 0x40]
450357: vpmovmskb eax, ymm1
45035b: test eax, eax
45035d: jne 0x450550
450363: vpcmpeqd ymm1, ymm0, ymmword ptr [rdi + 0x60]
450368: vpmovmskb eax, ymm1
45036c: test eax, eax
45036e: jne 0x45059c
450374: add rdi, 0x80
45037b: sub rsi, 0x80
450382: jbe 0x4503e2
450384: mov rcx, rdi
450387: and ecx, 0x7f
45038a: and rdi, 0xffffffffffffff80
45038e: add rsi, rcx
450391: nop word ptr cs:[rax + rax]
45039c: nop dword ptr [rax]
4503a0: vmovdqa ymm1, ymmword ptr [rdi]
4503a4: vmovdqa ymm2, ymmword ptr [rdi + 0x20]
4503a9: vmovdqa ymm3, ymmword ptr [rdi + 0x40]
4503ae: vmovdqa ymm4, ymmword ptr [rdi + 0x60]
4503b3: vpminud ymm5, ymm2, ymm1
4503b8: vpminud ymm6, ymm4, ymm3
4503bd: vpminud ymm5, ymm6, ymm5
4503c2: vpcmpeqd ymm5, ymm0, ymm5
4503c6: vpmovmskb eax, ymm5
4503ca: test eax, eax
4503cc: jne 0x450570
4503d2: add rdi, 0x80
4503d9: sub rsi, 0x80
4503e0: ja 0x4503a0
4503e2: add esi, 0x40
4503e5: jle 0x450440
4503e7: vpcmpeqd ymm1, ymm0, ymmword ptr [rdi]
4503eb: vpmovmskb eax, ymm1
4503ef: test eax, eax
4503f1: jne 0x450510
4503f7: vpcmpeqd ymm1, ymm0, ymmword ptr [rdi + 0x20]
4503fc: vpmovmskb eax, ymm1
450400: test eax, eax
450402: jne 0x450530
450408: vpcmpeqd ymm1, ymm0, ymmword ptr [rdi + 0x40]
45040d: vpmovmskb eax, ymm1
450411: test eax, eax
450413: jne 0x4504b0
450419: sub esi, 0x20
45041c: jle 0x4504f0
450422: vpcmpeqd ymm1, ymm0, ymmword ptr [rdi + 0x60]
450427: vpmovmskb eax, ymm1
45042b: test eax, eax
45042d: jne 0x4504d0
450433: mov rax, r8
450436: shr rax, 2
45043a: vzeroupper 
45043d: ret 
45043e: nop 
450440: add esi, 0x40
450443: vpcmpeqd ymm1, ymm0, ymmword ptr [rdi]
450447: vpmovmskb eax, ymm1
45044b: test eax, eax
45044d: jne 0x450470
45044f: sub esi, 0x20
450452: jle 0x4504f0
450458: vpcmpeqd ymm1, ymm0, ymmword ptr [rdi + 0x20]
45045d: vpmovmskb eax, ymm1
450461: test eax, eax
450463: jne 0x450490
450465: mov rax, r8
450468: shr rax, 2
45046c: vzeroupper 
45046f: ret 
450470: tzcnt eax, eax
450474: cmp rsi, rax
450477: jbe 0x4504f0
450479: add rax, rdi
45047c: sub rax, rdx
45047f: shr rax, 2
450483: vzeroupper 
450486: ret 
450487: nop word ptr [rax + rax]
450490: tzcnt eax, eax
450494: cmp rsi, rax
450497: jbe 0x4504f0
450499: add rax, 0x20
45049d: add rax, rdi
4504a0: sub rax, rdx
4504a3: shr rax, 2
4504a7: vzeroupper 
4504aa: ret 
4504ab: nop dword ptr [rax + rax]
4504b0: tzcnt eax, eax
4504b4: cmp rsi, rax
4504b7: jbe 0x4504f0
4504b9: add rax, 0x40
4504bd: add rax, rdi
4504c0: sub rax, rdx
4504c3: shr rax, 2
4504c7: vzeroupper 
4504ca: ret 
4504cb: nop dword ptr [rax + rax]
4504d0: tzcnt eax, eax
4504d4: cmp rsi, rax
4504d7: jbe 0x4504f0
4504d9: add rax, 0x60
4504dd: add rax, rdi
4504e0: sub rax, rdx
4504e3: shr rax, 2
4504e7: vzeroupper 
4504ea: ret 
4504eb: nop dword ptr [rax + rax]
4504f0: mov rax, r8
4504f3: shr rax, 2
4504f7: vzeroupper 
4504fa: ret 
4504fb: nop dword ptr [rax + rax]
450500: xor eax, eax
450502: ret 
450503: nop word ptr cs:[rax + rax]
45050e: nop 
450510: tzcnt eax, eax
450514: add rax, rdi
450517: sub rax, rdx
45051a: shr rax, 2
45051e: vzeroupper 
450521: ret 
450522: nop word ptr cs:[rax + rax]
45052d: nop dword ptr [rax]
450530: tzcnt eax, eax
450534: add rax, 0x20
450538: add rax, rdi
45053b: sub rax, rdx
45053e: shr rax, 2
450542: vzeroupper 
450545: ret 
450546: nop word ptr cs:[rax + rax]
450550: tzcnt eax, eax
450554: add rax, 0x40
450558: add rax, rdi
45055b: sub rax, rdx
45055e: shr rax, 2
450562: vzeroupper 
450565: ret 
450566: nop word ptr cs:[rax + rax]
450570: vpcmpeqd ymm1, ymm0, ymm1
450574: vpmovmskb eax, ymm1
450578: test eax, eax
45057a: jne 0x450510
45057c: vpcmpeqd ymm2, ymm0, ymm2
450580: vpmovmskb eax, ymm2
450584: test eax, eax
450586: jne 0x450530
450588: vpcmpeqd ymm3, ymm0, ymm3
45058c: vpmovmskb eax, ymm3
450590: test eax, eax
450592: jne 0x450550
450594: vpcmpeqd ymm4, ymm0, ymm4
450598: vpmovmskb eax, ymm4
45059c: tzcnt eax, eax
4505a0: add rax, 0x60
4505a4: add rax, rdi
4505a7: sub rax, rdx
4505aa: shr rax, 2
4505ae: vzeroupper 
4505b1: ret 
4505b2: nop word ptr cs:[rax + rax]
4505bc: nop dword ptr [rax]
4505c0: endbr64 
4505c4: mov r9, 0xffffffffffffffc0
4505cb: mov edx, edi
4505cd: mov r8d, 0xe7
4505d3: mov esi, 0x3c
4505d8: jmp 0x4505ef
4505da: nop word ptr [rax + rax]
4505e0: mov edi, edx
4505e2: mov eax, esi
4505e4: syscall 
4505e6: cmp rax, -0x1000
4505ec: ja 0x450610
4505ee: hlt 
4505ef: mov edi, edx
4505f1: mov eax, r8d
4505f4: syscall 
4505f6: cmp rax, -0x1000
4505fc: jbe 0x4505e0
4505fe: neg eax
450600: mov dword ptr fs:[r9], eax
450604: jmp 0x4505e0
450606: nop word ptr cs:[rax + rax]
450610: neg eax
450612: mov dword ptr fs:[r9], eax
450616: jmp 0x4505ee
450618: nop dword ptr [rax + rax]
450620: push rbp
450621: mov rbp, rsp
450624: push r15
450626: push r14
450628: push r13
45062a: mov r13, rdi
45062d: lea rdi, [rip + 0x484a3]
450634: push r12
450636: lea r12, [rip + 0x48489]
45063d: push rbx
45063e: mov ebx, 0x10
450643: sub rsp, 0xa8
45064a: mov rax, qword ptr fs:[0x28]
450653: mov qword ptr [rbp - 0x38], rax
450657: xor eax, eax
450659: mov rax, 0xffffffffffffffc0
450660: mov r14d, dword ptr fs:[rax]
450664: call 0x466ab0
450669: test rax, rax
45066c: je 0x45067c
45066e: mov rdi, rax
450671: mov r12, rax
450674: call 0x401180
450679: mov rbx, rax
45067c: mov rdi, r13
45067f: call 0x401180
450684: mov rsi, rsp
450687: mov r15, rax
45068a: lea rax, [rbx + rax + 0x1a]
45068f: mov rcx, rax
450692: and rax, 0xfffffffffffff000
450698: sub rsi, rax
45069b: and rcx, 0xfffffffffffffff0
45069f: mov rax, rsi
4506a2: cmp rsp, rax
4506a5: je 0x4506bc
4506a7: sub rsp, 0x1000
4506ae: or qword ptr [rsp + 0xff8], 0
4506b7: cmp rsp, rax
4506ba: jne 0x4506a7
4506bc: and ecx, 0xfff
4506c2: sub rsp, rcx
4506c5: test rcx, rcx
4506c8: jne 0x450748
4506ca: mov rdx, rbx
4506cd: mov rsi, r12
4506d0: mov rdi, rsp
4506d3: call 0x401150
4506d8: mov rsi, r13
4506db: movabs rdx, 0x565f5849534f502f
4506e5: mov qword ptr [rax], rdx
4506e8: mov edx, 0x5f36
4506ed: lea rdi, [rax + 0xa]
4506f1: mov word ptr [rax + 8], dx
4506f5: lea rdx, [r15 + 1]
4506f9: call 0x401060
4506fe: lea rdx, [rbp - 0xd0]
450705: mov rsi, rsp
450708: mov edi, 1
45070d: call 0x450bd0
450712: mov rbx, 0xffffffffffffffc0
450719: cdqe 
45071b: mov dword ptr fs:[rbx], r14d
45071f: sar rax, 0x3f
450723: or rax, 1
450727: mov rdx, qword ptr [rbp - 0x38]
45072b: xor rdx, qword ptr fs:[0x28]
450734: jne 0x450753
450736: lea rsp, [rbp - 0x28]
45073a: pop rbx
45073b: pop r12
45073d: pop r13
45073f: pop r14
450741: pop r15
450743: pop rbp
450744: ret 
450745: nop dword ptr [rax]
450748: or qword ptr [rsp + rcx - 8], 0
45074e: jmp 0x4506ca
450753: call 0x4547a0
450758: nop dword ptr [rax + rax]
450760: endbr64 
450764: push r13
450766: push r12
450768: push rbp
450769: mov ebp, edi
45076b: push rbx
45076c: sub rsp, 0x48
450770: mov rax, qword ptr fs:[0x28]
450779: mov qword ptr [rsp + 0x38], rax
45077e: xor eax, eax
450780: lea eax, [rbp - 0xb9]
450786: cmp eax, 0xe
450789: jbe 0x450838
45078f: cmp ebp, 0x22
450792: je 0x4508b0
450798: jg 0x4507f0
45079a: test ebp, ebp
45079c: je 0x450848
4507a2: cmp ebp, 3
4507a5: jne 0x450818
4507a7: xor esi, esi
4507a9: lea rdi, [rip + 0x4834e]
4507b0: xor eax, eax
4507b2: call 0x4518a0
4507b7: mov r13d, eax
4507ba: mov eax, 0x10000
4507bf: cmp r13d, -1
4507c3: jne 0x4508dd
4507c9: nop dword ptr [rax]
4507d0: mov rcx, qword ptr [rsp + 0x38]
4507d5: xor rcx, qword ptr fs:[0x28]
4507de: jne 0x450b09
4507e4: add rsp, 0x48
4507e8: pop rbx
4507e9: pop rbp
4507ea: pop r12
4507ec: pop r13
4507ee: ret 
4507ef: nop 
4507f0: cmp ebp, 0x8b
4507f6: jle 0x450810
4507f8: cmp ebp, 0x95
4507fe: jne 0x450818
450800: mov eax, 0x31069
450805: jmp 0x4507d0
450807: nop word ptr [rax + rax]
450810: cmp ebp, 0x89
450816: jg 0x450800
450818: cmp ebp, 0xf6
45081e: ja 0x450888
450820: lea rdx, [rip + 0x4830d]
450827: movsxd rax, dword ptr [rdx + rbp*4]
45082b: add rax, rdx
45082e: notrack jmp rax
450831: nop dword ptr [rax]
450838: mov edi, ebp
45083a: call 0x44ef90
45083f: jmp 0x4507d0
450841: nop dword ptr [rax]
450848: mov rsi, rsp
45084b: mov edi, 3
450850: call 0x451a50
450855: mov r8d, eax
450858: mov eax, 0x20000
45085d: test r8d, r8d
450860: jne 0x4507d0
450866: mov rdx, qword ptr [rsp]
45086a: mov rcx, rdx
45086d: shr rcx, 2
450871: cmp rdx, 0x7ffff
450878: cmova rax, rcx
45087c: jmp 0x4507d0
450881: nop dword ptr [rax]
450888: mov rax, 0xffffffffffffffc0
45088f: mov dword ptr fs:[rax], 0x16
450896: nop word ptr cs:[rax + rax]
4508a0: mov rax, 0xffffffffffffffff
4508a7: jmp 0x4507d0
4508ac: nop dword ptr [rax]
4508b0: mov rsi, rsp
4508b3: mov edi, 0xb
4508b8: call 0x451a50
4508bd: test eax, eax
4508bf: je 0x450b00
4508c5: xor esi, esi
4508c7: lea rdi, [rip + 0x48215]
4508ce: xor eax, eax
4508d0: call 0x4518a0
4508d5: mov r13d, eax
4508d8: cmp eax, -1
4508db: je 0x4508a0
4508dd: lea r12, [rsp + 0x10]
4508e2: jmp 0x4508f5
4508e4: nop dword ptr [rax]
4508e8: mov rax, 0xffffffffffffffc0
4508ef: cmp dword ptr fs:[rax], 4
4508f3: jne 0x450960
4508f5: mov edx, 0x1f
4508fa: mov rsi, r12
4508fd: mov edi, r13d
450900: call 0x4519f0
450905: mov rbx, rax
450908: cmp rax, -1
45090c: je 0x4508e8
45090e: mov edi, r13d
450911: call 0x451730
450916: test rbx, rbx
450919: jle 0x450818
45091f: mov edx, 0xa
450924: mov rsi, rsp
450927: mov rdi, r12
45092a: mov byte ptr [rsp + rbx + 0x10], 0
45092f: call 0x466af0
450934: mov rdx, qword ptr [rsp]
450938: cmp rdx, r12
45093b: je 0x450818
450941: movzx edx, byte ptr [rdx]
450944: test dl, dl
450946: je 0x4507d0
45094c: cmp dl, 0xa
45094f: jne 0x450818
450955: jmp 0x4507d0
45095a: nop word ptr [rax + rax]
450960: mov edi, r13d
450963: call 0x451730
450968: jmp 0x450818
45096d: nop dword ptr [rax]
450970: mov eax, 1
450975: jmp 0x4507d0
45097a: nop word ptr [rax + rax]
450980: mov eax, 0x7fffffff
450985: jmp 0x4507d0
45098a: mov eax, 0x800
45098f: jmp 0x4507d0
450994: mov eax, 0x400
450999: jmp 0x4507d0
45099e: mov eax, 0x20
4509a3: jmp 0x4507d0
4509a8: lea rdi, [rip + 0x48178]
4509af: call 0x450620
4509b4: jmp 0x4507d0
4509b9: mov eax, 0x7fff
4509be: jmp 0x4507d0
4509c3: lea rdi, [rip + 0x48151]
4509ca: call 0x450620
4509cf: jmp 0x4507d0
4509d4: mov eax, 0x63
4509d9: jmp 0x4507d0
4509de: mov eax, 0xff
4509e3: jmp 0x4507d0
4509e8: mov eax, 0x7f
4509ed: jmp 0x4507d0
4509f2: mov rax, 0xffffffffffffff80
4509f9: jmp 0x4507d0
4509fe: mov eax, 0x10
450a03: jmp 0x4507d0
450a08: mov eax, 0x40
450a0d: jmp 0x4507d0
450a12: mov eax, 4
450a17: jmp 0x4507d0
450a1c: mov eax, 0x14
450a21: jmp 0x4507d0
450a26: call 0x451b30
450a2b: cdqe 
450a2d: jmp 0x4507d0
450a32: mov rax, 0xffffffffffff8000
450a39: jmp 0x4507d0
450a3e: mov eax, 0x100
450a43: jmp 0x4507d0
450a48: mov rax, 0xffffffff80000000
450a4f: jmp 0x4507d0
450a54: mov eax, 0x3e8
450a59: jmp 0x4507d0
450a5e: mov eax, 0x1000
450a63: jmp 0x4507d0
450a68: call 0x450b50
450a6d: jmp 0x4507d0
450a72: call 0x4543b0
450a77: cdqe 
450a79: jmp 0x4507d0
450a7e: mov eax, 0x4000
450a83: jmp 0x4507d0
450a88: call 0x4541b0
450a8d: cdqe 
450a8f: jmp 0x4507d0
450a94: call 0x453e80
450a99: cdqe 
450a9b: jmp 0x4507d0
450aa0: call 0x454290
450aa5: jmp 0x4507d0
450aaa: call 0x454320
450aaf: jmp 0x4507d0
450ab4: mov eax, 0x8000
450ab9: jmp 0x4507d0
450abe: mov eax, 0x2000
450ac3: jmp 0x4507d0
450ac8: mov eax, 0x2bc
450acd: jmp 0x4507d0
450ad2: mov eax, 8
450ad7: jmp 0x4507d0
450adc: call 0x451b70
450ae1: cdqe 
450ae3: jmp 0x4507d0
450ae8: mov eax, 0xffff
450aed: jmp 0x4507d0
450af2: mov eax, 0xffffffff
450af7: jmp 0x4507d0
450afc: nop dword ptr [rax]
450b00: mov rax, qword ptr [rsp]
450b04: jmp 0x4507d0
450b09: call 0x4547a0
450b0e: mov eax, 0x10000
450b13: jmp 0x4507d0
450b18: nop dword ptr [rax + rax]
450b20: endbr64 
450b24: mov eax, 0x18
450b29: syscall 
450b2b: cmp rax, -0xfff
450b31: jae 0x450b34
450b33: ret 
450b34: mov rcx, 0xffffffffffffffc0
450b3b: neg eax
450b3d: mov dword ptr fs:[rcx], eax
450b40: or rax, 0xffffffffffffffff
450b44: ret 
450b45: nop word ptr cs:[rax + rax]
450b4f: nop 
450b50: endbr64 
450b54: sub rsp, 0x28
450b58: mov edi, 6
450b5d: mov rax, qword ptr fs:[0x28]
450b66: mov qword ptr [rsp + 0x18], rax
450b6b: xor eax, eax
450b6d: mov rsi, rsp
450b70: call 0x451a50
450b75: test eax, eax
450b77: jne 0x450b98
450b79: mov rax, qword ptr [rsp]
450b7d: mov rdx, qword ptr [rsp + 0x18]
450b82: xor rdx, qword ptr fs:[0x28]
450b8b: jne 0x450ba1
450b8d: add rsp, 0x28
450b91: ret 
450b92: nop word ptr [rax + rax]
450b98: mov rax, 0xffffffffffffffff
450b9f: jmp 0x450b7d
450ba1: call 0x4547a0
450ba6: nop word ptr cs:[rax + rax]
450bb0: endbr64 
450bb4: mov rdx, rsi
450bb7: mov rsi, rdi
450bba: mov edi, 1
450bbf: jmp 0x450bd0
450bc4: nop word ptr cs:[rax + rax]
450bce: nop 
450bd0: endbr64 
450bd4: mov r8d, edi
450bd7: mov rdi, rsi
450bda: mov rsi, rdx
450bdd: cmp r8d, 1
450be1: ja 0x450c10
450be3: mov eax, 4
450be8: syscall 
450bea: cmp rax, -0x1000
450bf0: ja 0x450bf8
450bf2: ret 
450bf3: nop dword ptr [rax + rax]
450bf8: mov rdx, 0xffffffffffffffc0
450bff: neg eax
450c01: mov dword ptr fs:[rdx], eax
450c04: mov eax, 0xffffffff
450c09: ret 
450c0a: nop word ptr [rax + rax]
450c10: mov rax, 0xffffffffffffffc0
450c17: mov dword ptr fs:[rax], 0x16
450c1e: mov eax, 0xffffffff
450c23: ret 
450c24: nop word ptr cs:[rax + rax]
450c2e: nop 
450c30: endbr64 
450c34: mov r8d, edi
450c37: mov edi, esi
450c39: mov rsi, rdx
450c3c: cmp r8d, 1
450c40: ja 0x450c70
450c42: mov eax, 5
450c47: syscall 
450c49: cmp rax, -0x1000
450c4f: ja 0x450c58
450c51: ret 
450c52: nop word ptr [rax + rax]
450c58: mov rdx, 0xffffffffffffffc0
450c5f: neg eax
450c61: mov dword ptr fs:[rdx], eax
450c64: mov eax, 0xffffffff
450c69: ret 
450c6a: nop word ptr [rax + rax]
450c70: mov rax, 0xffffffffffffffc0
450c77: mov dword ptr fs:[rax], 0x16
450c7e: mov eax, 0xffffffff
450c83: ret 
450c84: nop word ptr cs:[rax + rax]
450c8e: nop 
450c90: endbr64 
450c94: push r12
450c96: mov r10d, esi
450c99: mov r12d, esi
450c9c: push rbp
450c9d: mov rbp, rdi
450ca0: sub rsp, 0x68
450ca4: mov qword ptr [rsp + 0x40], rdx
450ca9: mov rax, qword ptr fs:[0x28]
450cb2: mov qword ptr [rsp + 0x28], rax
450cb7: xor eax, eax
450cb9: and r10d, 0x40
450cbd: jne 0x450d18
450cbf: mov eax, esi
450cc1: and eax, 0x410000
450cc6: cmp eax, 0x410000
450ccb: je 0x450d18
450ccd: mov eax, dword ptr fs:[0x18]
450cd5: test eax, eax
450cd7: jne 0x450d40
450cd9: mov edx, r12d
450cdc: mov rsi, rbp
450cdf: mov edi, 0xffffff9c
450ce4: mov eax, 0x101
450ce9: syscall 
450ceb: cmp rax, -0x1000
450cf1: ja 0x450d88
450cf7: mov rcx, qword ptr [rsp + 0x28]
450cfc: xor rcx, qword ptr fs:[0x28]
450d05: jne 0x450db1
450d0b: add rsp, 0x68
450d0f: pop rbp
450d10: pop r12
450d12: ret 
450d13: nop dword ptr [rax + rax]
450d18: lea rax, [rsp + 0x80]
450d20: mov dword ptr [rsp + 0x10], 0x10
450d28: mov r10d, dword ptr [rsp + 0x40]
450d2d: mov qword ptr [rsp + 0x18], rax
450d32: lea rax, [rsp + 0x30]
450d37: mov qword ptr [rsp + 0x20], rax
450d3c: jmp 0x450ccd
450d3e: nop 
450d40: mov dword ptr [rsp + 0xc], r10d
450d45: call 0x4756b0
450d4a: mov r10d, dword ptr [rsp + 0xc]
450d4f: mov edx, r12d
450d52: mov rsi, rbp
450d55: mov r8d, eax
450d58: mov edi, 0xffffff9c
450d5d: mov eax, 0x101
450d62: syscall 
450d64: cmp rax, -0x1000
450d6a: ja 0x450d9e
450d6c: mov edi, r8d
450d6f: mov dword ptr [rsp + 0xc], eax
450d73: call 0x475710
450d78: mov eax, dword ptr [rsp + 0xc]
450d7c: jmp 0x450cf7
450d81: nop dword ptr [rax]
450d88: mov rdx, 0xffffffffffffffc0
450d8f: neg eax
450d91: mov dword ptr fs:[rdx], eax
450d94: mov eax, 0xffffffff
450d99: jmp 0x450cf7
450d9e: mov rdx, 0xffffffffffffffc0
450da5: neg eax
450da7: mov dword ptr fs:[rdx], eax
450daa: mov eax, 0xffffffff
450daf: jmp 0x450d6c
450db1: call 0x4547a0
450db6: nop word ptr cs:[rax + rax]
450dc0: endbr64 
450dc4: mov eax, dword ptr fs:[0x18]
450dcc: test eax, eax
450dce: jne 0x450de0
450dd0: syscall 
450dd2: cmp rax, -0x1000
450dd8: ja 0x450e30
450dda: ret 
450ddb: nop dword ptr [rax + rax]
450de0: sub rsp, 0x28
450de4: mov qword ptr [rsp + 0x18], rdx
450de9: mov qword ptr [rsp + 0x10], rsi
450dee: mov dword ptr [rsp + 8], edi
450df2: call 0x4756b0
450df7: mov rdx, qword ptr [rsp + 0x18]
450dfc: mov rsi, qword ptr [rsp + 0x10]
450e01: mov r8d, eax
450e04: mov edi, dword ptr [rsp + 8]
450e08: xor eax, eax
450e0a: syscall 
450e0c: cmp rax, -0x1000
450e12: ja 0x450e44
450e14: mov edi, r8d
450e17: mov qword ptr [rsp + 8], rax
450e1c: call 0x475710
450e21: mov rax, qword ptr [rsp + 8]
450e26: add rsp, 0x28
450e2a: ret 
450e2b: nop dword ptr [rax + rax]
450e30: mov rdx, 0xffffffffffffffc0
450e37: neg eax
450e39: mov dword ptr fs:[rdx], eax
450e3c: mov rax, 0xffffffffffffffff
450e43: ret 
450e44: mov rdx, 0xffffffffffffffc0
450e4b: neg eax
450e4d: mov dword ptr fs:[rdx], eax
450e50: mov rax, 0xffffffffffffffff
450e57: jmp 0x450e14
450e59: nop dword ptr [rax]
450e60: endbr64 
450e64: mov eax, dword ptr fs:[0x18]
450e6c: test eax, eax
450e6e: jne 0x450e80
450e70: mov eax, 1
450e75: syscall 
450e77: cmp rax, -0x1000
450e7d: ja 0x450ed0
450e7f: ret 
450e80: sub rsp, 0x28
450e84: mov qword ptr [rsp + 0x18], rdx
450e89: mov qword ptr [rsp + 0x10], rsi
450e8e: mov dword ptr [rsp + 8], edi
450e92: call 0x4756b0
450e97: mov rdx, qword ptr [rsp + 0x18]
450e9c: mov rsi, qword ptr [rsp + 0x10]
450ea1: mov r8d, eax
450ea4: mov edi, dword ptr [rsp + 8]
450ea8: mov eax, 1
450ead: syscall 
450eaf: cmp rax, -0x1000
450eb5: ja 0x450ee4
450eb7: mov edi, r8d
450eba: mov qword ptr [rsp + 8], rax
450ebf: call 0x475710
450ec4: mov rax, qword ptr [rsp + 8]
450ec9: add rsp, 0x28
450ecd: ret 
450ece: nop 
450ed0: mov rdx, 0xffffffffffffffc0
450ed7: neg eax
450ed9: mov dword ptr fs:[rdx], eax
450edc: mov rax, 0xffffffffffffffff
450ee3: ret 
450ee4: mov rdx, 0xffffffffffffffc0
450eeb: neg eax
450eed: mov dword ptr fs:[rdx], eax
450ef0: mov rax, 0xffffffffffffffff
450ef7: jmp 0x450eb7
450ef9: nop dword ptr [rax]
450f00: endbr64 
450f04: mov eax, 8
450f09: syscall 
450f0b: cmp rax, -0x1000
450f11: ja 0x450f18
450f13: ret 
450f14: nop dword ptr [rax]
450f18: mov rdx, 0xffffffffffffffc0
450f1f: neg eax
450f21: mov dword ptr fs:[rdx], eax
450f24: mov rax, 0xffffffffffffffff
450f2b: ret 
450f2c: nop dword ptr [rax]
450f30: endbr64 
450f34: mov eax, dword ptr fs:[0x18]
450f3c: test eax, eax
450f3e: jne 0x450f50
450f40: mov eax, 3
450f45: syscall 
450f47: cmp rax, -0x1000
450f4d: ja 0x450f90
450f4f: ret 
450f50: sub rsp, 0x18
450f54: mov dword ptr [rsp + 0xc], edi
450f58: call 0x4756b0
450f5d: mov edi, dword ptr [rsp + 0xc]
450f61: mov r8d, eax
450f64: mov eax, 3
450f69: syscall 
450f6b: cmp rax, -0x1000
450f71: ja 0x450fa2
450f73: mov edi, r8d
450f76: mov dword ptr [rsp + 0xc], eax
450f7a: call 0x475710
450f7f: mov eax, dword ptr [rsp + 0xc]
450f83: add rsp, 0x18
450f87: ret 
450f88: nop dword ptr [rax + rax]
450f90: mov rdx, 0xffffffffffffffc0
450f97: neg eax
450f99: mov dword ptr fs:[rdx], eax
450f9c: mov eax, 0xffffffff
450fa1: ret 
450fa2: mov rdx, 0xffffffffffffffc0
450fa9: neg eax
450fab: mov dword ptr fs:[rdx], eax
450fae: mov eax, 0xffffffff
450fb3: jmp 0x450f73
450fb5: nop word ptr cs:[rax + rax]
450fbf: nop 
450fc0: endbr64 
450fc4: push r15
450fc6: mov r15, rdi
450fc9: push r14
450fcb: push r13
450fcd: push r12
450fcf: push rbp
450fd0: push rbx
450fd1: mov rbx, rsi
450fd4: sub rsp, 0x108
450fdb: mov rax, qword ptr fs:[0x28]
450fe4: mov qword ptr [rsp + 0xf8], rax
450fec: xor eax, eax
450fee: test rsi, rsi
450ff1: jne 0x451030
450ff3: test rdi, rdi
450ff6: jne 0x451298
450ffc: call 0x451b30
451001: mov esi, 0x1000
451006: cmp eax, 0x1000
45100b: cmovge esi, eax
45100e: movsxd rsi, esi
451011: mov rdi, rsi
451014: mov qword ptr [rsp], rsi
451018: call 0x426410
45101d: mov rsi, qword ptr [rsp]
451021: test rax, rax
451024: mov rbp, rax
451027: jne 0x451038
451029: jmp 0x451264
45102e: nop 
451030: test rdi, rdi
451033: je 0x451011
451035: mov rbp, rdi
451038: mov rdi, rbp
45103b: mov eax, 0x4f
451040: syscall 
451042: cmp rax, -0x1000
451048: ja 0x451568
45104e: test eax, eax
451050: jle 0x451238
451056: mov rdx, r15
451059: or rdx, rbx
45105c: cmp byte ptr [rbp], 0x2f
451060: je 0x451530
451066: mov r14, 0xffffffffffffffc0
45106d: test r15, r15
451070: sete byte ptr [rsp + 0x3a]
451075: test rdx, rdx
451078: je 0x4514c8
45107e: cmp rbx, 1
451082: je 0x4515a8
451088: test rbx, rbx
45108b: je 0x4512b0
451091: mov eax, dword ptr fs:[r14]
451095: mov qword ptr [rsp + 0x18], rbx
45109a: mov r15, rbp
45109d: mov dword ptr [rsp + 0x3c], eax
4510a1: mov rax, qword ptr [rsp + 0x18]
4510a6: lea r13, [rsp + 0x60]
4510ab: mov edi, 1
4510b0: lea rsi, [rip + 0x47e5a]
4510b7: mov rdx, r13
4510ba: lea r12, [rbp + rax]
4510bf: mov byte ptr [r12 - 1], 0
4510c5: call 0x478080
4510ca: test eax, eax
4510cc: js 0x451548
4510d2: mov rax, qword ptr [rsp + 0x60]
4510d7: mov rcx, qword ptr [rsp + 0x68]
4510dc: mov rdx, r13
4510df: lea rsi, [rip + 0x49856]
4510e6: mov edi, 1
4510eb: mov qword ptr [rsp + 0x10], r13
4510f0: mov qword ptr [rsp], rax
4510f4: mov qword ptr [rsp + 8], rcx
4510f9: call 0x478080
4510fe: test eax, eax
451100: js 0x451548
451106: lea rdi, [r12 - 1]
45110b: mov rsi, qword ptr [rsp + 0x68]
451110: mov qword ptr [rsp + 0x40], rdi
451115: mov rdi, qword ptr [rsp + 0x60]
45111a: cmp qword ptr [rsp], rdi
45111e: mov qword ptr [rsp + 0x50], rsi
451123: setne dl
451126: cmp qword ptr [rsp + 8], rsi
45112b: mov qword ptr [rsp + 0x48], rdi
451130: setne al
451133: mov ecx, edx
451135: or cl, al
451137: mov byte ptr [rsp + 0x3b], cl
45113b: je 0x451689
451141: mov qword ptr [rsp + 0x20], rbp
451146: xor r12d, r12d
451149: mov r13d, 0xffffff9c
45114f: mov qword ptr [rsp + 0x30], r15
451154: mov qword ptr [rsp + 0x28], rbx
451159: mov rbx, qword ptr [rsp + 0x10]
45115e: mov edi, r13d
451161: mov edx, 0x80000
451166: lea rsi, [rip + 0x47da3]
45116d: xor eax, eax
45116f: call 0x451950
451174: mov r13d, eax
451177: test eax, eax
451179: js 0x45160a
45117f: mov rdx, rbx
451182: mov esi, eax
451184: mov edi, 1
451189: call 0x450c30
45118e: test eax, eax
451190: js 0x451630
451196: test r12, r12
451199: je 0x4511ab
45119b: mov rdi, r12
45119e: call 0x477d50
4511a3: test eax, eax
4511a5: jne 0x4515e4
4511ab: mov rax, qword ptr [rsp + 0x60]
4511b0: mov edi, r13d
4511b3: mov qword ptr [rsp + 0x10], rax
4511b8: mov rax, qword ptr [rsp + 0x68]
4511bd: mov qword ptr [rsp + 0x58], rax
4511c2: call 0x477f50
4511c7: mov r12, rax
4511ca: test rax, rax
4511cd: je 0x4515e4
4511d3: movzx r15d, byte ptr [rsp + 0x3b]
4511d9: nop dword ptr [rax]
4511e0: mov dword ptr fs:[r14], 0
4511e8: mov rdi, r12
4511eb: call 0x477e30
4511f0: test rax, rax
4511f3: je 0x4512c0
4511f9: test byte ptr [rax + 0x12], 0xfb
4511fd: jne 0x4511e0
4511ff: cmp byte ptr [rax + 0x13], 0x2e
451203: je 0x451448
451209: mov rdx, qword ptr [rsp]
45120d: cmp qword ptr [rsp + 0x10], rdx
451212: sete dl
451215: and dl, r15b
451218: je 0x4512e8
45121e: mov rcx, qword ptr [rsp + 8]
451223: cmp qword ptr [rax], rcx
451226: je 0x4512e8
45122c: mov r15d, edx
45122f: jmp 0x4511e0
451231: nop dword ptr [rax]
451238: mov r14, 0xffffffffffffffc0
45123f: je 0x451558
451245: mov eax, dword ptr fs:[r14]
451249: cmp eax, 0x24
45124c: je 0x451558
451252: cmp eax, 0x22
451255: je 0x451500
45125b: test r15, r15
45125e: je 0x451580
451264: xor r15d, r15d
451267: mov rax, qword ptr [rsp + 0xf8]
45126f: xor rax, qword ptr fs:[0x28]
451278: jne 0x4516ea
45127e: add rsp, 0x108
451285: mov rax, r15
451288: pop rbx
451289: pop rbp
45128a: pop r12
45128c: pop r13
45128e: pop r14
451290: pop r15
451292: ret 
451293: nop dword ptr [rax + rax]
451298: mov rax, 0xffffffffffffffc0
45129f: xor r15d, r15d
4512a2: mov dword ptr fs:[rax], 0x16
4512a9: jmp 0x451267
4512ab: nop dword ptr [rax + rax]
4512b0: mov dword ptr fs:[r14], 0x16
4512b8: jmp 0x451264
4512ba: nop word ptr [rax + rax]
4512c0: mov edx, dword ptr fs:[r14]
4512c4: test edx, edx
4512c6: jne 0x4515d0
4512cc: test r15b, r15b
4512cf: je 0x451468
4512d5: mov rdi, r12
4512d8: xor r15d, r15d
4512db: call 0x477d80
4512e0: jmp 0x4511e0
4512e5: nop dword ptr [rax]
4512e8: lea rbp, [rax + 0x13]
4512ec: mov r8d, 0x100
4512f2: mov rcx, rbx
4512f5: mov esi, r13d
4512f8: mov rdx, rbp
4512fb: mov edi, 1
451300: call 0x4780e0
451305: test eax, eax
451307: js 0x4511e0
45130d: mov eax, dword ptr [rsp + 0x78]
451311: and eax, 0xf000
451316: cmp eax, 0x4000
45131b: jne 0x4511e0
451321: mov rax, qword ptr [rsp]
451325: cmp qword ptr [rsp + 0x60], rax
45132a: jne 0x4511e0
451330: mov rax, qword ptr [rsp + 8]
451335: cmp qword ptr [rsp + 0x68], rax
45133a: jne 0x4511e0
451340: mov rdi, rbp
451343: call 0x401180
451348: mov rdx, qword ptr [rsp + 0x40]
45134d: mov rdi, qword ptr [rsp + 0x20]
451352: mov r15, rax
451355: sub rdx, rdi
451358: cmp rax, rdx
45135b: mov qword ptr [rsp + 8], rdx
451360: jb 0x4513e7
451366: cmp qword ptr [rsp + 0x28], 0
45136c: jne 0x451707
451372: mov rax, qword ptr [rsp + 0x18]
451377: cmp r15, rax
45137a: cmovae rax, r15
45137e: mov r8, rax
451381: add r8, rax
451384: mov rsi, r8
451387: mov qword ptr [rsp], r8
45138b: call 0x427100
451390: mov r8, qword ptr [rsp]
451394: mov rdx, qword ptr [rsp + 8]
451399: test rax, rax
45139c: je 0x4516ef
4513a2: mov rdi, r8
4513a5: mov r10, qword ptr [rsp + 0x20]
4513aa: lea rsi, [rax + rdx]
4513ae: mov qword ptr [rsp], rax
4513b2: add r10, qword ptr [rsp + 0x18]
4513b7: sub r10, qword ptr [rsp + 0x40]
4513bc: mov qword ptr [rsp + 8], r8
4513c1: sub rdi, r10
4513c4: mov rdx, r10
4513c7: add rdi, rax
4513ca: call 0x401060
4513cf: mov r8, qword ptr [rsp + 8]
4513d4: mov rcx, qword ptr [rsp]
4513d8: mov qword ptr [rsp + 0x40], rax
4513dd: mov qword ptr [rsp + 0x18], r8
4513e2: mov qword ptr [rsp + 0x20], rcx
4513e7: mov rcx, qword ptr [rsp + 0x40]
4513ec: mov rdx, r15
4513ef: mov rsi, rbp
4513f2: sub rcx, r15
4513f5: mov rdi, rcx
4513f8: call 0x401060
4513fd: mov rcx, rax
451400: lea rax, [rax - 1]
451404: mov byte ptr [rcx - 1], 0x2f
451408: mov rcx, qword ptr [rsp + 0x10]
45140d: mov qword ptr [rsp + 0x40], rax
451412: cmp qword ptr [rsp + 0x48], rcx
451417: jne 0x451429
451419: mov rcx, qword ptr [rsp + 0x58]
45141e: cmp qword ptr [rsp + 0x50], rcx
451423: je 0x451660
451429: mov rax, qword ptr [rsp + 0x58]
45142e: mov qword ptr [rsp + 8], rax
451433: mov rax, qword ptr [rsp + 0x10]
451438: mov qword ptr [rsp], rax
45143c: jmp 0x45115e
451441: nop dword ptr [rax]
451448: cmp byte ptr [rax + 0x14], 0
45144c: je 0x4511e0
451452: cmp word ptr [rax + 0x14], 0x2e
451457: jne 0x451209
45145d: jmp 0x4511e0
451462: nop word ptr [rax + rax]
451468: mov rbp, qword ptr [rsp + 0x20]
45146d: mov r15, qword ptr [rsp + 0x30]
451472: mov edx, 2
451477: mov rbx, qword ptr [rsp + 0x28]
45147c: mov dword ptr fs:[r14], 2
451484: mov rdi, r12
451487: mov dword ptr [rsp], edx
45148a: call 0x477d50
45148f: mov edx, dword ptr [rsp]
451492: test r15, r15
451495: je 0x451590
45149b: mov dword ptr fs:[r14], edx
45149f: test rbx, rbx
4514a2: je 0x451264
4514a8: cmp byte ptr [rsp + 0x3a], 0
4514ad: je 0x451264
4514b3: mov rdi, r15
4514b6: xor r15d, r15d
4514b9: call 0x426a00
4514be: jmp 0x451267
4514c3: nop dword ptr [rax + rax]
4514c8: mov rdi, rbp
4514cb: call 0x426a00
4514d0: mov eax, dword ptr fs:[r14]
4514d4: mov edi, 0x1001
4514d9: mov dword ptr [rsp + 0x3c], eax
4514dd: call 0x426410
4514e2: mov rbp, rax
4514e5: test rax, rax
4514e8: je 0x451264
4514ee: mov qword ptr [rsp + 0x18], 0x1001
4514f7: xor r15d, r15d
4514fa: jmp 0x4510a1
4514ff: nop 
451500: or rbx, r15
451503: jne 0x45125b
451509: lea rcx, [rip + 0x47a60]
451510: mov edx, 0x79
451515: lea rsi, [rip + 0x479fc]
45151c: lea rdi, [rip + 0x47a1d]
451523: call 0x4032a0
451528: nop dword ptr [rax + rax]
451530: test rdx, rdx
451533: je 0x4515c0
451539: test r15, r15
45153c: cmove r15, rbp
451540: jmp 0x451267
451545: nop dword ptr [rax]
451548: mov edx, dword ptr fs:[r14]
45154c: jmp 0x451492
451551: nop dword ptr [rax]
451558: mov rdx, r15
45155b: or rdx, rbx
45155e: jmp 0x45106d
451563: nop dword ptr [rax + rax]
451568: mov r14, 0xffffffffffffffc0
45156f: neg eax
451571: mov dword ptr fs:[r14], eax
451575: jmp 0x451249
45157a: nop word ptr [rax + rax]
451580: mov rdi, rbp
451583: call 0x426a00
451588: jmp 0x451267
45158d: nop dword ptr [rax]
451590: mov rdi, rbp
451593: mov dword ptr [rsp], edx
451596: call 0x426a00
45159b: mov edx, dword ptr [rsp]
45159e: jmp 0x45149b
4515a3: nop dword ptr [rax + rax]
4515a8: mov dword ptr fs:[r14], 0x22
4515b0: mov r15, rbp
4515b3: jmp 0x45149f
4515b8: nop dword ptr [rax + rax]
4515c0: movsxd rsi, eax
4515c3: call 0x427100
4515c8: mov r15, rax
4515cb: jmp 0x451539
4515d0: mov rbp, qword ptr [rsp + 0x20]
4515d5: mov r15, qword ptr [rsp + 0x30]
4515da: mov rbx, qword ptr [rsp + 0x28]
4515df: jmp 0x451484
4515e4: mov rbp, qword ptr [rsp + 0x20]
4515e9: mov r15, qword ptr [rsp + 0x30]
4515ee: mov rbx, qword ptr [rsp + 0x28]
4515f3: mov edx, dword ptr fs:[r14]
4515f7: mov edi, r13d
4515fa: mov dword ptr [rsp], edx
4515fd: call 0x451730
451602: mov edx, dword ptr [rsp]
451605: jmp 0x451492
45160a: mov rbp, qword ptr [rsp + 0x20]
45160f: mov r15, qword ptr [rsp + 0x30]
451614: mov rbx, qword ptr [rsp + 0x28]
451619: mov edx, dword ptr fs:[r14]
45161d: test r12, r12
451620: je 0x451492
451626: jmp 0x451484
45162b: nop dword ptr [rax + rax]
451630: mov rbp, qword ptr [rsp + 0x20]
451635: mov r15, qword ptr [rsp + 0x30]
45163a: mov rbx, qword ptr [rsp + 0x28]
45163f: mov edx, dword ptr fs:[r14]
451643: test r12, r12
451646: je 0x4515f7
451648: mov rdi, r12
45164b: mov dword ptr [rsp], edx
45164e: call 0x477d50
451653: mov edx, dword ptr [rsp]
451656: jmp 0x4515f7
451658: nop dword ptr [rax + rax]
451660: mov rdi, r12
451663: mov rbp, qword ptr [rsp + 0x20]
451668: mov r15, qword ptr [rsp + 0x30]
45166d: mov rbx, qword ptr [rsp + 0x28]
451672: call 0x477d50
451677: test eax, eax
451679: jne 0x451548
45167f: mov rax, qword ptr [rsp + 0x18]
451684: lea r12, [rbp + rax]
451689: mov rax, qword ptr [rsp + 0x18]
45168e: lea rax, [rbp + rax - 1]
451693: cmp qword ptr [rsp + 0x40], rax
451698: je 0x4516d6
45169a: mov rsi, qword ptr [rsp + 0x40]
45169f: mov rdi, rbp
4516a2: sub r12, rsi
4516a5: mov rdx, r12
4516a8: call 0x401040
4516ad: test rbx, rbx
4516b0: je 0x4516c6
4516b2: mov eax, dword ptr [rsp + 0x3c]
4516b6: test r15, r15
4516b9: cmove r15, rbp
4516bd: mov dword ptr fs:[r14], eax
4516c1: jmp 0x451267
4516c6: mov rsi, r12
4516c9: mov rdi, rbp
4516cc: call 0x427100
4516d1: mov r15, rax
4516d4: jmp 0x4516b2
4516d6: mov rax, qword ptr [rsp + 0x40]
4516db: mov byte ptr [rax - 1], 0x2f
4516df: sub rax, 1
4516e3: mov qword ptr [rsp + 0x40], rax
4516e8: jmp 0x45169a
4516ea: call 0x4547a0
4516ef: mov rbp, qword ptr [rsp + 0x20]
4516f4: mov r15, qword ptr [rsp + 0x30]
4516f9: mov rbx, qword ptr [rsp + 0x28]
4516fe: mov edx, dword ptr fs:[r14]
451702: jmp 0x451484
451707: mov rbp, qword ptr [rsp + 0x20]
45170c: mov r15, qword ptr [rsp + 0x30]
451711: mov edx, 0x22
451716: mov rbx, qword ptr [rsp + 0x28]
45171b: mov dword ptr fs:[r14], 0x22
451723: jmp 0x451484
451728: nop dword ptr [rax + rax]
451730: endbr64 
451734: mov eax, 3
451739: syscall 
45173b: cmp rax, -0x1000
451741: ja 0x451748
451743: ret 
451744: nop dword ptr [rax]
451748: mov rdx, 0xffffffffffffffc0
45174f: neg eax
451751: mov dword ptr fs:[rdx], eax
451754: mov eax, 0xffffffff
451759: ret 
45175a: nop word ptr [rax + rax]
451760: endbr64 
451764: sub rsp, 0x68
451768: mov qword ptr [rsp + 0x40], rdx
45176d: mov rax, qword ptr fs:[0x28]
451776: mov qword ptr [rsp + 0x28], rax
45177b: xor eax, eax
45177d: lea rax, [rsp + 0x70]
451782: mov dword ptr [rsp + 0x10], 0x10
45178a: mov qword ptr [rsp + 0x18], rax
45178f: lea rax, [rsp + 0x30]
451794: mov qword ptr [rsp + 0x20], rax
451799: cmp esi, 9
45179c: je 0x4517c8
45179e: mov eax, 0x48
4517a3: syscall 
4517a5: cmp rax, -0x1000
4517ab: ja 0x4517f0
4517ad: mov rcx, qword ptr [rsp + 0x28]
4517b2: xor rcx, qword ptr fs:[0x28]
4517bb: jne 0x451803
4517bd: add rsp, 0x68
4517c1: ret 
4517c2: nop word ptr [rax + rax]
4517c8: lea rdx, [rsp + 8]
4517cd: mov esi, 0x10
4517d2: mov eax, 0x48
4517d7: syscall 
4517d9: cmp eax, 0xfffff000
4517de: ja 0x4517f0
4517e0: cmp dword ptr [rsp + 8], 2
4517e5: mov eax, dword ptr [rsp + 0xc]
4517e9: jne 0x4517ad
4517eb: neg eax
4517ed: jmp 0x4517ad
4517ef: nop 
4517f0: mov rdx, 0xffffffffffffffc0
4517f7: neg eax
4517f9: mov dword ptr fs:[rdx], eax
4517fc: mov eax, 0xffffffff
451801: jmp 0x4517ad
451803: call 0x4547a0
451808: nop dword ptr [rax + rax]
451810: endbr64 
451814: sub rsp, 0x18
451818: mov rax, qword ptr fs:[0x28]
451821: mov qword ptr [rsp + 8], rax
451826: xor eax, eax
451828: cmp esi, 9
45182b: je 0x451858
45182d: mov eax, 0x48
451832: syscall 
451834: cmp rax, -0x1000
45183a: ja 0x451880
45183c: mov rcx, qword ptr [rsp + 8]
451841: xor rcx, qword ptr fs:[0x28]
45184a: jne 0x451893
45184c: add rsp, 0x18
451850: ret 
451851: nop dword ptr [rax]
451858: mov rdx, rsp
45185b: mov esi, 0x10
451860: mov eax, 0x48
451865: syscall 
451867: cmp eax, 0xfffff000
45186c: ja 0x451880
45186e: cmp dword ptr [rsp], 2
451872: mov eax, dword ptr [rsp + 4]
451876: jne 0x45183c
451878: neg eax
45187a: jmp 0x45183c
45187c: nop dword ptr [rax]
451880: mov rdx, 0xffffffffffffffc0
451887: neg eax
451889: mov dword ptr fs:[rdx], eax
45188c: mov eax, 0xffffffff
451891: jmp 0x45183c
451893: call 0x4547a0
451898: nop dword ptr [rax + rax]
4518a0: endbr64 
4518a4: sub rsp, 0x58
4518a8: mov r10d, esi
4518ab: mov r9, rdi
4518ae: mov r8d, esi
4518b1: mov qword ptr [rsp + 0x30], rdx
4518b6: mov rax, qword ptr fs:[0x28]
4518bf: mov qword ptr [rsp + 0x18], rax
4518c4: xor eax, eax
4518c6: and r10d, 0x40
4518ca: jne 0x451910
4518cc: mov eax, esi
4518ce: and eax, 0x410000
4518d3: cmp eax, 0x410000
4518d8: je 0x451910
4518da: mov edx, r8d
4518dd: mov rsi, r9
4518e0: mov edi, 0xffffff9c
4518e5: mov eax, 0x101
4518ea: syscall 
4518ec: cmp rax, -0x1000
4518f2: ja 0x451938
4518f4: mov rcx, qword ptr [rsp + 0x18]
4518f9: xor rcx, qword ptr fs:[0x28]
451902: jne 0x45194b
451904: add rsp, 0x58
451908: ret 
451909: nop dword ptr [rax]
451910: lea rax, [rsp + 0x60]
451915: mov dword ptr [rsp], 0x10
45191c: mov r10d, dword ptr [rsp + 0x30]
451921: mov qword ptr [rsp + 8], rax
451926: lea rax, [rsp + 0x20]
45192b: mov qword ptr [rsp + 0x10], rax
451930: jmp 0x4518da
451932: nop word ptr [rax + rax]
451938: mov rdx, 0xffffffffffffffc0
45193f: neg eax
451941: mov dword ptr fs:[rdx], eax
451944: mov eax, 0xffffffff
451949: jmp 0x4518f4
45194b: call 0x4547a0
451950: endbr64 
451954: sub rsp, 0x58
451958: mov qword ptr [rsp + 0x38], rcx
45195d: mov rax, qword ptr fs:[0x28]
451966: mov qword ptr [rsp + 0x18], rax
45196b: xor eax, eax
45196d: test dl, 0x40
451970: jne 0x4519b0
451972: mov eax, edx
451974: xor r10d, r10d
451977: and eax, 0x410000
45197c: cmp eax, 0x410000
451981: je 0x4519b0
451983: mov eax, 0x101
451988: syscall 
45198a: cmp rax, -0x1000
451990: ja 0x4519d8
451992: mov rcx, qword ptr [rsp + 0x18]
451997: xor rcx, qword ptr fs:[0x28]
4519a0: jne 0x4519eb
4519a2: add rsp, 0x58
4519a6: ret 
4519a7: nop word ptr [rax + rax]
4519b0: lea rax, [rsp + 0x60]
4519b5: mov dword ptr [rsp], 0x18
4519bc: mov r10d, dword ptr [rsp + 0x38]
4519c1: mov qword ptr [rsp + 8], rax
4519c6: lea rax, [rsp + 0x20]
4519cb: mov qword ptr [rsp + 0x10], rax
4519d0: jmp 0x451983
4519d2: nop word ptr [rax + rax]
4519d8: mov rdx, 0xffffffffffffffc0
4519df: neg eax
4519e1: mov dword ptr fs:[rdx], eax
4519e4: mov eax, 0xffffffff
4519e9: jmp 0x451992
4519eb: call 0x4547a0
4519f0: endbr64 
4519f4: xor eax, eax
4519f6: syscall 
4519f8: cmp rax, -0x1000
4519fe: ja 0x451a08
451a00: ret 
451a01: nop dword ptr [rax]
451a08: mov rdx, 0xffffffffffffffc0
451a0f: neg eax
451a11: mov dword ptr fs:[rdx], eax
451a14: mov rax, 0xffffffffffffffff
451a1b: ret 
451a1c: nop dword ptr [rax]
451a20: endbr64 
451a24: mov eax, 1
451a29: syscall 
451a2b: cmp rax, -0x1000
451a31: ja 0x451a38
451a33: ret 
451a34: nop dword ptr [rax]
451a38: mov rdx, 0xffffffffffffffc0
451a3f: neg eax
451a41: mov dword ptr fs:[rdx], eax
451a44: mov rax, 0xffffffffffffffff
451a4b: ret 
451a4c: nop dword ptr [rax]
451a50: endbr64 
451a54: mov r10, rsi
451a57: xor edx, edx
451a59: mov esi, edi
451a5b: mov eax, 0x12e
451a60: xor edi, edi
451a62: syscall 
451a64: cmp rax, -0x1000
451a6a: ja 0x451a70
451a6c: ret 
451a6d: nop dword ptr [rax]
451a70: mov rdx, 0xffffffffffffffc0
451a77: neg eax
451a79: mov dword ptr fs:[rdx], eax
451a7c: mov eax, 0xffffffff
451a81: ret 
451a82: nop word ptr cs:[rax + rax]
451a8c: nop dword ptr [rax]
451a90: endbr64 
451a94: push r12
451a96: push rbx
451a97: mov rbx, rdi
451a9a: sub rsp, 8
451a9e: mov r12, qword ptr [rip + 0x71493]
451aa5: test r12, r12
451aa8: je 0x451af0
451aaa: mov eax, dword ptr [rip + 0x6fc18]
451ab0: test eax, eax
451ab2: jne 0x451af0
451ab4: test rbx, rbx
451ab7: je 0x451add
451ab9: jle 0x451b08
451abb: mov rax, r12
451abe: add rax, rbx
451ac1: setb al
451ac4: test al, al
451ac6: je 0x451b18
451ac8: mov rax, 0xffffffffffffffc0
451acf: mov dword ptr fs:[rax], 0xc
451ad6: mov r12, 0xffffffffffffffff
451add: add rsp, 8
451ae1: mov rax, r12
451ae4: pop rbx
451ae5: pop r12
451ae7: ret 
451ae8: nop dword ptr [rax + rax]
451af0: xor edi, edi
451af2: call 0x478260
451af7: mov r12, qword ptr [rip + 0x7143a]
451afe: test eax, eax
451b00: jns 0x451ab4
451b02: jmp 0x451ad6
451b04: nop dword ptr [rax]
451b08: mov rax, rbx
451b0b: neg rax
451b0e: cmp r12, rax
451b11: setb al
451b14: test al, al
451b16: jne 0x451ac8
451b18: lea rdi, [r12 + rbx]
451b1c: call 0x478260
451b21: test eax, eax
451b23: js 0x451ad6
451b25: add rsp, 8
451b29: mov rax, r12
451b2c: pop rbx
451b2d: pop r12
451b2f: ret 
451b30: endbr64 
451b34: mov rax, qword ptr [rip + 0x6f5dd]
451b3b: test rax, rax
451b3e: je 0x451b41
451b40: ret 
451b41: push rax
451b42: lea rcx, [rip + 0x47467]
451b49: mov edx, 0x1c
451b4e: lea rsi, [rip + 0x4742b]
451b55: lea rdi, [rip + 0x47462]
451b5c: call 0x4032a0
451b61: nop word ptr cs:[rax + rax]
451b6b: nop dword ptr [rax + rax]
451b70: endbr64 
451b74: sub rsp, 0x28
451b78: mov edi, 7
451b7d: mov rax, qword ptr fs:[0x28]
451b86: mov qword ptr [rsp + 0x18], rax
451b8b: xor eax, eax
451b8d: mov rsi, rsp
451b90: call 0x451a50
451b95: test eax, eax
451b97: mov eax, 0x100
451b9c: cmovns eax, dword ptr [rsp]
451ba0: mov rdx, qword ptr [rsp + 0x18]
451ba5: xor rdx, qword ptr fs:[0x28]
451bae: jne 0x451bb5
451bb0: add rsp, 0x28
451bb4: ret 
451bb5: call 0x4547a0
451bba: nop word ptr [rax + rax]
451bc0: endbr64 
451bc4: test r9d, 0xfff
451bcb: jne 0x451bf8
451bcd: push rbp
451bce: mov rbp, rdi
451bd1: push rbx
451bd2: mov ebx, ecx
451bd4: test rdi, rdi
451bd7: je 0x451c10
451bd9: mov r10d, ebx
451bdc: mov rdi, rbp
451bdf: mov eax, 9
451be4: syscall 
451be6: cmp rax, -0x1000
451bec: ja 0x451c50
451bee: pop rbx
451bef: pop rbp
451bf0: ret 
451bf1: nop dword ptr [rax]
451bf8: mov rax, 0xffffffffffffffc0
451bff: mov dword ptr fs:[rax], 0x16
451c06: mov rax, 0xffffffffffffffff
451c0d: ret 
451c0e: nop 
451c10: test dl, 4
451c13: je 0x451bd9
451c15: test byte ptr [rip + 0x71169], 2
451c1c: je 0x451bd9
451c1e: mov r10d, ecx
451c21: mov ecx, 9
451c26: xor edi, edi
451c28: or r10d, 0x40
451c2c: mov eax, ecx
451c2e: syscall 
451c30: mov rdi, rax
451c33: cmp rax, -0x1000
451c39: jbe 0x451bee
451c3b: mov rax, 0xffffffffffffffc0
451c42: neg edi
451c44: mov dword ptr fs:[rax], edi
451c47: jmp 0x451bd9
451c49: nop dword ptr [rax]
451c50: mov rdx, 0xffffffffffffffc0
451c57: neg eax
451c59: mov dword ptr fs:[rdx], eax
451c5c: mov rax, 0xffffffffffffffff
451c63: jmp 0x451bee
451c65: nop word ptr cs:[rax + rax]
451c6f: nop 
451c70: endbr64 
451c74: mov eax, 0xb
451c79: syscall 
451c7b: cmp rax, -0xfff
451c81: jae 0x451c84
451c83: ret 
451c84: mov rcx, 0xffffffffffffffc0
451c8b: neg eax
451c8d: mov dword ptr fs:[rcx], eax
451c90: or rax, 0xffffffffffffffff
451c94: ret 
451c95: nop word ptr cs:[rax + rax]
451c9f: nop 
451ca0: endbr64 
451ca4: mov eax, 0xa
451ca9: syscall 
451cab: cmp rax, -0xfff
451cb1: jae 0x451cb4
451cb3: ret 
451cb4: mov rcx, 0xffffffffffffffc0
451cbb: neg eax
451cbd: mov dword ptr fs:[rcx], eax
451cc0: or rax, 0xffffffffffffffff
451cc4: ret 
451cc5: nop word ptr cs:[rax + rax]
451ccf: nop 
451cd0: endbr64 
451cd4: mov eax, 0x1c
451cd9: syscall 
451cdb: cmp rax, -0xfff
451ce1: jae 0x451ce4
451ce3: ret 
451ce4: mov rcx, 0xffffffffffffffc0
451ceb: neg eax
451ced: mov dword ptr fs:[rcx], eax
451cf0: or rax, 0xffffffffffffffff
451cf4: ret 
451cf5: nop word ptr cs:[rax + rax]
451cff: nop 
451d00: push r13
451d02: mov r13d, edx
451d05: push r12
451d07: mov r12, rsi
451d0a: push rbp
451d0b: mov rbp, rdi
451d0e: test qword ptr [rdi + 8], -2
451d16: jne 0x451d24
451d18: cmp qword ptr [rdi + 0x10], 0
451d1d: mov esi, 3
451d22: je 0x451d55
451d24: mov rdi, rbp
451d27: xor esi, esi
451d29: call r12
451d2c: mov rdi, qword ptr [rbp + 8]
451d30: and rdi, 0xfffffffffffffffe
451d34: jne 0x451d68
451d36: mov rdi, rbp
451d39: mov edx, r13d
451d3c: mov esi, 1
451d41: call r12
451d44: mov rdi, qword ptr [rbp + 0x10]
451d48: test rdi, rdi
451d4b: jne 0x451d80
451d4d: mov edx, r13d
451d50: mov esi, 2
451d55: mov rdi, rbp
451d58: mov rax, r12
451d5b: pop rbp
451d5c: pop r12
451d5e: pop r13
451d60: jmp rax
451d62: nop word ptr [rax + rax]
451d68: lea edx, [r13 + 1]
451d6c: mov rsi, r12
451d6f: call 0x451d00
451d74: jmp 0x451d36
451d76: nop word ptr cs:[rax + rax]
451d80: lea edx, [r13 + 1]
451d84: mov rsi, r12
451d87: call 0x451d00
451d8c: jmp 0x451d4d
451d8e: nop 
451d90: push r13
451d92: mov r13, rdx
451d95: push r12
451d97: mov r12, rsi
451d9a: push rbp
451d9b: mov rbp, rdi
451d9e: test qword ptr [rdi + 8], -2
451da6: jne 0x451db4
451da8: cmp qword ptr [rdi + 0x10], 0
451dad: mov esi, 3
451db2: je 0x451de5
451db4: mov rdi, rbp
451db7: xor esi, esi
451db9: call r12
451dbc: mov rdi, qword ptr [rbp + 8]
451dc0: and rdi, 0xfffffffffffffffe
451dc4: jne 0x451df8
451dc6: mov rdi, rbp
451dc9: mov rdx, r13
451dcc: mov esi, 1
451dd1: call r12
451dd4: mov rdi, qword ptr [rbp + 0x10]
451dd8: test rdi, rdi
451ddb: jne 0x451e08
451ddd: mov rdx, r13
451de0: mov esi, 2
451de5: mov rdi, rbp
451de8: mov rax, r12
451deb: pop rbp
451dec: pop r12
451dee: pop r13
451df0: jmp rax
451df2: nop word ptr [rax + rax]
451df8: mov rdx, r13
451dfb: mov rsi, r12
451dfe: call 0x451d90
451e03: jmp 0x451dc6
451e05: nop dword ptr [rax]
451e08: mov rdx, r13
451e0b: mov rsi, r12
451e0e: call 0x451d90
451e13: jmp 0x451ddd
451e15: nop word ptr cs:[rax + rax]
451e20: push rbp
451e21: mov rbp, rdi
451e24: push rbx
451e25: mov rbx, rsi
451e28: sub rsp, 8
451e2c: mov rdi, qword ptr [rdi + 8]
451e30: and rdi, 0xfffffffffffffffe
451e34: jne 0x451e58
451e36: mov rdi, qword ptr [rbp + 0x10]
451e3a: test rdi, rdi
451e3d: jne 0x451e66
451e3f: mov rdi, qword ptr [rbp]
451e43: call rbx
451e45: add rsp, 8
451e49: mov rdi, rbp
451e4c: pop rbx
451e4d: pop rbp
451e4e: jmp 0x426a00
451e53: nop dword ptr [rax + rax]
451e58: call 0x451e20
451e5d: mov rdi, qword ptr [rbp + 0x10]
451e61: test rdi, rdi
451e64: je 0x451e3f
451e66: mov rsi, rbx
451e69: call 0x451e20
451e6e: jmp 0x451e3f
451e70: endbr64 
451e74: push r15
451e76: push r14
451e78: push r13
451e7a: push r12
451e7c: push rbp
451e7d: push rbx
451e7e: sub rsp, 0x28
451e82: mov qword ptr [rsp + 8], rdx
451e87: test rsi, rsi
451e8a: je 0x4521d0
451e90: mov r15, rsi
451e93: mov rsi, qword ptr [rsi]
451e96: mov r13, rdi
451e99: mov rax, rsi
451e9c: and rax, 0xfffffffffffffffe
451ea0: je 0x452018
451ea6: and qword ptr [rax + 8], 0xfffffffffffffffe
451eab: xor ebx, ebx
451ead: xor ebp, ebp
451eaf: mov dword ptr [rsp + 0x1c], 0
451eb7: mov r12, rbx
451eba: mov qword ptr [rsp + 0x10], 0
451ec3: nop dword ptr [rax + rax]
451ec8: mov r14, rsi
451ecb: and r14, 0xfffffffffffffffe
451ecf: je 0x45225d
451ed5: mov rsi, qword ptr [r14]
451ed8: mov rax, qword ptr [rsp + 8]
451edd: mov rdi, r13
451ee0: call rax
451ee2: test eax, eax
451ee4: je 0x452160
451eea: mov rdx, qword ptr [r15]
451eed: and rdx, 0xfffffffffffffffe
451ef1: mov r10, qword ptr [rdx + 8]
451ef5: mov rsi, qword ptr [rdx + 0x10]
451ef9: mov rdi, r10
451efc: and rdi, 0xfffffffffffffffe
451f00: test rsi, rsi
451f03: je 0x451fe0
451f09: test rdi, rdi
451f0c: je 0x451fe0
451f12: test byte ptr [rsi + 8], 1
451f16: je 0x451fe0
451f1c: test byte ptr [rdi + 8], 1
451f20: je 0x451fe0
451f26: or r10, 1
451f2a: mov qword ptr [rdx + 8], r10
451f2e: and qword ptr [rsi + 8], 0xfffffffffffffffe
451f33: and qword ptr [rdi + 8], 0xfffffffffffffffe
451f38: test r12, r12
451f3b: je 0x451fe0
451f41: mov r10, qword ptr [r12]
451f45: and r10, 0xfffffffffffffffe
451f49: mov r11, qword ptr [r10 + 8]
451f4d: test r11b, 1
451f51: je 0x451fe0
451f57: mov rcx, qword ptr [rsp + 0x10]
451f5c: mov r8d, dword ptr [rsp + 0x1c]
451f61: mov rcx, qword ptr [rcx]
451f64: mov rbx, rcx
451f67: and rbx, 0xfffffffffffffffe
451f6b: test ebp, ebp
451f6d: setg r9b
451f71: test r8d, r8d
451f74: setg r8b
451f78: cmp r9b, r8b
451f7b: je 0x452190
451f81: or r11, 1
451f85: mov qword ptr [r10 + 8], r11
451f89: mov r11, rsi
451f8c: or qword ptr [rbx + 8], 1
451f91: and r11d, 1
451f95: and qword ptr [rdx + 8], 0xfffffffffffffffe
451f9a: test ebp, ebp
451f9c: js 0x452168
451fa2: mov qword ptr [r10 + 0x10], rdi
451fa6: mov rdi, qword ptr [rbx + 8]
451faa: mov qword ptr [rdx + 8], r10
451fae: and edi, 1
451fb1: or rsi, rdi
451fb4: mov qword ptr [rbx + 8], rsi
451fb8: or rbx, r11
451fbb: mov qword ptr [rdx + 0x10], rbx
451fbf: mov rcx, qword ptr [rsp + 0x10]
451fc4: mov rbx, qword ptr [rcx]
451fc7: mov rsi, rbx
451fca: mov qword ptr [rsp + 0x10], rbx
451fcf: and esi, 1
451fd2: or rdx, rsi
451fd5: mov qword ptr [rcx], rdx
451fd8: nop dword ptr [rax + rax]
451fe0: test eax, eax
451fe2: js 0x452130
451fe8: mov rsi, qword ptr [r14 + 0x10]
451fec: lea rdx, [r14 + 0x10]
451ff0: test rsi, -2
451ff7: je 0x452145
451ffd: mov dword ptr [rsp + 0x1c], ebp
452001: mov ebp, eax
452003: mov qword ptr [rsp + 0x10], r12
452008: mov r12, r15
45200b: mov r15, rdx
45200e: jmp 0x451ec8
452013: nop dword ptr [rax + rax]
452018: xor edx, edx
45201a: xor ebx, ebx
45201c: mov ebp, edx
45201e: mov r14, r15
452021: mov edi, 0x18
452026: mov qword ptr [rsp + 8], rsi
45202b: mov dword ptr [rsp + 0x10], edx
45202f: call 0x426410
452034: mov r12, rax
452037: test rax, rax
45203a: je 0x4521d0
452040: mov rsi, qword ptr [rsp + 8]
452045: movdqa xmm0, xmmword ptr [rip + 0x46f93]
45204d: and esi, 1
452050: or rsi, rax
452053: mov qword ptr [r15], rsi
452056: mov qword ptr [rax], r13
452059: movups xmmword ptr [rax + 8], xmm0
45205d: cmp r15, r14
452060: je 0x452115
452066: mov rax, qword ptr [r15]
452069: mov edx, dword ptr [rsp + 0x10]
45206d: and rax, 0xfffffffffffffffe
452071: mov rcx, qword ptr [rax + 8]
452075: mov rdi, qword ptr [rax + 0x10]
452079: mov r8, rcx
45207c: or rcx, 1
452080: and r8, 0xfffffffffffffffe
452084: test rdi, rdi
452087: mov qword ptr [rax + 8], rcx
45208b: je 0x452092
45208d: and qword ptr [rdi + 8], 0xfffffffffffffffe
452092: test r8, r8
452095: je 0x45209c
452097: and qword ptr [r8 + 8], 0xfffffffffffffffe
45209c: mov rcx, qword ptr [r14]
45209f: and rcx, 0xfffffffffffffffe
4520a3: mov rsi, qword ptr [rcx + 8]
4520a7: test sil, 1
4520ab: je 0x452115
4520ad: mov r10, qword ptr [rbx]
4520b0: mov r9, r10
4520b3: and r9, 0xfffffffffffffffe
4520b7: test edx, edx
4520b9: setg r13b
4520bd: test ebp, ebp
4520bf: setg r11b
4520c3: cmp r13b, r11b
4520c6: je 0x45220f
4520cc: or rsi, 1
4520d0: mov qword ptr [rcx + 8], rsi
4520d4: mov rsi, rdi
4520d7: or qword ptr [r9 + 8], 1
4520dc: and esi, 1
4520df: and qword ptr [rax + 8], 0xfffffffffffffffe
4520e4: test edx, edx
4520e6: js 0x4521d8
4520ec: mov rdx, qword ptr [r9 + 8]
4520f0: mov qword ptr [rcx + 0x10], r8
4520f4: mov qword ptr [rax + 8], rcx
4520f8: and edx, 1
4520fb: or rdi, rdx
4520fe: mov qword ptr [r9 + 8], rdi
452102: or r9, rsi
452105: mov qword ptr [rax + 0x10], r9
452109: mov rdx, qword ptr [rbx]
45210c: and edx, 1
45210f: or rax, rdx
452112: mov qword ptr [rbx], rax
452115: add rsp, 0x28
452119: mov rax, r12
45211c: pop rbx
45211d: pop rbp
45211e: pop r12
452120: pop r13
452122: pop r14
452124: pop r15
452126: ret 
452127: nop word ptr [rax + rax]
452130: mov rsi, qword ptr [r14 + 8]
452134: lea rdx, [r14 + 8]
452138: test rsi, -2
45213f: jne 0x451ffd
452145: mov rcx, rdx
452148: mov r14, r15
45214b: mov edx, eax
45214d: mov rbx, r12
452150: mov r15, rcx
452153: jmp 0x452021
452158: nop dword ptr [rax + rax]
452160: mov r12, r14
452163: jmp 0x452115
452165: nop dword ptr [rax]
452168: mov rcx, qword ptr [r10 + 8]
45216c: and ecx, 1
45216f: or rsi, rcx
452172: mov qword ptr [r10 + 8], rsi
452176: or r10, r11
452179: mov qword ptr [rdx + 0x10], r10
45217d: mov qword ptr [rbx + 0x10], rdi
452181: mov qword ptr [rdx + 8], rbx
452185: jmp 0x451fbf
45218a: nop word ptr [rax + rax]
452190: and ecx, 1
452193: and r11, 0xfffffffffffffffe
452197: mov rdx, rcx
45219a: mov rcx, qword ptr [rsp + 0x10]
45219f: or rdx, r10
4521a2: mov qword ptr [rcx], rdx
4521a5: mov qword ptr [r10 + 8], r11
4521a9: or qword ptr [rbx + 8], 1
4521ae: test ebp, ebp
4521b0: js 0x4521fa
4521b2: mov rdx, qword ptr [r10 + 8]
4521b6: mov rsi, rdx
4521b9: and edx, 1
4521bc: and rsi, 0xfffffffffffffffe
4521c0: mov qword ptr [rbx + 0x10], rsi
4521c4: or rbx, rdx
4521c7: mov qword ptr [r10 + 8], rbx
4521cb: jmp 0x451fe0
4521d0: xor r12d, r12d
4521d3: jmp 0x452115
4521d8: mov rdx, qword ptr [rcx + 8]
4521dc: and edx, 1
4521df: or rdi, rdx
4521e2: mov qword ptr [rcx + 8], rdi
4521e6: or rcx, rsi
4521e9: mov qword ptr [rax + 0x10], rcx
4521ed: mov qword ptr [r9 + 0x10], r8
4521f1: mov qword ptr [rax + 8], r9
4521f5: jmp 0x452109
4521fa: mov rdx, qword ptr [r10 + 0x10]
4521fe: or rdx, 1
452202: mov qword ptr [rbx + 8], rdx
452206: mov qword ptr [r10 + 0x10], rbx
45220a: jmp 0x451fe0
45220f: and r10d, 1
452213: and rsi, 0xfffffffffffffffe
452217: or r10, rcx
45221a: mov qword ptr [rbx], r10
45221d: mov qword ptr [rcx + 8], rsi
452221: or qword ptr [r9 + 8], 1
452226: test edx, edx
452228: js 0x452248
45222a: mov rax, qword ptr [rcx + 8]
45222e: mov rdx, rax
452231: and eax, 1
452234: and rdx, 0xfffffffffffffffe
452238: mov qword ptr [r9 + 0x10], rdx
45223c: or r9, rax
45223f: mov qword ptr [rcx + 8], r9
452243: jmp 0x452115
452248: mov rax, qword ptr [rcx + 0x10]
45224c: or rax, 1
452250: mov qword ptr [r9 + 8], rax
452254: mov qword ptr [rcx + 0x10], r9
452258: jmp 0x452115
45225d: mov rbx, r12
452260: mov edx, ebp
452262: jmp 0x45201c
452267: nop word ptr [rax + rax]
452270: endbr64 
452274: push r13
452276: push r12
452278: push rbp
452279: push rbx
45227a: sub rsp, 8
45227e: test rsi, rsi
452281: je 0x4522d0
452283: mov rbx, qword ptr [rsi]
452286: mov rbp, rdi
452289: mov r12, rdx
45228c: and rbx, 0xfffffffffffffffe
452290: jne 0x4522af
452292: jmp 0x4522d0
452294: nop dword ptr [rax]
452298: lea rdx, [rbx + 8]
45229c: add rbx, 0x10
4522a0: test eax, eax
4522a2: cmovs rbx, rdx
4522a6: mov rbx, qword ptr [rbx]
4522a9: and rbx, 0xfffffffffffffffe
4522ad: je 0x4522d0
4522af: mov rsi, qword ptr [rbx]
4522b2: mov r13, rbx
4522b5: mov rdi, rbp
4522b8: call r12
4522bb: test eax, eax
4522bd: jne 0x452298
4522bf: add rsp, 8
4522c3: mov rax, r13
4522c6: pop rbx
4522c7: pop rbp
4522c8: pop r12
4522ca: pop r13
4522cc: ret 
4522cd: nop dword ptr [rax]
4522d0: add rsp, 8
4522d4: xor r13d, r13d
4522d7: pop rbx
4522d8: mov rax, r13
4522db: pop rbp
4522dc: pop r12
4522de: pop r13
4522e0: ret 
4522e1: nop word ptr cs:[rax + rax]
4522ec: nop dword ptr [rax]
4522f0: endbr64 
4522f4: push rbp
4522f5: mov rbp, rsp
4522f8: push r15
4522fa: push r14
4522fc: mov r14, rdi
4522ff: push r13
452301: push r12
452303: push rbx
452304: mov rbx, rsi
452307: sub rsp, 0x48
45230b: mov qword ptr [rbp - 0x58], rdx
45230f: mov rax, qword ptr fs:[0x28]
452318: mov qword ptr [rbp - 0x38], rax
45231c: xor eax, eax
45231e: mov rax, rsp
452321: cmp rsp, rax
452324: je 0x45233b
452326: sub rsp, 0x1000
45232d: or qword ptr [rsp + 0xff8], 0
452336: cmp rsp, rax
452339: jne 0x452326
45233b: sub rsp, 0x150
452342: or qword ptr [rsp + 0x148], 0
45234b: lea r13, [rsp + 0xf]
452350: and r13, 0xfffffffffffffff0
452354: mov qword ptr [rbp - 0x50], r13
452358: test rbx, rbx
45235b: je 0x4523c5
45235d: mov r12, qword ptr [rbx]
452360: and r12, 0xfffffffffffffffe
452364: je 0x4523c5
452366: mov dword ptr [rbp - 0x44], 0x28
45236d: mov rax, r12
452370: xor r13d, r13d
452373: nop dword ptr [rax + rax]
452378: mov rsi, qword ptr [rax]
45237b: mov rdi, r14
45237e: mov rax, qword ptr [rbp - 0x58]
452382: mov r15d, r13d
452385: call rax
452387: mov ecx, eax
452389: test eax, eax
45238b: je 0x452490
452391: lea r12, [r13*8]
452399: cmp dword ptr [rbp - 0x44], r13d
45239d: je 0x452410
45239f: mov rax, qword ptr [rbp - 0x50]
4523a3: mov qword ptr [rax + r12], rbx
4523a7: mov r12, qword ptr [rbx]
4523aa: and r12, 0xfffffffffffffffe
4523ae: test ecx, ecx
4523b0: js 0x4523f0
4523b2: mov rax, qword ptr [r12 + 0x10]
4523b7: lea rbx, [r12 + 0x10]
4523bc: add r13, 1
4523c0: test rax, rax
4523c3: jne 0x452378
4523c5: xor r12d, r12d
4523c8: mov rax, qword ptr [rbp - 0x38]
4523cc: xor rax, qword ptr fs:[0x28]
4523d5: jne 0x45295a
4523db: lea rsp, [rbp - 0x28]
4523df: mov rax, r12
4523e2: pop rbx
4523e3: pop r12
4523e5: pop r13
4523e7: pop r14
4523e9: pop r15
4523eb: pop rbp
4523ec: ret 
4523ed: nop dword ptr [rax]
4523f0: mov rax, qword ptr [r12 + 8]
4523f5: lea rbx, [r12 + 8]
4523fa: add r13, 1
4523fe: and rax, 0xfffffffffffffffe
452402: jne 0x452378
452408: jmp 0x4523c5
45240a: nop word ptr [rax + rax]
452410: add dword ptr [rbp - 0x44], 0x14
452414: movsxd rax, dword ptr [rbp - 0x44]
452418: mov rdi, rsp
45241b: lea rax, [rax*8 + 0x17]
452423: mov rdx, rax
452426: and rax, 0xfffffffffffff000
45242c: sub rdi, rax
45242f: and rdx, 0xfffffffffffffff0
452433: mov rax, rdi
452436: cmp rsp, rax
452439: je 0x452450
45243b: sub rsp, 0x1000
452442: or qword ptr [rsp + 0xff8], 0
45244b: cmp rsp, rax
45244e: jne 0x45243b
452450: and edx, 0xfff
452456: sub rsp, rdx
452459: test rdx, rdx
45245c: je 0x452464
45245e: or qword ptr [rsp + rdx - 8], 0
452464: mov rsi, qword ptr [rbp - 0x50]
452468: lea rdi, [rsp + 0xf]
45246d: mov rdx, r12
452470: mov dword ptr [rbp - 0x60], ecx
452473: and rdi, 0xfffffffffffffff0
452477: call 0x401060
45247c: mov ecx, dword ptr [rbp - 0x60]
45247f: mov qword ptr [rbp - 0x50], rax
452483: jmp 0x45239f
452488: nop dword ptr [rax + rax]
452490: mov r8, qword ptr [rbx]
452493: mov r13, r8
452496: and r13, 0xfffffffffffffffe
45249a: mov rcx, qword ptr [r13 + 8]
45249e: and rcx, 0xfffffffffffffffe
4524a2: cmp qword ptr [r13 + 0x10], 0
4524a7: je 0x452910
4524ad: test rcx, rcx
4524b0: je 0x452952
4524b6: movsxd rdx, r15d
4524b9: lea r14, [r13 + 0x10]
4524bd: mov rcx, rbx
4524c0: shl rdx, 3
4524c4: jmp 0x4524fc
4524c6: nop word ptr cs:[rax + rax]
4524d0: mov rdi, qword ptr [r14]
4524d3: mov rax, qword ptr [rbp - 0x50]
4524d7: add r15d, 1
4524db: and rdi, 0xfffffffffffffffe
4524df: mov qword ptr [rax + rdx], rcx
4524e3: add rdx, 8
4524e7: test qword ptr [rdi + 8], -2
4524ef: je 0x4525a8
4524f5: mov rcx, r14
4524f8: lea r14, [rdi + 8]
4524fc: cmp dword ptr [rbp - 0x44], r15d
452500: jne 0x4524d0
452502: add dword ptr [rbp - 0x44], 0x14
452506: movsxd rax, dword ptr [rbp - 0x44]
45250a: mov rdi, rsp
45250d: lea rax, [rax*8 + 0x17]
452515: mov rsi, rax
452518: and rax, 0xfffffffffffff000
45251e: sub rdi, rax
452521: and rsi, 0xfffffffffffffff0
452525: mov rax, rdi
452528: cmp rsp, rax
45252b: je 0x452542
45252d: sub rsp, 0x1000
452534: or qword ptr [rsp + 0xff8], 0
45253d: cmp rsp, rax
452540: jne 0x45252d
452542: and esi, 0xfff
452548: sub rsp, rsi
45254b: test rsi, rsi
45254e: je 0x452556
452550: or qword ptr [rsp + rsi - 8], 0
452556: mov rsi, qword ptr [rbp - 0x50]
45255a: lea rdi, [rsp + 0xf]
45255f: mov qword ptr [rbp - 0x68], rcx
452563: add r15d, 1
452567: and rdi, 0xfffffffffffffff0
45256b: mov qword ptr [rbp - 0x60], r8
45256f: mov qword ptr [rbp - 0x58], rdx
452573: call 0x401060
452578: mov rdi, qword ptr [r14]
45257b: mov rdx, qword ptr [rbp - 0x58]
45257f: mov rcx, qword ptr [rbp - 0x68]
452583: mov r8, qword ptr [rbp - 0x60]
452587: mov qword ptr [rbp - 0x50], rax
45258b: and rdi, 0xfffffffffffffffe
45258f: mov qword ptr [rax + rdx], rcx
452593: add rdx, 8
452597: test qword ptr [rdi + 8], -2
45259f: jne 0x4524f5
4525a5: nop dword ptr [rax]
4525a8: mov rcx, qword ptr [rdi + 0x10]
4525ac: test r15d, r15d
4525af: jne 0x4528b0
4525b5: and r8d, 1
4525b9: or r8, rcx
4525bc: mov qword ptr [rbx], r8
4525bf: cmp r13, rdi
4525c2: je 0x4525cb
4525c4: mov rax, qword ptr [rdi]
4525c7: mov qword ptr [r13], rax
4525cb: test byte ptr [rdi + 8], 1
4525cf: jne 0x4526e2
4525d5: test r15d, r15d
4525d8: je 0x4528f0
4525de: nop 
4525e0: test rcx, rcx
4525e3: je 0x4525f1
4525e5: mov rax, qword ptr [rcx + 8]
4525e9: test al, 1
4525eb: jne 0x452900
4525f1: mov rax, qword ptr [rbp - 0x50]
4525f5: movsxd r14, r15d
4525f8: mov r9, qword ptr [rax + r14*8 - 8]
4525fd: mov r8, qword ptr [r9]
452600: mov rdx, r8
452603: and rdx, 0xfffffffffffffffe
452607: mov r11, qword ptr [rdx + 8]
45260b: mov rax, r11
45260e: and rax, 0xfffffffffffffffe
452612: cmp rax, rcx
452615: je 0x452760
45261b: mov rsi, qword ptr [rax + 8]
45261f: mov rcx, qword ptr [rax + 0x10]
452623: mov rbx, rsi
452626: and rbx, 0xfffffffffffffffe
45262a: test sil, 1
45262e: je 0x452673
452630: mov r11, rcx
452633: and r8d, 1
452637: mov qword ptr [rax + 8], rbx
45263b: add r15d, 1
45263f: or r8, rax
452642: or r11, 1
452646: mov qword ptr [rdx + 8], r11
45264a: mov qword ptr [rax + 0x10], rdx
45264e: mov qword ptr [r9], r8
452651: lea r9, [rax + 0x10]
452655: mov rax, qword ptr [rbp - 0x50]
452659: mov qword ptr [rax + r14*8], r9
45265d: mov rax, rcx
452660: and rax, 0xfffffffffffffffe
452664: mov rsi, qword ptr [rax + 8]
452668: mov rcx, qword ptr [rax + 0x10]
45266c: mov rbx, rsi
45266f: and rbx, 0xfffffffffffffffe
452673: test rcx, rcx
452676: je 0x4526f0
452678: mov r8, qword ptr [rcx + 8]
45267c: test r8b, 1
452680: je 0x4526f0
452682: and r11d, 1
452686: test rbx, rbx
452689: jne 0x4528e0
45268f: mov rsi, r8
452692: and r8, 0xfffffffffffffffe
452696: or rsi, 1
45269a: test r11, r11
45269d: cmovne r8, rsi
4526a1: mov qword ptr [rcx + 8], r8
4526a5: mov rsi, qword ptr [rdx + 8]
4526a9: and esi, 1
4526ac: or rsi, qword ptr [rcx + 0x10]
4526b0: mov qword ptr [rdx + 8], rsi
4526b4: mov rsi, qword ptr [rcx + 8]
4526b8: mov r8, rsi
4526bb: and esi, 1
4526be: and r8, 0xfffffffffffffffe
4526c2: mov qword ptr [rax + 0x10], r8
4526c6: or rax, rsi
4526c9: mov qword ptr [rcx + 8], rax
4526cd: mov rax, qword ptr [r9]
4526d0: mov qword ptr [rcx + 0x10], rdx
4526d4: and eax, 1
4526d7: or rcx, rax
4526da: mov qword ptr [r9], rcx
4526dd: and qword ptr [rdx + 8], 0xfffffffffffffffe
4526e2: call 0x426a00
4526e7: jmp 0x4523c8
4526ec: nop dword ptr [rax]
4526f0: test rbx, rbx
4526f3: je 0x452740
4526f5: test byte ptr [rbx + 8], 1
4526f9: je 0x452740
4526fb: and r11d, 1
4526ff: or rsi, 1
452703: test r11, r11
452706: cmovne rbx, rsi
45270a: mov qword ptr [rax + 8], rbx
45270e: and qword ptr [rdx + 8], 0xfffffffffffffffe
452713: mov rsi, qword ptr [rax + 8]
452717: and rsi, 0xfffffffffffffffe
45271b: and qword ptr [rsi + 8], 0xfffffffffffffffe
452720: mov rsi, qword ptr [rdx + 8]
452724: and esi, 1
452727: or rcx, rsi
45272a: mov qword ptr [rdx + 8], rcx
45272e: mov qword ptr [rax + 0x10], rdx
452732: mov rdx, qword ptr [r9]
452735: and edx, 1
452738: or rax, rdx
45273b: mov qword ptr [r9], rax
45273e: jmp 0x4526e2
452740: or rsi, 1
452744: mov qword ptr [rax + 8], rsi
452748: sub r15d, 1
45274c: je 0x452940
452752: mov rcx, rdx
452755: jmp 0x4525e0
45275a: nop word ptr [rax + rax]
452760: mov rcx, qword ptr [rdx + 0x10]
452764: mov rsi, qword ptr [rcx + 8]
452768: mov rax, rcx
45276b: mov r11, rsi
45276e: and r11, 0xfffffffffffffffe
452772: test sil, 1
452776: je 0x4527c2
452778: mov qword ptr [rcx + 8], r11
45277c: and r8d, 1
452780: mov rbx, qword ptr [rbp - 0x50]
452784: add r15d, 1
452788: or qword ptr [rdx + 8], 1
45278d: mov rsi, qword ptr [rcx + 8]
452791: or r8, rcx
452794: mov rax, rsi
452797: and esi, 1
45279a: and rax, 0xfffffffffffffffe
45279e: or rsi, rdx
4527a1: mov qword ptr [rdx + 0x10], rax
4527a5: mov qword ptr [rcx + 8], rsi
4527a9: mov rsi, qword ptr [rax + 8]
4527ad: mov qword ptr [r9], r8
4527b0: lea r9, [rcx + 8]
4527b4: mov rcx, rax
4527b7: mov qword ptr [rbx + r14*8], r9
4527bb: mov r11, rsi
4527be: and r11, 0xfffffffffffffffe
4527c2: test r11, r11
4527c5: je 0x452840
4527c7: mov r8, qword ptr [r11 + 8]
4527cb: test r8b, 1
4527cf: je 0x452840
4527d1: mov r10, qword ptr [rdx + 8]
4527d5: mov rbx, qword ptr [rax + 0x10]
4527d9: and r10d, 1
4527dd: test rbx, rbx
4527e0: jne 0x45292c
4527e6: mov rsi, r8
4527e9: test r10, r10
4527ec: je 0x452920
4527f2: or rsi, 1
4527f6: and r8, 0xfffffffffffffffe
4527fa: mov qword ptr [r11 + 8], rsi
4527fe: mov rsi, qword ptr [rax + 8]
452802: mov qword ptr [rdx + 0x10], r8
452806: and esi, 1
452809: or rsi, qword ptr [r11 + 0x10]
45280d: mov qword ptr [rax + 8], rsi
452811: mov rax, qword ptr [r11 + 8]
452815: mov qword ptr [r11 + 0x10], rcx
452819: and eax, 1
45281c: or rax, rdx
45281f: mov qword ptr [r11 + 8], rax
452823: mov rax, qword ptr [r9]
452826: and eax, 1
452829: or r11, rax
45282c: mov qword ptr [r9], r11
45282f: and qword ptr [rdx + 8], 0xfffffffffffffffe
452834: jmp 0x4526e2
452839: nop dword ptr [rax]
452840: mov r8, qword ptr [rax + 0x10]
452844: test r8, r8
452847: je 0x452740
45284d: mov rbx, r8
452850: test byte ptr [r8 + 8], 1
452855: je 0x452740
45285b: mov r10, qword ptr [rdx + 8]
45285f: and r10d, 1
452863: or rsi, 1
452867: test r10, r10
45286a: cmovne r11, rsi
45286e: mov qword ptr [rax + 8], r11
452872: and qword ptr [rdx + 8], 0xfffffffffffffffe
452877: and qword ptr [rbx + 8], 0xfffffffffffffffe
45287c: mov rsi, qword ptr [rax + 8]
452880: mov r8, rsi
452883: and esi, 1
452886: and r8, 0xfffffffffffffffe
45288a: mov qword ptr [rdx + 0x10], r8
45288e: or rdx, rsi
452891: mov qword ptr [rax + 8], rdx
452895: mov rax, qword ptr [r9]
452898: and eax, 1
45289b: or rcx, rax
45289e: mov qword ptr [r9], rcx
4528a1: jmp 0x4526e2
4528a6: nop word ptr cs:[rax + rax]
4528b0: mov rdx, qword ptr [rbp - 0x50]
4528b4: movsxd rax, r15d
4528b7: mov rax, qword ptr [rdx + rax*8 - 8]
4528bc: mov rax, qword ptr [rax]
4528bf: and rax, 0xfffffffffffffffe
4528c3: cmp rdi, qword ptr [rax + 0x10]
4528c7: je 0x452949
4528cd: mov rdx, qword ptr [rax + 8]
4528d1: and edx, 1
4528d4: or rdx, rcx
4528d7: mov qword ptr [rax + 8], rdx
4528db: jmp 0x4525bf
4528e0: test byte ptr [rbx + 8], 1
4528e4: je 0x45268f
4528ea: jmp 0x4526ff
4528ef: nop 
4528f0: test rcx, rcx
4528f3: je 0x4526e2
4528f9: mov rax, qword ptr [rcx + 8]
4528fd: nop dword ptr [rax]
452900: and rax, 0xfffffffffffffffe
452904: mov qword ptr [rcx + 8], rax
452908: jmp 0x4526e2
45290d: nop dword ptr [rax]
452910: test rcx, rcx
452913: je 0x452952
452915: mov rdi, r13
452918: jmp 0x4525ac
45291d: nop dword ptr [rax]
452920: and rsi, 0xfffffffffffffffe
452924: mov r8, rsi
452927: jmp 0x4527fa
45292c: test byte ptr [rbx + 8], 1
452930: je 0x4527e6
452936: jmp 0x452863
45293b: nop dword ptr [rax + rax]
452940: mov rax, qword ptr [rdx + 8]
452944: mov rcx, rdx
452947: jmp 0x452900
452949: mov qword ptr [rax + 0x10], rcx
45294d: jmp 0x4525bf
452952: mov rdi, r13
452955: jmp 0x4525a8
45295a: call 0x4547a0
45295f: nop 
452960: endbr64 
452964: test rdi, rdi
452967: je 0x4529e0
452969: push r12
45296b: mov r12, rsi
45296e: push rbp
45296f: sub rsp, 8
452973: test rsi, rsi
452976: jne 0x452980
452978: add rsp, 8
45297c: pop rbp
45297d: pop r12
45297f: ret 
452980: mov rbp, rdi
452983: xor edx, edx
452985: test qword ptr [rdi + 8], -2
45298d: jne 0x45299b
45298f: cmp qword ptr [rdi + 0x10], 0
452994: mov esi, 3
452999: je 0x4529ca
45299b: mov rdi, rbp
45299e: xor esi, esi
4529a0: call r12
4529a3: mov rdi, qword ptr [rbp + 8]
4529a7: and rdi, 0xfffffffffffffffe
4529ab: jne 0x452a00
4529ad: mov rdi, rbp
4529b0: xor edx, edx
4529b2: mov esi, 1
4529b7: call r12
4529ba: mov rdi, qword ptr [rbp + 0x10]
4529be: test rdi, rdi
4529c1: jne 0x4529e8
4529c3: xor edx, edx
4529c5: mov esi, 2
4529ca: add rsp, 8
4529ce: mov rdi, rbp
4529d1: mov rax, r12
4529d4: pop rbp
4529d5: pop r12
4529d7: jmp rax
4529d9: nop dword ptr [rax]
4529e0: ret 
4529e1: nop dword ptr [rax]
4529e8: mov edx, 1
4529ed: mov rsi, r12
4529f0: call 0x451d00
4529f5: jmp 0x4529c3
4529f7: nop word ptr [rax + rax]
452a00: mov edx, 1
452a05: mov rsi, r12
452a08: call 0x451d00
452a0d: jmp 0x4529ad
452a0f: nop 
452a10: endbr64 
452a14: test rdi, rdi
452a17: je 0x452a90
452a19: push r13
452a1b: push r12
452a1d: mov r12, rsi
452a20: push rbp
452a21: test rsi, rsi
452a24: jne 0x452a30
452a26: pop rbp
452a27: pop r12
452a29: pop r13
452a2b: ret 
452a2c: nop dword ptr [rax]
452a30: mov rbp, rdi
452a33: mov r13, rdx
452a36: test qword ptr [rdi + 8], -2
452a3e: jne 0x452a4c
452a40: cmp qword ptr [rdi + 0x10], 0
452a45: mov esi, 3
452a4a: je 0x452a7d
452a4c: mov rdi, rbp
452a4f: xor esi, esi
452a51: call r12
452a54: mov rdi, qword ptr [rbp + 8]
452a58: and rdi, 0xfffffffffffffffe
452a5c: jne 0x452aa8
452a5e: mov rdi, rbp
452a61: mov rdx, r13
452a64: mov esi, 1
452a69: call r12
452a6c: mov rdi, qword ptr [rbp + 0x10]
452a70: test rdi, rdi
452a73: jne 0x452a98
452a75: mov rdx, r13
452a78: mov esi, 2
452a7d: mov rdi, rbp
452a80: mov rax, r12
452a83: pop rbp
452a84: pop r12
452a86: pop r13
452a88: jmp rax
452a8a: nop word ptr [rax + rax]
452a90: ret 
452a91: nop dword ptr [rax]
452a98: mov rdx, r13
452a9b: mov rsi, r12
452a9e: call 0x451d90
452aa3: jmp 0x452a75
452aa5: nop dword ptr [rax]
452aa8: mov rdx, r13
452aab: mov rsi, r12
452aae: call 0x451d90
452ab3: jmp 0x452a5e
452ab5: nop word ptr cs:[rax + rax]
452ac0: endbr64 
452ac4: test rdi, rdi
452ac7: je 0x452b10
452ac9: push r15
452acb: push r14
452acd: push r13
452acf: push r12
452ad1: push rbp
452ad2: mov rbp, rdi
452ad5: push rbx
452ad6: mov rbx, rsi
452ad9: sub rsp, 0x18
452add: mov r12, qword ptr [rdi + 8]
452ae1: and r12, 0xfffffffffffffffe
452ae5: jne 0x452b48
452ae7: mov r12, qword ptr [rbp + 0x10]
452aeb: test r12, r12
452aee: jne 0x452b18
452af0: mov rdi, qword ptr [rbp]
452af4: call rbx
452af6: add rsp, 0x18
452afa: mov rdi, rbp
452afd: pop rbx
452afe: pop rbp
452aff: pop r12
452b01: pop r13
452b03: pop r14
452b05: pop r15
452b07: jmp 0x426a00
452b0c: nop dword ptr [rax]
452b10: ret 
452b11: nop dword ptr [rax]
452b18: mov r13, qword ptr [r12 + 8]
452b1d: and r13, 0xfffffffffffffffe
452b21: jne 0x452bb0
452b27: mov r13, qword ptr [r12 + 0x10]
452b2c: test r13, r13
452b2f: jne 0x452b80
452b31: mov rdi, qword ptr [r12]
452b35: call rbx
452b37: mov rdi, r12
452b3a: call 0x426a00
452b3f: jmp 0x452af0
452b41: nop dword ptr [rax]
452b48: mov r13, qword ptr [r12 + 8]
452b4d: and r13, 0xfffffffffffffffe
452b51: jne 0x452c10
452b57: mov r13, qword ptr [r12 + 0x10]
452b5c: test r13, r13
452b5f: jne 0x452be0
452b61: mov rdi, qword ptr [r12]
452b65: call rbx
452b67: mov rdi, r12
452b6a: call 0x426a00
452b6f: mov r12, qword ptr [rbp + 0x10]
452b73: test r12, r12
452b76: je 0x452af0
452b7c: jmp 0x452b18
452b7e: nop 
452b80: mov r14, qword ptr [r13 + 8]
452b84: and r14, 0xfffffffffffffffe
452b88: jne 0x452d88
452b8e: mov r14, qword ptr [r13 + 0x10]
452b92: test r14, r14
452b95: jne 0x452d60
452b9b: mov rdi, qword ptr [r13]
452b9f: call rbx
452ba1: mov rdi, r13
452ba4: call 0x426a00
452ba9: jmp 0x452b31
452bab: nop dword ptr [rax + rax]
452bb0: mov r14, qword ptr [r13 + 8]
452bb4: and r14, 0xfffffffffffffffe
452bb8: jne 0x452d30
452bbe: mov r14, qword ptr [r13 + 0x10]
452bc2: test r14, r14
452bc5: jne 0x452d00
452bcb: mov rdi, qword ptr [r13]
452bcf: call rbx
452bd1: mov rdi, r13
452bd4: call 0x426a00
452bd9: jmp 0x452b27
452bde: nop 
452be0: mov r14, qword ptr [r13 + 8]
452be4: and r14, 0xfffffffffffffffe
452be8: jne 0x452cd0
452bee: mov r14, qword ptr [r13 + 0x10]
452bf2: test r14, r14
452bf5: jne 0x452ca0
452bfb: mov rdi, qword ptr [r13]
452bff: call rbx
452c01: mov rdi, r13
452c04: call 0x426a00
452c09: jmp 0x452b61
452c0e: nop 
452c10: mov r14, qword ptr [r13 + 8]
452c14: and r14, 0xfffffffffffffffe
452c18: jne 0x452c70
452c1a: mov r14, qword ptr [r13 + 0x10]
452c1e: test r14, r14
452c21: jne 0x452c40
452c23: mov rdi, qword ptr [r13]
452c27: call rbx
452c29: mov rdi, r13
452c2c: call 0x426a00
452c31: jmp 0x452b57
452c36: nop word ptr cs:[rax + rax]
452c40: mov r15, qword ptr [r14 + 8]
452c44: and r15, 0xfffffffffffffffe
452c48: jne 0x452e8f
452c4e: mov r15, qword ptr [r14 + 0x10]
452c52: test r15, r15
452c55: jne 0x452e62
452c5b: mov rdi, qword ptr [r14]
452c5e: call rbx
452c60: mov rdi, r14
452c63: call 0x426a00
452c68: jmp 0x452c23
452c6a: nop word ptr [rax + rax]
452c70: mov r15, qword ptr [r14 + 8]
452c74: and r15, 0xfffffffffffffffe
452c78: jne 0x452ff7
452c7e: mov r15, qword ptr [r14 + 0x10]
452c82: test r15, r15
452c85: jne 0x452fca
452c8b: mov rdi, qword ptr [r14]
452c8e: call rbx
452c90: mov rdi, r14
452c93: call 0x426a00
452c98: jmp 0x452c1a
452c9a: nop word ptr [rax + rax]
452ca0: mov r15, qword ptr [r14 + 8]
452ca4: and r15, 0xfffffffffffffffe
452ca8: jne 0x452f9d
452cae: mov r15, qword ptr [r14 + 0x10]
452cb2: test r15, r15
452cb5: jne 0x452f70
452cbb: mov rdi, qword ptr [r14]
452cbe: call rbx
452cc0: mov rdi, r14
452cc3: call 0x426a00
452cc8: jmp 0x452bfb
452ccd: nop dword ptr [rax]
452cd0: mov r15, qword ptr [r14 + 8]
452cd4: and r15, 0xfffffffffffffffe
452cd8: jne 0x452f43
452cde: mov r15, qword ptr [r14 + 0x10]
452ce2: test r15, r15
452ce5: jne 0x452f16
452ceb: mov rdi, qword ptr [r14]
452cee: call rbx
452cf0: mov rdi, r14
452cf3: call 0x426a00
452cf8: jmp 0x452bee
452cfd: nop dword ptr [rax]
452d00: mov r15, qword ptr [r14 + 8]
452d04: and r15, 0xfffffffffffffffe
452d08: jne 0x452ee9
452d0e: mov r15, qword ptr [r14 + 0x10]
452d12: test r15, r15
452d15: jne 0x452ebc
452d1b: mov rdi, qword ptr [r14]
452d1e: call rbx
452d20: mov rdi, r14
452d23: call 0x426a00
452d28: jmp 0x452bcb
452d2d: nop dword ptr [rax]
452d30: mov r15, qword ptr [r14 + 8]
452d34: and r15, 0xfffffffffffffffe
452d38: jne 0x453049
452d3e: mov r15, qword ptr [r14 + 0x10]
452d42: test r15, r15
452d45: jne 0x453024
452d4b: mov rdi, qword ptr [r14]
452d4e: call rbx
452d50: mov rdi, r14
452d53: call 0x426a00
452d58: jmp 0x452bbe
452d5d: nop dword ptr [rax]
452d60: mov r15, qword ptr [r14 + 8]
452d64: and r15, 0xfffffffffffffffe
452d68: jne 0x452ddb
452d6a: mov r15, qword ptr [r14 + 0x10]
452d6e: test r15, r15
452d71: jne 0x452db1
452d73: mov rdi, qword ptr [r14]
452d76: call rbx
452d78: mov rdi, r14
452d7b: call 0x426a00
452d80: jmp 0x452b9b
452d85: nop dword ptr [rax]
452d88: mov r15, qword ptr [r14 + 8]
452d8c: and r15, 0xfffffffffffffffe
452d90: jne 0x452e35
452d96: mov r15, qword ptr [r14 + 0x10]
452d9a: test r15, r15
452d9d: jne 0x452e08
452d9f: mov rdi, qword ptr [r14]
452da2: call rbx
452da4: mov rdi, r14
452da7: call 0x426a00
452dac: jmp 0x452b8e
452db1: mov r8, qword ptr [r15 + 8]
452db5: and r8, 0xfffffffffffffffe
452db9: jne 0x453182
452dbf: mov r8, qword ptr [r15 + 0x10]
452dc3: test r8, r8
452dc6: jne 0x45314b
452dcc: mov rdi, qword ptr [r15]
452dcf: call rbx
452dd1: mov rdi, r15
452dd4: call 0x426a00
452dd9: jmp 0x452d73
452ddb: mov r8, qword ptr [r15 + 8]
452ddf: and r8, 0xfffffffffffffffe
452de3: jne 0x4534f2
452de9: mov r8, qword ptr [r15 + 0x10]
452ded: test r8, r8
452df0: jne 0x4534bb
452df6: mov rdi, qword ptr [r15]
452df9: call rbx
452dfb: mov rdi, r15
452dfe: call 0x426a00
452e03: jmp 0x452d6a
452e08: mov r8, qword ptr [r15 + 8]
452e0c: and r8, 0xfffffffffffffffe
452e10: jne 0x45363c
452e16: mov r8, qword ptr [r15 + 0x10]
452e1a: test r8, r8
452e1d: jne 0x453605
452e23: mov rdi, qword ptr [r15]
452e26: call rbx
452e28: mov rdi, r15
452e2b: call 0x426a00
452e30: jmp 0x452d9f
452e35: mov r8, qword ptr [r15 + 8]
452e39: and r8, 0xfffffffffffffffe
452e3d: jne 0x45325e
452e43: mov r8, qword ptr [r15 + 0x10]
452e47: test r8, r8
452e4a: jne 0x453227
452e50: mov rdi, qword ptr [r15]
452e53: call rbx
452e55: mov rdi, r15
452e58: call 0x426a00
452e5d: jmp 0x452d96
452e62: mov r8, qword ptr [r15 + 8]
452e66: and r8, 0xfffffffffffffffe
452e6a: jne 0x4533a8
452e70: mov r8, qword ptr [r15 + 0x10]
452e74: test r8, r8
452e77: jne 0x453371
452e7d: mov rdi, qword ptr [r15]
452e80: call rbx
452e82: mov rdi, r15
452e85: call 0x426a00
452e8a: jmp 0x452c5b
452e8f: mov r8, qword ptr [r15 + 8]
452e93: and r8, 0xfffffffffffffffe
452e97: jne 0x45333a
452e9d: mov r8, qword ptr [r15 + 0x10]
452ea1: test r8, r8
452ea4: jne 0x453303
452eaa: mov rdi, qword ptr [r15]
452ead: call rbx
452eaf: mov rdi, r15
452eb2: call 0x426a00
452eb7: jmp 0x452c4e
452ebc: mov r8, qword ptr [r15 + 8]
452ec0: and r8, 0xfffffffffffffffe
452ec4: jne 0x453560
452eca: mov r8, qword ptr [r15 + 0x10]
452ece: test r8, r8
452ed1: jne 0x453529
452ed7: mov rdi, qword ptr [r15]
452eda: call rbx
452edc: mov rdi, r15
452edf: call 0x426a00
452ee4: jmp 0x452d1b
452ee9: mov r8, qword ptr [r15 + 8]
452eed: and r8, 0xfffffffffffffffe
452ef1: jne 0x453416
452ef7: mov r8, qword ptr [r15 + 0x10]
452efb: test r8, r8
452efe: jne 0x4533df
452f04: mov rdi, qword ptr [r15]
452f07: call rbx
452f09: mov rdi, r15
452f0c: call 0x426a00
452f11: jmp 0x452d0e
452f16: mov r8, qword ptr [r15 + 8]
452f1a: and r8, 0xfffffffffffffffe
452f1e: jne 0x4531f0
452f24: mov r8, qword ptr [r15 + 0x10]
452f28: test r8, r8
452f2b: jne 0x4531b9
452f31: mov rdi, qword ptr [r15]
452f34: call rbx
452f36: mov rdi, r15
452f39: call 0x426a00
452f3e: jmp 0x452ceb
452f43: mov r8, qword ptr [r15 + 8]
452f47: and r8, 0xfffffffffffffffe
452f4b: jne 0x4536aa
452f51: mov r8, qword ptr [r15 + 0x10]
452f55: test r8, r8
452f58: jne 0x453673
452f5e: mov rdi, qword ptr [r15]
452f61: call rbx
452f63: mov rdi, r15
452f66: call 0x426a00
452f6b: jmp 0x452cde
452f70: mov r8, qword ptr [r15 + 8]
452f74: and r8, 0xfffffffffffffffe
452f78: jne 0x453484
452f7e: mov r8, qword ptr [r15 + 0x10]
452f82: test r8, r8
452f85: jne 0x45344d
452f8b: mov rdi, qword ptr [r15]
452f8e: call rbx
452f90: mov rdi, r15
452f93: call 0x426a00
452f98: jmp 0x452cbb
452f9d: mov r8, qword ptr [r15 + 8]
452fa1: and r8, 0xfffffffffffffffe
452fa5: jne 0x4535ce
452fab: mov r8, qword ptr [r15 + 0x10]
452faf: test r8, r8
452fb2: jne 0x453597
452fb8: mov rdi, qword ptr [r15]
452fbb: call rbx
452fbd: mov rdi, r15
452fc0: call 0x426a00
452fc5: jmp 0x452cae
452fca: mov r8, qword ptr [r15 + 8]
452fce: and r8, 0xfffffffffffffffe
452fd2: jne 0x4532cc
452fd8: mov r8, qword ptr [r15 + 0x10]
452fdc: test r8, r8
452fdf: jne 0x453295
452fe5: mov rdi, qword ptr [r15]
452fe8: call rbx
452fea: mov rdi, r15
452fed: call 0x426a00
452ff2: jmp 0x452c8b
452ff7: mov r8, qword ptr [r15 + 8]
452ffb: and r8, 0xfffffffffffffffe
452fff: jne 0x453710
453005: mov r8, qword ptr [r15 + 0x10]
453009: test r8, r8
45300c: jne 0x4536e1
453012: mov rdi, qword ptr [r15]
453015: call rbx
453017: mov rdi, r15
45301a: call 0x426a00
45301f: jmp 0x452c7e
453024: mov r8, qword ptr [r15 + 8]
453028: and r8, 0xfffffffffffffffe
45302c: jne 0x4530a6
45302e: mov r8, qword ptr [r15 + 0x10]
453032: test r8, r8
453035: jne 0x453072
453037: mov rdi, qword ptr [r15]
45303a: call rbx
45303c: mov rdi, r15
45303f: call 0x426a00
453044: jmp 0x452d4b
453049: mov r8, qword ptr [r15 + 8]
45304d: and r8, 0xfffffffffffffffe
453051: jne 0x453114
453057: mov r8, qword ptr [r15 + 0x10]
45305b: test r8, r8
45305e: jne 0x4530dd
453060: mov rdi, qword ptr [r15]
453063: call rbx
453065: mov rdi, r15
453068: call 0x426a00
45306d: jmp 0x452d3e
453072: mov rdi, qword ptr [r8 + 8]
453076: and rdi, 0xfffffffffffffffe
45307a: jne 0x453a27
453080: mov rdi, qword ptr [r8 + 0x10]
453084: test rdi, rdi
453087: jne 0x453a10
45308d: mov qword ptr [rsp + 8], r8
453092: mov rdi, qword ptr [r8]
453095: call rbx
453097: mov r8, qword ptr [rsp + 8]
45309c: mov rdi, r8
45309f: call 0x426a00
4530a4: jmp 0x453037
4530a6: mov rdi, qword ptr [r8 + 8]
4530aa: and rdi, 0xfffffffffffffffe
4530ae: jne 0x453a55
4530b4: mov rdi, qword ptr [r8 + 0x10]
4530b8: test rdi, rdi
4530bb: jne 0x453a3e
4530c1: mov qword ptr [rsp + 8], r8
4530c6: mov rdi, qword ptr [r8]
4530c9: call rbx
4530cb: mov r8, qword ptr [rsp + 8]
4530d0: mov rdi, r8
4530d3: call 0x426a00
4530d8: jmp 0x45302e
4530dd: mov rdi, qword ptr [r8 + 8]
4530e1: and rdi, 0xfffffffffffffffe
4530e5: jne 0x4539f9
4530eb: mov rdi, qword ptr [r8 + 0x10]
4530ef: test rdi, rdi
4530f2: jne 0x4539e2
4530f8: mov qword ptr [rsp + 8], r8
4530fd: mov rdi, qword ptr [r8]
453100: call rbx
453102: mov r8, qword ptr [rsp + 8]
453107: mov rdi, r8
45310a: call 0x426a00
45310f: jmp 0x453060
453114: mov rdi, qword ptr [r8 + 8]
453118: and rdi, 0xfffffffffffffffe
45311c: jne 0x453b97
453122: mov rdi, qword ptr [r8 + 0x10]
453126: test rdi, rdi
453129: jne 0x453b80
45312f: mov qword ptr [rsp + 8], r8
453134: mov rdi, qword ptr [r8]
453137: call rbx
453139: mov r8, qword ptr [rsp + 8]
45313e: mov rdi, r8
453141: call 0x426a00
453146: jmp 0x453057
45314b: mov rdi, qword ptr [r8 + 8]
45314f: and rdi, 0xfffffffffffffffe
453153: jne 0x4539cb
453159: mov rdi, qword ptr [r8 + 0x10]
45315d: test rdi, rdi
453160: jne 0x4539b4
453166: mov qword ptr [rsp + 8], r8
45316b: mov rdi, qword ptr [r8]
45316e: call rbx
453170: mov r8, qword ptr [rsp + 8]
453175: mov rdi, r8
453178: call 0x426a00
45317d: jmp 0x452dcc
453182: mov rdi, qword ptr [r8 + 8]
453186: and rdi, 0xfffffffffffffffe
45318a: jne 0x453adf
453190: mov rdi, qword ptr [r8 + 0x10]
453194: test rdi, rdi
453197: jne 0x453ac8
45319d: mov qword ptr [rsp + 8], r8
4531a2: mov rdi, qword ptr [r8]
4531a5: call rbx
4531a7: mov r8, qword ptr [rsp + 8]
4531ac: mov rdi, r8
4531af: call 0x426a00
4531b4: jmp 0x452dbf
4531b9: mov rdi, qword ptr [r8 + 8]
4531bd: and rdi, 0xfffffffffffffffe
4531c1: jne 0x45399d
4531c7: mov rdi, qword ptr [r8 + 0x10]
4531cb: test rdi, rdi
4531ce: jne 0x453986
4531d4: mov qword ptr [rsp + 8], r8
4531d9: mov rdi, qword ptr [r8]
4531dc: call rbx
4531de: mov r8, qword ptr [rsp + 8]
4531e3: mov rdi, r8
4531e6: call 0x426a00
4531eb: jmp 0x452f31
4531f0: mov rdi, qword ptr [r8 + 8]
4531f4: and rdi, 0xfffffffffffffffe
4531f8: jne 0x453c4f
4531fe: mov rdi, qword ptr [r8 + 0x10]
453202: test rdi, rdi
453205: jne 0x453c38
45320b: mov qword ptr [rsp + 8], r8
453210: mov rdi, qword ptr [r8]
453213: call rbx
453215: mov r8, qword ptr [rsp + 8]
45321a: mov rdi, r8
45321d: call 0x426a00
453222: jmp 0x452f24
453227: mov rdi, qword ptr [r8 + 8]
45322b: and rdi, 0xfffffffffffffffe
45322f: jne 0x45396f
453235: mov rdi, qword ptr [r8 + 0x10]
453239: test rdi, rdi
45323c: jne 0x453958
453242: mov qword ptr [rsp + 8], r8
453247: mov rdi, qword ptr [r8]
45324a: call rbx
45324c: mov r8, qword ptr [rsp + 8]
453251: mov rdi, r8
453254: call 0x426a00
453259: jmp 0x452e50
45325e: mov rdi, qword ptr [r8 + 8]
453262: and rdi, 0xfffffffffffffffe
453266: jne 0x453a83
45326c: mov rdi, qword ptr [r8 + 0x10]
453270: test rdi, rdi
453273: jne 0x453a6c
453279: mov qword ptr [rsp + 8], r8
45327e: mov rdi, qword ptr [r8]
453281: call rbx
453283: mov r8, qword ptr [rsp + 8]
453288: mov rdi, r8
45328b: call 0x426a00
453290: jmp 0x452e43
453295: mov rdi, qword ptr [r8 + 8]
453299: and rdi, 0xfffffffffffffffe
45329d: jne 0x453941
4532a3: mov rdi, qword ptr [r8 + 0x10]
4532a7: test rdi, rdi
4532aa: jne 0x45392a
4532b0: mov qword ptr [rsp + 8], r8
4532b5: mov rdi, qword ptr [r8]
4532b8: call rbx
4532ba: mov r8, qword ptr [rsp + 8]
4532bf: mov rdi, r8
4532c2: call 0x426a00
4532c7: jmp 0x452fe5
4532cc: mov rdi, qword ptr [r8 + 8]
4532d0: and rdi, 0xfffffffffffffffe
4532d4: jne 0x453bf3
4532da: mov rdi, qword ptr [r8 + 0x10]
4532de: test rdi, rdi
4532e1: jne 0x453bdc
4532e7: mov qword ptr [rsp + 8], r8
4532ec: mov rdi, qword ptr [r8]
4532ef: call rbx
4532f1: mov r8, qword ptr [rsp + 8]
4532f6: mov rdi, r8
4532f9: call 0x426a00
4532fe: jmp 0x452fd8
453303: mov rdi, qword ptr [r8 + 8]
453307: and rdi, 0xfffffffffffffffe
45330b: jne 0x453913
453311: mov rdi, qword ptr [r8 + 0x10]
453315: test rdi, rdi
453318: jne 0x4538fc
45331e: mov qword ptr [rsp + 8], r8
453323: mov rdi, qword ptr [r8]
453326: call rbx
453328: mov r8, qword ptr [rsp + 8]
45332d: mov rdi, r8
453330: call 0x426a00
453335: jmp 0x452eaa
45333a: mov rdi, qword ptr [r8 + 8]
45333e: and rdi, 0xfffffffffffffffe
453342: jne 0x453b3b
453348: mov rdi, qword ptr [r8 + 0x10]
45334c: test rdi, rdi
45334f: jne 0x453b24
453355: mov qword ptr [rsp + 8], r8
45335a: mov rdi, qword ptr [r8]
45335d: call rbx
45335f: mov r8, qword ptr [rsp + 8]
453364: mov rdi, r8
453367: call 0x426a00
45336c: jmp 0x452e9d
453371: mov rdi, qword ptr [r8 + 8]
453375: and rdi, 0xfffffffffffffffe
453379: jne 0x4538e5
45337f: mov rdi, qword ptr [r8 + 0x10]
453383: test rdi, rdi
453386: jne 0x4538ce
45338c: mov qword ptr [rsp + 8], r8
453391: mov rdi, qword ptr [r8]
453394: call rbx
453396: mov r8, qword ptr [rsp + 8]
45339b: mov rdi, r8
45339e: call 0x426a00
4533a3: jmp 0x452e7d
4533a8: mov rdi, qword ptr [r8 + 8]
4533ac: and rdi, 0xfffffffffffffffe
4533b0: jne 0x453cab
4533b6: mov rdi, qword ptr [r8 + 0x10]
4533ba: test rdi, rdi
4533bd: jne 0x453c94
4533c3: mov qword ptr [rsp + 8], r8
4533c8: mov rdi, qword ptr [r8]
4533cb: call rbx
4533cd: mov r8, qword ptr [rsp + 8]
4533d2: mov rdi, r8
4533d5: call 0x426a00
4533da: jmp 0x452e70
4533df: mov rdi, qword ptr [r8 + 8]
4533e3: and rdi, 0xfffffffffffffffe
4533e7: jne 0x4538b7
4533ed: mov rdi, qword ptr [r8 + 0x10]
4533f1: test rdi, rdi
4533f4: jne 0x4538a0
4533fa: mov qword ptr [rsp + 8], r8
4533ff: mov rdi, qword ptr [r8]
453402: call rbx
453404: mov r8, qword ptr [rsp + 8]
453409: mov rdi, r8
45340c: call 0x426a00
453411: jmp 0x452f04
453416: mov rdi, qword ptr [r8 + 8]
45341a: and rdi, 0xfffffffffffffffe
45341e: jne 0x453ab1
453424: mov rdi, qword ptr [r8 + 0x10]
453428: test rdi, rdi
45342b: jne 0x453a9a
453431: mov qword ptr [rsp + 8], r8
453436: mov rdi, qword ptr [r8]
453439: call rbx
45343b: mov r8, qword ptr [rsp + 8]
453440: mov rdi, r8
453443: call 0x426a00
453448: jmp 0x452ef7
45344d: mov rdi, qword ptr [r8 + 8]
453451: and rdi, 0xfffffffffffffffe
453455: jne 0x453889
45345b: mov rdi, qword ptr [r8 + 0x10]
45345f: test rdi, rdi
453462: jne 0x453872
453468: mov qword ptr [rsp + 8], r8
45346d: mov rdi, qword ptr [r8]
453470: call rbx
453472: mov r8, qword ptr [rsp + 8]
453477: mov rdi, r8
45347a: call 0x426a00
45347f: jmp 0x452f8b
453484: mov rdi, qword ptr [r8 + 8]
453488: and rdi, 0xfffffffffffffffe
45348c: jne 0x453bc5
453492: mov rdi, qword ptr [r8 + 0x10]
453496: test rdi, rdi
453499: jne 0x453bae
45349f: mov qword ptr [rsp + 8], r8
4534a4: mov rdi, qword ptr [r8]
4534a7: call rbx
4534a9: mov r8, qword ptr [rsp + 8]
4534ae: mov rdi, r8
4534b1: call 0x426a00
4534b6: jmp 0x452f7e
4534bb: mov rdi, qword ptr [r8 + 8]
4534bf: and rdi, 0xfffffffffffffffe
4534c3: jne 0x45385b
4534c9: mov rdi, qword ptr [r8 + 0x10]
4534cd: test rdi, rdi
4534d0: jne 0x453844
4534d6: mov qword ptr [rsp + 8], r8
4534db: mov rdi, qword ptr [r8]
4534de: call rbx
4534e0: mov r8, qword ptr [rsp + 8]
4534e5: mov rdi, r8
4534e8: call 0x426a00
4534ed: jmp 0x452df6
4534f2: mov rdi, qword ptr [r8 + 8]
4534f6: and rdi, 0xfffffffffffffffe
4534fa: jne 0x453b0d
453500: mov rdi, qword ptr [r8 + 0x10]
453504: test rdi, rdi
453507: jne 0x453af6
45350d: mov qword ptr [rsp + 8], r8
453512: mov rdi, qword ptr [r8]
453515: call rbx
453517: mov r8, qword ptr [rsp + 8]
45351c: mov rdi, r8
45351f: call 0x426a00
453524: jmp 0x452de9
453529: mov rdi, qword ptr [r8 + 8]
45352d: and rdi, 0xfffffffffffffffe
453531: jne 0x45382d
453537: mov rdi, qword ptr [r8 + 0x10]
45353b: test rdi, rdi
45353e: jne 0x453816
453544: mov qword ptr [rsp + 8], r8
453549: mov rdi, qword ptr [r8]
45354c: call rbx
45354e: mov r8, qword ptr [rsp + 8]
453553: mov rdi, r8
453556: call 0x426a00
45355b: jmp 0x452ed7
453560: mov rdi, qword ptr [r8 + 8]
453564: and rdi, 0xfffffffffffffffe
453568: jne 0x453c7d
45356e: mov rdi, qword ptr [r8 + 0x10]
453572: test rdi, rdi
453575: jne 0x453c66
45357b: mov qword ptr [rsp + 8], r8
453580: mov rdi, qword ptr [r8]
453583: call rbx
453585: mov r8, qword ptr [rsp + 8]
45358a: mov rdi, r8
45358d: call 0x426a00
453592: jmp 0x452eca
453597: mov rdi, qword ptr [r8 + 8]
45359b: and rdi, 0xfffffffffffffffe
45359f: jne 0x4537ff
4535a5: mov rdi, qword ptr [r8 + 0x10]
4535a9: test rdi, rdi
4535ac: jne 0x4537e8
4535b2: mov qword ptr [rsp + 8], r8
4535b7: mov rdi, qword ptr [r8]
4535ba: call rbx
4535bc: mov r8, qword ptr [rsp + 8]
4535c1: mov rdi, r8
4535c4: call 0x426a00
4535c9: jmp 0x452fb8
4535ce: mov rdi, qword ptr [r8 + 8]
4535d2: and rdi, 0xfffffffffffffffe
4535d6: jne 0x453b69
4535dc: mov rdi, qword ptr [r8 + 0x10]
4535e0: test rdi, rdi
4535e3: jne 0x453b52
4535e9: mov qword ptr [rsp + 8], r8
4535ee: mov rdi, qword ptr [r8]
4535f1: call rbx
4535f3: mov r8, qword ptr [rsp + 8]
4535f8: mov rdi, r8
4535fb: call 0x426a00
453600: jmp 0x452fab
453605: mov rdi, qword ptr [r8 + 8]
453609: and rdi, 0xfffffffffffffffe
45360d: jne 0x4537d1
453613: mov rdi, qword ptr [r8 + 0x10]
453617: test rdi, rdi
45361a: jne 0x4537ba
453620: mov qword ptr [rsp + 8], r8
453625: mov rdi, qword ptr [r8]
453628: call rbx
45362a: mov r8, qword ptr [rsp + 8]
45362f: mov rdi, r8
453632: call 0x426a00
453637: jmp 0x452e23
45363c: mov rdi, qword ptr [r8 + 8]
453640: and rdi, 0xfffffffffffffffe
453644: jne 0x453c21
45364a: mov rdi, qword ptr [r8 + 0x10]
45364e: test rdi, rdi
453651: jne 0x453c0a
453657: mov qword ptr [rsp + 8], r8
45365c: mov rdi, qword ptr [r8]
45365f: call rbx
453661: mov r8, qword ptr [rsp + 8]
453666: mov rdi, r8
453669: call 0x426a00
45366e: jmp 0x452e16
453673: mov rdi, qword ptr [r8 + 8]
453677: and rdi, 0xfffffffffffffffe
45367b: jne 0x4537a3
453681: mov rdi, qword ptr [r8 + 0x10]
453685: test rdi, rdi
453688: jne 0x45378c
45368e: mov qword ptr [rsp + 8], r8
453693: mov rdi, qword ptr [r8]
453696: call rbx
453698: mov r8, qword ptr [rsp + 8]
45369d: mov rdi, r8
4536a0: call 0x426a00
4536a5: jmp 0x452f5e
4536aa: mov rdi, qword ptr [r8 + 8]
4536ae: and rdi, 0xfffffffffffffffe
4536b2: jne 0x453cd9
4536b8: mov rdi, qword ptr [r8 + 0x10]
4536bc: test rdi, rdi
4536bf: jne 0x453cc2
4536c5: mov qword ptr [rsp + 8], r8
4536ca: mov rdi, qword ptr [r8]
4536cd: call rbx
4536cf: mov r8, qword ptr [rsp + 8]
4536d4: mov rdi, r8
4536d7: call 0x426a00
4536dc: jmp 0x452f51
4536e1: mov rdi, qword ptr [r8 + 8]
4536e5: and rdi, 0xfffffffffffffffe
4536e9: jne 0x453753
4536eb: mov rdi, qword ptr [r8 + 0x10]
4536ef: test rdi, rdi
4536f2: jne 0x45373f
4536f4: mov qword ptr [rsp + 8], r8
4536f9: mov rdi, qword ptr [r8]
4536fc: call rbx
4536fe: mov r8, qword ptr [rsp + 8]
453703: mov rdi, r8
453706: call 0x426a00
45370b: jmp 0x453012
453710: mov rdi, qword ptr [r8 + 8]
453714: and rdi, 0xfffffffffffffffe
453718: jne 0x45377b
45371a: mov rdi, qword ptr [r8 + 0x10]
45371e: test rdi, rdi
453721: jne 0x453767
453723: mov qword ptr [rsp + 8], r8
453728: mov rdi, qword ptr [r8]
45372b: call rbx
45372d: mov r8, qword ptr [rsp + 8]
453732: mov rdi, r8
453735: call 0x426a00
45373a: jmp 0x453005
45373f: mov rsi, rbx
453742: mov qword ptr [rsp + 8], r8
453747: call 0x451e20
45374c: mov r8, qword ptr [rsp + 8]
453751: jmp 0x4536f4
453753: mov rsi, rbx
453756: mov qword ptr [rsp + 8], r8
45375b: call 0x451e20
453760: mov r8, qword ptr [rsp + 8]
453765: jmp 0x4536eb
453767: mov rsi, rbx
45376a: mov qword ptr [rsp + 8], r8
45376f: call 0x451e20
453774: mov r8, qword ptr [rsp + 8]
453779: jmp 0x453723
45377b: mov qword ptr [rsp + 8], r8
453780: call 0x451e20
453785: mov r8, qword ptr [rsp + 8]
45378a: jmp 0x45371a
45378c: mov rsi, rbx
45378f: mov qword ptr [rsp + 8], r8
453794: call 0x451e20
453799: mov r8, qword ptr [rsp + 8]
45379e: jmp 0x45368e
4537a3: mov rsi, rbx
4537a6: mov qword ptr [rsp + 8], r8
4537ab: call 0x451e20
4537b0: mov r8, qword ptr [rsp + 8]
4537b5: jmp 0x453681
4537ba: mov rsi, rbx
4537bd: mov qword ptr [rsp + 8], r8
4537c2: call 0x451e20
4537c7: mov r8, qword ptr [rsp + 8]
4537cc: jmp 0x453620
4537d1: mov rsi, rbx
4537d4: mov qword ptr [rsp + 8], r8
4537d9: call 0x451e20
4537de: mov r8, qword ptr [rsp + 8]
4537e3: jmp 0x453613
4537e8: mov rsi, rbx
4537eb: mov qword ptr [rsp + 8], r8
4537f0: call 0x451e20
4537f5: mov r8, qword ptr [rsp + 8]
4537fa: jmp 0x4535b2
4537ff: mov rsi, rbx
453802: mov qword ptr [rsp + 8], r8
453807: call 0x451e20
45380c: mov r8, qword ptr [rsp + 8]
453811: jmp 0x4535a5
453816: mov rsi, rbx
453819: mov qword ptr [rsp + 8], r8
45381e: call 0x451e20
453823: mov r8, qword ptr [rsp + 8]
453828: jmp 0x453544
45382d: mov rsi, rbx
453830: mov qword ptr [rsp + 8], r8
453835: call 0x451e20
45383a: mov r8, qword ptr [rsp + 8]
45383f: jmp 0x453537
453844: mov rsi, rbx
453847: mov qword ptr [rsp + 8], r8
45384c: call 0x451e20
453851: mov r8, qword ptr [rsp + 8]
453856: jmp 0x4534d6
45385b: mov rsi, rbx
45385e: mov qword ptr [rsp + 8], r8
453863: call 0x451e20
453868: mov r8, qword ptr [rsp + 8]
45386d: jmp 0x4534c9
453872: mov rsi, rbx
453875: mov qword ptr [rsp + 8], r8
45387a: call 0x451e20
45387f: mov r8, qword ptr [rsp + 8]
453884: jmp 0x453468
453889: mov rsi, rbx
45388c: mov qword ptr [rsp + 8], r8
453891: call 0x451e20
453896: mov r8, qword ptr [rsp + 8]
45389b: jmp 0x45345b
4538a0: mov rsi, rbx
4538a3: mov qword ptr [rsp + 8], r8
4538a8: call 0x451e20
4538ad: mov r8, qword ptr [rsp + 8]
4538b2: jmp 0x4533fa
4538b7: mov rsi, rbx
4538ba: mov qword ptr [rsp + 8], r8
4538bf: call 0x451e20
4538c4: mov r8, qword ptr [rsp + 8]
4538c9: jmp 0x4533ed
4538ce: mov rsi, rbx
4538d1: mov qword ptr [rsp + 8], r8
4538d6: call 0x451e20
4538db: mov r8, qword ptr [rsp + 8]
4538e0: jmp 0x45338c
4538e5: mov rsi, rbx
4538e8: mov qword ptr [rsp + 8], r8
4538ed: call 0x451e20
4538f2: mov r8, qword ptr [rsp + 8]
4538f7: jmp 0x45337f
4538fc: mov rsi, rbx
4538ff: mov qword ptr [rsp + 8], r8
453904: call 0x451e20
453909: mov r8, qword ptr [rsp + 8]
45390e: jmp 0x45331e
453913: mov rsi, rbx
453916: mov qword ptr [rsp + 8], r8
45391b: call 0x451e20
453920: mov r8, qword ptr [rsp + 8]
453925: jmp 0x453311
45392a: mov rsi, rbx
45392d: mov qword ptr [rsp + 8], r8
453932: call 0x451e20
453937: mov r8, qword ptr [rsp + 8]
45393c: jmp 0x4532b0
453941: mov rsi, rbx
453944: mov qword ptr [rsp + 8], r8
453949: call 0x451e20
45394e: mov r8, qword ptr [rsp + 8]
453953: jmp 0x4532a3
453958: mov rsi, rbx
45395b: mov qword ptr [rsp + 8], r8
453960: call 0x451e20
453965: mov r8, qword ptr [rsp + 8]
45396a: jmp 0x453242
45396f: mov rsi, rbx
453972: mov qword ptr [rsp + 8], r8
453977: call 0x451e20
45397c: mov r8, qword ptr [rsp + 8]
453981: jmp 0x453235
453986: mov rsi, rbx
453989: mov qword ptr [rsp + 8], r8
45398e: call 0x451e20
453993: mov r8, qword ptr [rsp + 8]
453998: jmp 0x4531d4
45399d: mov rsi, rbx
4539a0: mov qword ptr [rsp + 8], r8
4539a5: call 0x451e20
4539aa: mov r8, qword ptr [rsp + 8]
4539af: jmp 0x4531c7
4539b4: mov rsi, rbx
4539b7: mov qword ptr [rsp + 8], r8
4539bc: call 0x451e20
4539c1: mov r8, qword ptr [rsp + 8]
4539c6: jmp 0x453166
4539cb: mov rsi, rbx
4539ce: mov qword ptr [rsp + 8], r8
4539d3: call 0x451e20
4539d8: mov r8, qword ptr [rsp + 8]
4539dd: jmp 0x453159
4539e2: mov rsi, rbx
4539e5: mov qword ptr [rsp + 8], r8
4539ea: call 0x451e20
4539ef: mov r8, qword ptr [rsp + 8]
4539f4: jmp 0x4530f8
4539f9: mov rsi, rbx
4539fc: mov qword ptr [rsp + 8], r8
453a01: call 0x451e20
453a06: mov r8, qword ptr [rsp + 8]
453a0b: jmp 0x4530eb
453a10: mov rsi, rbx
453a13: mov qword ptr [rsp + 8], r8
453a18: call 0x451e20
453a1d: mov r8, qword ptr [rsp + 8]
453a22: jmp 0x45308d
453a27: mov rsi, rbx
453a2a: mov qword ptr [rsp + 8], r8
453a2f: call 0x451e20
453a34: mov r8, qword ptr [rsp + 8]
453a39: jmp 0x453080
453a3e: mov rsi, rbx
453a41: mov qword ptr [rsp + 8], r8
453a46: call 0x451e20
453a4b: mov r8, qword ptr [rsp + 8]
453a50: jmp 0x4530c1
453a55: mov rsi, rbx
453a58: mov qword ptr [rsp + 8], r8
453a5d: call 0x451e20
453a62: mov r8, qword ptr [rsp + 8]
453a67: jmp 0x4530b4
453a6c: mov rsi, rbx
453a6f: mov qword ptr [rsp + 8], r8
453a74: call 0x451e20
453a79: mov r8, qword ptr [rsp + 8]
453a7e: jmp 0x453279
453a83: mov rsi, rbx
453a86: mov qword ptr [rsp + 8], r8
453a8b: call 0x451e20
453a90: mov r8, qword ptr [rsp + 8]
453a95: jmp 0x45326c
453a9a: mov rsi, rbx
453a9d: mov qword ptr [rsp + 8], r8
453aa2: call 0x451e20
453aa7: mov r8, qword ptr [rsp + 8]
453aac: jmp 0x453431
453ab1: mov rsi, rbx
453ab4: mov qword ptr [rsp + 8], r8
453ab9: call 0x451e20
453abe: mov r8, qword ptr [rsp + 8]
453ac3: jmp 0x453424
453ac8: mov rsi, rbx
453acb: mov qword ptr [rsp + 8], r8
453ad0: call 0x451e20
453ad5: mov r8, qword ptr [rsp + 8]
453ada: jmp 0x45319d
453adf: mov rsi, rbx
453ae2: mov qword ptr [rsp + 8], r8
453ae7: call 0x451e20
453aec: mov r8, qword ptr [rsp + 8]
453af1: jmp 0x453190
453af6: mov rsi, rbx
453af9: mov qword ptr [rsp + 8], r8
453afe: call 0x451e20
453b03: mov r8, qword ptr [rsp + 8]
453b08: jmp 0x45350d
453b0d: mov rsi, rbx
453b10: mov qword ptr [rsp + 8], r8
453b15: call 0x451e20
453b1a: mov r8, qword ptr [rsp + 8]
453b1f: jmp 0x453500
453b24: mov rsi, rbx
453b27: mov qword ptr [rsp + 8], r8
453b2c: call 0x451e20
453b31: mov r8, qword ptr [rsp + 8]
453b36: jmp 0x453355
453b3b: mov rsi, rbx
453b3e: mov qword ptr [rsp + 8], r8
453b43: call 0x451e20
453b48: mov r8, qword ptr [rsp + 8]
453b4d: jmp 0x453348
453b52: mov rsi, rbx
453b55: mov qword ptr [rsp + 8], r8
453b5a: call 0x451e20
453b5f: mov r8, qword ptr [rsp + 8]
453b64: jmp 0x4535e9
453b69: mov rsi, rbx
453b6c: mov qword ptr [rsp + 8], r8
453b71: call 0x451e20
453b76: mov r8, qword ptr [rsp + 8]
453b7b: jmp 0x4535dc
453b80: mov rsi, rbx
453b83: mov qword ptr [rsp + 8], r8
453b88: call 0x451e20
453b8d: mov r8, qword ptr [rsp + 8]
453b92: jmp 0x45312f
453b97: mov rsi, rbx
453b9a: mov qword ptr [rsp + 8], r8
453b9f: call 0x451e20
453ba4: mov r8, qword ptr [rsp + 8]
453ba9: jmp 0x453122
453bae: mov rsi, rbx
453bb1: mov qword ptr [rsp + 8], r8
453bb6: call 0x451e20
453bbb: mov r8, qword ptr [rsp + 8]
453bc0: jmp 0x45349f
453bc5: mov rsi, rbx
453bc8: mov qword ptr [rsp + 8], r8
453bcd: call 0x451e20
453bd2: mov r8, qword ptr [rsp + 8]
453bd7: jmp 0x453492
453bdc: mov rsi, rbx
453bdf: mov qword ptr [rsp + 8], r8
453be4: call 0x451e20
453be9: mov r8, qword ptr [rsp + 8]
453bee: jmp 0x4532e7
453bf3: mov rsi, rbx
453bf6: mov qword ptr [rsp + 8], r8
453bfb: call 0x451e20
453c00: mov r8, qword ptr [rsp + 8]
453c05: jmp 0x4532da
453c0a: mov rsi, rbx
453c0d: mov qword ptr [rsp + 8], r8
453c12: call 0x451e20
453c17: mov r8, qword ptr [rsp + 8]
453c1c: jmp 0x453657
453c21: mov rsi, rbx
453c24: mov qword ptr [rsp + 8], r8
453c29: call 0x451e20
453c2e: mov r8, qword ptr [rsp + 8]
453c33: jmp 0x45364a
453c38: mov rsi, rbx
453c3b: mov qword ptr [rsp + 8], r8
453c40: call 0x451e20
453c45: mov r8, qword ptr [rsp + 8]
453c4a: jmp 0x45320b
453c4f: mov rsi, rbx
453c52: mov qword ptr [rsp + 8], r8
453c57: call 0x451e20
453c5c: mov r8, qword ptr [rsp + 8]
453c61: jmp 0x4531fe
453c66: mov rsi, rbx
453c69: mov qword ptr [rsp + 8], r8
453c6e: call 0x451e20
453c73: mov r8, qword ptr [rsp + 8]
453c78: jmp 0x45357b
453c7d: mov rsi, rbx
453c80: mov qword ptr [rsp + 8], r8
453c85: call 0x451e20
453c8a: mov r8, qword ptr [rsp + 8]
453c8f: jmp 0x45356e
453c94: mov rsi, rbx
453c97: mov qword ptr [rsp + 8], r8
453c9c: call 0x451e20
453ca1: mov r8, qword ptr [rsp + 8]
453ca6: jmp 0x4533c3
453cab: mov rsi, rbx
453cae: mov qword ptr [rsp + 8], r8
453cb3: call 0x451e20
453cb8: mov r8, qword ptr [rsp + 8]
453cbd: jmp 0x4533b6
453cc2: mov rsi, rbx
453cc5: mov qword ptr [rsp + 8], r8
453cca: call 0x451e20
453ccf: mov r8, qword ptr [rsp + 8]
453cd4: jmp 0x4536c5
453cd9: mov rsi, rbx
453cdc: mov qword ptr [rsp + 8], r8
453ce1: call 0x451e20
453ce6: mov r8, qword ptr [rsp + 8]
453ceb: jmp 0x4536b8
453cf0: push r15
453cf2: push r14
453cf4: push r13
453cf6: mov r13, rcx
453cf9: push r12
453cfb: mov r12, rsi
453cfe: mov esi, 0xa
453d03: push rbp
453d04: mov rbp, rdx
453d07: push rbx
453d08: sub rsp, 0x18
453d0c: mov rbx, qword ptr [rcx]
453d0f: mov r15, qword ptr [rdx]
453d12: mov dword ptr [rsp + 0xc], edi
453d16: mov r14, rbx
453d19: mov rdi, r15
453d1c: mov qword ptr [rsp], r8
453d20: sub r14, r15
453d23: mov rdx, r14
453d26: call 0x4010b0
453d2b: test rax, rax
453d2e: je 0x453d60
453d30: lea rbx, [rax + 1]
453d34: mov qword ptr [rbp], rbx
453d38: mov rax, qword ptr [r13]
453d3c: cmp rax, rbx
453d3f: jb 0x453e61
453d45: cmp rax, r15
453d48: je 0x453e50
453d4e: add rsp, 0x18
453d52: mov rax, r15
453d55: pop rbx
453d56: pop rbp
453d57: pop r12
453d59: pop r13
453d5b: pop r14
453d5d: pop r15
453d5f: ret 
453d60: cmp r15, r12
453d63: je 0x453d34
453d65: cmp rbx, qword ptr [rsp]
453d69: jne 0x453d34
453d6b: mov rdx, r14
453d6e: mov rsi, r15
453d71: mov rdi, r12
453d74: call 0x401040
453d79: mov rax, qword ptr [r13]
453d7d: mov rdx, rbx
453d80: mov edi, dword ptr [rsp + 0xc]
453d84: add rax, r12
453d87: sub rax, qword ptr [rbp]
453d8b: mov qword ptr [r13], rax
453d8f: mov qword ptr [rbp], r12
453d93: mov rsi, qword ptr [r13]
453d97: sub rdx, rsi
453d9a: call 0x4519f0
453d9f: test rax, rax
453da2: js 0x453e50
453da8: add rax, qword ptr [r13]
453dac: mov esi, 0xa
453db1: mov qword ptr [r13], rax
453db5: mov r15, qword ptr [rbp]
453db9: mov rdx, rax
453dbc: mov rbx, rax
453dbf: sub rdx, r15
453dc2: mov rdi, r15
453dc5: call 0x4010b0
453dca: test rax, rax
453dcd: jne 0x453d30
453dd3: mov rcx, qword ptr [rsp]
453dd7: mov rax, rcx
453dda: sub rax, r12
453ddd: lea rdx, [rax + rax*2]
453de1: test rdx, rdx
453de4: lea rax, [rdx + 3]
453de8: cmovns rax, rdx
453dec: sar rax, 2
453df0: add r12, rax
453df3: sub rcx, r12
453df6: mov r15, rcx
453df9: jmp 0x453e40
453dfb: nop dword ptr [rax + rax]
453e00: mov qword ptr [r13], r12
453e04: mov edi, dword ptr [rsp + 0xc]
453e08: mov rdx, r15
453e0b: mov rsi, r12
453e0e: call 0x4519f0
453e13: mov rbx, rax
453e16: test rax, rax
453e19: js 0x453e50
453e1b: mov r14, qword ptr [r13]
453e1f: mov rdx, rax
453e22: mov esi, 0xa
453e27: mov rdi, r14
453e2a: call 0x4010b0
453e2f: mov byte ptr [r14], 0xa
453e33: add rbx, qword ptr [r13]
453e37: mov qword ptr [r13], rbx
453e3b: test rax, rax
453e3e: jne 0x453e58
453e40: cmp qword ptr [rsp], rbx
453e44: je 0x453e00
453e46: mov r15, qword ptr [rbp]
453e4a: jmp 0x453d34
453e4f: nop 
453e50: xor r15d, r15d
453e53: jmp 0x453d4e
453e58: mov r15, qword ptr [rbp]
453e5c: jmp 0x453d30
453e61: lea rcx, [rip + 0x451d8]
453e68: mov edx, 0x77
453e6d: lea rsi, [rip + 0x4517c]
453e74: lea rdi, [rip + 0x451cf]
453e7b: call 0x4032a0
453e80: endbr64 
453e84: push rbp
453e85: mov edi, 5
453e8a: mov rbp, rsp
453e8d: push r15
453e8f: push r14
453e91: push r13
453e93: lea r13, [rbp - 0x50]
453e97: push r12
453e99: mov rsi, r13
453e9c: push rbx
453e9d: sub rsp, 0x58
453ea1: mov rax, qword ptr fs:[0x28]
453eaa: mov qword ptr [rbp - 0x38], rax
453eae: xor eax, eax
453eb0: call 0x4778d0
453eb5: mov rax, qword ptr [rbp - 0x50]
453eb9: mov qword ptr [rbp - 0x70], rax
453ebd: mov rcx, rax
453ec0: mov rax, qword ptr [rip + 0x6ee19]
453ec7: cmp rax, rcx
453eca: je 0x454111
453ed0: mov edi, 0x2000
453ed5: call 0x421200
453eda: mov rcx, rsp
453edd: cmp eax, 1
453ee0: sbb rbx, rbx
453ee3: and rbx, 0xffffffffffffe200
453eea: add rbx, 0x2000
453ef1: lea rax, [rbx + 0x10]
453ef5: mov rdx, rax
453ef8: and rdx, 0xfffffffffffff000
453eff: sub rcx, rdx
453f02: mov rdx, rcx
453f05: cmp rsp, rdx
453f08: je 0x453f1f
453f0a: sub rsp, 0x1000
453f11: or qword ptr [rsp + 0xff8], 0
453f1a: cmp rsp, rdx
453f1d: jne 0x453f0a
453f1f: and eax, 0xfff
453f24: sub rsp, rax
453f27: test rax, rax
453f2a: jne 0x454126
453f30: lea r14, [rsp + 0xf]
453f35: lea rdi, [rip + 0x450e4]
453f3c: mov esi, 0x80000
453f41: xor eax, eax
453f43: and r14, 0xfffffffffffffff0
453f47: add rbx, r14
453f4a: mov qword ptr [rbp - 0x68], r14
453f4e: mov r12, r14
453f51: mov qword ptr [rbp - 0x60], rbx
453f55: mov qword ptr [rbp - 0x58], rbx
453f59: call 0x4518a0
453f5e: mov dword ptr [rbp - 0x74], eax
453f61: mov edi, eax
453f63: cmp eax, -1
453f66: je 0x454020
453f6c: lea r15, [rbp - 0x60]
453f70: lea r14, [rbp - 0x58]
453f74: mov rsi, r12
453f77: mov r8, rbx
453f7a: mov rdx, r15
453f7d: mov rcx, r14
453f80: xor r12d, r12d
453f83: call 0x453cf0
453f88: mov r15, rax
453f8b: test rax, rax
453f8e: je 0x454104
453f94: nop dword ptr [rax]
453f98: mov rdi, r15
453f9b: mov edx, 0xa
453fa0: mov rsi, r13
453fa3: call 0x4105f0
453fa8: mov rdi, qword ptr [rbp - 0x50]
453fac: mov r14, rax
453faf: cmp rdi, r15
453fb2: je 0x454104
453fb8: cmp byte ptr [rdi], 0x2d
453fbb: mov r8, rax
453fbe: je 0x4540e0
453fc4: add r12d, 1
453fc8: mov rdx, qword ptr [rbp - 0x58]
453fcc: sub r12d, r14d
453fcf: lea r14d, [r12 + r8]
453fd3: mov r12d, r14d
453fd6: cmp rdx, rdi
453fd9: jbe 0x454010
453fdb: mov rax, 0xfffffffffffffff0
453fe2: mov r15, rdi
453fe5: mov rsi, qword ptr fs:[rax]
453fe9: jmp 0x453ff9
453feb: nop dword ptr [rax + rax]
453ff0: add r15, 1
453ff4: cmp r15, rdx
453ff7: je 0x454010
453ff9: movsx rax, byte ptr [r15]
453ffd: test byte ptr [rsi + rax*2 + 1], 0x20
454002: jne 0x453ff0
454004: cmp r15, rdx
454007: jb 0x453f98
454009: nop dword ptr [rax]
454010: mov edi, dword ptr [rbp - 0x74]
454013: call 0x451730
454018: test r14d, r14d
45401b: jg 0x45407f
45401d: nop dword ptr [rax]
454020: mov esi, 0x80000
454025: lea rdi, [rip + 0x45029]
45402c: xor eax, eax
45402e: mov qword ptr [rbp - 0x60], rbx
454032: mov qword ptr [rbp - 0x58], rbx
454036: call 0x4518a0
45403b: mov r13d, eax
45403e: cmp eax, -1
454041: je 0x454131
454047: xor r12d, r12d
45404a: lea r14, [rbp - 0x58]
45404e: lea r15, [rbp - 0x60]
454052: nop word ptr [rax + rax]
454058: mov rsi, qword ptr [rbp - 0x68]
45405c: mov r8, rbx
45405f: mov rcx, r14
454062: mov rdx, r15
454065: mov edi, r13d
454068: call 0x453cf0
45406d: test rax, rax
454070: je 0x454077
454072: cmp byte ptr [rax], 0x63
454075: je 0x4540c0
454077: mov edi, r13d
45407a: call 0x451730
45407f: mov dword ptr [rip + 0x6cffa], r12d
454086: mov rax, qword ptr [rbp - 0x70]
45408a: mov qword ptr [rip + 0x6ec4f], rax
454091: mov rax, qword ptr [rbp - 0x38]
454095: xor rax, qword ptr fs:[0x28]
45409e: jne 0x4541a7
4540a4: lea rsp, [rbp - 0x28]
4540a8: mov eax, r12d
4540ab: pop rbx
4540ac: pop r12
4540ae: pop r13
4540b0: pop r14
4540b2: pop r15
4540b4: pop rbp
4540b5: ret 
4540b6: nop word ptr cs:[rax + rax]
4540c0: cmp byte ptr [rax + 1], 0x70
4540c4: jne 0x454077
4540c6: cmp byte ptr [rax + 2], 0x75
4540ca: jne 0x454077
4540cc: movsx eax, byte ptr [rax + 3]
4540d0: sub eax, 0x30
4540d3: cmp eax, 0xa
4540d6: adc r12d, 0
4540da: jmp 0x454058
4540df: nop 
4540e0: lea r15, [rdi + 1]
4540e4: mov edx, 0xa
4540e9: mov rsi, r13
4540ec: mov rdi, r15
4540ef: call 0x4105f0
4540f4: mov rdi, qword ptr [rbp - 0x50]
4540f8: mov r8, rax
4540fb: cmp rdi, r15
4540fe: jne 0x453fc4
454104: mov edi, dword ptr [rbp - 0x74]
454107: call 0x451730
45410c: jmp 0x454020
454111: mov r12d, dword ptr [rip + 0x6cf68]
454118: test r12d, r12d
45411b: js 0x453ed0
454121: jmp 0x454091
454126: or qword ptr [rsp + rax - 8], 0
45412c: jmp 0x453f30
454131: mov esi, 0x80000
454136: lea rdi, [rip + 0x44f23]
45413d: xor eax, eax
45413f: mov r12d, 2
454145: call 0x4518a0
45414a: mov r13d, eax
45414d: cmp eax, -1
454150: je 0x45407f
454156: xor r12d, r12d
454159: lea r14, [rbp - 0x58]
45415d: lea r15, [rbp - 0x60]
454161: jmp 0x454185
454163: nop dword ptr [rax + rax]
454168: mov ecx, 9
45416d: lea rdi, [rip + 0x44efa]
454174: repe cmpsb byte ptr [rsi], byte ptr [rdi]
454176: seta al
454179: sbb al, 0
45417b: movsx eax, al
45417e: cmp eax, 1
454181: adc r12d, 0
454185: mov rsi, qword ptr [rbp - 0x68]
454189: mov r8, rbx
45418c: mov rcx, r14
45418f: mov rdx, r15
454192: mov edi, r13d
454195: call 0x453cf0
45419a: mov rsi, rax
45419d: test rax, rax
4541a0: jne 0x454168
4541a2: jmp 0x454077
4541a7: call 0x4547a0
4541ac: nop dword ptr [rax]
4541b0: endbr64 
4541b4: push r13
4541b6: lea rdi, [rip + 0x44ebb]
4541bd: push r12
4541bf: xor r12d, r12d
4541c2: push rbp
4541c3: push rbx
4541c4: sub rsp, 0x18
4541c8: mov rax, qword ptr fs:[0x28]
4541d1: mov qword ptr [rsp + 8], rax
4541d6: xor eax, eax
4541d8: mov r13, rsp
4541db: call 0x477ac0
4541e0: mov rbp, rax
4541e3: test rax, rax
4541e6: je 0x454280
4541ec: nop dword ptr [rax]
4541f0: mov rdi, rbp
4541f3: call 0x477e30
4541f8: test rax, rax
4541fb: je 0x454250
4541fd: cmp byte ptr [rax + 0x12], 4
454201: jne 0x4541f0
454203: cmp word ptr [rax + 0x13], 0x7063
454209: jne 0x4541f0
45420b: cmp byte ptr [rax + 0x15], 0x75
45420f: jne 0x4541f0
454211: lea rbx, [rax + 0x16]
454215: mov edx, 0xa
45421a: mov rsi, r13
45421d: mov rdi, rbx
454220: call 0x4105f0
454225: cmp rax, -1
454229: je 0x4541f0
45422b: mov rax, qword ptr [rsp]
45422f: cmp rbx, rax
454232: je 0x4541f0
454234: cmp byte ptr [rax], 1
454237: mov rdi, rbp
45423a: adc r12d, 0
45423e: call 0x477e30
454243: test rax, rax
454246: jne 0x4541fd
454248: nop dword ptr [rax + rax]
454250: mov rdi, rbp
454253: call 0x477d50
454258: mov rax, qword ptr [rsp + 8]
45425d: xor rax, qword ptr fs:[0x28]
454266: jne 0x45428a
454268: add rsp, 0x18
45426c: mov eax, r12d
45426f: pop rbx
454270: pop rbp
454271: pop r12
454273: pop r13
454275: ret 
454276: nop word ptr cs:[rax + rax]
454280: call 0x453e80
454285: mov r12d, eax
454288: jmp 0x454258
45428a: call 0x4547a0
45428f: nop 
454290: endbr64 
454294: push rbp
454295: push rbx
454296: sub rsp, 0x88
45429d: mov rax, qword ptr fs:[0x28]
4542a6: mov qword ptr [rsp + 0x78], rax
4542ab: xor eax, eax
4542ad: mov rdi, rsp
4542b0: call 0x454460
4542b5: mov ebx, dword ptr [rsp + 0x68]
4542b9: mov rbp, qword ptr [rsp + 0x20]
4542be: call 0x451b30
4542c3: movsxd rdx, eax
4542c6: cmp ebx, 1
4542c9: ja 0x4542da
4542cb: jmp 0x4542e0
4542cd: nop dword ptr [rax]
4542d0: shr ebx, 1
4542d2: shr rdx, 1
4542d5: cmp ebx, 1
4542d8: jbe 0x4542e0
4542da: cmp rdx, 1
4542de: ja 0x4542d0
4542e0: mov eax, ebx
4542e2: imul rax, rbp
4542e6: cmp rdx, 1
4542ea: jbe 0x4542fc
4542ec: nop dword ptr [rax]
4542f0: shr rdx, 1
4542f3: shr rax, 1
4542f6: cmp rdx, 1
4542fa: jne 0x4542f0
4542fc: mov rcx, qword ptr [rsp + 0x78]
454301: xor rcx, qword ptr fs:[0x28]
45430a: jne 0x454316
45430c: add rsp, 0x88
454313: pop rbx
454314: pop rbp
454315: ret 
454316: call 0x4547a0
45431b: nop dword ptr [rax + rax]
454320: endbr64 
454324: push rbp
454325: push rbx
454326: sub rsp, 0x88
45432d: mov rax, qword ptr fs:[0x28]
454336: mov qword ptr [rsp + 0x78], rax
45433b: xor eax, eax
45433d: mov rdi, rsp
454340: call 0x454460
454345: mov ebx, dword ptr [rsp + 0x68]
454349: mov rbp, qword ptr [rsp + 0x28]
45434e: call 0x451b30
454353: movsxd rdx, eax
454356: cmp ebx, 1
454359: ja 0x45436a
45435b: jmp 0x454370
45435d: nop dword ptr [rax]
454360: shr ebx, 1
454362: shr rdx, 1
454365: cmp ebx, 1
454368: jbe 0x454370
45436a: cmp rdx, 1
45436e: ja 0x454360
454370: mov eax, ebx
454372: imul rax, rbp
454376: cmp rdx, 1
45437a: jbe 0x45438c
45437c: nop dword ptr [rax]
454380: shr rdx, 1
454383: shr rax, 1
454386: cmp rdx, 1
45438a: jne 0x454380
45438c: mov rcx, qword ptr [rsp + 0x78]
454391: xor rcx, qword ptr fs:[0x28]
45439a: jne 0x4543a6
45439c: add rsp, 0x88
4543a3: pop rbx
4543a4: pop rbp
4543a5: ret 
4543a6: call 0x4547a0
4543ab: nop dword ptr [rax + rax]
4543b0: endbr64 
4543b4: mov eax, dword ptr [rip + 0x6f46e]
4543ba: mov edx, 0x64
4543bf: test eax, eax
4543c1: cmove eax, edx
4543c4: ret 
4543c5: nop word ptr cs:[rax + rax]
4543cf: nop 
4543d0: endbr64 
4543d4: test rsi, rsi
4543d7: je 0x454420
4543d9: push rbp
4543da: push rbx
4543db: mov rbx, rsi
4543de: sub rsp, 8
4543e2: mov rbp, qword ptr [rsi]
4543e5: test rbp, rbp
4543e8: je 0x454413
4543ea: mov rdi, rbp
4543ed: mov esi, 0x2f
4543f2: call 0x401080
4543f7: lea rdx, [rax + 1]
4543fb: test rax, rax
4543fe: cmovne rbp, rdx
454402: mov qword ptr [rip + 0x6cc7f], rbp
454409: mov rax, qword ptr [rbx]
45440c: mov qword ptr [rip + 0x6cc7d], rax
454413: add rsp, 8
454417: pop rbx
454418: pop rbp
454419: ret 
45441a: nop word ptr [rax + rax]
454420: ret 
454421: nop word ptr cs:[rax + rax]
45442b: nop dword ptr [rax + rax]
454430: endbr64 
454434: mov r10, rcx
454437: mov eax, 0x19
45443c: syscall 
45443e: cmp rax, -0xfff
454444: jae 0x454447
454446: ret 
454447: mov rcx, 0xffffffffffffffc0
45444e: neg eax
454450: mov dword ptr fs:[rcx], eax
454453: or rax, 0xffffffffffffffff
454457: ret 
454458: nop dword ptr [rax + rax]
454460: endbr64 
454464: mov eax, 0x63
454469: syscall 
45446b: cmp rax, -0xfff
454471: jae 0x454474
454473: ret 
454474: mov rcx, 0xffffffffffffffc0
45447b: neg eax
45447d: mov dword ptr fs:[rcx], eax
454480: or rax, 0xffffffffffffffff
454484: ret 
454485: nop word ptr cs:[rax + rax]
45448f: nop 
454490: endbr64 
454494: push r13
454496: push r12
454498: push rbp
454499: push rbx
45449a: sub rsp, 8
45449e: mov rax, 0xffffffffffffffa0
4544a5: mov rax, qword ptr fs:[rax]
4544a9: mov r13, qword ptr [rax]
4544ac: mov rbx, qword ptr [r13 + 0x98]
4544b3: cmp byte ptr [rbx], 0
4544b6: je 0x454508
4544b8: mov r12, rdi
4544bb: xor ebp, ebp
4544bd: jmp 0x4544d6
4544bf: nop 
4544c0: mov rdi, rbx
4544c3: add rbp, 1
4544c7: call 0x401180
4544cc: lea rbx, [rbx + rax + 1]
4544d1: cmp byte ptr [rbx], 0
4544d4: je 0x454508
4544d6: mov rsi, rbx
4544d9: mov rdi, r12
4544dc: call 0x401130
4544e1: test eax, eax
4544e3: jne 0x4544c0
4544e5: mov eax, dword ptr [r13 + 0xd0]
4544ec: lea rax, [rbp + rax + 8]
4544f1: mov rax, qword ptr [r13 + rax*8]
4544f6: add rsp, 8
4544fa: pop rbx
4544fb: pop rbp
4544fc: pop r12
4544fe: pop r13
454500: ret 
454501: nop dword ptr [rax]
454508: add rsp, 8
45450c: xor eax, eax
45450e: pop rbx
45450f: pop rbp
454510: pop r12
454512: pop r13
454514: ret 
454515: nop word ptr cs:[rax + rax]
45451f: nop 
454520: endbr64 
454524: mov eax, edi
454526: test rsi, rsi
454529: je 0x454555
45452b: mov ecx, dword ptr [rsi]
45452d: mov edx, edi
45452f: shr edx, cl
454531: cmp edx, dword ptr [rsi + 4]
454534: jae 0x454555
454536: add edx, 5
454539: mov edx, dword ptr [rsi + rdx*4]
45453c: test edx, edx
45453e: je 0x454555
454540: mov ecx, dword ptr [rsi + 8]
454543: shr edi, cl
454545: mov ecx, edi
454547: and ecx, dword ptr [rsi + 0xc]
45454a: lea rcx, [rsi + rcx*4]
45454e: mov edx, dword ptr [rcx + rdx]
454551: test edx, edx
454553: jne 0x454560
454555: ret 
454556: nop word ptr cs:[rax + rax]
454560: mov ecx, eax
454562: and ecx, dword ptr [rsi + 0x10]
454565: lea rcx, [rsi + rcx*4]
454569: add eax, dword ptr [rcx + rdx]
45456c: ret 
45456d: nop dword ptr [rax]
454570: endbr64 
454574: push rax
454575: pop rax
454576: lea rdi, [rip + 0x44b13]
45457d: sub rsp, 8
454581: call 0x4547c0
454586: nop word ptr cs:[rax + rax]
454590: endbr64 
454594: push r15
454596: push r14
454598: push r13
45459a: push r12
45459c: push rbp
45459d: push rbx
45459e: mov rbx, rsi
4545a1: lea rsi, [rip + 0x40e0a]
4545a8: sub rsp, 0x48
4545ac: mov qword ptr [rsp + 8], rdi
4545b1: lea rdi, [rip + 0x44af1]
4545b8: mov rax, qword ptr fs:[0x28]
4545c1: mov qword ptr [rsp + 0x38], rax
4545c6: xor eax, eax
4545c8: call 0x418750
4545cd: test rax, rax
4545d0: je 0x454770
4545d6: mov rbp, rax
4545d9: mov eax, dword ptr [rax]
4545db: mov edx, eax
4545dd: or dh, 0x80
4545e0: mov dword ptr [rbp], edx
4545e3: mov qword ptr [rsp + 0x18], 0
4545ec: mov qword ptr [rsp + 0x20], 0
4545f5: test al, 0x10
4545f7: jne 0x454720
4545fd: mov rax, qword ptr [rsp + 8]
454602: lea r14, [rsp + 0x20]
454607: lea r13, [rsp + 0x18]
45460c: lea r15, [rsp + 0x28]
454611: add rax, rbx
454614: mov qword ptr [rsp], rax
454618: jmp 0x45464b
45461a: nop word ptr [rax + rax]
454620: cmp rdi, rax
454623: jbe 0x45471d
454629: cmp rcx, r12
45462c: jb 0x454709
454632: add rbx, rcx
454635: sub rbx, rax
454638: test rbx, rbx
45463b: je 0x454720
454641: test byte ptr [rbp], 0x10
454645: jne 0x454720
45464b: mov rcx, rbp
45464e: mov edx, 0xa
454653: mov rsi, r14
454656: mov rdi, r13
454659: call 0x473cb0
45465e: test rax, rax
454661: jle 0x454720
454667: mov rdi, qword ptr [rsp + 0x18]
45466c: mov edx, 0x10
454671: mov rsi, r15
454674: call 0x4105f0
454679: mov r12, rax
45467c: mov rax, qword ptr [rsp + 0x28]
454681: cmp rax, qword ptr [rsp + 0x18]
454686: je 0x454720
45468c: lea rdi, [rax + 1]
454690: mov qword ptr [rsp + 0x28], rdi
454695: cmp byte ptr [rax], 0x2d
454698: jne 0x454720
45469e: mov edx, 0x10
4546a3: lea rsi, [rsp + 0x30]
4546a8: call 0x4105f0
4546ad: mov rdx, qword ptr [rsp + 0x30]
4546b2: cmp rdx, qword ptr [rsp + 0x28]
4546b7: je 0x454720
4546b9: lea rsi, [rdx + 1]
4546bd: mov qword ptr [rsp + 0x30], rsi
4546c2: cmp byte ptr [rdx], 0x20
4546c5: jne 0x454720
4546c7: mov rdi, qword ptr [rsp]
4546cb: cmp rdi, r12
4546ce: jbe 0x454641
4546d4: mov rcx, qword ptr [rsp + 8]
4546d9: cmp rcx, rax
4546dc: jae 0x454641
4546e2: lea rsi, [rdx + 2]
4546e6: mov qword ptr [rsp + 0x30], rsi
4546eb: cmp byte ptr [rdx + 1], 0x72
4546ef: jne 0x454720
4546f1: lea rsi, [rdx + 3]
4546f5: mov qword ptr [rsp + 0x30], rsi
4546fa: cmp byte ptr [rdx + 2], 0x2d
4546fe: jne 0x454720
454700: cmp rcx, r12
454703: jae 0x454620
454709: mov rcx, qword ptr [rsp]
45470d: cmp rcx, rax
454710: ja 0x454760
454712: sub rbx, rcx
454715: add rbx, r12
454718: jmp 0x454638
45471d: xor ebx, ebx
45471f: nop 
454720: mov rdi, rbp
454723: call 0x418240
454728: mov rdi, qword ptr [rsp + 0x18]
45472d: call 0x426a00
454732: test rbx, rbx
454735: je 0x454788
454737: mov eax, 0xffffffff
45473c: mov rbx, qword ptr [rsp + 0x38]
454741: xor rbx, qword ptr fs:[0x28]
45474a: jne 0x45478f
45474c: add rsp, 0x48
454750: pop rbx
454751: pop rbp
454752: pop r12
454754: pop r13
454756: pop r14
454758: pop r15
45475a: ret 
45475b: nop dword ptr [rax + rax]
454760: add rbx, r12
454763: sub rbx, rax
454766: jmp 0x454638
45476b: nop dword ptr [rax + rax]
454770: mov rax, 0xffffffffffffffc0
454777: mov eax, dword ptr fs:[rax]
45477a: cmp eax, 2
45477d: je 0x454788
45477f: cmp eax, 0xd
454782: jne 0x454737
454784: nop dword ptr [rax]
454788: mov eax, 1
45478d: jmp 0x45473c
45478f: call 0x4547a0
454794: nop word ptr cs:[rax + rax]
45479e: nop 
4547a0: endbr64 
4547a4: push rax
4547a5: pop rax
4547a6: lea rdi, [rip + 0x4490c]
4547ad: sub rsp, 8
4547b1: call 0x4547c0
4547b6: nop word ptr cs:[rax + rax]
4547c0: endbr64 
4547c4: push rbp
4547c5: lea rbp, [rip + 0x44905]
4547cc: push rbx
4547cd: mov rbx, rdi
4547d0: sub rsp, 8
4547d4: nop dword ptr [rax]
4547d8: mov rdx, rbx
4547db: mov rsi, rbp
4547de: mov edi, 1
4547e3: xor eax, eax
4547e5: call 0x41af30
4547ea: jmp 0x4547d8
4547ec: nop dword ptr [rax]
4547f0: endbr64 
4547f4: ret 
4547f5: nop word ptr cs:[rax + rax]
454800: endbr64 
454804: lea rax, [rip + 0x6ef75]
45480b: test rsi, rsi
45480e: je 0x454824
454810: lea rax, [rsi + rsi*8]
454814: lea rdx, [rip + 0x6c965]
45481b: shl rax, 4
45481f: lea rax, [rdx + rax + 0x68]
454824: cmp qword ptr [rax + 8], 0
454829: je 0x454868
45482b: test rdi, rdi
45482e: je 0x454860
454830: mov dword ptr [rax], 1
454836: lea rdx, [rsi + rsi*8]
45483a: lea rcx, [rip + 0x6c93f]
454841: mov qword ptr [rax + 0x20], rdi
454845: shl rdx, 4
454849: mov rdx, qword ptr [rcx + rdx]
45484d: lea rcx, [rip - 0x64]
454854: mov qword ptr [rax + 0x10], rcx
454858: mov qword ptr [rax + 8], rdx
45485c: ret 
45485d: nop dword ptr [rax]
454860: ret 
454861: nop dword ptr [rax]
454868: mov dword ptr [rax], 1
45486e: test rdi, rdi
454871: jne 0x454836
454873: mov rdi, qword ptr [rip + 0x6ef26]
45487a: jmp 0x454836
45487c: nop dword ptr [rax]
454880: mov eax, dword ptr [rdi + 8]
454883: cmp eax, 3
454886: je 0x4548b0
454888: mov rdx, qword ptr [rsi]
45488b: cmp eax, 1
45488e: je 0x454892
454890: jbe 0x4548b8
454892: cmp rdx, qword ptr [rdi + 0x10]
454896: jb 0x4548b4
454898: cmp rdx, qword ptr [rdi + 0x18]
45489c: ja 0x4548b4
45489e: mov qword ptr [rdi + 0x20], rdx
4548a2: mov byte ptr [rdi + 0x28], 1
4548a6: ret 
4548a7: nop word ptr [rax + rax]
4548b0: mov qword ptr [rdi + 0x20], rsi
4548b4: ret 
4548b5: nop dword ptr [rax]
4548b8: cmp rdx, qword ptr [rdi + 0x10]
4548bc: jl 0x4548b4
4548be: cmp rdx, qword ptr [rdi + 0x18]
4548c2: jg 0x4548b4
4548c4: mov qword ptr [rdi + 0x20], rdx
4548c8: mov byte ptr [rdi + 0x28], 1
4548cc: ret 
4548cd: nop dword ptr [rax]
4548d0: endbr64 
4548d4: mov edi, edi
4548d6: lea rdx, [rip + 0x6ab43]
4548dd: lea rax, [rdi*8]
4548e5: sub rax, rdi
4548e8: lea rax, [rdx + rax*8]
4548ec: mov edx, dword ptr [rax + 8]
4548ef: cmp edx, 3
4548f2: je 0x454918
4548f4: mov rcx, qword ptr [rsi]
4548f7: cmp edx, 1
4548fa: je 0x4548fe
4548fc: jbe 0x454920
4548fe: cmp rcx, qword ptr [rax + 0x10]
454902: jb 0x45491c
454904: cmp rcx, qword ptr [rax + 0x18]
454908: ja 0x45491c
45490a: mov qword ptr [rax + 0x20], rcx
45490e: mov byte ptr [rax + 0x28], 1
454912: ret 
454913: nop dword ptr [rax + rax]
454918: mov qword ptr [rax + 0x20], rsi
45491c: ret 
45491d: nop dword ptr [rax]
454920: cmp rcx, qword ptr [rax + 0x10]
454924: jl 0x45491c
454926: cmp rcx, qword ptr [rax + 0x18]
45492a: jg 0x45491c
45492c: mov qword ptr [rax + 0x20], rcx
454930: mov byte ptr [rax + 0x28], 1
454934: ret 
454935: nop word ptr cs:[rax + rax]
454940: endbr64 
454944: push r15
454946: mov r8, rdi
454949: push r14
45494b: push r13
45494d: push r12
45494f: push rbp
454950: push rbx
454951: sub rsp, 0x38
454955: mov edx, dword ptr [rip + 0x6b145]
45495b: test edx, edx
45495d: jne 0x454e6e
454963: mov r13, r8
454966: nop word ptr cs:[rax + rax]
454970: test r13, r13
454973: je 0x454a8a
454979: mov rbx, qword ptr [r13]
45497d: test rbx, rbx
454980: je 0x454a8a
454986: movzx edx, byte ptr [rbx]
454989: lea r15, [r13 + 8]
45498d: cmp dl, 0x3d
454990: je 0x454df5
454996: test dl, dl
454998: je 0x454df5
45499e: mov eax, 1
4549a3: nop dword ptr [rax + rax]
4549a8: movzx edx, byte ptr [rbx + rax]
4549ac: mov rcx, rax
4549af: add rax, 1
4549b3: test dl, dl
4549b5: je 0x454a7e
4549bb: cmp dl, 0x3d
4549be: jne 0x4549a8
4549c0: test dl, dl
4549c2: je 0x454a7e
4549c8: lea rbp, [rcx + 1]
4549cc: lea rsi, [rip + 0x44716]
4549d3: mov edx, 0x47
4549d8: lea rax, [rbx + rbp]
4549dc: mov qword ptr [rsp + 8], rax
4549e1: mov rax, rbx
4549e4: jmp 0x454a0b
4549e6: nop word ptr cs:[rax + rax]
4549f0: test cl, cl
4549f2: je 0x454a12
4549f4: movzx edx, byte ptr [rsi + 1]
4549f8: add rsi, 1
4549fc: lea rcx, [rax + 1]
454a00: test dl, dl
454a02: je 0x454b21
454a08: mov rax, rcx
454a0b: movzx ecx, byte ptr [rax]
454a0e: cmp cl, dl
454a10: je 0x4549f0
454a12: mov r11d, dword ptr [rip + 0x6b087]
454a19: lea r8, [rip + 0x6aa28]
454a20: xor r9d, r9d
454a23: nop dword ptr [rax + rax]
454a28: cmp byte ptr [r8], 0
454a2c: jne 0x454a70
454a2e: mov r10, qword ptr [r8 + 8]
454a32: test r10, r10
454a35: je 0x454a70
454a37: movzx edi, byte ptr [r10]
454a3b: mov rsi, r10
454a3e: mov rax, rbx
454a41: mov ecx, edi
454a43: test dil, dil
454a46: jne 0x454a64
454a48: jmp 0x454aa0
454a4a: nop word ptr [rax + rax]
454a50: cmp dl, cl
454a52: jne 0x454a70
454a54: movzx ecx, byte ptr [rsi + 1]
454a58: add rsi, 1
454a5c: add rax, 1
454a60: test cl, cl
454a62: je 0x454aa0
454a64: movzx edx, byte ptr [rax]
454a67: test dl, dl
454a69: jne 0x454a50
454a6b: nop dword ptr [rax + rax]
454a70: add r9d, 1
454a74: add r8, 0x38
454a78: cmp r9d, 0x1a
454a7c: jne 0x454a28
454a7e: mov r13, r15
454a81: test r13, r13
454a84: jne 0x454979
454a8a: add rsp, 0x38
454a8e: pop rbx
454a8f: pop rbp
454a90: pop r12
454a92: pop r13
454a94: pop r14
454a96: pop r15
454a98: ret 
454a99: nop dword ptr [rax]
454aa0: cmp byte ptr [rax], 0x3d
454aa3: jne 0x454a70
454aa5: test r11d, r11d
454aa8: je 0x454abb
454aaa: mov eax, dword ptr [r8 + 4]
454aae: test eax, eax
454ab0: je 0x454d61
454ab6: cmp eax, 2
454ab9: jne 0x454a70
454abb: movsxd rbx, r9d
454abe: lea rdi, [rip + 0x6a95b]
454ac5: lea rax, [rbx*8]
454acd: sub rax, rbx
454ad0: lea rax, [rdi + rax*8]
454ad4: cmp dword ptr [rax + 8], 3
454ad8: je 0x454d58
454ade: mov rdi, qword ptr [rsp + 8]
454ae3: xor esi, esi
454ae5: call 0x481220
454aea: mov qword ptr [rsp + 0x28], rax
454aef: lea rax, [rsp + 0x28]
454af4: mov qword ptr [rsp + 8], rax
454af9: lea rax, [rbx*8]
454b01: mov rsi, qword ptr [rsp + 8]
454b06: mov r13, r15
454b09: sub rax, rbx
454b0c: lea rbx, [rip + 0x6a90d]
454b13: lea rdi, [rbx + rax*8]
454b17: call 0x454880
454b1c: jmp 0x454970
454b21: cmp byte ptr [rax + 1], 0x3d
454b25: jne 0x454a12
454b2b: xor edi, edi
454b2d: nop dword ptr [rax]
454b30: mov r12, rdi
454b33: add rdi, 1
454b37: cmp byte ptr [rbx + rdi - 1], 0
454b3c: jne 0x454b30
454b3e: call 0x451a90
454b43: mov r8, rax
454b46: cmp rax, -1
454b4a: je 0x454ea8
454b50: lea rax, [r12 - 1]
454b55: test r12, r12
454b58: je 0x454e05
454b5e: nop 
454b60: movzx edx, byte ptr [rbx + rax]
454b64: mov byte ptr [r8 + rax], dl
454b68: sub rax, 1
454b6c: cmp rax, -1
454b70: jne 0x454b60
454b72: add rbp, r8
454b75: mov r12, r8
454b78: movzx r11d, byte ptr [rbp]
454b7d: mov qword ptr [rsp + 0x18], rbp
454b82: test r11b, r11b
454b85: je 0x454bc0
454b87: nop word ptr [rax + rax]
454b90: cmp r11b, 0x3d
454b94: je 0x454bcc
454b96: mov eax, r11d
454b99: xor edx, edx
454b9b: cmp r11b, 0x3a
454b9f: jne 0x454bb9
454ba1: jmp 0x454bcc
454ba3: nop dword ptr [rax + rax]
454ba8: add rdx, 1
454bac: movzx eax, byte ptr [rbp + rdx]
454bb1: cmp al, 0x3d
454bb3: je 0x454bd8
454bb5: cmp al, 0x3a
454bb7: je 0x454bd8
454bb9: test al, al
454bbb: jne 0x454ba8
454bbd: mov r8, r12
454bc0: mov qword ptr [r13], r8
454bc4: mov r13, r15
454bc7: jmp 0x454970
454bcc: mov eax, r11d
454bcf: xor edx, edx
454bd1: nop dword ptr [rax]
454bd8: test al, al
454bda: je 0x454bbd
454bdc: lea r9, [rbp + rdx + 1]
454be1: movzx edi, byte ptr [r9]
454be5: cmp al, 0x3a
454be7: je 0x454cd0
454bed: test dil, dil
454bf0: je 0x454e64
454bf6: cmp dil, 0x3a
454bfa: je 0x454e64
454c00: xor ebx, ebx
454c02: jmp 0x454c0d
454c04: nop dword ptr [rax]
454c08: test dil, dil
454c0b: je 0x454c20
454c0d: add rbx, 1
454c11: movzx edi, byte ptr [r9 + rbx]
454c16: lea r8, [r9 + rbx]
454c1a: cmp dil, 0x3a
454c1e: jne 0x454c08
454c20: lea r10, [rip + 0x6a7f9]
454c27: xor r14d, r14d
454c2a: mov rcx, qword ptr [r10]
454c2d: mov rax, rbp
454c30: mov esi, r11d
454c33: movzx edx, byte ptr [rcx]
454c36: test dl, dl
454c38: jne 0x454c58
454c3a: jmp 0x454c90
454c3c: nop dword ptr [rax]
454c40: test sil, sil
454c43: je 0x454c60
454c45: movzx edx, byte ptr [rcx + 1]
454c49: add rax, 1
454c4d: add rcx, 1
454c51: movzx esi, byte ptr [rax]
454c54: test dl, dl
454c56: je 0x454c90
454c58: movzx esi, byte ptr [rax]
454c5b: cmp dl, sil
454c5e: je 0x454c40
454c60: add r14, 1
454c64: add r10, 0x38
454c68: cmp r14, 0x1a
454c6c: jne 0x454c2a
454c6e: mov rbp, r9
454c71: nop dword ptr [rax]
454c78: test dil, dil
454c7b: je 0x454bbd
454c81: lea rbp, [rbp + rbx + 1]
454c86: movzx r11d, byte ptr [rbp]
454c8b: jmp 0x454b90
454c90: cmp sil, 0x3d
454c94: jne 0x454c60
454c96: mov eax, dword ptr [rip + 0x6ae04]
454c9c: test eax, eax
454c9e: je 0x454cdb
454ca0: lea rax, [r14*8]
454ca8: lea rsi, [rip + 0x6a771]
454caf: sub rax, r14
454cb2: mov eax, dword ptr [rsi + rax*8 + 0x2c]
454cb6: test eax, eax
454cb8: je 0x454e18
454cbe: mov rbp, r9
454cc1: cmp eax, 2
454cc4: je 0x454cde
454cc6: movzx edi, byte ptr [r8]
454cca: jmp 0x454c78
454ccc: nop dword ptr [rax]
454cd0: mov r11d, edi
454cd3: mov rbp, r9
454cd6: jmp 0x454b90
454cdb: mov rbp, r9
454cde: lea rax, [r14*8]
454ce6: lea rdi, [rip + 0x6a733]
454ced: sub r9, qword ptr [rsp + 0x18]
454cf2: add r9, qword ptr [rsp + 8]
454cf7: sub rax, r14
454cfa: mov byte ptr [r9 + rbx], 0
454cff: lea rax, [rdi + rax*8]
454d03: cmp dword ptr [rax + 8], 3
454d07: je 0x454dfc
454d0d: mov rdi, r9
454d10: xor esi, esi
454d12: mov qword ptr [rsp + 0x10], r8
454d17: call 0x481220
454d1c: mov r8, qword ptr [rsp + 0x10]
454d21: lea r9, [rsp + 0x28]
454d26: mov qword ptr [rsp + 0x28], rax
454d2b: lea rax, [r14*8]
454d33: lea rdi, [rip + 0x6a6e6]
454d3a: mov rsi, r9
454d3d: mov qword ptr [rsp + 0x10], r8
454d42: sub rax, r14
454d45: lea rdi, [rdi + rax*8]
454d49: call 0x454880
454d4e: mov r8, qword ptr [rsp + 0x10]
454d53: jmp 0x454cc6
454d58: mov byte ptr [rax + 0x28], 1
454d5c: jmp 0x454af9
454d61: mov rax, qword ptr [r13]
454d65: mov rsi, r13
454d68: mov r15, r13
454d6b: test rax, rax
454d6e: je 0x454a70
454d74: mov rcx, r10
454d77: test dil, dil
454d7a: jne 0x454d95
454d7c: jmp 0x454dc0
454d7e: nop 
454d80: test dl, dl
454d82: je 0x454d9d
454d84: movzx edi, byte ptr [rcx + 1]
454d88: add rcx, 1
454d8c: add rax, 1
454d90: test dil, dil
454d93: je 0x454dc0
454d95: movzx edx, byte ptr [rax]
454d98: cmp dil, dl
454d9b: je 0x454d80
454d9d: mov rax, qword ptr [rsi + 8]
454da1: add rsi, 8
454da5: test rax, rax
454da8: je 0x454de9
454daa: movzx edi, byte ptr [r10]
454dae: mov rcx, r10
454db1: test dil, dil
454db4: jne 0x454d95
454db6: nop word ptr cs:[rax + rax]
454dc0: cmp byte ptr [rax], 0x3d
454dc3: jne 0x454d9d
454dc5: mov rax, rsi
454dc8: nop dword ptr [rax + rax]
454dd0: mov rdx, qword ptr [rax + 8]
454dd4: add rax, 8
454dd8: mov qword ptr [rax - 8], rdx
454ddc: test rdx, rdx
454ddf: jne 0x454dd0
454de1: mov rax, qword ptr [rsi]
454de4: test rax, rax
454de7: jne 0x454daa
454de9: mov eax, dword ptr [r8 + 4]
454ded: mov r15, r13
454df0: jmp 0x454ab6
454df5: xor ecx, ecx
454df7: jmp 0x4549c0
454dfc: mov byte ptr [rax + 0x28], 1
454e00: jmp 0x454d2b
454e05: test r8, r8
454e08: je 0x454bc0
454e0e: jmp 0x454b72
454e13: nop dword ptr [rax + rax]
454e18: test dil, dil
454e1b: je 0x454e9c
454e1d: lea rdx, [r9 + rbx + 1]
454e22: mov rax, rbp
454e25: movzx ecx, byte ptr [rdx]
454e28: test cl, cl
454e2a: je 0x454e41
454e2c: nop dword ptr [rax]
454e30: add rdx, 1
454e34: mov byte ptr [rax], cl
454e36: add rax, 1
454e3a: movzx ecx, byte ptr [rdx]
454e3d: test cl, cl
454e3f: jne 0x454e30
454e41: mov byte ptr [rax], 0
454e44: lea rax, [r14*8]
454e4c: lea rbx, [rip + 0x6a5cd]
454e53: mov r8, rbp
454e56: sub rax, r14
454e59: mov eax, dword ptr [rbx + rax*8 + 0x2c]
454e5d: xor ebx, ebx
454e5f: jmp 0x454cc1
454e64: mov r8, r9
454e67: xor ebx, ebx
454e69: jmp 0x454c20
454e6e: xor esi, esi
454e70: lea rdi, [rip + 0x44281]
454e77: mov eax, 0x15
454e7c: syscall 
454e7e: cmp eax, 0xfffff000
454e83: jbe 0x454e8d
454e85: test eax, eax
454e87: jne 0x454963
454e8d: mov dword ptr [rip + 0x6ab2d], 2
454e97: jmp 0x454963
454e9c: mov byte ptr [rbp], 0
454ea0: mov r8, r12
454ea3: jmp 0x454bc0
454ea8: mov edi, 2
454ead: lea rsi, [rip + 0x444a4]
454eb4: xor eax, eax
454eb6: call 0x4810c0
454ebb: mov edi, 0x7f
454ec0: call 0x4505c0
454ec5: nop word ptr cs:[rax + rax]
454ed0: endbr64 
454ed4: mov edi, edi
454ed6: lea rcx, [rip + 0x6a543]
454edd: lea rax, [rdi*8]
454ee5: sub rax, rdi
454ee8: lea rax, [rcx + rax*8]
454eec: mov r8d, dword ptr [rax + 8]
454ef0: mov rax, qword ptr [rax + 0x20]
454ef4: cmp r8d, 2
454ef8: ja 0x454f38
454efa: test r8d, r8d
454efd: jne 0x454f38
454eff: mov dword ptr [rsi], eax
454f01: lea rax, [rdi*8]
454f09: sub rax, rdi
454f0c: cmp byte ptr [rcx + rax*8 + 0x28], 0
454f11: lea rsi, [rax*8]
454f19: je 0x454f30
454f1b: test rdx, rdx
454f1e: je 0x454f30
454f20: lea rdi, [rcx + rsi + 0x20]
454f25: jmp rdx
454f27: nop word ptr [rax + rax]
454f30: ret 
454f31: nop dword ptr [rax]
454f38: mov qword ptr [rsi], rax
454f3b: jmp 0x454f01
454f3d: nop dword ptr [rax]
454f40: endbr64 
454f44: mov rax, qword ptr [rdi]
454f47: mov qword ptr [rip + 0x6e892], rdi
454f4e: test rax, rax
454f51: je 0x455350
454f57: push r15
454f59: mov rsi, qword ptr [rip + 0x6dda0]
454f60: xor r11d, r11d
454f63: xor r9d, r9d
454f66: push r14
454f68: mov ecx, dword ptr [rip + 0x6e922]
454f6e: xor r14d, r14d
454f71: xor r8d, r8d
454f74: push r13
454f76: mov r10, qword ptr [rip + 0x6c19b]
454f7d: lea rdx, [rip + 0x4451c]
454f84: mov r15, qword ptr [rip + 0x6e8bd]
454f8b: mov r13, qword ptr [rip + 0x6e87e]
454f92: push r12
454f94: xor r12d, r12d
454f97: push rbp
454f98: mov ebp, dword ptr [rip + 0x6e88a]
454f9e: push rbx
454f9f: mov rbx, qword ptr [rip + 0x6e88a]
454fa6: mov qword ptr [rsp - 0x28], rsi
454fab: mov esi, dword ptr [rip + 0x6aaef]
454fb1: mov qword ptr [rsp - 0x20], rbx
454fb6: mov rbx, qword ptr [rip + 0x6aaa3]
454fbd: mov dword ptr [rsp - 0x14], esi
454fc1: mov rsi, qword ptr [rip + 0x6dd40]
454fc8: mov qword ptr [rsp - 0x10], rbx
454fcd: movzx ebx, word ptr [rip + 0x6c138]
454fd4: mov dword ptr [rsp - 8], ecx
454fd8: mov rcx, qword ptr [rip + 0x6e809]
454fdf: mov byte ptr [rsp - 1], 0
454fe4: mov byte ptr [rsp - 2], 0
454fe9: mov byte ptr [rsp - 3], 0
454fee: mov byte ptr [rsp - 0x15], 0
454ff3: mov byte ptr [rsp - 0x16], 0
454ff8: mov byte ptr [rsp - 4], 0
454ffd: mov word ptr [rsp - 0x18], bx
455002: xor ebx, ebx
455004: mov qword ptr [rsp - 0x30], rsi
455009: xor esi, esi
45500b: mov qword ptr [rsp - 0x38], rcx
455010: xor ecx, ecx
455012: nop word ptr [rax + rax]
455018: sub rax, 3
45501c: cmp rax, 0x1e
455020: ja 0x455040
455022: movsxd rax, dword ptr [rdx + rax*4]
455026: add rax, rdx
455029: notrack jmp rax
45502c: nop dword ptr [rax]
455030: mov rax, qword ptr [rdi + 8]
455034: mov byte ptr [rsp - 1], 1
455039: mov qword ptr [rsp - 0x10], rax
45503e: nop 
455040: mov rax, qword ptr [rdi + 0x10]
455044: add rdi, 0x10
455048: test rax, rax
45504b: jne 0x455018
45504d: nop dword ptr [rax]
455050: test r9b, r9b
455053: jne 0x455340
455059: test r11b, r11b
45505c: je 0x455064
45505e: mov dword ptr [rip + 0x6e7c4], ebp
455064: test bl, bl
455066: je 0x45506f
455068: mov qword ptr [rip + 0x6e7a1], r13
45506f: test r12b, r12b
455072: je 0x45507b
455074: mov qword ptr [rip + 0x6e7cd], r15
45507b: test r14b, r14b
45507e: je 0x45508c
455080: mov rax, qword ptr [rsp - 0x38]
455085: mov qword ptr [rip + 0x6e75c], rax
45508c: cmp byte ptr [rsp - 4], 0
455091: je 0x45509f
455093: mov rax, qword ptr [rsp - 0x30]
455098: mov qword ptr [rip + 0x6dc69], rax
45509f: cmp byte ptr [rsp - 0x16], 0
4550a4: je 0x4550b2
4550a6: mov rax, qword ptr [rsp - 0x28]
4550ab: mov qword ptr [rip + 0x6dc4e], rax
4550b2: cmp byte ptr [rsp - 0x15], 0
4550b7: je 0x4550c5
4550b9: movzx eax, word ptr [rsp - 0x18]
4550be: mov word ptr [rip + 0x6c047], ax
4550c5: cmp byte ptr [rsp - 3], 0
4550ca: je 0x4550d8
4550cc: mov rax, qword ptr [rsp - 0x20]
4550d1: mov qword ptr [rip + 0x6e758], rax
4550d8: cmp byte ptr [rsp - 2], 0
4550dd: je 0x4550f3
4550df: mov eax, dword ptr [rsp - 0x14]
4550e3: mov dword ptr [rip + 0x6a9b7], eax
4550e9: mov eax, dword ptr [rsp - 8]
4550ed: mov dword ptr [rip + 0x6e79d], eax
4550f3: cmp byte ptr [rsp - 1], 0
4550f8: je 0x455106
4550fa: mov rax, qword ptr [rsp - 0x10]
4550ff: mov qword ptr [rip + 0x6a95a], rax
455106: cmp ecx, 0xf
455109: jne 0x455123
45510b: mov dword ptr [rip + 0x6e77b], 1
455115: xor eax, eax
455117: or r8d, esi
45511a: setne al
45511d: mov dword ptr [rip + 0x6a97d], eax
455123: pop rbx
455124: pop rbp
455125: pop r12
455127: pop r13
455129: pop r14
45512b: pop r15
45512d: ret 
45512e: nop 
455130: mov rax, qword ptr [rdi + 8]
455134: add rdi, 0x10
455138: mov byte ptr [rsp - 3], 1
45513d: mov qword ptr [rsp - 0x20], rax
455142: mov rax, qword ptr [rdi]
455145: test rax, rax
455148: jne 0x455018
45514e: jmp 0x455050
455153: nop dword ptr [rax + rax]
455158: mov rax, qword ptr [rdi + 8]
45515c: add rdi, 0x10
455160: mov byte ptr [rsp - 0x16], 1
455165: mov qword ptr [rsp - 0x28], rax
45516a: mov rax, qword ptr [rdi]
45516d: test rax, rax
455170: jne 0x455018
455176: jmp 0x455050
45517b: nop dword ptr [rax + rax]
455180: mov eax, dword ptr [rdi + 8]
455183: add rdi, 0x10
455187: mov byte ptr [rsp - 2], 1
45518c: mov ecx, 0xffffffff
455191: mov dword ptr [rsp - 8], 1
455199: mov dword ptr [rsp - 0x14], eax
45519d: mov rax, qword ptr [rdi]
4551a0: test rax, rax
4551a3: jne 0x455018
4551a9: jmp 0x455050
4551ae: nop 
4551b0: movzx eax, word ptr [rdi + 8]
4551b4: add rdi, 0x10
4551b8: mov byte ptr [rsp - 0x15], 1
4551bd: mov word ptr [rsp - 0x18], ax
4551c2: mov rax, qword ptr [rdi]
4551c5: test rax, rax
4551c8: jne 0x455018
4551ce: jmp 0x455050
4551d3: nop dword ptr [rax + rax]
4551d8: mov ebp, dword ptr [rdi + 8]
4551db: mov rax, qword ptr [rdi + 0x10]
4551df: add rdi, 0x10
4551e3: mov r11d, 1
4551e9: test rax, rax
4551ec: jne 0x455018
4551f2: jmp 0x455050
4551f7: nop word ptr [rax + rax]
455200: mov rax, qword ptr [rdi + 8]
455204: add rdi, 0x10
455208: mov byte ptr [rsp - 4], 1
45520d: mov qword ptr [rsp - 0x30], rax
455212: mov rax, qword ptr [rdi]
455215: test rax, rax
455218: jne 0x455018
45521e: jmp 0x455050
455223: nop dword ptr [rax + rax]
455228: mov rax, qword ptr [rdi + 8]
45522c: add rdi, 0x10
455230: mov r14d, 1
455236: mov qword ptr [rsp - 0x38], rax
45523b: mov rax, qword ptr [rdi]
45523e: test rax, rax
455241: jne 0x455018
455247: jmp 0x455050
45524c: nop dword ptr [rax]
455250: xor esi, dword ptr [rdi + 8]
455253: mov rax, qword ptr [rdi + 0x10]
455257: add rdi, 0x10
45525b: or ecx, 8
45525e: test rax, rax
455261: jne 0x455018
455267: jmp 0x455050
45526c: nop dword ptr [rax]
455270: xor esi, dword ptr [rdi + 8]
455273: mov rax, qword ptr [rdi + 0x10]
455277: add rdi, 0x10
45527b: or ecx, 4
45527e: test rax, rax
455281: jne 0x455018
455287: jmp 0x455050
45528c: nop dword ptr [rax]
455290: xor r8d, dword ptr [rdi + 8]
455294: mov rax, qword ptr [rdi + 0x10]
455298: add rdi, 0x10
45529c: or ecx, 2
45529f: test rax, rax
4552a2: jne 0x455018
4552a8: jmp 0x455050
4552ad: nop dword ptr [rax]
4552b0: xor r8d, dword ptr [rdi + 8]
4552b4: mov rax, qword ptr [rdi + 0x10]
4552b8: add rdi, 0x10
4552bc: or ecx, 1
4552bf: test rax, rax
4552c2: jne 0x455018
4552c8: jmp 0x455050
4552cd: nop dword ptr [rax]
4552d0: mov rax, qword ptr [rdi + 8]
4552d4: test rax, rax
4552d7: cmovne r10, rax
4552db: mov eax, 1
4552e0: cmovne r9d, eax
4552e4: mov rax, qword ptr [rdi + 0x10]
4552e8: add rdi, 0x10
4552ec: test rax, rax
4552ef: jne 0x455018
4552f5: jmp 0x455050
4552fa: nop word ptr [rax + rax]
455300: mov r15, qword ptr [rdi + 8]
455304: mov rax, qword ptr [rdi + 0x10]
455308: add rdi, 0x10
45530c: mov r12d, 1
455312: test rax, rax
455315: jne 0x455018
45531b: jmp 0x455050
455320: mov r13, qword ptr [rdi + 8]
455324: mov rax, qword ptr [rdi + 0x10]
455328: add rdi, 0x10
45532c: mov ebx, 1
455331: test rax, rax
455334: jne 0x455018
45533a: jmp 0x455050
45533f: nop 
455340: mov qword ptr [rip + 0x6bdd1], r10
455347: jmp 0x455059
45534c: nop dword ptr [rax]
455350: ret 
455351: nop word ptr cs:[rax + rax]
45535c: nop dword ptr [rax]
455360: endbr64 
455364: push r14
455366: push r13
455368: push r12
45536a: push rbp
45536b: push rbx
45536c: sub rsp, 0x50
455370: call 0x482630
455375: lea rdi, [rip + 0x4434f]
45537c: mov qword ptr [rip + 0x6c1e5], rax
455383: mov rax, qword ptr [rip + 0x6e486]
45538a: mov qword ptr [rip + 0x6c137], rax
455391: mov rax, qword ptr [rip + 0x6e4b0]
455398: mov word ptr [rip + 0x6c139], ax
45539f: call 0x40fe70
4553a4: xor edx, edx
4553a6: test rax, rax
4553a9: je 0x4553b3
4553ab: xor edx, edx
4553ad: cmp byte ptr [rax], 0
4553b0: setne dl
4553b3: cmp qword ptr [rip + 0x6e475], 0
4553bb: mov dword ptr [rip + 0x6e47f], edx
4553c1: je 0x455e50
4553c7: lea rsi, [rip + 0x56647]
4553ce: xor r9d, r9d
4553d1: xor r8d, r8d
4553d4: xor ecx, ecx
4553d6: mov edx, 1
4553db: mov rdi, rsi
4553de: call 0x47e050
4553e3: mov rbp, rax
4553e6: test rax, rax
4553e9: je 0x455e50
4553ef: mov rdi, qword ptr [rip + 0x6e43a]
4553f6: xor ecx, ecx
4553f8: mov rax, qword ptr [rdi + 0x20]
4553fc: movzx esi, word ptr [rdi + 0x38]
455400: add rax, rdi
455403: mov word ptr [rbp + 0x2b8], si
45540a: mov qword ptr [rbp + 0x2a8], rax
455411: test rsi, rsi
455414: jne 0x45543f
455416: jmp 0x45546a
455418: nop dword ptr [rax + rax]
455420: cmp edx, 1
455423: je 0x455cc0
455429: cmp edx, 7
45542c: je 0x456010
455432: add rcx, 1
455436: add rax, 0x38
45543a: cmp rcx, rsi
45543d: je 0x45546a
45543f: mov edx, dword ptr [rax]
455441: cmp edx, 2
455444: jne 0x455420
455446: mov rdx, qword ptr [rax + 0x10]
45544a: add rcx, 1
45544e: add rax, 0x38
455452: mov qword ptr [rbp + 0x10], rdx
455456: mov rdx, qword ptr [rax - 0x10]
45545a: shr rdx, 4
45545e: mov word ptr [rbp + 0x2ba], dx
455465: cmp rcx, rsi
455468: jne 0x45543f
45546a: mov qword ptr [rbp + 0x350], rdi
455471: sub rdi, qword ptr [rbp]
455475: mov rdx, rdi
455478: add qword ptr [rbp + 0x358], rdi
45547f: mov rcx, rdi
455482: add qword ptr [rbp + 0x360], rdi
455489: add rdx, qword ptr [rbp + 0x10]
45548d: mov qword ptr [rbp], rdi
455491: mov qword ptr [rbp + 0x10], rdx
455495: je 0x455774
45549b: mov rax, qword ptr [rdx]
45549e: lea rdi, [rbp + 0x40]
4554a2: test rax, rax
4554a5: je 0x455516
4554a7: mov r8d, 0x6fffffff
4554ad: mov r11d, 0x6ffffdff
4554b3: mov ebx, 0x6ffffe35
4554b8: mov r12d, 0x6ffffeff
4554be: mov r13d, 0x6fffff41
4554c4: mov r10d, 0x32
4554ca: mov r9d, 0x70000022
4554d0: jmp 0x4554ff
4554d2: nop word ptr [rax + rax]
4554d8: mov rsi, r8
4554db: sub rsi, rax
4554de: cmp rsi, 0xf
4554e2: ja 0x455d20
4554e8: mov rsi, r9
4554eb: sub rsi, rax
4554ee: mov qword ptr [rdi + rsi*8], rdx
4554f2: mov rax, qword ptr [rdx + 0x10]
4554f6: add rdx, 0x10
4554fa: test rax, rax
4554fd: je 0x455516
4554ff: cmp rax, 0x22
455503: ja 0x4554d8
455505: mov qword ptr [rdi + rax*8], rdx
455509: mov rax, qword ptr [rdx + 0x10]
45550d: add rdx, 0x10
455511: test rax, rax
455514: jne 0x4554ff
455516: test rcx, rcx
455519: je 0x4556b4
45551f: mov rax, qword ptr [rbp + 0x60]
455523: test rax, rax
455526: je 0x455f24
45552c: mov rbx, qword ptr [rax + 8]
455530: mov rdx, qword ptr [rax]
455533: lea rax, [rip + 0x6a4a6]
45553a: mov edi, 0x50
45553f: mov qword ptr [rbp + 0x60], rax
455543: mov esi, 0x10
455548: mov eax, 0x70
45554d: mov r8d, 0x40
455553: add rbx, rcx
455556: mov qword ptr [rip + 0x6a483], rdx
45555d: mov r10d, 0x30
455563: mov edx, 0x60
455568: mov qword ptr [rip + 0x6a479], rbx
45556f: mov r11d, 0x20
455575: mov r9, qword ptr [rbp + 0x58]
455579: test r9, r9
45557c: je 0x455fc1
455582: lea rbx, [rip + 0x6a457]
455589: add rsi, rbx
45558c: mov rbx, qword ptr [r9]
45558f: mov qword ptr [rsi], rbx
455592: mov rbx, qword ptr [r9 + 8]
455596: add rbx, rcx
455599: mov qword ptr [rsi + 8], rbx
45559d: mov qword ptr [rbp + 0x58], rsi
4555a1: mov r9, qword ptr [rbp + 0x68]
4555a5: test r9, r9
4555a8: je 0x455fad
4555ae: mov rbx, qword ptr [r9 + 8]
4555b2: lea rsi, [rip + 0x6a427]
4555b9: add rsi, r11
4555bc: mov r11, qword ptr [r9]
4555bf: add rbx, rcx
4555c2: mov qword ptr [rsi], r11
4555c5: mov qword ptr [rsi + 8], rbx
4555c9: mov qword ptr [rbp + 0x68], rsi
4555cd: mov r9, qword ptr [rbp + 0x70]
4555d1: test r9, r9
4555d4: je 0x455f9c
4555da: mov rbx, qword ptr [r9 + 8]
4555de: lea rsi, [rip + 0x6a3fb]
4555e5: add rsi, r10
4555e8: mov r10, qword ptr [r9]
4555eb: add rbx, rcx
4555ee: mov qword ptr [rsi], r10
4555f1: mov qword ptr [rsi + 8], rbx
4555f5: mov qword ptr [rbp + 0x70], rsi
4555f9: mov r9, qword ptr [rbp + 0x78]
4555fd: test r9, r9
455600: je 0x455f8e
455606: lea rsi, [rip + 0x6a3d3]
45560d: add rsi, r8
455610: mov r8, qword ptr [r9]
455613: mov qword ptr [rsi], r8
455616: mov r8, qword ptr [r9 + 8]
45561a: add r8, rcx
45561d: mov qword ptr [rsi + 8], r8
455621: mov qword ptr [rbp + 0x78], rsi
455625: mov r8, qword ptr [rbp + 0xf8]
45562c: test r8, r8
45562f: je 0x455fe0
455635: lea rsi, [rip + 0x6a3a4]
45563c: add rdi, rsi
45563f: mov rsi, qword ptr [r8]
455642: mov qword ptr [rdi], rsi
455645: mov rsi, qword ptr [r8 + 8]
455649: add rsi, rcx
45564c: mov qword ptr [rdi + 8], rsi
455650: mov qword ptr [rbp + 0xf8], rdi
455657: mov rdi, qword ptr [rbp + 0x1d0]
45565e: test rdi, rdi
455661: je 0x455fd8
455667: lea rsi, [rip + 0x6a372]
45566e: add rdx, rsi
455671: mov rsi, qword ptr [rdi]
455674: mov qword ptr [rdx], rsi
455677: mov rsi, qword ptr [rdi + 8]
45567b: add rsi, rcx
45567e: mov qword ptr [rdx + 8], rsi
455682: mov qword ptr [rbp + 0x1d0], rdx
455689: mov rdx, qword ptr [rbp + 0x2a0]
455690: test rdx, rdx
455693: je 0x4556b4
455695: lea rsi, [rip + 0x6a344]
45569c: add rcx, qword ptr [rdx + 8]
4556a0: add rax, rsi
4556a3: mov rsi, qword ptr [rdx]
4556a6: mov qword ptr [rax + 8], rcx
4556aa: mov qword ptr [rax], rsi
4556ad: mov qword ptr [rbp + 0x2a0], rax
4556b4: mov rax, qword ptr [rbp + 0xe0]
4556bb: test rax, rax
4556be: je 0x4556cb
4556c0: cmp qword ptr [rax + 8], 7
4556c5: jne 0x45606b
4556cb: cmp qword ptr [rbp + 0x78], 0
4556d0: je 0x4556e4
4556d2: mov rax, qword ptr [rbp + 0x88]
4556d9: cmp qword ptr [rax + 8], 0x18
4556de: jne 0x45604c
4556e4: mov rax, qword ptr [rbp + 0x130]
4556eb: test rax, rax
4556ee: je 0x45571e
4556f0: mov rdx, qword ptr [rax + 8]
4556f4: mov dword ptr [rbp + 0x3e8], edx
4556fa: test dl, 2
4556fd: je 0x455706
4556ff: mov qword ptr [rbp + 0xc0], rax
455706: test dl, 4
455709: je 0x455712
45570b: mov qword ptr [rbp + 0xf0], rax
455712: and edx, 8
455715: je 0x45571e
455717: mov qword ptr [rbp + 0x100], rax
45571e: mov rax, qword ptr [rbp + 0x178]
455725: test rax, rax
455728: je 0x45575f
45572a: mov rsi, qword ptr [rax + 8]
45572e: mov dword ptr [rbp + 0x3e4], esi
455734: mov eax, esi
455736: test sil, 8
45573a: jne 0x455f18
455740: test byte ptr [rip + 0x6e079], 0x40
455747: jne 0x455feb
45574d: test al, 1
45574f: je 0x45575f
455751: mov rax, qword ptr [rbp + 0x178]
455758: mov qword ptr [rbp + 0x100], rax
45575f: cmp qword ptr [rbp + 0x128], 0
455767: je 0x455774
455769: mov qword ptr [rbp + 0xb8], 0
455774: mov rdi, rbp
455777: call 0x47ded0
45577c: mov rax, qword ptr [rbp + 0x398]
455783: lea rdx, [rbp + 0x28]
455787: or byte ptr [rbp + 0x31c], 4
45578e: mov dword ptr [rbp + 0x3dc], 1
455798: mov dword ptr [rax + 8], 1
45579f: mov qword ptr [rax], rdx
4557a2: mov rax, qword ptr [rbp + 0xb0]
4557a9: test rax, rax
4557ac: je 0x4557f0
4557ae: mov rdx, qword ptr [rbp + 0x68]
4557b2: mov r12, qword ptr [rax + 8]
4557b6: add r12, qword ptr [rdx + 8]
4557ba: mov rdi, r12
4557bd: call 0x401180
4557c2: lea r13, [rax + 1]
4557c6: mov rdi, r13
4557c9: call 0x426410
4557ce: mov rdi, rax
4557d1: test rax, rax
4557d4: je 0x45602f
4557da: mov rdx, r13
4557dd: mov rsi, r12
4557e0: call 0x401060
4557e5: mov rdx, qword ptr [rbp + 0x38]
4557e9: mov qword ptr [rbp + 8], rax
4557ed: mov qword ptr [rdx], rax
4557f0: xor esi, esi
4557f2: mov rdi, rbp
4557f5: call 0x47df90
4557fa: mov qword ptr [rip + 0x6dfff], rbp
455801: mov qword ptr [rip + 0x6b91c], 1
45580c: lea rbx, [rsp + 0x10]
455811: lea r12, [rsp + 0x30]
455816: mov rsi, rbp
455819: xor r9d, r9d
45581c: pxor xmm0, xmm0
455820: lea r14, [rip + 0x43ef0]
455827: movabs rax, 0x103ae75f6
455831: mov qword ptr [rsp + 0x20], 0
45583a: movaps xmmword ptr [rsp + 0x10], xmm0
45583f: lea r13, [rsp + 8]
455844: lea rcx, [rbp + 0x398]
45584b: mov r8, r12
45584e: mov byte ptr [rsp + 0x14], 0x20
455853: mov rdx, r13
455856: lea rdi, [rip + 0x43ec4]
45585d: mov qword ptr [rsp + 0x30], r14
455862: mov qword ptr [rsp + 0x38], rax
455867: mov qword ptr [rsp + 0x40], 0
455870: mov qword ptr [rsp + 8], rbx
455875: push 0
455877: push 0
455879: call 0x47d3a0
45587e: mov rdx, qword ptr [rsp + 0x18]
455883: pop rcx
455884: pop rsi
455885: test rdx, rdx
455888: je 0x455f80
45588e: cmp word ptr [rdx + 6], -0xf
455893: je 0x455d10
455899: test rax, rax
45589c: je 0x455d10
4558a2: mov rax, qword ptr [rax]
4558a5: mov rsi, qword ptr [rip + 0x6df54]
4558ac: add rax, qword ptr [rdx + 8]
4558b0: mov qword ptr [rip + 0x6a1e1], rax
4558b7: test rsi, rsi
4558ba: je 0x455e6b
4558c0: pxor xmm0, xmm0
4558c4: mov qword ptr [rsp + 0x30], r14
4558c9: mov rdx, r13
4558cc: xor r9d, r9d
4558cf: movaps xmmword ptr [rsp + 0x10], xmm0
4558d4: lea rcx, [rsi + 0x398]
4558db: movabs rax, 0x103ae75f6
4558e5: mov r8, r12
4558e8: mov qword ptr [rsp + 0x20], 0
4558f1: lea rdi, [rip + 0x43e3e]
4558f8: mov byte ptr [rsp + 0x14], 0x20
4558fd: mov qword ptr [rsp + 0x38], rax
455902: mov qword ptr [rsp + 0x40], 0
45590b: mov qword ptr [rsp + 8], rbx
455910: push 0
455912: push 0
455914: call 0x47d3a0
455919: mov rdx, qword ptr [rsp + 0x18]
45591e: pop r11
455920: pop rbp
455921: test rdx, rdx
455924: je 0x455f50
45592a: cmp word ptr [rdx + 6], -0xf
45592f: je 0x455ed0
455935: test rax, rax
455938: je 0x455ed0
45593e: mov rax, qword ptr [rax]
455941: mov rsi, qword ptr [rip + 0x6deb8]
455948: add rax, qword ptr [rdx + 8]
45594c: mov qword ptr [rip + 0x6a13d], rax
455953: test rsi, rsi
455956: je 0x455e76
45595c: pxor xmm0, xmm0
455960: mov qword ptr [rsp + 0x30], r14
455965: xor r9d, r9d
455968: mov rdx, r13
45596b: movaps xmmword ptr [rsp + 0x10], xmm0
455970: lea rcx, [rsi + 0x398]
455977: movabs rax, 0x103ae75f6
455981: mov r8, r12
455984: mov qword ptr [rsp + 0x20], 0
45598d: lea rdi, [rip + 0x43db6]
455994: mov byte ptr [rsp + 0x14], 0x20
455999: mov qword ptr [rsp + 0x38], rax
45599e: mov qword ptr [rsp + 0x40], 0
4559a7: mov qword ptr [rsp + 8], rbx
4559ac: push 0
4559ae: push 0
4559b0: call 0x47d3a0
4559b5: mov rdx, qword ptr [rsp + 0x18]
4559ba: pop r9
4559bc: pop r10
4559be: test rdx, rdx
4559c1: je 0x455f60
4559c7: cmp word ptr [rdx + 6], -0xf
4559cc: je 0x455ec0
4559d2: test rax, rax
4559d5: je 0x455ec0
4559db: mov rax, qword ptr [rax]
4559de: mov rsi, qword ptr [rip + 0x6de1b]
4559e5: add rax, qword ptr [rdx + 8]
4559e9: mov qword ptr [rip + 0x6a098], rax
4559f0: test rsi, rsi
4559f3: je 0x455e81
4559f9: pxor xmm0, xmm0
4559fd: mov qword ptr [rsp + 0x30], r14
455a02: mov r8, r12
455a05: mov rdx, r13
455a08: movaps xmmword ptr [rsp + 0x10], xmm0
455a0d: lea rdi, [rip + 0x43d42]
455a14: xor r9d, r9d
455a17: movabs rax, 0x103ae75f6
455a21: mov qword ptr [rsp + 0x20], 0
455a2a: lea rcx, [rsi + 0x398]
455a31: mov byte ptr [rsp + 0x14], 0x20
455a36: mov qword ptr [rsp + 0x38], rax
455a3b: mov qword ptr [rsp + 0x40], 0
455a44: mov qword ptr [rsp + 8], rbx
455a49: push 0
455a4b: push 0
455a4d: call 0x47d3a0
455a52: mov rdx, qword ptr [rsp + 0x18]
455a57: pop rdi
455a58: pop r8
455a5a: test rdx, rdx
455a5d: je 0x455f70
455a63: cmp word ptr [rdx + 6], -0xf
455a68: je 0x455eb8
455a6e: test rax, rax
455a71: je 0x455eb8
455a77: mov rax, qword ptr [rax]
455a7a: mov rsi, qword ptr [rip + 0x6dd7f]
455a81: add rax, qword ptr [rdx + 8]
455a85: mov qword ptr [rip + 0x69ff4], rax
455a8c: test rsi, rsi
455a8f: je 0x455e8c
455a95: pxor xmm0, xmm0
455a99: mov qword ptr [rsp + 0x30], r14
455a9e: mov rdx, r13
455aa1: xor r9d, r9d
455aa4: movaps xmmword ptr [rsp + 0x10], xmm0
455aa9: lea rcx, [rsi + 0x398]
455ab0: movabs rax, 0x103ae75f6
455aba: mov r8, r12
455abd: mov qword ptr [rsp + 0x20], 0
455ac6: lea rdi, [rip + 0x43c97]
455acd: mov byte ptr [rsp + 0x14], 0x20
455ad2: mov qword ptr [rsp + 0x38], rax
455ad7: mov qword ptr [rsp + 0x40], 0
455ae0: mov qword ptr [rsp + 8], rbx
455ae5: push 0
455ae7: push 0
455ae9: call 0x47d3a0
455aee: mov rdx, qword ptr [rsp + 0x18]
455af3: pop rcx
455af4: pop rsi
455af5: test rdx, rdx
455af8: je 0x455e8c
455afe: cmp word ptr [rdx + 6], -0xf
455b03: je 0x455ee0
455b09: test rax, rax
455b0c: je 0x455ee0
455b12: mov rax, qword ptr [rax]
455b15: add rax, qword ptr [rdx + 8]
455b19: lea rdi, [rip + 0x43c58]
455b20: mov qword ptr [rip + 0x69f51], rax
455b27: call 0x40fe70
455b2c: mov rdi, rax
455b2f: call 0x47b7a0
455b34: mov rax, qword ptr [rip + 0x6dd25]
455b3b: lea rdi, [rip + 0x43c46]
455b42: mov qword ptr [rip + 0x6dcef], rax
455b49: call 0x40fe70
455b4e: mov edx, 1
455b53: test rax, rax
455b56: je 0x455b60
455b58: xor edx, edx
455b5a: cmp byte ptr [rax], 0
455b5d: sete dl
455b60: lea rdi, [rip + 0x43c2d]
455b67: mov dword ptr [rip + 0x6dc8b], edx
455b6d: call 0x40fe70
455b72: xor edx, edx
455b74: test rax, rax
455b77: je 0x455b81
455b79: xor edx, edx
455b7b: cmp byte ptr [rax], 0
455b7e: setne dl
455b81: lea rdi, [rip + 0x43c18]
455b88: mov dword ptr [rip + 0x6dc4a], edx
455b8e: call 0x40fe70
455b93: mov edx, 1
455b98: test rax, rax
455b9b: je 0x455ba5
455b9d: xor edx, edx
455b9f: cmp byte ptr [rax], 0
455ba2: sete dl
455ba5: lea rdi, [rip + 0x43c04]
455bac: mov dword ptr [rip + 0x6dc7a], edx
455bb2: call 0x40fe70
455bb7: mov edx, dword ptr [rip + 0x69ee3]
455bbd: mov qword ptr [rip + 0x6dbec], rax
455bc4: test rax, rax
455bc7: je 0x455bce
455bc9: cmp byte ptr [rax], 0
455bcc: jne 0x455be6
455bce: lea rax, [rip + 0x43947]
455bd5: test edx, edx
455bd7: lea rcx, [rax + 9]
455bdb: cmovne rax, rcx
455bdf: mov qword ptr [rip + 0x6dbca], rax
455be6: test edx, edx
455be8: je 0x455c1b
455bea: lea rbp, [rip + 0x4394f]
455bf1: lea rbx, [rbp + 0x12c]
455bf8: nop dword ptr [rax + rax]
455c00: mov rdi, rbp
455c03: call 0x466880
455c08: mov rdi, rbp
455c0b: xor esi, esi
455c0d: call 0x401050
455c12: lea rbp, [rax + 1]
455c16: cmp rbp, rbx
455c19: jb 0x455c00
455c1b: mov rax, qword ptr [rip + 0x6dbc6]
455c22: test rax, rax
455c25: je 0x455c37
455c27: cmp byte ptr [rax], 0
455c2a: jne 0x455c37
455c2c: mov qword ptr [rip + 0x6dbb1], 0
455c37: lea rdi, [rip + 0x43b84]
455c3e: call 0x40fe70
455c43: mov rbp, rax
455c46: test rax, rax
455c49: je 0x455d57
455c4f: xor r13d, r13d
455c52: xor ebx, ebx
455c54: lea r12, [rsp + 0x30]
455c59: mov rsi, r12
455c5c: mov rdi, rbp
455c5f: call 0x481220
455c64: cmp rax, 0xfe
455c6a: ja 0x455d57
455c70: mov rdx, qword ptr [rsp + 0x30]
455c75: cmp rdx, rbp
455c78: je 0x455d57
455c7e: cmp rbx, 2
455c82: je 0x455d48
455c88: movzx esi, byte ptr [rdx]
455c8b: cmp sil, 0x2e
455c8f: je 0x455c9a
455c91: test sil, sil
455c94: jne 0x455d57
455c9a: mov ecx, ebx
455c9c: neg ecx
455c9e: lea ecx, [rcx*8 + 0x10]
455ca5: shl rax, cl
455ca8: or r13, rax
455cab: test sil, sil
455cae: je 0x455d4b
455cb4: add rbx, 1
455cb8: lea rbp, [rdx + 1]
455cbc: jmp 0x455c59
455cbe: nop 
455cc0: cmp qword ptr [rbp], 0
455cc5: mov rdx, qword ptr [rax + 0x10]
455cc9: jne 0x455ccf
455ccb: mov qword ptr [rbp], rdx
455ccf: add rdx, qword ptr [rax + 0x28]
455cd3: cmp rdx, qword ptr [rbp + 0x358]
455cda: jb 0x455ce3
455cdc: mov qword ptr [rbp + 0x358], rdx
455ce3: test byte ptr [rax + 4], 1
455ce7: je 0x455432
455ced: cmp rdx, qword ptr [rbp + 0x360]
455cf4: jb 0x455432
455cfa: mov qword ptr [rbp + 0x360], rdx
455d01: jmp 0x455432
455d06: nop word ptr cs:[rax + rax]
455d10: xor eax, eax
455d12: jmp 0x4558a5
455d17: nop word ptr [rax + rax]
455d20: lea esi, [rax + rax]
455d23: mov r14d, esi
455d26: sar r14d, 1
455d29: cmp esi, -8
455d2c: jbe 0x455e30
455d32: mov eax, r10d
455d35: sub eax, r14d
455d38: mov qword ptr [rdi + rax*8], rdx
455d3c: jmp 0x4554f2
455d41: nop dword ptr [rax]
455d48: or r13, rax
455d4b: test r13, r13
455d4e: je 0x455d57
455d50: mov dword ptr [rip + 0x6db11], r13d
455d57: mov rdi, qword ptr [rip + 0x6da8a]
455d5e: test rdi, rdi
455d61: je 0x455d6f
455d63: call 0x401180
455d68: mov qword ptr [rip + 0x6da49], rax
455d6f: mov rax, qword ptr [rip + 0x6da9a]
455d76: mov r10, qword ptr [rip + 0x6b913]
455d7d: test rax, rax
455d80: je 0x455e1d
455d86: mov rcx, qword ptr [rip + 0x6dabb]
455d8d: lea rdx, [rcx*8]
455d95: sub rdx, rcx
455d98: lea rcx, [rax + rdx*8]
455d9c: cmp rax, rcx
455d9f: jae 0x455e1d
455da1: mov r11, qword ptr [rip + 0x6b8e0]
455da8: mov rdi, r10
455dab: xor r8d, r8d
455dae: xor esi, esi
455db0: mov r9d, dword ptr [rip + 0x6b351]
455db7: jmp 0x455ddf
455db9: nop dword ptr [rax]
455dc0: cmp edx, 0x6474e552
455dc6: jne 0x455dd6
455dc8: mov r11, qword ptr [rax + 0x10]
455dcc: mov rdi, qword ptr [rax + 0x28]
455dd0: mov r8d, 1
455dd6: add rax, 0x38
455dda: cmp rax, rcx
455ddd: jae 0x455dfb
455ddf: mov edx, dword ptr [rax]
455de1: cmp edx, 0x6474e551
455de7: jne 0x455dc0
455de9: mov r9d, dword ptr [rax + 4]
455ded: add rax, 0x38
455df1: mov esi, 1
455df6: cmp rax, rcx
455df9: jb 0x455ddf
455dfb: test sil, sil
455dfe: je 0x455e07
455e00: mov dword ptr [rip + 0x6b301], r9d
455e07: test r8b, r8b
455e0a: je 0x455e1d
455e0c: mov qword ptr [rip + 0x6b875], r11
455e13: mov r10, rdi
455e16: mov qword ptr [rip + 0x6b873], rdi
455e1d: test r10, r10
455e20: jne 0x455e98
455e22: add rsp, 0x50
455e26: pop rbx
455e27: pop rbp
455e28: pop r12
455e2a: pop r13
455e2c: pop r14
455e2e: ret 
455e2f: nop 
455e30: mov rsi, r11
455e33: sub rsi, rax
455e36: cmp rsi, 0xb
455e3a: ja 0x455ef0
455e40: mov rsi, rbx
455e43: sub rsi, rax
455e46: mov qword ptr [rdi + rsi*8], rdx
455e4a: jmp 0x4554f2
455e4f: nop 
455e50: mov rbp, qword ptr [rip + 0x6d9a9]
455e57: test rbp, rbp
455e5a: jne 0x45580c
455e60: mov qword ptr [rip + 0x69c2d], 0
455e6b: mov qword ptr [rip + 0x69c1a], 0
455e76: mov qword ptr [rip + 0x69c07], 0
455e81: mov qword ptr [rip + 0x69bf4], 0
455e8c: xor eax, eax
455e8e: jmp 0x455b19
455e93: nop dword ptr [rax + rax]
455e98: lea rdi, [rip + 0x6b381]
455e9f: call 0x47e550
455ea4: add rsp, 0x50
455ea8: pop rbx
455ea9: pop rbp
455eaa: pop r12
455eac: pop r13
455eae: pop r14
455eb0: ret 
455eb1: nop dword ptr [rax]
455eb8: xor eax, eax
455eba: jmp 0x455a7a
455ebf: nop 
455ec0: xor eax, eax
455ec2: jmp 0x4559de
455ec7: nop word ptr [rax + rax]
455ed0: xor eax, eax
455ed2: jmp 0x455941
455ed7: nop word ptr [rax + rax]
455ee0: xor eax, eax
455ee2: jmp 0x455b15
455ee7: nop word ptr [rax + rax]
455ef0: mov rsi, r12
455ef3: sub rsi, rax
455ef6: cmp rsi, 0xa
455efa: ja 0x4554f2
455f00: mov rsi, r13
455f03: sub rsi, rax
455f06: mov rax, rsi
455f09: mov qword ptr [rdi + rax*8], rdx
455f0d: jmp 0x455509
455f12: nop word ptr [rax + rax]
455f18: mov byte ptr [rbp + 0x320], 1
455f1f: jmp 0x455740
455f24: mov eax, 0x60
455f29: mov edx, 0x50
455f2e: xor esi, esi
455f30: mov edi, 0x40
455f35: mov r8d, 0x30
455f3b: mov r10d, 0x20
455f41: mov r11d, 0x10
455f47: jmp 0x455575
455f4c: nop dword ptr [rax]
455f50: mov rsi, qword ptr [rip + 0x6d8a9]
455f57: xor eax, eax
455f59: jmp 0x45594c
455f5e: nop 
455f60: mov rsi, qword ptr [rip + 0x6d899]
455f67: xor eax, eax
455f69: jmp 0x4559e9
455f6e: nop 
455f70: mov rsi, qword ptr [rip + 0x6d889]
455f77: xor eax, eax
455f79: jmp 0x455a85
455f7e: nop 
455f80: mov rsi, qword ptr [rip + 0x6d879]
455f87: xor eax, eax
455f89: jmp 0x4558b0
455f8e: mov rax, rdx
455f91: mov rdx, rdi
455f94: mov rdi, r8
455f97: jmp 0x455625
455f9c: mov rax, rdx
455f9f: mov rdx, rdi
455fa2: mov rdi, r8
455fa5: mov r8, r10
455fa8: jmp 0x4555f9
455fad: mov rax, rdx
455fb0: mov rdx, rdi
455fb3: mov rdi, r8
455fb6: mov r8, r10
455fb9: mov r10, r11
455fbc: jmp 0x4555cd
455fc1: mov rax, rdx
455fc4: mov rdx, rdi
455fc7: mov rdi, r8
455fca: mov r8, r10
455fcd: mov r10, r11
455fd0: mov r11, rsi
455fd3: jmp 0x4555a1
455fd8: mov rax, rdx
455fdb: jmp 0x455689
455fe0: mov rax, rdx
455fe3: mov rdx, rdi
455fe6: jmp 0x455657
455feb: and esi, 0xf7fff716
455ff1: je 0x45574d
455ff7: xor eax, eax
455ff9: lea rdi, [rip + 0x43838]
456000: call 0x480f60
456005: mov eax, dword ptr [rbp + 0x3e4]
45600b: jmp 0x45574d
456010: lea rcx, [rip + 0x43861]
456017: mov edx, 0x3d
45601c: lea rsi, [rip + 0x436b0]
456023: lea rdi, [rip + 0x436b6]
45602a: call 0x4032a0
45602f: mov edi, 2
456034: lea rsi, [rip + 0x436cd]
45603b: xor eax, eax
45603d: call 0x4810c0
456042: mov edi, 0x7f
456047: call 0x4505c0
45604c: lea rcx, [rip + 0x4383d]
456053: mov edx, 0x83
456058: lea rsi, [rip + 0x43696]
45605f: lea rdi, [rip + 0x4379a]
456066: call 0x4032a0
45606b: lea rcx, [rip + 0x4381e]
456072: mov edx, 0x7b
456077: lea rsi, [rip + 0x43677]
45607e: lea rdi, [rip + 0x43753]
456085: call 0x4032a0
45608a: nop word ptr [rax + rax]
456090: endbr64 
456094: lea rax, [rip + 0x6b185]
45609b: ret 
45609c: nop dword ptr [rax]
4560a0: endbr64 
4560a4: mov eax, dword ptr [rip + 0x6d7e6]
4560aa: test eax, eax
4560ac: je 0x4560b0
4560ae: ret 
4560af: nop 
4560b0: push rbx
4560b1: call 0x478050
4560b6: mov ebx, eax
4560b8: call 0x478040
4560bd: mov r8d, eax
4560c0: mov eax, 1
4560c5: cmp ebx, r8d
4560c8: je 0x4560d8
4560ca: mov dword ptr [rip + 0x699d0], eax
4560d0: pop rbx
4560d1: ret 
4560d2: nop word ptr [rax + rax]
4560d8: call 0x478070
4560dd: mov ebx, eax
4560df: call 0x478060
4560e4: cmp ebx, eax
4560e6: setne al
4560e9: movzx eax, al
4560ec: jmp 0x4560ca
4560ee: nop 
4560f0: endbr64 
4560f4: mov rsi, rdi
4560f7: mov rdi, qword ptr [rsp]
4560fb: jmp 0x481bf0
456100: endbr64 
456104: cmp qword ptr [rip + 0x6d744], 0
45610c: mov rsi, rdi
45610f: je 0x456120
456111: mov rdi, qword ptr [rsp]
456115: jmp 0x481bf0
45611a: nop word ptr [rax + rax]
456120: ret 
456121: nop word ptr cs:[rax + rax]
45612b: nop dword ptr [rax + rax]
456130: endbr64 
456134: push r15
456136: push r14
456138: push r13
45613a: push r12
45613c: push rbp
45613d: lea rbp, [rip + 0x439cc]
456144: push rbx
456145: lea rbx, [rip + 0x43968]
45614c: sub rsp, 8
456150: mov r12, qword ptr [rdi]
456153: movzx r13d, byte ptr [r12]
456158: test r13b, r13b
45615b: je 0x4561a2
45615d: nop dword ptr [rax]
456160: cmp r13b, 0x2c
456164: je 0x4561a2
456166: mov rax, r12
456169: jmp 0x456175
45616b: nop dword ptr [rax + rax]
456170: cmp dl, 0x2c
456173: je 0x456181
456175: movzx edx, byte ptr [rax + 1]
456179: add rax, 1
45617d: test dl, dl
45617f: jne 0x456170
456181: sub rax, r12
456184: lea r14, [rax + 1]
456188: cmp r13b, 0x2d
45618c: je 0x4561d0
45618e: sub rax, 4
456192: cmp rax, 0x16
456196: ja 0x4561b0
456198: movsxd rax, dword ptr [rbx + rax*4]
45619c: add rax, rbx
45619f: notrack jmp rax
4561a2: mov r14d, 1
4561a8: nop dword ptr [rax + rax]
4561b0: add r12, r14
4561b3: movzx r13d, byte ptr [r12]
4561b8: test r13b, r13b
4561bb: jne 0x456160
4561bd: add rsp, 8
4561c1: pop rbx
4561c2: pop rbp
4561c3: pop r12
4561c5: pop r13
4561c7: pop r14
4561c9: pop r15
4561cb: ret 
4561cc: nop dword ptr [rax]
4561d0: sub rax, 4
4561d4: lea r15, [r12 + 1]
4561d9: cmp rax, 0x17
4561dd: ja 0x4561b0
4561df: movsxd rax, dword ptr [rbp + rax*4]
4561e4: add rax, rbp
4561e7: notrack jmp rax
4561ea: mov edx, 0xb
4561ef: lea rsi, [rip + 0x43869]
4561f6: mov rdi, r12
4561f9: call 0x431550
4561fe: test eax, eax
456200: je 0x456669
456206: mov edx, 0xb
45620b: lea rsi, [rip + 0x4376d]
456212: mov rdi, r12
456215: call 0x431550
45621a: test eax, eax
45621c: je 0x456892
456222: mov edx, 0xb
456227: lea rsi, [rip + 0x4384d]
45622e: mov rdi, r12
456231: mov r14d, 0xc
456237: call 0x431550
45623c: test eax, eax
45623e: jne 0x4561b0
456244: or dword ptr [rip + 0x6cb36], 0x2000
45624e: mov r14d, 0xc
456254: jmp 0x4561b0
456259: nop dword ptr [rax]
456260: mov r15, r12
456263: cmp r13b, 0x2d
456267: jne 0x4561b0
45626d: mov edx, 0xa
456272: lea rsi, [rip + 0x436d8]
456279: mov rdi, r15
45627c: call 0x431550
456281: test eax, eax
456283: jne 0x4568df
456289: and dword ptr [rip + 0x6caf0], 0xfffffffe
456290: jmp 0x4561b0
456295: mov r15, r12
456298: cmp r13b, 0x2d
45629c: je 0x4566d7
4562a2: mov edx, 8
4562a7: lea rsi, [rip + 0x437a8]
4562ae: mov rdi, r12
4562b1: call 0x431550
4562b6: test eax, eax
4562b8: jne 0x4561b0
4562be: or dword ptr [rip + 0x6cabf], 0x40
4562c5: jmp 0x4561b0
4562ca: mov r15, r12
4562cd: cmp r13b, 0x2d
4562d1: jne 0x4561b0
4562d7: mov edx, 7
4562dc: lea rsi, [rip + 0x43628]
4562e3: mov rdi, r15
4562e6: call 0x431550
4562eb: test eax, eax
4562ed: jne 0x4568b4
4562f3: and dword ptr [rip + 0x6ca37], 0xfffeffff
4562fd: jmp 0x4561b0
456302: mov r15, r12
456305: cmp r13b, 0x2d
456309: jne 0x4561b0
45630f: mov edx, 6
456314: lea rsi, [rip + 0x435e2]
45631b: mov rdi, r15
45631e: call 0x431550
456323: test eax, eax
456325: jne 0x456963
45632b: and dword ptr [rip + 0x6c9f3], 0xff7fffff
456335: jmp 0x4561b0
45633a: mov r15, r12
45633d: cmp r13b, 0x2d
456341: jne 0x4561b0
456347: mov edx, 5
45634c: lea rsi, [rip + 0x43592]
456353: mov rdi, r15
456356: call 0x431550
45635b: test eax, eax
45635d: jne 0x45698e
456363: and dword ptr [rip + 0x6c9de], 0xffffffdf
45636a: jmp 0x4561b0
45636f: mov r15, r12
456372: cmp r13b, 0x2d
456376: jne 0x4561b0
45637c: mov edx, 4
456381: lea rsi, [rip + 0x43535]
456388: mov rdi, r15
45638b: call 0x431550
456390: test eax, eax
456392: jne 0x45693b
456398: and dword ptr [rip + 0x6c995], 0xffffffdf
45639f: jmp 0x4561b0
4563a4: mov r15, r12
4563a7: mov edx, 0x1a
4563ac: lea rsi, [rip + 0x43688]
4563b3: mov rdi, r15
4563b6: call 0x431550
4563bb: test eax, eax
4563bd: jne 0x4561b0
4563c3: cmp r13b, 0x2d
4563c7: je 0x456742
4563cd: test byte ptr [rip + 0x6c95b], 4
4563d4: je 0x4561b0
4563da: or dword ptr [rip + 0x6c9a0], 0x400
4563e4: jmp 0x4561b0
4563e9: mov r15, r12
4563ec: mov edx, 0x18
4563f1: lea rsi, [rip + 0x4362a]
4563f8: mov rdi, r15
4563fb: call 0x431550
456400: test eax, eax
456402: jne 0x4561b0
456408: cmp r13b, 0x2d
45640c: je 0x456733
456412: test byte ptr [rip + 0x6c967], 4
456419: je 0x4561b0
45641f: or dword ptr [rip + 0x6c95b], 0x8000
456429: jmp 0x4561b0
45642e: mov r15, r12
456431: mov edx, 0x17
456436: lea rsi, [rip + 0x435cd]
45643d: mov rdi, r15
456440: call 0x431550
456445: test eax, eax
456447: jne 0x4561b0
45644d: cmp r13b, 0x2d
456451: je 0x45676f
456457: test byte ptr [rip + 0x6c922], 1
45645e: je 0x4561b0
456464: or dword ptr [rip + 0x6c916], 0x100
45646e: jmp 0x4561b0
456473: mov r15, r12
456476: mov edx, 0x15
45647b: lea rsi, [rip + 0x43572]
456482: mov rdi, r15
456485: call 0x431550
45648a: test eax, eax
45648c: jne 0x4561b0
456492: mov eax, dword ptr [rip + 0x6c8ec]
456498: mov edx, eax
45649a: and ah, 0xfd
45649d: or dh, 2
4564a0: cmp r13b, 0x2d
4564a4: cmovne eax, edx
4564a7: mov dword ptr [rip + 0x6c8d7], eax
4564ad: jmp 0x4561b0
4564b2: mov r15, r12
4564b5: mov edx, 0x14
4564ba: lea rsi, [rip + 0x4351e]
4564c1: mov rdi, r15
4564c4: call 0x431550
4564c9: test eax, eax
4564cb: jne 0x4561b0
4564d1: cmp r13b, 0x2d
4564d5: je 0x456760
4564db: test byte ptr [rip + 0x6c89e], 1
4564e2: je 0x4561b0
4564e8: or dword ptr [rip + 0x6c892], 0x800
4564f2: jmp 0x4561b0
4564f7: mov r15, r12
4564fa: mov edx, 0x13
4564ff: lea rsi, [rip + 0x43508]
456506: mov rdi, r15
456509: call 0x431550
45650e: test eax, eax
456510: jne 0x45677e
456516: mov eax, dword ptr [rip + 0x6c868]
45651c: mov edx, eax
45651e: and eax, 0xffffffef
456521: or edx, 0x10
456524: cmp r13b, 0x2d
456528: cmovne eax, edx
45652b: mov dword ptr [rip + 0x6c853], eax
456531: jmp 0x4561b0
456536: mov r15, r12
456539: mov edx, 0x12
45653e: lea rsi, [rip + 0x43473]
456545: mov rdi, r15
456548: call 0x431550
45654d: test eax, eax
45654f: jne 0x4561b0
456555: mov eax, dword ptr [rip + 0x6c829]
45655b: mov edx, eax
45655d: and eax, 0xfffffff7
456560: or edx, 8
456563: cmp r13b, 0x2d
456567: cmovne eax, edx
45656a: mov dword ptr [rip + 0x6c814], eax
456570: jmp 0x4561b0
456575: mov r15, r12
456578: mov edx, 0x10
45657d: lea rsi, [rip + 0x434a6]
456584: mov rdi, r15
456587: call 0x431550
45658c: test eax, eax
45658e: jne 0x4561b0
456594: cmp r13b, 0x2d
456598: je 0x456751
45659e: test byte ptr [rip + 0x6c7db], 4
4565a5: je 0x4561b0
4565ab: or dword ptr [rip + 0x6c7cf], 0x4000
4565b5: jmp 0x4561b0
4565ba: mov r15, r12
4565bd: cmp r13b, 0x2d
4565c1: je 0x4566ac
4565c7: mov edx, 0xf
4565cc: lea rsi, [rip + 0x43498]
4565d3: mov rdi, r12
4565d6: call 0x431550
4565db: test eax, eax
4565dd: jne 0x4561b0
4565e3: or dword ptr [rip + 0x6c79a], 4
4565ea: jmp 0x4561b0
4565ef: mov r15, r12
4565f2: cmp r13b, 0x2d
4565f6: jne 0x4561b0
4565fc: mov edx, 0xe
456601: lea rsi, [rip + 0x43391]
456608: mov rdi, r15
45660b: call 0x431550
456610: test eax, eax
456612: jne 0x4561b0
456618: and dword ptr [rip + 0x6c761], 0xfffffffb
45661f: jmp 0x4561b0
456624: mov r15, r12
456627: cmp r13b, 0x2d
45662b: jne 0x4561b0
456631: mov eax, dword ptr [rip + 0x6c771]
456637: mov edx, 0xd
45663c: lea rsi, [rip + 0x43348]
456643: mov rdi, r15
456646: mov qword ptr [rip + 0x6c753], rax
45664d: call 0x431550
456652: test eax, eax
456654: jne 0x4561b0
45665a: and dword ptr [rip + 0x6c71c], 0xffbfffff
456664: jmp 0x4561b0
456669: or dword ptr [rip + 0x6c711], 0x1000
456673: mov r14d, 0xc
456679: jmp 0x4561b0
45667e: mov edx, 0xb
456683: lea rsi, [rip + 0x432dd]
45668a: mov rdi, r15
45668d: call 0x431550
456692: test eax, eax
456694: jne 0x4567e2
45669a: and dword ptr [rip + 0x6c6df], 0xfffffffd
4566a1: mov r14d, 0xd
4566a7: jmp 0x4561b0
4566ac: mov edx, 0xf
4566b1: lea rsi, [rip + 0x432f0]
4566b8: mov rdi, r15
4566bb: call 0x431550
4566c0: test eax, eax
4566c2: jne 0x4567ba
4566c8: and dword ptr [rip + 0x6c6ae], 0xffffff7f
4566d2: jmp 0x4561b0
4566d7: mov edx, 8
4566dc: lea rsi, [rip + 0x43238]
4566e3: mov rdi, r15
4566e6: call 0x431550
4566eb: test eax, eax
4566ed: jne 0x45682b
4566f3: and dword ptr [rip + 0x6c637], 0xefffffff
4566fd: jmp 0x4561b0
456702: mov edx, 3
456707: lea rsi, [rip + 0x43197]
45670e: mov rdi, r15
456711: call 0x431550
456716: test eax, eax
456718: jne 0x45690a
45671e: and dword ptr [rip + 0x6c600], 0xefffffff
456728: mov r14d, 5
45672e: jmp 0x4561b0
456733: and dword ptr [rip + 0x6c647], 0xffff7fff
45673d: jmp 0x4561b0
456742: and dword ptr [rip + 0x6c638], 0xfffffbff
45674c: jmp 0x4561b0
456751: and dword ptr [rip + 0x6c629], 0xffffbfff
45675b: jmp 0x4561b0
456760: and dword ptr [rip + 0x6c61a], 0xfffff7ff
45676a: jmp 0x4561b0
45676f: and dword ptr [rip + 0x6c60b], 0xfffffeff
456779: jmp 0x4561b0
45677e: mov edx, 0x13
456783: lea rsi, [rip + 0x43241]
45678a: mov rdi, r15
45678d: call 0x431550
456792: test eax, eax
456794: jne 0x4561b0
45679a: mov eax, dword ptr [rip + 0x6c5e4]
4567a0: mov edx, eax
4567a2: and eax, 0xffffffdf
4567a5: or edx, 0x20
4567a8: cmp r13b, 0x2d
4567ac: cmovne eax, edx
4567af: mov dword ptr [rip + 0x6c5cf], eax
4567b5: jmp 0x4561b0
4567ba: mov edx, 0xf
4567bf: lea rsi, [rip + 0x432a5]
4567c6: mov rdi, r15
4567c9: call 0x431550
4567ce: test eax, eax
4567d0: jne 0x4561b0
4567d6: and dword ptr [rip + 0x6c5a7], 0xfffffffb
4567dd: jmp 0x4561b0
4567e2: mov edx, 0xb
4567e7: lea rsi, [rip + 0x43185]
4567ee: mov rdi, r15
4567f1: call 0x431550
4567f6: test eax, eax
4567f8: je 0x456852
4567fa: mov edx, 0xb
4567ff: lea rsi, [rip + 0x43259]
456806: mov rdi, r15
456809: call 0x431550
45680e: test eax, eax
456810: jne 0x456ac3
456816: and dword ptr [rip + 0x6c564], 0xffffefff
456820: mov r14d, 0xd
456826: jmp 0x4561b0
45682b: mov edx, 8
456830: lea rsi, [rip + 0x430ed]
456837: mov rdi, r15
45683a: call 0x431550
45683f: test eax, eax
456841: jne 0x456867
456843: and dword ptr [rip + 0x6c4e7], 0xbfffffff
45684d: jmp 0x4561b0
456852: and dword ptr [rip + 0x6c524], 0xfffbffff
45685c: mov r14d, 0xd
456862: jmp 0x4561b0
456867: mov edx, 8
45686c: lea rsi, [rip + 0x430ba]
456873: mov rdi, r15
456876: call 0x431550
45687b: test eax, eax
45687d: jne 0x456a3c
456883: and dword ptr [rip + 0x6c4a7], 0xfffdffff
45688d: jmp 0x4561b0
456892: mov r14d, 0xc
456898: test byte ptr [rip + 0x6c48b], 0x10
45689f: je 0x4561b0
4568a5: or dword ptr [rip + 0x6c4d5], 0x80
4568af: jmp 0x4561b0
4568b4: mov edx, 7
4568b9: lea rsi, [rip + 0x43053]
4568c0: mov rdi, r15
4568c3: call 0x431550
4568c8: test eax, eax
4568ca: jne 0x4561b0
4568d0: and dword ptr [rip + 0x6c44e], 0xf7ffffff
4568da: jmp 0x4561b0
4568df: mov edx, 0xa
4568e4: lea rsi, [rip + 0x43071]
4568eb: mov rdi, r15
4568ee: call 0x431550
4568f3: test eax, eax
4568f5: jne 0x4561b0
4568fb: and dword ptr [rip + 0x6c47b], 0xfffdffff
456905: jmp 0x4561b0
45690a: mov edx, 3
45690f: lea rsi, [rip + 0x42f93]
456916: mov rdi, r15
456919: call 0x431550
45691e: test eax, eax
456920: jne 0x4569b5
456926: and dword ptr [rip + 0x6c3fc], 0xfffffeff
456930: mov r14d, 5
456936: jmp 0x4561b0
45693b: mov edx, 4
456940: lea rsi, [rip + 0x42f7b]
456947: mov rdi, r15
45694a: call 0x431550
45694f: test eax, eax
456951: jne 0x456a11
456957: and dword ptr [rip + 0x6c3d6], 0xfffffff7
45695e: jmp 0x4561b0
456963: mov edx, 6
456968: lea rsi, [rip + 0x42f95]
45696f: mov rdi, r15
456972: call 0x431550
456977: test eax, eax
456979: jne 0x456a67
45697f: and dword ptr [rip + 0x6c39f], 0xfff7ffff
456989: jmp 0x4561b0
45698e: mov edx, 5
456993: lea rsi, [rip + 0x42f51]
45699a: mov rdi, r15
45699d: call 0x431550
4569a2: test eax, eax
4569a4: jne 0x4569e6
4569a6: and dword ptr [rip + 0x6c378], 0xffbfffff
4569b0: jmp 0x4561b0
4569b5: mov edx, 3
4569ba: lea rsi, [rip + 0x42eec]
4569c1: mov rdi, r15
4569c4: call 0x431550
4569c9: test eax, eax
4569cb: jne 0x456a92
4569d1: and dword ptr [rip + 0x6c34d], 0xffffefff
4569db: mov r14d, 5
4569e1: jmp 0x4561b0
4569e6: mov edx, 5
4569eb: lea rsi, [rip + 0x42eff]
4569f2: mov rdi, r15
4569f5: call 0x431550
4569fa: test eax, eax
4569fc: jne 0x456b1f
456a02: and dword ptr [rip + 0x6c32c], 0xffffff7f
456a0c: jmp 0x4561b0
456a11: mov edx, 4
456a16: lea rsi, [rip + 0x42eaa]
456a1d: mov rdi, r15
456a20: call 0x431550
456a25: test eax, eax
456a27: jne 0x456af4
456a2d: and dword ptr [rip + 0x6c2fd], 0xfffffeff
456a37: jmp 0x4561b0
456a3c: mov edx, 8
456a41: lea rsi, [rip + 0x42eee]
456a48: mov rdi, r15
456a4b: call 0x431550
456a50: test eax, eax
456a52: jne 0x456b4a
456a58: and dword ptr [rip + 0x6c2d2], 0xf7ffffff
456a62: jmp 0x4561b0
456a67: mov edx, 6
456a6c: lea rsi, [rip + 0x42f11]
456a73: mov rdi, r15
456a76: call 0x431550
456a7b: test eax, eax
456a7d: jne 0x4561b0
456a83: and dword ptr [rip + 0x6c29b], 0xffefffff
456a8d: jmp 0x4561b0
456a92: mov edx, 3
456a97: lea rsi, [rip + 0x42e13]
456a9e: mov rdi, r15
456aa1: call 0x431550
456aa6: test eax, eax
456aa8: jne 0x456bcf
456aae: and dword ptr [rip + 0x6c274], 0xefffffff
456ab8: mov r14d, 5
456abe: jmp 0x4561b0
456ac3: mov edx, 0xb
456ac8: lea rsi, [rip + 0x42eb0]
456acf: mov rdi, r15
456ad2: call 0x431550
456ad7: test eax, eax
456ad9: jne 0x456b71
456adf: and dword ptr [rip + 0x6c29b], 0xffffff7f
456ae9: mov r14d, 0xd
456aef: jmp 0x4561b0
456af4: mov edx, 4
456af9: lea rsi, [rip + 0x42dcc]
456b00: mov rdi, r15
456b03: call 0x431550
456b08: test eax, eax
456b0a: jne 0x456bfc
456b10: and dword ptr [rip + 0x6c212], 0xffff7fff
456b1a: jmp 0x4561b0
456b1f: mov edx, 5
456b24: lea rsi, [rip + 0x42dcc]
456b2b: mov rdi, r15
456b2e: call 0x431550
456b33: test eax, eax
456b35: jne 0x4561b0
456b3b: and dword ptr [rip + 0x6c1e3], 0xfffffdff
456b45: jmp 0x4561b0
456b4a: mov edx, 8
456b4f: lea rsi, [rip + 0x42de9]
456b56: mov rdi, r15
456b59: call 0x431550
456b5e: test eax, eax
456b60: jne 0x456ba8
456b62: and dword ptr [rip + 0x6c1c8], 0xfbffffff
456b6c: jmp 0x4561b0
456b71: mov edx, 0xb
456b76: lea rsi, [rip + 0x42efe]
456b7d: mov rdi, r15
456b80: mov r14d, 0xd
456b86: call 0x431550
456b8b: test eax, eax
456b8d: jne 0x4561b0
456b93: and dword ptr [rip + 0x6c1e7], 0xffffdfff
456b9d: mov r14d, 0xd
456ba3: jmp 0x4561b0
456ba8: mov edx, 8
456bad: lea rsi, [rip + 0x42d94]
456bb4: mov rdi, r15
456bb7: call 0x431550
456bbc: test eax, eax
456bbe: jne 0x456c23
456bc0: and dword ptr [rip + 0x6c16a], 0x7fffffff
456bca: jmp 0x4561b0
456bcf: mov edx, 3
456bd4: lea rsi, [rip + 0x42cda]
456bdb: mov rdi, r15
456bde: call 0x431550
456be3: test eax, eax
456be5: jne 0x456c4b
456be7: and dword ptr [rip + 0x6c14b], 0xffefffff
456bf1: mov r14d, 5
456bf7: jmp 0x4561b0
456bfc: mov edx, 4
456c01: lea rsi, [rip + 0x42e5e]
456c08: mov rdi, r15
456c0b: call 0x431550
456c10: test eax, eax
456c12: jne 0x456c7c
456c14: and dword ptr [rip + 0x6c116], 0xfffffdff
456c1e: jmp 0x4561b0
456c23: mov edx, 8
456c28: lea rsi, [rip + 0x42e27]
456c2f: mov rdi, r15
456c32: call 0x431550
456c37: test eax, eax
456c39: jne 0x4561b0
456c3f: and dword ptr [rip + 0x6c13e], 0xffffffbf
456c46: jmp 0x4561b0
456c4b: mov edx, 3
456c50: lea rsi, [rip + 0x42c62]
456c57: mov rdi, r15
456c5a: mov r14d, 5
456c60: call 0x431550
456c65: test eax, eax
456c67: jne 0x4561b0
456c6d: and dword ptr [rip + 0x6c0bd], 0xfffff7ff
456c77: jmp 0x4561b0
456c7c: mov edx, 4
456c81: lea rsi, [rip + 0x42c49]
456c88: mov rdi, r15
456c8b: call 0x431550
456c90: test eax, eax
456c92: jne 0x456ca3
456c94: and dword ptr [rip + 0x6c0aa], 0xfffeffff
456c9e: jmp 0x4561b0
456ca3: mov edx, 4
456ca8: lea rsi, [rip + 0x42c27]
456caf: mov rdi, r15
456cb2: call 0x431550
456cb7: test eax, eax
456cb9: jne 0x456cca
456cbb: and dword ptr [rip + 0x6c067], 0xfbffffff
456cc5: jmp 0x4561b0
456cca: mov edx, 4
456ccf: lea rsi, [rip + 0x42c05]
456cd6: mov rdi, r15
456cd9: call 0x431550
456cde: test eax, eax
456ce0: jne 0x456cee
456ce2: and dword ptr [rip + 0x6c09b], 0xfffffffe
456ce9: jmp 0x4561b0
456cee: mov edx, 4
456cf3: lea rsi, [rip + 0x42be6]
456cfa: mov rdi, r15
456cfd: call 0x431550
456d02: test eax, eax
456d04: jne 0x4561b0
456d0a: and dword ptr [rip + 0x6c073], 0xfffffffd
456d11: jmp 0x4561b0
456d16: nop word ptr cs:[rax + rax]
456d20: endbr64 
456d24: push rbx
456d25: mov rbx, rdi
456d28: mov rdi, qword ptr [rdi]
456d2b: mov edx, 3
456d30: lea rsi, [rip + 0x54bce]
456d37: call 0x431550
456d3c: test eax, eax
456d3e: jne 0x456d58
456d40: mov eax, dword ptr [rip + 0x6caae]
456d46: and eax, 0xfffffff8
456d49: or eax, 2
456d4c: mov dword ptr [rip + 0x6caa2], eax
456d52: pop rbx
456d53: ret 
456d54: nop dword ptr [rax]
456d58: mov rdi, qword ptr [rbx]
456d5b: mov edx, 4
456d60: lea rsi, [rip + 0x42d20]
456d67: call 0x431550
456d6c: test eax, eax
456d6e: jne 0x456d88
456d70: mov eax, dword ptr [rip + 0x6ca7e]
456d76: pop rbx
456d77: and eax, 0xfffffff8
456d7a: or eax, 1
456d7d: mov dword ptr [rip + 0x6ca71], eax
456d83: ret 
456d84: nop dword ptr [rax]
456d88: mov rdi, qword ptr [rbx]
456d8b: mov edx, 0xb
456d90: lea rsi, [rip + 0x42cf4]
456d97: call 0x431550
456d9c: test eax, eax
456d9e: jne 0x456d52
456da0: mov eax, dword ptr [rip + 0x6ca4e]
456da6: pop rbx
456da7: and eax, 0xfffffff8
456daa: or eax, 3
456dad: mov dword ptr [rip + 0x6ca41], eax
456db3: ret 
456db4: nop word ptr cs:[rax + rax]
456dbf: nop 
456dc0: endbr64 
456dc4: push rbx
456dc5: mov rbx, rdi
456dc8: mov rdi, qword ptr [rdi]
456dcb: mov edx, 3
456dd0: lea rsi, [rip + 0x54b2e]
456dd7: call 0x431550
456ddc: test eax, eax
456dde: jne 0x456df8
456de0: mov eax, dword ptr [rip + 0x6ca0e]
456de6: and eax, 0xffffffc7
456de9: or eax, 0x10
456dec: mov dword ptr [rip + 0x6ca02], eax
456df2: pop rbx
456df3: ret 
456df4: nop dword ptr [rax]
456df8: mov rdi, qword ptr [rbx]
456dfb: mov edx, 4
456e00: lea rsi, [rip + 0x42c80]
456e07: call 0x431550
456e0c: test eax, eax
456e0e: jne 0x456e28
456e10: mov eax, dword ptr [rip + 0x6c9de]
456e16: pop rbx
456e17: and eax, 0xffffffc7
456e1a: or eax, 8
456e1d: mov dword ptr [rip + 0x6c9d1], eax
456e23: ret 
456e24: nop dword ptr [rax]
456e28: mov rdi, qword ptr [rbx]
456e2b: mov edx, 0xb
456e30: lea rsi, [rip + 0x42c54]
456e37: call 0x431550
456e3c: test eax, eax
456e3e: jne 0x456df2
456e40: mov eax, dword ptr [rip + 0x6c9ae]
456e46: pop rbx
456e47: and eax, 0xffffffc7
456e4a: or eax, 0x18
456e4d: mov dword ptr [rip + 0x6c9a1], eax
456e53: ret 
456e54: nop word ptr cs:[rax + rax]
456e5f: nop 
456e60: endbr64 
456e64: push r12
456e66: push rbp
456e67: push rbx
456e68: sub rsp, 0x1d0
456e6f: lea rdi, [rsp + 0x40]
456e74: call 0x478010
456e79: lea rdi, [rsp + 0xc2]
456e81: test eax, eax
456e83: jne 0x456f10
456e89: xor r8d, r8d
456e8c: xor eax, eax
456e8e: movsx ecx, byte ptr [rdi]
456e91: lea edx, [rcx - 0x30]
456e94: cmp dl, 9
456e97: ja 0x456ef1
456e99: movsx edx, byte ptr [rdi + 1]
456e9d: lea rsi, [rdi + 1]
456ea1: sub ecx, 0x30
456ea4: lea edi, [rdx - 0x30]
456ea7: cmp dil, 9
456eab: ja 0x456ec7
456ead: nop dword ptr [rax]
456eb0: lea ecx, [rcx + rcx*4]
456eb3: add rsi, 1
456eb7: lea ecx, [rdx + rcx*2 - 0x30]
456ebb: movsx edx, byte ptr [rsi]
456ebe: lea edi, [rdx - 0x30]
456ec1: cmp dil, 9
456ec5: jbe 0x456eb0
456ec7: shl eax, 8
456eca: add r8d, 1
456ece: lea rdi, [rsi + 1]
456ed2: or eax, ecx
456ed4: cmp dl, 0x2e
456ed7: jne 0x456eeb
456ed9: cmp r8d, 3
456edd: jne 0x456e8e
456edf: add rsp, 0x1d0
456ee6: pop rbx
456ee7: pop rbp
456ee8: pop r12
456eea: ret 
456eeb: cmp r8d, 3
456eef: je 0x456edf
456ef1: mov ecx, 3
456ef6: add rsp, 0x1d0
456efd: sub ecx, r8d
456f00: pop rbx
456f01: pop rbp
456f02: shl ecx, 3
456f05: pop r12
456f07: shl eax, cl
456f09: ret 
456f0a: nop word ptr [rax + rax]
456f10: xor esi, esi
456f12: lea rdi, [rip + 0x42b7d]
456f19: xor eax, eax
456f1b: call 0x4518a0
456f20: mov r12d, eax
456f23: test eax, eax
456f25: js 0x456f62
456f27: mov rbx, rsp
456f2a: mov edi, eax
456f2c: mov edx, 0x40
456f31: mov rsi, rbx
456f34: call 0x4519f0
456f39: mov edi, r12d
456f3c: mov rbp, rax
456f3f: call 0x451730
456f44: test rbp, rbp
456f47: jle 0x456f62
456f49: cmp rbp, 0x3f
456f4d: mov eax, 0x3f
456f52: mov rdi, rbx
456f55: cmovge rbp, rax
456f59: mov byte ptr [rsp + rbp], 0
456f5d: jmp 0x456e89
456f62: mov eax, 0xffffffff
456f67: jmp 0x456edf
456f6c: nop dword ptr [rax]
456f70: endbr64 
456f74: mov rax, 0
456f7b: push r13
456f7d: mov r13, rdx
456f80: push r12
456f82: mov r12, rsi
456f85: push rbp
456f86: mov ebp, edi
456f88: test rax, rax
456f8b: je 0x456fd0
456f8d: mov eax, dword ptr [rax]
456f8f: test eax, eax
456f91: jne 0x456fd0
456f93: mov dword ptr [rip + 0x6a72b], 1
456f9d: mov dword ptr [rip + 0x6c8f5], ebp
456fa3: mov qword ptr [rip + 0x6c8f6], r12
456faa: mov qword ptr [rip + 0x6bd27], r13
456fb1: call 0x455360
456fb6: mov rdx, r13
456fb9: mov rsi, r12
456fbc: mov edi, ebp
456fbe: call 0x4543d0
456fc3: pop rbp
456fc4: pop r12
456fc6: pop r13
456fc8: jmp 0x464f90
456fcd: nop dword ptr [rax]
456fd0: movzx edi, word ptr [rip + 0x6aa91]
456fd7: cmp di, word ptr [rip + 0x6a12e]
456fde: mov dword ptr [rip + 0x6a6e0], 0
456fe8: je 0x456f9d
456fea: call 0x464ff0
456fef: jmp 0x456f9d
456ff1: nop word ptr cs:[rax + rax]
456ffb: nop dword ptr [rax + rax]
457000: endbr64 
457004: push rbp
457005: mov rbp, rsp
457008: push r15
45700a: mov r15d, edx
45700d: push r14
45700f: push r13
457011: push r12
457013: xor r12d, r12d
457016: push rbx
457017: sub rsp, 0x58
45701b: mov r13, qword ptr [rdi + 8]
45701f: movzx ebx, byte ptr [rdi + 0x10]
457023: mov qword ptr [rbp - 0x80], rsi
457027: mov r14, qword ptr [rdi]
45702a: mov rax, qword ptr fs:[0x28]
457033: mov qword ptr [rbp - 0x38], rax
457037: xor eax, eax
457039: cmp byte ptr [rdi + 0x11], 0
45703d: setne r12b
457041: add r12d, r12d
457044: cmp byte ptr [r13], 0x2f
457049: jne 0x4570f0
45704f: cmp byte ptr [r13 + 1], 0x2f
457054: jne 0x4570f0
45705a: cmp byte ptr [r13 + 2], 0
45705f: jne 0x4570f0
457065: mov rax, 0xffffffffffffffa0
45706c: mov rax, qword ptr fs:[rax]
457070: mov rax, qword ptr [rax]
457073: mov rsi, qword ptr [rax + 0xb0]
45707a: mov rdi, rsi
45707d: mov qword ptr [rbp - 0x58], rsi
457081: call 0x401180
457086: mov rsi, rsp
457089: lea rcx, [rax + 0x1a]
45708d: mov rdx, rax
457090: mov rax, rcx
457093: and rcx, 0xfffffffffffff000
45709a: sub rsi, rcx
45709d: and rax, 0xfffffffffffffff0
4570a1: mov rcx, rsi
4570a4: mov rsi, qword ptr [rbp - 0x58]
4570a8: cmp rsp, rcx
4570ab: je 0x4570c2
4570ad: sub rsp, 0x1000
4570b4: or qword ptr [rsp + 0xff8], 0
4570bd: cmp rsp, rcx
4570c0: jne 0x4570ad
4570c2: and eax, 0xfff
4570c7: sub rsp, rax
4570ca: test rax, rax
4570cd: jne 0x4573a0
4570d3: lea r13, [rsp + 0xf]
4570d8: and r13, 0xfffffffffffffff0
4570dc: mov rdi, r13
4570df: call 0x401150
4570e4: mov ecx, 0x2f2f
4570e9: mov word ptr [rax], cx
4570ec: mov byte ptr [rax + 2], 0
4570f0: cmp byte ptr [r14], 0x2f
4570f4: jne 0x4571a0
4570fa: cmp byte ptr [r14 + 1], 0x2f
4570ff: jne 0x4571a0
457105: cmp byte ptr [r14 + 2], 0
45710a: jne 0x4571a0
457110: mov rax, 0xffffffffffffffa0
457117: mov rax, qword ptr fs:[rax]
45711b: mov rax, qword ptr [rax]
45711e: mov rsi, qword ptr [rax + 0xb0]
457125: mov rdi, rsi
457128: mov qword ptr [rbp - 0x58], rsi
45712c: call 0x401180
457131: mov rsi, rsp
457134: lea rcx, [rax + 0x1a]
457138: mov rdx, rax
45713b: mov rax, rcx
45713e: and rcx, 0xfffffffffffff000
457145: sub rsi, rcx
457148: and rax, 0xfffffffffffffff0
45714c: mov rcx, rsi
45714f: mov rsi, qword ptr [rbp - 0x58]
457153: cmp rsp, rcx
457156: je 0x45716d
457158: sub rsp, 0x1000
45715f: or qword ptr [rsp + 0xff8], 0
457168: cmp rsp, rcx
45716b: jne 0x457158
45716d: and eax, 0xfff
457172: sub rsp, rax
457175: test rax, rax
457178: jne 0x457390
45717e: lea r14, [rsp + 0xf]
457183: and r14, 0xfffffffffffffff0
457187: mov rdi, r14
45718a: call 0x401150
45718f: mov edx, 0x2f2f
457194: mov word ptr [rax], dx
457197: mov byte ptr [rax + 2], 0
45719b: nop dword ptr [rax + rax]
4571a0: lea rcx, [rbp - 0x40]
4571a4: lea rdx, [rbp - 0x48]
4571a8: mov r8d, r15d
4571ab: mov rsi, r14
4571ae: mov rdi, r13
4571b1: call 0x458520
4571b6: mov qword ptr [rbp - 0x70], 0
4571be: mov dword ptr [rbp - 0x74], eax
4571c1: test eax, eax
4571c3: je 0x4571f8
4571c5: mov rax, qword ptr [rbp - 0x80]
4571c9: mov rbx, qword ptr [rbp - 0x70]
4571cd: mov qword ptr [rax], rbx
4571d0: mov rax, qword ptr [rbp - 0x38]
4571d4: xor rax, qword ptr fs:[0x28]
4571dd: jne 0x45741d
4571e3: mov eax, dword ptr [rbp - 0x74]
4571e6: lea rsp, [rbp - 0x28]
4571ea: pop rbx
4571eb: pop r12
4571ed: pop r13
4571ef: pop r14
4571f1: pop r15
4571f3: pop rbp
4571f4: ret 
4571f5: nop dword ptr [rax]
4571f8: mov r13, qword ptr [rbp - 0x40]
4571fc: lea rdx, [r13 + r13*2]
457201: mov qword ptr [rbp - 0x60], r13
457205: shl rdx, 4
457209: lea rdi, [rdx + 0x10]
45720d: mov r14, rdx
457210: call 0x426410
457215: mov rsi, qword ptr [rbp - 0x48]
457219: mov qword ptr [rbp - 0x70], rax
45721d: mov r15, rax
457220: mov qword ptr [rbp - 0x68], rsi
457224: mov qword ptr [rbp - 0x58], rsi
457228: test rax, rax
45722b: je 0x457422
457231: mov qword ptr [rax + 8], rsi
457235: lea rdi, [rax + 0x10]
457239: xor esi, esi
45723b: mov rdx, r14
45723e: mov qword ptr [rax], r13
457241: call 0x401110
457246: test r13, r13
457249: je 0x4571c5
45724f: test bl, bl
457251: mov r8, qword ptr [rbp - 0x58]
457255: jne 0x4572e0
45725b: lea r14, [r15 + 0x38]
45725f: xor ebx, ebx
457261: xor r15d, r15d
457264: jmp 0x4572b3
457266: nop word ptr cs:[rax + rax]
457270: mov rax, qword ptr [rbp - 0x68]
457274: mov dword ptr [r14 - 0x18], r12d
457278: imul eax, dword ptr [rax + r15 + 0x54], 0x1fe0
457281: movsxd rcx, eax
457284: mov rdi, rcx
457287: mov qword ptr [rbp - 0x58], rcx
45728b: call 0x426410
457290: mov qword ptr [r14 - 0x28], rax
457294: test rax, rax
457297: je 0x4573ab
45729d: mov rcx, qword ptr [rbp - 0x58]
4572a1: add r14, 0x30
4572a5: add r15, 0x68
4572a9: mov rbx, r13
4572ac: add rax, rcx
4572af: mov qword ptr [r14 - 0x50], rax
4572b3: mov qword ptr [r14 - 8], r14
4572b7: lea r13, [rbx + 1]
4572bb: cmp qword ptr [rbp - 0x60], r13
4572bf: jne 0x457270
4572c1: lea rax, [rbx + rbx*2]
4572c5: mov rbx, qword ptr [rbp - 0x70]
4572c9: or r12d, 1
4572cd: shl rax, 4
4572d1: mov dword ptr [rbx + rax + 0x20], r12d
4572d6: jmp 0x4571c5
4572db: nop dword ptr [rax + rax]
4572e0: mov rax, qword ptr [rbp - 0x70]
4572e4: xor r14d, r14d
4572e7: xor ebx, ebx
4572e9: lea r13, [rip + 0x68ad0]
4572f0: lea r15, [rax + 0x38]
4572f4: jmp 0x457355
4572f6: nop word ptr cs:[rax + rax]
457300: mov r8, qword ptr [rbp - 0x48]
457304: mov dword ptr [r15 - 0x18], r12d
457308: imul eax, dword ptr [r8 + r14 + 0x54], 0x1fe0
457311: mov qword ptr [rbp - 0x68], r8
457315: movsxd rdx, eax
457318: mov rdi, rdx
45731b: mov qword ptr [rbp - 0x60], rdx
45731f: call 0x426410
457324: mov qword ptr [r15 - 0x28], rax
457328: test rax, rax
45732b: je 0x4573ab
45732d: mov rdx, qword ptr [rbp - 0x60]
457331: mov rsi, qword ptr [rbp - 0x58]
457335: add rbx, 1
457339: add r15, 0x30
45733d: add r14, 0x68
457341: mov r8, qword ptr [rbp - 0x68]
457345: add rax, rdx
457348: mov qword ptr [r15 - 0x50], rax
45734c: cmp rsi, rbx
45734f: jbe 0x4571c5
457355: mov qword ptr [r15 - 8], r15
457359: mov rdi, qword ptr [r8 + r14 + 0x18]
45735e: mov rdx, r13
457361: lea rsi, [rip + 0x42984]
457368: call 0x4010f0
45736d: test eax, eax
45736f: jne 0x457375
457371: or r12d, 8
457375: mov rsi, qword ptr [rbp - 0x40]
457379: lea rax, [rsi - 1]
45737d: mov qword ptr [rbp - 0x58], rsi
457381: cmp rax, rbx
457384: ja 0x457300
45738a: jmp 0x4572c1
45738f: nop 
457390: or qword ptr [rsp + rax - 8], 0
457396: jmp 0x45717e
45739b: nop dword ptr [rax + rax]
4573a0: or qword ptr [rsp + rax - 8], 0
4573a6: jmp 0x4570d3
4573ab: mov r12, 0xffffffffffffffc0
4573b2: lea r15, [rbx - 1]
4573b6: mov r14d, dword ptr fs:[r12]
4573bb: test rbx, rbx
4573be: je 0x4573e7
4573c0: lea rax, [rbx + rbx*2]
4573c4: mov rbx, qword ptr [rbp - 0x70]
4573c8: shl rax, 4
4573cc: lea rbx, [rbx + rax - 0x20]
4573d1: mov rdi, qword ptr [rbx]
4573d4: sub r15, 1
4573d8: sub rbx, 0x30
4573dc: call 0x426a00
4573e1: cmp r15, -1
4573e5: jne 0x4573d1
4573e7: mov rdi, qword ptr [rbp - 0x70]
4573eb: call 0x426a00
4573f0: mov rax, qword ptr [rbp - 0x48]
4573f4: mov qword ptr [rbp - 0x68], rax
4573f8: mov rdi, rax
4573fb: mov rsi, qword ptr [rbp - 0x40]
4573ff: call 0x458830
457404: mov dword ptr fs:[r12], r14d
457409: mov dword ptr [rbp - 0x74], 3
457410: mov qword ptr [rbp - 0x70], 0
457418: jmp 0x4571c5
45741d: call 0x4547a0
457422: mov r12, 0xffffffffffffffc0
457429: mov rdi, rsi
45742c: mov r14d, dword ptr fs:[r12]
457431: jmp 0x4573fb
457433: nop word ptr cs:[rax + rax]
45743d: nop dword ptr [rax]
457440: endbr64 
457444: push r15
457446: push r14
457448: push r13
45744a: push r12
45744c: push rbp
45744d: push rbx
45744e: sub rsp, 0x28
457452: mov qword ptr [rsp + 0x18], rcx
457457: mov qword ptr [rsp + 8], r8
45745c: cmp rdi, -1
457460: je 0x457600
457466: mov rax, qword ptr [rdi]
457469: mov r15, rdi
45746c: mov r14, r9
45746f: sub rax, 1
457473: mov qword ptr [rsp + 0x10], rax
457478: test r9, r9
45747b: je 0x457614
457481: mov qword ptr [r9], 0
457488: mov rbp, rsi
45748b: mov r12, rdx
45748e: xor eax, eax
457490: test rcx, rcx
457493: je 0x457498
457495: mov rax, qword ptr [rcx]
457498: movq xmm0, rax
45749d: mov rax, qword ptr [rsp + 0x10]
4574a2: movhps xmm0, qword ptr [rsp + 8]
4574a7: lea rax, [rax + rax*2]
4574ab: shl rax, 4
4574af: movups xmmword ptr [r15 + rax + 0x10], xmm0
4574b5: mov rax, qword ptr [r15 + 8]
4574b9: cmp qword ptr [rax], 0
4574bd: mov rbx, qword ptr [rax + 0x28]
4574c1: je 0x4574d0
4574c3: ror rbx, 0x11
4574c7: xor rbx, qword ptr fs:[0x30]
4574d0: test rbp, rbp
4574d3: je 0x457588
4574d9: mov r13, qword ptr [rbp]
4574dd: test r13, r13
4574e0: je 0x457588
4574e6: mov rax, qword ptr [rsp + 0x18]
4574eb: test rax, rax
4574ee: je 0x457633
4574f4: cmp qword ptr [rax], 0
4574f8: je 0x457633
4574fe: lea rax, [r15 + 0x10]
457502: mov qword ptr [rsp + 8], rax
457507: jmp 0x45752c
457509: nop dword ptr [rax]
457510: mov rdx, qword ptr [rbp]
457514: cmp rdx, r13
457517: je 0x457556
457519: mov rcx, qword ptr [r15 + 8]
45751d: movsxd rcx, dword ptr [rcx + 0x48]
457521: add rcx, rdx
457524: cmp r12, rcx
457527: jb 0x457556
457529: mov r13, rdx
45752c: mov rdi, rbx
45752f: call 0x456100
457534: mov rdi, qword ptr [r15 + 8]
457538: mov rcx, r12
45753b: push 0
45753d: mov rdx, rbp
457540: push 0
457542: mov r9, r14
457545: mov rsi, qword ptr [rsp + 0x18]
45754a: xor r8d, r8d
45754d: call rbx
45754f: pop rdx
457550: pop rcx
457551: cmp eax, 4
457554: je 0x457510
457556: mov rbx, qword ptr [rsp + 0x18]
45755b: cmp qword ptr [rbx], 0
45755f: je 0x457576
457561: mov rsi, qword ptr [rsp + 0x10]
457566: lea rdx, [rsi + rsi*2]
45756a: shl rdx, 4
45756e: mov rdx, qword ptr [r15 + rdx + 0x10]
457573: mov qword ptr [rbx], rdx
457576: add rsp, 0x28
45757a: pop rbx
45757b: pop rbp
45757c: pop r12
45757e: pop r13
457580: pop r14
457582: pop r15
457584: ret 
457585: nop dword ptr [rax]
457588: mov rdi, rbx
45758b: call 0x456100
457590: mov rdi, qword ptr [r15 + 8]
457594: lea rsi, [r15 + 0x10]
457598: mov r9, r14
45759b: mov rax, qword ptr [rsp + 0x10]
4575a0: lea rax, [rax + rax*2]
4575a4: shl rax, 4
4575a8: cmp qword ptr [r15 + rax + 0x10], 0
4575ae: push 0
4575b0: sete al
4575b3: xor r8d, r8d
4575b6: xor ecx, ecx
4575b8: xor edx, edx
4575ba: movzx eax, al
4575bd: add eax, 1
4575c0: push rax
4575c1: call rbx
4575c3: pop rsi
4575c4: pop rdi
4575c5: test eax, eax
4575c7: jne 0x4575e5
4575c9: lea rcx, [r15 + 0x24]
4575cd: xor edx, edx
4575cf: nop 
4575d0: mov dword ptr [rcx], 0
4575d6: add rdx, 1
4575da: add rcx, 0x30
4575de: cmp qword ptr [rsp + 0x10], rdx
4575e3: jae 0x4575d0
4575e5: cmp qword ptr [rsp + 0x18], 0
4575eb: jne 0x457556
4575f1: add rsp, 0x28
4575f5: pop rbx
4575f6: pop rbp
4575f7: pop r12
4575f9: pop r13
4575fb: pop r14
4575fd: pop r15
4575ff: ret 
457600: add rsp, 0x28
457604: mov eax, 8
457609: pop rbx
45760a: pop rbp
45760b: pop r12
45760d: pop r13
45760f: pop r14
457611: pop r15
457613: ret 
457614: lea rcx, [rip + 0x4259d]
45761b: mov edx, 0x2b
457620: lea rsi, [rip + 0x42549]
457627: lea rdi, [rip + 0x4254a]
45762e: call 0x4032a0
457633: lea rcx, [rip + 0x4257e]
45763a: mov edx, 0x49
45763f: lea rsi, [rip + 0x4252a]
457646: lea rdi, [rip + 0x42543]
45764d: call 0x4032a0
457652: nop word ptr cs:[rax + rax]
45765c: nop dword ptr [rax]
457660: endbr64 
457664: push r13
457666: push r12
457668: push rbp
457669: mov rbp, rdi
45766c: push rbx
45766d: lea rbx, [rdi + 0x10]
457671: sub rsp, 8
457675: mov r12, qword ptr [rdi + 8]
457679: mov r13, qword ptr [rdi]
45767c: nop dword ptr [rax]
457680: test byte ptr [rbx + 0x10], 1
457684: jne 0x45769d
457686: mov rdi, qword ptr [rbx]
457689: add rbx, 0x30
45768d: test rdi, rdi
457690: je 0x457680
457692: call 0x426a00
457697: test byte ptr [rbx - 0x20], 1
45769b: je 0x457680
45769d: mov rdi, rbp
4576a0: call 0x426a00
4576a5: add rsp, 8
4576a9: mov rsi, r13
4576ac: mov rdi, r12
4576af: pop rbx
4576b0: pop rbp
4576b1: pop r12
4576b3: pop r13
4576b5: jmp 0x458830
4576ba: nop word ptr [rax + rax]
4576c0: endbr64 
4576c4: mov rsi, qword ptr [rsi]
4576c7: mov rdi, qword ptr [rdi]
4576ca: jmp 0x401130
4576cf: nop 
4576d0: endbr64 
4576d4: push rbp
4576d5: mov rbp, rsi
4576d8: push rbx
4576d9: mov rbx, rdi
4576dc: sub rsp, 8
4576e0: mov rsi, qword ptr [rsi]
4576e3: mov rdi, qword ptr [rdi]
4576e6: call 0x401130
4576eb: test eax, eax
4576ed: jne 0x457708
4576ef: mov rsi, qword ptr [rbp + 8]
4576f3: mov rdi, qword ptr [rbx + 8]
4576f7: add rsp, 8
4576fb: pop rbx
4576fc: pop rbp
4576fd: jmp 0x401130
457702: nop word ptr [rax + rax]
457708: add rsp, 8
45770c: pop rbx
45770d: pop rbp
45770e: ret 
45770f: nop 
457710: push rbp
457711: mov rbp, rsp
457714: push r15
457716: push r14
457718: push r13
45771a: push r12
45771c: mov r12, rdx
45771f: push rbx
457720: sub rsp, 0x98
457727: mov qword ptr [rbp - 0x88], rdi
45772e: mov qword ptr [rbp - 0x98], rsi
457735: mov qword ptr [rbp - 0x90], rcx
45773c: mov qword ptr [rbp - 0xb8], r8
457743: mov qword ptr [rbp - 0x78], r9
457747: mov rax, qword ptr fs:[0x28]
457750: mov qword ptr [rbp - 0x38], rax
457754: xor eax, eax
457756: test rsi, rsi
457759: cmovne rdi, rsi
45775d: mov qword ptr [rbp - 0xa0], rdi
457764: test rcx, rcx
457767: je 0x45796f
45776d: movq xmm0, rcx
457772: lea rdi, [rbp - 0x60]
457776: lea rdx, [rip - 0xad]
45777d: mov qword ptr [rbp - 0x50], 0
457785: movhps xmm0, qword ptr [rbp - 0xa0]
45778c: lea rsi, [rip + 0x6b63d]
457793: mov qword ptr [rbp - 0x48], 0
45779b: movaps xmmword ptr [rbp - 0x60], xmm0
45779f: call 0x452270
4577a4: test rax, rax
4577a7: je 0x45789d
4577ad: mov rax, qword ptr [rax]
4577b0: mov rdx, qword ptr [rbp - 0xb8]
4577b7: mov r15, qword ptr [rax + 0x18]
4577bb: mov r14, qword ptr [rax + 0x10]
4577bf: mov rax, qword ptr [rbp - 0x78]
4577c3: mov qword ptr [rdx], r14
4577c6: lea r13, [r15 - 1]
4577ca: mov qword ptr [rax], r15
4577cd: test r15, r15
4577d0: je 0x457871
4577d6: lea rax, [r15 + r15*2]
4577da: lea rax, [r15 + rax*4]
4577de: lea rbx, [r14 + rax*8 - 0x68]
4577e3: mov eax, dword ptr [rbx + 0x10]
4577e6: lea edx, [rax + 1]
4577e9: mov dword ptr [rbx + 0x10], edx
4577ec: test eax, eax
4577ee: jne 0x45785f
4577f0: mov rdi, qword ptr [rbx + 8]
4577f4: test rdi, rdi
4577f7: je 0x45785f
4577f9: call 0x4626e0
4577fe: mov qword ptr [rbx], rax
457801: test rax, rax
457804: je 0x4582a3
45780a: mov rdx, qword ptr [rax + 0x18]
45780e: mov r12, qword ptr [rax + 0x20]
457812: mov rax, qword ptr [rax + 0x28]
457816: mov qword ptr [rbx + 0x30], 0
45781e: mov qword ptr [rbx + 0x38], r12
457822: mov qword ptr [rbx + 0x28], rdx
457826: mov qword ptr [rbx + 0x40], rax
45782a: ror r12, 0x11
45782e: xor r12, qword ptr fs:[0x30]
457837: test r12, r12
45783a: je 0x45784e
45783c: mov rdi, r12
45783f: call 0x456100
457844: mov rdi, rbx
457847: call r12
45784a: mov r12, qword ptr [rbx + 0x30]
45784e: xor r12, qword ptr fs:[0x30]
457857: rol r12, 0x11
45785b: mov qword ptr [rbx + 0x30], r12
45785f: sub r13, 1
457863: sub rbx, 0x68
457867: cmp r13, -1
45786b: jne 0x4577e3
457871: xor r8d, r8d
457874: nop dword ptr [rax]
457878: mov rax, qword ptr [rbp - 0x38]
45787c: xor rax, qword ptr fs:[0x28]
457885: jne 0x45834b
45788b: lea rsp, [rbp - 0x28]
45788f: mov eax, r8d
457892: pop rbx
457893: pop r12
457895: pop r13
457897: pop r14
457899: pop r15
45789b: pop rbp
45789c: ret 
45789d: mov rax, rsp
4578a0: cmp rsp, rax
4578a3: je 0x4578ba
4578a5: sub rsp, 0x1000
4578ac: or qword ptr [rsp + 0xff8], 0
4578b5: cmp rsp, rax
4578b8: jne 0x4578a5
4578ba: sub rsp, 0x40
4578be: or qword ptr [rsp + 0x38], 0
4578c4: mov rax, qword ptr [rbp - 0x90]
4578cb: mov rdi, rax
4578ce: lea rbx, [rsp + 0xf]
4578d3: and rbx, 0xfffffffffffffff0
4578d7: mov qword ptr [rbx], rax
4578da: mov qword ptr [rbp - 0xb0], rbx
4578e1: call 0x401180
4578e6: pxor xmm0, xmm0
4578ea: mov qword ptr [rbx + 0x10], 0
4578f2: mov qword ptr [rbx + 8], rax
4578f6: mov rax, rsp
4578f9: mov qword ptr [rbx + 0x28], 0
457901: movups xmmword ptr [rbx + 0x18], xmm0
457905: cmp rsp, rax
457908: je 0x45791f
45790a: sub rsp, 0x1000
457911: or qword ptr [rsp + 0xff8], 0
45791a: cmp rsp, rax
45791d: jne 0x45790a
45791f: sub rsp, 0x40
457923: or qword ptr [rsp + 0x38], 0
457929: lea r13, [rsp + 0xf]
45792e: mov rdi, r12
457931: and r13, 0xfffffffffffffff0
457935: mov qword ptr [r13], r12
457939: call 0x401180
45793e: pxor xmm0, xmm0
457942: mov qword ptr [rbx + 0x28], r13
457946: mov qword ptr [r13 + 8], rax
45794a: lea rax, [r13 + 0x28]
45794e: mov qword ptr [r13 + 0x10], 0
457956: mov qword ptr [r13 + 0x28], 0
45795e: mov qword ptr [rbp - 0xc0], rax
457965: movups xmmword ptr [r13 + 0x18], xmm0
45796a: jmp 0x457a25
45796f: movq xmm0, rdx
457974: lea rdi, [rbp - 0x60]
457978: lea rdx, [rip - 0x2af]
45797f: mov qword ptr [rbp - 0x50], 0
457987: movhps xmm0, qword ptr [rbp - 0xa0]
45798e: lea rsi, [rip + 0x6b43b]
457995: mov qword ptr [rbp - 0x48], 0
45799d: movaps xmmword ptr [rbp - 0x60], xmm0
4579a1: call 0x452270
4579a6: mov rdx, rsp
4579a9: test rax, rax
4579ac: jne 0x4577ad
4579b2: cmp rsp, rdx
4579b5: je 0x4579cc
4579b7: sub rsp, 0x1000
4579be: or qword ptr [rsp + 0xff8], 0
4579c7: cmp rsp, rdx
4579ca: jne 0x4579b7
4579cc: sub rsp, 0x40
4579d0: or qword ptr [rsp + 0x38], 0
4579d6: lea rax, [rsp + 0xf]
4579db: mov rdi, r12
4579de: and rax, 0xfffffffffffffff0
4579e2: mov qword ptr [rax], r12
4579e5: mov rbx, rax
4579e8: mov qword ptr [rbp - 0xb0], rax
4579ef: call 0x401180
4579f4: mov qword ptr [rbp - 0x90], r12
4579fb: pxor xmm0, xmm0
4579ff: mov qword ptr [rbx + 8], rax
457a03: mov rax, rbx
457a06: add rax, 0x28
457a0a: mov qword ptr [rbx + 0x10], 0
457a12: mov qword ptr [rbx + 0x28], 0
457a1a: mov qword ptr [rbp - 0xc0], rax
457a21: movups xmmword ptr [rbx + 0x18], xmm0
457a25: mov rax, qword ptr [rbp - 0xb0]
457a2c: xor r13d, r13d
457a2f: xor r12d, r12d
457a32: mov dword ptr [rbp - 0x80], 0x7fffffff
457a39: mov qword ptr [rbp - 0xa8], r13
457a40: mov dword ptr [rbp - 0x70], 0x7fffffff
457a47: mov r13, rax
457a4a: jmp 0x457a6a
457a4c: nop dword ptr [rax]
457a50: mov eax, dword ptr [rbp - 0x80]
457a53: cmp dword ptr [r13 + 0x10], eax
457a57: jl 0x457a72
457a59: mov r13, qword ptr [r13 + 0x28]
457a5d: test r13, r13
457a60: je 0x457e10
457a66: mov r12d, dword ptr [r13 + 0x14]
457a6a: cmp r12d, dword ptr [rbp - 0x70]
457a6e: jg 0x457a59
457a70: je 0x457a50
457a72: mov rbx, qword ptr [rip + 0x6be2f]
457a79: test rbx, rbx
457a7c: je 0x457a59
457a7e: mov r15, qword ptr [r13]
457a82: jmp 0x457a91
457a84: nop dword ptr [rax]
457a88: mov rbx, qword ptr [rbx + 0x30]
457a8c: test rbx, rbx
457a8f: je 0x457a59
457a91: mov rsi, qword ptr [rbx]
457a94: mov rdi, r15
457a97: call 0x401130
457a9c: test eax, eax
457a9e: je 0x457af9
457aa0: jns 0x457a88
457aa2: mov rbx, qword ptr [rbx + 0x20]
457aa6: jmp 0x457a8c
457aa8: nop dword ptr [rax + rax]
457ab0: mov rax, qword ptr [rbp - 0x98]
457ab7: test rax, rax
457aba: je 0x457acb
457abc: mov rsi, rax
457abf: mov rdi, r14
457ac2: call 0x401130
457ac7: test eax, eax
457ac9: je 0x457b35
457acb: cmp dword ptr [rbp - 0x70], r12d
457acf: jg 0x457ba0
457ad5: jne 0x457ae8
457ad7: mov ecx, dword ptr [rbp - 0x68]
457ada: cmp dword ptr [rbp - 0x80], ecx
457add: jg 0x457ba0
457ae3: nop dword ptr [rax + rax]
457ae8: mov rbx, qword ptr [rbx + 0x28]
457aec: test rbx, rbx
457aef: je 0x457a59
457af5: mov r12d, dword ptr [r13 + 0x14]
457af9: mov r14, qword ptr [rbx + 8]
457afd: cmp byte ptr [r14], 0x2d
457b01: jne 0x457b10
457b03: cmp byte ptr [r14 + 1], 0
457b08: cmove r14, qword ptr [rbp - 0xa0]
457b10: mov rsi, qword ptr [rbp - 0x88]
457b17: mov eax, dword ptr [r13 + 0x10]
457b1b: mov rdi, r14
457b1e: add eax, dword ptr [rbx + 0x14]
457b21: add r12d, dword ptr [rbx + 0x10]
457b25: mov dword ptr [rbp - 0x68], eax
457b28: call 0x401130
457b2d: test eax, eax
457b2f: jne 0x457ab0
457b35: mov rax, qword ptr [rbp - 0xa8]
457b3c: test rax, rax
457b3f: je 0x457d90
457b45: mov r15, rax
457b48: jmp 0x457b5d
457b4a: nop word ptr [rax + rax]
457b50: mov r15, qword ptr [r15 + 0x28]
457b54: test r15, r15
457b57: je 0x457d90
457b5d: mov rsi, qword ptr [r15]
457b60: mov rdi, r14
457b63: call 0x401130
457b68: test eax, eax
457b6a: jne 0x457b50
457b6c: cmp dword ptr [r15 + 0x14], r12d
457b70: jg 0x457d68
457b76: je 0x457d58
457b7c: cmp dword ptr [rbp - 0x70], r12d
457b80: jg 0x457c50
457b86: jne 0x457ae8
457b8c: mov ecx, dword ptr [rbp - 0x80]
457b8f: mov eax, dword ptr [rbp - 0x68]
457b92: cmp ecx, eax
457b94: cmovle eax, ecx
457b97: mov dword ptr [rbp - 0x80], eax
457b9a: jmp 0x457ae8
457b9f: nop 
457ba0: mov rsi, qword ptr [rbp - 0x90]
457ba7: mov r15, qword ptr [rbp - 0xb0]
457bae: jmp 0x457bb3
457bb0: mov rsi, qword ptr [r15]
457bb3: mov rdi, r14
457bb6: call 0x401130
457bbb: test eax, eax
457bbd: je 0x457c60
457bc3: mov r15, qword ptr [r15 + 0x28]
457bc7: test r15, r15
457bca: jne 0x457bb0
457bcc: mov rax, rsp
457bcf: cmp rsp, rax
457bd2: je 0x457be9
457bd4: sub rsp, 0x1000
457bdb: or qword ptr [rsp + 0xff8], 0
457be4: cmp rsp, rax
457be7: jne 0x457bd4
457be9: sub rsp, 0x40
457bed: or qword ptr [rsp + 0x38], 0
457bf3: lea rdx, [rsp + 0xf]
457bf8: mov rdi, r14
457bfb: and rdx, 0xfffffffffffffff0
457bff: mov qword ptr [rdx], r14
457c02: mov r15, rdx
457c05: call 0x401180
457c0a: movq xmm0, rbx
457c0f: movq xmm5, r13
457c14: mov dword ptr [r15 + 0x14], r12d
457c18: mov qword ptr [r15 + 8], rax
457c1c: mov eax, dword ptr [rbp - 0x68]
457c1f: punpcklqdq xmm0, xmm5
457c23: mov qword ptr [r15 + 0x28], 0
457c2b: mov dword ptr [r15 + 0x10], eax
457c2f: mov rax, qword ptr [rbp - 0xc0]
457c36: movups xmmword ptr [r15 + 0x18], xmm0
457c3b: mov qword ptr [rax], r15
457c3e: lea rax, [r15 + 0x28]
457c42: mov qword ptr [rbp - 0xc0], rax
457c49: jmp 0x457ae8
457c4e: nop 
457c50: mov eax, dword ptr [rbp - 0x68]
457c53: mov dword ptr [rbp - 0x70], r12d
457c57: mov dword ptr [rbp - 0x80], eax
457c5a: jmp 0x457ae8
457c5f: nop 
457c60: cmp dword ptr [r15 + 0x14], r12d
457c64: jg 0x457c80
457c66: jne 0x457ae8
457c6c: mov eax, dword ptr [rbp - 0x68]
457c6f: cmp dword ptr [r15 + 0x10], eax
457c73: jle 0x457ae8
457c79: nop dword ptr [rax]
457c80: movq xmm0, rbx
457c85: movq xmm2, r13
457c8a: mov rdi, qword ptr [rbp - 0xb0]
457c91: punpcklqdq xmm0, xmm2
457c95: movups xmmword ptr [r15 + 0x18], xmm0
457c9a: jmp 0x457ca9
457c9c: nop dword ptr [rax]
457ca0: mov rdi, qword ptr [rdi + 0x28]
457ca4: test rdi, rdi
457ca7: je 0x457cea
457ca9: mov rax, qword ptr [rdi + 0x18]
457cad: test rax, rax
457cb0: je 0x457ca0
457cb2: mov rdx, qword ptr [rdi + 0x20]
457cb6: mov esi, dword ptr [rax + 0x10]
457cb9: mov ecx, dword ptr [rax + 0x14]
457cbc: mov rax, qword ptr [rdx + 0x18]
457cc0: test rax, rax
457cc3: je 0x457cdb
457cc5: nop dword ptr [rax]
457cc8: mov rdx, qword ptr [rdx + 0x20]
457ccc: add esi, dword ptr [rax + 0x10]
457ccf: add ecx, dword ptr [rax + 0x14]
457cd2: mov rax, qword ptr [rdx + 0x18]
457cd6: test rax, rax
457cd9: jne 0x457cc8
457cdb: mov dword ptr [rdi + 0x14], esi
457cde: mov dword ptr [rdi + 0x10], ecx
457ce1: mov rdi, qword ptr [rdi + 0x28]
457ce5: test rdi, rdi
457ce8: jne 0x457ca9
457cea: mov rax, qword ptr [rbp - 0xa8]
457cf1: test rax, rax
457cf4: je 0x457ae8
457cfa: mov r8d, dword ptr [rbp - 0x70]
457cfe: mov edi, dword ptr [rbp - 0x80]
457d01: jmp 0x457d18
457d03: nop dword ptr [rax + rax]
457d08: jne 0x457d0f
457d0a: cmp ecx, edi
457d0c: cmovl edi, ecx
457d0f: mov rax, qword ptr [rax + 0x28]
457d13: test rax, rax
457d16: je 0x457d45
457d18: mov rcx, qword ptr [rax + 0x18]
457d1c: mov rsi, qword ptr [rax + 0x20]
457d20: mov edx, dword ptr [rcx + 0x10]
457d23: mov ecx, dword ptr [rcx + 0x14]
457d26: add edx, dword ptr [rsi + 0x14]
457d29: add ecx, dword ptr [rsi + 0x10]
457d2c: mov dword ptr [rax + 0x14], edx
457d2f: mov dword ptr [rax + 0x10], ecx
457d32: cmp edx, r8d
457d35: jge 0x457d08
457d37: mov rax, qword ptr [rax + 0x28]
457d3b: mov edi, ecx
457d3d: mov r8d, edx
457d40: test rax, rax
457d43: jne 0x457d18
457d45: mov dword ptr [rbp - 0x70], r8d
457d49: mov dword ptr [rbp - 0x80], edi
457d4c: jmp 0x457ae8
457d51: nop dword ptr [rax]
457d58: mov eax, dword ptr [rbp - 0x68]
457d5b: cmp dword ptr [r15 + 0x10], eax
457d5f: jle 0x457b7c
457d65: nop dword ptr [rax]
457d68: mov eax, dword ptr [rbp - 0x68]
457d6b: movq xmm0, rbx
457d70: movq xmm1, r13
457d75: mov dword ptr [r15 + 0x14], r12d
457d79: punpcklqdq xmm0, xmm1
457d7d: mov dword ptr [r15 + 0x10], eax
457d81: movups xmmword ptr [r15 + 0x18], xmm0
457d86: jmp 0x457b7c
457d8b: nop dword ptr [rax + rax]
457d90: mov rax, rsp
457d93: cmp rsp, rax
457d96: je 0x457dad
457d98: sub rsp, 0x1000
457d9f: or qword ptr [rsp + 0xff8], 0
457da8: cmp rsp, rax
457dab: jne 0x457d98
457dad: sub rsp, 0x40
457db1: or qword ptr [rsp + 0x38], 0
457db7: lea rdx, [rsp + 0xf]
457dbc: mov rdi, r14
457dbf: and rdx, 0xfffffffffffffff0
457dc3: mov qword ptr [rdx], r14
457dc6: mov r15, rdx
457dc9: call 0x401180
457dce: movq xmm0, rbx
457dd3: movq xmm4, r13
457dd8: mov dword ptr [r15 + 0x14], r12d
457ddc: mov qword ptr [r15 + 8], rax
457de0: mov eax, dword ptr [rbp - 0x68]
457de3: punpcklqdq xmm0, xmm4
457de7: movups xmmword ptr [r15 + 0x18], xmm0
457dec: mov dword ptr [r15 + 0x10], eax
457df0: mov rax, qword ptr [rbp - 0xa8]
457df7: mov qword ptr [rbp - 0xa8], r15
457dfe: mov qword ptr [r15 + 0x28], rax
457e02: jmp 0x457b7c
457e07: nop word ptr [rax + rax]
457e10: mov r13, qword ptr [rbp - 0xa8]
457e17: test r13, r13
457e1a: je 0x45812d
457e20: mov rax, qword ptr [r13 + 0x28]
457e24: test rax, rax
457e27: je 0x457e48
457e29: mov edx, dword ptr [r13 + 0x14]
457e2d: cmp dword ptr [rax + 0x14], edx
457e30: jl 0x458200
457e36: jne 0x457e48
457e38: mov edx, dword ptr [r13 + 0x10]
457e3c: cmp dword ptr [rax + 0x10], edx
457e3f: cmovl r13, rax
457e43: nop dword ptr [rax + rax]
457e48: mov rax, qword ptr [r13 + 0x20]
457e4c: test rax, rax
457e4f: je 0x458208
457e55: xor r15d, r15d
457e58: nop dword ptr [rax + rax]
457e60: mov rax, qword ptr [rax + 0x20]
457e64: mov r12, r15
457e67: add r15, 1
457e6b: test rax, rax
457e6e: jne 0x457e60
457e70: lea rax, [r15 + r15*2]
457e74: lea rdi, [r15 + rax*4]
457e78: shl rdi, 3
457e7c: call 0x426410
457e81: mov r14, rax
457e84: test rax, rax
457e87: je 0x458217
457e8d: mov rax, qword ptr [rbp - 0x78]
457e91: mov qword ptr [rax], r15
457e94: test r15, r15
457e97: je 0x45806f
457e9d: lea rax, [r12 + r12*2]
457ea1: mov qword ptr [rbp - 0x80], 0
457ea9: lea rax, [r12 + rax*4]
457ead: mov qword ptr [rbp - 0x68], 0
457eb5: lea rbx, [r14 + rax*8]
457eb9: mov rax, r15
457ebc: mov r15, r13
457ebf: mov r13, r12
457ec2: mov r12, rax
457ec5: jmp 0x457ef3
457ec7: nop word ptr [rax + rax]
457ed0: mov rsi, rbx
457ed3: call 0x459860
457ed8: mov r15, qword ptr [r15 + 0x20]
457edc: lea rax, [r13 - 1]
457ee0: sub rbx, 0x68
457ee4: mov r12, r13
457ee7: test r13, r13
457eea: je 0x458068
457ef0: mov r13, rax
457ef3: test r13, r13
457ef6: je 0x457fc8
457efc: mov rax, qword ptr [r15 + 0x20]
457f00: mov rax, qword ptr [rax]
457f03: mov qword ptr [rbx + 0x18], rax
457f07: mov rax, qword ptr [rbp - 0x78]
457f0b: cmp qword ptr [rax], r12
457f0e: je 0x457ff0
457f14: lea rax, [r12 + r12*2]
457f18: lea rax, [r12 + rax*4]
457f1c: mov rax, qword ptr [r14 + rax*8 + 0x18]
457f21: mov qword ptr [rbx + 0x20], rax
457f25: mov rax, qword ptr [r15 + 0x18]
457f29: mov dword ptr [rbx + 0x10], 1
457f30: mov qword ptr [rbx + 0x60], 0
457f38: mov rdi, qword ptr [rax + 0x18]
457f3c: cmp byte ptr [rdi], 0x2f
457f3f: jne 0x457ed0
457f41: call 0x4626e0
457f46: test rax, rax
457f49: je 0x458009
457f4f: mov rsi, qword ptr [rax]
457f52: mov qword ptr [rbx], rax
457f55: mov qword ptr [rbx + 8], rsi
457f59: mov rsi, qword ptr [rax + 0x18]
457f5d: mov qword ptr [rbx + 0x28], rsi
457f61: mov rsi, qword ptr [rax + 0x20]
457f65: mov rax, qword ptr [rax + 0x28]
457f69: mov qword ptr [rbx + 0x30], 0
457f71: mov qword ptr [rbx + 0x38], rsi
457f75: mov qword ptr [rbx + 0x40], rax
457f79: ror rsi, 0x11
457f7d: xor rsi, qword ptr fs:[0x30]
457f86: test rsi, rsi
457f89: je 0x457fac
457f8b: mov rdi, rsi
457f8e: mov qword ptr [rbp - 0x70], rsi
457f92: call 0x456100
457f97: mov rsi, qword ptr [rbp - 0x70]
457f9b: mov rdi, rbx
457f9e: call rsi
457fa0: test eax, eax
457fa2: jne 0x458157
457fa8: mov rsi, qword ptr [rbx + 0x30]
457fac: xor rsi, qword ptr fs:[0x30]
457fb5: rol rsi, 0x11
457fb9: mov qword ptr [rbx + 0x30], rsi
457fbd: jmp 0x457ed8
457fc2: nop word ptr [rax + rax]
457fc8: mov rdi, qword ptr [rbp - 0x90]
457fcf: call 0x429020
457fd4: mov qword ptr [rbp - 0x68], rax
457fd8: mov qword ptr [r14 + 0x18], rax
457fdc: test rax, rax
457fdf: jne 0x457f07
457fe5: mov r13d, 1
457feb: jmp 0x45800d
457fed: nop dword ptr [rax]
457ff0: mov rdi, qword ptr [r15]
457ff3: call 0x429020
457ff8: mov qword ptr [rbp - 0x80], rax
457ffc: mov qword ptr [rbx + 0x20], rax
458000: test rax, rax
458003: jne 0x457f25
458009: lea r13, [r13 + 1]
45800d: mov rax, qword ptr [rbp - 0x78]
458011: xor r8d, r8d
458014: mov rdx, qword ptr [rax]
458017: cmp rdx, r13
45801a: ja 0x458182
458020: mov rdi, r14
458023: xor r15d, r15d
458026: xor r14d, r14d
458029: call 0x426a00
45802e: mov rdi, qword ptr [rbp - 0x68]
458032: call 0x426a00
458037: mov rdi, qword ptr [rbp - 0x80]
45803b: call 0x426a00
458040: mov rax, qword ptr [rbp - 0x78]
458044: mov r8d, 1
45804a: mov qword ptr [rax], 0
458051: mov rax, qword ptr [rbp - 0xb8]
458058: mov qword ptr [rax], 0
45805f: jmp 0x45807c
458061: nop dword ptr [rax]
458068: mov rax, qword ptr [rbp - 0x78]
45806c: mov r15, qword ptr [rax]
45806f: mov rax, qword ptr [rbp - 0xb8]
458076: xor r8d, r8d
458079: mov qword ptr [rax], r14
45807c: mov rdi, qword ptr [rbp - 0x90]
458083: mov dword ptr [rbp - 0x68], r8d
458087: call 0x401180
45808c: mov rdi, qword ptr [rbp - 0xa0]
458093: lea rbx, [rax + 1]
458097: call 0x401180
45809c: lea rdi, [rbx + rax + 0x21]
4580a1: lea r12, [rax + 1]
4580a5: call 0x426410
4580aa: mov r8d, dword ptr [rbp - 0x68]
4580ae: test rax, rax
4580b1: mov r13, rax
4580b4: je 0x457878
4580ba: lea rdi, [rax + 0x20]
4580be: mov rsi, qword ptr [rbp - 0x90]
4580c5: mov rdx, rbx
4580c8: mov qword ptr [rax], rdi
4580cb: call 0x401150
4580d0: mov rsi, qword ptr [rbp - 0xa0]
4580d7: mov rdx, r12
4580da: mov rdi, rax
4580dd: call 0x401060
4580e2: movq xmm3, r14
4580e7: mov qword ptr [r13 + 0x18], r15
4580eb: lea rdx, [rip - 0xa22]
4580f2: movq xmm0, rax
4580f7: lea rsi, [rip + 0x6acd2]
4580fe: mov rdi, r13
458101: punpcklqdq xmm0, xmm3
458105: movups xmmword ptr [r13 + 8], xmm0
45810a: call 0x451e70
45810f: mov r8d, dword ptr [rbp - 0x68]
458113: test rax, rax
458116: jne 0x457878
45811c: mov rdi, r13
45811f: call 0x426a00
458124: mov r8d, dword ptr [rbp - 0x68]
458128: jmp 0x457878
45812d: mov rax, qword ptr [rbp - 0xb8]
458134: xor r14d, r14d
458137: xor r15d, r15d
45813a: mov qword ptr [rax], 0
458141: mov rax, qword ptr [rbp - 0x78]
458145: mov qword ptr [rax], 0
45814c: mov r8d, 1
458152: jmp 0x45807c
458157: mov r8d, eax
45815a: xor eax, eax
45815c: lea r13, [r12 - 1]
458161: xor rax, qword ptr fs:[0x30]
45816a: rol rax, 0x11
45816e: mov qword ptr [rbx + 0x40], rax
458172: mov rax, qword ptr [rbp - 0x78]
458176: mov rdx, qword ptr [rax]
458179: cmp rdx, r13
45817c: jbe 0x458350
458182: lea rax, [r13 + r13*2]
458187: mov r15d, r8d
45818a: lea rax, [r13 + rax*4]
45818f: lea rbx, [r14 + rax*8]
458193: jmp 0x4581e2
458195: sub dword ptr [rbx + 0x10], 1
458199: jne 0x4581d5
45819b: mov r12, qword ptr [rbx + 0x40]
45819f: ror r12, 0x11
4581a3: xor r12, qword ptr fs:[0x30]
4581ac: test r12, r12
4581af: je 0x4581c2
4581b1: mov rdi, r12
4581b4: call 0x456100
4581b9: mov rdi, rbx
4581bc: call r12
4581bf: mov rdi, qword ptr [rbx]
4581c2: call 0x4628e0
4581c7: mov rax, qword ptr [rbp - 0x78]
4581cb: mov qword ptr [rbx], 0
4581d2: mov rdx, qword ptr [rax]
4581d5: add r13, 1
4581d9: add rbx, 0x68
4581dd: cmp r13, rdx
4581e0: jae 0x458254
4581e2: mov rdi, qword ptr [rbx]
4581e5: test rdi, rdi
4581e8: jne 0x458195
4581ea: cmp qword ptr [rbx + 0x40], 0
4581ef: je 0x4581d5
4581f1: jmp 0x458319
4581f6: nop word ptr cs:[rax + rax]
458200: mov r13, rax
458203: jmp 0x457e48
458208: xor edi, edi
45820a: call 0x426410
45820f: mov r14, rax
458212: test rax, rax
458215: jne 0x458241
458217: mov rax, qword ptr [rbp - 0x78]
45821b: xor r14d, r14d
45821e: xor r15d, r15d
458221: mov r8d, 3
458227: mov qword ptr [rax], 0
45822e: mov rax, qword ptr [rbp - 0xb8]
458235: mov qword ptr [rax], 0
45823c: jmp 0x45807c
458241: mov rax, qword ptr [rbp - 0x78]
458245: xor r15d, r15d
458248: mov qword ptr [rax], 0
45824f: jmp 0x45806f
458254: mov rdi, r14
458257: mov dword ptr [rbp - 0x70], r15d
45825b: xor r14d, r14d
45825e: xor r15d, r15d
458261: call 0x426a00
458266: mov rdi, qword ptr [rbp - 0x68]
45826a: call 0x426a00
45826f: mov rdi, qword ptr [rbp - 0x80]
458273: call 0x426a00
458278: mov rax, qword ptr [rbp - 0x78]
45827c: mov r8d, dword ptr [rbp - 0x70]
458280: mov qword ptr [rax], 0
458287: mov rax, qword ptr [rbp - 0xb8]
45828e: mov qword ptr [rax], 0
458295: test r8d, r8d
458298: jne 0x45807c
45829e: jmp 0x45814c
4582a3: add r13, 1
4582a7: sub dword ptr [rbx + 0x10], 1
4582ab: cmp r15, r13
4582ae: jbe 0x458340
4582b4: lea rax, [r13 + r13*2]
4582b9: lea rax, [r13 + rax*4]
4582be: lea rbx, [r14 + rax*8]
4582c2: jmp 0x45830a
4582c4: sub dword ptr [rbx + 0x10], 1
4582c8: jne 0x4582fd
4582ca: mov r12, qword ptr [rbx + 0x40]
4582ce: ror r12, 0x11
4582d2: xor r12, qword ptr fs:[0x30]
4582db: test r12, r12
4582de: je 0x4582f1
4582e0: mov rdi, r12
4582e3: call 0x456100
4582e8: mov rdi, rbx
4582eb: call r12
4582ee: mov rdi, qword ptr [rbx]
4582f1: call 0x4628e0
4582f6: mov qword ptr [rbx], 0
4582fd: add r13, 1
458301: add rbx, 0x68
458305: cmp r15, r13
458308: jbe 0x458340
45830a: mov rdi, qword ptr [rbx]
45830d: test rdi, rdi
458310: jne 0x4582c4
458312: cmp qword ptr [rbx + 0x40], 0
458317: je 0x4582fd
458319: lea rcx, [rip + 0x418d0]
458320: mov edx, 0xe2
458325: lea rsi, [rip + 0x41894]
45832c: lea rdi, [rip + 0x41898]
458333: call 0x4032a0
458338: nop dword ptr [rax + rax]
458340: mov r8d, 1
458346: jmp 0x457878
45834b: call 0x4547a0
458350: mov rdi, r14
458353: mov dword ptr [rbp - 0x70], r8d
458357: xor r14d, r14d
45835a: xor r15d, r15d
45835d: call 0x426a00
458362: mov rdi, qword ptr [rbp - 0x68]
458366: call 0x426a00
45836b: mov rdi, qword ptr [rbp - 0x80]
45836f: call 0x426a00
458374: mov rax, qword ptr [rbp - 0x78]
458378: mov r8d, dword ptr [rbp - 0x70]
45837c: mov qword ptr [rax], 0
458383: mov rax, qword ptr [rbp - 0xb8]
45838a: mov qword ptr [rax], 0
458391: jmp 0x45807c
458396: nop word ptr cs:[rax + rax]
4583a0: endbr64 
4583a4: mov rax, qword ptr [rip + 0x6b4fd]
4583ab: ret 
4583ac: nop dword ptr [rax]
4583b0: endbr64 
4583b4: mov rax, qword ptr [rip + 0x6b4fd]
4583bb: ret 
4583bc: nop dword ptr [rax]
4583c0: endbr64 
4583c4: push rbp
4583c5: push rbx
4583c6: mov rbx, rdi
4583c9: sub rsp, 8
4583cd: mov rdi, qword ptr [rdi]
4583d0: test rdi, rdi
4583d3: je 0x458418
4583d5: sub dword ptr [rbx + 0x10], 1
4583d9: jne 0x45840d
4583db: mov rbp, qword ptr [rbx + 0x40]
4583df: ror rbp, 0x11
4583e3: xor rbp, qword ptr fs:[0x30]
4583ec: test rbp, rbp
4583ef: je 0x458401
4583f1: mov rdi, rbp
4583f4: call 0x456100
4583f9: mov rdi, rbx
4583fc: call rbp
4583fe: mov rdi, qword ptr [rbx]
458401: call 0x4628e0
458406: mov qword ptr [rbx], 0
45840d: add rsp, 8
458411: pop rbx
458412: pop rbp
458413: ret 
458414: nop dword ptr [rax]
458418: cmp qword ptr [rbx + 0x40], 0
45841d: je 0x45840d
45841f: lea rcx, [rip + 0x417ca]
458426: mov edx, 0xe2
45842b: lea rsi, [rip + 0x4178e]
458432: lea rdi, [rip + 0x41792]
458439: call 0x4032a0
45843e: nop 
458440: endbr64 
458444: push r13
458446: push r12
458448: push rbp
458449: mov rbp, rsi
45844c: push rbx
45844d: mov rbx, rdi
458450: sub rsp, 0x38
458454: mov rax, qword ptr fs:[0x28]
45845d: mov qword ptr [rsp + 0x28], rax
458462: xor eax, eax
458464: call 0x459810
458469: lea rdx, [rsp + 0xc]
45846e: mov rsi, rbp
458471: mov rdi, rbx
458474: call 0x4620b0
458479: test eax, eax
45847b: jne 0x4584a0
45847d: mov eax, dword ptr [rsp + 0xc]
458481: mov rcx, qword ptr [rsp + 0x28]
458486: xor rcx, qword ptr fs:[0x28]
45848f: jne 0x458514
458495: add rsp, 0x38
458499: pop rbx
45849a: pop rbp
45849b: pop r12
45849d: pop r13
45849f: ret 
4584a0: lea r13, [rsp + 0x10]
4584a5: lea rdx, [rip - 0xdec]
4584ac: mov qword ptr [rsp + 0x10], rbp
4584b1: mov r12, rbp
4584b4: lea rsi, [rip + 0x6b3fd]
4584bb: mov rdi, r13
4584be: call 0x452270
4584c3: test rax, rax
4584c6: je 0x4584d6
4584c8: mov rax, qword ptr [rax]
4584cb: mov r12, qword ptr [rax + 8]
4584cf: test r12, r12
4584d2: cmove r12, rbp
4584d6: mov rdi, r13
4584d9: lea rdx, [rip - 0xe20]
4584e0: mov qword ptr [rsp + 0x10], rbx
4584e5: lea rsi, [rip + 0x6b3cc]
4584ec: call 0x452270
4584f1: mov rdi, rbx
4584f4: test rax, rax
4584f7: je 0x458507
4584f9: mov rax, qword ptr [rax]
4584fc: mov rdi, qword ptr [rax + 8]
458500: test rdi, rdi
458503: cmove rdi, rbx
458507: mov rsi, r12
45850a: call 0x401130
45850f: jmp 0x458481
458514: call 0x4547a0
458519: nop dword ptr [rax]
458520: endbr64 
458524: push r15
458526: push r14
458528: mov r14, rcx
45852b: push r13
45852d: mov r13d, r8d
458530: push r12
458532: mov r12, rsi
458535: push rbp
458536: mov rbp, rdi
458539: push rbx
45853a: mov rbx, rdx
45853d: sub rsp, 0x38
458541: mov rax, qword ptr fs:[0x28]
45854a: mov qword ptr [rsp + 0x28], rax
45854f: xor eax, eax
458551: call 0x459810
458556: mov eax, dword ptr fs:[0x18]
45855e: test eax, eax
458560: jne 0x4586f8
458566: mov edx, 1
45856b: cmpxchg dword ptr [rip + 0x6b33e], edx
458572: mov r8d, r13d
458575: mov rcx, r14
458578: mov rdx, rbx
45857b: mov rsi, r12
45857e: mov rdi, rbp
458581: call 0x462150
458586: mov r9d, eax
458589: cmp eax, 2
45858c: je 0x4585d0
45858e: mov eax, dword ptr fs:[0x18]
458596: test eax, eax
458598: jne 0x458698
45859e: sub dword ptr [rip + 0x6b30b], 1
4585a5: mov rax, qword ptr [rsp + 0x28]
4585aa: xor rax, qword ptr fs:[0x28]
4585b3: jne 0x45880c
4585b9: add rsp, 0x38
4585bd: mov eax, r9d
4585c0: pop rbx
4585c1: pop rbp
4585c2: pop r12
4585c4: pop r13
4585c6: pop r14
4585c8: pop r15
4585ca: ret 
4585cb: nop dword ptr [rax + rax]
4585d0: cmp qword ptr [rip + 0x6b2d0], 0
4585d8: je 0x4586d0
4585de: lea r15, [rsp + 0x10]
4585e3: lea rdx, [rip - 0xf2a]
4585ea: mov qword ptr [rsp + 0x10], r12
4585ef: lea rsi, [rip + 0x6b2c2]
4585f6: mov rdi, r15
4585f9: call 0x452270
4585fe: mov rcx, rax
458601: test rax, rax
458604: je 0x45860d
458606: mov rax, qword ptr [rax]
458609: mov rcx, qword ptr [rax + 8]
45860d: mov rdi, r15
458610: lea rdx, [rip - 0xf57]
458617: mov qword ptr [rsp + 8], rcx
45861c: lea rsi, [rip + 0x6b295]
458623: mov qword ptr [rsp + 0x10], rbp
458628: call 0x452270
45862d: mov rcx, qword ptr [rsp + 8]
458632: test rax, rax
458635: mov r15, rax
458638: je 0x458641
45863a: mov rax, qword ptr [rax]
45863d: mov r15, qword ptr [rax + 8]
458641: and r13d, 1
458645: jne 0x458720
45864b: mov r9, r14
45864e: mov r8, rbx
458651: mov rdx, r12
458654: mov rsi, r15
458657: mov rdi, rbp
45865a: call 0x457710
45865f: mov r9d, eax
458662: mov eax, dword ptr fs:[0x18]
45866a: test eax, eax
45866c: jne 0x4587b8
458672: sub dword ptr [rip + 0x6b237], 1
458679: test r9d, r9d
45867c: jne 0x4585a5
458682: xor r9d, r9d
458685: cmp qword ptr [rbx], 0
458689: sete r9b
45868d: jmp 0x4585a5
458692: nop word ptr [rax + rax]
458698: xor eax, eax
45869a: xchg dword ptr [rip + 0x6b210], eax
4586a0: cmp eax, 1
4586a3: jle 0x4585a5
4586a9: xor r10d, r10d
4586ac: mov edx, 1
4586b1: mov esi, 0x81
4586b6: mov eax, 0xca
4586bb: lea rdi, [rip + 0x6b1ee]
4586c2: syscall 
4586c4: jmp 0x4585a5
4586c9: nop dword ptr [rax]
4586d0: mov eax, dword ptr fs:[0x18]
4586d8: test eax, eax
4586da: jne 0x4587f0
4586e0: sub dword ptr [rip + 0x6b1c9], 1
4586e7: mov r9d, 1
4586ed: jmp 0x4585a5
4586f2: nop word ptr [rax + rax]
4586f8: xor eax, eax
4586fa: mov edx, 1
4586ff: lock cmpxchg dword ptr [rip + 0x6b1a9], edx
458707: je 0x458572
45870d: lea rdi, [rip + 0x6b19c]
458714: call 0x421250
458719: jmp 0x458572
45871e: nop 
458720: mov rsi, r12
458723: mov rdi, rbp
458726: mov qword ptr [rsp + 8], rcx
45872b: call 0x401130
458730: test eax, eax
458732: je 0x458795
458734: test r15, r15
458737: mov rcx, qword ptr [rsp + 8]
45873c: je 0x458752
45873e: mov rsi, r12
458741: mov rdi, r15
458744: call 0x401130
458749: mov rcx, qword ptr [rsp + 8]
45874e: test eax, eax
458750: je 0x458795
458752: test rcx, rcx
458755: je 0x45864b
45875b: mov rsi, rcx
45875e: mov rdi, rbp
458761: mov qword ptr [rsp + 8], rcx
458766: call 0x401130
45876b: test eax, eax
45876d: je 0x458795
45876f: test r15, r15
458772: mov rcx, qword ptr [rsp + 8]
458777: je 0x45864b
45877d: mov rsi, rcx
458780: mov rdi, r15
458783: call 0x401130
458788: mov rcx, qword ptr [rsp + 8]
45878d: test eax, eax
45878f: jne 0x45864b
458795: mov eax, dword ptr fs:[0x18]
45879d: test eax, eax
45879f: jne 0x458811
4587a1: sub dword ptr [rip + 0x6b108], 1
4587a8: or r9d, 0xffffffff
4587ac: jmp 0x4585a5
4587b1: nop dword ptr [rax]
4587b8: xor eax, eax
4587ba: xchg dword ptr [rip + 0x6b0f0], eax
4587c0: cmp eax, 1
4587c3: jle 0x458679
4587c9: xor r10d, r10d
4587cc: mov edx, 1
4587d1: mov esi, 0x81
4587d6: mov eax, 0xca
4587db: lea rdi, [rip + 0x6b0ce]
4587e2: syscall 
4587e4: jmp 0x458679
4587e9: nop dword ptr [rax]
4587f0: xor eax, eax
4587f2: xchg dword ptr [rip + 0x6b0b8], eax
4587f8: mov r9d, 1
4587fe: cmp eax, 1
458801: jle 0x4585a5
458807: jmp 0x4586a9
45880c: call 0x4547a0
458811: xor eax, eax
458813: xchg dword ptr [rip + 0x6b097], eax
458819: or r9d, 0xffffffff
45881d: sub eax, 1
458820: jle 0x4585a5
458826: jmp 0x4586a9
45882b: nop dword ptr [rax + rax]
458830: endbr64 
458834: push r14
458836: push r13
458838: mov r13, rdi
45883b: push r12
45883d: mov r12, rsi
458840: push rbp
458841: push rbx
458842: mov eax, dword ptr fs:[0x18]
45884a: test eax, eax
45884c: jne 0x458958
458852: mov edx, 1
458857: cmpxchg dword ptr [rip + 0x6b052], edx
45885e: lea rbp, [r12 - 1]
458863: test r12, r12
458866: je 0x4588f8
45886c: lea rax, [r12 + r12*2]
458870: lea rax, [r12 + rax*4]
458874: lea rbx, [r13 + rax*8 - 0x68]
458879: jmp 0x4588c7
45887b: nop dword ptr [rax + rax]
458880: sub dword ptr [rbx + 0x10], 1
458884: jne 0x4588b9
458886: mov r14, qword ptr [rbx + 0x40]
45888a: ror r14, 0x11
45888e: xor r14, qword ptr fs:[0x30]
458897: test r14, r14
45889a: je 0x4588ad
45889c: mov rdi, r14
45889f: call 0x456100
4588a4: mov rdi, rbx
4588a7: call r14
4588aa: mov rdi, qword ptr [rbx]
4588ad: call 0x4628e0
4588b2: mov qword ptr [rbx], 0
4588b9: sub rbp, 1
4588bd: sub rbx, 0x68
4588c1: cmp rbp, -1
4588c5: je 0x4588f8
4588c7: mov rdi, qword ptr [rbx]
4588ca: test rdi, rdi
4588cd: jne 0x458880
4588cf: cmp qword ptr [rbx + 0x40], 0
4588d4: je 0x4588b9
4588d6: lea rcx, [rip + 0x41313]
4588dd: mov edx, 0xe2
4588e2: lea rsi, [rip + 0x412d7]
4588e9: lea rdi, [rip + 0x412db]
4588f0: call 0x4032a0
4588f5: nop dword ptr [rax]
4588f8: mov rsi, r12
4588fb: mov rdi, r13
4588fe: call 0x462630
458903: mov eax, dword ptr fs:[0x18]
45890b: test eax, eax
45890d: jne 0x458928
45890f: sub dword ptr [rip + 0x6af9a], 1
458916: pop rbx
458917: xor eax, eax
458919: pop rbp
45891a: pop r12
45891c: pop r13
45891e: pop r14
458920: ret 
458921: nop dword ptr [rax]
458928: xor eax, eax
45892a: xchg dword ptr [rip + 0x6af80], eax
458930: cmp eax, 1
458933: jle 0x458916
458935: xor r10d, r10d
458938: mov edx, 1
45893d: mov esi, 0x81
458942: mov eax, 0xca
458947: lea rdi, [rip + 0x6af62]
45894e: syscall 
458950: jmp 0x458916
458952: nop word ptr [rax + rax]
458958: xor eax, eax
45895a: mov edx, 1
45895f: lock cmpxchg dword ptr [rip + 0x6af49], edx
458967: je 0x45885e
45896d: lea rdi, [rip + 0x6af3c]
458974: call 0x421250
458979: jmp 0x45885e
45897e: nop 
458980: push rbp
458981: mov rbp, rsp
458984: push r15
458986: push r14
458988: push r13
45898a: push r12
45898c: push rbx
45898d: sub rsp, 0x38
458991: mov r15, qword ptr [rip + 0x6af38]
458998: mov rax, qword ptr fs:[0x28]
4589a1: mov qword ptr [rbp - 0x38], rax
4589a5: xor eax, eax
4589a7: test r15, r15
4589aa: jne 0x458d33
4589b0: mov r13, qword ptr [rip + 0x6af09]
4589b7: test r13, r13
4589ba: je 0x458c30
4589c0: mov rdi, r13
4589c3: call 0x401180
4589c8: mov rcx, rsp
4589cb: mov rdx, rax
4589ce: lea rax, [rax + 0x21]
4589d2: mov qword ptr [rbp - 0x58], rax
4589d6: lea rax, [rdx + 0x38]
4589da: mov rsi, rax
4589dd: and rax, 0xfffffffffffff000
4589e3: sub rcx, rax
4589e6: and rsi, 0xfffffffffffffff0
4589ea: mov rax, rcx
4589ed: cmp rsp, rax
4589f0: je 0x458a07
4589f2: sub rsp, 0x1000
4589f9: or qword ptr [rsp + 0xff8], 0
458a02: cmp rsp, rax
458a05: jne 0x4589f2
458a07: and esi, 0xfff
458a0d: sub rsp, rsi
458a10: test rsi, rsi
458a13: jne 0x458ca3
458a19: lea rdi, [rsp + 0xf]
458a1e: mov rsi, r13
458a21: and rdi, 0xfffffffffffffff0
458a25: mov qword ptr [rbp - 0x40], rdi
458a29: call 0x401150
458a2e: movdqa xmm0, xmmword ptr [rip + 0x4178a]
458a36: xor esi, esi
458a38: xor edi, edi
458a3a: movdqa xmm1, xmmword ptr [rip + 0x4178e]
458a42: mov byte ptr [rax], 0x3a
458a45: movups xmmword ptr [rax + 1], xmm0
458a49: movups xmmword ptr [rax + 0x11], xmm1
458a4d: call 0x450fc0
458a52: mov r13, rax
458a55: test rax, rax
458a58: je 0x458cae
458a5e: mov rdi, rax
458a61: call 0x401180
458a66: mov rcx, qword ptr [rbp - 0x40]
458a6a: mov qword ptr [rbp - 0x50], rax
458a6e: add rax, 1
458a72: mov qword ptr [rbp - 0x48], rcx
458a76: mov rdi, rcx
458a79: mov qword ptr [rbp - 0x60], rax
458a7d: mov esi, 0x3a
458a82: call 0x401190
458a87: mov r12, rax
458a8a: test rax, rax
458a8d: je 0x458cce
458a93: mov r14d, 1
458a99: jmp 0x458aa3
458a9b: nop dword ptr [rax + rax]
458aa0: mov r12, rax
458aa3: lea eax, [r14 + 1]
458aa7: lea rcx, [r15 + 1]
458aab: mov ebx, eax
458aad: cmp r12, rcx
458ab0: je 0x458ab9
458ab2: lea ebx, [r14 + 2]
458ab6: mov r14d, eax
458ab9: lea rdi, [r12 + 1]
458abe: mov esi, 0x3a
458ac3: mov r15, r12
458ac6: call 0x401190
458acb: test rax, rax
458ace: jne 0x458aa0
458ad0: movsxd rdi, ebx
458ad3: mov r15, qword ptr [rbp - 0x60]
458ad7: lea r8d, [r14 - 1]
458adb: movsxd rbx, r14d
458ade: mov rax, rdi
458ae1: movsxd rdi, r8d
458ae4: imul r15, rdi
458ae8: shl rax, 4
458aec: lea rdi, [rax + rbx]
458af0: add rdi, qword ptr [rbp - 0x58]
458af4: add rdi, r15
458af7: call 0x426410
458afc: mov qword ptr [rbp - 0x58], rax
458b00: test rax, rax
458b03: je 0x458cff
458b09: mov rdi, qword ptr [rbp - 0x48]
458b0d: add rbx, 1
458b11: lea r14, [rbp - 0x40]
458b15: lea rsi, [rip + 0x574dd]
458b1c: shl rbx, 4
458b20: mov rdx, r14
458b23: mov qword ptr [rip + 0x6ad9a], 0
458b2e: lea r15, [rax + rbx]
458b32: call 0x475800
458b37: mov r8, rax
458b3a: test rax, rax
458b3d: je 0x458d0f
458b43: mov rbx, qword ptr [rbp - 0x58]
458b47: xor r12d, r12d
458b4a: nop word ptr [rax + rax]
458b50: mov qword ptr [rbx], r15
458b53: cmp byte ptr [r8], 0x2f
458b57: je 0x458b80
458b59: test r13, r13
458b5c: je 0x458ce0
458b62: mov rdx, qword ptr [rbp - 0x50]
458b66: mov rdi, r15
458b69: mov rsi, r13
458b6c: mov qword ptr [rbp - 0x48], r8
458b70: call 0x401150
458b75: mov r8, qword ptr [rbp - 0x48]
458b79: mov byte ptr [rax], 0x2f
458b7c: lea r15, [rax + 1]
458b80: mov rsi, r8
458b83: mov rdi, r15
458b86: call 0x401090
458b8b: cmp byte ptr [rax - 1], 0x2f
458b8f: je 0x458b98
458b91: mov byte ptr [rax], 0x2f
458b94: add rax, 1
458b98: mov rdx, rax
458b9b: sub rdx, qword ptr [rbx]
458b9e: cmp rdx, qword ptr [rip + 0x6ad23]
458ba5: mov qword ptr [rbx + 8], rdx
458ba9: jbe 0x458bb2
458bab: mov qword ptr [rip + 0x6ad16], rdx
458bb2: mov byte ptr [rax], 0
458bb5: mov rdx, r14
458bb8: lea rsi, [rip + 0x5743a]
458bbf: xor edi, edi
458bc1: lea r15, [rax + 1]
458bc5: add r12d, 1
458bc9: add rbx, 0x10
458bcd: call 0x475800
458bd2: mov r8, rax
458bd5: test rax, rax
458bd8: jne 0x458b50
458bde: mov rax, qword ptr [rbp - 0x58]
458be2: movsxd r12, r12d
458be5: shl r12, 4
458be9: add rax, r12
458bec: mov qword ptr [rax], 0
458bf3: mov qword ptr [rax + 8], 0
458bfb: mov rax, qword ptr [rbp - 0x58]
458bff: mov rdi, r13
458c02: mov qword ptr [rip + 0x6acc7], rax
458c09: call 0x426a00
458c0e: mov rax, qword ptr [rbp - 0x38]
458c12: xor rax, qword ptr fs:[0x28]
458c1b: jne 0x458d2e
458c21: lea rsp, [rbp - 0x28]
458c25: pop rbx
458c26: pop r12
458c28: pop r13
458c2a: pop r14
458c2c: pop r15
458c2e: pop rbp
458c2f: ret 
458c30: mov rax, rsp
458c33: cmp rsp, rax
458c36: je 0x458c4d
458c38: sub rsp, 0x1000
458c3f: or qword ptr [rsp + 0xff8], 0
458c48: cmp rsp, rax
458c4b: jne 0x458c38
458c4d: sub rsp, 0x30
458c51: or qword ptr [rsp + 0x28], 0
458c57: movdqa xmm2, xmmword ptr [rip + 0x41561]
458c5f: movdqa xmm3, xmmword ptr [rip + 0x41569]
458c67: lea r12, [rsp + 0xf]
458c6c: mov qword ptr [rbp - 0x60], 1
458c74: and r12, 0xfffffffffffffff0
458c78: mov qword ptr [rbp - 0x50], 0
458c80: mov qword ptr [rbp - 0x48], r12
458c84: mov rdi, r12
458c87: mov qword ptr [rbp - 0x40], r12
458c8b: mov qword ptr [rbp - 0x58], 0x20
458c93: movaps xmmword ptr [r12], xmm2
458c98: movaps xmmword ptr [r12 + 0x10], xmm3
458c9e: jmp 0x458a7d
458ca3: or qword ptr [rsp + rsi - 8], 0
458ca9: jmp 0x458a19
458cae: mov rax, qword ptr [rbp - 0x40]
458cb2: mov qword ptr [rbp - 0x60], 1
458cba: mov qword ptr [rbp - 0x50], 0
458cc2: mov qword ptr [rbp - 0x48], rax
458cc6: mov rdi, rax
458cc9: jmp 0x458a7d
458cce: xor r15d, r15d
458cd1: mov ebx, 1
458cd6: mov eax, 0x20
458cdb: jmp 0x458aec
458ce0: lea rcx, [rip + 0x41099]
458ce7: mov edx, 0x1fa
458cec: lea rsi, [rip + 0x40f12]
458cf3: lea rdi, [rip + 0x40f34]
458cfa: call 0x4032a0
458cff: lea rax, [rip + 0x4149a]
458d06: mov qword ptr [rbp - 0x58], rax
458d0a: jmp 0x458bfb
458d0f: lea rcx, [rip + 0x4106a]
458d16: mov edx, 0x1f4
458d1b: lea rsi, [rip + 0x40ee3]
458d22: lea rdi, [rip + 0x40ef8]
458d29: call 0x4032a0
458d2e: call 0x4547a0
458d33: lea rcx, [rip + 0x41046]
458d3a: mov edx, 0x1b6
458d3f: lea rsi, [rip + 0x40ebf]
458d46: lea rdi, [rip + 0x40ec5]
458d4d: call 0x4032a0
458d52: nop word ptr cs:[rax + rax]
458d5d: nop dword ptr [rax]
458d60: push r15
458d62: push r14
458d64: push r13
458d66: mov r13, rdi
458d69: push r12
458d6b: push rbp
458d6c: push rbx
458d6d: sub rsp, 8
458d71: mov rbp, qword ptr [rip + 0x6ab30]
458d78: test rbp, rbp
458d7b: je 0x458e67
458d81: mov r12, qword ptr [rdi]
458d84: mov r14d, esi
458d87: lea rbx, [rip + 0x6ab1a]
458d8e: jmp 0x458da6
458d90: lea rbx, [rbp + 0x20]
458d94: add rbp, 0x30
458d98: test eax, eax
458d9a: cmovns rbx, rbp
458d9e: mov rbp, qword ptr [rbx]
458da1: test rbp, rbp
458da4: je 0x458e00
458da6: mov rsi, qword ptr [rbp]
458daa: mov rdi, r12
458dad: call 0x401130
458db2: test eax, eax
458db4: jne 0x458d90
458db6: mov r15, qword ptr [r13 + 8]
458dba: nop word ptr [rax + rax]
458dc0: mov rsi, qword ptr [rbp + 8]
458dc4: mov rdi, r15
458dc7: call 0x401130
458dcc: test eax, eax
458dce: je 0x458e18
458dd0: lea rbx, [rbp + 0x28]
458dd4: mov rbp, qword ptr [rbp + 0x28]
458dd8: test rbp, rbp
458ddb: je 0x458e00
458ddd: mov rsi, qword ptr [rbp]
458de1: mov rdi, r12
458de4: call 0x401130
458de9: test eax, eax
458deb: je 0x458dc0
458ded: lea rbx, [rbp + 0x28]
458df1: mov rbp, qword ptr [rbp + 0x28]
458df5: test rbp, rbp
458df8: jne 0x458ddd
458dfa: nop word ptr [rax + rax]
458e00: mov qword ptr [rbx], r13
458e03: add rsp, 8
458e07: pop rbx
458e08: pop rbp
458e09: pop r12
458e0b: pop r13
458e0d: pop r14
458e0f: pop r15
458e11: ret 
458e12: nop word ptr [rax + rax]
458e18: mov eax, dword ptr [rbp + 0x10]
458e1b: cmp dword ptr [r13 + 0x10], eax
458e1f: jl 0x458e36
458e21: je 0x458e2d
458e23: test r14d, r14d
458e26: je 0x458e03
458e28: mov rdi, r13
458e2b: jmp 0x458e54
458e2d: mov eax, dword ptr [rbp + 0x14]
458e30: cmp dword ptr [r13 + 0x14], eax
458e34: jge 0x458e23
458e36: mov rax, qword ptr [rbp + 0x20]
458e3a: mov rdi, rbp
458e3d: mov qword ptr [r13 + 0x20], rax
458e41: mov rax, qword ptr [rbp + 0x30]
458e45: mov qword ptr [r13 + 0x30], rax
458e49: mov rax, qword ptr [rbp + 0x28]
458e4d: mov qword ptr [r13 + 0x28], rax
458e51: mov qword ptr [rbx], r13
458e54: add rsp, 8
458e58: pop rbx
458e59: pop rbp
458e5a: pop r12
458e5c: pop r13
458e5e: pop r14
458e60: pop r15
458e62: jmp 0x426a00
458e67: lea rbx, [rip + 0x6aa3a]
458e6e: jmp 0x458e00
458e70: push rbp
458e71: mov r9, rdx
458e74: mov rbp, rsp
458e77: push r15
458e79: push r14
458e7b: push r13
458e7d: push r12
458e7f: mov r12, rdi
458e82: push rbx
458e83: sub rsp, 0x68
458e87: mov dword ptr [rbp - 0x58], ecx
458e8a: movsx rdx, byte ptr [rdi]
458e8e: mov rcx, qword ptr [rip + 0x66f93]
458e95: mov qword ptr [rbp - 0x60], rsi
458e99: movzx esi, word ptr [rcx + rdx*2]
458e9d: mov rax, qword ptr fs:[0x28]
458ea6: mov qword ptr [rbp - 0x38], rax
458eaa: xor eax, eax
458eac: test si, 0x2000
458eb1: je 0x459200
458eb7: nop word ptr [rax + rax]
458ec0: movsx rdx, byte ptr [r12 + 1]
458ec6: add r12, 1
458eca: movzx esi, word ptr [rcx + rdx*2]
458ece: mov rax, rdx
458ed1: test si, 0x2000
458ed6: jne 0x458ec0
458ed8: test al, al
458eda: je 0x4591c8
458ee0: mov rdi, qword ptr [rip + 0x66f51]
458ee7: mov rax, r12
458eea: jmp 0x458f0e
458eec: nop dword ptr [rax]
458ef0: mov edx, dword ptr [rdi + rdx*4]
458ef3: mov byte ptr [r13 - 1], dl
458ef7: movzx eax, byte ptr [rax + 1]
458efb: test al, al
458efd: je 0x4591c8
458f03: movsx rdx, al
458f07: mov rax, r13
458f0a: movzx esi, word ptr [rcx + rdx*2]
458f0e: lea r13, [rax + 1]
458f12: test si, 0x2000
458f17: je 0x458ef0
458f19: movsx rdx, byte ptr [rax + 1]
458f1e: mov byte ptr [rax], 0
458f21: mov r14, r13
458f24: movzx ebx, word ptr [rcx + rdx*2]
458f28: mov rax, rdx
458f2b: test bh, 0x20
458f2e: je 0x458f45
458f30: movsx rdx, byte ptr [r14 + 1]
458f35: add r14, 1
458f39: movzx ebx, word ptr [rcx + rdx*2]
458f3d: mov rax, rdx
458f40: test bh, 0x20
458f43: jne 0x458f30
458f45: mov r15, r13
458f48: test al, al
458f4a: jne 0x458f7a
458f4c: jmp 0x4591c8
458f51: nop dword ptr [rax]
458f58: mov eax, dword ptr [rdi + rdx*4]
458f5b: mov byte ptr [r11 - 1], al
458f5f: movzx eax, byte ptr [r14 + 1]
458f64: test al, al
458f66: je 0x4591c8
458f6c: movsx rdx, al
458f70: mov r15, r11
458f73: mov r14, rsi
458f76: movzx ebx, word ptr [rcx + rdx*2]
458f7a: lea rsi, [r14 + 1]
458f7e: lea r11, [r15 + 1]
458f82: and bh, 0x20
458f85: je 0x458f58
458f87: mov byte ptr [r15], 0
458f8b: jmp 0x458f94
458f8d: nop dword ptr [rax]
458f90: add rsi, 1
458f94: movsx rdx, byte ptr [rsi]
458f98: mov r14, rsi
458f9b: mov rax, rdx
458f9e: test byte ptr [rcx + rdx*2 + 1], 0x20
458fa3: jne 0x458f90
458fa5: mov rdx, r11
458fa8: test al, al
458faa: je 0x459010
458fac: nop dword ptr [rax]
458fb0: mov rbx, rdx
458fb3: add r14, 1
458fb7: add rdx, 1
458fbb: mov byte ptr [rdx - 1], al
458fbe: movzx eax, byte ptr [r14]
458fc2: test al, al
458fc4: je 0x459010
458fc6: movsx rsi, al
458fca: test byte ptr [rcx + rsi*2 + 1], 0x20
458fcf: je 0x458fb0
458fd1: mov byte ptr [rdx], 0
458fd4: lea rsi, [rbp - 0x50]
458fd8: mov edx, 0xa
458fdd: mov rdi, r14
458fe0: mov qword ptr [rbp - 0x78], r9
458fe4: add rbx, 2
458fe8: mov qword ptr [rbp - 0x70], r11
458fec: call 0x466af0
458ff1: cmp qword ptr [rbp - 0x50], r14
458ff5: mov r11, qword ptr [rbp - 0x70]
458ff9: mov dword ptr [rbp - 0x64], eax
458ffc: mov r9, qword ptr [rbp - 0x78]
459000: je 0x459006
459002: test eax, eax
459004: jg 0x45901e
459006: mov dword ptr [rbp - 0x64], 1
45900d: jmp 0x45901e
45900f: nop 
459010: mov byte ptr [rdx], 0
459013: lea rbx, [rdx + 1]
459017: mov dword ptr [rbp - 0x64], 1
45901e: movzx eax, byte ptr [r15 + 1]
459023: test al, al
459025: je 0x4591c8
45902b: cmp al, 0x2f
45902d: mov eax, 0
459032: cmove r9, rax
459036: mov rax, rbx
459039: sub rax, r11
45903c: mov qword ptr [rbp - 0x88], rax
459043: cmp rax, 3
459047: jle 0x4591f0
45904d: xor ecx, ecx
45904f: cmp dword ptr [rbx - 4], 0x6f732e
459056: setne r14b
45905a: setne cl
45905d: movzx r14d, r14b
459061: lea rcx, [rcx + rcx*2]
459065: lea r14d, [r14 + r14*2]
459069: mov r15, r13
45906c: mov rdi, r12
45906f: mov qword ptr [rbp - 0x80], r9
459073: sub r15, r12
459076: mov qword ptr [rbp - 0x78], rcx
45907a: mov rsi, r15
45907d: mov qword ptr [rbp - 0x70], r11
459081: call 0x401030
459086: mov rdi, rsp
459089: mov r9, qword ptr [rbp - 0x80]
45908d: mov rcx, qword ptr [rbp - 0x78]
459091: lea rdx, [rax + 0x18]
459095: mov r11, qword ptr [rbp - 0x70]
459099: mov rsi, rdx
45909c: and rdx, 0xfffffffffffff000
4590a3: sub rdi, rdx
4590a6: and rsi, 0xfffffffffffffff0
4590aa: mov rdx, rdi
4590ad: cmp rsp, rdx
4590b0: je 0x4590c7
4590b2: sub rsp, 0x1000
4590b9: or qword ptr [rsp + 0xff8], 0
4590c2: cmp rsp, rdx
4590c5: jne 0x4590b2
4590c7: and esi, 0xfff
4590cd: sub rsp, rsi
4590d0: test rsi, rsi
4590d3: je 0x4590db
4590d5: or qword ptr [rsp + rsi - 8], 0
4590db: lea rdi, [rsp + 0xf]
4590e0: mov rdx, rax
4590e3: mov rsi, r12
4590e6: mov qword ptr [rbp - 0x80], r9
4590ea: and rdi, 0xfffffffffffffff0
4590ee: mov qword ptr [rbp - 0x78], rcx
4590f2: mov byte ptr [rdi + rax], 0
4590f6: mov qword ptr [rbp - 0x70], r11
4590fa: call 0x401060
4590ff: lea rdi, [rbp - 0x50]
459103: lea rdx, [rip - 0x1a4a]
45910a: lea rsi, [rip + 0x6a7a7]
459111: mov qword ptr [rbp - 0x50], rax
459115: call 0x452270
45911a: mov rcx, qword ptr [rbp - 0x78]
45911e: mov r9, qword ptr [rbp - 0x80]
459122: test rax, rax
459125: jne 0x4591c8
45912b: sub rbx, r12
45912e: mov edi, 1
459133: mov qword ptr [rbp - 0x78], r9
459137: lea rsi, [r9 + rbx + 0x38]
45913c: add rsi, rcx
45913f: call 0x427d10
459144: mov rbx, rax
459147: test rax, rax
45914a: je 0x4591c8
45914c: lea rdi, [rax + 0x38]
459150: mov rdx, r15
459153: mov rsi, r12
459156: mov qword ptr [rax], rdi
459159: call 0x401150
45915e: mov r11, qword ptr [rbp - 0x70]
459162: mov rsi, r13
459165: mov qword ptr [rbx + 8], rax
459169: mov rdi, rax
45916c: mov rdx, r11
45916f: sub rdx, r13
459172: call 0x401150
459177: mov r9, qword ptr [rbp - 0x78]
45917b: mov r11, qword ptr [rbp - 0x70]
45917f: mov rdi, rax
459182: mov eax, dword ptr [rbp - 0x64]
459185: test r9, r9
459188: mov qword ptr [rbx + 0x18], rdi
45918c: mov dword ptr [rbx + 0x10], eax
45918f: mov eax, dword ptr [rbp - 0x58]
459192: mov dword ptr [rbx + 0x14], eax
459195: jne 0x459208
459197: mov rdx, qword ptr [rbp - 0x88]
45919e: mov rsi, r11
4591a1: call 0x401150
4591a6: test r14d, r14d
4591a9: je 0x4591b4
4591ab: mov edx, dword ptr [rip + 0x40bc2]
4591b1: mov dword ptr [rax - 1], edx
4591b4: mov esi, 1
4591b9: mov rdi, rbx
4591bc: call 0x458d60
4591c1: nop dword ptr [rax]
4591c8: mov rax, qword ptr [rbp - 0x38]
4591cc: xor rax, qword ptr fs:[0x28]
4591d5: jne 0x459224
4591d7: lea rsp, [rbp - 0x28]
4591db: pop rbx
4591dc: pop r12
4591de: pop r13
4591e0: pop r14
4591e2: pop r15
4591e4: pop rbp
4591e5: ret 
4591e6: nop word ptr cs:[rax + rax]
4591f0: mov ecx, 3
4591f5: mov r14d, 3
4591fb: jmp 0x459069
459200: mov rax, rdx
459203: jmp 0x458ed8
459208: mov rsi, qword ptr [rbp - 0x60]
45920c: mov rdx, r9
45920f: mov qword ptr [rbp - 0x58], r11
459213: call 0x401150
459218: mov r11, qword ptr [rbp - 0x58]
45921c: mov rdi, rax
45921f: jmp 0x459197
459224: call 0x4547a0
459229: nop dword ptr [rax]
459230: endbr64 
459234: push rbp
459235: mov rbp, rsp
459238: push r15
45923a: push r14
45923c: push r13
45923e: push r12
459240: push rbx
459241: sub rsp, 0x78
459245: mov rax, qword ptr fs:[0x28]
45924e: mov qword ptr [rbp - 0x38], rax
459252: xor eax, eax
459254: mov rax, 0xffffffffffffffc0
45925b: mov ebx, dword ptr fs:[rax]
45925e: mov dword ptr [rbp - 0x8c], ebx
459264: call 0x461e90
459269: test eax, eax
45926b: jne 0x4592a0
45926d: mov rax, 0xffffffffffffffc0
459274: mov dword ptr fs:[rax], ebx
459277: mov rax, qword ptr [rbp - 0x38]
45927b: xor rax, qword ptr fs:[0x28]
459284: jne 0x459808
45928a: lea rsp, [rbp - 0x28]
45928e: pop rbx
45928f: pop r12
459291: pop r13
459293: pop r14
459295: pop r15
459297: pop rbp
459298: ret 
459299: nop dword ptr [rax]
4592a0: call 0x458980
4592a5: mov rax, qword ptr [rip + 0x6a624]
4592ac: mov rbx, qword ptr [rax]
4592af: mov qword ptr [rbp - 0x80], rbx
4592b3: test rbx, rbx
4592b6: je 0x4597ff
4592bc: lea r14, [rbp - 0x50]
4592c0: lea rbx, [rbp - 0x58]
4592c4: mov qword ptr [rbp - 0x68], 0x10
4592cc: mov qword ptr [rbp - 0x70], r14
4592d0: mov qword ptr [rbp - 0x78], rbx
4592d4: mov rbx, qword ptr [rip + 0x66b4d]
4592db: nop dword ptr [rax + rax]
4592e0: mov rax, qword ptr [rax + 8]
4592e4: mov rsi, rsp
4592e7: mov qword ptr [rbp - 0x88], rax
4592ee: add rax, 0x25
4592f2: mov rdx, rax
4592f5: and rax, 0xfffffffffffff000
4592fb: sub rsi, rax
4592fe: and rdx, 0xfffffffffffffff0
459302: mov rax, rsi
459305: cmp rsp, rax
459308: je 0x45931f
45930a: sub rsp, 0x1000
459311: or qword ptr [rsp + 0xff8], 0
45931a: cmp rsp, rax
45931d: jne 0x45930a
45931f: and edx, 0xfff
459325: sub rsp, rdx
459328: test rdx, rdx
45932b: je 0x459333
45932d: or qword ptr [rsp + rdx - 8], 0
459333: lea r12, [rsp + 0xf]
459338: mov rdx, qword ptr [rbp - 0x88]
45933f: mov rsi, qword ptr [rbp - 0x80]
459343: and r12, 0xfffffffffffffff0
459347: mov rdi, r12
45934a: call 0x401150
45934f: lea rcx, [rip + 0x40e32]
459356: movzx esi, word ptr [rip + 0x40e37]
45935d: mov rdi, r12
459360: mov rdx, qword ptr [rcx]
459363: mov ecx, dword ptr [rip + 0x40e27]
459369: mov word ptr [rax + 0xc], si
45936d: lea rsi, [rip + 0x3c03e]
459374: mov qword ptr [rax], rdx
459377: mov dword ptr [rax + 8], ecx
45937a: call 0x418750
45937f: mov qword ptr [rbp - 0x58], 0
459387: mov qword ptr [rbp - 0x50], 0
45938f: mov r12, rax
459392: test rax, rax
459395: je 0x459474
45939b: mov eax, dword ptr [rax]
45939d: mov edx, eax
45939f: or dh, 0x80
4593a2: mov dword ptr [r12], edx
4593a6: test al, 0x10
4593a8: jne 0x4597f8
4593ae: nop 
4593b0: mov rsi, qword ptr [rbp - 0x70]
4593b4: mov rdi, qword ptr [rbp - 0x78]
4593b8: mov rcx, r12
4593bb: mov edx, 0xa
4593c0: call 0x473cb0
4593c5: mov r14, rax
4593c8: test rax, rax
4593cb: js 0x459463
4593d1: mov r13, qword ptr [rbp - 0x58]
4593d5: mov esi, 0x23
4593da: mov rdi, r13
4593dd: call 0x401190
4593e2: test rax, rax
4593e5: je 0x4595d0
4593eb: mov byte ptr [rax], 0
4593ee: jmp 0x4593f4
4593f0: add r13, 1
4593f4: movsx rdx, byte ptr [r13]
4593f9: mov rcx, rdx
4593fc: movzx edx, word ptr [rbx + rdx*2]
459400: test dh, 0x20
459403: jne 0x4593f0
459405: cmp rax, r13
459408: je 0x459458
45940a: mov r14, r13
45940d: test cl, cl
45940f: jne 0x459429
459411: jmp 0x459458
459413: nop dword ptr [rax + rax]
459418: movsx rax, byte ptr [r14 + 1]
45941d: add r14, 1
459421: test al, al
459423: je 0x45942e
459425: movzx edx, word ptr [rbx + rax*2]
459429: and dh, 0x20
45942c: je 0x459418
45942e: mov rax, r14
459431: sub rax, r13
459434: cmp rax, 5
459438: je 0x4595f0
45943e: cmp rax, 6
459442: jne 0x459458
459444: cmp dword ptr [r13], 0x75646f6d
45944c: je 0x4597b0
459452: nop word ptr [rax + rax]
459458: test byte ptr [r12], 0x10
45945d: je 0x4593b0
459463: mov rdi, qword ptr [rbp - 0x58]
459467: call 0x426a00
45946c: mov rdi, r12
45946f: call 0x418240
459474: mov rsi, qword ptr [rbp - 0x68]
459478: mov rax, qword ptr [rip + 0x6a451]
45947f: add rax, rsi
459482: add rsi, 0x10
459486: mov rdi, qword ptr [rax]
459489: mov qword ptr [rbp - 0x68], rsi
45948d: mov qword ptr [rbp - 0x80], rdi
459491: test rdi, rdi
459494: jne 0x4592e0
45949a: mov r14, qword ptr [rbp - 0x70]
45949e: lea r13, [rip + 0x6823b]
4594a5: lea rbx, [rip - 0x1dec]
4594ac: lea r12, [r13 + 0x2a0]
4594b3: jmp 0x4594c1
4594b5: nop dword ptr [rax]
4594b8: add r13, 0x38
4594bc: cmp r13, r12
4594bf: je 0x4594f3
4594c1: mov rax, qword ptr [r13]
4594c5: mov rdx, rbx
4594c8: lea rsi, [rip + 0x6a3e9]
4594cf: mov rdi, r14
4594d2: mov qword ptr [rbp - 0x50], rax
4594d6: call 0x452270
4594db: test rax, rax
4594de: jne 0x4594b8
4594e0: mov rdi, r13
4594e3: xor esi, esi
4594e5: add r13, 0x38
4594e9: call 0x458d60
4594ee: cmp r13, r12
4594f1: jne 0x4594c1
4594f3: lea r13, [rip + 0x408a6]
4594fa: nop word ptr [rax + rax]
459500: mov rdi, r13
459503: xor esi, esi
459505: mov r14, r13
459508: call 0x401050
45950d: xor esi, esi
45950f: lea r12, [rax + 1]
459513: mov rdi, r12
459516: call 0x401050
45951b: mov rbx, qword ptr [rip + 0x6a386]
459522: mov qword ptr [rbp - 0x68], rax
459526: lea r13, [rax + 1]
45952a: test rbx, rbx
45952d: je 0x45954d
45952f: mov rsi, qword ptr [rbx]
459532: mov rdi, r14
459535: call 0x401130
45953a: test eax, eax
45953c: je 0x4595ab
45953e: js 0x4597e8
459544: mov rbx, qword ptr [rbx + 0x30]
459548: test rbx, rbx
45954b: jne 0x45952f
45954d: mov rbx, r13
459550: sub rbx, r14
459553: lea rdi, [rbx + 0x10]
459557: call 0x426410
45955c: mov r15, rax
45955f: test rax, rax
459562: je 0x4595ab
459564: lea rdi, [r15 + 0x10]
459568: mov rdx, rbx
45956b: mov rsi, r14
45956e: sub r12, r14
459571: call 0x401060
459576: lea rsi, [rip + 0x6a33b]
45957d: mov rdi, r15
459580: mov rdx, rax
459583: mov qword ptr [r15], rax
459586: add rdx, r12
459589: mov qword ptr [r15 + 8], rdx
45958d: lea rdx, [rip - 0x1ed4]
459594: call 0x451e70
459599: test rax, rax
45959c: je 0x4595a3
45959e: cmp r15, qword ptr [rax]
4595a1: je 0x4595ab
4595a3: mov rdi, r15
4595a6: call 0x426a00
4595ab: mov rax, qword ptr [rbp - 0x68]
4595af: cmp byte ptr [rax + 1], 0
4595b3: jne 0x459500
4595b9: mov rax, 0xffffffffffffffc0
4595c0: mov ebx, dword ptr [rbp - 0x8c]
4595c6: mov dword ptr fs:[rax], ebx
4595c9: jmp 0x459277
4595ce: nop 
4595d0: lea rdx, [r13 + r14 - 1]
4595d5: cmp byte ptr [rdx], 0xa
4595d8: jne 0x4593f4
4595de: mov byte ptr [rdx], 0
4595e1: jmp 0x4593f4
4595e6: nop word ptr cs:[rax + rax]
4595f0: cmp dword ptr [r13], 0x61696c61
4595f8: jne 0x459458
4595fe: cmp byte ptr [r13 + 4], 0x73
459603: jne 0x459458
459609: jmp 0x459614
45960b: nop dword ptr [rax + rax]
459610: add r14, 1
459614: movsx rax, byte ptr [r14]
459618: movzx edx, word ptr [rbx + rax*2]
45961c: test dh, 0x20
45961f: jne 0x459610
459621: test al, al
459623: je 0x459458
459629: mov rcx, r14
45962c: jmp 0x459652
45962e: nop 
459630: mov rdi, qword ptr [rip + 0x66801]
459637: mov eax, dword ptr [rdi + rax*4]
45963a: mov byte ptr [r13 - 1], al
45963e: movsx rax, byte ptr [rcx + 1]
459643: test al, al
459645: je 0x459458
45964b: movzx edx, word ptr [rbx + rax*2]
45964f: mov rcx, r13
459652: lea r13, [rcx + 1]
459656: and dh, 0x20
459659: je 0x459630
45965b: movsx rax, byte ptr [rcx + 1]
459660: mov byte ptr [rcx], 0
459663: mov rdx, r13
459666: movzx esi, word ptr [rbx + rax*2]
45966a: mov rdi, rax
45966d: test si, 0x2000
459672: je 0x45968f
459674: nop dword ptr [rax]
459678: movsx rax, byte ptr [rdx + 1]
45967d: add rdx, 1
459681: movzx esi, word ptr [rbx + rax*2]
459685: mov rdi, rax
459688: test si, 0x2000
45968d: jne 0x459678
45968f: mov r15, r13
459692: test dil, dil
459695: jne 0x4596c2
459697: jmp 0x459458
45969c: nop dword ptr [rax]
4596a0: mov rcx, qword ptr [rip + 0x66791]
4596a7: add rdx, 1
4596ab: add r15, 1
4596af: mov eax, dword ptr [rcx + rax*4]
4596b2: mov byte ptr [r15 - 1], al
4596b6: movsx rax, byte ptr [rdx]
4596ba: test al, al
4596bc: je 0x4596c9
4596be: movzx esi, word ptr [rbx + rax*2]
4596c2: test si, 0x2000
4596c7: je 0x4596a0
4596c9: cmp r15, r13
4596cc: je 0x459458
4596d2: mov byte ptr [r15], 0
4596d6: mov rdx, qword ptr [rip + 0x6a1cb]
4596dd: test rdx, rdx
4596e0: je 0x45971f
4596e2: mov qword ptr [rbp - 0x98], r13
4596e9: mov r13, rdx
4596ec: jmp 0x4596f9
4596ee: nop 
4596f0: mov r13, qword ptr [r13 + 0x30]
4596f4: test r13, r13
4596f7: je 0x459718
4596f9: mov rsi, qword ptr [r13]
4596fd: mov rdi, r14
459700: call 0x401130
459705: test eax, eax
459707: je 0x459458
45970d: jns 0x4596f0
45970f: mov r13, qword ptr [r13 + 0x20]
459713: test r13, r13
459716: jne 0x4596f9
459718: mov r13, qword ptr [rbp - 0x98]
45971f: lea rdx, [r15 + 1]
459723: sub rdx, r14
459726: lea rdi, [rdx + 0x10]
45972a: mov qword ptr [rbp - 0x98], rdx
459731: call 0x426410
459736: mov rdx, qword ptr [rbp - 0x98]
45973d: test rax, rax
459740: mov r9, rax
459743: je 0x459458
459749: lea rdi, [r9 + 0x10]
45974d: mov rsi, r14
459750: mov qword ptr [rbp - 0x98], r9
459757: sub r13, r14
45975a: call 0x401060
45975f: mov r9, qword ptr [rbp - 0x98]
459766: lea rdx, [rip - 0x20ad]
45976d: lea rsi, [rip + 0x6a144]
459774: mov qword ptr [r9], rax
459777: add rax, r13
45977a: mov rdi, r9
45977d: mov qword ptr [r9 + 8], rax
459781: call 0x451e70
459786: mov r9, qword ptr [rbp - 0x98]
45978d: test rax, rax
459790: je 0x45979b
459792: cmp r9, qword ptr [rax]
459795: je 0x459458
45979b: mov rdi, r9
45979e: call 0x426a00
4597a3: jmp 0x459458
4597a8: nop dword ptr [rax + rax]
4597b0: cmp word ptr [r13 + 4], 0x656c
4597b7: jne 0x459458
4597bd: mov ecx, dword ptr [rip + 0x69615]
4597c3: mov rdx, qword ptr [rbp - 0x88]
4597ca: mov rdi, r14
4597cd: mov rsi, qword ptr [rbp - 0x80]
4597d1: lea eax, [rcx + 1]
4597d4: mov dword ptr [rip + 0x695fe], eax
4597da: call 0x458e70
4597df: jmp 0x459458
4597e4: nop dword ptr [rax]
4597e8: mov rbx, qword ptr [rbx + 0x20]
4597ec: jmp 0x45952a
4597f1: nop dword ptr [rax]
4597f8: xor edi, edi
4597fa: jmp 0x459467
4597ff: lea r14, [rbp - 0x50]
459803: jmp 0x45949e
459808: call 0x4547a0
45980d: nop dword ptr [rax]
459810: endbr64 
459814: cmp qword ptr [rip + 0x666e4], 0
45981c: je 0x459838
45981e: lea rsi, [rip - 0x5f5]
459825: lea rdi, [rip + 0x695b0]
45982c: jmp 0
459831: nop dword ptr [rax]
459838: mov eax, dword ptr [rip + 0x6959e]
45983e: test eax, eax
459840: je 0x459848
459842: ret 
459843: nop dword ptr [rax + rax]
459848: sub rsp, 8
45984c: call 0x459230
459851: or dword ptr [rip + 0x69584], 2
459858: add rsp, 8
45985c: ret 
45985d: nop dword ptr [rax]
459860: endbr64 
459864: mov rax, rdi
459867: mov ecx, 0x10
45986c: mov rdx, rsi
45986f: lea rdi, [rip + 0x403e1]
459876: mov rsi, rax
459879: repe cmpsb byte ptr [rsi], byte ptr [rdi]
45987b: seta cl
45987e: sbb cl, 0
459881: test cl, cl
459883: je 0x459a00
459889: mov ecx, 0x10
45988e: lea rdi, [rip + 0x403d2]
459895: mov rsi, rax
459898: repe cmpsb byte ptr [rsi], byte ptr [rdi]
45989a: seta cl
45989d: sbb cl, 0
4598a0: test cl, cl
4598a2: je 0x459a63
4598a8: mov ecx, 0x12
4598ad: lea rdi, [rip + 0x403cd]
4598b4: mov rsi, rax
4598b7: repe cmpsb byte ptr [rsi], byte ptr [rdi]
4598b9: seta cl
4598bc: sbb cl, 0
4598bf: test cl, cl
4598c1: je 0x459a6a
4598c7: mov ecx, 0x12
4598cc: lea rdi, [rip + 0x403c0]
4598d3: mov rsi, rax
4598d6: repe cmpsb byte ptr [rsi], byte ptr [rdi]
4598d8: seta cl
4598db: sbb cl, 0
4598de: test cl, cl
4598e0: je 0x459a71
4598e6: mov ecx, 0x10
4598eb: lea rdi, [rip + 0x403c3]
4598f2: mov rsi, rax
4598f5: repe cmpsb byte ptr [rsi], byte ptr [rdi]
4598f7: seta cl
4598fa: sbb cl, 0
4598fd: test cl, cl
4598ff: je 0x459a78
459905: mov ecx, 0x10
45990a: lea rdi, [rip + 0x403b4]
459911: mov rsi, rax
459914: repe cmpsb byte ptr [rsi], byte ptr [rdi]
459916: seta cl
459919: sbb cl, 0
45991c: test cl, cl
45991e: je 0x459a7f
459924: mov ecx, 0x10
459929: lea rdi, [rip + 0x403b5]
459930: mov rsi, rax
459933: repe cmpsb byte ptr [rsi], byte ptr [rdi]
459935: seta cl
459938: sbb cl, 0
45993b: test cl, cl
45993d: je 0x459a89
459943: mov ecx, 0x10
459948: lea rdi, [rip + 0x403a6]
45994f: mov rsi, rax
459952: repe cmpsb byte ptr [rsi], byte ptr [rdi]
459954: seta cl
459957: sbb cl, 0
45995a: test cl, cl
45995c: je 0x459a93
459962: mov ecx, 0x11
459967: lea rdi, [rip + 0x403a8]
45996e: mov rsi, rax
459971: repe cmpsb byte ptr [rsi], byte ptr [rdi]
459973: seta cl
459976: sbb cl, 0
459979: test cl, cl
45997b: je 0x459a9d
459981: mov ecx, 0x11
459986: lea rdi, [rip + 0x4039a]
45998d: mov rsi, rax
459990: repe cmpsb byte ptr [rsi], byte ptr [rdi]
459992: seta cl
459995: sbb cl, 0
459998: test cl, cl
45999a: je 0x459aa7
4599a0: mov ecx, 0x17
4599a5: lea rdi, [rip + 0x40399]
4599ac: mov rsi, rax
4599af: repe cmpsb byte ptr [rsi], byte ptr [rdi]
4599b1: seta cl
4599b4: sbb cl, 0
4599b7: test cl, cl
4599b9: je 0x459ab1
4599bf: mov rsi, rax
4599c2: mov ecx, 0x17
4599c7: lea rdi, [rip + 0x4038e]
4599ce: repe cmpsb byte ptr [rsi], byte ptr [rdi]
4599d0: seta al
4599d3: sbb al, 0
4599d5: test al, al
4599d7: je 0x459abb
4599dd: sub rsp, 8
4599e1: lea rcx, [rip + 0x40838]
4599e8: mov edx, 0x46
4599ed: lea rsi, [rip + 0x407ec]
4599f4: lea rdi, [rip + 0x407f5]
4599fb: call 0x4032a0
459a00: xor eax, eax
459a02: shl rax, 5
459a06: pxor xmm0, xmm0
459a0a: mov rcx, rax
459a0d: lea rax, [rip + 0x660b4]
459a14: movdqu xmm2, xmmword ptr [rax + rcx]
459a19: sub rax, 8
459a1d: movups xmmword ptr [rdx + 0x38], xmm0
459a21: add rax, rcx
459a24: movups xmmword ptr [rdx], xmm0
459a27: movsx esi, byte ptr [rax + 0x18]
459a2b: movsx ecx, byte ptr [rax + 0x19]
459a2f: mov dword ptr [rdx + 0x58], 0
459a36: movups xmmword ptr [rdx + 0x28], xmm2
459a3a: movd xmm0, esi
459a3e: movsx esi, byte ptr [rax + 0x1a]
459a42: movsx eax, byte ptr [rax + 0x1b]
459a46: movd xmm4, ecx
459a4a: punpckldq xmm0, xmm4
459a4e: movd xmm1, esi
459a52: movd xmm3, eax
459a56: punpckldq xmm1, xmm3
459a5a: punpcklqdq xmm0, xmm1
459a5e: movups xmmword ptr [rdx + 0x48], xmm0
459a62: ret 
459a63: mov eax, 1
459a68: jmp 0x459a02
459a6a: mov eax, 2
459a6f: jmp 0x459a02
459a71: mov eax, 3
459a76: jmp 0x459a02
459a78: mov eax, 4
459a7d: jmp 0x459a02
459a7f: mov eax, 5
459a84: jmp 0x459a02
459a89: mov eax, 6
459a8e: jmp 0x459a02
459a93: mov eax, 7
459a98: jmp 0x459a02
459a9d: mov eax, 8
459aa2: jmp 0x459a02
459aa7: mov eax, 9
459aac: jmp 0x459a02
459ab1: mov eax, 0xa
459ab6: jmp 0x459a02
459abb: mov eax, 0xb
459ac0: jmp 0x459a02
459ac5: nop word ptr cs:[rax + rax]
459acf: nop 
459ad0: endbr64 
459ad4: movzx eax, sil
459ad8: test sil, sil
459adb: mov edx, 0xffffffff
459ae0: cmovs eax, edx
459ae3: ret 
459ae4: nop word ptr cs:[rax + rax]
459aef: nop 
459af0: endbr64 
459af4: push r15
459af6: mov r10, rdx
459af9: mov r11, rcx
459afc: push r14
459afe: push r13
459b00: push r12
459b02: mov r12, rsi
459b05: push rbp
459b06: push rbx
459b07: sub rsp, 0x68
459b0b: mov qword ptr [rsp + 0x28], r8
459b10: mov ebx, dword ptr [rsp + 0xa0]
459b17: mov rax, qword ptr fs:[0x28]
459b20: mov qword ptr [rsp + 0x58], rax
459b25: xor eax, eax
459b27: lea rax, [rdi + 0x68]
459b2b: mov qword ptr [rsp + 0x18], 0
459b34: mov qword ptr [rsp + 0x48], rax
459b39: lea rax, [rsi + 0x30]
459b3d: mov qword ptr [rsp + 0x40], rax
459b42: test byte ptr [rsi + 0x10], 1
459b46: jne 0x459b70
459b48: mov rax, qword ptr [rdi + 0x90]
459b4f: cmp qword ptr [rdi + 0x68], 0
459b54: mov qword ptr [rsp + 0x18], rax
459b59: je 0x459b70
459b5b: mov r15, rax
459b5e: ror r15, 0x11
459b62: xor r15, qword ptr fs:[0x30]
459b6b: mov qword ptr [rsp + 0x18], r15
459b70: test ebx, ebx
459b72: jne 0x459eff
459b78: mov rdi, qword ptr [rsp + 0x28]
459b7d: mov esi, dword ptr [rsp + 0xa8]
459b84: test rdi, rdi
459b87: mov rax, rdi
459b8a: cmove rax, r12
459b8e: mov rbx, qword ptr [rax]
459b91: mov rax, qword ptr [r12 + 8]
459b96: mov qword ptr [rsp + 0x10], rax
459b9b: test esi, esi
459b9d: jne 0x459d30
459ba3: mov qword ptr [rsp + 8], r10
459ba8: mov r15, r9
459bab: nop dword ptr [rax + rax]
459bb0: mov qword ptr [rsp + 0x20], 0
459bb9: mov rax, qword ptr [rsp + 8]
459bbe: mov rbp, qword ptr [rax]
459bc1: test r15, r15
459bc4: je 0x459bce
459bc6: mov rax, qword ptr [r15]
459bc9: mov qword ptr [rsp + 0x20], rax
459bce: mov rcx, qword ptr [rsp + 0x10]
459bd3: mov r10, r11
459bd6: sub r10, rbp
459bd9: sub rcx, rbx
459bdc: cmp rcx, r10
459bdf: mov rax, rcx
459be2: cmovg rax, r10
459be6: test rax, rax
459be9: lea rcx, [rax + 3]
459bed: cmovns rcx, rax
459bf1: sar rcx, 2
459bf5: je 0x459de8
459bfb: xor eax, eax
459bfd: nop dword ptr [rax]
459c00: mov edx, dword ptr [rbp + rax*4]
459c04: bswap edx
459c06: mov dword ptr [rbx + rax*4], edx
459c09: add rax, 1
459c0d: cmp rcx, rax
459c10: jne 0x459c00
459c12: shl rcx, 2
459c16: lea rax, [rbp + rcx]
459c1b: lea r14, [rbx + rcx]
459c1f: mov rsi, qword ptr [rsp + 8]
459c24: mov r13d, 4
459c2a: mov qword ptr [rsi], rax
459c2d: cmp r11, rax
459c30: je 0x459c46
459c32: lea rax, [r14 + 4]
459c36: cmp qword ptr [rsp + 0x10], rax
459c3b: sbb r13d, r13d
459c3e: and r13d, 0xfffffffe
459c42: add r13d, 7
459c46: cmp qword ptr [rsp + 0x28], 0
459c4c: jne 0x459df8
459c52: add dword ptr [r12 + 0x14], 1
459c58: test byte ptr [r12 + 0x10], 1
459c5e: jne 0x459e05
459c64: mov qword ptr [rsp + 0x38], r10
459c69: cmp r14, rbx
459c6c: jbe 0x459ce6
459c6e: mov rdi, qword ptr [rsp + 0x18]
459c73: mov rax, qword ptr [r12]
459c77: mov qword ptr [rsp + 0x30], r11
459c7c: mov qword ptr [rsp + 0x50], rax
459c81: call 0x456100
459c86: lea rdx, [rsp + 0x50]
459c8b: xor r8d, r8d
459c8e: mov rcx, r14
459c91: mov esi, dword ptr [rsp + 0xa8]
459c98: mov r9, r15
459c9b: push rsi
459c9c: push 0
459c9e: mov rsi, qword ptr [rsp + 0x50]
459ca3: mov rdi, qword ptr [rsp + 0x58]
459ca8: mov rax, qword ptr [rsp + 0x28]
459cad: call rax
459caf: pop rdx
459cb0: pop rcx
459cb1: cmp eax, 4
459cb4: mov r11, qword ptr [rsp + 0x30]
459cb9: je 0x459ce0
459cbb: mov rsi, qword ptr [rsp + 0x50]
459cc0: mov r10, qword ptr [rsp + 0x38]
459cc5: cmp rsi, r14
459cc8: jne 0x459e13
459cce: test eax, eax
459cd0: jne 0x45a02c
459cd6: mov rbx, qword ptr [r12]
459cda: jmp 0x459bb0
459cdf: nop 
459ce0: cmp r13d, 5
459ce4: je 0x459cd6
459ce6: mov r10, qword ptr [rsp + 8]
459ceb: mov eax, dword ptr [rsp + 0xa8]
459cf2: test eax, eax
459cf4: je 0x459d00
459cf6: cmp r13d, 7
459cfa: je 0x459f65
459d00: mov rax, qword ptr [rsp + 0x58]
459d05: xor rax, qword ptr fs:[0x28]
459d0e: jne 0x45a058
459d14: add rsp, 0x68
459d18: mov eax, r13d
459d1b: pop rbx
459d1c: pop rbp
459d1d: pop r12
459d1f: pop r13
459d21: pop r14
459d23: pop r15
459d25: ret 
459d26: nop word ptr cs:[rax + rax]
459d30: mov rax, qword ptr [r12 + 0x20]
459d35: mov ecx, dword ptr [rax]
459d37: mov edx, ecx
459d39: and edx, 7
459d3c: je 0x459ba3
459d42: test rdi, rdi
459d45: jne 0x45a039
459d4b: mov rsi, qword ptr [r10]
459d4e: movsxd rdx, edx
459d51: cmp r11, rsi
459d54: jbe 0x459ee3
459d5a: test cl, 4
459d5d: jne 0x459db2
459d5f: lea rdi, [rsi + 1]
459d63: lea r8, [rdx + 1]
459d67: mov qword ptr [r10], rdi
459d6a: movzx ebp, byte ptr [rsi]
459d6d: mov byte ptr [rax + rdx + 4], bpl
459d72: cmp r11, rdi
459d75: jbe 0x459ee0
459d7b: cmp r8, 4
459d7f: je 0x459db2
459d81: lea rdi, [rsi + 2]
459d85: add rdx, 2
459d89: mov qword ptr [r10], rdi
459d8c: movzx ebp, byte ptr [rsi + 1]
459d90: mov byte ptr [rax + r8 + 4], bpl
459d95: cmp r11, rdi
459d98: jbe 0x459ee3
459d9e: cmp rdx, 3
459da2: jne 0x459db2
459da4: lea rdx, [rsi + 3]
459da8: mov qword ptr [r10], rdx
459dab: movzx edx, byte ptr [rsi + 2]
459daf: mov byte ptr [rax + 7], dl
459db2: movzx edx, byte ptr [rax + 7]
459db6: mov qword ptr [rsp + 8], r10
459dbb: add rbx, 4
459dbf: mov r15, r9
459dc2: mov byte ptr [rbx - 4], dl
459dc5: movzx edx, byte ptr [rax + 6]
459dc9: mov byte ptr [rbx - 3], dl
459dcc: movzx edx, byte ptr [rax + 5]
459dd0: mov byte ptr [rbx - 2], dl
459dd3: movzx edx, byte ptr [rax + 4]
459dd7: mov byte ptr [rbx - 1], dl
459dda: and dword ptr [rax], 0xfffffff8
459ddd: jmp 0x459bb0
459de2: nop word ptr [rax + rax]
459de8: mov r14, rbx
459deb: mov rax, rbp
459dee: jmp 0x459c1f
459df3: nop dword ptr [rax + rax]
459df8: mov rax, qword ptr [rsp + 0x28]
459dfd: mov qword ptr [rax], r14
459e00: jmp 0x459d00
459e05: mov qword ptr [r12], r14
459e09: mov r10, qword ptr [rsp + 8]
459e0e: jmp 0x459ceb
459e13: xor edx, edx
459e15: test r15, r15
459e18: je 0x459e1d
459e1a: mov rdx, qword ptr [r15]
459e1d: cmp rdx, qword ptr [rsp + 0x20]
459e22: je 0x459ea3
459e24: mov rdi, rsi
459e27: mov r14, r10
459e2a: sub rdi, rbx
459e2d: cmp rdi, r10
459e30: cmovle r14, rdi
459e34: test r14, r14
459e37: lea rdi, [r14 + 3]
459e3b: cmovns rdi, r14
459e3f: sar rdi, 2
459e43: je 0x45a020
459e49: xor edx, edx
459e4b: nop dword ptr [rax + rax]
459e50: mov ecx, dword ptr [rbp + rdx*4]
459e54: bswap ecx
459e56: mov dword ptr [rbx + rdx*4], ecx
459e59: add rdx, 1
459e5d: cmp rdi, rdx
459e60: jne 0x459e50
459e62: lea rdx, [rdi*4]
459e6a: add rbp, rdx
459e6d: add rdx, rbx
459e70: mov rdi, qword ptr [rsp + 8]
459e75: mov qword ptr [rdi], rbp
459e78: cmp r11, rbp
459e7b: je 0x459eb6
459e7d: lea rcx, [rdx + 4]
459e81: cmp rsi, rcx
459e84: jae 0x459eb6
459e86: cmp rsi, rdx
459e89: jne 0x45a07c
459e8f: cmp rsi, rbx
459e92: jne 0x459cce
459e98: sub dword ptr [r12 + 0x14], 1
459e9e: jmp 0x459cce
459ea3: mov rcx, r14
459ea6: sub rcx, rsi
459ea9: mov rsi, qword ptr [rsp + 8]
459eae: sub qword ptr [rsi], rcx
459eb1: jmp 0x459cce
459eb6: cmp rsi, rdx
459eb9: jne 0x45a07c
459ebf: lea rcx, [rip + 0x407ba]
459ec6: mov edx, 0x2eb
459ecb: lea rsi, [rip + 0x40368]
459ed2: lea rdi, [rip + 0x40407]
459ed9: call 0x4032a0
459ede: nop 
459ee0: mov rdx, r8
459ee3: cmp rdx, 3
459ee7: ja 0x459db2
459eed: and ecx, 0xfffffff8
459ef0: mov r13d, 7
459ef6: or edx, ecx
459ef8: mov dword ptr [rax], edx
459efa: jmp 0x459d00
459eff: cmp qword ptr [rsp + 0x28], 0
459f05: jne 0x45a09b
459f0b: mov rax, qword ptr [r12 + 0x20]
459f10: xor r13d, r13d
459f13: mov qword ptr [rax], 0
459f1a: test byte ptr [r12 + 0x10], 1
459f20: jne 0x459d00
459f26: mov r14, qword ptr [rsp + 0x18]
459f2b: mov qword ptr [rsp + 8], r9
459f30: mov rdi, r14
459f33: call 0x456100
459f38: mov eax, dword ptr [rsp + 0xa8]
459f3f: xor ecx, ecx
459f41: xor edx, edx
459f43: xor r8d, r8d
459f46: push rax
459f47: push rbx
459f48: mov r9, qword ptr [rsp + 0x18]
459f4d: mov rsi, qword ptr [rsp + 0x50]
459f52: mov rdi, qword ptr [rsp + 0x58]
459f57: call r14
459f5a: pop rdi
459f5b: pop r8
459f5d: mov r13d, eax
459f60: jmp 0x459d00
459f65: mov rax, qword ptr [r10]
459f68: mov rdx, r11
459f6b: sub rdx, rax
459f6e: cmp rdx, 3
459f72: jg 0x45a05d
459f78: mov rdx, qword ptr [r12 + 0x20]
459f7d: cmp rax, r11
459f80: jae 0x45a028
459f86: lea rcx, [rax + 1]
459f8a: mov qword ptr [r10], rcx
459f8d: movzx esi, byte ptr [rax]
459f90: mov byte ptr [rdx + 4], sil
459f94: cmp r11, rcx
459f97: jbe 0x45a005
459f99: lea rcx, [rax + 2]
459f9d: mov qword ptr [r10], rcx
459fa0: movzx esi, byte ptr [rax + 1]
459fa4: mov byte ptr [rdx + 5], sil
459fa8: cmp r11, rcx
459fab: jbe 0x45a005
459fad: lea rcx, [rax + 3]
459fb1: mov qword ptr [r10], rcx
459fb4: movzx esi, byte ptr [rax + 2]
459fb8: mov byte ptr [rdx + 6], sil
459fbc: cmp r11, rcx
459fbf: jbe 0x45a005
459fc1: lea rcx, [rax + 4]
459fc5: mov qword ptr [r10], rcx
459fc8: movzx esi, byte ptr [rax + 3]
459fcc: mov byte ptr [rdx + 7], sil
459fd0: cmp r11, rcx
459fd3: jbe 0x45a005
459fd5: lea rcx, [rax + 5]
459fd9: mov qword ptr [r10], rcx
459fdc: movzx esi, byte ptr [rax + 4]
459fe0: mov byte ptr [rdx + 8], sil
459fe4: cmp r11, rcx
459fe7: jbe 0x45a005
459fe9: lea rsi, [rdx + 9]
459fed: add rcx, 1
459ff1: add rsi, 1
459ff5: mov qword ptr [r10], rcx
459ff8: movzx edi, byte ptr [rcx - 1]
459ffc: mov byte ptr [rsi - 1], dil
45a000: cmp rcx, r11
45a003: jne 0x459fed
45a005: mov esi, r11d
45a008: sub esi, eax
45a00a: mov eax, esi
45a00c: mov ecx, dword ptr [rdx]
45a00e: mov r13d, 7
45a014: and ecx, 0xfffffff8
45a017: or eax, ecx
45a019: mov dword ptr [rdx], eax
45a01b: jmp 0x459d00
45a020: mov rdx, rbx
45a023: jmp 0x459e70
45a028: xor eax, eax
45a02a: jmp 0x45a00c
45a02c: mov r10, qword ptr [rsp + 8]
45a031: mov r13d, eax
45a034: jmp 0x459ceb
45a039: lea rcx, [rip + 0x40640]
45a040: mov edx, 0x234
45a045: lea rsi, [rip + 0x401ee]
45a04c: lea rdi, [rip + 0x401fb]
45a053: call 0x4032a0
45a058: call 0x4547a0
45a05d: lea rcx, [rip + 0x4061c]
45a064: mov edx, 0x31e
45a069: lea rsi, [rip + 0x401ca]
45a070: lea rdi, [rip + 0x401fc]
45a077: call 0x4032a0
45a07c: lea rcx, [rip + 0x405fd]
45a083: mov edx, 0x2ea
45a088: lea rsi, [rip + 0x401ab]
45a08f: lea rdi, [rip + 0x401cc]
45a096: call 0x4032a0
45a09b: lea rcx, [rip + 0x405de]
45a0a2: mov edx, 0x1a4
45a0a7: lea rsi, [rip + 0x4018c]
45a0ae: lea rdi, [rip + 0x40199]
45a0b5: call 0x4032a0
45a0ba: nop word ptr [rax + rax]
45a0c0: endbr64 
45a0c4: push r15
45a0c6: mov r11, rdx
45a0c9: push r14
45a0cb: push r13
45a0cd: push r12
45a0cf: mov r12, rsi
45a0d2: push rbp
45a0d3: push rbx
45a0d4: mov rbx, rcx
45a0d7: sub rsp, 0x88
45a0de: mov qword ptr [rsp + 0x18], r8
45a0e3: mov ebp, dword ptr [rsp + 0xc0]
45a0ea: mov rax, qword ptr fs:[0x28]
45a0f3: mov qword ptr [rsp + 0x78], rax
45a0f8: xor eax, eax
45a0fa: lea rax, [rdi + 0x68]
45a0fe: mov qword ptr [rsp + 0x10], 0
45a107: mov qword ptr [rsp + 0x50], rax
45a10c: lea rax, [rsi + 0x30]
45a110: mov qword ptr [rsp + 0x48], rax
45a115: mov eax, dword ptr [rsi + 0x10]
45a118: test al, 1
45a11a: jne 0x45a144
45a11c: mov rsi, qword ptr [rdi + 0x90]
45a123: cmp qword ptr [rdi + 0x68], 0
45a128: mov qword ptr [rsp + 0x10], rsi
45a12d: je 0x45a144
45a12f: mov rdx, rsi
45a132: ror rdx, 0x11
45a136: xor rdx, qword ptr fs:[0x30]
45a13f: mov qword ptr [rsp + 0x10], rdx
45a144: test ebp, ebp
45a146: jne 0x45a664
45a14c: mov rdi, qword ptr [rsp + 0x18]
45a151: lea rcx, [rsp + 0x68]
45a156: mov rbp, qword ptr [r12 + 8]
45a15b: mov esi, dword ptr [rsp + 0xc8]
45a162: test rdi, rdi
45a165: mov rdx, rdi
45a168: cmove rdx, r12
45a16c: test r9, r9
45a16f: mov r14, qword ptr [rdx]
45a172: mov edx, 0
45a177: mov qword ptr [rsp + 0x68], 0
45a180: cmovne rdx, rcx
45a184: mov qword ptr [rsp + 0x38], rdx
45a189: test esi, esi
45a18b: jne 0x45a498
45a191: lea rdi, [rsp + 0x70]
45a196: xor r10d, r10d
45a199: mov qword ptr [rsp + 0x58], rdi
45a19e: mov rdi, qword ptr [r11]
45a1a1: mov qword ptr [rsp + 8], rdi
45a1a6: test r9, r9
45a1a9: je 0x45a1ae
45a1ab: add r10, qword ptr [r9]
45a1ae: mov rdi, qword ptr [rsp + 8]
45a1b3: lea r13, [rdi + 4]
45a1b7: cmp rbx, r13
45a1ba: jb 0x45a2f3
45a1c0: lea rcx, [r14 + 4]
45a1c4: cmp rbp, rcx
45a1c7: jb 0x45a2f3
45a1cd: test al, 2
45a1cf: jne 0x45a368
45a1d5: cmp qword ptr [rsp + 0x38], 0
45a1db: je 0x45a6c9
45a1e1: mov rax, r13
45a1e4: jmp 0x45a213
45a1e6: nop word ptr cs:[rax + rax]
45a1f0: mov dword ptr [rcx - 4], edx
45a1f3: lea rdx, [rax + 4]
45a1f7: cmp rdx, rbx
45a1fa: ja 0x45a300
45a200: lea rsi, [rcx + 4]
45a204: cmp rbp, rsi
45a207: jb 0x45a300
45a20d: mov rcx, rsi
45a210: mov rax, rdx
45a213: mov edx, dword ptr [rax - 4]
45a216: lea rsi, [rcx - 4]
45a21a: lea rdi, [rax - 4]
45a21e: bswap edx
45a220: test edx, edx
45a222: jns 0x45a1f0
45a224: mov qword ptr [r11], rdi
45a227: mov rcx, rsi
45a22a: mov r15d, 6
45a230: cmp qword ptr [rsp + 0x18], 0
45a236: jne 0x45a330
45a23c: add dword ptr [r12 + 0x14], 1
45a242: test byte ptr [r12 + 0x10], 1
45a248: jne 0x45a56f
45a24e: cmp r14, rcx
45a251: mov qword ptr [rsp + 0x28], r9
45a256: mov qword ptr [rsp + 0x40], r10
45a25b: mov qword ptr [rsp + 0x20], rcx
45a260: jae 0x45a3ca
45a266: mov rdi, qword ptr [rsp + 0x10]
45a26b: mov rax, qword ptr [r12]
45a26f: mov qword ptr [rsp + 0x30], r11
45a274: mov qword ptr [rsp + 0x70], rax
45a279: call 0x456100
45a27e: mov esi, dword ptr [rsp + 0xc8]
45a285: xor r8d, r8d
45a288: push rsi
45a289: push 0
45a28b: mov r9, qword ptr [rsp + 0x38]
45a290: mov rcx, qword ptr [rsp + 0x30]
45a295: mov rdx, qword ptr [rsp + 0x68]
45a29a: mov rsi, qword ptr [rsp + 0x58]
45a29f: mov rdi, qword ptr [rsp + 0x60]
45a2a4: mov rax, qword ptr [rsp + 0x20]
45a2a9: call rax
45a2ab: pop rdx
45a2ac: pop rcx
45a2ad: cmp eax, 4
45a2b0: mov r9, qword ptr [rsp + 0x28]
45a2b5: mov r11, qword ptr [rsp + 0x30]
45a2ba: je 0x45a3c0
45a2c0: mov rdx, qword ptr [rsp + 0x70]
45a2c5: mov rcx, qword ptr [rsp + 0x20]
45a2ca: mov r10, qword ptr [rsp + 0x40]
45a2cf: cmp rdx, rcx
45a2d2: jne 0x45a580
45a2d8: test eax, eax
45a2da: jne 0x45a938
45a2e0: mov r14, qword ptr [r12]
45a2e4: mov r10, qword ptr [rsp + 0x68]
45a2e9: mov eax, dword ptr [r12 + 0x10]
45a2ee: jmp 0x45a19e
45a2f3: mov rax, rdi
45a2f6: mov rcx, r14
45a2f9: nop dword ptr [rax]
45a300: mov qword ptr [r11], rax
45a303: mov r15d, 4
45a309: cmp rax, rbx
45a30c: je 0x45a230
45a312: lea rax, [rcx + 4]
45a316: cmp rbp, rax
45a319: sbb r15d, r15d
45a31c: and r15d, 0xfffffffe
45a320: add r15d, 7
45a324: cmp qword ptr [rsp + 0x18], 0
45a32a: je 0x45a23c
45a330: mov rax, qword ptr [rsp + 0x18]
45a335: mov qword ptr [rax], rcx
45a338: mov rax, qword ptr [rsp + 0x78]
45a33d: xor rax, qword ptr fs:[0x28]
45a346: jne 0x45a933
45a34c: add rsp, 0x88
45a353: mov eax, r15d
45a356: pop rbx
45a357: pop rbp
45a358: pop r12
45a35a: pop r13
45a35c: pop r14
45a35e: pop r15
45a360: ret 
45a361: nop dword ptr [rax]
45a368: cmp qword ptr [rsp + 0x38], 0
45a36e: je 0x45a712
45a374: mov rax, r13
45a377: mov rsi, r14
45a37a: jmp 0x45a39a
45a37c: nop dword ptr [rax]
45a380: mov dword ptr [rsi], edx
45a382: lea rdx, [rax + 4]
45a386: mov rsi, rcx
45a389: cmp rbx, rdx
45a38c: jb 0x45a3b8
45a38e: lea rcx, [rsi + 4]
45a392: cmp rbp, rcx
45a395: jb 0x45a3b8
45a397: mov rax, rdx
45a39a: mov edx, dword ptr [rax - 4]
45a39d: bswap edx
45a39f: test edx, edx
45a3a1: jns 0x45a380
45a3a3: mov rdi, qword ptr [rsp + 0x38]
45a3a8: lea rdx, [rax + 4]
45a3ac: add qword ptr [rdi], 1
45a3b0: cmp rbx, rdx
45a3b3: jae 0x45a38e
45a3b5: nop dword ptr [rax]
45a3b8: mov rcx, rsi
45a3bb: jmp 0x45a300
45a3c0: cmp r15d, 5
45a3c4: je 0x45a2e0
45a3ca: cmp r15d, 7
45a3ce: jne 0x45a338
45a3d4: mov eax, dword ptr [rsp + 0xc8]
45a3db: test eax, eax
45a3dd: je 0x45a338
45a3e3: mov rax, qword ptr [r11]
45a3e6: mov rdx, rbx
45a3e9: sub rdx, rax
45a3ec: cmp rdx, 3
45a3f0: jg 0x45a878
45a3f6: mov rdx, qword ptr [r12 + 0x20]
45a3fb: cmp rax, rbx
45a3fe: jae 0x45a869
45a404: lea rcx, [rax + 1]
45a408: mov qword ptr [r11], rcx
45a40b: movzx esi, byte ptr [rax]
45a40e: mov byte ptr [rdx + 4], sil
45a412: cmp rbx, rcx
45a415: jbe 0x45a483
45a417: lea rcx, [rax + 2]
45a41b: mov qword ptr [r11], rcx
45a41e: movzx esi, byte ptr [rax + 1]
45a422: mov byte ptr [rdx + 5], sil
45a426: cmp rbx, rcx
45a429: jbe 0x45a483
45a42b: lea rcx, [rax + 3]
45a42f: mov qword ptr [r11], rcx
45a432: movzx esi, byte ptr [rax + 2]
45a436: mov byte ptr [rdx + 6], sil
45a43a: cmp rbx, rcx
45a43d: jbe 0x45a483
45a43f: lea rcx, [rax + 4]
45a443: mov qword ptr [r11], rcx
45a446: movzx esi, byte ptr [rax + 3]
45a44a: mov byte ptr [rdx + 7], sil
45a44e: cmp rcx, rbx
45a451: jae 0x45a483
45a453: lea rcx, [rax + 5]
45a457: mov qword ptr [r11], rcx
45a45a: movzx esi, byte ptr [rax + 4]
45a45e: mov byte ptr [rdx + 8], sil
45a462: cmp rbx, rcx
45a465: jbe 0x45a483
45a467: lea rsi, [rdx + 9]
45a46b: add rcx, 1
45a46f: add rsi, 1
45a473: mov qword ptr [r11], rcx
45a476: movzx edi, byte ptr [rcx - 1]
45a47a: mov byte ptr [rsi - 1], dil
45a47e: cmp rcx, rbx
45a481: jne 0x45a46b
45a483: sub ebx, eax
45a485: mov eax, dword ptr [rdx]
45a487: and eax, 0xfffffff8
45a48a: or ebx, eax
45a48c: mov dword ptr [rdx], ebx
45a48e: jmp 0x45a338
45a493: nop dword ptr [rax + rax]
45a498: mov rdx, qword ptr [r12 + 0x20]
45a49d: mov r10d, dword ptr [rdx]
45a4a0: mov ecx, r10d
45a4a3: and ecx, 7
45a4a6: je 0x45a191
45a4ac: test rdi, rdi
45a4af: jne 0x45a940
45a4b5: mov rsi, qword ptr [r11]
45a4b8: movsxd r13, ecx
45a4bb: cmp rsi, rbx
45a4be: jae 0x45a827
45a4c4: test r10b, 4
45a4c8: jne 0x45a832
45a4ce: lea rcx, [rsi + 1]
45a4d2: lea rdi, [r13 + 1]
45a4d6: mov qword ptr [r11], rcx
45a4d9: movzx r8d, byte ptr [rsi]
45a4dd: mov byte ptr [rdx + r13 + 4], r8b
45a4e2: cmp rbx, rcx
45a4e5: jbe 0x45a646
45a4eb: cmp rdi, 4
45a4ef: je 0x45a52d
45a4f1: lea rcx, [rsi + 2]
45a4f5: lea r8, [r13 + 2]
45a4f9: mov qword ptr [r11], rcx
45a4fc: movzx r15d, byte ptr [rsi + 1]
45a501: mov byte ptr [rdx + rdi + 4], r15b
45a506: cmp rbx, rcx
45a509: jbe 0x45a643
45a50f: cmp r8, 3
45a513: jne 0x45a83d
45a519: lea rcx, [rsi + 3]
45a51d: mov edi, 4
45a522: mov qword ptr [r11], rcx
45a525: movzx esi, byte ptr [rsi + 2]
45a529: mov byte ptr [rdx + 7], sil
45a52d: cmp byte ptr [rdx + 4], 0x80
45a531: ja 0x45a808
45a537: movzx eax, byte ptr [rdx + 7]
45a53b: add r14, 4
45a53f: mov byte ptr [r14 - 4], al
45a543: movzx eax, byte ptr [rdx + 6]
45a547: mov byte ptr [r14 - 3], al
45a54b: movzx eax, byte ptr [rdx + 5]
45a54f: mov byte ptr [r14 - 2], al
45a553: movzx eax, byte ptr [rdx + 4]
45a557: mov byte ptr [r14 - 1], al
45a55b: mov r10d, dword ptr [rdx]
45a55e: and r10d, 0xfffffff8
45a562: mov eax, dword ptr [r12 + 0x10]
45a567: mov dword ptr [rdx], r10d
45a56a: jmp 0x45a191
45a56f: mov qword ptr [r12], rcx
45a573: mov rax, qword ptr [rsp + 0x68]
45a578: add qword ptr [r9], rax
45a57b: jmp 0x45a3ca
45a580: xor esi, esi
45a582: test r9, r9
45a585: je 0x45a58a
45a587: mov rsi, qword ptr [r9]
45a58a: add rsi, qword ptr [rsp + 0x68]
45a58f: cmp r10, rsi
45a592: je 0x45a638
45a598: mov rdi, qword ptr [rsp + 8]
45a59d: mov esi, dword ptr [r12 + 0x10]
45a5a2: mov qword ptr [r11], rdi
45a5a5: cmp rbx, r13
45a5a8: jb 0x45a85e
45a5ae: lea rcx, [r14 + 4]
45a5b2: cmp rcx, rdx
45a5b5: ja 0x45a84f
45a5bb: and esi, 2
45a5be: jne 0x45a74e
45a5c4: cmp qword ptr [rsp + 0x38], 0
45a5ca: jne 0x45a5fb
45a5cc: jmp 0x45a8e0
45a5d1: nop dword ptr [rax]
45a5d8: lea rdi, [r13 + 4]
45a5dc: mov dword ptr [rcx - 4], esi
45a5df: cmp rbx, rdi
45a5e2: jb 0x45a795
45a5e8: lea rsi, [rcx + 4]
45a5ec: cmp rdx, rsi
45a5ef: jb 0x45a7e0
45a5f5: mov rcx, rsi
45a5f8: mov r13, rdi
45a5fb: mov esi, dword ptr [r13 - 4]
45a5ff: lea rdi, [rcx - 4]
45a603: lea r8, [r13 - 4]
45a607: bswap esi
45a609: test esi, esi
45a60b: jns 0x45a5d8
45a60d: mov qword ptr [r11], r8
45a610: cmp rdx, rdi
45a613: jne 0x45a7b7
45a619: lea rcx, [rip + 0x40040]
45a620: mov edx, 0x2eb
45a625: lea rsi, [rip + 0x3fc0e]
45a62c: lea rdi, [rip + 0x3fcad]
45a633: call 0x4032a0
45a638: sub rcx, rdx
45a63b: sub qword ptr [r11], rcx
45a63e: jmp 0x45a2d8
45a643: mov rdi, r8
45a646: cmp rdi, 3
45a64a: ja 0x45a52d
45a650: and r10d, 0xfffffff8
45a654: mov r15d, 7
45a65a: or edi, r10d
45a65d: mov dword ptr [rdx], edi
45a65f: jmp 0x45a338
45a664: cmp qword ptr [rsp + 0x18], 0
45a66a: jne 0x45a914
45a670: mov rax, qword ptr [r12 + 0x20]
45a675: xor r15d, r15d
45a678: mov qword ptr [rax], 0
45a67f: test byte ptr [r12 + 0x10], 1
45a685: jne 0x45a338
45a68b: mov rbx, qword ptr [rsp + 0x10]
45a690: mov qword ptr [rsp + 8], r9
45a695: mov rdi, rbx
45a698: call 0x456100
45a69d: mov eax, dword ptr [rsp + 0xc8]
45a6a4: xor ecx, ecx
45a6a6: xor edx, edx
45a6a8: xor r8d, r8d
45a6ab: push rax
45a6ac: push rbp
45a6ad: mov r9, qword ptr [rsp + 0x18]
45a6b2: mov rsi, qword ptr [rsp + 0x58]
45a6b7: mov rdi, qword ptr [rsp + 0x60]
45a6bc: call rbx
45a6be: pop rdi
45a6bf: pop r8
45a6c1: mov r15d, eax
45a6c4: jmp 0x45a338
45a6c9: mov rsi, rcx
45a6cc: mov rax, r13
45a6cf: jmp 0x45a6f8
45a6d1: nop dword ptr [rax]
45a6d8: mov dword ptr [rsi - 4], edx
45a6db: lea rdx, [rax + 4]
45a6df: cmp rbx, rdx
45a6e2: jb 0x45a300
45a6e8: add rsi, 4
45a6ec: cmp rbp, rsi
45a6ef: jb 0x45a300
45a6f5: mov rax, rdx
45a6f8: mov edx, dword ptr [rax - 4]
45a6fb: mov rcx, rsi
45a6fe: bswap edx
45a700: test edx, edx
45a702: jns 0x45a6d8
45a704: mov rcx, r14
45a707: mov r15d, 6
45a70d: jmp 0x45a230
45a712: mov rsi, rcx
45a715: mov rax, r13
45a718: jmp 0x45a740
45a71a: nop word ptr [rax + rax]
45a720: mov dword ptr [rsi - 4], edx
45a723: lea rdx, [rax + 4]
45a727: cmp rbx, rdx
45a72a: jb 0x45a300
45a730: add rsi, 4
45a734: cmp rbp, rsi
45a737: jb 0x45a300
45a73d: mov rax, rdx
45a740: mov edx, dword ptr [rax - 4]
45a743: mov rcx, rsi
45a746: bswap edx
45a748: test edx, edx
45a74a: jns 0x45a720
45a74c: jmp 0x45a704
45a74e: mov r8, qword ptr [rsp + 0x38]
45a753: test r8, r8
45a756: je 0x45a8a0
45a75c: mov rdi, r14
45a75f: jmp 0x45a782
45a761: nop dword ptr [rax]
45a768: mov dword ptr [rdi], esi
45a76a: mov rdi, rcx
45a76d: lea rsi, [r13 + 4]
45a771: cmp rbx, rsi
45a774: jb 0x45a792
45a776: lea rcx, [rdi + 4]
45a77a: cmp rdx, rcx
45a77d: jb 0x45a7e3
45a77f: mov r13, rsi
45a782: mov esi, dword ptr [r13 - 4]
45a786: bswap esi
45a788: test esi, esi
45a78a: jns 0x45a768
45a78c: add qword ptr [r8], 1
45a790: jmp 0x45a76d
45a792: mov rcx, rdi
45a795: mov qword ptr [r11], r13
45a798: cmp rbx, r13
45a79b: je 0x45a847
45a7a1: lea rsi, [rcx + 4]
45a7a5: cmp rdx, rsi
45a7a8: jb 0x45a870
45a7ae: cmp rcx, rdx
45a7b1: je 0x45a619
45a7b7: lea rcx, [rip + 0x3fea2]
45a7be: mov edx, 0x2ea
45a7c3: lea rsi, [rip + 0x3fa70]
45a7ca: lea rdi, [rip + 0x3fa91]
45a7d1: call 0x4032a0
45a7d6: nop word ptr cs:[rax + rax]
45a7e0: mov rdi, rcx
45a7e3: mov qword ptr [r11], r13
45a7e6: cmp rbx, r13
45a7e9: je 0x45a610
45a7ef: cmp rdx, rdi
45a7f2: jne 0x45a7b7
45a7f4: cmp rdx, r14
45a7f7: jne 0x45a2d8
45a7fd: sub dword ptr [r12 + 0x14], 1
45a803: jmp 0x45a2d8
45a808: test al, 2
45a80a: jne 0x45a55e
45a810: mov rax, r13
45a813: mov r15d, 6
45a819: sub rax, rdi
45a81c: add rcx, rax
45a81f: mov qword ptr [r11], rcx
45a822: jmp 0x45a338
45a827: mov rdi, r13
45a82a: mov rcx, rsi
45a82d: jmp 0x45a646
45a832: mov rdi, r13
45a835: mov rcx, rsi
45a838: jmp 0x45a52d
45a83d: mov edi, 4
45a842: jmp 0x45a52d
45a847: mov rdi, rcx
45a84a: jmp 0x45a610
45a84f: mov rdi, r14
45a852: cmp rbx, qword ptr [rsp + 8]
45a857: jne 0x45a7ef
45a859: jmp 0x45a610
45a85e: mov r13, rdi
45a861: mov rcx, r14
45a864: jmp 0x45a795
45a869: xor ebx, ebx
45a86b: jmp 0x45a485
45a870: mov rdi, rcx
45a873: jmp 0x45a7ef
45a878: lea rcx, [rip + 0x3fde1]
45a87f: mov edx, 0x31e
45a884: lea rsi, [rip + 0x3f9af]
45a88b: lea rdi, [rip + 0x3f9e1]
45a892: call 0x4032a0
45a897: nop word ptr [rax + rax]
45a8a0: mov rsi, rcx
45a8a3: jmp 0x45a8c5
45a8a5: mov dword ptr [rsi - 4], edi
45a8a8: lea rdi, [r13 + 4]
45a8ac: cmp rbx, rdi
45a8af: jb 0x45a795
45a8b5: add rsi, 4
45a8b9: cmp rdx, rsi
45a8bc: jb 0x45a7e0
45a8c2: mov r13, rdi
45a8c5: mov edi, dword ptr [r13 - 4]
45a8c9: mov rcx, rsi
45a8cc: bswap edi
45a8ce: test edi, edi
45a8d0: jns 0x45a8a5
45a8d2: cmp rdx, r14
45a8d5: je 0x45a619
45a8db: jmp 0x45a7b7
45a8e0: mov rsi, rcx
45a8e3: jmp 0x45a905
45a8e5: mov dword ptr [rsi - 4], edi
45a8e8: lea rdi, [r13 + 4]
45a8ec: cmp rbx, rdi
45a8ef: jb 0x45a795
45a8f5: add rsi, 4
45a8f9: cmp rdx, rsi
45a8fc: jb 0x45a7e0
45a902: mov r13, rdi
45a905: mov edi, dword ptr [r13 - 4]
45a909: mov rcx, rsi
45a90c: bswap edi
45a90e: test edi, edi
45a910: jns 0x45a8e5
45a912: jmp 0x45a8d2
45a914: lea rcx, [rip + 0x3fd45]
45a91b: mov edx, 0x1a4
45a920: lea rsi, [rip + 0x3f913]
45a927: lea rdi, [rip + 0x3f920]
45a92e: call 0x4032a0
45a933: call 0x4547a0
45a938: mov r15d, eax
45a93b: jmp 0x45a3ca
45a940: lea rcx, [rip + 0x3fd19]
45a947: mov edx, 0x234
45a94c: lea rsi, [rip + 0x3f8e7]
45a953: lea rdi, [rip + 0x3f8f4]
45a95a: call 0x4032a0
45a95f: nop 
45a960: endbr64 
45a964: push r15
45a966: push r14
45a968: push r13
45a96a: push r12
45a96c: push rbp
45a96d: mov rbp, rdx
45a970: push rbx
45a971: mov rbx, rsi
45a974: sub rsp, 0x68
45a978: mov qword ptr [rsp + 8], rcx
45a97d: mov r14d, dword ptr [rsp + 0xa0]
45a985: mov qword ptr [rsp + 0x30], r8
45a98a: mov qword ptr [rsp + 0x10], r9
45a98f: mov rax, qword ptr fs:[0x28]
45a998: mov qword ptr [rsp + 0x58], rax
45a99d: xor eax, eax
45a99f: lea rax, [rdi + 0x68]
45a9a3: mov qword ptr [rsp + 0x20], 0
45a9ac: mov qword ptr [rsp + 0x48], rax
45a9b1: lea rax, [rsi + 0x30]
45a9b5: mov qword ptr [rsp + 0x40], rax
45a9ba: test byte ptr [rsi + 0x10], 1
45a9be: jne 0x45a9e5
45a9c0: mov rax, qword ptr [rdi + 0x90]
45a9c7: cmp qword ptr [rdi + 0x68], 0
45a9cc: mov qword ptr [rsp + 0x20], rax
45a9d1: je 0x45a9e5
45a9d3: ror rax, 0x11
45a9d7: xor rax, qword ptr fs:[0x30]
45a9e0: mov qword ptr [rsp + 0x20], rax
45a9e5: test r14d, r14d
45a9e8: jne 0x45ad20
45a9ee: mov rdi, qword ptr [rsp + 0x30]
45a9f3: mov esi, dword ptr [rsp + 0xa8]
45a9fa: test rdi, rdi
45a9fd: mov rax, rdi
45aa00: cmove rax, rbx
45aa04: mov r14, qword ptr [rax]
45aa07: mov rax, qword ptr [rbx + 8]
45aa0b: mov qword ptr [rsp + 0x18], rax
45aa10: test esi, esi
45aa12: jne 0x45ab78
45aa18: mov r15, rbp
45aa1b: mov rbp, r14
45aa1e: nop 
45aa20: mov rax, qword ptr [rsp + 0x10]
45aa25: mov r13, qword ptr [r15]
45aa28: mov qword ptr [rsp + 0x28], 0
45aa31: test rax, rax
45aa34: je 0x45aa3e
45aa36: mov rax, qword ptr [rax]
45aa39: mov qword ptr [rsp + 0x28], rax
45aa3e: mov rcx, qword ptr [rsp + 8]
45aa43: mov rdx, qword ptr [rsp + 0x18]
45aa48: mov rsi, r13
45aa4b: mov rdi, rbp
45aa4e: mov r12d, 4
45aa54: sub rcx, r13
45aa57: sub rdx, rbp
45aa5a: cmp rdx, rcx
45aa5d: mov rax, rdx
45aa60: mov qword ptr [rsp + 0x38], rcx
45aa65: cmovg rax, rcx
45aa69: test rax, rax
45aa6c: lea rdx, [rax + 3]
45aa70: cmovns rdx, rax
45aa74: and rdx, 0xfffffffffffffffc
45aa78: lea rax, [r13 + rdx]
45aa7d: mov qword ptr [r15], rax
45aa80: call 0x401150
45aa85: mov rcx, qword ptr [rsp + 8]
45aa8a: mov r14, rax
45aa8d: cmp rcx, qword ptr [r15]
45aa90: je 0x45aaa6
45aa92: lea rax, [rax + 4]
45aa96: cmp qword ptr [rsp + 0x18], rax
45aa9b: sbb r12d, r12d
45aa9e: and r12d, 0xfffffffe
45aaa2: add r12d, 7
45aaa6: cmp qword ptr [rsp + 0x30], 0
45aaac: jne 0x45ac40
45aab2: add dword ptr [rbx + 0x14], 1
45aab6: test byte ptr [rbx + 0x10], 1
45aaba: jne 0x45ac50
45aac0: cmp r14, rbp
45aac3: jbe 0x45ab36
45aac5: mov rdi, qword ptr [rsp + 0x20]
45aaca: mov rax, qword ptr [rbx]
45aacd: mov qword ptr [rsp + 0x50], rax
45aad2: call 0x456100
45aad7: lea rdx, [rsp + 0x50]
45aadc: xor r8d, r8d
45aadf: mov rcx, r14
45aae2: mov esi, dword ptr [rsp + 0xa8]
45aae9: push rsi
45aaea: push 0
45aaec: mov r9, qword ptr [rsp + 0x20]
45aaf1: mov rsi, qword ptr [rsp + 0x50]
45aaf6: mov rdi, qword ptr [rsp + 0x58]
45aafb: mov rax, qword ptr [rsp + 0x30]
45ab00: call rax
45ab02: pop rdx
45ab03: pop rcx
45ab04: mov r8d, eax
45ab07: cmp eax, 4
45ab0a: je 0x45ab30
45ab0c: mov r12, qword ptr [rsp + 0x50]
45ab11: cmp r12, r14
45ab14: jne 0x45ac60
45ab1a: test r8d, r8d
45ab1d: jne 0x45aee6
45ab23: mov rbp, qword ptr [rbx]
45ab26: jmp 0x45aa20
45ab2b: nop dword ptr [rax + rax]
45ab30: cmp r12d, 5
45ab34: je 0x45ab23
45ab36: mov rbp, r15
45ab39: cmp r12d, 7
45ab3d: jne 0x45ab4e
45ab3f: mov eax, dword ptr [rsp + 0xa8]
45ab46: test eax, eax
45ab48: jne 0x45adb0
45ab4e: mov rax, qword ptr [rsp + 0x58]
45ab53: xor rax, qword ptr fs:[0x28]
45ab5c: jne 0x45aea3
45ab62: add rsp, 0x68
45ab66: mov eax, r12d
45ab69: pop rbx
45ab6a: pop rbp
45ab6b: pop r12
45ab6d: pop r13
45ab6f: pop r14
45ab71: pop r15
45ab73: ret 
45ab74: nop dword ptr [rax]
45ab78: mov rax, qword ptr [rbx + 0x20]
45ab7c: mov ecx, dword ptr [rax]
45ab7e: mov esi, ecx
45ab80: and esi, 7
45ab83: je 0x45aa18
45ab89: test rdi, rdi
45ab8c: jne 0x45aef1
45ab92: movsxd rdx, esi
45ab95: mov r10, qword ptr [rsp + 8]
45ab9a: mov rsi, qword ptr [rbp]
45ab9e: cmp rsi, r10
45aba1: jae 0x45ad01
45aba7: test cl, 4
45abaa: jne 0x45ac04
45abac: lea rdi, [rsi + 1]
45abb0: lea r8, [rdx + 1]
45abb4: mov qword ptr [rbp], rdi
45abb8: movzx r9d, byte ptr [rsi]
45abbc: mov byte ptr [rax + rdx + 4], r9b
45abc1: cmp r10, rdi
45abc4: jbe 0x45acfe
45abca: cmp r8, 4
45abce: je 0x45ac04
45abd0: lea rdi, [rsi + 2]
45abd4: add rdx, 2
45abd8: mov qword ptr [rbp], rdi
45abdc: movzx r9d, byte ptr [rsi + 1]
45abe1: mov byte ptr [rax + r8 + 4], r9b
45abe6: cmp r10, rdi
45abe9: jbe 0x45ad01
45abef: cmp rdx, 3
45abf3: jne 0x45ac04
45abf5: lea rdx, [rsi + 3]
45abf9: mov qword ptr [rbp], rdx
45abfd: movzx edx, byte ptr [rsi + 2]
45ac01: mov byte ptr [rax + 7], dl
45ac04: movzx edx, byte ptr [rax + 4]
45ac08: add r14, 4
45ac0c: mov r15, rbp
45ac0f: mov byte ptr [r14 - 4], dl
45ac13: movzx edx, byte ptr [rax + 5]
45ac17: mov byte ptr [r14 - 3], dl
45ac1b: movzx edx, byte ptr [rax + 6]
45ac1f: mov byte ptr [r14 - 2], dl
45ac23: movzx edx, byte ptr [rax + 7]
45ac27: mov byte ptr [r14 - 1], dl
45ac2b: mov rbp, r14
45ac2e: and dword ptr [rax], 0xfffffff8
45ac31: jmp 0x45aa20
45ac36: nop word ptr cs:[rax + rax]
45ac40: mov rax, qword ptr [rsp + 0x30]
45ac45: mov qword ptr [rax], r14
45ac48: jmp 0x45ab4e
45ac4d: nop dword ptr [rax]
45ac50: mov qword ptr [rbx], r14
45ac53: mov rbp, r15
45ac56: jmp 0x45ab39
45ac5b: nop dword ptr [rax + rax]
45ac60: mov rsi, qword ptr [rsp + 0x10]
45ac65: xor eax, eax
45ac67: test rsi, rsi
45ac6a: je 0x45ac6f
45ac6c: mov rax, qword ptr [rsi]
45ac6f: cmp rax, qword ptr [rsp + 0x28]
45ac74: je 0x45acf0
45ac76: mov rax, qword ptr [rsp + 0x38]
45ac7b: mov rdx, r12
45ac7e: mov rdi, rbp
45ac81: mov rsi, r13
45ac84: sub rdx, rbp
45ac87: mov dword ptr [rsp + 0x28], r8d
45ac8c: cmp rdx, rax
45ac8f: cmovle rax, rdx
45ac93: test rax, rax
45ac96: lea rdx, [rax + 3]
45ac9a: cmovns rdx, rax
45ac9e: and rdx, 0xfffffffffffffffc
45aca2: lea rax, [r13 + rdx]
45aca7: mov qword ptr [r15], rax
45acaa: call 0x401150
45acaf: mov rdi, qword ptr [rsp + 8]
45acb4: cmp rdi, qword ptr [r15]
45acb7: je 0x45ae79
45acbd: lea rdx, [rax + 4]
45acc1: mov rcx, qword ptr [rsp + 0x50]
45acc6: mov r8d, dword ptr [rsp + 0x28]
45accb: cmp r12, rdx
45acce: jae 0x45ad80
45acd4: cmp rax, rcx
45acd7: jne 0x45ae84
45acdd: cmp rbp, rax
45ace0: jne 0x45ab1a
45ace6: sub dword ptr [rbx + 0x14], 1
45acea: jmp 0x45ab1a
45acef: nop 
45acf0: mov rcx, r14
45acf3: sub rcx, r12
45acf6: sub qword ptr [r15], rcx
45acf9: jmp 0x45ab1a
45acfe: mov rdx, r8
45ad01: cmp rdx, 3
45ad05: ja 0x45ac04
45ad0b: and ecx, 0xfffffff8
45ad0e: mov r12d, 7
45ad14: or edx, ecx
45ad16: mov dword ptr [rax], edx
45ad18: jmp 0x45ab4e
45ad1d: nop dword ptr [rax]
45ad20: cmp qword ptr [rsp + 0x30], 0
45ad26: jne 0x45aea8
45ad2c: mov rax, qword ptr [rbx + 0x20]
45ad30: xor r12d, r12d
45ad33: mov qword ptr [rax], 0
45ad3a: test byte ptr [rbx + 0x10], 1
45ad3e: jne 0x45ab4e
45ad44: mov rbx, qword ptr [rsp + 0x20]
45ad49: mov rdi, rbx
45ad4c: call 0x456100
45ad51: mov eax, dword ptr [rsp + 0xa8]
45ad58: xor ecx, ecx
45ad5a: xor edx, edx
45ad5c: xor r8d, r8d
45ad5f: push rax
45ad60: push r14
45ad62: mov r9, qword ptr [rsp + 0x20]
45ad67: mov rsi, qword ptr [rsp + 0x50]
45ad6c: mov rdi, qword ptr [rsp + 0x58]
45ad71: call rbx
45ad73: pop rdi
45ad74: pop r8
45ad76: mov r12d, eax
45ad79: jmp 0x45ab4e
45ad7e: nop 
45ad80: cmp rax, rcx
45ad83: jne 0x45ae84
45ad89: lea rcx, [rip + 0x3f890]
45ad90: mov edx, 0x2eb
45ad95: lea rsi, [rip + 0x3f49e]
45ad9c: lea rdi, [rip + 0x3f53d]
45ada3: call 0x4032a0
45ada8: nop dword ptr [rax + rax]
45adb0: mov rdi, qword ptr [rsp + 8]
45adb5: mov rax, qword ptr [rbp]
45adb9: mov rdx, rdi
45adbc: sub rdx, rax
45adbf: cmp rdx, 3
45adc3: jg 0x45aec7
45adc9: mov rdx, qword ptr [rbx + 0x20]
45adcd: xor ecx, ecx
45adcf: cmp rax, rdi
45add2: jae 0x45ae65
45add8: lea rcx, [rax + 1]
45addc: mov qword ptr [rbp], rcx
45ade0: movzx esi, byte ptr [rax]
45ade3: mov byte ptr [rdx + 4], sil
45ade7: cmp rdi, rcx
45adea: jbe 0x45ae5f
45adec: lea rcx, [rax + 2]
45adf0: mov qword ptr [rbp], rcx
45adf4: movzx esi, byte ptr [rax + 1]
45adf8: mov byte ptr [rdx + 5], sil
45adfc: cmp rdi, rcx
45adff: jbe 0x45ae5f
45ae01: lea rcx, [rax + 3]
45ae05: mov qword ptr [rbp], rcx
45ae09: movzx esi, byte ptr [rax + 2]
45ae0d: mov byte ptr [rdx + 6], sil
45ae11: cmp rdi, rcx
45ae14: jbe 0x45ae5f
45ae16: lea rcx, [rax + 4]
45ae1a: mov qword ptr [rbp], rcx
45ae1e: movzx esi, byte ptr [rax + 3]
45ae22: mov byte ptr [rdx + 7], sil
45ae26: cmp rdi, rcx
45ae29: jbe 0x45ae5f
45ae2b: lea rcx, [rax + 5]
45ae2f: mov qword ptr [rbp], rcx
45ae33: movzx esi, byte ptr [rax + 4]
45ae37: mov byte ptr [rdx + 8], sil
45ae3b: cmp rdi, rcx
45ae3e: jbe 0x45ae5f
45ae40: lea rsi, [rdx + 9]
45ae44: add rcx, 1
45ae48: add rsi, 1
45ae4c: mov qword ptr [rbp], rcx
45ae50: movzx edi, byte ptr [rcx - 1]
45ae54: mov byte ptr [rsi - 1], dil
45ae58: cmp rcx, qword ptr [rsp + 8]
45ae5d: jne 0x45ae44
45ae5f: mov ecx, dword ptr [rsp + 8]
45ae63: sub ecx, eax
45ae65: mov eax, dword ptr [rdx]
45ae67: mov r12d, 7
45ae6d: and eax, 0xfffffff8
45ae70: or ecx, eax
45ae72: mov dword ptr [rdx], ecx
45ae74: jmp 0x45ab4e
45ae79: cmp qword ptr [rsp + 0x50], rax
45ae7e: je 0x45ad89
45ae84: lea rcx, [rip + 0x3f795]
45ae8b: mov edx, 0x2ea
45ae90: lea rsi, [rip + 0x3f3a3]
45ae97: lea rdi, [rip + 0x3f3c4]
45ae9e: call 0x4032a0
45aea3: call 0x4547a0
45aea8: lea rcx, [rip + 0x3f771]
45aeaf: mov edx, 0x1a4
45aeb4: lea rsi, [rip + 0x3f37f]
45aebb: lea rdi, [rip + 0x3f38c]
45aec2: call 0x4032a0
45aec7: lea rcx, [rip + 0x3f752]
45aece: mov edx, 0x31e
45aed3: lea rsi, [rip + 0x3f360]
45aeda: lea rdi, [rip + 0x3f392]
45aee1: call 0x4032a0
45aee6: mov rbp, r15
45aee9: mov r12d, r8d
45aeec: jmp 0x45ab39
45aef1: lea rcx, [rip + 0x3f728]
45aef8: mov edx, 0x234
45aefd: lea rsi, [rip + 0x3f336]
45af04: lea rdi, [rip + 0x3f343]
45af0b: call 0x4032a0
45af10: endbr64 
45af14: push r15
45af16: mov r11, rdx
45af19: mov r15, r9
45af1c: push r14
45af1e: push r13
45af20: push r12
45af22: mov r12, rsi
45af25: push rbp
45af26: push rbx
45af27: mov rbx, rcx
45af2a: sub rsp, 0x88
45af31: mov qword ptr [rsp + 0x20], r8
45af36: mov ebp, dword ptr [rsp + 0xc0]
45af3d: mov rax, qword ptr fs:[0x28]
45af46: mov qword ptr [rsp + 0x78], rax
45af4b: xor eax, eax
45af4d: lea rax, [rdi + 0x68]
45af51: mov qword ptr [rsp + 0x10], 0
45af5a: mov qword ptr [rsp + 0x50], rax
45af5f: lea rax, [rsi + 0x30]
45af63: mov qword ptr [rsp + 0x48], rax
45af68: mov eax, dword ptr [rsi + 0x10]
45af6b: test al, 1
45af6d: jne 0x45af97
45af6f: mov rcx, qword ptr [rdi + 0x90]
45af76: cmp qword ptr [rdi + 0x68], 0
45af7b: mov qword ptr [rsp + 0x10], rcx
45af80: je 0x45af97
45af82: mov rdx, rcx
45af85: ror rdx, 0x11
45af89: xor rdx, qword ptr fs:[0x30]
45af92: mov qword ptr [rsp + 0x10], rdx
45af97: test ebp, ebp
45af99: jne 0x45b587
45af9f: mov rdi, qword ptr [rsp + 0x20]
45afa4: lea rcx, [rsp + 0x68]
45afa9: mov rbp, qword ptr [r12 + 8]
45afae: mov esi, dword ptr [rsp + 0xc8]
45afb5: test rdi, rdi
45afb8: mov rdx, rdi
45afbb: cmove rdx, r12
45afbf: test r15, r15
45afc2: mov r14, qword ptr [rdx]
45afc5: mov edx, 0
45afca: mov qword ptr [rsp + 0x68], 0
45afd3: cmovne rdx, rcx
45afd7: mov qword ptr [rsp + 0x40], rdx
45afdc: test esi, esi
45afde: jne 0x45b370
45afe4: mov rdi, qword ptr [r11]
45afe7: mov qword ptr [rsp + 8], rdi
45afec: mov qword ptr [rsp + 0x18], 0
45aff5: lea rdi, [rsp + 0x70]
45affa: mov qword ptr [rsp + 0x58], rdi
45afff: test r15, r15
45b002: je 0x45b00c
45b004: mov rdx, qword ptr [r15]
45b007: add qword ptr [rsp + 0x18], rdx
45b00c: mov rdi, qword ptr [rsp + 8]
45b011: lea r13, [rdi + 4]
45b015: cmp rbx, r13
45b018: jb 0x45b549
45b01e: lea rdx, [r14 + 4]
45b022: cmp rbp, rdx
45b025: jb 0x45b554
45b02b: test al, 2
45b02d: mov rax, r13
45b030: jne 0x45b1f0
45b036: cmp qword ptr [rsp + 0x40], 0
45b03c: jne 0x45b06b
45b03e: jmp 0x45b16f
45b043: nop dword ptr [rax + rax]
45b048: lea rcx, [rax + 4]
45b04c: mov dword ptr [rdx - 4], esi
45b04f: cmp rcx, rbx
45b052: ja 0x45b368
45b058: lea rsi, [rdx + 4]
45b05c: cmp rsi, rbp
45b05f: ja 0x45b1c8
45b065: mov rdx, rsi
45b068: mov rax, rcx
45b06b: mov esi, dword ptr [rax - 4]
45b06e: lea rdi, [rax - 4]
45b072: lea rcx, [rdx - 4]
45b076: test esi, esi
45b078: jns 0x45b048
45b07a: mov qword ptr [r11], rdi
45b07d: mov r10d, 6
45b083: cmp qword ptr [rsp + 0x20], 0
45b089: jne 0x45b190
45b08f: add dword ptr [r12 + 0x14], 1
45b095: test byte ptr [r12 + 0x10], 1
45b09b: jne 0x45b472
45b0a1: cmp r14, rcx
45b0a4: mov qword ptr [rsp + 0x28], rcx
45b0a9: jae 0x45b29a
45b0af: mov rdi, qword ptr [rsp + 0x10]
45b0b4: mov rax, qword ptr [r12]
45b0b8: mov dword ptr [rsp + 0x3c], r10d
45b0bd: mov qword ptr [rsp + 0x30], r11
45b0c2: mov qword ptr [rsp + 0x70], rax
45b0c7: call 0x456100
45b0cc: mov edx, dword ptr [rsp + 0xc8]
45b0d3: xor r8d, r8d
45b0d6: mov r9, r15
45b0d9: push rdx
45b0da: push 0
45b0dc: mov rcx, qword ptr [rsp + 0x38]
45b0e1: mov rdx, qword ptr [rsp + 0x68]
45b0e6: mov rsi, qword ptr [rsp + 0x58]
45b0eb: mov rdi, qword ptr [rsp + 0x60]
45b0f0: mov rax, qword ptr [rsp + 0x20]
45b0f5: call rax
45b0f7: pop rdx
45b0f8: pop rcx
45b0f9: cmp eax, 4
45b0fc: mov r11, qword ptr [rsp + 0x30]
45b101: mov r10d, dword ptr [rsp + 0x3c]
45b106: je 0x45b290
45b10c: mov rdx, qword ptr [rsp + 0x70]
45b111: mov rcx, qword ptr [rsp + 0x28]
45b116: cmp rdx, rcx
45b119: jne 0x45b483
45b11f: test eax, eax
45b121: jne 0x45b7c5
45b127: mov rax, qword ptr [rsp + 0x68]
45b12c: mov rdi, qword ptr [r11]
45b12f: mov r14, qword ptr [r12]
45b133: mov qword ptr [rsp + 0x18], rax
45b138: mov eax, dword ptr [r12 + 0x10]
45b13d: mov qword ptr [rsp + 8], rdi
45b142: jmp 0x45afff
45b147: nop word ptr [rax + rax]
45b150: mov dword ptr [rdx - 4], ecx
45b153: lea rcx, [rax + 4]
45b157: cmp rbx, rcx
45b15a: jb 0x45b368
45b160: lea rsi, [rdx + 4]
45b164: cmp rbp, rsi
45b167: jb 0x45b1c8
45b169: mov rdx, rsi
45b16c: mov rax, rcx
45b16f: mov ecx, dword ptr [rax - 4]
45b172: test ecx, ecx
45b174: jns 0x45b150
45b176: cmp qword ptr [rsp + 0x20], 0
45b17c: mov rcx, r14
45b17f: mov r10d, 6
45b185: je 0x45b08f
45b18b: nop dword ptr [rax + rax]
45b190: mov rax, qword ptr [rsp + 0x20]
45b195: mov qword ptr [rax], rcx
45b198: mov rax, qword ptr [rsp + 0x78]
45b19d: xor rax, qword ptr fs:[0x28]
45b1a6: jne 0x45b74d
45b1ac: add rsp, 0x88
45b1b3: mov eax, r10d
45b1b6: pop rbx
45b1b7: pop rbp
45b1b8: pop r12
45b1ba: pop r13
45b1bc: pop r14
45b1be: pop r15
45b1c0: ret 
45b1c1: nop dword ptr [rax]
45b1c8: mov qword ptr [r11], rax
45b1cb: mov rcx, rdx
45b1ce: cmp rbx, rax
45b1d1: je 0x45b467
45b1d7: cmp rbp, rsi
45b1da: jae 0x45b7a6
45b1e0: mov r10d, 5
45b1e6: jmp 0x45b083
45b1eb: nop dword ptr [rax + rax]
45b1f0: cmp qword ptr [rsp + 0x40], 0
45b1f6: je 0x45b283
45b1fc: mov rcx, r14
45b1ff: jmp 0x45b226
45b201: nop dword ptr [rax]
45b208: mov dword ptr [rcx], esi
45b20a: lea rsi, [rax + 4]
45b20e: mov rcx, rdx
45b211: cmp rsi, rbx
45b214: ja 0x45b240
45b216: lea rdx, [rcx + 4]
45b21a: cmp rbp, rdx
45b21d: jb 0x45b458
45b223: mov rax, rsi
45b226: mov esi, dword ptr [rax - 4]
45b229: test esi, esi
45b22b: jns 0x45b208
45b22d: mov rdi, qword ptr [rsp + 0x40]
45b232: lea rsi, [rax + 4]
45b236: add qword ptr [rdi], 1
45b23a: cmp rsi, rbx
45b23d: jbe 0x45b216
45b23f: nop 
45b240: xor r10d, r10d
45b243: cmp rbx, rax
45b246: mov qword ptr [r11], rax
45b249: setne r10b
45b24d: lea r10d, [r10 + r10*2 + 4]
45b252: jmp 0x45b083
45b257: nop word ptr [rax + rax]
45b260: mov dword ptr [rdx - 4], ecx
45b263: lea rcx, [rax + 4]
45b267: cmp rbx, rcx
45b26a: jb 0x45b368
45b270: lea rsi, [rdx + 4]
45b274: cmp rbp, rsi
45b277: jb 0x45b1c8
45b27d: mov rdx, rsi
45b280: mov rax, rcx
45b283: mov ecx, dword ptr [rax - 4]
45b286: test ecx, ecx
45b288: jns 0x45b260
45b28a: jmp 0x45b176
45b28f: nop 
45b290: cmp r10d, 5
45b294: je 0x45b127
45b29a: cmp r10d, 7
45b29e: jne 0x45b198
45b2a4: mov eax, dword ptr [rsp + 0xc8]
45b2ab: test eax, eax
45b2ad: je 0x45b198
45b2b3: mov rax, qword ptr [r11]
45b2b6: mov rdx, rbx
45b2b9: sub rdx, rax
45b2bc: cmp rdx, 3
45b2c0: jg 0x45b70f
45b2c6: mov rdx, qword ptr [r12 + 0x20]
45b2cb: cmp rax, rbx
45b2ce: jae 0x45b6ca
45b2d4: lea rcx, [rax + 1]
45b2d8: mov qword ptr [r11], rcx
45b2db: movzx esi, byte ptr [rax]
45b2de: mov byte ptr [rdx + 4], sil
45b2e2: cmp rbx, rcx
45b2e5: jbe 0x45b353
45b2e7: lea rcx, [rax + 2]
45b2eb: mov qword ptr [r11], rcx
45b2ee: movzx esi, byte ptr [rax + 1]
45b2f2: mov byte ptr [rdx + 5], sil
45b2f6: cmp rcx, rbx
45b2f9: jae 0x45b353
45b2fb: lea rcx, [rax + 3]
45b2ff: mov qword ptr [r11], rcx
45b302: movzx esi, byte ptr [rax + 2]
45b306: mov byte ptr [rdx + 6], sil
45b30a: cmp rbx, rcx
45b30d: jbe 0x45b353
45b30f: lea rcx, [rax + 4]
45b313: mov qword ptr [r11], rcx
45b316: movzx esi, byte ptr [rax + 3]
45b31a: mov byte ptr [rdx + 7], sil
45b31e: cmp rbx, rcx
45b321: jbe 0x45b353
45b323: lea rcx, [rax + 5]
45b327: mov qword ptr [r11], rcx
45b32a: movzx esi, byte ptr [rax + 4]
45b32e: mov byte ptr [rdx + 8], sil
45b332: cmp rbx, rcx
45b335: jbe 0x45b353
45b337: lea rsi, [rdx + 9]
45b33b: add rcx, 1
45b33f: add rsi, 1
45b343: mov qword ptr [r11], rcx
45b346: movzx edi, byte ptr [rcx - 1]
45b34a: mov byte ptr [rsi - 1], dil
45b34e: cmp rcx, rbx
45b351: jne 0x45b33b
45b353: sub ebx, eax
45b355: mov eax, dword ptr [rdx]
45b357: and eax, 0xfffffff8
45b35a: or eax, ebx
45b35c: mov dword ptr [rdx], eax
45b35e: jmp 0x45b198
45b363: nop dword ptr [rax + rax]
45b368: mov rcx, rdx
45b36b: jmp 0x45b240
45b370: mov rdx, qword ptr [r12 + 0x20]
45b375: mov ecx, dword ptr [rdx]
45b377: mov esi, ecx
45b379: and esi, 7
45b37c: je 0x45afe4
45b382: cmp qword ptr [rsp + 0x20], 0
45b388: jne 0x45b72e
45b38e: mov rdi, qword ptr [r11]
45b391: movsxd rsi, esi
45b394: cmp rbx, rdi
45b397: jbe 0x45b6a3
45b39d: test cl, 4
45b3a0: jne 0x45b6ad
45b3a6: lea r9, [rdi + 1]
45b3aa: lea r8, [rsi + 1]
45b3ae: mov qword ptr [r11], r9
45b3b1: movzx r10d, byte ptr [rdi]
45b3b5: mov qword ptr [rsp + 8], r9
45b3ba: mov byte ptr [rdx + rsi + 4], r10b
45b3bf: cmp r9, rbx
45b3c2: jae 0x45b568
45b3c8: cmp r8, 4
45b3cc: je 0x45b40b
45b3ce: lea r9, [rdi + 2]
45b3d2: add rsi, 2
45b3d6: mov qword ptr [r11], r9
45b3d9: movzx r10d, byte ptr [rdi + 1]
45b3de: mov qword ptr [rsp + 8], r9
45b3e3: mov byte ptr [rdx + r8 + 4], r10b
45b3e8: cmp rbx, r9
45b3eb: jbe 0x45b56b
45b3f1: cmp rsi, 3
45b3f5: jne 0x45b40b
45b3f7: lea rsi, [rdi + 3]
45b3fb: mov qword ptr [r11], rsi
45b3fe: mov qword ptr [rsp + 8], rsi
45b403: movzx esi, byte ptr [rdi + 2]
45b407: mov byte ptr [rdx + 7], sil
45b40b: cmp byte ptr [rdx + 7], 0x80
45b40f: ja 0x45b690
45b415: movzx eax, byte ptr [rdx + 4]
45b419: add r14, 4
45b41d: mov byte ptr [r14 - 4], al
45b421: movzx eax, byte ptr [rdx + 5]
45b425: mov byte ptr [r14 - 3], al
45b429: movzx eax, byte ptr [rdx + 6]
45b42d: mov byte ptr [r14 - 2], al
45b431: movzx eax, byte ptr [rdx + 7]
45b435: mov byte ptr [r14 - 1], al
45b439: mov rax, qword ptr [r11]
45b43c: mov ecx, dword ptr [rdx]
45b43e: mov qword ptr [rsp + 8], rax
45b443: and ecx, 0xfffffff8
45b446: mov eax, dword ptr [r12 + 0x10]
45b44b: mov dword ptr [rdx], ecx
45b44d: jmp 0x45afec
45b452: nop word ptr [rax + rax]
45b458: mov qword ptr [r11], rax
45b45b: mov rsi, rdx
45b45e: cmp rbx, rax
45b461: jne 0x45b1d7
45b467: mov r10d, 4
45b46d: jmp 0x45b083
45b472: mov qword ptr [r12], rcx
45b476: mov rax, qword ptr [rsp + 0x68]
45b47b: add qword ptr [r15], rax
45b47e: jmp 0x45b29a
45b483: xor esi, esi
45b485: test r15, r15
45b488: je 0x45b48d
45b48a: mov rsi, qword ptr [r15]
45b48d: add rsi, qword ptr [rsp + 0x68]
45b492: cmp rsi, qword ptr [rsp + 0x18]
45b497: je 0x45b53e
45b49d: mov rdi, qword ptr [rsp + 8]
45b4a2: mov esi, dword ptr [r12 + 0x10]
45b4a7: mov qword ptr [r11], rdi
45b4aa: cmp rbx, r13
45b4ad: jb 0x45b6b7
45b4b3: lea rcx, [r14 + 4]
45b4b7: cmp rdx, rcx
45b4ba: jb 0x45b6c2
45b4c0: and esi, 2
45b4c3: jne 0x45b5e5
45b4c9: cmp qword ptr [rsp + 0x40], 0
45b4cf: jne 0x45b503
45b4d1: jmp 0x45b6d1
45b4d6: nop word ptr cs:[rax + rax]
45b4e0: lea rdi, [r13 + 4]
45b4e4: mov dword ptr [rcx - 4], esi
45b4e7: cmp rbx, rdi
45b4ea: jb 0x45b62b
45b4f0: lea rsi, [rcx + 4]
45b4f4: cmp rdx, rsi
45b4f7: jb 0x45b663
45b4fd: mov rcx, rsi
45b500: mov r13, rdi
45b503: mov esi, dword ptr [r13 - 4]
45b507: lea rdi, [rcx - 4]
45b50b: lea r8, [r13 - 4]
45b50f: test esi, esi
45b511: jns 0x45b4e0
45b513: mov qword ptr [r11], r8
45b516: cmp rdx, rdi
45b519: jne 0x45b63c
45b51f: lea rcx, [rip + 0x3f0ba]
45b526: mov edx, 0x2eb
45b52b: lea rsi, [rip + 0x3ed08]
45b532: lea rdi, [rip + 0x3eda7]
45b539: call 0x4032a0
45b53e: sub rcx, rdx
45b541: sub qword ptr [r11], rcx
45b544: jmp 0x45b11f
45b549: mov rax, rdi
45b54c: mov rcx, r14
45b54f: jmp 0x45b240
45b554: mov qword ptr [r11], rdi
45b557: mov rcx, r14
45b55a: cmp rbx, rdi
45b55d: jne 0x45b1e0
45b563: jmp 0x45b467
45b568: mov rsi, r8
45b56b: cmp rsi, 3
45b56f: ja 0x45b40b
45b575: and ecx, 0xfffffff8
45b578: mov r10d, 7
45b57e: or esi, ecx
45b580: mov dword ptr [rdx], esi
45b582: jmp 0x45b198
45b587: cmp qword ptr [rsp + 0x20], 0
45b58d: jne 0x45b787
45b593: mov rax, qword ptr [r12 + 0x20]
45b598: xor r10d, r10d
45b59b: mov qword ptr [rax], 0
45b5a2: test byte ptr [r12 + 0x10], 1
45b5a8: jne 0x45b198
45b5ae: mov rbx, qword ptr [rsp + 0x10]
45b5b3: mov rdi, rbx
45b5b6: call 0x456100
45b5bb: mov eax, dword ptr [rsp + 0xc8]
45b5c2: xor ecx, ecx
45b5c4: xor edx, edx
45b5c6: xor r8d, r8d
45b5c9: mov r9, r15
45b5cc: push rax
45b5cd: push rbp
45b5ce: mov rsi, qword ptr [rsp + 0x58]
45b5d3: mov rdi, qword ptr [rsp + 0x60]
45b5d8: call rbx
45b5da: pop rdi
45b5db: pop r8
45b5dd: mov r10d, eax
45b5e0: jmp 0x45b198
45b5e5: mov r8, qword ptr [rsp + 0x40]
45b5ea: test r8, r8
45b5ed: je 0x45b752
45b5f3: mov rsi, r14
45b5f6: jmp 0x45b61a
45b5f8: nop dword ptr [rax + rax]
45b600: mov dword ptr [rsi], edi
45b602: mov rsi, rcx
45b605: lea rdi, [r13 + 4]
45b609: cmp rbx, rdi
45b60c: jb 0x45b628
45b60e: lea rcx, [rsi + 4]
45b612: cmp rdx, rcx
45b615: jb 0x45b660
45b617: mov r13, rdi
45b61a: mov edi, dword ptr [r13 - 4]
45b61e: test edi, edi
45b620: jns 0x45b600
45b622: add qword ptr [r8], 1
45b626: jmp 0x45b605
45b628: mov rcx, rsi
45b62b: mov qword ptr [r11], r13
45b62e: cmp rbx, r13
45b631: je 0x45b684
45b633: cmp rcx, rdx
45b636: je 0x45b51f
45b63c: lea rcx, [rip + 0x3ef9d]
45b643: mov edx, 0x2ea
45b648: lea rsi, [rip + 0x3ebeb]
45b64f: lea rdi, [rip + 0x3ec0c]
45b656: call 0x4032a0
45b65b: nop dword ptr [rax + rax]
45b660: mov rcx, rsi
45b663: mov qword ptr [r11], r13
45b666: cmp rbx, r13
45b669: je 0x45b684
45b66b: cmp rdx, rcx
45b66e: jne 0x45b63c
45b670: cmp rdx, r14
45b673: jne 0x45b11f
45b679: sub dword ptr [r12 + 0x14], 1
45b67f: jmp 0x45b11f
45b684: cmp rdx, rcx
45b687: je 0x45b51f
45b68d: jmp 0x45b63c
45b68f: nop 
45b690: test al, 2
45b692: jne 0x45b443
45b698: mov r10d, 6
45b69e: jmp 0x45b198
45b6a3: mov qword ptr [rsp + 8], rdi
45b6a8: jmp 0x45b56b
45b6ad: mov qword ptr [rsp + 8], rdi
45b6b2: jmp 0x45b40b
45b6b7: mov r13, rdi
45b6ba: mov rcx, r14
45b6bd: jmp 0x45b62b
45b6c2: mov r13, rdi
45b6c5: mov rcx, r14
45b6c8: jmp 0x45b663
45b6ca: xor ebx, ebx
45b6cc: jmp 0x45b355
45b6d1: mov rsi, rcx
45b6d4: jmp 0x45b6f6
45b6d6: mov dword ptr [rsi - 4], edi
45b6d9: lea rdi, [r13 + 4]
45b6dd: cmp rbx, rdi
45b6e0: jb 0x45b62b
45b6e6: add rsi, 4
45b6ea: cmp rdx, rsi
45b6ed: jb 0x45b663
45b6f3: mov r13, rdi
45b6f6: mov edi, dword ptr [r13 - 4]
45b6fa: mov rcx, rsi
45b6fd: test edi, edi
45b6ff: jns 0x45b6d6
45b701: cmp rdx, r14
45b704: je 0x45b51f
45b70a: jmp 0x45b63c
45b70f: lea rcx, [rip + 0x3eeca]
45b716: mov edx, 0x31e
45b71b: lea rsi, [rip + 0x3eb18]
45b722: lea rdi, [rip + 0x3eb4a]
45b729: call 0x4032a0
45b72e: lea rcx, [rip + 0x3eeab]
45b735: mov edx, 0x234
45b73a: lea rsi, [rip + 0x3eaf9]
45b741: lea rdi, [rip + 0x3eb06]
45b748: call 0x4032a0
45b74d: call 0x4547a0
45b752: mov rsi, rcx
45b755: jmp 0x45b777
45b757: mov dword ptr [rsi - 4], edi
45b75a: lea rdi, [r13 + 4]
45b75e: cmp rbx, rdi
45b761: jb 0x45b62b
45b767: add rsi, 4
45b76b: cmp rdx, rsi
45b76e: jb 0x45b663
45b774: mov r13, rdi
45b777: mov edi, dword ptr [r13 - 4]
45b77b: mov rcx, rsi
45b77e: test edi, edi
45b780: jns 0x45b757
45b782: jmp 0x45b701
45b787: lea rcx, [rip + 0x3ee52]
45b78e: mov edx, 0x1a4
45b793: lea rsi, [rip + 0x3eaa0]
45b79a: lea rdi, [rip + 0x3eaad]
45b7a1: call 0x4032a0
45b7a6: lea rcx, [rip + 0x3ef93]
45b7ad: mov edx, 0x294
45b7b2: lea rsi, [rip + 0x3eace]
45b7b9: lea rdi, [rip + 0x3ead6]
45b7c0: call 0x4032a0
45b7c5: mov r10d, eax
45b7c8: jmp 0x45b29a
45b7cd: nop dword ptr [rax]
45b7d0: endbr64 
45b7d4: push r15
45b7d6: mov r11, rdx
45b7d9: push r14
45b7db: push r13
45b7dd: push r12
45b7df: push rbp
45b7e0: mov rbp, rcx
45b7e3: push rbx
45b7e4: mov rbx, rsi
45b7e7: sub rsp, 0x78
45b7eb: mov qword ptr [rsp + 0x18], r8
45b7f0: mov r12d, dword ptr [rsp + 0xb0]
45b7f8: mov rax, qword ptr fs:[0x28]
45b801: mov qword ptr [rsp + 0x68], rax
45b806: xor eax, eax
45b808: lea rax, [rdi + 0x68]
45b80c: mov qword ptr [rsp + 0x10], 0
45b815: mov qword ptr [rsp + 0x48], rax
45b81a: lea rax, [rsi + 0x30]
45b81e: mov qword ptr [rsp + 0x40], rax
45b823: mov eax, dword ptr [rsi + 0x10]
45b826: test al, 1
45b828: jne 0x45b852
45b82a: mov rsi, qword ptr [rdi + 0x90]
45b831: cmp qword ptr [rdi + 0x68], 0
45b836: mov qword ptr [rsp + 0x10], rsi
45b83b: je 0x45b852
45b83d: mov r15, rsi
45b840: ror r15, 0x11
45b844: xor r15, qword ptr fs:[0x30]
45b84d: mov qword ptr [rsp + 0x10], r15
45b852: test r12d, r12d
45b855: jne 0x45bb93
45b85b: mov rdi, qword ptr [rsp + 0x18]
45b860: lea rcx, [rsp + 0x58]
45b865: mov r12, qword ptr [rbx + 8]
45b869: mov r15, r9
45b86c: test rdi, rdi
45b86f: mov rdx, rdi
45b872: cmove rdx, rbx
45b876: test r9, r9
45b879: mov r14, qword ptr [rdx]
45b87c: mov edx, 0
45b881: mov qword ptr [rsp + 0x58], 0
45b88a: cmovne rdx, rcx
45b88e: xor r10d, r10d
45b891: mov qword ptr [rsp + 0x38], rdx
45b896: mov r13, qword ptr [r11]
45b899: test r15, r15
45b89c: je 0x45b8a1
45b89e: add r10, qword ptr [r15]
45b8a1: cmp r13, rbp
45b8a4: je 0x45bb80
45b8aa: lea rdi, [r14 + 4]
45b8ae: cmp r12, rdi
45b8b1: jb 0x45ba88
45b8b7: test al, 2
45b8b9: jne 0x45b9f0
45b8bf: cmp qword ptr [rsp + 0x38], 0
45b8c5: je 0x45bc1c
45b8cb: mov rsi, rdi
45b8ce: mov rax, r13
45b8d1: jmp 0x45b8f5
45b8d3: nop dword ptr [rax + rax]
45b8d8: add rax, 1
45b8dc: mov dword ptr [rsi - 4], edx
45b8df: cmp rbp, rax
45b8e2: je 0x45bab0
45b8e8: lea rsi, [rsi + 4]
45b8ec: cmp r12, rsi
45b8ef: jb 0x45b9c8
45b8f5: movzx edx, byte ptr [rax]
45b8f8: mov rcx, rsi
45b8fb: lea rdi, [rsi - 4]
45b8ff: test dl, dl
45b901: jns 0x45b8d8
45b903: mov dword ptr [rsp + 8], 6
45b90b: mov rcx, rdi
45b90e: cmp qword ptr [rsp + 0x18], 0
45b914: mov qword ptr [r11], rax
45b917: jne 0x45b9df
45b91d: add dword ptr [rbx + 0x14], 1
45b921: test byte ptr [rbx + 0x10], 1
45b925: jne 0x45baa0
45b92b: cmp rcx, r14
45b92e: mov qword ptr [rsp + 0x28], r11
45b933: mov qword ptr [rsp + 0x30], r10
45b938: mov qword ptr [rsp + 0x20], rcx
45b93d: jbe 0x45ba5b
45b943: mov rdi, qword ptr [rsp + 0x10]
45b948: mov rax, qword ptr [rbx]
45b94b: mov qword ptr [rsp + 0x60], rax
45b950: call 0x456100
45b955: lea rdx, [rsp + 0x60]
45b95a: xor r8d, r8d
45b95d: mov r9, r15
45b960: mov ecx, dword ptr [rsp + 0xb8]
45b967: push rcx
45b968: push 0
45b96a: mov rcx, qword ptr [rsp + 0x30]
45b96f: mov rsi, qword ptr [rsp + 0x50]
45b974: mov rdi, qword ptr [rsp + 0x58]
45b979: mov rax, qword ptr [rsp + 0x20]
45b97e: call rax
45b980: pop rdx
45b981: pop rcx
45b982: cmp eax, 4
45b985: mov r11, qword ptr [rsp + 0x28]
45b98a: je 0x45ba50
45b990: mov rdx, qword ptr [rsp + 0x60]
45b995: mov rcx, qword ptr [rsp + 0x20]
45b99a: mov r10, qword ptr [rsp + 0x30]
45b99f: cmp rcx, rdx
45b9a2: jne 0x45babd
45b9a8: test eax, eax
45b9aa: jne 0x45bdc3
45b9b0: mov r14, qword ptr [rbx]
45b9b3: mov r10, qword ptr [rsp + 0x58]
45b9b8: mov eax, dword ptr [rbx + 0x10]
45b9bb: jmp 0x45b896
45b9c0: mov rcx, rdi
45b9c3: nop dword ptr [rax + rax]
45b9c8: cmp qword ptr [rsp + 0x18], 0
45b9ce: mov dword ptr [rsp + 8], 5
45b9d6: mov qword ptr [r11], rax
45b9d9: je 0x45b91d
45b9df: mov rax, qword ptr [rsp + 0x18]
45b9e4: mov qword ptr [rax], rcx
45b9e7: jmp 0x45ba5b
45b9e9: nop dword ptr [rax]
45b9f0: cmp qword ptr [rsp + 0x38], 0
45b9f6: je 0x45bcb0
45b9fc: mov dword ptr [rsp + 8], 4
45ba04: lea rdx, [r13 + 1]
45ba08: mov rcx, r14
45ba0b: jmp 0x45ba2b
45ba0d: nop dword ptr [rax]
45ba10: mov dword ptr [rcx], esi
45ba12: mov rcx, rdi
45ba15: cmp rbp, rdx
45ba18: je 0x45b90e
45ba1e: lea rdi, [rcx + 4]
45ba22: add rdx, 1
45ba26: cmp r12, rdi
45ba29: jb 0x45b9c8
45ba2b: movzx esi, byte ptr [rdx - 1]
45ba2f: mov rax, rdx
45ba32: test sil, sil
45ba35: jns 0x45ba10
45ba37: mov rdi, qword ptr [rsp + 0x38]
45ba3c: mov dword ptr [rsp + 8], 6
45ba44: add qword ptr [rdi], 1
45ba48: jmp 0x45ba15
45ba4a: nop word ptr [rax + rax]
45ba50: cmp dword ptr [rsp + 8], 5
45ba55: je 0x45b9b0
45ba5b: mov rax, qword ptr [rsp + 0x68]
45ba60: xor rax, qword ptr fs:[0x28]
45ba69: jne 0x45bdbe
45ba6f: mov eax, dword ptr [rsp + 8]
45ba73: add rsp, 0x78
45ba77: pop rbx
45ba78: pop rbp
45ba79: pop r12
45ba7b: pop r13
45ba7d: pop r14
45ba7f: pop r15
45ba81: ret 
45ba82: nop word ptr [rax + rax]
45ba88: mov dword ptr [rsp + 8], 5
45ba90: mov rax, r13
45ba93: mov rcx, r14
45ba96: jmp 0x45b90e
45ba9b: nop dword ptr [rax + rax]
45baa0: mov qword ptr [rbx], rcx
45baa3: mov rax, qword ptr [rsp + 0x58]
45baa8: add qword ptr [r15], rax
45baab: jmp 0x45ba5b
45baad: nop dword ptr [rax]
45bab0: mov dword ptr [rsp + 8], 4
45bab8: jmp 0x45b90e
45babd: xor esi, esi
45babf: test r15, r15
45bac2: je 0x45bac7
45bac4: mov rsi, qword ptr [r15]
45bac7: add rsi, qword ptr [rsp + 0x58]
45bacc: cmp rsi, r10
45bacf: je 0x45bb69
45bad5: mov qword ptr [r11], r13
45bad8: mov ecx, dword ptr [rbx + 0x10]
45badb: cmp r13, rbp
45bade: je 0x45bd70
45bae4: lea rsi, [r14 + 4]
45bae8: cmp rdx, rsi
45baeb: jb 0x45bbfb
45baf1: and ecx, 2
45baf4: jne 0x45bc60
45bafa: cmp qword ptr [rsp + 0x38], 0
45bb00: mov rcx, rsi
45bb03: jne 0x45bb2d
45bb05: jmp 0x45bd0d
45bb0a: nop word ptr [rax + rax]
45bb10: add r13, 1
45bb14: mov dword ptr [rcx - 4], esi
45bb17: cmp rbp, r13
45bb1a: je 0x45bd50
45bb20: add rcx, 4
45bb24: cmp rdx, rcx
45bb27: jb 0x45bbfe
45bb2d: movzx esi, byte ptr [r13]
45bb32: mov rdi, rcx
45bb35: lea r8, [rcx - 4]
45bb39: test sil, sil
45bb3c: jns 0x45bb10
45bb3e: mov qword ptr [r11], r13
45bb41: cmp r8, rdx
45bb44: je 0x45bd78
45bb4a: lea rcx, [rip + 0x3ea4f]
45bb51: mov edx, 0x2ea
45bb56: lea rsi, [rip + 0x3e6dd]
45bb5d: lea rdi, [rip + 0x3e6fe]
45bb64: call 0x4032a0
45bb69: sub rcx, rdx
45bb6c: lea rdx, [rcx + 3]
45bb70: cmovns rdx, rcx
45bb74: sar rdx, 2
45bb78: sub qword ptr [r11], rdx
45bb7b: jmp 0x45b9a8
45bb80: mov dword ptr [rsp + 8], 4
45bb88: mov rax, r13
45bb8b: mov rcx, r14
45bb8e: jmp 0x45b90e
45bb93: cmp qword ptr [rsp + 0x18], 0
45bb99: jne 0x45bd97
45bb9f: mov rax, qword ptr [rbx + 0x20]
45bba3: mov dword ptr [rsp + 8], 0
45bbab: mov qword ptr [rax], 0
45bbb2: test byte ptr [rbx + 0x10], 1
45bbb6: jne 0x45ba5b
45bbbc: mov rbx, qword ptr [rsp + 0x10]
45bbc1: mov qword ptr [rsp + 8], r9
45bbc6: mov rdi, rbx
45bbc9: call 0x456100
45bbce: mov eax, dword ptr [rsp + 0xb8]
45bbd5: xor ecx, ecx
45bbd7: xor edx, edx
45bbd9: xor r8d, r8d
45bbdc: push rax
45bbdd: push r12
45bbdf: mov r9, qword ptr [rsp + 0x18]
45bbe4: mov rsi, qword ptr [rsp + 0x50]
45bbe9: mov rdi, qword ptr [rsp + 0x58]
45bbee: call rbx
45bbf0: mov dword ptr [rsp + 0x18], eax
45bbf4: pop rsi
45bbf5: pop rdi
45bbf6: jmp 0x45ba5b
45bbfb: mov rdi, r14
45bbfe: mov qword ptr [r11], r13
45bc01: cmp rdi, rdx
45bc04: jne 0x45bb4a
45bc0a: cmp rdi, r14
45bc0d: jne 0x45b9a8
45bc13: sub dword ptr [rbx + 0x14], 1
45bc17: jmp 0x45b9a8
45bc1c: mov rax, r13
45bc1f: jmp 0x45bc48
45bc21: nop dword ptr [rax]
45bc28: add rax, 1
45bc2c: mov dword ptr [rdi - 4], edx
45bc2f: cmp rbp, rax
45bc32: je 0x45bd60
45bc38: lea rdx, [rdi + 4]
45bc3c: cmp r12, rdx
45bc3f: jb 0x45b9c0
45bc45: mov rdi, rdx
45bc48: movzx edx, byte ptr [rax]
45bc4b: lea rcx, [rdi - 4]
45bc4f: test dl, dl
45bc51: jns 0x45bc28
45bc53: mov dword ptr [rsp + 8], 6
45bc5b: jmp 0x45b90e
45bc60: cmp qword ptr [rsp + 0x38], 0
45bc66: je 0x45bd3e
45bc6c: lea rcx, [r13 + 1]
45bc70: mov rdi, r14
45bc73: jmp 0x45bc98
45bc75: nop dword ptr [rax]
45bc78: mov dword ptr [rdi], r8d
45bc7b: mov rdi, rsi
45bc7e: cmp rbp, rcx
45bc81: je 0x45bd58
45bc87: lea rsi, [rdi + 4]
45bc8b: add rcx, 1
45bc8f: cmp rdx, rsi
45bc92: jb 0x45bbfe
45bc98: movzx r8d, byte ptr [rcx - 1]
45bc9d: mov r13, rcx
45bca0: test r8b, r8b
45bca3: jns 0x45bc78
45bca5: mov rsi, qword ptr [rsp + 0x38]
45bcaa: add qword ptr [rsi], 1
45bcae: jmp 0x45bc7e
45bcb0: mov rsi, rdi
45bcb3: mov rax, r13
45bcb6: jmp 0x45bcdd
45bcb8: nop dword ptr [rax + rax]
45bcc0: add rax, 1
45bcc4: mov dword ptr [rsi - 4], edx
45bcc7: cmp rbp, rax
45bcca: je 0x45bab0
45bcd0: lea rsi, [rsi + 4]
45bcd4: cmp r12, rsi
45bcd7: jb 0x45b9c8
45bcdd: movzx edx, byte ptr [rax]
45bce0: mov rcx, rsi
45bce3: lea rdi, [rsi - 4]
45bce7: test dl, dl
45bce9: jns 0x45bcc0
45bceb: jmp 0x45b903
45bcf0: add r13, 1
45bcf4: mov dword ptr [rsi - 4], ecx
45bcf7: cmp rbp, r13
45bcfa: je 0x45bdcc
45bd00: add rsi, 4
45bd04: cmp rdx, rsi
45bd07: jb 0x45bbfe
45bd0d: movzx ecx, byte ptr [r13]
45bd12: mov rdi, rsi
45bd15: lea r8, [rsi - 4]
45bd19: test cl, cl
45bd1b: jns 0x45bcf0
45bd1d: jmp 0x45bb3e
45bd22: add r13, 1
45bd26: mov dword ptr [rsi - 4], ecx
45bd29: cmp rbp, r13
45bd2c: je 0x45bdcc
45bd32: lea rcx, [rsi + 4]
45bd36: cmp rcx, rdx
45bd39: ja 0x45bdb6
45bd3b: mov rsi, rcx
45bd3e: movzx ecx, byte ptr [r13]
45bd43: lea r8, [rsi - 4]
45bd47: test cl, cl
45bd49: jns 0x45bd22
45bd4b: jmp 0x45bb3e
45bd50: mov r8, rcx
45bd53: jmp 0x45bb3e
45bd58: mov r8, rdi
45bd5b: jmp 0x45bb3e
45bd60: mov dword ptr [rsp + 8], 4
45bd68: mov rcx, rdi
45bd6b: jmp 0x45b90e
45bd70: mov r8, r14
45bd73: jmp 0x45bb3e
45bd78: lea rcx, [rip + 0x3e821]
45bd7f: mov edx, 0x2eb
45bd84: lea rsi, [rip + 0x3e4af]
45bd8b: lea rdi, [rip + 0x3e54e]
45bd92: call 0x4032a0
45bd97: lea rcx, [rip + 0x3e802]
45bd9e: mov edx, 0x1a4
45bda3: lea rsi, [rip + 0x3e490]
45bdaa: lea rdi, [rip + 0x3e49d]
45bdb1: call 0x4032a0
45bdb6: mov rdi, rsi
45bdb9: jmp 0x45bbfe
45bdbe: call 0x4547a0
45bdc3: mov dword ptr [rsp + 8], eax
45bdc7: jmp 0x45ba5b
45bdcc: mov r8, rsi
45bdcf: jmp 0x45bb3e
45bdd4: nop word ptr cs:[rax + rax]
45bddf: nop 
45bde0: endbr64 
45bde4: push r15
45bde6: mov r15, r9
45bde9: push r14
45bdeb: push r13
45bded: push r12
45bdef: push rbp
45bdf0: mov rbp, rsi
45bdf3: push rbx
45bdf4: mov rbx, rcx
45bdf7: sub rsp, 0x98
45bdfe: mov r13d, dword ptr [rsi + 0x10]
45be02: mov qword ptr [rsp + 0x50], rdi
45be07: mov r12d, dword ptr [rsp + 0xd0]
45be0f: mov qword ptr [rsp], rdx
45be13: mov qword ptr [rsp + 8], r8
45be18: mov rax, qword ptr fs:[0x28]
45be21: mov qword ptr [rsp + 0x88], rax
45be29: xor eax, eax
45be2b: lea rax, [rdi + 0x68]
45be2f: mov qword ptr [rsp + 0x30], 0
45be38: mov qword ptr [rsp + 0x38], rax
45be3d: lea rax, [rsi + 0x30]
45be41: mov qword ptr [rsp + 0x40], rax
45be46: test r13b, 1
45be4a: jne 0x45be71
45be4c: mov rax, qword ptr [rdi + 0x90]
45be53: cmp qword ptr [rdi + 0x68], 0
45be58: mov qword ptr [rsp + 0x30], rax
45be5d: je 0x45be71
45be5f: ror rax, 0x11
45be63: xor rax, qword ptr fs:[0x30]
45be6c: mov qword ptr [rsp + 0x30], rax
45be71: test r12d, r12d
45be74: jne 0x45c4be
45be7a: mov rax, qword ptr [rsp]
45be7e: mov rdi, qword ptr [rsp + 8]
45be83: lea rdx, [rsp + 0x60]
45be88: mov r11, qword ptr [rbp + 8]
45be8c: test rdi, rdi
45be8f: mov r12, qword ptr [rax]
45be92: mov rax, rdi
45be95: cmove rax, rbp
45be99: test r15, r15
45be9c: mov r14, qword ptr [rax]
45be9f: mov eax, 0
45bea4: mov qword ptr [rsp + 0x60], 0
45bead: cmovne rax, rdx
45beb1: mov qword ptr [rsp + 0x48], rax
45beb6: mov eax, dword ptr [rsp + 0xd8]
45bebd: test eax, eax
45bebf: jne 0x45c0b8
45bec5: xor eax, eax
45bec7: mov qword ptr [rsp + 0x28], r11
45becc: mov r11, rax
45becf: nop 
45bed0: test r15, r15
45bed3: je 0x45bed8
45bed5: add r11, qword ptr [r15]
45bed8: mov qword ptr [rsp + 0x70], r12
45bedd: mov qword ptr [rsp + 0x78], r14
45bee2: cmp rbx, r12
45bee5: je 0x45c519
45beeb: and r13d, 2
45beef: mov r10d, 4
45bef5: mov rcx, r14
45bef8: mov rax, r12
45befb: mov edi, r10d
45befe: mov r10d, r13d
45bf01: mov r13, qword ptr [rsp + 0x28]
45bf06: lea rsi, [rax + 4]
45bf0a: cmp rbx, rsi
45bf0d: jb 0x45bf98
45bf13: cmp r13, rcx
45bf16: jbe 0x45c060
45bf1c: mov edx, dword ptr [rax]
45bf1e: cmp edx, 0x7f
45bf21: ja 0x45c070
45bf27: lea rsi, [rcx + 1]
45bf2b: mov qword ptr [rsp + 0x78], rsi
45bf30: mov byte ptr [rcx], dl
45bf32: mov rax, qword ptr [rsp + 0x70]
45bf37: mov rcx, qword ptr [rsp + 0x78]
45bf3c: add rax, 4
45bf40: mov qword ptr [rsp + 0x70], rax
45bf45: cmp rbx, rax
45bf48: jne 0x45bf06
45bf4a: mov r10d, edi
45bf4d: mov rdi, qword ptr [rsp]
45bf51: cmp qword ptr [rsp + 8], 0
45bf57: mov qword ptr [rdi], rax
45bf5a: je 0x45bfad
45bf5c: nop dword ptr [rax]
45bf60: mov rax, qword ptr [rsp + 8]
45bf65: mov qword ptr [rax], rcx
45bf68: mov rax, qword ptr [rsp + 0x88]
45bf70: xor rax, qword ptr fs:[0x28]
45bf79: jne 0x45c9b3
45bf7f: add rsp, 0x98
45bf86: mov eax, r10d
45bf89: pop rbx
45bf8a: pop rbp
45bf8b: pop r12
45bf8d: pop r13
45bf8f: pop r14
45bf91: pop r15
45bf93: ret 
45bf94: nop dword ptr [rax]
45bf98: mov r10d, 7
45bf9e: mov rdi, qword ptr [rsp]
45bfa2: cmp qword ptr [rsp + 8], 0
45bfa8: mov qword ptr [rdi], rax
45bfab: jne 0x45bf60
45bfad: add dword ptr [rbp + 0x14], 1
45bfb1: test byte ptr [rbp + 0x10], 1
45bfb5: jne 0x45c260
45bfbb: cmp r14, rcx
45bfbe: mov qword ptr [rsp + 0x20], r11
45bfc3: mov qword ptr [rsp + 0x10], rcx
45bfc8: jae 0x45c3b0
45bfce: mov r13, qword ptr [rsp + 0x30]
45bfd3: mov rax, qword ptr [rbp]
45bfd7: mov dword ptr [rsp + 0x18], r10d
45bfdc: mov rdi, r13
45bfdf: mov qword ptr [rsp + 0x68], rax
45bfe4: call 0x456100
45bfe9: lea rdx, [rsp + 0x68]
45bfee: xor r8d, r8d
45bff1: mov r9, r15
45bff4: mov eax, dword ptr [rsp + 0xd8]
45bffb: push rax
45bffc: push 0
45bffe: mov rcx, qword ptr [rsp + 0x20]
45c003: mov rsi, qword ptr [rsp + 0x50]
45c008: mov rdi, qword ptr [rsp + 0x48]
45c00d: call r13
45c010: pop rsi
45c011: pop rdi
45c012: cmp eax, 4
45c015: mov r10d, dword ptr [rsp + 0x18]
45c01a: mov r13d, eax
45c01d: je 0x45c0a8
45c023: mov r10, qword ptr [rsp + 0x68]
45c028: mov rcx, qword ptr [rsp + 0x10]
45c02d: mov r11, qword ptr [rsp + 0x20]
45c032: cmp r10, rcx
45c035: jne 0x45c3f0
45c03b: test r13d, r13d
45c03e: jne 0x45c52a
45c044: mov rax, qword ptr [rsp]
45c048: mov r14, qword ptr [rbp]
45c04c: mov r11, qword ptr [rsp + 0x60]
45c051: mov r13d, dword ptr [rbp + 0x10]
45c055: mov r12, qword ptr [rax]
45c058: jmp 0x45bed0
45c05d: nop dword ptr [rax]
45c060: mov r10d, 5
45c066: jmp 0x45bf9e
45c06b: nop dword ptr [rax + rax]
45c070: shr edx, 7
45c073: cmp edx, 0x1c00
45c079: je 0x45c3c0
45c07f: cmp qword ptr [rsp + 0x48], 0
45c085: je 0x45c09a
45c087: test byte ptr [rbp + 0x10], 8
45c08b: jne 0x45c340
45c091: test r10d, r10d
45c094: jne 0x45c3d0
45c09a: mov r10d, 6
45c0a0: jmp 0x45bf9e
45c0a5: nop dword ptr [rax]
45c0a8: mov r13d, r10d
45c0ab: cmp r10d, 5
45c0af: jne 0x45c03b
45c0b1: jmp 0x45c044
45c0b3: nop dword ptr [rax + rax]
45c0b8: mov rax, qword ptr [rbp + 0x20]
45c0bc: mov qword ptr [rsp + 0x10], rax
45c0c1: mov eax, dword ptr [rax]
45c0c3: mov ecx, eax
45c0c5: and ecx, 7
45c0c8: je 0x45bec5
45c0ce: test rdi, rdi
45c0d1: jne 0x45c9d7
45c0d7: mov qword ptr [rsp + 0x70], r12
45c0dc: mov qword ptr [rsp + 0x78], r14
45c0e1: cmp ecx, 4
45c0e4: ja 0x45c994
45c0ea: mov rdi, qword ptr [rsp + 0x10]
45c0ef: movsxd rdx, ecx
45c0f2: movzx esi, byte ptr [rdi + 4]
45c0f6: mov byte ptr [rsp + 0x84], sil
45c0fe: cmp ecx, 1
45c101: je 0x45c130
45c103: movzx ecx, byte ptr [rdi + 5]
45c107: mov byte ptr [rsp + 0x85], cl
45c10e: cmp rdx, 2
45c112: je 0x45c130
45c114: movzx ecx, byte ptr [rdi + 6]
45c118: mov byte ptr [rsp + 0x86], cl
45c11f: cmp rdx, 3
45c123: je 0x45c130
45c125: movzx ecx, byte ptr [rdi + 7]
45c129: mov byte ptr [rsp + 0x87], cl
45c130: mov rcx, r12
45c133: sub rcx, rdx
45c136: add rcx, 4
45c13a: cmp rbx, rcx
45c13d: jb 0x45c65a
45c143: mov r10d, 5
45c149: cmp r14, r11
45c14c: jae 0x45bf68
45c152: lea rcx, [r12 + 1]
45c157: lea r9, [rdx + 1]
45c15b: mov qword ptr [rsp + 0x70], rcx
45c160: movzx esi, byte ptr [r12]
45c165: mov qword ptr [rsp + 0x20], r9
45c16a: mov byte ptr [rsp + rdx + 0x84], sil
45c172: cmp r9, 3
45c176: ja 0x45c1cc
45c178: cmp rbx, rcx
45c17b: jbe 0x45c1cc
45c17d: lea rcx, [r12 + 2]
45c182: lea rsi, [rdx + 2]
45c186: mov qword ptr [rsp + 0x70], rcx
45c18b: movzx edi, byte ptr [r12 + 1]
45c191: mov byte ptr [rsp + rdx + 0x85], dil
45c199: cmp rbx, rcx
45c19c: jbe 0x45c650
45c1a2: cmp rsi, 3
45c1a6: ja 0x45c650
45c1ac: mov qword ptr [rsp + 0x20], 4
45c1b5: lea rcx, [r12 + 3]
45c1ba: mov qword ptr [rsp + 0x70], rcx
45c1bf: movzx ecx, byte ptr [r12 + 2]
45c1c5: mov byte ptr [rsp + 0x87], cl
45c1cc: mov ecx, dword ptr [rsp + 0x84]
45c1d3: lea rdi, [rsp + 0x84]
45c1db: mov qword ptr [rsp + 0x18], rdi
45c1e0: mov qword ptr [rsp + 0x70], rdi
45c1e5: cmp ecx, 0x7f
45c1e8: ja 0x45c6fd
45c1ee: lea rax, [r14 + 1]
45c1f2: mov qword ptr [rsp + 0x78], rax
45c1f7: mov byte ptr [r14], cl
45c1fa: mov rax, qword ptr [rsp + 0x70]
45c1ff: add rax, 4
45c203: mov qword ptr [rsp + 0x70], rax
45c208: cmp rax, rdi
45c20b: je 0x45c633
45c211: sub rax, rdi
45c214: mov r12, rax
45c217: mov rax, qword ptr [rsp + 0x10]
45c21c: mov eax, dword ptr [rax]
45c21e: mov edx, eax
45c220: and edx, 7
45c223: cmp rdx, r12
45c226: jge 0x45c9b8
45c22c: mov rdi, qword ptr [rsp]
45c230: sub r12, rdx
45c233: and eax, 0xfffffff8
45c236: mov r14, qword ptr [rsp + 0x78]
45c23b: mov qword ptr [rsp + 0x28], r11
45c240: mov r13d, dword ptr [rbp + 0x10]
45c244: add r12, qword ptr [rdi]
45c247: mov qword ptr [rdi], r12
45c24a: mov rdi, qword ptr [rsp + 0x10]
45c24f: mov dword ptr [rdi], eax
45c251: mov rax, qword ptr [rsp + 0x60]
45c256: mov r11, rax
45c259: jmp 0x45bed0
45c25e: nop 
45c260: mov qword ptr [rbp], rcx
45c264: mov rax, qword ptr [rsp + 0x60]
45c269: add qword ptr [r15], rax
45c26c: mov eax, dword ptr [rsp + 0xd8]
45c273: test eax, eax
45c275: je 0x45bf68
45c27b: cmp r10d, 7
45c27f: jne 0x45bf68
45c285: mov rax, qword ptr [rsp]
45c289: mov rdx, rbx
45c28c: mov rax, qword ptr [rax]
45c28f: sub rdx, rax
45c292: cmp rdx, 3
45c296: jg 0x45c975
45c29c: mov rdx, qword ptr [rbp + 0x20]
45c2a0: cmp rax, rbx
45c2a3: jae 0x45c7dd
45c2a9: mov rdi, qword ptr [rsp]
45c2ad: lea rcx, [rax + 1]
45c2b1: mov qword ptr [rdi], rcx
45c2b4: movzx esi, byte ptr [rax]
45c2b7: mov byte ptr [rdx + 4], sil
45c2bb: cmp rbx, rcx
45c2be: jbe 0x45c330
45c2c0: lea rcx, [rax + 2]
45c2c4: mov qword ptr [rdi], rcx
45c2c7: movzx esi, byte ptr [rax + 1]
45c2cb: mov byte ptr [rdx + 5], sil
45c2cf: cmp rbx, rcx
45c2d2: jbe 0x45c330
45c2d4: lea rcx, [rax + 3]
45c2d8: mov qword ptr [rdi], rcx
45c2db: movzx esi, byte ptr [rax + 2]
45c2df: mov byte ptr [rdx + 6], sil
45c2e3: cmp rbx, rcx
45c2e6: jbe 0x45c330
45c2e8: lea rcx, [rax + 4]
45c2ec: mov qword ptr [rdi], rcx
45c2ef: movzx esi, byte ptr [rax + 3]
45c2f3: mov byte ptr [rdx + 7], sil
45c2f7: cmp rbx, rcx
45c2fa: jbe 0x45c330
45c2fc: lea rcx, [rax + 5]
45c300: mov qword ptr [rdi], rcx
45c303: movzx esi, byte ptr [rax + 4]
45c307: mov byte ptr [rdx + 8], sil
45c30b: cmp rbx, rcx
45c30e: jbe 0x45c330
45c310: lea rsi, [rdx + 9]
45c314: mov rdi, qword ptr [rsp]
45c318: add rcx, 1
45c31c: add rsi, 1
45c320: mov qword ptr [rdi], rcx
45c323: movzx edi, byte ptr [rcx - 1]
45c327: mov byte ptr [rsi - 1], dil
45c32b: cmp rcx, rbx
45c32e: jne 0x45c314
45c330: sub ebx, eax
45c332: mov eax, dword ptr [rdx]
45c334: and eax, 0xfffffff8
45c337: or eax, ebx
45c339: mov dword ptr [rdx], eax
45c33b: jmp 0x45bf68
45c340: mov qword ptr [rsp + 0x18], r11
45c345: lea rcx, [rsp + 0x70]
45c34a: mov r8, rbx
45c34d: mov rsi, rbp
45c350: mov dword ptr [rsp + 0x10], r10d
45c355: sub rsp, 8
45c359: push qword ptr [rsp + 0x50]
45c35d: mov rax, qword ptr [rsp + 0x10]
45c362: mov rdi, qword ptr [rsp + 0x60]
45c367: mov rdx, qword ptr [rax]
45c36a: lea r9, [rsp + 0x88]
45c372: call 0x461780
45c377: pop r8
45c379: pop r9
45c37b: mov edi, eax
45c37d: mov rcx, qword ptr [rsp + 0x78]
45c382: mov rax, qword ptr [rsp + 0x70]
45c387: cmp edi, 6
45c38a: mov r10d, dword ptr [rsp + 0x10]
45c38f: mov r11, qword ptr [rsp + 0x18]
45c394: je 0x45c091
45c39a: cmp edi, 5
45c39d: jne 0x45bf45
45c3a3: jmp 0x45bf4a
45c3a8: nop dword ptr [rax + rax]
45c3b0: mov r13d, r10d
45c3b3: jmp 0x45c03b
45c3b8: nop dword ptr [rax + rax]
45c3c0: mov qword ptr [rsp + 0x70], rsi
45c3c5: mov rax, rsi
45c3c8: jmp 0x45bf45
45c3cd: nop dword ptr [rax]
45c3d0: mov rdi, qword ptr [rsp + 0x48]
45c3d5: add rax, 4
45c3d9: mov qword ptr [rsp + 0x70], rax
45c3de: add qword ptr [rdi], 1
45c3e2: mov edi, 6
45c3e7: jmp 0x45bf45
45c3ec: nop dword ptr [rax]
45c3f0: xor eax, eax
45c3f2: test r15, r15
45c3f5: je 0x45c3fa
45c3f7: mov rax, qword ptr [r15]
45c3fa: add rax, qword ptr [rsp + 0x60]
45c3ff: cmp rax, r11
45c402: je 0x45c4a7
45c408: mov rax, qword ptr [rsp]
45c40c: mov qword ptr [rsp + 0x70], r12
45c411: mov qword ptr [rsp + 0x78], r14
45c416: mov qword ptr [rax], r12
45c419: mov eax, dword ptr [rbp + 0x10]
45c41c: cmp rbx, r12
45c41f: je 0x45c7e4
45c425: and eax, 2
45c428: mov esi, 4
45c42d: mov r11d, eax
45c430: mov rax, r14
45c433: lea rcx, [r12 + 4]
45c438: cmp rbx, rcx
45c43b: jb 0x45c532
45c441: cmp r10, rax
45c444: jbe 0x45c5c0
45c44a: mov edx, dword ptr [r12]
45c44e: cmp edx, 0x7f
45c451: ja 0x45c5e0
45c457: lea rcx, [rax + 1]
45c45b: mov qword ptr [rsp + 0x78], rcx
45c460: mov byte ptr [rax], dl
45c462: mov rax, qword ptr [rsp + 0x70]
45c467: lea r12, [rax + 4]
45c46b: mov rax, qword ptr [rsp + 0x78]
45c470: mov qword ptr [rsp + 0x70], r12
45c475: cmp rbx, r12
45c478: jne 0x45c433
45c47a: mov rdi, qword ptr [rsp]
45c47e: mov qword ptr [rdi], rbx
45c481: cmp qword ptr [rsp + 0x68], rax
45c486: jne 0x45c544
45c48c: cmp esi, 5
45c48f: jne 0x45c7ed
45c495: cmp r14, rax
45c498: jne 0x45c03b
45c49e: sub dword ptr [rbp + 0x14], 1
45c4a2: jmp 0x45c03b
45c4a7: mov rdi, qword ptr [rsp]
45c4ab: sub rcx, r10
45c4ae: lea rax, [rcx*4]
45c4b6: sub qword ptr [rdi], rax
45c4b9: jmp 0x45c03b
45c4be: cmp qword ptr [rsp + 8], 0
45c4c4: jne 0x45c956
45c4ca: mov rax, qword ptr [rbp + 0x20]
45c4ce: xor r10d, r10d
45c4d1: mov qword ptr [rax], 0
45c4d8: test byte ptr [rbp + 0x10], 1
45c4dc: jne 0x45bf68
45c4e2: mov rbx, qword ptr [rsp + 0x30]
45c4e7: mov rdi, rbx
45c4ea: call 0x456100
45c4ef: mov eax, dword ptr [rsp + 0xd8]
45c4f6: xor edx, edx
45c4f8: xor ecx, ecx
45c4fa: mov r9, r15
45c4fd: xor r8d, r8d
45c500: push rax
45c501: push r12
45c503: mov rsi, qword ptr [rsp + 0x50]
45c508: mov rdi, qword ptr [rsp + 0x48]
45c50d: call rbx
45c50f: mov r10d, eax
45c512: pop rax
45c513: pop rdx
45c514: jmp 0x45bf68
45c519: mov rcx, r14
45c51c: mov rax, rbx
45c51f: mov r10d, 4
45c525: jmp 0x45bf9e
45c52a: mov r10d, r13d
45c52d: jmp 0x45c26c
45c532: mov rdi, qword ptr [rsp]
45c536: mov qword ptr [rdi], r12
45c539: cmp rax, qword ptr [rsp + 0x68]
45c53e: je 0x45c7ed
45c544: lea rcx, [rip + 0x3e015]
45c54b: mov edx, 0x2ea
45c550: lea rsi, [rip + 0x3dce3]
45c557: lea rdi, [rip + 0x3dd04]
45c55e: call 0x4032a0
45c563: mov dword ptr [rsp + 0x18], r11d
45c568: lea rcx, [rsp + 0x70]
45c56d: mov rsi, rbp
45c570: mov r8, rbx
45c573: mov qword ptr [rsp + 0x10], r10
45c578: sub rsp, 8
45c57c: push qword ptr [rsp + 0x50]
45c580: mov rax, qword ptr [rsp + 0x10]
45c585: mov rdi, qword ptr [rsp + 0x60]
45c58a: mov rdx, qword ptr [rax]
45c58d: lea r9, [rsp + 0x88]
45c595: call 0x461780
45c59a: pop rdx
45c59b: pop rcx
45c59c: mov esi, eax
45c59e: mov r12, qword ptr [rsp + 0x70]
45c5a3: mov rax, qword ptr [rsp + 0x78]
45c5a8: cmp esi, 6
45c5ab: mov r10, qword ptr [rsp + 0x10]
45c5b0: mov r11d, dword ptr [rsp + 0x18]
45c5b5: je 0x45c605
45c5b7: cmp esi, 5
45c5ba: jne 0x45c475
45c5c0: mov rdx, rax
45c5c3: mov rax, qword ptr [rsp]
45c5c7: mov qword ptr [rax], r12
45c5ca: mov rax, qword ptr [rsp + 0x68]
45c5cf: cmp rdx, rax
45c5d2: je 0x45c495
45c5d8: jmp 0x45c544
45c5dd: nop dword ptr [rax]
45c5e0: shr edx, 7
45c5e3: cmp edx, 0x1c00
45c5e9: je 0x45c754
45c5ef: cmp qword ptr [rsp + 0x48], 0
45c5f5: je 0x45c532
45c5fb: test byte ptr [rbp + 0x10], 8
45c5ff: jne 0x45c563
45c605: test r11d, r11d
45c608: je 0x45c532
45c60e: mov rdi, qword ptr [rsp + 0x48]
45c613: add r12, 4
45c617: mov esi, 6
45c61c: mov qword ptr [rsp + 0x70], r12
45c621: add qword ptr [rdi], 1
45c625: jmp 0x45c475
45c62a: test r10d, r10d
45c62d: jne 0x45bf68
45c633: mov rax, qword ptr [rsp + 0x60]
45c638: mov rdi, qword ptr [rsp]
45c63c: mov qword ptr [rsp + 0x28], r11
45c641: mov r13d, dword ptr [rbp + 0x10]
45c645: mov r12, qword ptr [rdi]
45c648: mov r11, rax
45c64b: jmp 0x45bed0
45c650: mov qword ptr [rsp + 0x20], rsi
45c655: jmp 0x45c1cc
45c65a: mov rax, qword ptr [rsp]
45c65e: mov qword ptr [rax], rbx
45c661: cmp r12, rbx
45c664: jae 0x45c6f2
45c66a: lea rax, [r12 + 1]
45c66f: mov r8, qword ptr [rsp + 0x10]
45c674: mov qword ptr [rsp + 0x70], rax
45c679: movzx esi, byte ptr [r12]
45c67e: mov byte ptr [r8 + rdx + 4], sil
45c683: cmp rbx, rax
45c686: jbe 0x45c6f2
45c688: lea rax, [r12 + 2]
45c68d: mov qword ptr [rsp + 0x70], rax
45c692: movzx edi, byte ptr [r12 + 1]
45c698: mov byte ptr [r8 + rdx + 5], dil
45c69d: cmp rbx, rax
45c6a0: jbe 0x45c6f2
45c6a2: lea rax, [r12 + 3]
45c6a7: mov qword ptr [rsp + 0x70], rax
45c6ac: movzx edi, byte ptr [r12 + 2]
45c6b2: mov byte ptr [r8 + rdx + 6], dil
45c6b7: cmp rbx, rax
45c6ba: jbe 0x45c6f2
45c6bc: lea rax, [r12 + 4]
45c6c1: mov qword ptr [rsp + 0x70], rax
45c6c6: movzx esi, byte ptr [r12 + 3]
45c6cc: mov byte ptr [r8 + rdx + 7], sil
45c6d1: cmp rbx, rax
45c6d4: jbe 0x45c6f2
45c6d6: add rdx, r8
45c6d9: add rax, 1
45c6dd: add rdx, 1
45c6e1: mov qword ptr [rsp + 0x70], rax
45c6e6: movzx ecx, byte ptr [rax - 1]
45c6ea: mov byte ptr [rdx + 7], cl
45c6ed: cmp rbx, rax
45c6f0: jne 0x45c6d9
45c6f2: mov r10d, 7
45c6f8: jmp 0x45bf68
45c6fd: shr ecx, 7
45c700: cmp ecx, 0x1c00
45c706: je 0x45c761
45c708: cmp qword ptr [rsp + 0x48], 0
45c70e: je 0x45c749
45c710: test r13b, 8
45c714: jne 0x45c779
45c716: and r13d, 2
45c71a: mov r10d, 6
45c720: mov rax, rdi
45c723: je 0x45bf68
45c729: mov rdi, qword ptr [rsp + 0x48]
45c72e: add rax, 4
45c732: mov qword ptr [rsp + 0x70], rax
45c737: add qword ptr [rdi], 1
45c73b: mov rdi, qword ptr [rsp + 0x18]
45c740: cmp rax, rdi
45c743: jne 0x45c211
45c749: mov r10d, 6
45c74f: jmp 0x45bf68
45c754: mov qword ptr [rsp + 0x70], rcx
45c759: mov r12, rcx
45c75c: jmp 0x45c475
45c761: lea rcx, [rsp + 0x88]
45c769: mov r12d, 4
45c76f: mov qword ptr [rsp + 0x70], rcx
45c774: jmp 0x45c223
45c779: mov qword ptr [rsp + 0x58], r11
45c77e: mov r8, rdi
45c781: lea rcx, [rsp + 0x70]
45c786: mov rdx, r12
45c789: add r8, qword ptr [rsp + 0x20]
45c78e: sub rsp, 8
45c792: mov rsi, rbp
45c795: push qword ptr [rsp + 0x50]
45c799: mov rdi, qword ptr [rsp + 0x60]
45c79e: lea r9, [rsp + 0x88]
45c7a6: mov qword ptr [rsp + 0x38], r8
45c7ab: call 0x461780
45c7b0: pop r11
45c7b2: pop r12
45c7b4: mov r10d, eax
45c7b7: mov r11, qword ptr [rsp + 0x58]
45c7bc: mov rax, qword ptr [rsp + 0x70]
45c7c1: cmp r10d, 6
45c7c5: je 0x45c80c
45c7c7: cmp rax, qword ptr [rsp + 0x18]
45c7cc: mov r8, qword ptr [rsp + 0x28]
45c7d1: je 0x45c81b
45c7d3: sub rax, qword ptr [rsp + 0x18]
45c7d8: jmp 0x45c214
45c7dd: xor ebx, ebx
45c7df: jmp 0x45c332
45c7e4: cmp r10, r14
45c7e7: jne 0x45c544
45c7ed: lea rcx, [rip + 0x3dd6c]
45c7f4: mov edx, 0x2eb
45c7f9: lea rsi, [rip + 0x3da3a]
45c800: lea rdi, [rip + 0x3dad9]
45c807: call 0x4032a0
45c80c: and r13b, 2
45c810: je 0x45c73b
45c816: jmp 0x45c729
45c81b: cmp r10d, 7
45c81f: jne 0x45c62a
45c825: lea rdx, [rsp + 0x88]
45c82d: cmp r8, rdx
45c830: je 0x45ca15
45c836: mov rax, qword ptr [rsp + 0x10]
45c83b: mov rdi, qword ptr [rsp + 0x20]
45c840: mov eax, dword ptr [rax]
45c842: mov rbx, rdi
45c845: mov ecx, eax
45c847: and eax, 0xfffffff8
45c84a: and ecx, 7
45c84d: sub rbx, rcx
45c850: mov rcx, rbx
45c853: mov rbx, qword ptr [rsp]
45c857: add qword ptr [rbx], rcx
45c85a: movsxd rcx, eax
45c85d: cmp rcx, rdi
45c860: jge 0x45c9f6
45c866: cmp qword ptr [rsp + 0x20], 4
45c86c: ja 0x45c937
45c872: mov rdi, qword ptr [rsp + 0x10]
45c877: or eax, dword ptr [rsp + 0x20]
45c87b: mov dword ptr [rdi], eax
45c87d: cmp r8, qword ptr [rsp + 0x18]
45c882: jbe 0x45c6f2
45c888: movzx eax, byte ptr [rsp + 0x84]
45c890: mov byte ptr [rdi + 4], al
45c893: lea rax, [rsp + 0x85]
45c89b: cmp r8, rax
45c89e: jbe 0x45c6f2
45c8a4: movzx eax, byte ptr [rsp + 0x85]
45c8ac: mov byte ptr [rdi + 5], al
45c8af: lea rax, [rsp + 0x86]
45c8b7: cmp r8, rax
45c8ba: jbe 0x45c6f2
45c8c0: movzx eax, byte ptr [rsp + 0x86]
45c8c8: mov byte ptr [rdi + 6], al
45c8cb: lea rax, [rsp + 0x87]
45c8d3: cmp r8, rax
45c8d6: jbe 0x45c6f2
45c8dc: movzx eax, byte ptr [rsp + 0x87]
45c8e4: mov byte ptr [rdi + 7], al
45c8e7: cmp r8, rdx
45c8ea: jbe 0x45c6f2
45c8f0: movzx edx, byte ptr [rsp + 0x88]
45c8f8: lea rax, [rsp + 0x89]
45c900: mov qword ptr [rsp + 0x70], rax
45c905: mov byte ptr [rdi + 8], dl
45c908: cmp r8, rax
45c90b: jbe 0x45c6f2
45c911: add rdi, 9
45c915: mov r11, rdi
45c918: add rax, 1
45c91c: add r11, 1
45c920: mov qword ptr [rsp + 0x70], rax
45c925: movzx edx, byte ptr [rax - 1]
45c929: mov byte ptr [r11 - 1], dl
45c92d: cmp r8, rax
45c930: jne 0x45c918
45c932: jmp 0x45c6f2
45c937: lea rcx, [rip + 0x3dde2]
45c93e: mov edx, 0x1e6
45c943: lea rsi, [rip + 0x3d962]
45c94a: lea rdi, [rip + 0x3da57]
45c951: call 0x4032a0
45c956: lea rcx, [rip + 0x3dc03]
45c95d: mov edx, 0x1a4
45c962: lea rsi, [rip + 0x3d8d1]
45c969: lea rdi, [rip + 0x3d8de]
45c970: call 0x4032a0
45c975: lea rcx, [rip + 0x3dbe4]
45c97c: mov edx, 0x31e
45c981: lea rsi, [rip + 0x3d8b2]
45c988: lea rdi, [rip + 0x3d8e4]
45c98f: call 0x4032a0
45c994: lea rcx, [rip + 0x3dd85]
45c99b: mov edx, 0x18b
45c9a0: lea rsi, [rip + 0x3d905]
45c9a7: lea rdi, [rip + 0x3d952]
45c9ae: call 0x4032a0
45c9b3: call 0x4547a0
45c9b8: lea rcx, [rip + 0x3dd61]
45c9bf: mov edx, 0x1c9
45c9c4: lea rsi, [rip + 0x3d8e1]
45c9cb: lea rdi, [rip + 0x3d95e]
45c9d2: call 0x4032a0
45c9d7: lea rcx, [rip + 0x3db82]
45c9de: mov edx, 0x234
45c9e3: lea rsi, [rip + 0x3d850]
45c9ea: lea rdi, [rip + 0x3d85d]
45c9f1: call 0x4032a0
45c9f6: lea rcx, [rip + 0x3dd23]
45c9fd: mov edx, 0x1e5
45ca02: lea rsi, [rip + 0x3d8a3]
45ca09: lea rdi, [rip + 0x3d970]
45ca10: call 0x4032a0
45ca15: lea rcx, [rip + 0x3dd04]
45ca1c: mov edx, 0x1db
45ca21: lea rsi, [rip + 0x3d884]
45ca28: lea rdi, [rip + 0x3d929]
45ca2f: call 0x4032a0
45ca34: nop word ptr cs:[rax + rax]
45ca3f: nop 
45ca40: endbr64 
45ca44: push r15
45ca46: mov r11, rdx
45ca49: push r14
45ca4b: push r13
45ca4d: push r12
45ca4f: push rbp
45ca50: mov rbp, rsi
45ca53: push rbx
45ca54: mov rbx, rcx
45ca57: sub rsp, 0x98
45ca5e: mov r14d, dword ptr [rsi + 0x10]
45ca62: mov qword ptr [rsp + 0x48], rdi
45ca67: mov r12d, dword ptr [rsp + 0xd0]
45ca6f: mov qword ptr [rsp], r8
45ca73: mov qword ptr [rsp + 0x20], r9
45ca78: mov rax, qword ptr fs:[0x28]
45ca81: mov qword ptr [rsp + 0x88], rax
45ca89: xor eax, eax
45ca8b: lea rax, [rdi + 0x68]
45ca8f: mov qword ptr [rsp + 0x28], 0
45ca98: mov qword ptr [rsp + 0x30], rax
45ca9d: lea rax, [rsi + 0x30]
45caa1: mov qword ptr [rsp + 0x38], rax
45caa6: test r14b, 1
45caaa: jne 0x45cad1
45caac: mov rax, qword ptr [rdi + 0x90]
45cab3: cmp qword ptr [rdi + 0x68], 0
45cab8: mov qword ptr [rsp + 0x28], rax
45cabd: je 0x45cad1
45cabf: ror rax, 0x11
45cac3: xor rax, qword ptr fs:[0x30]
45cacc: mov qword ptr [rsp + 0x28], rax
45cad1: test r12d, r12d
45cad4: jne 0x45d0fe
45cada: mov rdi, qword ptr [rsp]
45cade: lea rdx, [rsp + 0x60]
45cae3: mov ecx, dword ptr [rsp + 0xd8]
45caea: mov r12, qword ptr [r11]
45caed: mov r13, qword ptr [rbp + 8]
45caf1: test rdi, rdi
45caf4: mov rax, rdi
45caf7: cmove rax, rbp
45cafb: cmp qword ptr [rsp + 0x20], 0
45cb01: mov r15, qword ptr [rax]
45cb04: mov eax, 0
45cb09: mov qword ptr [rsp + 0x60], 0
45cb12: cmovne rax, rdx
45cb16: mov qword ptr [rsp + 0x40], rax
45cb1b: test ecx, ecx
45cb1d: jne 0x45cda8
45cb23: nop dword ptr [rax + rax]
45cb28: mov qword ptr [rsp + 0x70], r12
45cb2d: mov qword ptr [rsp + 0x78], r15
45cb32: cmp rbx, r12
45cb35: je 0x45d209
45cb3b: and r14d, 2
45cb3f: mov rcx, r15
45cb42: mov rax, r12
45cb45: mov r10d, 4
45cb4b: lea rdx, [rax + 4]
45cb4f: cmp rbx, rdx
45cb52: jb 0x45cc50
45cb58: cmp r13, rcx
45cb5b: jbe 0x45cca0
45cb61: mov edx, dword ptr [rax]
45cb63: cmp edx, 0x7f
45cb66: ja 0x45ccb0
45cb6c: lea rax, [rcx + 1]
45cb70: mov qword ptr [rsp + 0x78], rax
45cb75: mov byte ptr [rcx], dl
45cb77: mov rax, qword ptr [rsp + 0x70]
45cb7c: mov rcx, qword ptr [rsp + 0x78]
45cb81: add rax, 4
45cb85: mov qword ptr [rsp + 0x70], rax
45cb8a: cmp rbx, rax
45cb8d: jne 0x45cb4b
45cb8f: nop 
45cb90: cmp qword ptr [rsp], 0
45cb95: mov qword ptr [r11], rax
45cb98: jne 0x45cc64
45cb9e: add dword ptr [rbp + 0x14], 1
45cba2: test byte ptr [rbp + 0x10], 1
45cba6: jne 0x45cf40
45cbac: cmp r15, rcx
45cbaf: mov qword ptr [rsp + 8], rcx
45cbb4: jae 0x45d020
45cbba: mov r14, qword ptr [rsp + 0x28]
45cbbf: mov rax, qword ptr [rbp]
45cbc3: mov dword ptr [rsp + 0x18], r10d
45cbc8: mov qword ptr [rsp + 0x10], r11
45cbcd: mov rdi, r14
45cbd0: mov qword ptr [rsp + 0x68], rax
45cbd5: call 0x456100
45cbda: mov eax, dword ptr [rsp + 0xd8]
45cbe1: lea rdx, [rsp + 0x68]
45cbe6: xor r8d, r8d
45cbe9: push rax
45cbea: push 0
45cbec: mov r9, qword ptr [rsp + 0x30]
45cbf1: mov rcx, qword ptr [rsp + 0x18]
45cbf6: mov rsi, qword ptr [rsp + 0x48]
45cbfb: mov rdi, qword ptr [rsp + 0x40]
45cc00: call r14
45cc03: pop r8
45cc05: pop r9
45cc07: cmp eax, 4
45cc0a: mov r11, qword ptr [rsp + 0x10]
45cc0f: mov r10d, dword ptr [rsp + 0x18]
45cc14: mov r14d, eax
45cc17: je 0x45cd90
45cc1d: mov r10, qword ptr [rsp + 0x68]
45cc22: mov rcx, qword ptr [rsp + 8]
45cc27: cmp r10, rcx
45cc2a: jne 0x45d030
45cc30: test r14d, r14d
45cc33: jne 0x45d321
45cc39: mov r15, qword ptr [rbp]
45cc3d: mov r12, qword ptr [r11]
45cc40: mov r14d, dword ptr [rbp + 0x10]
45cc44: jmp 0x45cb28
45cc49: nop dword ptr [rax]
45cc50: cmp qword ptr [rsp], 0
45cc55: mov qword ptr [r11], rax
45cc58: mov r10d, 7
45cc5e: je 0x45cb9e
45cc64: mov rax, qword ptr [rsp]
45cc68: mov qword ptr [rax], rcx
45cc6b: mov rax, qword ptr [rsp + 0x88]
45cc73: xor rax, qword ptr fs:[0x28]
45cc7c: jne 0x45d8a4
45cc82: add rsp, 0x98
45cc89: mov eax, r10d
45cc8c: pop rbx
45cc8d: pop rbp
45cc8e: pop r12
45cc90: pop r13
45cc92: pop r14
45cc94: pop r15
45cc96: ret 
45cc97: nop word ptr [rax + rax]
45cca0: mov r10d, 5
45cca6: jmp 0x45cb90
45ccab: nop dword ptr [rax + rax]
45ccb0: lea esi, [rdx - 0xd800]
45ccb6: cmp esi, 0x7ff
45ccbc: jbe 0x45d0d8
45ccc2: test edx, edx
45ccc4: js 0x45d0d8
45ccca: test edx, 0xfffff800
45ccd0: je 0x45d21a
45ccd6: test edx, 0xffff0000
45ccdc: je 0x45d229
45cce2: test edx, 0xffe00000
45cce8: je 0x45d312
45ccee: mov esi, edx
45ccf0: and esi, 0xfc000000
45ccf6: cmp esi, 1
45ccf9: sbb edi, edi
45ccfb: and edi, 0xfffffffc
45ccfe: sub edi, 4
45cd01: cmp esi, 1
45cd04: sbb rsi, rsi
45cd07: add rsi, 6
45cd0b: lea r8, [rcx + rsi]
45cd0f: cmp r13, r8
45cd12: jb 0x45cca0
45cd14: mov eax, edx
45cd16: mov byte ptr [rcx], dil
45cd19: and eax, 0x3f
45cd1c: add qword ptr [rsp + 0x78], rsi
45cd21: or eax, 0xffffff80
45cd24: mov byte ptr [rcx + rsi - 1], al
45cd28: mov eax, edx
45cd2a: shr eax, 6
45cd2d: cmp rsi, 2
45cd31: je 0x45cd80
45cd33: and eax, 0x3f
45cd36: or eax, 0xffffff80
45cd39: mov byte ptr [rcx + rsi - 2], al
45cd3d: mov eax, edx
45cd3f: shr eax, 0xc
45cd42: cmp rsi, 3
45cd46: je 0x45cd80
45cd48: and eax, 0x3f
45cd4b: or eax, 0xffffff80
45cd4e: mov byte ptr [rcx + rsi - 3], al
45cd52: mov eax, edx
45cd54: shr eax, 0x12
45cd57: cmp rsi, 4
45cd5b: je 0x45cd80
45cd5d: and eax, 0x3f
45cd60: or eax, 0xffffff80
45cd63: mov byte ptr [rcx + rsi - 4], al
45cd67: mov eax, edx
45cd69: shr eax, 0x18
45cd6c: cmp rsi, 5
45cd70: je 0x45cd80
45cd72: and eax, 0x3f
45cd75: or eax, 0xffffff80
45cd78: mov byte ptr [rcx + 1], al
45cd7b: mov eax, edx
45cd7d: shr eax, 0x1e
45cd80: or byte ptr [rcx], al
45cd82: jmp 0x45cb77
45cd87: nop word ptr [rax + rax]
45cd90: mov r14d, r10d
45cd93: cmp r10d, 5
45cd97: jne 0x45cc30
45cd9d: jmp 0x45cc39
45cda2: nop word ptr [rax + rax]
45cda8: mov rax, qword ptr [rbp + 0x20]
45cdac: mov qword ptr [rsp + 8], rax
45cdb1: mov eax, dword ptr [rax]
45cdb3: mov dword ptr [rsp + 0x10], eax
45cdb7: and eax, 7
45cdba: je 0x45cb28
45cdc0: test rdi, rdi
45cdc3: jne 0x45d885
45cdc9: mov qword ptr [rsp + 0x70], r12
45cdce: mov qword ptr [rsp + 0x78], r15
45cdd3: cmp eax, 4
45cdd6: ja 0x45d8a9
45cddc: mov rsi, qword ptr [rsp + 8]
45cde1: movsxd rdx, eax
45cde4: movzx ecx, byte ptr [rsi + 4]
45cde8: mov byte ptr [rsp + 0x84], cl
45cdef: cmp eax, 1
45cdf2: je 0x45ce21
45cdf4: movzx eax, byte ptr [rsi + 5]
45cdf8: mov byte ptr [rsp + 0x85], al
45cdff: cmp rdx, 2
45ce03: je 0x45ce21
45ce05: movzx eax, byte ptr [rsi + 6]
45ce09: mov byte ptr [rsp + 0x86], al
45ce10: cmp rdx, 3
45ce14: je 0x45ce21
45ce16: movzx eax, byte ptr [rsi + 7]
45ce1a: mov byte ptr [rsp + 0x87], al
45ce21: mov rax, r12
45ce24: sub rax, rdx
45ce27: add rax, 4
45ce2b: cmp rbx, rax
45ce2e: jb 0x45d3ba
45ce34: cmp r15, r13
45ce37: jae 0x45d388
45ce3d: lea rax, [r12 + 1]
45ce42: lea rsi, [rdx + 1]
45ce46: mov qword ptr [rsp + 0x70], rax
45ce4b: movzx ecx, byte ptr [r12]
45ce50: mov qword ptr [rsp + 0x18], rsi
45ce55: mov byte ptr [rsp + rdx + 0x84], cl
45ce5c: cmp rsi, 3
45ce60: ja 0x45ceb5
45ce62: cmp rbx, rax
45ce65: jbe 0x45ceb5
45ce67: lea rax, [r12 + 2]
45ce6c: add rdx, 2
45ce70: mov qword ptr [rsp + 0x70], rax
45ce75: movzx ecx, byte ptr [r12 + 1]
45ce7b: mov byte ptr [rsp + rsi + 0x84], cl
45ce82: cmp rdx, 3
45ce86: ja 0x45d3b0
45ce8c: cmp rbx, rax
45ce8f: jbe 0x45d3b0
45ce95: mov qword ptr [rsp + 0x18], 4
45ce9e: lea rax, [r12 + 3]
45cea3: mov qword ptr [rsp + 0x70], rax
45cea8: movzx eax, byte ptr [r12 + 2]
45ceae: mov byte ptr [rsp + 0x87], al
45ceb5: lea rax, [rsp + 0x84]
45cebd: mov qword ptr [rsp + 0x10], rax
45cec2: mov qword ptr [rsp + 0x70], rax
45cec7: mov eax, dword ptr [rsp + 0x84]
45cece: cmp eax, 0x7f
45ced1: ja 0x45d459
45ced7: lea rdx, [r15 + 1]
45cedb: mov qword ptr [rsp + 0x78], rdx
45cee0: mov byte ptr [r15], al
45cee3: mov rax, qword ptr [rsp + 0x70]
45cee8: add rax, 4
45ceec: mov qword ptr [rsp + 0x70], rax
45cef1: cmp rax, qword ptr [rsp + 0x10]
45cef6: je 0x45cc3d
45cefc: mov rsi, qword ptr [rsp + 8]
45cf01: sub rax, qword ptr [rsp + 0x10]
45cf06: mov edx, dword ptr [rsi]
45cf08: mov ecx, edx
45cf0a: and ecx, 7
45cf0d: cmp rax, rcx
45cf10: jle 0x45d866
45cf16: sub rax, rcx
45cf19: add rax, qword ptr [r11]
45cf1c: and edx, 0xfffffff8
45cf1f: mov r15, qword ptr [rsp + 0x78]
45cf24: mov qword ptr [r11], rax
45cf27: mov r12, rax
45cf2a: mov rax, qword ptr [rsp + 8]
45cf2f: mov r14d, dword ptr [rbp + 0x10]
45cf33: mov dword ptr [rax], edx
45cf35: jmp 0x45cb28
45cf3a: nop word ptr [rax + rax]
45cf40: mov rsi, qword ptr [rsp + 0x20]
45cf45: mov rax, qword ptr [rsp + 0x60]
45cf4a: mov qword ptr [rbp], rcx
45cf4e: add qword ptr [rsi], rax
45cf51: mov eax, dword ptr [rsp + 0xd8]
45cf58: test eax, eax
45cf5a: je 0x45cc6b
45cf60: cmp r10d, 7
45cf64: jne 0x45cc6b
45cf6a: mov rax, qword ptr [r11]
45cf6d: mov rdx, rbx
45cf70: sub rdx, rax
45cf73: cmp rdx, 3
45cf77: jg 0x45d604
45cf7d: mov rdx, qword ptr [rbp + 0x20]
45cf81: cmp rax, rbx
45cf84: jae 0x45d588
45cf8a: lea rcx, [rax + 1]
45cf8e: mov qword ptr [r11], rcx
45cf91: movzx esi, byte ptr [rax]
45cf94: mov byte ptr [rdx + 4], sil
45cf98: cmp rbx, rcx
45cf9b: jbe 0x45d009
45cf9d: lea rcx, [rax + 2]
45cfa1: mov qword ptr [r11], rcx
45cfa4: movzx esi, byte ptr [rax + 1]
45cfa8: mov byte ptr [rdx + 5], sil
45cfac: cmp rbx, rcx
45cfaf: jbe 0x45d009
45cfb1: lea rcx, [rax + 3]
45cfb5: mov qword ptr [r11], rcx
45cfb8: movzx esi, byte ptr [rax + 2]
45cfbc: mov byte ptr [rdx + 6], sil
45cfc0: cmp rbx, rcx
45cfc3: jbe 0x45d009
45cfc5: lea rcx, [rax + 4]
45cfc9: mov qword ptr [r11], rcx
45cfcc: movzx esi, byte ptr [rax + 3]
45cfd0: mov byte ptr [rdx + 7], sil
45cfd4: cmp rbx, rcx
45cfd7: jbe 0x45d009
45cfd9: lea rcx, [rax + 5]
45cfdd: mov qword ptr [r11], rcx
45cfe0: movzx esi, byte ptr [rax + 4]
45cfe4: mov byte ptr [rdx + 8], sil
45cfe8: cmp rbx, rcx
45cfeb: jbe 0x45d009
45cfed: lea rsi, [rdx + 9]
45cff1: add rcx, 1
45cff5: add rsi, 1
45cff9: mov qword ptr [r11], rcx
45cffc: movzx edi, byte ptr [rcx - 1]
45d000: mov byte ptr [rsi - 1], dil
45d004: cmp rcx, rbx
45d007: jne 0x45cff1
45d009: sub ebx, eax
45d00b: mov eax, dword ptr [rdx]
45d00d: and eax, 0xfffffff8
45d010: or eax, ebx
45d012: mov dword ptr [rdx], eax
45d014: jmp 0x45cc6b
45d019: nop dword ptr [rax]
45d020: mov r14d, r10d
45d023: jmp 0x45cc30
45d028: nop dword ptr [rax + rax]
45d030: mov qword ptr [r11], r12
45d033: mov eax, dword ptr [rbp + 0x10]
45d036: mov qword ptr [rsp + 0x70], r12
45d03b: mov qword ptr [rsp + 0x78], r15
45d040: cmp rbx, r12
45d043: je 0x45d575
45d049: and eax, 2
45d04c: mov esi, 4
45d051: mov dword ptr [rsp + 8], eax
45d055: mov rax, r15
45d058: lea rdx, [r12 + 4]
45d05d: cmp rbx, rdx
45d060: jb 0x45d15a
45d066: cmp r10, rax
45d069: jbe 0x45d1e3
45d06f: mov edx, dword ptr [r12]
45d073: cmp edx, 0x7f
45d076: ja 0x45d238
45d07c: lea rcx, [rax + 1]
45d080: mov qword ptr [rsp + 0x78], rcx
45d085: mov byte ptr [rax], dl
45d087: mov rax, qword ptr [rsp + 0x70]
45d08c: lea r12, [rax + 4]
45d090: mov rax, qword ptr [rsp + 0x78]
45d095: mov qword ptr [rsp + 0x70], r12
45d09a: cmp rbx, r12
45d09d: jne 0x45d058
45d09f: mov qword ptr [r11], rbx
45d0a2: cmp qword ptr [rsp + 0x68], rax
45d0a7: jne 0x45d168
45d0ad: cmp esi, 5
45d0b0: je 0x45d1f7
45d0b6: lea rcx, [rip + 0x3d483]
45d0bd: mov edx, 0x2eb
45d0c2: lea rsi, [rip + 0x3d171]
45d0c9: lea rdi, [rip + 0x3d210]
45d0d0: call 0x4032a0
45d0d5: nop dword ptr [rax]
45d0d8: cmp qword ptr [rsp + 0x40], 0
45d0de: je 0x45d0f3
45d0e0: test byte ptr [rbp + 0x10], 8
45d0e4: jne 0x45d329
45d0ea: test r14d, r14d
45d0ed: jne 0x45d393
45d0f3: mov r10d, 6
45d0f9: jmp 0x45cb90
45d0fe: cmp qword ptr [rsp], 0
45d103: jne 0x45d847
45d109: mov rax, qword ptr [rbp + 0x20]
45d10d: xor r10d, r10d
45d110: mov qword ptr [rax], 0
45d117: test byte ptr [rbp + 0x10], 1
45d11b: jne 0x45cc6b
45d121: mov rbx, qword ptr [rsp + 0x28]
45d126: mov rdi, rbx
45d129: call 0x456100
45d12e: mov eax, dword ptr [rsp + 0xd8]
45d135: xor ecx, ecx
45d137: xor edx, edx
45d139: xor r8d, r8d
45d13c: push rax
45d13d: push r12
45d13f: mov r9, qword ptr [rsp + 0x30]
45d144: mov rsi, qword ptr [rsp + 0x48]
45d149: mov rdi, qword ptr [rsp + 0x40]
45d14e: call rbx
45d150: pop rsi
45d151: pop rdi
45d152: mov r10d, eax
45d155: jmp 0x45cc6b
45d15a: mov qword ptr [r11], r12
45d15d: cmp rax, qword ptr [rsp + 0x68]
45d162: je 0x45d0b6
45d168: lea rcx, [rip + 0x3d3d1]
45d16f: mov edx, 0x2ea
45d174: lea rsi, [rip + 0x3d0bf]
45d17b: lea rdi, [rip + 0x3d0e0]
45d182: call 0x4032a0
45d187: mov qword ptr [rsp + 0x18], r10
45d18c: lea rcx, [rsp + 0x70]
45d191: mov rdx, qword ptr [r11]
45d194: mov rsi, rbp
45d197: sub rsp, 8
45d19b: mov r8, rbx
45d19e: push qword ptr [rsp + 0x48]
45d1a2: mov rdi, qword ptr [rsp + 0x58]
45d1a7: lea r9, [rsp + 0x88]
45d1af: mov qword ptr [rsp + 0x20], r11
45d1b4: call 0x461780
45d1b9: pop rcx
45d1ba: pop rdi
45d1bb: mov esi, eax
45d1bd: mov r12, qword ptr [rsp + 0x70]
45d1c2: mov rax, qword ptr [rsp + 0x78]
45d1c7: cmp esi, 6
45d1ca: mov r11, qword ptr [rsp + 0x10]
45d1cf: mov r10, qword ptr [rsp + 0x18]
45d1d4: je 0x45d54d
45d1da: cmp esi, 5
45d1dd: jne 0x45d09a
45d1e3: mov rdx, rax
45d1e6: mov rax, qword ptr [rsp + 0x68]
45d1eb: mov qword ptr [r11], r12
45d1ee: cmp rdx, rax
45d1f1: jne 0x45d168
45d1f7: cmp r15, rax
45d1fa: jne 0x45cc30
45d200: sub dword ptr [rbp + 0x14], 1
45d204: jmp 0x45cc30
45d209: mov rcx, r15
45d20c: mov rax, rbx
45d20f: mov r10d, 4
45d215: jmp 0x45cb90
45d21a: mov edi, 0xffffffc0
45d21f: mov esi, 2
45d224: jmp 0x45cd0b
45d229: mov edi, 0xffffffe0
45d22e: mov esi, 3
45d233: jmp 0x45cd0b
45d238: lea ecx, [rdx - 0xd800]
45d23e: cmp ecx, 0x7ff
45d244: jbe 0x45d537
45d24a: test edx, edx
45d24c: js 0x45d537
45d252: test edx, 0xfffff800
45d258: je 0x45d5ad
45d25e: test edx, 0xffff0000
45d264: je 0x45d59e
45d26a: test edx, 0xffe00000
45d270: je 0x45d58f
45d276: mov edi, edx
45d278: and edi, 0xfc000000
45d27e: cmp edi, 1
45d281: sbb ecx, ecx
45d283: and ecx, 0xfffffffc
45d286: sub ecx, 4
45d289: cmp edi, 1
45d28c: sbb rdi, rdi
45d28f: add rdi, 6
45d293: lea r8, [rax + rdi]
45d297: cmp r10, r8
45d29a: jb 0x45d1e3
45d2a0: mov byte ptr [rax], cl
45d2a2: mov ecx, edx
45d2a4: and ecx, 0x3f
45d2a7: add qword ptr [rsp + 0x78], rdi
45d2ac: or ecx, 0xffffff80
45d2af: mov byte ptr [rax + rdi - 1], cl
45d2b3: mov ecx, edx
45d2b5: shr ecx, 6
45d2b8: cmp rdi, 2
45d2bc: je 0x45d30b
45d2be: and ecx, 0x3f
45d2c1: or ecx, 0xffffff80
45d2c4: mov byte ptr [rax + rdi - 2], cl
45d2c8: mov ecx, edx
45d2ca: shr ecx, 0xc
45d2cd: cmp rdi, 3
45d2d1: je 0x45d30b
45d2d3: and ecx, 0x3f
45d2d6: or ecx, 0xffffff80
45d2d9: mov byte ptr [rax + rdi - 3], cl
45d2dd: mov ecx, edx
45d2df: shr ecx, 0x12
45d2e2: cmp rdi, 4
45d2e6: je 0x45d30b
45d2e8: and ecx, 0x3f
45d2eb: or ecx, 0xffffff80
45d2ee: mov byte ptr [rax + rdi - 4], cl
45d2f2: mov ecx, edx
45d2f4: shr ecx, 0x18
45d2f7: cmp rdi, 5
45d2fb: je 0x45d30b
45d2fd: and ecx, 0x3f
45d300: shr edx, 0x1e
45d303: or ecx, 0xffffff80
45d306: mov byte ptr [rax + 1], cl
45d309: mov ecx, edx
45d30b: or byte ptr [rax], cl
45d30d: jmp 0x45d087
45d312: mov edi, 0xfffffff0
45d317: mov esi, 4
45d31c: jmp 0x45cd0b
45d321: mov r10d, r14d
45d324: jmp 0x45cf51
45d329: lea rcx, [rsp + 0x70]
45d32e: sub rsp, 8
45d332: mov rdx, qword ptr [r11]
45d335: mov r8, rbx
45d338: push qword ptr [rsp + 0x48]
45d33c: mov rdi, qword ptr [rsp + 0x58]
45d341: mov rsi, rbp
45d344: lea r9, [rsp + 0x88]
45d34c: mov qword ptr [rsp + 0x18], r11
45d351: call 0x461780
45d356: pop r11
45d358: mov r10d, eax
45d35b: pop rax
45d35c: mov rax, qword ptr [rsp + 0x70]
45d361: cmp r10d, 6
45d365: mov rcx, qword ptr [rsp + 0x78]
45d36a: mov r11, qword ptr [rsp + 8]
45d36f: je 0x45d0ea
45d375: cmp r10d, 5
45d379: jne 0x45cb8a
45d37f: jmp 0x45cb90
45d384: nop dword ptr [rax]
45d388: mov r10d, 5
45d38e: jmp 0x45cc6b
45d393: mov rsi, qword ptr [rsp + 0x40]
45d398: add rax, 4
45d39c: mov r10d, 6
45d3a2: mov qword ptr [rsp + 0x70], rax
45d3a7: add qword ptr [rsi], 1
45d3ab: jmp 0x45cb8a
45d3b0: mov qword ptr [rsp + 0x18], rdx
45d3b5: jmp 0x45ceb5
45d3ba: mov qword ptr [r11], rbx
45d3bd: cmp r12, rbx
45d3c0: jae 0x45d44e
45d3c6: lea rax, [r12 + 1]
45d3cb: mov r9, qword ptr [rsp + 8]
45d3d0: mov qword ptr [rsp + 0x70], rax
45d3d5: movzx esi, byte ptr [r12]
45d3da: mov byte ptr [r9 + rdx + 4], sil
45d3df: cmp rbx, rax
45d3e2: jbe 0x45d44e
45d3e4: lea rax, [r12 + 2]
45d3e9: mov qword ptr [rsp + 0x70], rax
45d3ee: movzx edi, byte ptr [r12 + 1]
45d3f4: mov byte ptr [r9 + rdx + 5], dil
45d3f9: cmp rbx, rax
45d3fc: jbe 0x45d44e
45d3fe: lea rax, [r12 + 3]
45d403: mov qword ptr [rsp + 0x70], rax
45d408: movzx edi, byte ptr [r12 + 2]
45d40e: mov byte ptr [r9 + rdx + 6], dil
45d413: cmp rbx, rax
45d416: jbe 0x45d44e
45d418: lea rax, [r12 + 4]
45d41d: mov qword ptr [rsp + 0x70], rax
45d422: movzx esi, byte ptr [r12 + 3]
45d428: mov byte ptr [r9 + rdx + 7], sil
45d42d: cmp rbx, rax
45d430: jbe 0x45d44e
45d432: add rdx, r9
45d435: add rax, 1
45d439: add rdx, 1
45d43d: mov qword ptr [rsp + 0x70], rax
45d442: movzx ecx, byte ptr [rax - 1]
45d446: mov byte ptr [rdx + 7], cl
45d449: cmp rbx, rax
45d44c: jne 0x45d435
45d44e: mov r10d, 7
45d454: jmp 0x45cc6b
45d459: lea edx, [rax - 0xd800]
45d45f: cmp edx, 0x7ff
45d465: jbe 0x45d5bc
45d46b: test eax, eax
45d46d: js 0x45d5bc
45d473: test eax, 0xfffff800
45d478: je 0x45d829
45d47e: test eax, 0xffff0000
45d483: je 0x45d81a
45d489: test eax, 0xffe00000
45d48e: je 0x45d838
45d494: mov ecx, eax
45d496: and ecx, 0xfc000000
45d49c: cmp ecx, 1
45d49f: sbb edx, edx
45d4a1: and edx, 0xfffffffc
45d4a4: sub edx, 4
45d4a7: cmp ecx, 1
45d4aa: sbb rcx, rcx
45d4ad: add rcx, 6
45d4b1: lea rsi, [r15 + rcx]
45d4b5: cmp r13, rsi
45d4b8: jb 0x45d388
45d4be: mov byte ptr [r15], dl
45d4c1: mov edx, eax
45d4c3: and edx, 0x3f
45d4c6: add qword ptr [rsp + 0x78], rcx
45d4cb: or edx, 0xffffff80
45d4ce: mov byte ptr [r15 + rcx - 1], dl
45d4d3: mov edx, eax
45d4d5: shr edx, 6
45d4d8: cmp rcx, 2
45d4dc: je 0x45d52f
45d4de: and edx, 0x3f
45d4e1: or edx, 0xffffff80
45d4e4: mov byte ptr [r15 + rcx - 2], dl
45d4e9: mov edx, eax
45d4eb: shr edx, 0xc
45d4ee: cmp rcx, 3
45d4f2: je 0x45d52f
45d4f4: and edx, 0x3f
45d4f7: or edx, 0xffffff80
45d4fa: mov byte ptr [r15 + rcx - 3], dl
45d4ff: mov edx, eax
45d501: shr edx, 0x12
45d504: cmp rcx, 4
45d508: je 0x45d52f
45d50a: and edx, 0x3f
45d50d: or edx, 0xffffff80
45d510: mov byte ptr [r15 + rcx - 4], dl
45d515: mov edx, eax
45d517: shr edx, 0x18
45d51a: cmp rcx, 5
45d51e: je 0x45d52f
45d520: and edx, 0x3f
45d523: shr eax, 0x1e
45d526: or edx, 0xffffff80
45d529: mov byte ptr [r15 + 1], dl
45d52d: mov edx, eax
45d52f: or byte ptr [r15], dl
45d532: jmp 0x45cee3
45d537: cmp qword ptr [rsp + 0x40], 0
45d53d: je 0x45d15a
45d543: test byte ptr [rbp + 0x10], 8
45d547: jne 0x45d187
45d54d: mov edx, dword ptr [rsp + 8]
45d551: test edx, edx
45d553: je 0x45d15a
45d559: mov rsi, qword ptr [rsp + 0x40]
45d55e: add r12, 4
45d562: mov qword ptr [rsp + 0x70], r12
45d567: add qword ptr [rsi], 1
45d56b: mov esi, 6
45d570: jmp 0x45d09a
45d575: cmp r10, r15
45d578: je 0x45d0b6
45d57e: jmp 0x45d168
45d583: nop dword ptr [rax + rax]
45d588: xor ebx, ebx
45d58a: jmp 0x45d00b
45d58f: mov ecx, 0xfffffff0
45d594: mov edi, 4
45d599: jmp 0x45d293
45d59e: mov ecx, 0xffffffe0
45d5a3: mov edi, 3
45d5a8: jmp 0x45d293
45d5ad: mov ecx, 0xffffffc0
45d5b2: mov edi, 2
45d5b7: jmp 0x45d293
45d5bc: cmp qword ptr [rsp + 0x40], 0
45d5c2: je 0x45d5f9
45d5c4: test r14b, 8
45d5c8: jne 0x45d623
45d5ca: and r14b, 2
45d5ce: mov r10d, 6
45d5d4: je 0x45cc6b
45d5da: mov rax, qword ptr [rsp + 0x40]
45d5df: add qword ptr [rsp + 0x70], 4
45d5e5: add qword ptr [rax], 1
45d5e9: mov rax, qword ptr [rsp + 0x70]
45d5ee: cmp rax, qword ptr [rsp + 0x10]
45d5f3: jne 0x45cefc
45d5f9: mov r10d, 6
45d5ff: jmp 0x45cc6b
45d604: lea rcx, [rip + 0x3cf35]
45d60b: mov edx, 0x31e
45d610: lea rsi, [rip + 0x3cc23]
45d617: lea rdi, [rip + 0x3cc55]
45d61e: call 0x4032a0
45d623: mov qword ptr [rsp + 0x58], r11
45d628: mov r8, qword ptr [rsp + 0x10]
45d62d: mov rdx, r12
45d630: mov rsi, rbp
45d633: add r8, qword ptr [rsp + 0x18]
45d638: lea rcx, [rsp + 0x70]
45d63d: push rax
45d63e: push qword ptr [rsp + 0x48]
45d642: mov rdi, qword ptr [rsp + 0x58]
45d647: lea r9, [rsp + 0x88]
45d64f: mov qword ptr [rsp + 0x60], r8
45d654: call 0x461780
45d659: mov r10d, eax
45d65c: pop rax
45d65d: pop rdx
45d65e: cmp r10d, 6
45d662: mov r11, qword ptr [rsp + 0x58]
45d667: je 0x45d7ae
45d66d: mov rax, qword ptr [rsp + 0x70]
45d672: cmp rax, qword ptr [rsp + 0x10]
45d677: mov r8, qword ptr [rsp + 0x50]
45d67c: jne 0x45cefc
45d682: cmp r10d, 7
45d686: jne 0x45d7a0
45d68c: lea rdx, [rsp + 0x88]
45d694: cmp r8, rdx
45d697: je 0x45d7fb
45d69d: mov rax, qword ptr [rsp + 8]
45d6a2: mov rsi, qword ptr [rsp + 0x18]
45d6a7: mov eax, dword ptr [rax]
45d6a9: mov rdi, rsi
45d6ac: mov ecx, eax
45d6ae: and eax, 0xfffffff8
45d6b1: and ecx, 7
45d6b4: sub rdi, rcx
45d6b7: movsxd rcx, eax
45d6ba: add qword ptr [r11], rdi
45d6bd: cmp rsi, rcx
45d6c0: jle 0x45d7dc
45d6c6: cmp qword ptr [rsp + 0x18], 4
45d6cc: ja 0x45d7bd
45d6d2: mov rsi, qword ptr [rsp + 8]
45d6d7: or eax, dword ptr [rsp + 0x18]
45d6db: mov dword ptr [rsi], eax
45d6dd: cmp r8, qword ptr [rsp + 0x10]
45d6e2: jbe 0x45d44e
45d6e8: movzx eax, byte ptr [rsp + 0x84]
45d6f0: mov byte ptr [rsi + 4], al
45d6f3: lea rax, [rsp + 0x85]
45d6fb: cmp r8, rax
45d6fe: jbe 0x45d44e
45d704: movzx eax, byte ptr [rsp + 0x85]
45d70c: mov byte ptr [rsi + 5], al
45d70f: lea rax, [rsp + 0x86]
45d717: cmp r8, rax
45d71a: jbe 0x45d44e
45d720: movzx eax, byte ptr [rsp + 0x86]
45d728: mov byte ptr [rsi + 6], al
45d72b: lea rax, [rsp + 0x87]
45d733: cmp r8, rax
45d736: jbe 0x45d44e
45d73c: movzx eax, byte ptr [rsp + 0x87]
45d744: mov byte ptr [rsi + 7], al
45d747: cmp r8, rdx
45d74a: jbe 0x45d44e
45d750: movzx edx, byte ptr [rsp + 0x88]
45d758: lea rax, [rsp + 0x89]
45d760: mov qword ptr [rsp + 0x70], rax
45d765: mov byte ptr [rsi + 8], dl
45d768: cmp r8, rax
45d76b: jbe 0x45d44e
45d771: add rsi, 9
45d775: mov r11, rsi
45d778: add rax, 1
45d77c: add r11, 1
45d780: mov qword ptr [rsp + 0x70], rax
45d785: movzx edx, byte ptr [rax - 1]
45d789: mov byte ptr [r11 - 1], dl
45d78d: cmp r8, rax
45d790: jne 0x45d778
45d792: jmp 0x45d44e
45d797: nop word ptr [rax + rax]
45d7a0: test r10d, r10d
45d7a3: je 0x45cc3d
45d7a9: jmp 0x45cc6b
45d7ae: and r14b, 2
45d7b2: je 0x45d5e9
45d7b8: jmp 0x45d5da
45d7bd: lea rcx, [rip + 0x3cf3c]
45d7c4: mov edx, 0x1e6
45d7c9: lea rsi, [rip + 0x3cadc]
45d7d0: lea rdi, [rip + 0x3cbd1]
45d7d7: call 0x4032a0
45d7dc: lea rcx, [rip + 0x3cf1d]
45d7e3: mov edx, 0x1e5
45d7e8: lea rsi, [rip + 0x3cabd]
45d7ef: lea rdi, [rip + 0x3cb8a]
45d7f6: call 0x4032a0
45d7fb: lea rcx, [rip + 0x3cefe]
45d802: mov edx, 0x1db
45d807: lea rsi, [rip + 0x3ca9e]
45d80e: lea rdi, [rip + 0x3cb43]
45d815: call 0x4032a0
45d81a: mov edx, 0xffffffe0
45d81f: mov ecx, 3
45d824: jmp 0x45d4b1
45d829: mov edx, 0xffffffc0
45d82e: mov ecx, 2
45d833: jmp 0x45d4b1
45d838: mov edx, 0xfffffff0
45d83d: mov ecx, 4
45d842: jmp 0x45d4b1
45d847: lea rcx, [rip + 0x3ccf2]
45d84e: mov edx, 0x1a4
45d853: lea rsi, [rip + 0x3c9e0]
45d85a: lea rdi, [rip + 0x3c9ed]
45d861: call 0x4032a0
45d866: lea rcx, [rip + 0x3ce93]
45d86d: mov edx, 0x1c9
45d872: lea rsi, [rip + 0x3ca33]
45d879: lea rdi, [rip + 0x3cab0]
45d880: call 0x4032a0
45d885: lea rcx, [rip + 0x3ccb4]
45d88c: mov edx, 0x234
45d891: lea rsi, [rip + 0x3c9a2]
45d898: lea rdi, [rip + 0x3c9af]
45d89f: call 0x4032a0
45d8a4: call 0x4547a0
45d8a9: lea rcx, [rip + 0x3ce50]
45d8b0: mov edx, 0x18b
45d8b5: lea rsi, [rip + 0x3c9f0]
45d8bc: lea rdi, [rip + 0x3ca3d]
45d8c3: call 0x4032a0
45d8c8: nop dword ptr [rax + rax]
45d8d0: endbr64 
45d8d4: push r15
45d8d6: push r14
45d8d8: push r13
45d8da: push r12
45d8dc: mov r12, rsi
45d8df: push rbp
45d8e0: mov rbp, rcx
45d8e3: push rbx
45d8e4: sub rsp, 0x78
45d8e8: mov r10d, dword ptr [rsi + 0x10]
45d8ec: mov qword ptr [rsp + 8], rdx
45d8f1: mov ebx, dword ptr [rsp + 0xb0]
45d8f8: mov qword ptr [rsp + 0x18], r8
45d8fd: mov qword ptr [rsp + 0x20], r9
45d902: mov rax, qword ptr fs:[0x28]
45d90b: mov qword ptr [rsp + 0x68], rax
45d910: xor eax, eax
45d912: lea rax, [rdi + 0x68]
45d916: mov qword ptr [rsp + 0x10], 0
45d91f: mov qword ptr [rsp + 0x28], rax
45d924: lea rax, [rsi + 0x30]
45d928: mov qword ptr [rsp + 0x30], rax
45d92d: test r10b, 1
45d931: jne 0x45d958
45d933: mov rax, qword ptr [rdi + 0x90]
45d93a: cmp qword ptr [rdi + 0x68], 0
45d93f: mov qword ptr [rsp + 0x10], rax
45d944: je 0x45d958
45d946: ror rax, 0x11
45d94a: xor rax, qword ptr fs:[0x30]
45d953: mov qword ptr [rsp + 0x10], rax
45d958: test ebx, ebx
45d95a: jne 0x45e12f
45d960: mov rax, qword ptr [rsp + 8]
45d965: mov rbx, qword ptr [rsp + 0x18]
45d96a: lea rdx, [rsp + 0x50]
45d96f: mov r8d, dword ptr [rsp + 0xb8]
45d977: mov r13, qword ptr [r12 + 8]
45d97c: test rbx, rbx
45d97f: mov r14, qword ptr [rax]
45d982: mov rax, rbx
45d985: cmove rax, r12
45d989: cmp qword ptr [rsp + 0x20], 0
45d98f: mov r11, qword ptr [rax]
45d992: mov eax, 0
45d997: mov qword ptr [rsp + 0x50], 0
45d9a0: cmovne rax, rdx
45d9a4: mov qword ptr [rsp + 0x38], rax
45d9a9: test r8d, r8d
45d9ac: jne 0x45dd90
45d9b2: mov r15, r11
45d9b5: nop dword ptr [rax]
45d9b8: cmp rbp, r14
45d9bb: je 0x45e19c
45d9c1: lea rdi, [r15 + 4]
45d9c5: cmp r13, rdi
45d9c8: jb 0x45df10
45d9ce: mov dword ptr [rsp], 4
45d9d5: and r10d, 2
45d9d9: mov rax, r14
45d9dc: mov rbx, r15
45d9df: jmp 0x45da06
45d9e1: nop dword ptr [rax]
45d9e8: mov dword ptr [rbx], edx
45d9ea: mov rax, rsi
45d9ed: mov rbx, rdi
45d9f0: cmp rbp, rax
45d9f3: je 0x45db28
45d9f9: lea rdi, [rbx + 4]
45d9fd: cmp r13, rdi
45da00: jb 0x45dbd0
45da06: movzx edx, byte ptr [rax]
45da09: lea rsi, [rax + 1]
45da0d: mov ecx, edx
45da0f: test dl, dl
45da11: jns 0x45d9e8
45da13: sub edx, 0xc2
45da19: cmp edx, 0x1d
45da1c: ja 0x45dc58
45da22: and ecx, 0x1f
45da25: mov r11d, 6
45da2b: mov r8d, 2
45da31: lea r9, [rax + r8]
45da35: cmp rbp, r9
45da38: jb 0x45dc82
45da3e: movzx esi, byte ptr [rax + 1]
45da42: mov edx, esi
45da44: and edx, 0xffffffc0
45da47: cmp dl, 0x80
45da4a: jne 0x45e124
45da50: shl ecx, 6
45da53: and esi, 0x3f
45da56: or esi, ecx
45da58: mov edx, esi
45da5a: cmp r8, 2
45da5e: je 0x45db07
45da64: movzx ecx, byte ptr [rax + 2]
45da68: mov esi, ecx
45da6a: and esi, 0xffffffc0
45da6d: cmp sil, 0x80
45da71: jne 0x45dc1d
45da77: shl edx, 6
45da7a: and ecx, 0x3f
45da7d: or edx, ecx
45da7f: cmp r8, 3
45da83: je 0x45dae6
45da85: movzx ecx, byte ptr [rax + 3]
45da89: mov esi, ecx
45da8b: and esi, 0xffffffc0
45da8e: cmp sil, 0x80
45da92: jne 0x45e191
45da98: shl edx, 6
45da9b: and ecx, 0x3f
45da9e: or edx, ecx
45daa0: cmp r8, 4
45daa4: je 0x45dae6
45daa6: movzx ecx, byte ptr [rax + 4]
45daaa: mov esi, ecx
45daac: and esi, 0xffffffc0
45daaf: cmp sil, 0x80
45dab3: jne 0x45e1b9
45dab9: shl edx, 6
45dabc: and ecx, 0x3f
45dabf: or edx, ecx
45dac1: cmp r8, 6
45dac5: jne 0x45e1ae
45dacb: movzx ecx, byte ptr [rax + 5]
45dacf: mov esi, ecx
45dad1: and esi, 0xffffffc0
45dad4: cmp sil, 0x80
45dad8: jne 0x45e1c4
45dade: shl edx, 6
45dae1: and ecx, 0x3f
45dae4: or edx, ecx
45dae6: mov esi, edx
45dae8: mov ecx, r11d
45daeb: shr esi, cl
45daed: test esi, esi
45daef: je 0x45dc28
45daf5: lea ecx, [rdx - 0xd800]
45dafb: cmp ecx, 0x7ff
45db01: jbe 0x45dc28
45db07: mov rsi, r9
45db0a: jmp 0x45d9e8
45db0f: mov r8d, 1
45db15: cmp rbp, rsi
45db18: jne 0x45dc28
45db1e: mov dword ptr [rsp], 7
45db25: nop dword ptr [rax]
45db28: mov rsi, qword ptr [rsp + 8]
45db2d: cmp qword ptr [rsp + 0x18], 0
45db33: mov qword ptr [rsi], rax
45db36: jne 0x45dbeb
45db3c: add dword ptr [r12 + 0x14], 1
45db42: test byte ptr [r12 + 0x10], 1
45db48: jne 0x45df28
45db4e: cmp rbx, r15
45db51: jbe 0x45dcd2
45db57: mov rdi, qword ptr [rsp + 0x10]
45db5c: mov rax, qword ptr [r12]
45db60: mov qword ptr [rsp + 0x58], rax
45db65: call 0x456100
45db6a: lea rdx, [rsp + 0x58]
45db6f: xor r8d, r8d
45db72: mov rcx, rbx
45db75: mov esi, dword ptr [rsp + 0xb8]
45db7c: push rsi
45db7d: push 0
45db7f: mov r9, qword ptr [rsp + 0x30]
45db84: mov rsi, qword ptr [rsp + 0x40]
45db89: mov rdi, qword ptr [rsp + 0x38]
45db8e: mov rax, qword ptr [rsp + 0x20]
45db93: call rax
45db95: pop rsi
45db96: pop rdi
45db97: cmp eax, 4
45db9a: je 0x45dcc8
45dba0: mov rdx, qword ptr [rsp + 0x58]
45dba5: cmp rbx, rdx
45dba8: jne 0x45df42
45dbae: test eax, eax
45dbb0: jne 0x45e7fe
45dbb6: mov rax, qword ptr [rsp + 8]
45dbbb: mov r15, qword ptr [r12]
45dbbf: mov r10d, dword ptr [r12 + 0x10]
45dbc4: mov r14, qword ptr [rax]
45dbc7: jmp 0x45d9b8
45dbcc: nop dword ptr [rax]
45dbd0: mov rsi, qword ptr [rsp + 8]
45dbd5: cmp qword ptr [rsp + 0x18], 0
45dbdb: mov dword ptr [rsp], 5
45dbe2: mov qword ptr [rsi], rax
45dbe5: je 0x45db3c
45dbeb: mov rax, qword ptr [rsp + 0x18]
45dbf0: mov r15d, dword ptr [rsp]
45dbf4: mov qword ptr [rax], rbx
45dbf7: mov rax, qword ptr [rsp + 0x68]
45dbfc: xor rax, qword ptr fs:[0x28]
45dc05: jne 0x45e74d
45dc0b: add rsp, 0x78
45dc0f: mov eax, r15d
45dc12: pop rbx
45dc13: pop rbp
45dc14: pop r12
45dc16: pop r13
45dc18: pop r14
45dc1a: pop r15
45dc1c: ret 
45dc1d: mov r8d, 2
45dc23: nop dword ptr [rax + rax]
45dc28: mov rdi, qword ptr [rsp + 0x38]
45dc2d: test rdi, rdi
45dc30: je 0x45dd80
45dc36: test r10d, r10d
45dc39: je 0x45dd80
45dc3f: add qword ptr [rdi], 1
45dc43: add rax, r8
45dc46: mov dword ptr [rsp], 6
45dc4d: jmp 0x45d9f0
45dc52: nop word ptr [rax + rax]
45dc58: mov edx, ecx
45dc5a: and edx, 0xfffffff0
45dc5d: cmp dl, 0xe0
45dc60: jne 0x45e102
45dc66: mov r8d, 3
45dc6c: and ecx, 0xf
45dc6f: mov r11d, 0xb
45dc75: lea r9, [rax + r8]
45dc79: cmp rbp, r9
45dc7c: jae 0x45da3e
45dc82: cmp rbp, rsi
45dc85: jbe 0x45db0f
45dc8b: mov rcx, rbp
45dc8e: mov r8d, 1
45dc94: sub rcx, rax
45dc97: jmp 0x45dcb1
45dc99: nop dword ptr [rax]
45dca0: add r8, 1
45dca4: add rsi, 1
45dca8: cmp r8, rcx
45dcab: je 0x45db15
45dcb1: movzx edx, byte ptr [rsi]
45dcb4: and edx, 0xffffffc0
45dcb7: cmp dl, 0x80
45dcba: je 0x45dca0
45dcbc: jmp 0x45db15
45dcc1: nop dword ptr [rax]
45dcc8: cmp dword ptr [rsp], 5
45dccc: je 0x45dbb6
45dcd2: mov r15d, dword ptr [rsp]
45dcd6: mov eax, dword ptr [rsp + 0xb8]
45dcdd: test eax, eax
45dcdf: je 0x45dbf7
45dce5: cmp r15d, 7
45dce9: jne 0x45dbf7
45dcef: mov rax, qword ptr [rsp + 8]
45dcf4: mov rsi, qword ptr [r12 + 0x20]
45dcf9: mov r9, rbp
45dcfc: mov r8, qword ptr [rax]
45dcff: movzx edx, byte ptr [r8]
45dd03: sub r9, r8
45dd06: mov dword ptr [rsi], r9d
45dd09: lea ecx, [rdx - 0xc0]
45dd0f: mov eax, edx
45dd11: cmp ecx, 1
45dd14: jbe 0x45e752
45dd1a: sub edx, 0xc2
45dd20: cmp edx, 0x1d
45dd23: ja 0x45e3e3
45dd29: and eax, 0x1f
45dd2c: mov ecx, 6
45dd31: mov r10d, 1
45dd37: mov edi, 0x200
45dd3c: mov r11, qword ptr [rsp + 8]
45dd41: lea rdx, [r8 + 1]
45dd45: mov qword ptr [r11], rdx
45dd48: cmp rbp, rdx
45dd4b: jbe 0x45dd71
45dd4d: movzx ecx, byte ptr [rdx]
45dd50: shl eax, 6
45dd53: add rdx, 1
45dd57: mov qword ptr [r11], rdx
45dd5a: and ecx, 0x3f
45dd5d: or eax, ecx
45dd5f: cmp rdx, rbp
45dd62: jne 0x45dd4d
45dd64: sub r8, rdx
45dd67: lea rdx, [r10 + r8 + 1]
45dd6c: lea ecx, [rdx + rdx*2]
45dd6f: add ecx, ecx
45dd71: or edi, r9d
45dd74: shl eax, cl
45dd76: mov dword ptr [rsi], edi
45dd78: mov dword ptr [rsi + 4], eax
45dd7b: jmp 0x45dbf7
45dd80: mov dword ptr [rsp], 6
45dd87: jmp 0x45db28
45dd8c: nop dword ptr [rax]
45dd90: mov rdx, qword ptr [r12 + 0x20]
45dd95: mov esi, dword ptr [rdx]
45dd97: mov eax, esi
45dd99: and eax, 7
45dd9c: je 0x45d9b2
45dda2: test rbx, rbx
45dda5: jne 0x45e79a
45ddab: mov ecx, esi
45ddad: lea r8, [rip + 0x3c521]
45ddb4: mov edi, dword ptr [rdx + 4]
45ddb7: movzx esi, sil
45ddbb: sar ecx, 8
45ddbe: movsxd rcx, ecx
45ddc1: movzx r8d, byte ptr [r8 + rcx - 2]
45ddc7: mov byte ptr [rsp + 0x62], r8b
45ddcc: nop dword ptr [rax]
45ddd0: sub rcx, 1
45ddd4: cmp rsi, rcx
45ddd7: jbe 0x45dde9
45ddd9: mov r8d, edi
45dddc: and r8d, 0x3f
45dde0: or r8d, 0xffffff80
45dde4: mov byte ptr [rsp + rcx + 0x62], r8b
45dde9: shr edi, 6
45ddec: cmp rcx, 1
45ddf0: ja 0x45ddd0
45ddf2: movzx ecx, byte ptr [rsp + 0x62]
45ddf7: or ecx, edi
45ddf9: lea rdi, [r11 + 4]
45ddfd: cmp r13, rdi
45de00: jb 0x45e1f1
45de06: mov byte ptr [rsp + 0x62], cl
45de0a: movzx r8d, byte ptr [r14]
45de0e: lea rcx, [rsi + 1]
45de12: mov byte ptr [rsp + rsi + 0x62], r8b
45de17: lea r8, [r14 + 1]
45de1b: cmp rbp, r8
45de1e: jbe 0x45dec0
45de24: cmp rcx, 5
45de28: ja 0x45dec0
45de2e: movzx r9d, byte ptr [r14 + 1]
45de33: lea r8, [rsi + 2]
45de37: mov byte ptr [rsp + rcx + 0x62], r9b
45de3c: cmp r8, 5
45de40: ja 0x45e208
45de46: lea rcx, [r14 + 2]
45de4a: cmp rbp, rcx
45de4d: jbe 0x45e208
45de53: movzx r9d, byte ptr [r14 + 2]
45de58: lea rcx, [rsi + 3]
45de5c: mov byte ptr [rsp + r8 + 0x62], r9b
45de61: cmp rcx, 5
45de65: ja 0x45dec0
45de67: lea r8, [r14 + 3]
45de6b: cmp rbp, r8
45de6e: jbe 0x45dec0
45de70: movzx r9d, byte ptr [r14 + 3]
45de75: lea r8, [rsi + 4]
45de79: mov byte ptr [rsp + rcx + 0x62], r9b
45de7e: cmp r8, 5
45de82: ja 0x45e208
45de88: lea rcx, [r14 + 4]
45de8c: cmp rbp, rcx
45de8f: jbe 0x45e208
45de95: lea rcx, [rsi + 5]
45de99: movzx esi, byte ptr [r14 + 4]
45de9e: mov byte ptr [rsp + r8 + 0x62], sil
45dea3: cmp rcx, 5
45dea7: ja 0x45dec0
45dea9: lea rsi, [r14 + 5]
45dead: cmp rbp, rsi
45deb0: jbe 0x45dec0
45deb2: movzx ecx, byte ptr [r14 + 5]
45deb7: mov byte ptr [rsp + 0x67], cl
45debb: mov ecx, 6
45dec0: movzx r15d, byte ptr [rsp + 0x62]
45dec6: mov esi, r15d
45dec9: test r15b, r15b
45decc: js 0x45e210
45ded2: mov dword ptr [r11], r15d
45ded5: mov eax, dword ptr [rdx]
45ded7: mov r9d, 1
45dedd: and eax, 7
45dee0: cdqe 
45dee2: cmp rax, r9
45dee5: jge 0x45e7b9
45deeb: sub r9, rax
45deee: mov rax, qword ptr [rsp + 8]
45def3: mov r10d, dword ptr [r12 + 0x10]
45def8: mov r15, rdi
45defb: add r14, r9
45defe: mov qword ptr [rax], r14
45df01: mov dword ptr [rdx], 0
45df07: jmp 0x45d9b8
45df0c: nop dword ptr [rax]
45df10: mov dword ptr [rsp], 5
45df17: mov rax, r14
45df1a: mov rbx, r15
45df1d: jmp 0x45db28
45df22: nop word ptr [rax + rax]
45df28: mov rax, qword ptr [rsp + 0x50]
45df2d: mov r15d, dword ptr [rsp]
45df31: mov qword ptr [r12], rbx
45df35: mov rbx, qword ptr [rsp + 0x20]
45df3a: add qword ptr [rbx], rax
45df3d: jmp 0x45dcd6
45df42: mov rdi, qword ptr [rsp + 8]
45df47: mov ecx, dword ptr [r12 + 0x10]
45df4c: mov qword ptr [rdi], r14
45df4f: cmp rbp, r14
45df52: je 0x45e0ae
45df58: lea r9, [r15 + 4]
45df5c: cmp rdx, r9
45df5f: jb 0x45e0de
45df65: and ecx, 2
45df68: mov r8, r15
45df6b: mov dword ptr [rsp], ecx
45df6e: jmp 0x45df8f
45df70: mov dword ptr [r8], esi
45df73: mov r14, rdi
45df76: mov r8, r9
45df79: cmp rbp, r14
45df7c: je 0x45e0ab
45df82: lea r9, [r8 + 4]
45df86: cmp rdx, r9
45df89: jb 0x45e0e1
45df8f: movzx esi, byte ptr [r14]
45df93: lea rdi, [r14 + 1]
45df97: mov ecx, esi
45df99: test sil, sil
45df9c: jns 0x45df70
45df9e: sub esi, 0xc2
45dfa4: cmp esi, 0x1d
45dfa7: ja 0x45e1cf
45dfad: and ecx, 0x1f
45dfb0: mov ebx, 6
45dfb5: mov r10d, 2
45dfbb: lea r11, [r14 + r10]
45dfbf: cmp rbp, r11
45dfc2: jb 0x45e358
45dfc8: movzx esi, byte ptr [r14 + 1]
45dfcd: mov edi, esi
45dfcf: and edi, 0xffffffc0
45dfd2: cmp dil, 0x80
45dfd6: jne 0x45e455
45dfdc: shl ecx, 6
45dfdf: and esi, 0x3f
45dfe2: or esi, ecx
45dfe4: cmp r10, 2
45dfe8: je 0x45e088
45dfee: movzx edi, byte ptr [r14 + 2]
45dff3: mov ecx, edi
45dff5: and ecx, 0xffffffc0
45dff8: cmp cl, 0x80
45dffb: jne 0x45e090
45e001: shl esi, 6
45e004: and edi, 0x3f
45e007: or esi, edi
45e009: cmp r10, 3
45e00d: je 0x45e070
45e00f: movzx edi, byte ptr [r14 + 3]
45e014: mov ecx, edi
45e016: and ecx, 0xffffffc0
45e019: cmp cl, 0x80
45e01c: jne 0x45e46b
45e022: shl esi, 6
45e025: and edi, 0x3f
45e028: or esi, edi
45e02a: cmp r10, 4
45e02e: je 0x45e070
45e030: movzx edi, byte ptr [r14 + 4]
45e035: mov ecx, edi
45e037: and ecx, 0xffffffc0
45e03a: cmp cl, 0x80
45e03d: jne 0x45e492
45e043: shl esi, 6
45e046: and edi, 0x3f
45e049: or esi, edi
45e04b: cmp r10, 6
45e04f: jne 0x45e460
45e055: movzx edi, byte ptr [r14 + 5]
45e05a: mov ecx, edi
45e05c: and ecx, 0xffffffc0
45e05f: cmp cl, 0x80
45e062: jne 0x45e487
45e068: shl esi, 6
45e06b: and edi, 0x3f
45e06e: or esi, edi
45e070: mov edi, esi
45e072: mov ecx, ebx
45e074: shr edi, cl
45e076: test edi, edi
45e078: je 0x45e096
45e07a: lea ecx, [rsi - 0xd800]
45e080: cmp ecx, 0x7ff
45e086: jbe 0x45e096
45e088: mov rdi, r11
45e08b: jmp 0x45df70
45e090: mov r10d, 2
45e096: mov rbx, qword ptr [rsp + 0x38]
45e09b: test rbx, rbx
45e09e: je 0x45e0ab
45e0a0: mov ecx, dword ptr [rsp]
45e0a3: test ecx, ecx
45e0a5: jne 0x45e1fc
45e0ab: mov r15, r8
45e0ae: mov rax, qword ptr [rsp + 8]
45e0b3: mov qword ptr [rax], r14
45e0b6: cmp r15, rdx
45e0b9: je 0x45e702
45e0bf: lea rcx, [rip + 0x3c45a]
45e0c6: mov edx, 0x2ea
45e0cb: lea rsi, [rip + 0x3c168]
45e0d2: lea rdi, [rip + 0x3c189]
45e0d9: call 0x4032a0
45e0de: mov r8, r15
45e0e1: mov rbx, qword ptr [rsp + 8]
45e0e6: mov qword ptr [rbx], r14
45e0e9: cmp r8, rdx
45e0ec: jne 0x45e0bf
45e0ee: cmp r8, r15
45e0f1: jne 0x45dbae
45e0f7: sub dword ptr [r12 + 0x14], 1
45e0fd: jmp 0x45dbae
45e102: mov edx, ecx
45e104: and edx, 0xfffffff8
45e107: cmp dl, 0xf0
45e10a: jne 0x45e398
45e110: and ecx, 7
45e113: mov r11d, 0x10
45e119: mov r8d, 4
45e11f: jmp 0x45da31
45e124: mov r8d, 1
45e12a: jmp 0x45dc28
45e12f: cmp qword ptr [rsp + 0x18], 0
45e135: jne 0x45e6d0
45e13b: mov rax, qword ptr [r12 + 0x20]
45e140: xor r15d, r15d
45e143: mov qword ptr [rax], 0
45e14a: test byte ptr [r12 + 0x10], 1
45e150: jne 0x45dbf7
45e156: mov r15, qword ptr [rsp + 0x10]
45e15b: mov rdi, r15
45e15e: call 0x456100
45e163: mov eax, dword ptr [rsp + 0xb8]
45e16a: xor ecx, ecx
45e16c: xor edx, edx
45e16e: xor r8d, r8d
45e171: push rax
45e172: push rbx
45e173: mov r9, qword ptr [rsp + 0x30]
45e178: mov rsi, qword ptr [rsp + 0x40]
45e17d: mov rdi, qword ptr [rsp + 0x38]
45e182: call r15
45e185: pop r9
45e187: pop r10
45e189: mov r15d, eax
45e18c: jmp 0x45dbf7
45e191: mov r8d, 3
45e197: jmp 0x45dc28
45e19c: mov dword ptr [rsp], 4
45e1a3: mov rax, rbp
45e1a6: mov rbx, r15
45e1a9: jmp 0x45db28
45e1ae: mov r8d, 5
45e1b4: jmp 0x45dae6
45e1b9: mov r8d, 4
45e1bf: jmp 0x45dc28
45e1c4: mov r8d, 5
45e1ca: jmp 0x45dc28
45e1cf: mov esi, ecx
45e1d1: and esi, 0xfffffff0
45e1d4: cmp sil, 0xe0
45e1d8: jne 0x45e433
45e1de: and ecx, 0xf
45e1e1: mov ebx, 0xb
45e1e6: mov r10d, 3
45e1ec: jmp 0x45dfbb
45e1f1: mov r15d, 5
45e1f7: jmp 0x45dbf7
45e1fc: add qword ptr [rbx], 1
45e200: add r14, r10
45e203: jmp 0x45df79
45e208: mov rcx, r8
45e20b: jmp 0x45dec0
45e210: lea rbx, [rsp + 0x62]
45e215: mov qword ptr [rsp + 0x40], rbx
45e21a: add rbx, rcx
45e21d: mov qword ptr [rsp], rbx
45e221: lea ebx, [r15 - 0xc2]
45e228: mov dword ptr [rsp + 0x4c], ebx
45e22c: cmp ebx, 0x1d
45e22f: ja 0x45e409
45e235: mov dword ptr [rsp + 0x48], 6
45e23d: mov r9d, r15d
45e240: mov ebx, 2
45e245: and r9d, 0x1f
45e249: mov r8, qword ptr [rsp + 0x40]
45e24e: add r8, rbx
45e251: cmp qword ptr [rsp], r8
45e255: jb 0x45e49d
45e25b: movzx ecx, byte ptr [rsp + 0x63]
45e260: mov esi, ecx
45e262: and esi, 0xffffffc0
45e265: cmp sil, 0x80
45e269: jne 0x45e3c0
45e26f: mov esi, r9d
45e272: and ecx, 0x3f
45e275: shl esi, 6
45e278: or ecx, esi
45e27a: mov r8d, ecx
45e27d: cmp rbx, 2
45e281: je 0x45e6ef
45e287: movzx ecx, byte ptr [rsp + 0x64]
45e28c: mov esi, ecx
45e28e: and esi, 0xffffffc0
45e291: cmp sil, 0x80
45e295: jne 0x45e742
45e29b: shl r8d, 6
45e29f: and ecx, 0x3f
45e2a2: or r8d, ecx
45e2a5: cmp rbx, 3
45e2a9: je 0x45e737
45e2af: movzx ecx, byte ptr [rsp + 0x65]
45e2b4: mov esi, ecx
45e2b6: and esi, 0xffffffc0
45e2b9: cmp sil, 0x80
45e2bd: jne 0x45e72c
45e2c3: shl r8d, 6
45e2c7: and ecx, 0x3f
45e2ca: or r8d, ecx
45e2cd: cmp rbx, 4
45e2d1: je 0x45e721
45e2d7: movzx ecx, byte ptr [rsp + 0x66]
45e2dc: mov esi, ecx
45e2de: and esi, 0xffffffc0
45e2e1: cmp sil, 0x80
45e2e5: jne 0x45e5a9
45e2eb: shl r8d, 6
45e2ef: and ecx, 0x3f
45e2f2: or r8d, ecx
45e2f5: cmp rbx, 6
45e2f9: jne 0x45e59e
45e2ff: movzx ecx, byte ptr [rsp + 0x67]
45e304: mov esi, ecx
45e306: and esi, 0xffffffc0
45e309: cmp sil, 0x80
45e30d: jne 0x45e5b4
45e313: shl r8d, 6
45e317: and ecx, 0x3f
45e31a: mov r9d, 6
45e320: or r8d, ecx
45e323: movzx ecx, byte ptr [rsp + 0x48]
45e328: mov esi, r8d
45e32b: shr esi, cl
45e32d: test esi, esi
45e32f: je 0x45e3c6
45e335: lea ecx, [r8 - 0xd800]
45e33c: cmp ecx, 0x7ff
45e342: jbe 0x45e3c6
45e348: mov dword ptr [r11], r8d
45e34b: mov eax, dword ptr [rdx]
45e34d: mov r9, rbx
45e350: and eax, 7
45e353: jmp 0x45dee0
45e358: cmp rbp, rdi
45e35b: jbe 0x45e771
45e361: mov rsi, rbp
45e364: mov r10d, 1
45e36a: sub rsi, r14
45e36d: jmp 0x45e37c
45e36f: add r10, 1
45e373: add rdi, 1
45e377: cmp r10, rsi
45e37a: je 0x45e387
45e37c: movzx ecx, byte ptr [rdi]
45e37f: and ecx, 0xffffffc0
45e382: cmp cl, 0x80
45e385: je 0x45e36f
45e387: cmp rbp, rdi
45e38a: je 0x45e0ab
45e390: jmp 0x45e096
45e395: nop dword ptr [rax]
45e398: mov edx, ecx
45e39a: and edx, 0xfffffffc
45e39d: cmp dl, 0xf8
45e3a0: jne 0x45e5bf
45e3a6: and ecx, 3
45e3a9: mov r11d, 0x15
45e3af: mov r8d, 5
45e3b5: jmp 0x45da31
45e3ba: je 0x45e4ec
45e3c0: mov r9d, 1
45e3c6: cmp qword ptr [rsp + 0x38], 0
45e3cc: je 0x45e3d8
45e3ce: and r10d, 2
45e3d2: jne 0x45e476
45e3d8: mov r15d, 6
45e3de: jmp 0x45dbf7
45e3e3: mov edx, eax
45e3e5: and edx, 0xfffffff0
45e3e8: cmp dl, 0xe0
45e3eb: jne 0x45e617
45e3f1: and eax, 0xf
45e3f4: mov ecx, 0xc
45e3f9: mov r10d, 2
45e3ff: mov edi, 0x300
45e404: jmp 0x45dd3c
45e409: mov r8d, r15d
45e40c: and r8d, 0xfffffff0
45e410: cmp r8b, 0xe0
45e414: jne 0x45e7d8
45e41a: mov r9d, r15d
45e41d: mov dword ptr [rsp + 0x48], 0xb
45e425: mov ebx, 3
45e42a: and r9d, 0xf
45e42e: jmp 0x45e249
45e433: mov esi, ecx
45e435: and esi, 0xfffffff8
45e438: cmp sil, 0xf0
45e43c: jne 0x45e77c
45e442: and ecx, 7
45e445: mov ebx, 0x10
45e44a: mov r10d, 4
45e450: jmp 0x45dfbb
45e455: mov r10d, 1
45e45b: jmp 0x45e096
45e460: mov r10d, 5
45e466: jmp 0x45e070
45e46b: mov r10d, 3
45e471: jmp 0x45e096
45e476: mov rdi, qword ptr [rsp + 0x38]
45e47b: add qword ptr [rdi], 1
45e47f: mov rdi, r11
45e482: jmp 0x45dee0
45e487: mov r10d, 5
45e48d: jmp 0x45e096
45e492: mov r10d, 4
45e498: jmp 0x45e096
45e49d: lea rbx, [rsp + 0x63]
45e4a2: cmp qword ptr [rsp], rbx
45e4a6: jbe 0x45e3ba
45e4ac: mov r9d, 1
45e4b2: mov rdi, rbx
45e4b5: jmp 0x45e4c5
45e4b7: add r9, 1
45e4bb: add rdi, 1
45e4bf: cmp qword ptr [rsp], rdi
45e4c3: jbe 0x45e4d3
45e4c5: movzx r8d, byte ptr [rdi]
45e4c9: and r8d, 0xffffffc0
45e4cd: cmp r8b, 0x80
45e4d1: je 0x45e4b7
45e4d3: cmp qword ptr [rsp], rdi
45e4d7: jne 0x45e3c6
45e4dd: lea rdi, [rsp + 0x68]
45e4e2: cmp qword ptr [rsp], rdi
45e4e6: je 0x45e5dd
45e4ec: cdqe 
45e4ee: mov rdi, rcx
45e4f1: lea r11d, [r15 - 0xc0]
45e4f8: sub rdi, rax
45e4fb: mov rax, qword ptr [rsp + 8]
45e500: add r14, rdi
45e503: mov qword ptr [rax], r14
45e506: mov dword ptr [rdx], ecx
45e508: cmp r11d, 1
45e50c: jbe 0x45e57f
45e50e: cmp dword ptr [rsp + 0x4c], 0x1d
45e513: ja 0x45e563
45e515: and esi, 0x1f
45e518: mov edi, 0x200
45e51d: mov eax, 1
45e522: cmp qword ptr [rsp], rbx
45e526: jbe 0x45e54a
45e528: mov r8, rbx
45e52b: movzx r9d, byte ptr [r8]
45e52f: shl esi, 6
45e532: add r8, 1
45e536: and r9d, 0x3f
45e53a: or esi, r9d
45e53d: cmp qword ptr [rsp], r8
45e541: jne 0x45e52b
45e543: sub rbx, qword ptr [rsp]
45e547: add rax, rbx
45e54a: or ecx, edi
45e54c: mov r15d, 7
45e552: mov dword ptr [rdx], ecx
45e554: lea ecx, [rax + rax*2]
45e557: add ecx, ecx
45e559: shl esi, cl
45e55b: mov dword ptr [rdx + 4], esi
45e55e: jmp 0x45dbf7
45e563: mov eax, esi
45e565: and eax, 0xfffffff0
45e568: cmp al, 0xe0
45e56a: jne 0x45e5fc
45e570: and esi, 0xf
45e573: mov edi, 0x300
45e578: mov eax, 2
45e57d: jmp 0x45e522
45e57f: lea rcx, [rip + 0x3c15a]
45e586: mov edx, 0x1e1
45e58b: lea rsi, [rip + 0x3bd1a]
45e592: lea rdi, [rip + 0x3bd23]
45e599: call 0x4032a0
45e59e: mov r9d, 5
45e5a4: jmp 0x45e323
45e5a9: mov r9d, 4
45e5af: jmp 0x45e3c6
45e5b4: mov r9d, 5
45e5ba: jmp 0x45e3c6
45e5bf: mov edx, ecx
45e5c1: and edx, 0xfffffffe
45e5c4: cmp dl, 0xfc
45e5c7: jne 0x45e639
45e5c9: and ecx, 1
45e5cc: mov r11d, 0x1a
45e5d2: mov r8d, 6
45e5d8: jmp 0x45da31
45e5dd: lea rcx, [rip + 0x3c0fc]
45e5e4: mov edx, 0x1db
45e5e9: lea rsi, [rip + 0x3bcbc]
45e5f0: lea rdi, [rip + 0x3bd61]
45e5f7: call 0x4032a0
45e5fc: mov eax, esi
45e5fe: and eax, 0xfffffff8
45e601: cmp al, 0xf0
45e603: jne 0x45e669
45e605: and esi, 7
45e608: mov edi, 0x400
45e60d: mov eax, 3
45e612: jmp 0x45e522
45e617: mov edx, eax
45e619: and edx, 0xfffffff8
45e61c: cmp dl, 0xf0
45e61f: jne 0x45e684
45e621: and eax, 7
45e624: mov ecx, 0x12
45e629: mov r10d, 3
45e62f: mov edi, 0x400
45e634: jmp 0x45dd3c
45e639: xor r8d, r8d
45e63c: add r8, 1
45e640: lea rdx, [rax + r8]
45e644: cmp rbp, rdx
45e647: jbe 0x45dc28
45e64d: movzx edx, byte ptr [rax + r8]
45e652: and edx, 0xffffffc0
45e655: cmp dl, 0x80
45e658: jne 0x45dc28
45e65e: cmp r8, 5
45e662: jne 0x45e63c
45e664: jmp 0x45dc28
45e669: mov eax, esi
45e66b: and eax, 0xfffffffc
45e66e: cmp al, 0xf8
45e670: jne 0x45e6a6
45e672: and esi, 3
45e675: mov edi, 0x500
45e67a: mov eax, 4
45e67f: jmp 0x45e522
45e684: mov edx, eax
45e686: and edx, 0xfffffffc
45e689: cmp dl, 0xf8
45e68c: jne 0x45e6b8
45e68e: and eax, 3
45e691: mov ecx, 0x18
45e696: mov r10d, 4
45e69c: mov edi, 0x500
45e6a1: jmp 0x45dd3c
45e6a6: and esi, 1
45e6a9: mov edi, 0x600
45e6ae: mov eax, 5
45e6b3: jmp 0x45e522
45e6b8: and eax, 1
45e6bb: mov ecx, 0x1e
45e6c0: mov r10d, 5
45e6c6: mov edi, 0x600
45e6cb: jmp 0x45dd3c
45e6d0: lea rcx, [rip + 0x3be49]
45e6d7: mov edx, 0x1a4
45e6dc: lea rsi, [rip + 0x3bb57]
45e6e3: lea rdi, [rip + 0x3bb64]
45e6ea: call 0x4032a0
45e6ef: mov dword ptr [r11], ecx
45e6f2: mov eax, dword ptr [rdx]
45e6f4: mov r9d, 2
45e6fa: and eax, 7
45e6fd: jmp 0x45dee0
45e702: lea rcx, [rip + 0x3be17]
45e709: mov edx, 0x2eb
45e70e: lea rsi, [rip + 0x3bb25]
45e715: lea rdi, [rip + 0x3bbc4]
45e71c: call 0x4032a0
45e721: mov r9d, 4
45e727: jmp 0x45e323
45e72c: mov r9d, 3
45e732: jmp 0x45e3c6
45e737: mov r9d, 3
45e73d: jmp 0x45e323
45e742: mov r9d, 2
45e748: jmp 0x45e3c6
45e74d: call 0x4547a0
45e752: lea rcx, [rip + 0x3bdc7]
45e759: mov edx, 0x31a
45e75e: lea rsi, [rip + 0x3bad5]
45e765: lea rdi, [rip + 0x3bb50]
45e76c: call 0x4032a0
45e771: mov r10d, 1
45e777: jmp 0x45e387
45e77c: mov esi, ecx
45e77e: and esi, 0xfffffffc
45e781: cmp sil, 0xf8
45e785: jne 0x45e806
45e787: and ecx, 3
45e78a: mov ebx, 0x15
45e78f: mov r10d, 5
45e795: jmp 0x45dfbb
45e79a: lea rcx, [rip + 0x3bd7f]
45e7a1: mov edx, 0x234
45e7a6: lea rsi, [rip + 0x3ba8d]
45e7ad: lea rdi, [rip + 0x3ba9a]
45e7b4: call 0x4032a0
45e7b9: lea rcx, [rip + 0x3bf20]
45e7c0: mov edx, 0x1c9
45e7c5: lea rsi, [rip + 0x3bae0]
45e7cc: lea rdi, [rip + 0x3bb5d]
45e7d3: call 0x4032a0
45e7d8: mov r8d, r15d
45e7db: and r8d, 0xfffffff8
45e7df: cmp r8b, 0xf0
45e7e3: jne 0x45e824
45e7e5: mov r9d, r15d
45e7e8: mov dword ptr [rsp + 0x48], 0x10
45e7f0: mov ebx, 4
45e7f5: and r9d, 7
45e7f9: jmp 0x45e249
45e7fe: mov r15d, eax
45e801: jmp 0x45dcd6
45e806: mov esi, ecx
45e808: and esi, 0xfffffffe
45e80b: cmp sil, 0xfc
45e80f: jne 0x45e84a
45e811: and ecx, 1
45e814: mov ebx, 0x1a
45e819: mov r10d, 6
45e81f: jmp 0x45dfbb
45e824: mov r8d, r15d
45e827: and r8d, 0xfffffffc
45e82b: cmp r8b, 0xf8
45e82f: jne 0x45e87a
45e831: mov r9d, r15d
45e834: mov dword ptr [rsp + 0x48], 0x15
45e83c: mov ebx, 5
45e841: and r9d, 3
45e845: jmp 0x45e249
45e84a: xor r10d, r10d
45e84d: add r10, 1
45e851: lea rcx, [r14 + r10]
45e855: cmp rbp, rcx
45e858: jbe 0x45e096
45e85e: movzx ecx, byte ptr [r14 + r10]
45e863: and ecx, 0xffffffc0
45e866: cmp cl, 0x80
45e869: jne 0x45e096
45e86f: cmp r10, 5
45e873: jne 0x45e84d
45e875: jmp 0x45e096
45e87a: mov r8d, r15d
45e87d: and r8d, 0xfffffffe
45e881: cmp r8b, 0xfc
45e885: jne 0x45e8a0
45e887: mov r9d, r15d
45e88a: mov dword ptr [rsp + 0x48], 0x1a
45e892: mov ebx, 6
45e897: and r9d, 1
45e89b: jmp 0x45e249
45e8a0: mov rsi, qword ptr [rsp + 0x40]
45e8a5: xor r9d, r9d
45e8a8: add r9, 1
45e8ac: lea rcx, [rsi + r9]
45e8b0: cmp qword ptr [rsp], rcx
45e8b4: jbe 0x45e3c6
45e8ba: movzx ecx, byte ptr [rsi + r9]
45e8bf: and ecx, 0xffffffc0
45e8c2: cmp cl, 0x80
45e8c5: jne 0x45e3c6
45e8cb: cmp r9, 5
45e8cf: jne 0x45e8a8
45e8d1: jmp 0x45e3c6
45e8d6: nop word ptr cs:[rax + rax]
45e8e0: endbr64 
45e8e4: push r15
45e8e6: push r14
45e8e8: push r13
45e8ea: push r12
45e8ec: push rbp
45e8ed: mov rbp, rsi
45e8f0: push rbx
45e8f1: mov rbx, rcx
45e8f4: sub rsp, 0x78
45e8f8: mov qword ptr [rsp + 8], rdx
45e8fd: mov edx, dword ptr [rsi + 0x10]
45e900: mov qword ptr [rsp + 0x18], r8
45e905: mov r12d, dword ptr [rsp + 0xb0]
45e90d: mov rax, qword ptr fs:[0x28]
45e916: mov qword ptr [rsp + 0x68], rax
45e91b: xor eax, eax
45e91d: lea rax, [rdi + 0x68]
45e921: mov qword ptr [rsp + 0x10], 0
45e92a: mov qword ptr [rsp + 0x40], rax
45e92f: lea rax, [rsi + 0x30]
45e933: mov qword ptr [rsp + 0x48], rax
45e938: test dl, 1
45e93b: jne 0x45e965
45e93d: mov rax, qword ptr [rdi + 0x90]
45e944: cmp qword ptr [rdi + 0x68], 0
45e949: mov qword ptr [rsp + 0x10], rax
45e94e: je 0x45e965
45e950: mov r15, rax
45e953: ror r15, 0x11
45e957: xor r15, qword ptr fs:[0x30]
45e960: mov qword ptr [rsp + 0x10], r15
45e965: test r12d, r12d
45e968: jne 0x45eeb6
45e96e: mov rax, qword ptr [rsp + 8]
45e973: lea rcx, [rsp + 0x50]
45e978: mov rdi, qword ptr [rsp + 0x18]
45e97d: mov esi, dword ptr [rsp + 0xb8]
45e984: mov r12, qword ptr [rbp + 8]
45e988: test rdi, rdi
45e98b: mov r13, qword ptr [rax]
45e98e: mov rax, rdi
45e991: cmove rax, rbp
45e995: test r9, r9
45e998: mov r14, qword ptr [rax]
45e99b: mov eax, 0
45e9a0: mov qword ptr [rsp + 0x50], 0
45e9a9: cmovne rax, rcx
45e9ad: mov qword ptr [rsp + 0x38], rax
45e9b2: test esi, esi
45e9b4: jne 0x45ec10
45e9ba: xor r10d, r10d
45e9bd: mov r15, r9
45e9c0: test r15, r15
45e9c3: je 0x45e9c8
45e9c5: add r10, qword ptr [r15]
45e9c8: cmp rbx, r13
45e9cb: je 0x45ed43
45e9d1: lea rax, [r13 + 2]
45e9d5: cmp rbx, rax
45e9d8: jb 0x45ecd8
45e9de: lea rcx, [r14 + 4]
45e9e2: cmp rcx, r12
45e9e5: ja 0x45ed08
45e9eb: and edx, 2
45e9ee: jne 0x45ea50
45e9f0: cmp qword ptr [rsp + 0x38], 0
45e9f6: mov rsi, rcx
45e9f9: je 0x45edf5
45e9ff: movzx edx, word ptr [rax - 2]
45ea03: lea r8, [rcx - 4]
45ea07: lea rdi, [rax - 2]
45ea0b: lea esi, [rdx + 0x2800]
45ea11: cmp si, 0x7ff
45ea16: jbe 0x45ebb8
45ea1c: mov dword ptr [rcx - 4], edx
45ea1f: cmp rbx, rax
45ea22: je 0x45ed46
45ea28: lea rdx, [rax + 2]
45ea2c: cmp rbx, rdx
45ea2f: jb 0x45eaab
45ea31: lea rsi, [rcx + 4]
45ea35: cmp r12, rsi
45ea38: jb 0x45ebf0
45ea3e: mov rcx, rsi
45ea41: mov rax, rdx
45ea44: jmp 0x45e9ff
45ea46: nop word ptr cs:[rax + rax]
45ea50: cmp qword ptr [rsp + 0x38], 0
45ea56: je 0x45ee40
45ea5c: mov rsi, r14
45ea5f: mov r11d, 4
45ea65: movzx edx, word ptr [rax - 2]
45ea69: lea edi, [rdx + 0x2800]
45ea6f: cmp di, 0x7ff
45ea74: jbe 0x45ed20
45ea7a: mov dword ptr [rsi], edx
45ea7c: mov rsi, rcx
45ea7f: cmp rbx, rax
45ea82: je 0x45ed38
45ea88: lea rdx, [rax + 2]
45ea8c: cmp rbx, rdx
45ea8f: jb 0x45eaa8
45ea91: lea rcx, [rsi + 4]
45ea95: cmp r12, rcx
45ea98: jb 0x45ec00
45ea9e: mov rax, rdx
45eaa1: jmp 0x45ea65
45eaa3: nop dword ptr [rax + rax]
45eaa8: mov rcx, rsi
45eaab: mov r11d, 7
45eab1: mov rdi, qword ptr [rsp + 8]
45eab6: cmp qword ptr [rsp + 0x18], 0
45eabc: mov qword ptr [rdi], rax
45eabf: jne 0x45ebe0
45eac5: add dword ptr [rbp + 0x14], 1
45eac9: test byte ptr [rbp + 0x10], 1
45eacd: jne 0x45ecf0
45ead3: cmp rcx, r14
45ead6: mov qword ptr [rsp + 0x30], r10
45eadb: mov qword ptr [rsp + 0x20], rcx
45eae0: jbe 0x45eb76
45eae6: mov rdi, qword ptr [rsp + 0x10]
45eaeb: mov rax, qword ptr [rbp]
45eaef: mov dword ptr [rsp + 0x2c], r11d
45eaf4: mov qword ptr [rsp + 0x58], rax
45eaf9: call 0x456100
45eafe: lea rdx, [rsp + 0x58]
45eb03: xor r8d, r8d
45eb06: mov r9, r15
45eb09: mov esi, dword ptr [rsp + 0xb8]
45eb10: push rsi
45eb11: push 0
45eb13: mov rcx, qword ptr [rsp + 0x30]
45eb18: mov rsi, qword ptr [rsp + 0x58]
45eb1d: mov rdi, qword ptr [rsp + 0x50]
45eb22: mov rax, qword ptr [rsp + 0x20]
45eb27: call rax
45eb29: pop rdx
45eb2a: pop rcx
45eb2b: cmp eax, 4
45eb2e: mov r11d, dword ptr [rsp + 0x2c]
45eb33: je 0x45eb70
45eb35: mov rdx, qword ptr [rsp + 0x58]
45eb3a: mov rcx, qword ptr [rsp + 0x20]
45eb3f: mov r10, qword ptr [rsp + 0x30]
45eb44: cmp rdx, rcx
45eb47: jne 0x45ed58
45eb4d: test eax, eax
45eb4f: jne 0x45f242
45eb55: mov rax, qword ptr [rsp + 8]
45eb5a: mov r14, qword ptr [rbp]
45eb5e: mov r10, qword ptr [rsp + 0x50]
45eb63: mov edx, dword ptr [rbp + 0x10]
45eb66: mov r13, qword ptr [rax]
45eb69: jmp 0x45e9c0
45eb6e: nop 
45eb70: cmp r11d, 5
45eb74: je 0x45eb55
45eb76: mov eax, dword ptr [rsp + 0xb8]
45eb7d: test eax, eax
45eb7f: je 0x45eb8b
45eb81: cmp r11d, 7
45eb85: je 0x45ef6c
45eb8b: mov rax, qword ptr [rsp + 0x68]
45eb90: xor rax, qword ptr fs:[0x28]
45eb99: jne 0x45f23d
45eb9f: add rsp, 0x78
45eba3: mov eax, r11d
45eba6: pop rbx
45eba7: pop rbp
45eba8: pop r12
45ebaa: pop r13
45ebac: pop r14
45ebae: pop r15
45ebb0: ret 
45ebb1: nop dword ptr [rax]
45ebb8: mov rax, rdi
45ebbb: mov rdi, qword ptr [rsp + 8]
45ebc0: mov rcx, r8
45ebc3: cmp qword ptr [rsp + 0x18], 0
45ebc9: mov r11d, 6
45ebcf: mov qword ptr [rdi], rax
45ebd2: je 0x45eac5
45ebd8: nop dword ptr [rax + rax]
45ebe0: mov rax, qword ptr [rsp + 0x18]
45ebe5: mov qword ptr [rax], rcx
45ebe8: jmp 0x45eb8b
45ebea: nop word ptr [rax + rax]
45ebf0: mov r11d, 5
45ebf6: jmp 0x45eab1
45ebfb: nop dword ptr [rax + rax]
45ec00: mov rcx, rsi
45ec03: mov r11d, 5
45ec09: jmp 0x45eab1
45ec0e: nop 
45ec10: mov rcx, qword ptr [rbp + 0x20]
45ec14: mov eax, dword ptr [rcx]
45ec16: mov r10d, eax
45ec19: and r10d, 7
45ec1d: je 0x45e9ba
45ec23: test rdi, rdi
45ec26: jne 0x45f24a
45ec2c: cmp r10d, 4
45ec30: ja 0x45f269
45ec36: movzx esi, byte ptr [rcx + 4]
45ec3a: mov byte ptr [rsp + 0x66], sil
45ec3f: cmp r10d, 1
45ec43: je 0x45eea8
45ec49: movzx esi, byte ptr [rcx + 5]
45ec4d: mov rdi, r13
45ec50: mov byte ptr [rsp + 0x67], sil
45ec55: mov esi, 2
45ec5a: cmp rdi, rbx
45ec5d: ja 0x45f07f
45ec63: lea r8, [r14 + 4]
45ec67: mov r11d, 5
45ec6d: cmp r12, r8
45ec70: jb 0x45eb8b
45ec76: movzx edi, byte ptr [r13]
45ec7b: mov byte ptr [rsp + rsi + 0x66], dil
45ec80: movzx esi, word ptr [rsp + 0x66]
45ec85: lea edi, [rsi + 0x2800]
45ec8b: cmp di, 0x7ff
45ec90: jbe 0x45f111
45ec96: mov dword ptr [r14], esi
45ec99: mov eax, dword ptr [rcx]
45ec9b: mov r14, r8
45ec9e: mov r10d, eax
45eca1: and r10d, 7
45eca5: movsxd r10, r10d
45eca8: test al, 6
45ecaa: jne 0x45f2a7
45ecb0: sub r13, r10
45ecb3: mov rdi, qword ptr [rsp + 8]
45ecb8: and eax, 0xfffffff8
45ecbb: mov r10, qword ptr [rsp + 0x50]
45ecc0: add r13, 2
45ecc4: mov edx, dword ptr [rbp + 0x10]
45ecc7: mov r15, r9
45ecca: mov qword ptr [rdi], r13
45eccd: mov dword ptr [rcx], eax
45eccf: jmp 0x45e9c0
45ecd4: nop dword ptr [rax]
45ecd8: mov rcx, r14
45ecdb: mov rax, r13
45ecde: mov r11d, 7
45ece4: jmp 0x45eab1
45ece9: nop dword ptr [rax]
45ecf0: mov qword ptr [rbp], rcx
45ecf4: mov rax, qword ptr [rsp + 0x50]
45ecf9: add qword ptr [r15], rax
45ecfc: jmp 0x45eb76
45ed01: nop dword ptr [rax]
45ed08: mov rcx, r14
45ed0b: mov rax, r13
45ed0e: mov r11d, 5
45ed14: jmp 0x45eab1
45ed19: nop dword ptr [rax]
45ed20: mov rdi, qword ptr [rsp + 0x38]
45ed25: mov r11d, 6
45ed2b: add qword ptr [rdi], 1
45ed2f: cmp rbx, rax
45ed32: jne 0x45ea88
45ed38: mov rcx, rsi
45ed3b: mov rax, rbx
45ed3e: jmp 0x45eab1
45ed43: mov rcx, r14
45ed46: mov rax, rbx
45ed49: mov r11d, 4
45ed4f: jmp 0x45eab1
45ed54: nop dword ptr [rax]
45ed58: xor esi, esi
45ed5a: test r15, r15
45ed5d: je 0x45ed62
45ed5f: mov rsi, qword ptr [r15]
45ed62: add rsi, qword ptr [rsp + 0x50]
45ed67: cmp rsi, r10
45ed6a: je 0x45ee8b
45ed70: cmp rbx, r13
45ed73: je 0x45f173
45ed79: lea r10, [r13 + 2]
45ed7d: cmp rbx, r10
45ed80: jb 0x45f129
45ed86: lea rcx, [r14 + 4]
45ed8a: cmp rdx, rcx
45ed8d: jb 0x45f134
45ed93: test byte ptr [rbp + 0x10], 2
45ed97: jne 0x45ef19
45ed9d: cmp qword ptr [rsp + 0x38], 0
45eda3: je 0x45f1ce
45eda9: movzx esi, word ptr [r10 - 2]
45edae: lea r11, [rcx - 4]
45edb2: lea r8, [r10 - 2]
45edb6: lea edi, [rsi + 0x2800]
45edbc: cmp di, 0x7ff
45edc1: jbe 0x45f0f8
45edc7: mov dword ptr [rcx - 4], esi
45edca: cmp rbx, r10
45edcd: je 0x45f02a
45edd3: lea rsi, [r10 + 2]
45edd7: cmp rbx, rsi
45edda: jb 0x45f02a
45ede0: lea rdi, [rcx + 4]
45ede4: cmp rdx, rdi
45ede7: jb 0x45f05d
45eded: mov rcx, rdi
45edf0: mov r10, rsi
45edf3: jmp 0x45eda9
45edf5: movzx edx, word ptr [rax - 2]
45edf9: mov rcx, rsi
45edfc: lea r11, [rsi - 4]
45ee00: lea r8, [rax - 2]
45ee04: lea edi, [rdx + 0x2800]
45ee0a: cmp di, 0x7ff
45ee0f: jbe 0x45f100
45ee15: mov dword ptr [rsi - 4], edx
45ee18: cmp rax, rbx
45ee1b: je 0x45ed49
45ee21: lea rdx, [rax + 2]
45ee25: cmp rbx, rdx
45ee28: jb 0x45eaab
45ee2e: add rsi, 4
45ee32: cmp r12, rsi
45ee35: jb 0x45ebf0
45ee3b: mov rax, rdx
45ee3e: jmp 0x45edf5
45ee40: movzx edx, word ptr [rax - 2]
45ee44: lea r8, [rcx - 4]
45ee48: lea rdi, [rax - 2]
45ee4c: lea esi, [rdx + 0x2800]
45ee52: cmp si, 0x7ff
45ee57: jbe 0x45ebb8
45ee5d: mov dword ptr [rcx - 4], edx
45ee60: cmp rbx, rax
45ee63: je 0x45ed46
45ee69: lea rdx, [rax + 2]
45ee6d: cmp rbx, rdx
45ee70: jb 0x45eaab
45ee76: lea rsi, [rcx + 4]
45ee7a: cmp r12, rsi
45ee7d: jb 0x45ebf0
45ee83: mov rcx, rsi
45ee86: mov rax, rdx
45ee89: jmp 0x45ee40
45ee8b: sub rcx, rdx
45ee8e: mov rdi, qword ptr [rsp + 8]
45ee93: mov rdx, rcx
45ee96: shr rdx, 0x3f
45ee9a: add rdx, rcx
45ee9d: sar rdx, 1
45eea0: sub qword ptr [rdi], rdx
45eea3: jmp 0x45eb4d
45eea8: lea rdi, [r13 + 1]
45eeac: mov esi, 1
45eeb1: jmp 0x45ec5a
45eeb6: cmp qword ptr [rsp + 0x18], 0
45eebc: jne 0x45f2c6
45eec2: mov rax, qword ptr [rbp + 0x20]
45eec6: xor r11d, r11d
45eec9: mov qword ptr [rax], 0
45eed0: test byte ptr [rbp + 0x10], 1
45eed4: jne 0x45eb8b
45eeda: mov rbx, qword ptr [rsp + 0x10]
45eedf: mov qword ptr [rsp + 8], r9
45eee4: mov rdi, rbx
45eee7: call 0x456100
45eeec: mov eax, dword ptr [rsp + 0xb8]
45eef3: xor ecx, ecx
45eef5: xor edx, edx
45eef7: xor r8d, r8d
45eefa: push rax
45eefb: push r12
45eefd: mov r9, qword ptr [rsp + 0x18]
45ef02: mov rsi, qword ptr [rsp + 0x58]
45ef07: mov rdi, qword ptr [rsp + 0x50]
45ef0c: call rbx
45ef0e: pop rdi
45ef0f: pop r8
45ef11: mov r11d, eax
45ef14: jmp 0x45eb8b
45ef19: cmp qword ptr [rsp + 0x38], 0
45ef1f: je 0x45f17e
45ef25: mov r11, r14
45ef28: movzx esi, word ptr [r10 - 2]
45ef2d: lea edi, [rsi + 0x2800]
45ef33: cmp di, 0x7ff
45ef38: jbe 0x45f150
45ef3e: mov dword ptr [r11], esi
45ef41: mov r11, rcx
45ef44: cmp rbx, r10
45ef47: je 0x45f02d
45ef4d: lea rsi, [r10 + 2]
45ef51: cmp rbx, rsi
45ef54: jb 0x45f02d
45ef5a: lea rcx, [r11 + 4]
45ef5e: cmp rdx, rcx
45ef61: jb 0x45f060
45ef67: mov r10, rsi
45ef6a: jmp 0x45ef28
45ef6c: mov rax, qword ptr [rsp + 8]
45ef71: mov rdx, rbx
45ef74: mov rax, qword ptr [rax]
45ef77: sub rdx, rax
45ef7a: cmp rdx, 3
45ef7e: jg 0x45f21e
45ef84: mov rdx, qword ptr [rbp + 0x20]
45ef88: cmp rax, rbx
45ef8b: jae 0x45f15e
45ef91: mov rdi, qword ptr [rsp + 8]
45ef96: lea rcx, [rax + 1]
45ef9a: mov qword ptr [rdi], rcx
45ef9d: movzx esi, byte ptr [rax]
45efa0: mov byte ptr [rdx + 4], sil
45efa4: cmp rbx, rcx
45efa7: jbe 0x45f01a
45efa9: lea rcx, [rax + 2]
45efad: mov qword ptr [rdi], rcx
45efb0: movzx esi, byte ptr [rax + 1]
45efb4: mov byte ptr [rdx + 5], sil
45efb8: cmp rbx, rcx
45efbb: jbe 0x45f01a
45efbd: lea rcx, [rax + 3]
45efc1: mov qword ptr [rdi], rcx
45efc4: movzx esi, byte ptr [rax + 2]
45efc8: mov byte ptr [rdx + 6], sil
45efcc: cmp rbx, rcx
45efcf: jbe 0x45f01a
45efd1: lea rcx, [rax + 4]
45efd5: mov qword ptr [rdi], rcx
45efd8: movzx esi, byte ptr [rax + 3]
45efdc: mov byte ptr [rdx + 7], sil
45efe0: cmp rbx, rcx
45efe3: jbe 0x45f01a
45efe5: lea rcx, [rax + 5]
45efe9: mov qword ptr [rdi], rcx
45efec: movzx esi, byte ptr [rax + 4]
45eff0: mov byte ptr [rdx + 8], sil
45eff4: cmp rbx, rcx
45eff7: jbe 0x45f01a
45eff9: lea rsi, [rdx + 9]
45effd: mov rdi, qword ptr [rsp + 8]
45f002: add rcx, 1
45f006: add rsi, 1
45f00a: mov qword ptr [rdi], rcx
45f00d: movzx edi, byte ptr [rcx - 1]
45f011: mov byte ptr [rsi - 1], dil
45f015: cmp rcx, rbx
45f018: jne 0x45effd
45f01a: sub ebx, eax
45f01c: mov eax, dword ptr [rdx]
45f01e: and eax, 0xfffffff8
45f021: or eax, ebx
45f023: mov dword ptr [rdx], eax
45f025: jmp 0x45eb8b
45f02a: mov r11, rcx
45f02d: mov rax, qword ptr [rsp + 8]
45f032: mov qword ptr [rax], r10
45f035: cmp rdx, r11
45f038: je 0x45f288
45f03e: lea rcx, [rip + 0x3b4bb]
45f045: mov edx, 0x2ea
45f04a: lea rsi, [rip + 0x3b1e9]
45f051: lea rdi, [rip + 0x3b20a]
45f058: call 0x4032a0
45f05d: mov r11, rcx
45f060: mov rdi, qword ptr [rsp + 8]
45f065: mov qword ptr [rdi], r10
45f068: cmp rdx, r11
45f06b: jne 0x45f03e
45f06d: cmp rdx, r14
45f070: jne 0x45eb4d
45f076: sub dword ptr [rbp + 0x14], 1
45f07a: jmp 0x45eb4d
45f07f: mov rax, qword ptr [rsp + 8]
45f084: mov qword ptr [rax], rbx
45f087: cmp r13, rbx
45f08a: jae 0x45f0ed
45f08c: movzx eax, byte ptr [r13]
45f091: mov byte ptr [rcx + rsi + 4], al
45f095: lea rax, [r13 + 1]
45f099: cmp rbx, rax
45f09c: jbe 0x45f0ed
45f09e: movzx edi, byte ptr [r13 + 1]
45f0a3: lea rdx, [r13 + 2]
45f0a7: mov byte ptr [rcx + rsi + 5], dil
45f0ac: cmp rbx, rdx
45f0af: jbe 0x45f0ed
45f0b1: movzx edi, byte ptr [r13 + 2]
45f0b6: lea rax, [r13 + 3]
45f0ba: mov byte ptr [rcx + rsi + 6], dil
45f0bf: cmp rbx, rax
45f0c2: jbe 0x45f0ed
45f0c4: movzx edi, byte ptr [r13 + 3]
45f0c9: lea rax, [r13 + 4]
45f0cd: mov byte ptr [rcx + rsi + 7], dil
45f0d2: cmp rbx, rax
45f0d5: jbe 0x45f0ed
45f0d7: add rcx, rsi
45f0da: movzx edx, byte ptr [rax]
45f0dd: add rax, 1
45f0e1: add rcx, 1
45f0e5: mov byte ptr [rcx + 7], dl
45f0e8: cmp rbx, rax
45f0eb: jne 0x45f0da
45f0ed: mov r11d, 7
45f0f3: jmp 0x45eb8b
45f0f8: mov r10, r8
45f0fb: jmp 0x45f02d
45f100: mov rcx, r11
45f103: mov rax, r8
45f106: mov r11d, 6
45f10c: jmp 0x45eab1
45f111: cmp qword ptr [rsp + 0x38], 0
45f117: je 0x45f11e
45f119: and edx, 2
45f11c: jne 0x45f165
45f11e: mov r11d, 6
45f124: jmp 0x45eb8b
45f129: mov r11, r14
45f12c: mov r10, r13
45f12f: jmp 0x45f02d
45f134: mov rdi, qword ptr [rsp + 8]
45f139: mov qword ptr [rdi], r13
45f13c: cmp rdx, r14
45f13f: je 0x45f076
45f145: jmp 0x45f03e
45f14a: nop word ptr [rax + rax]
45f150: mov rdi, qword ptr [rsp + 0x38]
45f155: add qword ptr [rdi], 1
45f159: jmp 0x45ef44
45f15e: xor ebx, ebx
45f160: jmp 0x45f01c
45f165: mov rdi, qword ptr [rsp + 0x38]
45f16a: add qword ptr [rdi], 1
45f16e: jmp 0x45eca5
45f173: mov r11, r14
45f176: mov r10, rbx
45f179: jmp 0x45f02d
45f17e: mov r11, rcx
45f181: movzx ecx, word ptr [r10 - 2]
45f186: lea r8, [r11 - 4]
45f18a: lea rdi, [r10 - 2]
45f18e: lea esi, [rcx + 0x2800]
45f194: cmp si, 0x7ff
45f199: jbe 0x45f2e5
45f19f: mov dword ptr [r11 - 4], ecx
45f1a3: cmp rbx, r10
45f1a6: je 0x45f02d
45f1ac: lea rcx, [r10 + 2]
45f1b0: cmp rbx, rcx
45f1b3: jb 0x45f02d
45f1b9: lea rsi, [r11 + 4]
45f1bd: cmp rdx, rsi
45f1c0: jb 0x45f060
45f1c6: mov r11, rsi
45f1c9: mov r10, rcx
45f1cc: jmp 0x45f181
45f1ce: mov r11, rcx
45f1d1: movzx ecx, word ptr [r10 - 2]
45f1d6: lea r8, [r11 - 4]
45f1da: lea rdi, [r10 - 2]
45f1de: lea esi, [rcx + 0x2800]
45f1e4: cmp si, 0x7ff
45f1e9: jbe 0x45f2e5
45f1ef: mov dword ptr [r11 - 4], ecx
45f1f3: cmp rbx, r10
45f1f6: je 0x45f02d
45f1fc: lea rcx, [r10 + 2]
45f200: cmp rbx, rcx
45f203: jb 0x45f02d
45f209: lea rsi, [r11 + 4]
45f20d: cmp rdx, rsi
45f210: jb 0x45f060
45f216: mov r11, rsi
45f219: mov r10, rcx
45f21c: jmp 0x45f1d1
45f21e: lea rcx, [rip + 0x3b2db]
45f225: mov edx, 0x31e
45f22a: lea rsi, [rip + 0x3b009]
45f231: lea rdi, [rip + 0x3b03b]
45f238: call 0x4032a0
45f23d: call 0x4547a0
45f242: mov r11d, eax
45f245: jmp 0x45eb76
45f24a: lea rcx, [rip + 0x3b2af]
45f251: mov edx, 0x234
45f256: lea rsi, [rip + 0x3afdd]
45f25d: lea rdi, [rip + 0x3afea]
45f264: call 0x4032a0
45f269: lea rcx, [rip + 0x3b450]
45f270: mov edx, 0x18b
45f275: lea rsi, [rip + 0x3b030]
45f27c: lea rdi, [rip + 0x3b07d]
45f283: call 0x4032a0
45f288: lea rcx, [rip + 0x3b271]
45f28f: mov edx, 0x2eb
45f294: lea rsi, [rip + 0x3af9f]
45f29b: lea rdi, [rip + 0x3b03e]
45f2a2: call 0x4032a0
45f2a7: lea rcx, [rip + 0x3b412]
45f2ae: mov edx, 0x1c9
45f2b3: lea rsi, [rip + 0x3aff2]
45f2ba: lea rdi, [rip + 0x3b06f]
45f2c1: call 0x4032a0
45f2c6: lea rcx, [rip + 0x3b233]
45f2cd: mov edx, 0x1a4
45f2d2: lea rsi, [rip + 0x3af61]
45f2d9: lea rdi, [rip + 0x3af6e]
45f2e0: call 0x4032a0
45f2e5: mov r11, r8
45f2e8: mov r10, rdi
45f2eb: jmp 0x45f02d
45f2f0: endbr64 
45f2f4: push r15
45f2f6: mov r15, r9
45f2f9: push r14
45f2fb: push r13
45f2fd: push r12
45f2ff: push rbp
45f300: mov rbp, rsi
45f303: push rbx
45f304: mov rbx, rcx
45f307: sub rsp, 0x98
45f30e: mov r13d, dword ptr [rsi + 0x10]
45f312: mov qword ptr [rsp + 0x50], rdi
45f317: mov r12d, dword ptr [rsp + 0xd0]
45f31f: mov qword ptr [rsp], rdx
45f323: mov qword ptr [rsp + 0x10], r8
45f328: mov rax, qword ptr fs:[0x28]
45f331: mov qword ptr [rsp + 0x88], rax
45f339: xor eax, eax
45f33b: lea rax, [rdi + 0x68]
45f33f: mov qword ptr [rsp + 0x30], 0
45f348: mov qword ptr [rsp + 0x38], rax
45f34d: lea rax, [rsi + 0x30]
45f351: mov qword ptr [rsp + 0x40], rax
45f356: test r13b, 1
45f35a: jne 0x45f381
45f35c: mov rax, qword ptr [rdi + 0x90]
45f363: cmp qword ptr [rdi + 0x68], 0
45f368: mov qword ptr [rsp + 0x30], rax
45f36d: je 0x45f381
45f36f: ror rax, 0x11
45f373: xor rax, qword ptr fs:[0x30]
45f37c: mov qword ptr [rsp + 0x30], rax
45f381: test r12d, r12d
45f384: jne 0x45fa3e
45f38a: mov rax, qword ptr [rsp]
45f38e: mov rdi, qword ptr [rsp + 0x10]
45f393: lea rdx, [rsp + 0x60]
45f398: test rdi, rdi
45f39b: mov r12, qword ptr [rax]
45f39e: mov rax, rdi
45f3a1: cmove rax, rbp
45f3a5: test r15, r15
45f3a8: mov r14, qword ptr [rax]
45f3ab: mov rax, qword ptr [rbp + 8]
45f3af: mov qword ptr [rsp + 0x60], 0
45f3b8: mov qword ptr [rsp + 8], rax
45f3bd: mov eax, 0
45f3c2: cmovne rax, rdx
45f3c6: mov qword ptr [rsp + 0x48], rax
45f3cb: mov eax, dword ptr [rsp + 0xd8]
45f3d2: test eax, eax
45f3d4: jne 0x45f618
45f3da: mov r10, qword ptr [rsp + 8]
45f3df: mov qword ptr [rsp + 8], r15
45f3e4: xor r11d, r11d
45f3e7: nop word ptr [rax + rax]
45f3f0: mov rax, qword ptr [rsp + 8]
45f3f5: test rax, rax
45f3f8: je 0x45f3fd
45f3fa: add r11, qword ptr [rax]
45f3fd: mov qword ptr [rsp + 0x70], r12
45f402: mov qword ptr [rsp + 0x78], r14
45f407: cmp rbx, r12
45f40a: je 0x45fa99
45f410: and r13d, 2
45f414: mov rcx, r14
45f417: mov rax, r12
45f41a: mov r15d, 4
45f420: lea rdx, [rax + 4]
45f424: cmp rbx, rdx
45f427: jb 0x45f540
45f42d: lea rdi, [rcx + 2]
45f431: cmp r10, rdi
45f434: jb 0x45f590
45f43a: mov esi, dword ptr [rax]
45f43c: cmp esi, 0xffff
45f442: ja 0x45f5a0
45f448: lea r8d, [rsi - 0xd800]
45f44f: cmp r8d, 0x7ff
45f456: jbe 0x45f5d8
45f45c: mov word ptr [rcx], si
45f45f: mov rax, rdx
45f462: mov rcx, rdi
45f465: mov qword ptr [rsp + 0x78], rdi
45f46a: mov qword ptr [rsp + 0x70], rdx
45f46f: cmp rbx, rax
45f472: jne 0x45f420
45f474: nop dword ptr [rax]
45f478: mov rsi, qword ptr [rsp]
45f47c: cmp qword ptr [rsp + 0x10], 0
45f482: mov qword ptr [rsi], rax
45f485: jne 0x45f559
45f48b: add dword ptr [rbp + 0x14], 1
45f48f: test byte ptr [rbp + 0x10], 1
45f493: jne 0x45f7e0
45f499: cmp r14, rcx
45f49c: mov qword ptr [rsp + 0x28], r11
45f4a1: mov qword ptr [rsp + 0x18], rcx
45f4a6: jae 0x45f8d0
45f4ac: mov r13, qword ptr [rsp + 0x30]
45f4b1: mov rax, qword ptr [rbp]
45f4b5: mov qword ptr [rsp + 0x20], r10
45f4ba: mov rdi, r13
45f4bd: mov qword ptr [rsp + 0x68], rax
45f4c2: call 0x456100
45f4c7: mov eax, dword ptr [rsp + 0xd8]
45f4ce: lea rdx, [rsp + 0x68]
45f4d3: xor r8d, r8d
45f4d6: push rax
45f4d7: push 0
45f4d9: mov r9, qword ptr [rsp + 0x18]
45f4de: mov rcx, qword ptr [rsp + 0x28]
45f4e3: mov rsi, qword ptr [rsp + 0x50]
45f4e8: mov rdi, qword ptr [rsp + 0x48]
45f4ed: call r13
45f4f0: pop rsi
45f4f1: pop rdi
45f4f2: cmp eax, 4
45f4f5: mov r10, qword ptr [rsp + 0x20]
45f4fa: mov r13d, eax
45f4fd: je 0x45f600
45f503: mov r15, qword ptr [rsp + 0x68]
45f508: mov rcx, qword ptr [rsp + 0x18]
45f50d: mov r11, qword ptr [rsp + 0x28]
45f512: cmp r15, rcx
45f515: jne 0x45f960
45f51b: test r13d, r13d
45f51e: jne 0x45fadb
45f524: mov rax, qword ptr [rsp]
45f528: mov r14, qword ptr [rbp]
45f52c: mov r11, qword ptr [rsp + 0x60]
45f531: mov r13d, dword ptr [rbp + 0x10]
45f535: mov r12, qword ptr [rax]
45f538: jmp 0x45f3f0
45f53d: nop dword ptr [rax]
45f540: mov rsi, qword ptr [rsp]
45f544: cmp qword ptr [rsp + 0x10], 0
45f54a: mov r15d, 7
45f550: mov qword ptr [rsi], rax
45f553: je 0x45f48b
45f559: mov rax, qword ptr [rsp + 0x10]
45f55e: mov r10d, r15d
45f561: mov qword ptr [rax], rcx
45f564: mov rax, qword ptr [rsp + 0x88]
45f56c: xor rax, qword ptr fs:[0x28]
45f575: jne 0x45ffe1
45f57b: add rsp, 0x98
45f582: mov eax, r10d
45f585: pop rbx
45f586: pop rbp
45f587: pop r12
45f589: pop r13
45f58b: pop r14
45f58d: pop r15
45f58f: ret 
45f590: mov r15d, 5
45f596: jmp 0x45f478
45f59b: nop dword ptr [rax + rax]
45f5a0: shr esi, 7
45f5a3: cmp esi, 0x1c00
45f5a9: je 0x45f950
45f5af: cmp qword ptr [rsp + 0x48], 0
45f5b5: je 0x45f5ca
45f5b7: test byte ptr [rbp + 0x10], 8
45f5bb: jne 0x45f8e0
45f5c1: test r13d, r13d
45f5c4: jne 0x45f7c0
45f5ca: mov r15d, 6
45f5d0: jmp 0x45f478
45f5d5: nop dword ptr [rax]
45f5d8: mov rsi, qword ptr [rsp + 0x48]
45f5dd: test rsi, rsi
45f5e0: je 0x45f5ca
45f5e2: test r13d, r13d
45f5e5: je 0x45f5ca
45f5e7: add qword ptr [rsi], 1
45f5eb: mov rax, rdx
45f5ee: mov r15d, 6
45f5f4: mov qword ptr [rsp + 0x70], rdx
45f5f9: jmp 0x45f46f
45f5fe: nop 
45f600: mov r13d, r15d
45f603: cmp r15d, 5
45f607: jne 0x45f51b
45f60d: jmp 0x45f524
45f612: nop word ptr [rax + rax]
45f618: mov r11, qword ptr [rbp + 0x20]
45f61c: mov eax, dword ptr [r11]
45f61f: mov ecx, eax
45f621: and ecx, 7
45f624: je 0x45f3da
45f62a: test rdi, rdi
45f62d: jne 0x45ff65
45f633: mov qword ptr [rsp + 0x70], r12
45f638: mov qword ptr [rsp + 0x78], r14
45f63d: cmp ecx, 4
45f640: ja 0x45ffc2
45f646: movzx esi, byte ptr [r11 + 4]
45f64b: movsxd rdx, ecx
45f64e: mov byte ptr [rsp + 0x84], sil
45f656: cmp ecx, 1
45f659: je 0x45f68b
45f65b: movzx ecx, byte ptr [r11 + 5]
45f660: mov byte ptr [rsp + 0x85], cl
45f667: cmp rdx, 2
45f66b: je 0x45f68b
45f66d: movzx ecx, byte ptr [r11 + 6]
45f672: mov byte ptr [rsp + 0x86], cl
45f679: cmp rdx, 3
45f67d: je 0x45f68b
45f67f: movzx ecx, byte ptr [r11 + 7]
45f684: mov byte ptr [rsp + 0x87], cl
45f68b: mov rcx, r12
45f68e: sub rcx, rdx
45f691: add rcx, 4
45f695: cmp rbx, rcx
45f698: jb 0x45fbe3
45f69e: lea rsi, [r14 + 2]
45f6a2: mov r10d, 5
45f6a8: cmp qword ptr [rsp + 8], rsi
45f6ad: jb 0x45f564
45f6b3: lea rcx, [r12 + 1]
45f6b8: lea r9, [rdx + 1]
45f6bc: mov qword ptr [rsp + 0x70], rcx
45f6c1: movzx edi, byte ptr [r12]
45f6c6: mov qword ptr [rsp + 0x18], r9
45f6cb: mov byte ptr [rsp + rdx + 0x84], dil
45f6d3: cmp r9, 3
45f6d7: ja 0x45f72d
45f6d9: cmp rbx, rcx
45f6dc: jbe 0x45f72d
45f6de: lea rcx, [r12 + 2]
45f6e3: lea rdi, [rdx + 2]
45f6e7: mov qword ptr [rsp + 0x70], rcx
45f6ec: movzx r8d, byte ptr [r12 + 1]
45f6f2: mov byte ptr [rsp + rdx + 0x85], r8b
45f6fa: cmp rbx, rcx
45f6fd: jbe 0x45fbd9
45f703: cmp rdi, 3
45f707: ja 0x45fbd9
45f70d: mov qword ptr [rsp + 0x18], 4
45f716: lea rcx, [r12 + 3]
45f71b: mov qword ptr [rsp + 0x70], rcx
45f720: movzx ecx, byte ptr [r12 + 2]
45f726: mov byte ptr [rsp + 0x87], cl
45f72d: mov ecx, dword ptr [rsp + 0x84]
45f734: lea rdi, [rsp + 0x84]
45f73c: mov qword ptr [rsp + 0x20], rdi
45f741: mov qword ptr [rsp + 0x70], rdi
45f746: cmp ecx, 0xffff
45f74c: ja 0x45fc81
45f752: lea edi, [rcx - 0xd800]
45f758: cmp edi, 0x7ff
45f75e: jbe 0x45fce5
45f764: mov word ptr [r14], cx
45f768: mov qword ptr [rsp + 0x78], rsi
45f76d: lea rcx, [rsp + 0x88]
45f775: mov r12d, 4
45f77b: mov qword ptr [rsp + 0x70], rcx
45f780: cmp rdx, r12
45f783: jge 0x45ffa3
45f789: sub r12, rdx
45f78c: mov rdx, qword ptr [rsp]
45f790: and eax, 0xfffffff8
45f793: mov r14, qword ptr [rsp + 0x78]
45f798: mov r10, qword ptr [rsp + 8]
45f79d: mov r13d, dword ptr [rbp + 0x10]
45f7a1: mov qword ptr [rsp + 8], r15
45f7a6: add r12, qword ptr [rdx]
45f7a9: mov qword ptr [rdx], r12
45f7ac: mov dword ptr [r11], eax
45f7af: mov r11, qword ptr [rsp + 0x60]
45f7b4: jmp 0x45f3f0
45f7b9: nop dword ptr [rax]
45f7c0: mov rsi, qword ptr [rsp + 0x48]
45f7c5: add rax, 4
45f7c9: mov r15d, 6
45f7cf: mov qword ptr [rsp + 0x70], rax
45f7d4: add qword ptr [rsi], 1
45f7d8: jmp 0x45f46f
45f7dd: nop dword ptr [rax]
45f7e0: mov r10d, r15d
45f7e3: mov r15, qword ptr [rsp + 8]
45f7e8: mov qword ptr [rbp], rcx
45f7ec: mov rax, qword ptr [rsp + 0x60]
45f7f1: add qword ptr [r15], rax
45f7f4: mov eax, dword ptr [rsp + 0xd8]
45f7fb: test eax, eax
45f7fd: je 0x45f564
45f803: cmp r10d, 7
45f807: jne 0x45f564
45f80d: mov rax, qword ptr [rsp]
45f811: mov rdx, rbx
45f814: mov rax, qword ptr [rax]
45f817: sub rdx, rax
45f81a: cmp rdx, 3
45f81e: jg 0x45ff84
45f824: mov rdx, qword ptr [rbp + 0x20]
45f828: cmp rax, rbx
45f82b: jae 0x45fd3a
45f831: mov rdi, qword ptr [rsp]
45f835: lea rcx, [rax + 1]
45f839: mov qword ptr [rdi], rcx
45f83c: movzx esi, byte ptr [rax]
45f83f: mov byte ptr [rdx + 4], sil
45f843: cmp rbx, rcx
45f846: jbe 0x45f8b8
45f848: lea rcx, [rax + 2]
45f84c: mov qword ptr [rdi], rcx
45f84f: movzx esi, byte ptr [rax + 1]
45f853: mov byte ptr [rdx + 5], sil
45f857: cmp rbx, rcx
45f85a: jbe 0x45f8b8
45f85c: lea rcx, [rax + 3]
45f860: mov qword ptr [rdi], rcx
45f863: movzx esi, byte ptr [rax + 2]
45f867: mov byte ptr [rdx + 6], sil
45f86b: cmp rbx, rcx
45f86e: jbe 0x45f8b8
45f870: lea rcx, [rax + 4]
45f874: mov qword ptr [rdi], rcx
45f877: movzx esi, byte ptr [rax + 3]
45f87b: mov byte ptr [rdx + 7], sil
45f87f: cmp rbx, rcx
45f882: jbe 0x45f8b8
45f884: lea rcx, [rax + 5]
45f888: mov qword ptr [rdi], rcx
45f88b: movzx esi, byte ptr [rax + 4]
45f88f: mov byte ptr [rdx + 8], sil
45f893: cmp rbx, rcx
45f896: jbe 0x45f8b8
45f898: lea rsi, [rdx + 9]
45f89c: mov rdi, qword ptr [rsp]
45f8a0: add rcx, 1
45f8a4: add rsi, 1
45f8a8: mov qword ptr [rdi], rcx
45f8ab: movzx edi, byte ptr [rcx - 1]
45f8af: mov byte ptr [rsi - 1], dil
45f8b3: cmp rcx, rbx
45f8b6: jne 0x45f89c
45f8b8: sub ebx, eax
45f8ba: mov eax, dword ptr [rdx]
45f8bc: and eax, 0xfffffff8
45f8bf: or eax, ebx
45f8c1: mov dword ptr [rdx], eax
45f8c3: jmp 0x45f564
45f8c8: nop dword ptr [rax + rax]
45f8d0: mov r13d, r15d
45f8d3: jmp 0x45f51b
45f8d8: nop dword ptr [rax + rax]
45f8e0: mov qword ptr [rsp + 0x20], r11
45f8e5: lea rcx, [rsp + 0x70]
45f8ea: mov r8, rbx
45f8ed: mov rsi, rbp
45f8f0: mov qword ptr [rsp + 0x18], r10
45f8f5: sub rsp, 8
45f8f9: push qword ptr [rsp + 0x50]
45f8fd: mov rax, qword ptr [rsp + 0x10]
45f902: mov rdi, qword ptr [rsp + 0x60]
45f907: mov rdx, qword ptr [rax]
45f90a: lea r9, [rsp + 0x88]
45f912: call 0x461780
45f917: pop r8
45f919: pop r9
45f91b: mov r15d, eax
45f91e: mov rcx, qword ptr [rsp + 0x78]
45f923: mov rax, qword ptr [rsp + 0x70]
45f928: cmp r15d, 6
45f92c: mov r10, qword ptr [rsp + 0x18]
45f931: mov r11, qword ptr [rsp + 0x20]
45f936: je 0x45f5c1
45f93c: cmp r15d, 5
45f940: jne 0x45f46f
45f946: jmp 0x45f478
45f94b: nop dword ptr [rax + rax]
45f950: mov qword ptr [rsp + 0x70], rdx
45f955: mov rax, rdx
45f958: jmp 0x45f46f
45f95d: nop dword ptr [rax]
45f960: mov rdx, qword ptr [rsp + 8]
45f965: xor eax, eax
45f967: test rdx, rdx
45f96a: je 0x45f96f
45f96c: mov rax, qword ptr [rdx]
45f96f: add rax, qword ptr [rsp + 0x60]
45f974: cmp rax, r11
45f977: je 0x45fa2b
45f97d: mov rax, qword ptr [rsp]
45f981: mov r11d, dword ptr [rbp + 0x10]
45f985: mov qword ptr [rsp + 0x70], r12
45f98a: mov qword ptr [rsp + 0x78], r14
45f98f: mov qword ptr [rax], r12
45f992: cmp rbx, r12
45f995: je 0x45fd41
45f99b: and r11d, 2
45f99f: mov rdx, r14
45f9a2: mov r8d, 4
45f9a8: lea rax, [r12 + 4]
45f9ad: cmp rbx, rax
45f9b0: jb 0x45faaa
45f9b6: lea rsi, [rdx + 2]
45f9ba: cmp r15, rsi
45f9bd: jb 0x45fb41
45f9c3: mov ecx, dword ptr [r12]
45f9c7: cmp ecx, 0xffff
45f9cd: ja 0x45fb60
45f9d3: lea edi, [rcx - 0xd800]
45f9d9: cmp edi, 0x7ff
45f9df: jbe 0x45fbab
45f9e5: mov word ptr [rdx], cx
45f9e8: mov r12, rax
45f9eb: mov rdx, rsi
45f9ee: mov qword ptr [rsp + 0x78], rsi
45f9f3: mov qword ptr [rsp + 0x70], rax
45f9f8: cmp rbx, r12
45f9fb: jne 0x45f9a8
45f9fd: mov rax, qword ptr [rsp]
45fa01: mov qword ptr [rax], rbx
45fa04: cmp qword ptr [rsp + 0x68], rdx
45fa09: jne 0x45fabc
45fa0f: cmp r8d, 5
45fa13: jne 0x45fd4a
45fa19: cmp r14, rdx
45fa1c: jne 0x45f51b
45fa22: sub dword ptr [rbp + 0x14], 1
45fa26: jmp 0x45f51b
45fa2b: mov rsi, qword ptr [rsp]
45fa2f: sub rcx, r15
45fa32: lea rax, [rcx + rcx]
45fa36: sub qword ptr [rsi], rax
45fa39: jmp 0x45f51b
45fa3e: cmp qword ptr [rsp + 0x10], 0
45fa44: jne 0x45ff46
45fa4a: mov rax, qword ptr [rbp + 0x20]
45fa4e: xor r10d, r10d
45fa51: mov qword ptr [rax], 0
45fa58: test byte ptr [rbp + 0x10], 1
45fa5c: jne 0x45f564
45fa62: mov rbx, qword ptr [rsp + 0x30]
45fa67: mov rdi, rbx
45fa6a: call 0x456100
45fa6f: mov eax, dword ptr [rsp + 0xd8]
45fa76: xor edx, edx
45fa78: xor ecx, ecx
45fa7a: mov r9, r15
45fa7d: xor r8d, r8d
45fa80: push rax
45fa81: push r12
45fa83: mov rsi, qword ptr [rsp + 0x50]
45fa88: mov rdi, qword ptr [rsp + 0x48]
45fa8d: call rbx
45fa8f: mov r10d, eax
45fa92: pop rax
45fa93: pop rdx
45fa94: jmp 0x45f564
45fa99: mov rcx, r14
45fa9c: mov rax, rbx
45fa9f: mov r15d, 4
45faa5: jmp 0x45f478
45faaa: mov rax, qword ptr [rsp]
45faae: mov qword ptr [rax], r12
45fab1: cmp rdx, qword ptr [rsp + 0x68]
45fab6: je 0x45fd4a
45fabc: lea rcx, [rip + 0x3aa1d]
45fac3: mov edx, 0x2ea
45fac8: lea rsi, [rip + 0x3a76b]
45facf: lea rdi, [rip + 0x3a78c]
45fad6: call 0x4032a0
45fadb: mov r10d, r13d
45fade: jmp 0x45f7f4
45fae3: mov dword ptr [rsp + 0x20], r11d
45fae8: lea rcx, [rsp + 0x70]
45faed: mov r8, rbx
45faf0: mov rsi, rbp
45faf3: mov qword ptr [rsp + 0x18], r10
45faf8: sub rsp, 8
45fafc: push qword ptr [rsp + 0x50]
45fb00: mov rax, qword ptr [rsp + 0x10]
45fb05: mov rdi, qword ptr [rsp + 0x60]
45fb0a: mov rdx, qword ptr [rax]
45fb0d: lea r9, [rsp + 0x88]
45fb15: call 0x461780
45fb1a: pop rdx
45fb1b: pop rcx
45fb1c: cmp eax, 6
45fb1f: mov r12, qword ptr [rsp + 0x70]
45fb24: mov rdx, qword ptr [rsp + 0x78]
45fb29: mov r8d, eax
45fb2c: mov r10, qword ptr [rsp + 0x18]
45fb31: mov r11d, dword ptr [rsp + 0x20]
45fb36: je 0x45fb85
45fb38: cmp eax, 5
45fb3b: jne 0x45f9f8
45fb41: mov rsi, qword ptr [rsp]
45fb45: mov rax, rdx
45fb48: mov rdx, qword ptr [rsp + 0x68]
45fb4d: mov qword ptr [rsi], r12
45fb50: cmp rax, rdx
45fb53: je 0x45fa19
45fb59: jmp 0x45fabc
45fb5e: nop 
45fb60: shr ecx, 7
45fb63: cmp ecx, 0x1c00
45fb69: je 0x45fd22
45fb6f: cmp qword ptr [rsp + 0x48], 0
45fb75: je 0x45faaa
45fb7b: test byte ptr [rbp + 0x10], 8
45fb7f: jne 0x45fae3
45fb85: test r11d, r11d
45fb88: je 0x45faaa
45fb8e: mov rax, qword ptr [rsp + 0x48]
45fb93: add r12, 4
45fb97: mov r8d, 6
45fb9d: mov qword ptr [rsp + 0x70], r12
45fba2: add qword ptr [rax], 1
45fba6: jmp 0x45f9f8
45fbab: mov rsi, qword ptr [rsp + 0x48]
45fbb0: test rsi, rsi
45fbb3: je 0x45faaa
45fbb9: test r11d, r11d
45fbbc: je 0x45faaa
45fbc2: add qword ptr [rsi], 1
45fbc6: mov r12, rax
45fbc9: mov r8d, 6
45fbcf: mov qword ptr [rsp + 0x70], rax
45fbd4: jmp 0x45f9f8
45fbd9: mov qword ptr [rsp + 0x18], rdi
45fbde: jmp 0x45f72d
45fbe3: mov rax, qword ptr [rsp]
45fbe7: mov qword ptr [rax], rbx
45fbea: cmp r12, rbx
45fbed: jae 0x45fc76
45fbf3: lea rax, [r12 + 1]
45fbf8: mov qword ptr [rsp + 0x70], rax
45fbfd: movzx esi, byte ptr [r12]
45fc02: mov byte ptr [r11 + rdx + 4], sil
45fc07: cmp rbx, rax
45fc0a: jbe 0x45fc76
45fc0c: lea rax, [r12 + 2]
45fc11: mov qword ptr [rsp + 0x70], rax
45fc16: movzx edi, byte ptr [r12 + 1]
45fc1c: mov byte ptr [r11 + rdx + 5], dil
45fc21: cmp rbx, rax
45fc24: jbe 0x45fc76
45fc26: lea rax, [r12 + 3]
45fc2b: mov qword ptr [rsp + 0x70], rax
45fc30: movzx edi, byte ptr [r12 + 2]
45fc36: mov byte ptr [r11 + rdx + 6], dil
45fc3b: cmp rbx, rax
45fc3e: jbe 0x45fc76
45fc40: lea rax, [r12 + 4]
45fc45: mov qword ptr [rsp + 0x70], rax
45fc4a: movzx esi, byte ptr [r12 + 3]
45fc50: mov byte ptr [r11 + rdx + 7], sil
45fc55: cmp rbx, rax
45fc58: jbe 0x45fc76
45fc5a: add rdx, r11
45fc5d: add rax, 1
45fc61: add rdx, 1
45fc65: mov qword ptr [rsp + 0x70], rax
45fc6a: movzx ecx, byte ptr [rax - 1]
45fc6e: mov byte ptr [rdx + 7], cl
45fc71: cmp rbx, rax
45fc74: jne 0x45fc5d
45fc76: mov r10d, 7
45fc7c: jmp 0x45f564
45fc81: shr ecx, 7
45fc84: cmp ecx, 0x1c00
45fc8a: je 0x45f76d
45fc90: cmp qword ptr [rsp + 0x48], 0
45fc96: je 0x45fd2f
45fc9c: test r13b, 8
45fca0: jne 0x45fd69
45fca6: and r13d, 2
45fcaa: mov r10d, 6
45fcb0: mov r12, rdi
45fcb3: je 0x45f564
45fcb9: mov rax, qword ptr [rsp + 0x48]
45fcbe: add r12, 4
45fcc2: mov qword ptr [rsp + 0x70], r12
45fcc7: add qword ptr [rax], 1
45fccb: mov rax, qword ptr [rsp + 0x20]
45fcd0: cmp r12, rax
45fcd3: je 0x45fd2f
45fcd5: sub r12, rax
45fcd8: mov eax, dword ptr [r11]
45fcdb: mov edx, eax
45fcdd: and edx, 7
45fce0: jmp 0x45f780
45fce5: cmp qword ptr [rsp + 0x48], 0
45fceb: mov r10d, 6
45fcf1: je 0x45f564
45fcf7: and r13d, 2
45fcfb: je 0x45f564
45fd01: mov rsi, qword ptr [rsp + 0x48]
45fd06: lea rcx, [rsp + 0x88]
45fd0e: mov r12d, 4
45fd14: mov qword ptr [rsp + 0x70], rcx
45fd19: add qword ptr [rsi], 1
45fd1d: jmp 0x45f780
45fd22: mov qword ptr [rsp + 0x70], rax
45fd27: mov r12, rax
45fd2a: jmp 0x45f9f8
45fd2f: mov r10d, 6
45fd35: jmp 0x45f564
45fd3a: xor ebx, ebx
45fd3c: jmp 0x45f8ba
45fd41: cmp r15, r14
45fd44: jne 0x45fabc
45fd4a: lea rcx, [rip + 0x3a78f]
45fd51: mov edx, 0x2eb
45fd56: lea rsi, [rip + 0x3a4dd]
45fd5d: lea rdi, [rip + 0x3a57c]
45fd64: call 0x4032a0
45fd69: mov qword ptr [rsp + 0x58], r11
45fd6e: mov r8, rdi
45fd71: lea rcx, [rsp + 0x70]
45fd76: mov rdx, r12
45fd79: add r8, qword ptr [rsp + 0x18]
45fd7e: sub rsp, 8
45fd82: mov rsi, rbp
45fd85: push qword ptr [rsp + 0x50]
45fd89: mov rdi, qword ptr [rsp + 0x60]
45fd8e: lea r9, [rsp + 0x88]
45fd96: mov qword ptr [rsp + 0x38], r8
45fd9b: call 0x461780
45fda0: pop r11
45fda2: pop r12
45fda4: cmp eax, 6
45fda7: mov r12, qword ptr [rsp + 0x70]
45fdac: mov r11, qword ptr [rsp + 0x58]
45fdb1: mov r10d, eax
45fdb4: je 0x45fdd4
45fdb6: cmp r12, qword ptr [rsp + 0x20]
45fdbb: mov r8, qword ptr [rsp + 0x28]
45fdc0: je 0x45fde3
45fdc2: mov eax, dword ptr [r11]
45fdc5: sub r12, qword ptr [rsp + 0x20]
45fdca: mov edx, eax
45fdcc: and edx, 7
45fdcf: jmp 0x45f780
45fdd4: and r13b, 2
45fdd8: je 0x45fccb
45fdde: jmp 0x45fcb9
45fde3: cmp eax, 7
45fde6: jne 0x45ff00
45fdec: lea rdx, [rsp + 0x88]
45fdf4: cmp r8, rdx
45fdf7: je 0x460005
45fdfd: mov eax, dword ptr [r11]
45fe00: mov rbx, qword ptr [rsp + 0x18]
45fe05: mov ecx, eax
45fe07: mov rsi, rbx
45fe0a: and eax, 0xfffffff8
45fe0d: and ecx, 7
45fe10: sub rsi, rcx
45fe13: mov rcx, rsi
45fe16: mov rsi, qword ptr [rsp]
45fe1a: add qword ptr [rsi], rcx
45fe1d: movsxd rcx, eax
45fe20: cmp rcx, rbx
45fe23: jge 0x45ffe6
45fe29: cmp qword ptr [rsp + 0x18], 4
45fe2f: ja 0x45ff27
45fe35: or eax, dword ptr [rsp + 0x18]
45fe39: mov dword ptr [r11], eax
45fe3c: cmp r8, qword ptr [rsp + 0x20]
45fe41: jbe 0x45fc76
45fe47: movzx eax, byte ptr [rsp + 0x84]
45fe4f: mov byte ptr [r11 + 4], al
45fe53: lea rax, [rsp + 0x85]
45fe5b: cmp r8, rax
45fe5e: jbe 0x45fc76
45fe64: movzx eax, byte ptr [rsp + 0x85]
45fe6c: mov byte ptr [r11 + 5], al
45fe70: lea rax, [rsp + 0x86]
45fe78: cmp r8, rax
45fe7b: jbe 0x45fc76
45fe81: movzx eax, byte ptr [rsp + 0x86]
45fe89: mov byte ptr [r11 + 6], al
45fe8d: lea rax, [rsp + 0x87]
45fe95: cmp r8, rax
45fe98: jbe 0x45fc76
45fe9e: movzx eax, byte ptr [rsp + 0x87]
45fea6: mov byte ptr [r11 + 7], al
45feaa: cmp r8, rdx
45fead: jbe 0x45fc76
45feb3: movzx edx, byte ptr [rsp + 0x88]
45febb: lea rax, [rsp + 0x89]
45fec3: mov qword ptr [rsp + 0x70], rax
45fec8: mov byte ptr [r11 + 8], dl
45fecc: cmp r8, rax
45fecf: jbe 0x45fc76
45fed5: add r11, 9
45fed9: add rax, 1
45fedd: add r11, 1
45fee1: mov qword ptr [rsp + 0x70], rax
45fee6: movzx edx, byte ptr [rax - 1]
45feea: mov byte ptr [r11 - 1], dl
45feee: cmp r8, rax
45fef1: jne 0x45fed9
45fef3: jmp 0x45fc76
45fef8: nop dword ptr [rax + rax]
45ff00: test eax, eax
45ff02: jne 0x45f564
45ff08: mov rax, qword ptr [rsp]
45ff0c: mov r10, qword ptr [rsp + 8]
45ff11: mov qword ptr [rsp + 8], r15
45ff16: mov r11, qword ptr [rsp + 0x60]
45ff1b: mov r13d, dword ptr [rbp + 0x10]
45ff1f: mov r12, qword ptr [rax]
45ff22: jmp 0x45f3f0
45ff27: lea rcx, [rip + 0x3a772]
45ff2e: mov edx, 0x1e6
45ff33: lea rsi, [rip + 0x3a372]
45ff3a: lea rdi, [rip + 0x3a467]
45ff41: call 0x4032a0
45ff46: lea rcx, [rip + 0x3a593]
45ff4d: mov edx, 0x1a4
45ff52: lea rsi, [rip + 0x3a2e1]
45ff59: lea rdi, [rip + 0x3a2ee]
45ff60: call 0x4032a0
45ff65: lea rcx, [rip + 0x3a574]
45ff6c: mov edx, 0x234
45ff71: lea rsi, [rip + 0x3a2c2]
45ff78: lea rdi, [rip + 0x3a2cf]
45ff7f: call 0x4032a0
45ff84: lea rcx, [rip + 0x3a555]
45ff8b: mov edx, 0x31e
45ff90: lea rsi, [rip + 0x3a2a3]
45ff97: lea rdi, [rip + 0x3a2d5]
45ff9e: call 0x4032a0
45ffa3: lea rcx, [rip + 0x3a6f6]
45ffaa: mov edx, 0x1c9
45ffaf: lea rsi, [rip + 0x3a2f6]
45ffb6: lea rdi, [rip + 0x3a373]
45ffbd: call 0x4032a0
45ffc2: lea rcx, [rip + 0x3a6d7]
45ffc9: mov edx, 0x18b
45ffce: lea rsi, [rip + 0x3a2d7]
45ffd5: lea rdi, [rip + 0x3a324]
45ffdc: call 0x4032a0
45ffe1: call 0x4547a0
45ffe6: lea rcx, [rip + 0x3a6b3]
45ffed: mov edx, 0x1e5
45fff2: lea rsi, [rip + 0x3a2b3]
45fff9: lea rdi, [rip + 0x3a380]
460000: call 0x4032a0
460005: lea rcx, [rip + 0x3a694]
46000c: mov edx, 0x1db
460011: lea rsi, [rip + 0x3a294]
460018: lea rdi, [rip + 0x3a339]
46001f: call 0x4032a0
460024: nop word ptr cs:[rax + rax]
46002f: nop 
460030: endbr64 
460034: push r15
460036: mov r11, rdx
460039: push r14
46003b: push r13
46003d: push r12
46003f: push rbp
460040: mov rbp, rsi
460043: push rbx
460044: mov rbx, rcx
460047: sub rsp, 0x78
46004b: mov edx, dword ptr [rsi + 0x10]
46004e: mov qword ptr [rsp + 0x18], r8
460053: mov r12d, dword ptr [rsp + 0xb0]
46005b: mov rax, qword ptr fs:[0x28]
460064: mov qword ptr [rsp + 0x68], rax
460069: xor eax, eax
46006b: lea rax, [rdi + 0x68]
46006f: mov qword ptr [rsp + 8], 0
460078: mov qword ptr [rsp + 0x40], rax
46007d: lea rax, [rsi + 0x30]
460081: mov qword ptr [rsp + 0x48], rax
460086: test dl, 1
460089: jne 0x4600b3
46008b: mov rax, qword ptr [rdi + 0x90]
460092: cmp qword ptr [rdi + 0x68], 0
460097: mov qword ptr [rsp + 8], rax
46009c: je 0x4600b3
46009e: mov r15, rax
4600a1: ror r15, 0x11
4600a5: xor r15, qword ptr fs:[0x30]
4600ae: mov qword ptr [rsp + 8], r15
4600b3: test r12d, r12d
4600b6: jne 0x460616
4600bc: mov rdi, qword ptr [rsp + 0x18]
4600c1: lea rcx, [rsp + 0x50]
4600c6: mov esi, dword ptr [rsp + 0xb8]
4600cd: mov r13, qword ptr [r11]
4600d0: mov r12, qword ptr [rbp + 8]
4600d4: test rdi, rdi
4600d7: mov rax, rdi
4600da: cmove rax, rbp
4600de: test r9, r9
4600e1: mov r14, qword ptr [rax]
4600e4: mov eax, 0
4600e9: mov qword ptr [rsp + 0x50], 0
4600f2: cmovne rax, rcx
4600f6: mov qword ptr [rsp + 0x38], rax
4600fb: test esi, esi
4600fd: jne 0x460360
460103: xor r10d, r10d
460106: mov r15, r9
460109: nop dword ptr [rax]
460110: test r15, r15
460113: je 0x460118
460115: add r10, qword ptr [r15]
460118: cmp rbx, r13
46011b: je 0x460478
460121: lea rax, [r13 + 2]
460125: cmp rbx, rax
460128: jb 0x460420
46012e: lea rcx, [r14 + 4]
460132: cmp r12, rcx
460135: jb 0x460450
46013b: and edx, 2
46013e: jne 0x460270
460144: cmp qword ptr [rsp + 0x38], 0
46014a: mov rsi, rcx
46014d: je 0x460538
460153: movzx edx, word ptr [rax - 2]
460157: lea rdi, [rcx - 4]
46015b: lea rsi, [rax - 2]
46015f: rol dx, 8
460163: lea r8d, [rdx + 0x2800]
46016a: cmp r8w, 0x7ff
460170: jbe 0x460320
460176: movzx edx, dx
460179: mov dword ptr [rcx - 4], edx
46017c: cmp rbx, rax
46017f: je 0x46047b
460185: lea rdx, [rax + 2]
460189: cmp rbx, rdx
46018c: jb 0x4601ab
46018e: lea rsi, [rcx + 4]
460192: cmp r12, rsi
460195: jb 0x460350
46019b: mov rcx, rsi
46019e: mov rax, rdx
4601a1: jmp 0x460153
4601a3: nop dword ptr [rax + rax]
4601a8: mov rcx, rsi
4601ab: mov dword ptr [rsp + 0x10], 7
4601b3: cmp qword ptr [rsp + 0x18], 0
4601b9: mov qword ptr [r11], rax
4601bc: jne 0x46033d
4601c2: add dword ptr [rbp + 0x14], 1
4601c6: test byte ptr [rbp + 0x10], 1
4601ca: jne 0x460438
4601d0: cmp rcx, r14
4601d3: mov qword ptr [rsp + 0x30], r10
4601d8: mov qword ptr [rsp + 0x20], rcx
4601dd: jbe 0x4602db
4601e3: mov rdi, qword ptr [rsp + 8]
4601e8: mov rax, qword ptr [rbp]
4601ec: mov qword ptr [rsp + 0x28], r11
4601f1: mov qword ptr [rsp + 0x58], rax
4601f6: call 0x456100
4601fb: lea rdx, [rsp + 0x58]
460200: xor r8d, r8d
460203: mov r9, r15
460206: mov esi, dword ptr [rsp + 0xb8]
46020d: push rsi
46020e: push 0
460210: mov rcx, qword ptr [rsp + 0x30]
460215: mov rsi, qword ptr [rsp + 0x58]
46021a: mov rdi, qword ptr [rsp + 0x50]
46021f: mov rax, qword ptr [rsp + 0x18]
460224: call rax
460226: pop rdx
460227: pop rcx
460228: cmp eax, 4
46022b: mov r11, qword ptr [rsp + 0x28]
460230: je 0x4602d0
460236: mov rdx, qword ptr [rsp + 0x58]
46023b: mov rcx, qword ptr [rsp + 0x20]
460240: mov r10, qword ptr [rsp + 0x30]
460245: cmp rcx, rdx
460248: jne 0x460490
46024e: test eax, eax
460250: jne 0x460a26
460256: mov r14, qword ptr [rbp]
46025a: mov r10, qword ptr [rsp + 0x50]
46025f: mov r13, qword ptr [r11]
460262: mov edx, dword ptr [rbp + 0x10]
460265: jmp 0x460110
46026a: nop word ptr [rax + rax]
460270: cmp qword ptr [rsp + 0x38], 0
460276: je 0x4605b0
46027c: mov rsi, r14
46027f: movzx edx, word ptr [rax - 2]
460283: rol dx, 8
460287: lea edi, [rdx + 0x2800]
46028d: cmp di, 0x7ff
460292: jbe 0x460608
460298: movzx edx, dx
46029b: mov dword ptr [rsi], edx
46029d: mov rsi, rcx
4602a0: cmp rbx, rax
4602a3: je 0x46067f
4602a9: lea rdx, [rax + 2]
4602ad: cmp rbx, rdx
4602b0: jb 0x4601a8
4602b6: lea rcx, [rsi + 4]
4602ba: cmp r12, rcx
4602bd: jb 0x460468
4602c3: mov rax, rdx
4602c6: jmp 0x46027f
4602c8: nop dword ptr [rax + rax]
4602d0: cmp dword ptr [rsp + 0x10], 5
4602d5: je 0x460256
4602db: mov eax, dword ptr [rsp + 0xb8]
4602e2: test eax, eax
4602e4: je 0x4602f1
4602e6: cmp dword ptr [rsp + 0x10], 7
4602eb: je 0x460692
4602f1: mov rax, qword ptr [rsp + 0x68]
4602f6: xor rax, qword ptr fs:[0x28]
4602ff: jne 0x460a02
460305: mov eax, dword ptr [rsp + 0x10]
460309: add rsp, 0x78
46030d: pop rbx
46030e: pop rbp
46030f: pop r12
460311: pop r13
460313: pop r14
460315: pop r15
460317: ret 
460318: nop dword ptr [rax + rax]
460320: mov rax, rsi
460323: cmp qword ptr [rsp + 0x18], 0
460329: mov dword ptr [rsp + 0x10], 6
460331: mov rcx, rdi
460334: mov qword ptr [r11], rax
460337: je 0x4601c2
46033d: mov rax, qword ptr [rsp + 0x18]
460342: mov qword ptr [rax], rcx
460345: jmp 0x4602f1
460347: nop word ptr [rax + rax]
460350: mov dword ptr [rsp + 0x10], 5
460358: jmp 0x4601b3
46035d: nop dword ptr [rax]
460360: mov rsi, qword ptr [rbp + 0x20]
460364: mov eax, dword ptr [rsi]
460366: mov r10d, eax
460369: and r10d, 7
46036d: je 0x460103
460373: test rdi, rdi
460376: jne 0x460a07
46037c: cmp r10d, 4
460380: ja 0x460a2f
460386: movzx ecx, byte ptr [rsi + 4]
46038a: mov byte ptr [rsp + 0x66], cl
46038e: cmp r10d, 1
460392: je 0x4605a2
460398: movzx ecx, byte ptr [rsi + 5]
46039c: mov rdi, r13
46039f: mov byte ptr [rsp + 0x67], cl
4603a3: mov ecx, 2
4603a8: cmp rbx, rdi
4603ab: jb 0x4608b8
4603b1: lea r8, [r14 + 4]
4603b5: cmp r12, r8
4603b8: jb 0x460798
4603be: movzx edi, byte ptr [r13]
4603c3: mov byte ptr [rsp + rcx + 0x66], dil
4603c8: movzx ecx, word ptr [rsp + 0x66]
4603cd: rol cx, 8
4603d1: lea edi, [rcx + 0x2800]
4603d7: cmp di, 0x7ff
4603dc: jbe 0x460941
4603e2: movzx ecx, cx
4603e5: mov dword ptr [r14], ecx
4603e8: mov eax, dword ptr [rsi]
4603ea: mov r10d, eax
4603ed: and r10d, 7
4603f1: movsxd r10, r10d
4603f4: test al, 6
4603f6: jne 0x4609b9
4603fc: sub r13, r10
4603ff: and eax, 0xfffffff8
460402: mov r10, qword ptr [rsp + 0x50]
460407: mov edx, dword ptr [rbp + 0x10]
46040a: add r13, 2
46040e: mov r14, r8
460411: mov r15, r9
460414: mov qword ptr [r11], r13
460417: mov dword ptr [rsi], eax
460419: jmp 0x460110
46041e: nop 
460420: mov dword ptr [rsp + 0x10], 7
460428: mov rcx, r14
46042b: mov rax, r13
46042e: jmp 0x4601b3
460433: nop dword ptr [rax + rax]
460438: mov qword ptr [rbp], rcx
46043c: mov rax, qword ptr [rsp + 0x50]
460441: add qword ptr [r15], rax
460444: jmp 0x4602db
460449: nop dword ptr [rax]
460450: mov dword ptr [rsp + 0x10], 5
460458: mov rcx, r14
46045b: mov rax, r13
46045e: jmp 0x4601b3
460463: nop dword ptr [rax + rax]
460468: mov dword ptr [rsp + 0x10], 5
460470: mov rcx, rsi
460473: jmp 0x4601b3
460478: mov rcx, r14
46047b: mov rax, rbx
46047e: mov dword ptr [rsp + 0x10], 4
460486: jmp 0x4601b3
46048b: nop dword ptr [rax + rax]
460490: xor esi, esi
460492: test r15, r15
460495: je 0x46049a
460497: mov rsi, qword ptr [r15]
46049a: add rsi, qword ptr [rsp + 0x50]
46049f: cmp rsi, r10
4604a2: je 0x46058a
4604a8: cmp rbx, r13
4604ab: je 0x46098f
4604b1: lea r10, [r13 + 2]
4604b5: cmp rbx, r10
4604b8: jb 0x460963
4604be: lea r9, [r14 + 4]
4604c2: cmp rdx, r9
4604c5: jb 0x46085f
4604cb: test byte ptr [rbp + 0x10], 2
4604cf: jne 0x4607a5
4604d5: cmp qword ptr [rsp + 0x38], 0
4604db: je 0x460741
4604e1: movzx ecx, word ptr [r10 - 2]
4604e6: lea r8, [r9 - 4]
4604ea: lea rdi, [r10 - 2]
4604ee: rol cx, 8
4604f2: lea esi, [rcx + 0x2800]
4604f8: cmp si, 0x7ff
4604fd: jbe 0x4608b0
460503: movzx ecx, cx
460506: mov dword ptr [r9 - 4], ecx
46050a: cmp rbx, r10
46050d: je 0x460886
460513: lea rcx, [r10 + 2]
460517: cmp rbx, rcx
46051a: jb 0x460886
460520: lea rsi, [r9 + 4]
460524: cmp rdx, rsi
460527: jb 0x460845
46052d: mov r9, rsi
460530: mov r10, rcx
460533: jmp 0x4604e1
460535: nop dword ptr [rax]
460538: movzx edx, word ptr [rax - 2]
46053c: mov rcx, rsi
46053f: lea r9, [rsi - 4]
460543: lea r8, [rax - 2]
460547: rol dx, 8
46054b: lea edi, [rdx + 0x2800]
460551: cmp di, 0x7ff
460556: jbe 0x46092e
46055c: movzx edx, dx
46055f: mov dword ptr [rsi - 4], edx
460562: cmp rax, rbx
460565: je 0x46047e
46056b: lea rdx, [rax + 2]
46056f: cmp rbx, rdx
460572: jb 0x4601ab
460578: add rsi, 4
46057c: cmp r12, rsi
46057f: jb 0x460350
460585: mov rax, rdx
460588: jmp 0x460538
46058a: sub rcx, rdx
46058d: mov rdx, rcx
460590: shr rdx, 0x3f
460594: add rdx, rcx
460597: sar rdx, 1
46059a: sub qword ptr [r11], rdx
46059d: jmp 0x46024e
4605a2: lea rdi, [r13 + 1]
4605a6: mov ecx, 1
4605ab: jmp 0x4603a8
4605b0: movzx edx, word ptr [rax - 2]
4605b4: lea rdi, [rcx - 4]
4605b8: lea rsi, [rax - 2]
4605bc: rol dx, 8
4605c0: lea r8d, [rdx + 0x2800]
4605c7: cmp r8w, 0x7ff
4605cd: jbe 0x460320
4605d3: movzx edx, dx
4605d6: mov dword ptr [rcx - 4], edx
4605d9: cmp rbx, rax
4605dc: je 0x46047b
4605e2: lea rdx, [rax + 2]
4605e6: cmp rdx, rbx
4605e9: ja 0x4601ab
4605ef: lea rsi, [rcx + 4]
4605f3: cmp rsi, r12
4605f6: ja 0x460350
4605fc: mov rcx, rsi
4605ff: mov rax, rdx
460602: jmp 0x4605b0
460604: nop dword ptr [rax]
460608: mov rdi, qword ptr [rsp + 0x38]
46060d: add qword ptr [rdi], 1
460611: jmp 0x4602a0
460616: cmp qword ptr [rsp + 0x18], 0
46061c: jne 0x4609d8
460622: mov rax, qword ptr [rbp + 0x20]
460626: mov dword ptr [rsp + 0x10], 0
46062e: mov qword ptr [rax], 0
460635: test byte ptr [rbp + 0x10], 1
460639: jne 0x4602f1
46063f: mov rbx, qword ptr [rsp + 8]
460644: mov qword ptr [rsp + 0x10], r9
460649: mov rdi, rbx
46064c: call 0x456100
460651: mov eax, dword ptr [rsp + 0xb8]
460658: xor ecx, ecx
46065a: xor edx, edx
46065c: xor r8d, r8d
46065f: push rax
460660: push r12
460662: mov r9, qword ptr [rsp + 0x20]
460667: mov rsi, qword ptr [rsp + 0x58]
46066c: mov rdi, qword ptr [rsp + 0x50]
460671: call rbx
460673: mov dword ptr [rsp + 0x20], eax
460677: pop rdi
460678: pop r8
46067a: jmp 0x4602f1
46067f: mov dword ptr [rsp + 0x10], 4
460687: mov rcx, rsi
46068a: mov rax, rbx
46068d: jmp 0x4601b3
460692: mov rax, qword ptr [r11]
460695: mov rdx, rbx
460698: sub rdx, rax
46069b: cmp rdx, 3
46069f: jg 0x46099a
4606a5: mov rdx, qword ptr [rbp + 0x20]
4606a9: cmp rax, rbx
4606ac: jae 0x460988
4606b2: lea rcx, [rax + 1]
4606b6: mov qword ptr [r11], rcx
4606b9: movzx esi, byte ptr [rax]
4606bc: mov byte ptr [rdx + 4], sil
4606c0: cmp rbx, rcx
4606c3: jbe 0x460731
4606c5: lea rcx, [rax + 2]
4606c9: mov qword ptr [r11], rcx
4606cc: movzx esi, byte ptr [rax + 1]
4606d0: mov byte ptr [rdx + 5], sil
4606d4: cmp rbx, rcx
4606d7: jbe 0x460731
4606d9: lea rcx, [rax + 3]
4606dd: mov qword ptr [r11], rcx
4606e0: movzx esi, byte ptr [rax + 2]
4606e4: mov byte ptr [rdx + 6], sil
4606e8: cmp rbx, rcx
4606eb: jbe 0x460731
4606ed: lea rcx, [rax + 4]
4606f1: mov qword ptr [r11], rcx
4606f4: movzx esi, byte ptr [rax + 3]
4606f8: mov byte ptr [rdx + 7], sil
4606fc: cmp rbx, rcx
4606ff: jbe 0x460731
460701: lea rcx, [rax + 5]
460705: mov qword ptr [r11], rcx
460708: movzx esi, byte ptr [rax + 4]
46070c: mov byte ptr [rdx + 8], sil
460710: cmp rbx, rcx
460713: jbe 0x460731
460715: lea rsi, [rdx + 9]
460719: add rcx, 1
46071d: add rsi, 1
460721: mov qword ptr [r11], rcx
460724: movzx edi, byte ptr [rcx - 1]
460728: mov byte ptr [rsi - 1], dil
46072c: cmp rcx, rbx
46072f: jne 0x460719
460731: sub ebx, eax
460733: mov eax, dword ptr [rdx]
460735: and eax, 0xfffffff8
460738: or eax, ebx
46073a: mov dword ptr [rdx], eax
46073c: jmp 0x4602f1
460741: movzx ecx, word ptr [r10 - 2]
460746: lea rdi, [r9 - 4]
46074a: lea r8, [r10 - 2]
46074e: rol cx, 8
460752: lea esi, [rcx + 0x2800]
460758: cmp si, 0x7ff
46075d: jbe 0x4609f7
460763: movzx ecx, cx
460766: mov dword ptr [r9 - 4], ecx
46076a: cmp rbx, r10
46076d: je 0x460886
460773: lea rcx, [r10 + 2]
460777: cmp rbx, rcx
46077a: jb 0x460886
460780: lea rsi, [r9 + 4]
460784: cmp rdx, rsi
460787: jb 0x460845
46078d: mov r9, rsi
460790: mov r10, rcx
460793: jmp 0x460741
460795: nop dword ptr [rax]
460798: mov dword ptr [rsp + 0x10], 5
4607a0: jmp 0x4602f1
4607a5: mov rsi, qword ptr [rsp + 0x38]
4607aa: test rsi, rsi
4607ad: je 0x4607fa
4607af: mov rdi, r14
4607b2: movzx ecx, word ptr [r10 - 2]
4607b7: rol cx, 8
4607bb: lea r8d, [rcx + 0x2800]
4607c2: cmp r8w, 0x7ff
4607c8: jbe 0x46097f
4607ce: movzx ecx, cx
4607d1: mov dword ptr [rdi], ecx
4607d3: mov rdi, r9
4607d6: cmp rbx, r10
4607d9: je 0x46095b
4607df: lea rcx, [r10 + 2]
4607e3: cmp rbx, rcx
4607e6: jb 0x46095b
4607ec: lea r9, [rdi + 4]
4607f0: cmp rdx, r9
4607f3: jb 0x460842
4607f5: mov r10, rcx
4607f8: jmp 0x4607b2
4607fa: movzx ecx, word ptr [r10 - 2]
4607ff: lea rdi, [r9 - 4]
460803: lea r8, [r10 - 2]
460807: rol cx, 8
46080b: lea esi, [rcx + 0x2800]
460811: cmp si, 0x7ff
460816: jbe 0x4609f7
46081c: movzx ecx, cx
46081f: mov dword ptr [r9 - 4], ecx
460823: cmp rbx, r10
460826: je 0x460886
460828: lea rcx, [r10 + 2]
46082c: cmp rbx, rcx
46082f: jb 0x460886
460831: lea rsi, [r9 + 4]
460835: cmp rdx, rsi
460838: jb 0x460845
46083a: mov r9, rsi
46083d: mov r10, rcx
460840: jmp 0x4607fa
460842: mov r9, rdi
460845: mov qword ptr [r11], r10
460848: cmp rdx, r9
46084b: jne 0x460867
46084d: cmp rdx, r14
460850: jne 0x46024e
460856: sub dword ptr [rbp + 0x14], 1
46085a: jmp 0x46024e
46085f: mov qword ptr [r11], r13
460862: cmp rdx, r14
460865: je 0x460856
460867: lea rcx, [rip + 0x39c32]
46086e: mov edx, 0x2ea
460873: lea rsi, [rip + 0x399c0]
46087a: lea rdi, [rip + 0x399e1]
460881: call 0x4032a0
460886: mov r15, r9
460889: mov qword ptr [r11], r10
46088c: cmp rdx, r15
46088f: jne 0x460867
460891: lea rcx, [rip + 0x39c08]
460898: mov edx, 0x2eb
46089d: lea rsi, [rip + 0x39996]
4608a4: lea rdi, [rip + 0x39a35]
4608ab: call 0x4032a0
4608b0: mov r15, r8
4608b3: mov r10, rdi
4608b6: jmp 0x460889
4608b8: mov qword ptr [r11], rbx
4608bb: cmp r13, rbx
4608be: jae 0x460921
4608c0: movzx eax, byte ptr [r13]
4608c5: mov byte ptr [rsi + rcx + 4], al
4608c9: lea rax, [r13 + 1]
4608cd: cmp rbx, rax
4608d0: jbe 0x460921
4608d2: movzx edi, byte ptr [r13 + 1]
4608d7: lea rdx, [r13 + 2]
4608db: mov byte ptr [rsi + rcx + 5], dil
4608e0: cmp rbx, rdx
4608e3: jbe 0x460921
4608e5: movzx edi, byte ptr [r13 + 2]
4608ea: lea rax, [r13 + 3]
4608ee: mov byte ptr [rsi + rcx + 6], dil
4608f3: cmp rbx, rax
4608f6: jbe 0x460921
4608f8: movzx edi, byte ptr [r13 + 3]
4608fd: lea rax, [r13 + 4]
460901: mov byte ptr [rsi + rcx + 7], dil
460906: cmp rbx, rax
460909: jbe 0x460921
46090b: add rcx, rsi
46090e: movzx edx, byte ptr [rax]
460911: add rax, 1
460915: add rcx, 1
460919: mov byte ptr [rcx + 7], dl
46091c: cmp rbx, rax
46091f: jne 0x46090e
460921: mov dword ptr [rsp + 0x10], 7
460929: jmp 0x4602f1
46092e: mov dword ptr [rsp + 0x10], 6
460936: mov rcx, r9
460939: mov rax, r8
46093c: jmp 0x4601b3
460941: cmp qword ptr [rsp + 0x38], 0
460947: je 0x46094e
460949: and edx, 2
46094c: jne 0x46096e
46094e: mov dword ptr [rsp + 0x10], 6
460956: jmp 0x4602f1
46095b: mov r15, rdi
46095e: jmp 0x460889
460963: mov r15, r14
460966: mov r10, r13
460969: jmp 0x460889
46096e: mov rdi, qword ptr [rsp + 0x38]
460973: mov r8, r14
460976: add qword ptr [rdi], 1
46097a: jmp 0x4603f1
46097f: add qword ptr [rsi], 1
460983: jmp 0x4607d6
460988: xor ebx, ebx
46098a: jmp 0x460733
46098f: mov r15, r14
460992: mov r10, rbx
460995: jmp 0x460889
46099a: lea rcx, [rip + 0x39aff]
4609a1: mov edx, 0x31e
4609a6: lea rsi, [rip + 0x3988d]
4609ad: lea rdi, [rip + 0x398bf]
4609b4: call 0x4032a0
4609b9: lea rcx, [rip + 0x39aa0]
4609c0: mov edx, 0x1c9
4609c5: lea rsi, [rip + 0x398e0]
4609cc: lea rdi, [rip + 0x3995d]
4609d3: call 0x4032a0
4609d8: lea rcx, [rip + 0x39ac1]
4609df: mov edx, 0x1a4
4609e4: lea rsi, [rip + 0x3984f]
4609eb: lea rdi, [rip + 0x3985c]
4609f2: call 0x4032a0
4609f7: mov r15, rdi
4609fa: mov r10, r8
4609fd: jmp 0x460889
460a02: call 0x4547a0
460a07: lea rcx, [rip + 0x39a92]
460a0e: mov edx, 0x234
460a13: lea rsi, [rip + 0x39820]
460a1a: lea rdi, [rip + 0x3982d]
460a21: call 0x4032a0
460a26: mov dword ptr [rsp + 0x10], eax
460a2a: jmp 0x4602db
460a2f: lea rcx, [rip + 0x39a2a]
460a36: mov edx, 0x18b
460a3b: lea rsi, [rip + 0x3986a]
460a42: lea rdi, [rip + 0x398b7]
460a49: call 0x4032a0
460a4e: nop 
460a50: endbr64 
460a54: push r15
460a56: mov r15, r9
460a59: push r14
460a5b: push r13
460a5d: push r12
460a5f: push rbp
460a60: mov rbp, rsi
460a63: push rbx
460a64: mov rbx, rcx
460a67: sub rsp, 0x98
460a6e: mov r13d, dword ptr [rsi + 0x10]
460a72: mov qword ptr [rsp + 0x50], rdi
460a77: mov r12d, dword ptr [rsp + 0xd0]
460a7f: mov qword ptr [rsp], rdx
460a83: mov qword ptr [rsp + 0x10], r8
460a88: mov rax, qword ptr fs:[0x28]
460a91: mov qword ptr [rsp + 0x88], rax
460a99: xor eax, eax
460a9b: lea rax, [rdi + 0x68]
460a9f: mov qword ptr [rsp + 0x30], 0
460aa8: mov qword ptr [rsp + 0x38], rax
460aad: lea rax, [rsi + 0x30]
460ab1: mov qword ptr [rsp + 0x40], rax
460ab6: test r13b, 1
460aba: jne 0x460ae1
460abc: mov rax, qword ptr [rdi + 0x90]
460ac3: cmp qword ptr [rdi + 0x68], 0
460ac8: mov qword ptr [rsp + 0x30], rax
460acd: je 0x460ae1
460acf: ror rax, 0x11
460ad3: xor rax, qword ptr fs:[0x30]
460adc: mov qword ptr [rsp + 0x30], rax
460ae1: test r12d, r12d
460ae4: jne 0x4611a1
460aea: mov rax, qword ptr [rsp]
460aee: mov rdi, qword ptr [rsp + 0x10]
460af3: lea rdx, [rsp + 0x60]
460af8: test rdi, rdi
460afb: mov r12, qword ptr [rax]
460afe: mov rax, rdi
460b01: cmove rax, rbp
460b05: test r15, r15
460b08: mov r14, qword ptr [rax]
460b0b: mov rax, qword ptr [rbp + 8]
460b0f: mov qword ptr [rsp + 0x60], 0
460b18: mov qword ptr [rsp + 8], rax
460b1d: mov eax, 0
460b22: cmovne rax, rdx
460b26: mov qword ptr [rsp + 0x48], rax
460b2b: mov eax, dword ptr [rsp + 0xd8]
460b32: test eax, eax
460b34: jne 0x460d78
460b3a: mov r10, qword ptr [rsp + 8]
460b3f: mov qword ptr [rsp + 8], r15
460b44: xor r11d, r11d
460b47: nop word ptr [rax + rax]
460b50: mov rax, qword ptr [rsp + 8]
460b55: test rax, rax
460b58: je 0x460b5d
460b5a: add r11, qword ptr [rax]
460b5d: mov qword ptr [rsp + 0x70], r12
460b62: mov qword ptr [rsp + 0x78], r14
460b67: cmp rbx, r12
460b6a: je 0x4611fc
460b70: and r13d, 2
460b74: mov rcx, r14
460b77: mov rdx, r12
460b7a: mov r15d, 4
460b80: lea rdi, [rdx + 4]
460b84: cmp rbx, rdi
460b87: jb 0x460ca0
460b8d: lea r8, [rcx + 2]
460b91: cmp r10, r8
460b94: jb 0x460cf0
460b9a: mov esi, dword ptr [rdx]
460b9c: cmp esi, 0xffff
460ba2: ja 0x460d00
460ba8: lea eax, [rsi - 0xd800]
460bae: cmp eax, 0x7ff
460bb3: jbe 0x460d38
460bb9: rol si, 8
460bbd: mov rdx, rdi
460bc0: mov word ptr [rcx], si
460bc3: mov rcx, r8
460bc6: mov qword ptr [rsp + 0x78], r8
460bcb: mov qword ptr [rsp + 0x70], rdi
460bd0: cmp rbx, rdx
460bd3: jne 0x460b80
460bd5: nop dword ptr [rax]
460bd8: mov rax, qword ptr [rsp]
460bdc: cmp qword ptr [rsp + 0x10], 0
460be2: mov qword ptr [rax], rdx
460be5: jne 0x460cb9
460beb: add dword ptr [rbp + 0x14], 1
460bef: test byte ptr [rbp + 0x10], 1
460bf3: jne 0x460f40
460bf9: cmp r14, rcx
460bfc: mov qword ptr [rsp + 0x28], r11
460c01: mov qword ptr [rsp + 0x18], rcx
460c06: jae 0x461030
460c0c: mov r13, qword ptr [rsp + 0x30]
460c11: mov rax, qword ptr [rbp]
460c15: mov qword ptr [rsp + 0x20], r10
460c1a: mov rdi, r13
460c1d: mov qword ptr [rsp + 0x68], rax
460c22: call 0x456100
460c27: mov eax, dword ptr [rsp + 0xd8]
460c2e: lea rdx, [rsp + 0x68]
460c33: xor r8d, r8d
460c36: push rax
460c37: push 0
460c39: mov r9, qword ptr [rsp + 0x18]
460c3e: mov rcx, qword ptr [rsp + 0x28]
460c43: mov rsi, qword ptr [rsp + 0x50]
460c48: mov rdi, qword ptr [rsp + 0x48]
460c4d: call r13
460c50: pop rsi
460c51: pop rdi
460c52: cmp eax, 4
460c55: mov r10, qword ptr [rsp + 0x20]
460c5a: mov r13d, eax
460c5d: je 0x460d60
460c63: mov r15, qword ptr [rsp + 0x68]
460c68: mov rcx, qword ptr [rsp + 0x18]
460c6d: mov r11, qword ptr [rsp + 0x28]
460c72: cmp r15, rcx
460c75: jne 0x4610c0
460c7b: test r13d, r13d
460c7e: jne 0x46123e
460c84: mov rax, qword ptr [rsp]
460c88: mov r14, qword ptr [rbp]
460c8c: mov r11, qword ptr [rsp + 0x60]
460c91: mov r13d, dword ptr [rbp + 0x10]
460c95: mov r12, qword ptr [rax]
460c98: jmp 0x460b50
460c9d: nop dword ptr [rax]
460ca0: mov rax, qword ptr [rsp]
460ca4: cmp qword ptr [rsp + 0x10], 0
460caa: mov r15d, 7
460cb0: mov qword ptr [rax], rdx
460cb3: je 0x460beb
460cb9: mov rax, qword ptr [rsp + 0x10]
460cbe: mov r10d, r15d
460cc1: mov qword ptr [rax], rcx
460cc4: mov rax, qword ptr [rsp + 0x88]
460ccc: xor rax, qword ptr fs:[0x28]
460cd5: jne 0x461731
460cdb: add rsp, 0x98
460ce2: mov eax, r10d
460ce5: pop rbx
460ce6: pop rbp
460ce7: pop r12
460ce9: pop r13
460ceb: pop r14
460ced: pop r15
460cef: ret 
460cf0: mov r15d, 5
460cf6: jmp 0x460bd8
460cfb: nop dword ptr [rax + rax]
460d00: shr esi, 7
460d03: cmp esi, 0x1c00
460d09: je 0x4610b0
460d0f: cmp qword ptr [rsp + 0x48], 0
460d15: je 0x460d2a
460d17: test byte ptr [rbp + 0x10], 8
460d1b: jne 0x461040
460d21: test r13d, r13d
460d24: jne 0x460f20
460d2a: mov r15d, 6
460d30: jmp 0x460bd8
460d35: nop dword ptr [rax]
460d38: mov rax, qword ptr [rsp + 0x48]
460d3d: test rax, rax
460d40: je 0x460d2a
460d42: test r13d, r13d
460d45: je 0x460d2a
460d47: add qword ptr [rax], 1
460d4b: mov rdx, rdi
460d4e: mov qword ptr [rsp + 0x70], rdi
460d53: jmp 0x460bd0
460d58: nop dword ptr [rax + rax]
460d60: mov r13d, r15d
460d63: cmp r15d, 5
460d67: jne 0x460c7b
460d6d: jmp 0x460c84
460d72: nop word ptr [rax + rax]
460d78: mov r11, qword ptr [rbp + 0x20]
460d7c: mov eax, dword ptr [r11]
460d7f: mov ecx, eax
460d81: and ecx, 7
460d84: je 0x460b3a
460d8a: test rdi, rdi
460d8d: jne 0x4616b5
460d93: mov qword ptr [rsp + 0x70], r12
460d98: mov qword ptr [rsp + 0x78], r14
460d9d: cmp ecx, 4
460da0: ja 0x461712
460da6: movzx esi, byte ptr [r11 + 4]
460dab: movsxd rdx, ecx
460dae: mov byte ptr [rsp + 0x84], sil
460db6: cmp ecx, 1
460db9: je 0x460deb
460dbb: movzx ecx, byte ptr [r11 + 5]
460dc0: mov byte ptr [rsp + 0x85], cl
460dc7: cmp rdx, 2
460dcb: je 0x460deb
460dcd: movzx ecx, byte ptr [r11 + 6]
460dd2: mov byte ptr [rsp + 0x86], cl
460dd9: cmp rdx, 3
460ddd: je 0x460deb
460ddf: movzx ecx, byte ptr [r11 + 7]
460de4: mov byte ptr [rsp + 0x87], cl
460deb: mov rcx, r12
460dee: sub rcx, rdx
460df1: add rcx, 4
460df5: cmp rbx, rcx
460df8: jb 0x46133b
460dfe: lea rsi, [r14 + 2]
460e02: mov r10d, 5
460e08: cmp qword ptr [rsp + 8], rsi
460e0d: jb 0x460cc4
460e13: lea rcx, [r12 + 1]
460e18: lea r9, [rdx + 1]
460e1c: mov qword ptr [rsp + 0x70], rcx
460e21: movzx edi, byte ptr [r12]
460e26: mov qword ptr [rsp + 0x18], r9
460e2b: mov byte ptr [rsp + rdx + 0x84], dil
460e33: cmp r9, 3
460e37: ja 0x460e8d
460e39: cmp rbx, rcx
460e3c: jbe 0x460e8d
460e3e: lea rcx, [r12 + 2]
460e43: lea rdi, [rdx + 2]
460e47: mov qword ptr [rsp + 0x70], rcx
460e4c: movzx r8d, byte ptr [r12 + 1]
460e52: mov byte ptr [rsp + rdx + 0x85], r8b
460e5a: cmp rdi, 3
460e5e: ja 0x461331
460e64: cmp rbx, rcx
460e67: jbe 0x461331
460e6d: mov qword ptr [rsp + 0x18], 4
460e76: lea rcx, [r12 + 3]
460e7b: mov qword ptr [rsp + 0x70], rcx
460e80: movzx ecx, byte ptr [r12 + 2]
460e86: mov byte ptr [rsp + 0x87], cl
460e8d: mov ecx, dword ptr [rsp + 0x84]
460e94: lea rdi, [rsp + 0x84]
460e9c: mov qword ptr [rsp + 0x20], rdi
460ea1: mov qword ptr [rsp + 0x70], rdi
460ea6: cmp ecx, 0xffff
460eac: ja 0x4613d9
460eb2: lea edi, [rcx - 0xd800]
460eb8: cmp edi, 0x7ff
460ebe: jbe 0x46143d
460ec4: rol cx, 8
460ec8: mov word ptr [r14], cx
460ecc: mov qword ptr [rsp + 0x78], rsi
460ed1: lea rcx, [rsp + 0x88]
460ed9: mov r12d, 4
460edf: mov qword ptr [rsp + 0x70], rcx
460ee4: cmp rdx, r12
460ee7: jge 0x4616f3
460eed: mov rsi, qword ptr [rsp]
460ef1: sub r12, rdx
460ef4: and eax, 0xfffffff8
460ef7: mov r14, qword ptr [rsp + 0x78]
460efc: mov r10, qword ptr [rsp + 8]
460f01: mov r13d, dword ptr [rbp + 0x10]
460f05: mov qword ptr [rsp + 8], r15
460f0a: add r12, qword ptr [rsi]
460f0d: mov qword ptr [rsi], r12
460f10: mov dword ptr [r11], eax
460f13: mov r11, qword ptr [rsp + 0x60]
460f18: jmp 0x460b50
460f1d: nop dword ptr [rax]
460f20: mov rax, qword ptr [rsp + 0x48]
460f25: add rdx, 4
460f29: mov r15d, 6
460f2f: mov qword ptr [rsp + 0x70], rdx
460f34: add qword ptr [rax], 1
460f38: jmp 0x460bd0
460f3d: nop dword ptr [rax]
460f40: mov r10d, r15d
460f43: mov r15, qword ptr [rsp + 8]
460f48: mov qword ptr [rbp], rcx
460f4c: mov rax, qword ptr [rsp + 0x60]
460f51: add qword ptr [r15], rax
460f54: mov eax, dword ptr [rsp + 0xd8]
460f5b: test eax, eax
460f5d: je 0x460cc4
460f63: cmp r10d, 7
460f67: jne 0x460cc4
460f6d: mov rax, qword ptr [rsp]
460f71: mov rdx, rbx
460f74: mov rax, qword ptr [rax]
460f77: sub rdx, rax
460f7a: cmp rdx, 3
460f7e: jg 0x4616d4
460f84: mov rdx, qword ptr [rbp + 0x20]
460f88: cmp rax, rbx
460f8b: jae 0x461492
460f91: mov rdi, qword ptr [rsp]
460f95: lea rcx, [rax + 1]
460f99: mov qword ptr [rdi], rcx
460f9c: movzx esi, byte ptr [rax]
460f9f: mov byte ptr [rdx + 4], sil
460fa3: cmp rbx, rcx
460fa6: jbe 0x461018
460fa8: lea rcx, [rax + 2]
460fac: mov qword ptr [rdi], rcx
460faf: movzx esi, byte ptr [rax + 1]
460fb3: mov byte ptr [rdx + 5], sil
460fb7: cmp rbx, rcx
460fba: jbe 0x461018
460fbc: lea rcx, [rax + 3]
460fc0: mov qword ptr [rdi], rcx
460fc3: movzx esi, byte ptr [rax + 2]
460fc7: mov byte ptr [rdx + 6], sil
460fcb: cmp rbx, rcx
460fce: jbe 0x461018
460fd0: lea rcx, [rax + 4]
460fd4: mov qword ptr [rdi], rcx
460fd7: movzx esi, byte ptr [rax + 3]
460fdb: mov byte ptr [rdx + 7], sil
460fdf: cmp rbx, rcx
460fe2: jbe 0x461018
460fe4: lea rcx, [rax + 5]
460fe8: mov qword ptr [rdi], rcx
460feb: movzx esi, byte ptr [rax + 4]
460fef: mov byte ptr [rdx + 8], sil
460ff3: cmp rbx, rcx
460ff6: jbe 0x461018
460ff8: lea rsi, [rdx + 9]
460ffc: mov rdi, qword ptr [rsp]
461000: add rcx, 1
461004: add rsi, 1
461008: mov qword ptr [rdi], rcx
46100b: movzx edi, byte ptr [rcx - 1]
46100f: mov byte ptr [rsi - 1], dil
461013: cmp rcx, rbx
461016: jne 0x460ffc
461018: sub ebx, eax
46101a: mov eax, dword ptr [rdx]
46101c: and eax, 0xfffffff8
46101f: or eax, ebx
461021: mov dword ptr [rdx], eax
461023: jmp 0x460cc4
461028: nop dword ptr [rax + rax]
461030: mov r13d, r15d
461033: jmp 0x460c7b
461038: nop dword ptr [rax + rax]
461040: mov qword ptr [rsp + 0x20], r11
461045: lea rcx, [rsp + 0x70]
46104a: mov r8, rbx
46104d: mov rsi, rbp
461050: mov qword ptr [rsp + 0x18], r10
461055: sub rsp, 8
461059: push qword ptr [rsp + 0x50]
46105d: mov rax, qword ptr [rsp + 0x10]
461062: mov rdi, qword ptr [rsp + 0x60]
461067: mov rdx, qword ptr [rax]
46106a: lea r9, [rsp + 0x88]
461072: call 0x461780
461077: pop r8
461079: pop r9
46107b: cmp eax, 6
46107e: mov rdx, qword ptr [rsp + 0x70]
461083: mov rcx, qword ptr [rsp + 0x78]
461088: mov r15d, eax
46108b: mov r10, qword ptr [rsp + 0x18]
461090: mov r11, qword ptr [rsp + 0x20]
461095: je 0x460d21
46109b: cmp eax, 5
46109e: jne 0x460bd0
4610a4: jmp 0x460bd8
4610a9: nop dword ptr [rax]
4610b0: mov qword ptr [rsp + 0x70], rdi
4610b5: mov rdx, rdi
4610b8: jmp 0x460bd0
4610bd: nop dword ptr [rax]
4610c0: mov rsi, qword ptr [rsp + 8]
4610c5: xor eax, eax
4610c7: test rsi, rsi
4610ca: je 0x4610cf
4610cc: mov rax, qword ptr [rsi]
4610cf: add rax, qword ptr [rsp + 0x60]
4610d4: cmp rax, r11
4610d7: je 0x46118e
4610dd: mov rax, qword ptr [rsp]
4610e1: mov r11d, dword ptr [rbp + 0x10]
4610e5: mov qword ptr [rsp + 0x70], r12
4610ea: mov qword ptr [rsp + 0x78], r14
4610ef: mov qword ptr [rax], r12
4610f2: cmp rbx, r12
4610f5: je 0x461499
4610fb: and r11d, 2
4610ff: mov rcx, r14
461102: mov edi, 4
461107: lea rdx, [r12 + 4]
46110c: cmp rbx, rdx
46110f: jb 0x46120d
461115: lea rsi, [rcx + 2]
461119: cmp r15, rsi
46111c: jb 0x4612a3
461122: mov eax, dword ptr [r12]
461126: cmp eax, 0xffff
46112b: ja 0x4612c0
461131: lea r8d, [rax - 0xd800]
461138: cmp r8d, 0x7ff
46113f: jbe 0x461309
461145: rol ax, 8
461149: mov r12, rdx
46114c: mov word ptr [rcx], ax
46114f: mov rcx, rsi
461152: mov qword ptr [rsp + 0x78], rsi
461157: mov qword ptr [rsp + 0x70], rdx
46115c: cmp rbx, r12
46115f: jne 0x461107
461161: mov rax, qword ptr [rsp]
461165: mov qword ptr [rax], rbx
461168: cmp qword ptr [rsp + 0x68], rcx
46116d: jne 0x46121f
461173: cmp edi, 5
461176: jne 0x4614a2
46117c: cmp r14, rcx
46117f: jne 0x460c7b
461185: sub dword ptr [rbp + 0x14], 1
461189: jmp 0x460c7b
46118e: mov rsi, qword ptr [rsp]
461192: sub rcx, r15
461195: lea rax, [rcx + rcx]
461199: sub qword ptr [rsi], rax
46119c: jmp 0x460c7b
4611a1: cmp qword ptr [rsp + 0x10], 0
4611a7: jne 0x461696
4611ad: mov rax, qword ptr [rbp + 0x20]
4611b1: xor r10d, r10d
4611b4: mov qword ptr [rax], 0
4611bb: test byte ptr [rbp + 0x10], 1
4611bf: jne 0x460cc4
4611c5: mov rbx, qword ptr [rsp + 0x30]
4611ca: mov rdi, rbx
4611cd: call 0x456100
4611d2: mov eax, dword ptr [rsp + 0xd8]
4611d9: xor edx, edx
4611db: xor ecx, ecx
4611dd: mov r9, r15
4611e0: xor r8d, r8d
4611e3: push rax
4611e4: push r12
4611e6: mov rsi, qword ptr [rsp + 0x50]
4611eb: mov rdi, qword ptr [rsp + 0x48]
4611f0: call rbx
4611f2: mov r10d, eax
4611f5: pop rax
4611f6: pop rdx
4611f7: jmp 0x460cc4
4611fc: mov rcx, r14
4611ff: mov rdx, rbx
461202: mov r15d, 4
461208: jmp 0x460bd8
46120d: mov rax, qword ptr [rsp]
461211: mov qword ptr [rax], r12
461214: cmp rcx, qword ptr [rsp + 0x68]
461219: je 0x4614a2
46121f: lea rcx, [rip + 0x391fa]
461226: mov edx, 0x2ea
46122b: lea rsi, [rip + 0x39008]
461232: lea rdi, [rip + 0x39029]
461239: call 0x4032a0
46123e: mov r10d, r13d
461241: jmp 0x460f54
461246: mov dword ptr [rsp + 0x20], r11d
46124b: lea rcx, [rsp + 0x70]
461250: mov r8, rbx
461253: mov rsi, rbp
461256: mov qword ptr [rsp + 0x18], r10
46125b: sub rsp, 8
46125f: push qword ptr [rsp + 0x50]
461263: mov rax, qword ptr [rsp + 0x10]
461268: mov rdi, qword ptr [rsp + 0x60]
46126d: mov rdx, qword ptr [rax]
461270: lea r9, [rsp + 0x88]
461278: call 0x461780
46127d: pop rdx
46127e: pop rcx
46127f: cmp eax, 6
461282: mov r12, qword ptr [rsp + 0x70]
461287: mov rcx, qword ptr [rsp + 0x78]
46128c: mov edi, eax
46128e: mov r10, qword ptr [rsp + 0x18]
461293: mov r11d, dword ptr [rsp + 0x20]
461298: je 0x4612e4
46129a: cmp eax, 5
46129d: jne 0x46115c
4612a3: mov rsi, qword ptr [rsp]
4612a7: mov rax, rcx
4612aa: mov rcx, qword ptr [rsp + 0x68]
4612af: mov qword ptr [rsi], r12
4612b2: cmp rax, rcx
4612b5: je 0x46117c
4612bb: jmp 0x46121f
4612c0: shr eax, 7
4612c3: cmp eax, 0x1c00
4612c8: je 0x46147a
4612ce: cmp qword ptr [rsp + 0x48], 0
4612d4: je 0x46120d
4612da: test byte ptr [rbp + 0x10], 8
4612de: jne 0x461246
4612e4: test r11d, r11d
4612e7: je 0x46120d
4612ed: mov rax, qword ptr [rsp + 0x48]
4612f2: add r12, 4
4612f6: mov edi, 6
4612fb: mov qword ptr [rsp + 0x70], r12
461300: add qword ptr [rax], 1
461304: jmp 0x46115c
461309: mov rax, qword ptr [rsp + 0x48]
46130e: test rax, rax
461311: je 0x46120d
461317: test r11d, r11d
46131a: je 0x46120d
461320: add qword ptr [rax], 1
461324: mov r12, rdx
461327: mov qword ptr [rsp + 0x70], rdx
46132c: jmp 0x46115c
461331: mov qword ptr [rsp + 0x18], rdi
461336: jmp 0x460e8d
46133b: mov rax, qword ptr [rsp]
46133f: mov qword ptr [rax], rbx
461342: cmp r12, rbx
461345: jae 0x4613ce
46134b: lea rax, [r12 + 1]
461350: mov qword ptr [rsp + 0x70], rax
461355: movzx esi, byte ptr [r12]
46135a: mov byte ptr [r11 + rdx + 4], sil
46135f: cmp rbx, rax
461362: jbe 0x4613ce
461364: lea rax, [r12 + 2]
461369: mov qword ptr [rsp + 0x70], rax
46136e: movzx edi, byte ptr [r12 + 1]
461374: mov byte ptr [r11 + rdx + 5], dil
461379: cmp rbx, rax
46137c: jbe 0x4613ce
46137e: lea rax, [r12 + 3]
461383: mov qword ptr [rsp + 0x70], rax
461388: movzx edi, byte ptr [r12 + 2]
46138e: mov byte ptr [r11 + rdx + 6], dil
461393: cmp rbx, rax
461396: jbe 0x4613ce
461398: lea rax, [r12 + 4]
46139d: mov qword ptr [rsp + 0x70], rax
4613a2: movzx esi, byte ptr [r12 + 3]
4613a8: mov byte ptr [r11 + rdx + 7], sil
4613ad: cmp rbx, rax
4613b0: jbe 0x4613ce
4613b2: add rdx, r11
4613b5: add rax, 1
4613b9: add rdx, 1
4613bd: mov qword ptr [rsp + 0x70], rax
4613c2: movzx ecx, byte ptr [rax - 1]
4613c6: mov byte ptr [rdx + 7], cl
4613c9: cmp rbx, rax
4613cc: jne 0x4613b5
4613ce: mov r10d, 7
4613d4: jmp 0x460cc4
4613d9: shr ecx, 7
4613dc: cmp ecx, 0x1c00
4613e2: je 0x460ed1
4613e8: cmp qword ptr [rsp + 0x48], 0
4613ee: je 0x461487
4613f4: test r13b, 8
4613f8: jne 0x4614c1
4613fe: and r13d, 2
461402: mov r10d, 6
461408: mov r12, rdi
46140b: je 0x460cc4
461411: mov rax, qword ptr [rsp + 0x48]
461416: add r12, 4
46141a: mov qword ptr [rsp + 0x70], r12
46141f: add qword ptr [rax], 1
461423: mov rax, qword ptr [rsp + 0x20]
461428: cmp r12, rax
46142b: je 0x461487
46142d: sub r12, rax
461430: mov eax, dword ptr [r11]
461433: mov edx, eax
461435: and edx, 7
461438: jmp 0x460ee4
46143d: cmp qword ptr [rsp + 0x48], 0
461443: mov r10d, 6
461449: je 0x460cc4
46144f: and r13d, 2
461453: je 0x460cc4
461459: mov rsi, qword ptr [rsp + 0x48]
46145e: lea rcx, [rsp + 0x88]
461466: mov r12d, 4
46146c: mov qword ptr [rsp + 0x70], rcx
461471: add qword ptr [rsi], 1
461475: jmp 0x460ee4
46147a: mov qword ptr [rsp + 0x70], rdx
46147f: mov r12, rdx
461482: jmp 0x46115c
461487: mov r10d, 6
46148d: jmp 0x460cc4
461492: xor ebx, ebx
461494: jmp 0x46101a
461499: cmp r15, r14
46149c: jne 0x46121f
4614a2: lea rcx, [rip + 0x38f77]
4614a9: mov edx, 0x2eb
4614ae: lea rsi, [rip + 0x38d85]
4614b5: lea rdi, [rip + 0x38e24]
4614bc: call 0x4032a0
4614c1: mov qword ptr [rsp + 0x58], r11
4614c6: mov r8, rdi
4614c9: lea rcx, [rsp + 0x70]
4614ce: mov rdx, r12
4614d1: add r8, qword ptr [rsp + 0x18]
4614d6: sub rsp, 8
4614da: mov rsi, rbp
4614dd: push qword ptr [rsp + 0x50]
4614e1: mov rdi, qword ptr [rsp + 0x60]
4614e6: lea r9, [rsp + 0x88]
4614ee: mov qword ptr [rsp + 0x38], r8
4614f3: call 0x461780
4614f8: pop r11
4614fa: pop r12
4614fc: cmp eax, 6
4614ff: mov r12, qword ptr [rsp + 0x70]
461504: mov r11, qword ptr [rsp + 0x58]
461509: mov r10d, eax
46150c: je 0x46152c
46150e: cmp r12, qword ptr [rsp + 0x20]
461513: mov r8, qword ptr [rsp + 0x28]
461518: je 0x46153b
46151a: mov eax, dword ptr [r11]
46151d: sub r12, qword ptr [rsp + 0x20]
461522: mov edx, eax
461524: and edx, 7
461527: jmp 0x460ee4
46152c: and r13b, 2
461530: je 0x461423
461536: jmp 0x461411
46153b: cmp eax, 7
46153e: jne 0x461650
461544: lea rdx, [rsp + 0x88]
46154c: cmp r8, rdx
46154f: je 0x461755
461555: mov eax, dword ptr [r11]
461558: mov rbx, qword ptr [rsp + 0x18]
46155d: mov ecx, eax
46155f: mov rsi, rbx
461562: and eax, 0xfffffff8
461565: and ecx, 7
461568: sub rsi, rcx
46156b: mov rcx, rsi
46156e: mov rsi, qword ptr [rsp]
461572: add qword ptr [rsi], rcx
461575: movsxd rcx, eax
461578: cmp rcx, rbx
46157b: jge 0x461736
461581: cmp qword ptr [rsp + 0x18], 4
461587: ja 0x461677
46158d: or eax, dword ptr [rsp + 0x18]
461591: mov dword ptr [r11], eax
461594: cmp r8, qword ptr [rsp + 0x20]
461599: jbe 0x4613ce
46159f: movzx eax, byte ptr [rsp + 0x84]
4615a7: mov byte ptr [r11 + 4], al
4615ab: lea rax, [rsp + 0x85]
4615b3: cmp r8, rax
4615b6: jbe 0x4613ce
4615bc: movzx eax, byte ptr [rsp + 0x85]
4615c4: mov byte ptr [r11 + 5], al
4615c8: lea rax, [rsp + 0x86]
4615d0: cmp r8, rax
4615d3: jbe 0x4613ce
4615d9: movzx eax, byte ptr [rsp + 0x86]
4615e1: mov byte ptr [r11 + 6], al
4615e5: lea rax, [rsp + 0x87]
4615ed: cmp r8, rax
4615f0: jbe 0x4613ce
4615f6: movzx eax, byte ptr [rsp + 0x87]
4615fe: mov byte ptr [r11 + 7], al
461602: cmp r8, rdx
461605: jbe 0x4613ce
46160b: movzx edx, byte ptr [rsp + 0x88]
461613: lea rax, [rsp + 0x89]
46161b: mov qword ptr [rsp + 0x70], rax
461620: mov byte ptr [r11 + 8], dl
461624: cmp r8, rax
461627: jbe 0x4613ce
46162d: add r11, 9
461631: add rax, 1
461635: add r11, 1
461639: mov qword ptr [rsp + 0x70], rax
46163e: movzx edx, byte ptr [rax - 1]
461642: mov byte ptr [r11 - 1], dl
461646: cmp r8, rax
461649: jne 0x461631
46164b: jmp 0x4613ce
461650: test eax, eax
461652: jne 0x460cc4
461658: mov rax, qword ptr [rsp]
46165c: mov r10, qword ptr [rsp + 8]
461661: mov qword ptr [rsp + 8], r15
461666: mov r11, qword ptr [rsp + 0x60]
46166b: mov r13d, dword ptr [rbp + 0x10]
46166f: mov r12, qword ptr [rax]
461672: jmp 0x460b50
461677: lea rcx, [rip + 0x38d62]
46167e: mov edx, 0x1e6
461683: lea rsi, [rip + 0x38c22]
46168a: lea rdi, [rip + 0x38d17]
461691: call 0x4032a0
461696: lea rcx, [rip + 0x38d83]
46169d: mov edx, 0x1a4
4616a2: lea rsi, [rip + 0x38b91]
4616a9: lea rdi, [rip + 0x38b9e]
4616b0: call 0x4032a0
4616b5: lea rcx, [rip + 0x38d64]
4616bc: mov edx, 0x234
4616c1: lea rsi, [rip + 0x38b72]
4616c8: lea rdi, [rip + 0x38b7f]
4616cf: call 0x4032a0
4616d4: lea rcx, [rip + 0x38d45]
4616db: mov edx, 0x31e
4616e0: lea rsi, [rip + 0x38b53]
4616e7: lea rdi, [rip + 0x38b85]
4616ee: call 0x4032a0
4616f3: lea rcx, [rip + 0x38ce6]
4616fa: mov edx, 0x1c9
4616ff: lea rsi, [rip + 0x38ba6]
461706: lea rdi, [rip + 0x38c23]
46170d: call 0x4032a0
461712: lea rcx, [rip + 0x38cc7]
461719: mov edx, 0x18b
46171e: lea rsi, [rip + 0x38b87]
461725: lea rdi, [rip + 0x38bd4]
46172c: call 0x4032a0
461731: call 0x4547a0
461736: lea rcx, [rip + 0x38ca3]
46173d: mov edx, 0x1e5
461742: lea rsi, [rip + 0x38b63]
461749: lea rdi, [rip + 0x38c30]
461750: call 0x4032a0
461755: lea rcx, [rip + 0x38c84]
46175c: mov edx, 0x1db
461761: lea rsi, [rip + 0x38b44]
461768: lea rdi, [rip + 0x38be9]
46176f: call 0x4032a0
461774: nop word ptr cs:[rax + rax]
46177e: nop 
461780: endbr64 
461784: push r15
461786: push r14
461788: push r13
46178a: mov r13, r8
46178d: push r12
46178f: push rbp
461790: push rbx
461791: sub rsp, 0xa8
461798: mov r15, qword ptr [rdi + 0x28]
46179c: mov rax, qword ptr [rsp + 0xe0]
4617a4: mov qword ptr [rsp + 0x28], rdi
4617a9: mov qword ptr [rsp + 0x30], rsi
4617ae: mov qword ptr [rsp + 0x50], rcx
4617b3: mov qword ptr [rsp + 0x48], r9
4617b8: mov qword ptr [rsp + 0x58], rax
4617bd: mov rax, qword ptr fs:[0x28]
4617c6: mov qword ptr [rsp + 0x98], rax
4617ce: xor eax, eax
4617d0: mov rax, qword ptr [rcx]
4617d3: cmp qword ptr [rdi], 0
4617d7: mov qword ptr [rsp + 0x18], rax
4617dc: je 0x4617f1
4617de: mov rax, r15
4617e1: ror rax, 0x11
4617e5: xor rax, qword ptr fs:[0x30]
4617ee: mov r15, rax
4617f1: mov rax, 0xffffffffffffffa0
4617f8: mov rax, qword ptr fs:[rax]
4617fc: mov rsi, qword ptr [rax]
4617ff: mov eax, dword ptr [rsi + 0x228]
461805: mov qword ptr [rsp + 0x10], rax
46180a: test rax, rax
46180d: je 0x461a92
461813: mov rax, qword ptr [rsp + 0x18]
461818: add rax, 4
46181c: cmp r13, rax
46181f: jb 0x46192a
461825: mov rax, qword ptr [rsi + 0x230]
46182c: mov qword ptr [rsp], 0
461834: mov r14, qword ptr [rsi + 0x238]
46183b: mov r11, qword ptr [rsi + 0x248]
461842: mov qword ptr [rsp + 0x40], rax
461847: mov rax, qword ptr [rsi + 0x240]
46184e: mov qword ptr [rsp + 0x60], rax
461853: lea rax, [rsp + 0x90]
46185b: mov qword ptr [rsp + 0x38], rax
461860: mov rax, qword ptr [rsp]
461864: mov rdi, qword ptr [rsp + 0x40]
461869: xor ebx, ebx
46186b: add rax, qword ptr [rsp + 0x10]
461870: shr rax, 1
461873: mov qword ptr [rsp + 0x20], rax
461878: mov eax, dword ptr [rdi + rax*4]
46187b: mov edx, dword ptr [r14 + rax*4]
46187f: mov r12, rax
461882: mov rax, qword ptr [rsp + 0x18]
461887: jmp 0x4618b0
461889: nop dword ptr [rax]
461890: add ebx, 1
461893: lea edx, [rbx + r12]
461897: mov edx, dword ptr [r14 + rdx*4]
46189b: test edx, edx
46189d: je 0x461990
4618a3: add rax, 4
4618a7: cmp r13, rax
4618aa: jbe 0x461940
4618b0: cmp dword ptr [rax], edx
4618b2: je 0x461890
4618b4: test ebx, ebx
4618b6: jne 0x461982
4618bc: mov rax, qword ptr [rsp + 0x18]
4618c1: cmp r13, rax
4618c4: jbe 0x461970
4618ca: lea edx, [rbx + r12]
4618ce: mov eax, dword ptr [rax]
4618d0: cmp dword ptr [r14 + rdx*4], eax
4618d4: jb 0x461970
4618da: mov rax, qword ptr [rsp + 0x20]
4618df: mov qword ptr [rsp + 0x10], rax
4618e4: mov rdi, qword ptr [rsp]
4618e8: cmp qword ptr [rsp + 0x10], rdi
4618ed: ja 0x461860
4618f3: mov rax, 0xffffffffffffffa0
4618fa: mov rax, qword ptr fs:[rax]
4618fe: mov rsi, qword ptr [rax]
461901: mov eax, dword ptr [rsi + 0x260]
461907: test eax, eax
461909: je 0x461ad6
46190f: mov rdi, qword ptr [rsp + 0x50]
461914: mov rcx, qword ptr [rsi + 0x268]
46191b: mov rdi, qword ptr [rdi]
46191e: mov qword ptr [rsp + 0x18], rdi
461923: mov edi, dword ptr [rdi]
461925: jmp 0x461abb
46192a: mov eax, 4
46192f: cmp qword ptr [rsp + 0x18], r13
461934: je 0x461945
461936: nop word ptr cs:[rax + rax]
461940: mov eax, 7
461945: mov rsi, qword ptr [rsp + 0x98]
46194d: xor rsi, qword ptr fs:[0x28]
461956: jne 0x461c38
46195c: add rsp, 0xa8
461963: pop rbx
461964: pop rbp
461965: pop r12
461967: pop r13
461969: pop r14
46196b: pop r15
46196d: ret 
46196e: nop 
461970: mov rax, qword ptr [rsp + 0x20]
461975: add rax, 1
461979: mov qword ptr [rsp], rax
46197d: jmp 0x4618e4
461982: test edx, edx
461984: jne 0x461940
461986: nop word ptr cs:[rax + rax]
461990: mov rsi, qword ptr [rsp + 0x20]
461995: mov rax, qword ptr [rsp + 0x60]
46199a: mov dword ptr [rsp + 0x70], ebx
46199e: mov dword ptr [rsp + 0x74], r12d
4619a3: mov r12, qword ptr [rsp + 0x48]
4619a8: mov eax, dword ptr [rax + rsi*4]
4619ab: lea rsi, [rsp + 0x88]
4619b3: mov qword ptr [rsp + 0x68], r14
4619b8: mov r14, r11
4619bb: mov qword ptr [rsp + 0x78], r13
4619c0: mov r13, rsi
4619c3: mov edx, dword ptr [r11 + rax*4]
4619c7: mov ebp, eax
4619c9: nop dword ptr [rax]
4619d0: lea rsi, [r14 + rax*4]
4619d4: test edx, edx
4619d6: je 0x461a88
4619dc: lea rax, [r14 + rax*4 + 4]
4619e1: xor ebx, ebx
4619e3: nop dword ptr [rax + rax]
4619e8: mov rcx, rax
4619eb: mov r8d, dword ptr [rax]
4619ee: add rax, 4
4619f2: add rbx, 1
4619f6: test r8d, r8d
4619f9: jne 0x4619e8
4619fb: mov rax, qword ptr [r12]
4619ff: mov rdi, r15
461a02: mov qword ptr [rsp + 8], rcx
461a07: mov qword ptr [rsp + 0x88], rsi
461a0f: mov qword ptr [rsp + 0x90], rax
461a17: call 0x456100
461a1c: push 0
461a1e: xor r9d, r9d
461a21: mov rdx, r13
461a24: push 0
461a26: mov r8, qword ptr [rsp + 0x48]
461a2b: mov rcx, qword ptr [rsp + 0x18]
461a30: mov rsi, qword ptr [rsp + 0x40]
461a35: mov rdi, qword ptr [rsp + 0x38]
461a3a: call r15
461a3d: pop rsi
461a3e: pop rdi
461a3f: cmp eax, 6
461a42: jne 0x461aea
461a48: lea eax, [rbp + rbx + 1]
461a4c: mov edx, dword ptr [r14 + rax*4]
461a50: mov rbp, rax
461a53: test edx, edx
461a55: jne 0x4619d0
461a5b: movsxd rax, dword ptr [rsp + 0x70]
461a60: mov rsi, qword ptr [rsp + 0x18]
461a65: mov r11, r14
461a68: mov r12d, dword ptr [rsp + 0x74]
461a6d: mov r14, qword ptr [rsp + 0x68]
461a72: mov rbx, rax
461a75: mov r13, qword ptr [rsp + 0x78]
461a7a: lea rax, [rsi + rax*4]
461a7e: jmp 0x4618c1
461a83: nop dword ptr [rax + rax]
461a88: mov rcx, rsi
461a8b: xor ebx, ebx
461a8d: jmp 0x4619fb
461a92: mov eax, dword ptr [rsi + 0x260]
461a98: test eax, eax
461a9a: je 0x461bd7
461aa0: mov rdi, qword ptr [rsp + 0x18]
461aa5: lea rdx, [rdi + 4]
461aa9: cmp r13, rdx
461aac: jb 0x46192a
461ab2: mov rcx, qword ptr [rsi + 0x268]
461ab9: mov edi, dword ptr [rdi]
461abb: test eax, eax
461abd: jle 0x461ad6
461abf: sub eax, 1
461ac2: lea rax, [rax + rax*2 + 3]
461ac7: lea r8, [rcx + rax*4]
461acb: nop dword ptr [rax + rax]
461ad0: mov eax, dword ptr [rcx]
461ad2: cmp eax, edi
461ad4: jbe 0x461b30
461ad6: mov ebx, dword ptr [rsi + 0x250]
461adc: test ebx, ebx
461ade: jne 0x461b5a
461ae0: mov eax, 6
461ae5: jmp 0x461945
461aea: mov ebx, dword ptr [rsp + 0x70]
461aee: cmp eax, 4
461af1: je 0x461b11
461af3: cmp eax, 5
461af6: je 0x461945
461afc: mov rdx, qword ptr [rsp + 0x90]
461b04: mov rsi, qword ptr [rsp + 0x48]
461b09: mov qword ptr [rsi], rdx
461b0c: jmp 0x461945
461b11: mov rsi, qword ptr [rsp + 0x50]
461b16: movsxd rax, ebx
461b19: shl rax, 2
461b1d: add qword ptr [rsi], rax
461b20: mov rax, qword ptr [rsp + 0x58]
461b25: add qword ptr [rax], 1
461b29: xor eax, eax
461b2b: jmp 0x461afc
461b2d: nop dword ptr [rax]
461b30: cmp dword ptr [rcx + 4], edi
461b33: jb 0x461b48
461b35: mov ebx, edi
461b37: xor edx, edx
461b39: sub ebx, eax
461b3b: mov eax, ebx
461b3d: div dword ptr [rcx + 8]
461b40: test edx, edx
461b42: je 0x461c17
461b48: add rcx, 0xc
461b4c: cmp rcx, r8
461b4f: jne 0x461ad0
461b55: jmp 0x461ad6
461b5a: mov rbp, qword ptr [rsi + 0x258]
461b61: mov qword ptr [rsp + 0x88], rbp
461b69: mov rax, qword ptr [rsp + 0x48]
461b6e: mov rdi, r15
461b71: mov rax, qword ptr [rax]
461b74: mov qword ptr [rsp + 0x90], rax
461b7c: call 0x456100
461b81: lea rdx, [rsp + 0x88]
461b89: push 0
461b8b: lea rcx, [rbp + rbx*4]
461b90: push 0
461b92: xor r9d, r9d
461b95: mov rsi, qword ptr [rsp + 0x40]
461b9a: mov rdi, qword ptr [rsp + 0x38]
461b9f: lea r8, [rsp + 0xa0]
461ba7: call r15
461baa: pop rdx
461bab: pop rcx
461bac: cmp eax, 6
461baf: je 0x461945
461bb5: cmp eax, 4
461bb8: jne 0x461afc
461bbe: mov rax, qword ptr [rsp + 0x58]
461bc3: add qword ptr [rax], 1
461bc7: mov rax, qword ptr [rsp + 0x50]
461bcc: add qword ptr [rax], 4
461bd0: xor eax, eax
461bd2: jmp 0x461afc
461bd7: mov ebx, dword ptr [rsi + 0x250]
461bdd: test ebx, ebx
461bdf: je 0x461ae0
461be5: mov rbp, qword ptr [rsi + 0x258]
461bec: mov rsi, qword ptr [rsp + 0x18]
461bf1: lea rax, [rsi + 4]
461bf5: mov qword ptr [rsp + 0x88], rbp
461bfd: cmp r13, rax
461c00: jae 0x461b69
461c06: xor eax, eax
461c08: cmp rsi, r13
461c0b: setne al
461c0e: lea eax, [rax + rax*2 + 4]
461c12: jmp 0x461945
461c17: mov rax, qword ptr [rsp + 0x18]
461c1c: mov rsi, qword ptr [rsp + 0x50]
461c21: add rax, 4
461c25: mov qword ptr [rsi], rax
461c28: mov rax, qword ptr [rsp + 0x58]
461c2d: add qword ptr [rax], 1
461c31: xor eax, eax
461c33: jmp 0x461945
461c38: call 0x4547a0
461c3d: nop dword ptr [rax]
461c40: push r15
461c42: push r14
461c44: push r13
461c46: push r12
461c48: push rbp
461c49: push rbx
461c4a: sub rsp, 0x28
461c4e: mov r14, qword ptr [rip + 0x6119b]
461c55: mov qword ptr [rsp + 0x10], rdi
461c5a: movzx eax, word ptr [r14 + 4]
461c5f: movzx r12d, word ptr [r14 + 6]
461c64: mov qword ptr [rsp + 0x18], rsi
461c69: mov qword ptr [rsp + 8], rax
461c6e: call 0x40f490
461c73: movzx ebx, word ptr [r14 + 8]
461c78: xor edx, edx
461c7a: mov edi, dword ptr [rip + 0x61168]
461c80: mov ebp, eax
461c82: div ebx
461c84: lea esi, [rbx - 2]
461c87: mov eax, ebp
461c89: mov r13d, edx
461c8c: xor edx, edx
461c8e: div esi
461c90: movzx eax, word ptr [r14 + 4]
461c95: sub edi, eax
461c97: mov dword ptr [rsp + 4], edi
461c9b: lea ebp, [rdx + 1]
461c9e: jmp 0x461cd3
461ca0: movzx eax, si
461ca3: cmp eax, dword ptr [rsp + 4]
461ca7: jae 0x461cbf
461ca9: add rsi, qword ptr [rsp + 8]
461cae: mov rdi, qword ptr [rsp + 0x10]
461cb3: add rsi, r14
461cb6: call 0x401130
461cbb: test eax, eax
461cbd: je 0x461d00
461cbf: add r13d, ebp
461cc2: mov edx, r13d
461cc5: mov eax, r13d
461cc8: sub edx, ebx
461cca: cmp ebx, r13d
461ccd: cmovbe eax, edx
461cd0: mov r13d, eax
461cd3: mov eax, r13d
461cd6: lea rdx, [r12 + rax*4]
461cda: lea r15, [r14 + rdx]
461cde: movzx esi, word ptr [r15]
461ce2: test si, si
461ce5: jne 0x461ca0
461ce7: add rsp, 0x28
461ceb: mov eax, 0xffffffff
461cf0: pop rbx
461cf1: pop rbp
461cf2: pop r12
461cf4: pop r13
461cf6: pop r14
461cf8: pop r15
461cfa: ret 
461cfb: nop dword ptr [rax + rax]
461d00: movzx edx, word ptr [r15 + 2]
461d05: mov rdi, qword ptr [rsp + 0x18]
461d0a: mov qword ptr [rdi], rdx
461d0d: add rsp, 0x28
461d11: pop rbx
461d12: pop rbp
461d13: pop r12
461d15: pop r13
461d17: pop r14
461d19: pop r15
461d1b: ret 
461d1c: nop dword ptr [rax]
461d20: push rbp
461d21: mov rbp, rsp
461d24: push r15
461d26: push r14
461d28: push r13
461d2a: mov r13, rdi
461d2d: push r12
461d2f: mov r12, rsi
461d32: push rbx
461d33: mov rbx, rdx
461d36: sub rsp, 0x18
461d3a: mov rax, qword ptr fs:[0x28]
461d43: mov qword ptr [rbp - 0x38], rax
461d47: xor eax, eax
461d49: call 0x401180
461d4e: mov rdi, r12
461d51: mov r14, rax
461d54: call 0x401180
461d59: mov rcx, rsp
461d5c: lea r15, [rax + 1]
461d60: lea rax, [r14 + rax + 0x10]
461d65: mov rdx, rax
461d68: and rax, 0xfffffffffffff000
461d6e: sub rcx, rax
461d71: and rdx, 0xfffffffffffffff0
461d75: mov rax, rcx
461d78: cmp rsp, rax
461d7b: je 0x461d92
461d7d: sub rsp, 0x1000
461d84: or qword ptr [rsp + 0xff8], 0
461d8d: cmp rsp, rax
461d90: jne 0x461d7d
461d92: and edx, 0xfff
461d98: sub rsp, rdx
461d9b: test rdx, rdx
461d9e: jne 0x461e68
461da4: mov rdx, r14
461da7: mov rsi, r13
461daa: mov rdi, rsp
461dad: call 0x401150
461db2: mov rdx, r15
461db5: mov rsi, r12
461db8: mov rdi, rax
461dbb: call 0x401060
461dc0: mov rdi, rsp
461dc3: call 0x4626e0
461dc8: mov r8d, 1
461dce: mov qword ptr [rbx], rax
461dd1: test rax, rax
461dd4: je 0x461e41
461dd6: mov rdx, qword ptr [rax + 0x18]
461dda: mov r12, qword ptr [rax + 0x20]
461dde: mov qword ptr [rbx + 8], 0
461de6: xor r8d, r8d
461de9: mov rax, qword ptr [rax + 0x28]
461ded: mov qword ptr [rbx + 0x30], 0
461df5: mov qword ptr [rbx + 0x38], r12
461df9: mov qword ptr [rbx + 0x28], rdx
461dfd: mov qword ptr [rbx + 0x40], rax
461e01: mov qword ptr [rbx + 0x60], 0
461e09: ror r12, 0x11
461e0d: xor r12, qword ptr fs:[0x30]
461e16: test r12, r12
461e19: je 0x461e41
461e1b: mov rdi, r12
461e1e: call 0x456100
461e23: mov rdi, rbx
461e26: call r12
461e29: mov r8d, eax
461e2c: mov rax, qword ptr [rbx + 0x30]
461e30: xor rax, qword ptr fs:[0x30]
461e39: rol rax, 0x11
461e3d: mov qword ptr [rbx + 0x30], rax
461e41: mov rax, qword ptr [rbp - 0x38]
461e45: xor rax, qword ptr fs:[0x28]
461e4e: jne 0x461e73
461e50: lea rsp, [rbp - 0x28]
461e54: mov eax, r8d
461e57: pop rbx
461e58: pop r12
461e5a: pop r13
461e5c: pop r14
461e5e: pop r15
461e60: pop rbp
461e61: ret 
461e62: nop word ptr [rax + rax]
461e68: or qword ptr [rsp + rdx - 8], 0
461e6e: jmp 0x461da4
461e73: call 0x4547a0
461e78: nop dword ptr [rax + rax]
461e80: endbr64 
461e84: mov rax, qword ptr [rip + 0x60f65]
461e8b: ret 
461e8c: nop dword ptr [rax]
461e90: endbr64 
461e94: push r12
461e96: lea rdi, [rip + 0x388b8]
461e9d: push rbp
461e9e: sub rsp, 0xb8
461ea5: mov rax, qword ptr fs:[0x28]
461eae: mov qword ptr [rsp + 0xa8], rax
461eb6: xor eax, eax
461eb8: call 0x40fe70
461ebd: mov qword ptr [rip + 0x619fc], rax
461ec4: test rax, rax
461ec7: jne 0x461fc1
461ecd: xor edx, edx
461ecf: xor esi, esi
461ed1: lea rdi, [rip + 0x38888]
461ed8: xor eax, eax
461eda: call 0x4518a0
461edf: mov ebp, eax
461ee1: cmp eax, -1
461ee4: je 0x461fc1
461eea: lea rdx, [rsp + 0x10]
461eef: mov esi, eax
461ef1: mov edi, 1
461ef6: call 0x450c30
461efb: test eax, eax
461efd: js 0x462079
461f03: mov rsi, qword ptr [rsp + 0x40]
461f08: cmp rsi, 0xf
461f0c: jbe 0x462079
461f12: xor r9d, r9d
461f15: mov r8d, ebp
461f18: mov ecx, 1
461f1d: mov edx, 1
461f22: xor edi, edi
461f24: mov qword ptr [rip + 0x60ebd], rsi
461f2b: call 0x451bc0
461f30: mov qword ptr [rip + 0x60eb9], rax
461f37: cmp rax, -1
461f3b: je 0x462008
461f41: mov edi, ebp
461f43: call 0x451730
461f48: mov rdi, qword ptr [rip + 0x60ea1]
461f4f: cmp dword ptr [rdi], 0x20010324
461f55: jne 0x461fa0
461f57: mov rax, qword ptr [rip + 0x60e8a]
461f5e: movzx edx, word ptr [rdi + 4]
461f62: cmp rdx, rax
461f65: jae 0x461fa0
461f67: movzx ecx, word ptr [rdi + 6]
461f6b: cmp rax, rcx
461f6e: jbe 0x461fa0
461f70: movzx edx, word ptr [rdi + 8]
461f74: test dx, dx
461f77: je 0x461fa0
461f79: lea rdx, [rcx + rdx*4]
461f7d: cmp rax, rdx
461f80: jb 0x461fa0
461f82: movzx edx, word ptr [rdi + 0xa]
461f86: cmp rax, rdx
461f89: jbe 0x461fa0
461f8b: movzx edx, word ptr [rdi + 0xc]
461f8f: xor r8d, r8d
461f92: cmp rax, rdx
461f95: jae 0x461fc7
461f97: nop word ptr [rax + rax]
461fa0: mov eax, dword ptr [rip + 0x60e3a]
461fa6: test eax, eax
461fa8: jne 0x461ff0
461faa: mov rsi, qword ptr [rip + 0x60e37]
461fb1: call 0x451c70
461fb6: mov qword ptr [rip + 0x60e2f], 0
461fc1: mov r8d, 0xffffffff
461fc7: mov rax, qword ptr [rsp + 0xa8]
461fcf: xor rax, qword ptr fs:[0x28]
461fd8: jne 0x46209f
461fde: add rsp, 0xb8
461fe5: mov eax, r8d
461fe8: pop rbp
461fe9: pop r12
461feb: ret 
461fec: nop dword ptr [rax]
461ff0: call 0x426a00
461ff5: mov dword ptr [rip + 0x60de1], 0
461fff: jmp 0x461fb6
462001: nop dword ptr [rax]
462008: mov rdx, qword ptr [rip + 0x60dd9]
46200f: mov rdi, rdx
462012: mov qword ptr [rsp + 8], rdx
462017: call 0x426410
46201c: mov qword ptr [rip + 0x60dcd], rax
462023: test rax, rax
462026: je 0x462079
462028: mov rdx, qword ptr [rsp + 8]
46202d: xor r12d, r12d
462030: jmp 0x46204e
462032: nop word ptr [rax + rax]
462038: mov rdx, qword ptr [rip + 0x60da9]
46203f: add r12, rax
462042: cmp rdx, r12
462045: jbe 0x462090
462047: mov rax, qword ptr [rip + 0x60da2]
46204e: sub rdx, r12
462051: lea rsi, [rax + r12]
462055: mov edi, ebp
462057: call 0x450dc0
46205c: cmp rax, -1
462060: jne 0x462038
462062: mov rdi, qword ptr [rip + 0x60d87]
462069: call 0x426a00
46206e: mov qword ptr [rip + 0x60d77], 0
462079: mov edi, ebp
46207b: call 0x451730
462080: mov r8d, 0xffffffff
462086: jmp 0x461fc7
46208b: nop dword ptr [rax + rax]
462090: mov dword ptr [rip + 0x60d46], 1
46209a: jmp 0x461f41
46209f: call 0x4547a0
4620a4: nop word ptr cs:[rax + rax]
4620af: nop 
4620b0: endbr64 
4620b4: push r12
4620b6: push rbp
4620b7: push rbx
4620b8: sub rsp, 0x20
4620bc: mov rax, qword ptr fs:[0x28]
4620c5: mov qword ptr [rsp + 0x18], rax
4620ca: xor eax, eax
4620cc: cmp qword ptr [rip + 0x60d1c], 0
4620d4: je 0x462136
4620d6: mov r12, rsi
4620d9: lea rsi, [rsp + 8]
4620de: mov rbp, rdi
4620e1: mov rbx, rdx
4620e4: call 0x461c40
4620e9: test eax, eax
4620eb: je 0x462118
4620ed: mov rsi, r12
4620f0: mov rdi, rbp
4620f3: call 0x401130
4620f8: mov dword ptr [rbx], eax
4620fa: xor eax, eax
4620fc: mov rcx, qword ptr [rsp + 0x18]
462101: xor rcx, qword ptr fs:[0x28]
46210a: jne 0x46213d
46210c: add rsp, 0x20
462110: pop rbx
462111: pop rbp
462112: pop r12
462114: ret 
462115: nop dword ptr [rax]
462118: lea rsi, [rsp + 0x10]
46211d: mov rdi, r12
462120: call 0x461c40
462125: test eax, eax
462127: jne 0x4620ed
462129: mov rdx, qword ptr [rsp + 8]
46212e: sub edx, dword ptr [rsp + 0x10]
462132: mov dword ptr [rbx], edx
462134: jmp 0x4620fc
462136: mov eax, 0xffffffff
46213b: jmp 0x4620fc
46213d: call 0x4547a0
462142: nop word ptr cs:[rax + rax]
46214d: nop dword ptr [rax]
462150: endbr64 
462154: push r15
462156: push r14
462158: push r13
46215a: push r12
46215c: push rbp
46215d: push rbx
46215e: sub rsp, 0x68
462162: mov r12, qword ptr [rip + 0x60c87]
462169: mov qword ptr [rsp + 8], rdx
46216e: mov rax, qword ptr fs:[0x28]
462177: mov qword ptr [rsp + 0x58], rax
46217c: xor eax, eax
46217e: test r12, r12
462181: je 0x462310
462187: mov r13, rdi
46218a: mov rdi, rsi
46218d: lea rsi, [rsp + 0x48]
462192: mov rbx, rcx
462195: movzx r14d, word ptr [r12 + 4]
46219b: movzx r15d, word ptr [r12 + 0xa]
4621a1: mov ebp, r8d
4621a4: call 0x461c40
4621a9: test eax, eax
4621ab: jne 0x4621d2
4621ad: mov rax, qword ptr [rsp + 0x48]
4621b2: lea r8, [rax + rax*2 + 3]
4621b7: movzx eax, word ptr [r12 + 0xa]
4621bd: shl r8, 2
4621c1: add rax, r8
4621c4: cmp rax, qword ptr [rip + 0x60c1d]
4621cb: mov qword ptr [rsp + 0x10], r8
4621d0: jbe 0x462200
4621d2: mov r13d, 1
4621d8: mov rax, qword ptr [rsp + 0x58]
4621dd: xor rax, qword ptr fs:[0x28]
4621e6: jne 0x462625
4621ec: add rsp, 0x68
4621f0: mov eax, r13d
4621f3: pop rbx
4621f4: pop rbp
4621f5: pop r12
4621f7: pop r13
4621f9: pop r14
4621fb: pop r15
4621fd: ret 
4621fe: nop 
462200: mov rdi, r13
462203: lea rsi, [rsp + 0x50]
462208: call 0x461c40
46220d: mov r13d, eax
462210: test eax, eax
462212: jne 0x4621d2
462214: mov rax, qword ptr [rsp + 0x50]
462219: movzx esi, word ptr [r12 + 0xa]
46221f: lea rcx, [rax + rax*2 + 3]
462224: shl rcx, 2
462228: add rsi, rcx
46222b: cmp rsi, qword ptr [rip + 0x60bb6]
462232: ja 0x4621d2
462234: add r15, r12
462237: and ebp, 1
46223a: mov rsi, qword ptr [rsp + 0x48]
46223f: mov r8, qword ptr [rsp + 0x10]
462244: lea rcx, [r15 + rcx - 0xc]
462249: jne 0x462490
46224f: add r14, r12
462252: lea rbp, [r15 + r8 - 0xc]
462257: test rax, rax
46225a: je 0x462430
462260: test rsi, rsi
462263: jne 0x462320
462269: cmp qword ptr [rsp + 0x50], 0
46226f: je 0x4621d2
462275: cmp word ptr [rcx + 8], 0
46227a: je 0x4621d2
462280: mov edi, 0xd0
462285: mov qword ptr [rsp + 0x10], rcx
46228a: call 0x426410
46228f: mov rcx, qword ptr [rsp + 0x10]
462294: test rax, rax
462297: mov r15, rax
46229a: je 0x4624a8
4622a0: mov rax, qword ptr [rsp + 8]
4622a5: xor ebp, ebp
4622a7: mov rdx, r15
4622aa: lea r12, [rip + 0x37a3b]
4622b1: mov qword ptr [rax], r15
4622b4: mov qword ptr [rbx], 0
4622bb: movzx eax, word ptr [rcx]
4622be: movzx edi, word ptr [rcx + 2]
4622c2: mov qword ptr [rdx + 0x18], r12
4622c6: mov dword ptr [rdx + 0x10], 1
4622cd: add rax, r14
4622d0: add rdi, r14
4622d3: mov qword ptr [rdx + 0x60], 0
4622db: mov qword ptr [rdx + 0x20], rax
4622df: movzx eax, word ptr [rcx + 4]
4622e3: add r14, rax
4622e6: cmp byte ptr [rdi], 0
4622e9: je 0x462478
4622ef: mov rsi, r14
4622f2: call 0x461d20
4622f7: test eax, eax
4622f9: jne 0x4624b3
4622ff: add qword ptr [rbx], 1
462303: jmp 0x4621d8
462308: nop dword ptr [rax + rax]
462310: mov r13d, 2
462316: jmp 0x4621d8
46231b: nop dword ptr [rax + rax]
462320: movzx esi, word ptr [rbp + 0xa]
462324: test si, si
462327: jne 0x4624df
46232d: cmp word ptr [rbp + 4], 0
462332: je 0x4621d2
462338: cmp word ptr [rcx + 8], 0
46233d: je 0x4621d2
462343: nop dword ptr [rax + rax]
462348: mov edi, 0xd0
46234d: mov qword ptr [rsp + 0x10], rcx
462352: call 0x426410
462357: mov rcx, qword ptr [rsp + 0x10]
46235c: test rax, rax
46235f: mov r15, rax
462362: je 0x4624a8
462368: mov rax, qword ptr [rsp + 8]
46236d: movzx edi, word ptr [rbp + 6]
462371: lea r12, [rip + 0x37974]
462378: mov qword ptr [rax], r15
46237b: movzx eax, word ptr [rbp]
46237f: add rdi, r14
462382: mov qword ptr [rbx], 0
462389: add rax, r14
46238c: mov qword ptr [r15 + 0x20], r12
462390: mov qword ptr [r15 + 0x18], rax
462394: movzx eax, word ptr [rbp + 8]
462398: mov dword ptr [r15 + 0x10], 1
4623a0: mov qword ptr [r15 + 0x60], 0
4623a8: cmp byte ptr [rdi], 0
4623ab: lea r8, [r14 + rax]
4623af: je 0x462458
4623b5: mov rdx, r15
4623b8: mov rsi, r8
4623bb: mov qword ptr [rsp + 8], rcx
4623c0: call 0x461d20
4623c5: mov rcx, qword ptr [rsp + 8]
4623ca: test eax, eax
4623cc: jne 0x4624c7
4623d2: mov rax, qword ptr [rbx]
4623d5: add rax, 1
4623d9: cmp qword ptr [rsp + 0x50], 0
4623df: mov qword ptr [rbx], rax
4623e2: je 0x4621d8
4623e8: movsxd rdx, eax
4623eb: mov ebp, eax
4623ed: imul rdx, rdx, 0x68
4623f1: add rdx, r15
4623f4: jmp 0x4622bb
4623f9: mov rcx, qword ptr [rsp + 0x30]
4623fe: mov rdi, qword ptr [rsp + 0x18]
462403: mov r14, r13
462406: mov rbp, qword ptr [rsp + 0x28]
46240b: mov r13d, dword ptr [rsp + 0x20]
462410: mov qword ptr [rsp + 0x10], rcx
462415: mov rbx, qword ptr [rsp + 0x38]
46241a: call 0x426a00
46241f: mov rsi, qword ptr [rsp + 0x48]
462424: mov rcx, qword ptr [rsp + 0x10]
462429: nop dword ptr [rax]
462430: test rsi, rsi
462433: je 0x462269
462439: cmp word ptr [rbp + 4], 0
46243e: je 0x4621d2
462444: cmp qword ptr [rsp + 0x50], 0
46244a: je 0x462348
462450: jmp 0x462338
462455: nop dword ptr [rax]
462458: mov rsi, r15
46245b: mov rdi, r8
46245e: mov qword ptr [rsp + 8], rcx
462463: call 0x459860
462468: mov rcx, qword ptr [rsp + 8]
46246d: jmp 0x4623d2
462472: nop word ptr [rax + rax]
462478: mov rsi, rdx
46247b: mov rdi, r14
46247e: call 0x459860
462483: jmp 0x4622ff
462488: nop dword ptr [rax + rax]
462490: cmp rax, rsi
462493: jne 0x46224f
462499: or r13d, 0xffffffff
46249d: jmp 0x4621d8
4624a2: nop word ptr [rax + rax]
4624a8: mov r13d, 3
4624ae: jmp 0x4621d8
4624b3: test ebp, ebp
4624b5: je 0x4624c7
4624b7: mov rdi, r15
4624ba: mov dword ptr [rsp + 8], eax
4624be: call 0x4583c0
4624c3: mov eax, dword ptr [rsp + 8]
4624c7: mov rdi, r15
4624ca: mov dword ptr [rsp + 8], eax
4624ce: call 0x426a00
4624d3: mov eax, dword ptr [rsp + 8]
4624d7: mov r13d, eax
4624da: jmp 0x4621d8
4624df: movzx edx, word ptr [r12 + 0xc]
4624e5: lea r8, [rdx + rsi - 1]
4624ea: add r8, qword ptr [rip + 0x608ff]
4624f1: movzx edx, word ptr [r8]
4624f5: test dx, dx
4624f8: jne 0x462516
4624fa: jmp 0x46232d
4624ff: nop 
462500: lea rdx, [rsi + rsi*2]
462504: lea r8, [r8 + rdx*2 + 2]
462509: movzx edx, word ptr [r8]
46250d: test dx, dx
462510: je 0x46232d
462516: movzx esi, dx
462519: sub edx, 1
46251c: movsxd rdx, edx
46251f: lea rdx, [rdx + rdx*2]
462523: movzx edx, word ptr [r8 + rdx*2 + 2]
462529: cmp rax, rdx
46252c: jne 0x462500
46252e: imul rdi, rsi, 0x68
462532: mov qword ptr [rbx], rsi
462535: mov qword ptr [rsp + 0x20], rcx
46253a: mov qword ptr [rsp + 0x10], r8
46253f: call 0x426410
462544: mov rdx, qword ptr [rsp + 8]
462549: mov r8, qword ptr [rsp + 0x10]
46254e: test rax, rax
462551: mov qword ptr [rsp + 0x18], rax
462556: mov rcx, qword ptr [rsp + 0x20]
46255b: mov qword ptr [rdx], rax
46255e: je 0x4624a8
462564: movzx r9d, word ptr [rbp]
462569: mov rdx, qword ptr [rsp + 0x18]
46256e: lea r10, [r8 + 2]
462572: xor eax, eax
462574: mov qword ptr [rsp + 0x28], rbp
462579: mov r12, r10
46257c: mov ebp, eax
46257e: add r9, r14
462581: mov dword ptr [rsp + 0x20], r13d
462586: mov r13, r14
462589: mov r14, rdx
46258c: mov qword ptr [rsp + 0x38], rbx
462591: mov rbx, r9
462594: mov qword ptr [rsp + 0x10], r8
462599: mov qword ptr [rsp + 0x30], rcx
46259e: jmp 0x4625ca
4625a0: mov rdx, r14
4625a3: mov rsi, r11
4625a6: call 0x461d20
4625ab: test eax, eax
4625ad: jne 0x4623f9
4625b3: mov rax, qword ptr [rsp + 0x10]
4625b8: add ebp, 1
4625bb: add r14, 0x68
4625bf: add r12, 6
4625c3: movzx eax, word ptr [rax]
4625c6: cmp eax, ebp
4625c8: jle 0x46261b
4625ca: movzx eax, word ptr [r12]
4625cf: movzx edi, word ptr [r12 + 2]
4625d5: mov qword ptr [r14 + 0x18], rbx
4625d9: lea rax, [rax + rax*2]
4625dd: add rdi, r13
4625e0: movzx r9d, word ptr [r15 + rax*4]
4625e5: movzx eax, word ptr [r12 + 4]
4625eb: mov dword ptr [r14 + 0x10], 1
4625f3: mov qword ptr [r14 + 0x60], 0
4625fb: lea rbx, [r13 + r9]
462600: lea r11, [r13 + rax]
462605: mov qword ptr [r14 + 0x20], rbx
462609: cmp byte ptr [rdi], 0
46260c: jne 0x4625a0
46260e: mov rsi, r14
462611: mov rdi, r11
462614: call 0x459860
462619: jmp 0x4625b3
46261b: mov r13d, dword ptr [rsp + 0x20]
462620: jmp 0x4621d8
462625: call 0x4547a0
46262a: nop word ptr [rax + rax]
462630: endbr64 
462634: cmp qword ptr [rip + 0x607b4], 0
46263c: je 0x462648
46263e: jmp 0x426a00
462643: nop dword ptr [rax + rax]
462648: ret 
462649: nop dword ptr [rax]
462650: endbr64 
462654: mov rsi, qword ptr [rsi]
462657: mov rdi, qword ptr [rdi]
46265a: jmp 0x401130
46265f: nop 
462660: endbr64 
462664: test esi, esi
462666: je 0x462670
462668: cmp esi, 3
46266b: je 0x462670
46266d: ret 
46266e: nop 
462670: push rbx
462671: mov rbx, qword ptr [rdi]
462674: mov eax, dword ptr [rbx + 8]
462677: cmp rdx, rbx
46267a: je 0x462698
46267c: lea edx, [rax + 2]
46267f: cmp edx, 2
462682: ja 0x46268f
462684: sub eax, 1
462687: mov dword ptr [rbx + 8], eax
46268a: cmp eax, -3
46268d: je 0x4626a8
46268f: pop rbx
462690: ret 
462691: nop dword ptr [rax]
462698: test eax, eax
46269a: jle 0x4626c0
46269c: sub eax, 1
46269f: mov dword ptr [rdx + 8], eax
4626a2: pop rbx
4626a3: ret 
4626a4: nop dword ptr [rax]
4626a8: mov rdi, qword ptr [rbx + 0x10]
4626ac: test rdi, rdi
4626af: je 0x46268f
4626b1: call 0x4847c0
4626b6: mov qword ptr [rbx + 0x10], 0
4626be: pop rbx
4626bf: ret 
4626c0: lea rcx, [rip + 0x38129]
4626c7: mov edx, 0xa5
4626cc: lea rsi, [rip + 0x380c1]
4626d3: lea rdi, [rip + 0x380c5]
4626da: call 0x4032a0
4626df: nop 
4626e0: endbr64 
4626e4: push r13
4626e6: lea rdx, [rip - 0x9d]
4626ed: lea rsi, [rip + 0x60704]
4626f4: push r12
4626f6: push rbp
4626f7: sub rsp, 0x10
4626fb: mov qword ptr [rsp + 8], rdi
462700: lea rdi, [rsp + 8]
462705: call 0x452270
46270a: test rax, rax
46270d: je 0x462820
462713: mov r12, qword ptr [rax]
462716: test r12, r12
462719: je 0x46288e
46271f: mov eax, dword ptr [r12 + 8]
462724: mov rdx, qword ptr [r12 + 0x10]
462729: cmp eax, -2
46272c: jge 0x4627f8
462732: test rdx, rdx
462735: jne 0x4628be
46273b: mov rdi, qword ptr [r12]
46273f: mov esi, 0x80000002
462744: call 0x484ab0
462749: mov qword ptr [r12 + 0x10], rax
46274e: mov rdi, rax
462751: test rax, rax
462754: je 0x46288e
46275a: lea rsi, [rip + 0x38065]
462761: call 0x484850
462766: mov qword ptr [r12 + 0x18], rax
46276b: test rax, rax
46276e: je 0x4628a0
462774: mov rdi, qword ptr [r12 + 0x10]
462779: lea rsi, [rip + 0x3804c]
462780: call 0x484850
462785: mov rdi, qword ptr [r12 + 0x10]
46278a: lea rsi, [rip + 0x38046]
462791: mov qword ptr [r12 + 0x20], rax
462796: call 0x484850
46279b: mov rdx, qword ptr [r12 + 0x18]
4627a0: mov dword ptr [r12 + 8], 1
4627a9: xor rdx, qword ptr fs:[0x30]
4627b2: rol rdx, 0x11
4627b6: xor rax, qword ptr fs:[0x30]
4627bf: rol rax, 0x11
4627c3: mov qword ptr [r12 + 0x18], rdx
4627c8: mov rdx, qword ptr [r12 + 0x20]
4627cd: mov qword ptr [r12 + 0x28], rax
4627d2: mov rax, r12
4627d5: xor rdx, qword ptr fs:[0x30]
4627de: rol rdx, 0x11
4627e2: mov qword ptr [r12 + 0x20], rdx
4627e7: add rsp, 0x10
4627eb: pop rbp
4627ec: pop r12
4627ee: pop r13
4627f0: ret 
4627f1: nop dword ptr [rax]
4627f8: test rdx, rdx
4627fb: je 0x46280f
4627fd: test eax, eax
4627ff: mov edx, 0
462804: cmovs eax, edx
462807: add eax, 1
46280a: mov dword ptr [r12 + 8], eax
46280f: add rsp, 0x10
462813: mov rax, r12
462816: pop rbp
462817: pop r12
462819: pop r13
46281b: ret 
46281c: nop dword ptr [rax]
462820: mov rbp, qword ptr [rsp + 8]
462825: mov rdi, rbp
462828: call 0x401180
46282d: lea rdi, [rax + 0x31]
462831: lea r13, [rax + 1]
462835: call 0x426410
46283a: mov r12, rax
46283d: test rax, rax
462840: je 0x46288e
462842: lea rdi, [rax + 0x30]
462846: mov rdx, r13
462849: mov rsi, rbp
46284c: call 0x401060
462851: lea rdx, [rip - 0x208]
462858: lea rsi, [rip + 0x60599]
46285f: mov rdi, r12
462862: mov qword ptr [r12], rax
462866: mov dword ptr [r12 + 8], 0xfffffffd
46286f: mov qword ptr [r12 + 0x10], 0
462878: call 0x451e70
46287d: test rax, rax
462880: jne 0x46271f
462886: mov rdi, r12
462889: call 0x426a00
46288e: add rsp, 0x10
462892: xor r12d, r12d
462895: mov rax, r12
462898: pop rbp
462899: pop r12
46289b: pop r13
46289d: ret 
46289e: nop 
4628a0: mov rdi, qword ptr [rip + 0x60551]
4628a7: mov rdx, r12
4628aa: lea rsi, [rip - 0x251]
4628b1: xor r12d, r12d
4628b4: call 0x452a10
4628b9: jmp 0x46280f
4628be: lea rcx, [rip + 0x37f4b]
4628c5: mov edx, 0x72
4628ca: lea rsi, [rip + 0x37ec3]
4628d1: lea rdi, [rip + 0x37ed8]
4628d8: call 0x4032a0
4628dd: nop dword ptr [rax]
4628e0: endbr64 
4628e4: mov rdx, rdi
4628e7: mov rdi, qword ptr [rip + 0x6050a]
4628ee: lea rsi, [rip - 0x295]
4628f5: jmp 0x452a10
4628fa: nop word ptr [rax + rax]
462900: xor eax, eax
462902: push r12
462904: push rbp
462905: mov rbp, 0xfffffffffffffff0
46290c: push rbx
46290d: mov rbx, rdi
462910: mov word ptr [rdi + 8], ax
462914: mov r12, qword ptr [rbx]
462917: mov rdi, r12
46291a: call 0x401180
46291f: mov rdi, qword ptr fs:[rbp]
462924: jmp 0x462957
462926: nop word ptr cs:[rax + rax]
462930: movsx rcx, byte ptr [r12 + rax - 1]
462936: lea rsi, [rax - 1]
46293a: mov rdx, rcx
46293d: test byte ptr [rdi + rcx*2 + 1], 0x20
462942: jne 0x462954
462944: cmp cl, 0x2f
462947: sete cl
46294a: cmp dl, 0x2c
46294d: sete dl
462950: or cl, dl
462952: je 0x462970
462954: mov rax, rsi
462957: test rax, rax
46295a: jne 0x462930
46295c: mov byte ptr [r12], 0
462961: pop rbx
462962: pop rbp
462963: pop r12
462965: ret 
462966: nop word ptr cs:[rax + rax]
462970: mov byte ptr [r12 + rax], 0
462975: mov rdx, qword ptr [rbx]
462978: movzx eax, byte ptr [rdx]
46297b: test al, al
46297d: je 0x462961
46297f: xor r12d, r12d
462982: xor ecx, ecx
462984: jmp 0x4629a6
462986: nop word ptr cs:[rax + rax]
462990: cmp al, 0x2f
462992: jne 0x46299a
462994: add ecx, 1
462997: mov r12, rdx
46299a: movzx eax, byte ptr [rdx + 1]
46299e: add rdx, 1
4629a2: test al, al
4629a4: je 0x4629b9
4629a6: cmp al, 0x2c
4629a8: jne 0x462990
4629aa: mov r12, rdx
4629ad: movzx eax, byte ptr [rdx + 1]
4629b1: add rdx, 1
4629b5: test al, al
4629b7: jne 0x4629a6
4629b9: cmp ecx, 1
4629bc: jle 0x462961
4629be: test r12, r12
4629c1: je 0x462961
4629c3: lea rdx, [rip + 0x5d3f6]
4629ca: lea rsi, [rip + 0x36052]
4629d1: mov rdi, r12
4629d4: call 0x4010f0
4629d9: test eax, eax
4629db: jne 0x462a30
4629dd: mov byte ptr [rbx + 8], 1
4629e1: lea rdx, [rip + 0x5d3d8]
4629e8: lea rsi, [rip + 0x37e3e]
4629ef: mov rdi, r12
4629f2: call 0x4010f0
4629f7: test eax, eax
4629f9: jne 0x462a10
4629fb: mov byte ptr [rbx + 9], 1
4629ff: mov byte ptr [r12], 0
462a04: jmp 0x462914
462a09: nop dword ptr [rax]
462a10: lea rdx, [rip + 0x5d3a9]
462a17: lea rsi, [rip + 0x37e17]
462a1e: mov rdi, r12
462a21: call 0x4010f0
462a26: test eax, eax
462a28: je 0x4629fb
462a2a: jmp 0x4629ff
462a2c: nop dword ptr [rax]
462a30: lea rdx, [rip + 0x5d389]
462a37: lea rsi, [rip + 0x37de5]
462a3e: mov rdi, r12
462a41: call 0x4010f0
462a46: test eax, eax
462a48: je 0x4629dd
462a4a: jmp 0x4629e1
462a4c: nop dword ptr [rax]
462a50: endbr64 
462a54: push r14
462a56: push r13
462a58: push r12
462a5a: mov r12, rsi
462a5d: push rbp
462a5e: mov rbp, rdx
462a61: push rbx
462a62: mov rbx, rdi
462a65: mov rdi, rsi
462a68: sub rsp, 0x30
462a6c: mov rax, qword ptr fs:[0x28]
462a75: mov qword ptr [rsp + 0x28], rax
462a7a: xor eax, eax
462a7c: call 0x429020
462a81: mov rdi, rbp
462a84: mov qword ptr [rsp], rax
462a88: call 0x429020
462a8d: mov r13, qword ptr [rsp]
462a91: mov qword ptr [rsp + 0x10], rax
462a96: test rax, rax
462a99: je 0x462cf3
462a9f: test r13, r13
462aa2: je 0x462cf3
462aa8: mov rdi, rsp
462aab: call 0x462900
462ab0: lea rdi, [rsp + 0x10]
462ab5: call 0x462900
462aba: movzx eax, word ptr [rsp + 0x18]
462abf: mov rdi, r12
462ac2: mov word ptr [rbx + 0x10], ax
462ac6: call 0x401180
462acb: lea rdi, [rax + 3]
462acf: call 0x426410
462ad4: mov qword ptr [rbx], rax
462ad7: mov r12, rax
462ada: test rax, rax
462add: je 0x462d09
462ae3: mov rdi, rbp
462ae6: call 0x401180
462aeb: lea rdi, [rax + 3]
462aef: call 0x426410
462af4: mov r13, qword ptr [rsp]
462af8: mov qword ptr [rbx + 8], rax
462afc: mov rbp, rax
462aff: test rax, rax
462b02: je 0x462d14
462b08: movzx edx, byte ptr [r13]
462b0d: test dl, dl
462b0f: je 0x462cf8
462b15: mov r9, qword ptr [rip + 0x5d30c]
462b1c: mov r10, qword ptr [rip + 0x5d315]
462b23: mov rsi, r13
462b26: xor r8d, r8d
462b29: movabs r11, 0x8000000004007
462b33: jmp 0x462b51
462b35: nop dword ptr [rax]
462b38: mov eax, dword ptr [r10 + rdi*4]
462b3c: add r12, 1
462b40: mov byte ptr [r12 - 1], al
462b45: movzx edx, byte ptr [rsi + 1]
462b49: add rsi, 1
462b4d: test dl, dl
462b4f: je 0x462bb0
462b51: movsx rdi, dl
462b55: lea ecx, [rdx - 0x2c]
462b58: movzx eax, word ptr [r9 + rdi*2]
462b5d: shr ax, 3
462b61: and eax, 1
462b64: cmp cl, 0x33
462b67: ja 0x462b77
462b69: mov r14, r11
462b6c: shr r14, cl
462b6f: mov rcx, r14
462b72: and ecx, 1
462b75: or eax, ecx
462b77: lea ecx, [r8 + 1]
462b7b: test al, al
462b7d: jne 0x462b38
462b7f: cmp dl, 0x2f
462b82: jne 0x462b45
462b84: cmp ecx, 3
462b87: je 0x462be2
462b89: add rsi, 1
462b8d: mov byte ptr [r12], 0x2f
462b92: lea eax, [r8 + 2]
462b96: add r12, 1
462b9a: movzx edx, byte ptr [rsi]
462b9d: mov r8d, ecx
462ba0: mov ecx, eax
462ba2: test dl, dl
462ba4: jne 0x462b51
462ba6: nop word ptr cs:[rax + rax]
462bb0: cmp r8d, 1
462bb4: jg 0x462be2
462bb6: mov r14d, 2
462bbc: mov eax, 1
462bc1: mov rdi, r12
462bc4: mov esi, 0x2f
462bc9: sub r14d, ecx
462bcc: add r14, 1
462bd0: cmp ecx, 2
462bd3: cmovg r14, rax
462bd7: mov rdx, r14
462bda: add r12, r14
462bdd: call 0x401110
462be2: mov rsi, qword ptr [rsp + 0x10]
462be7: mov byte ptr [r12], 0
462bec: movzx edx, byte ptr [rsi]
462bef: test dl, dl
462bf1: je 0x462d02
462bf7: mov r9, qword ptr [rip + 0x5d22a]
462bfe: xor r8d, r8d
462c01: mov r10, qword ptr [rip + 0x5d230]
462c08: movabs r11, 0x8000000004007
462c12: jmp 0x462c2f
462c14: nop dword ptr [rax]
462c18: mov eax, dword ptr [r10 + rdi*4]
462c1c: add rbp, 1
462c20: mov byte ptr [rbp - 1], al
462c23: movzx edx, byte ptr [rsi + 1]
462c27: add rsi, 1
462c2b: test dl, dl
462c2d: je 0x462c88
462c2f: movsx rdi, dl
462c33: lea ecx, [rdx - 0x2c]
462c36: movzx eax, word ptr [r9 + rdi*2]
462c3b: shr ax, 3
462c3f: and eax, 1
462c42: cmp cl, 0x33
462c45: ja 0x462c55
462c47: mov r14, r11
462c4a: shr r14, cl
462c4d: mov rcx, r14
462c50: and ecx, 1
462c53: or eax, ecx
462c55: lea ecx, [r8 + 1]
462c59: test al, al
462c5b: jne 0x462c18
462c5d: cmp dl, 0x2f
462c60: jne 0x462c23
462c62: cmp ecx, 3
462c65: je 0x462cba
462c67: add rsi, 1
462c6b: mov byte ptr [rbp], 0x2f
462c6f: lea eax, [r8 + 2]
462c73: add rbp, 1
462c77: movzx edx, byte ptr [rsi]
462c7a: mov r8d, ecx
462c7d: mov ecx, eax
462c7f: test dl, dl
462c81: jne 0x462c2f
462c83: nop dword ptr [rax + rax]
462c88: cmp r8d, 1
462c8c: jg 0x462cba
462c8e: mov r12d, 2
462c94: mov eax, 1
462c99: mov rdi, rbp
462c9c: mov esi, 0x2f
462ca1: sub r12d, ecx
462ca4: add r12, 1
462ca8: cmp ecx, 2
462cab: cmovg r12, rax
462caf: mov rdx, r12
462cb2: add rbp, r12
462cb5: call 0x401110
462cba: mov byte ptr [rbp], 0
462cbe: mov r12, rbx
462cc1: mov rdi, r13
462cc4: call 0x426a00
462cc9: mov rdi, qword ptr [rsp + 0x10]
462cce: call 0x426a00
462cd3: mov rax, qword ptr [rsp + 0x28]
462cd8: xor rax, qword ptr fs:[0x28]
462ce1: jne 0x462d0f
462ce3: add rsp, 0x30
462ce7: mov rax, r12
462cea: pop rbx
462ceb: pop rbp
462cec: pop r12
462cee: pop r13
462cf0: pop r14
462cf2: ret 
462cf3: xor r12d, r12d
462cf6: jmp 0x462cc1
462cf8: mov ecx, 1
462cfd: jmp 0x462bb6
462d02: mov ecx, 1
462d07: jmp 0x462c8e
462d09: mov r13, qword ptr [rsp]
462d0d: jmp 0x462cc1
462d0f: call 0x4547a0
462d14: mov rdi, r12
462d17: xor r12d, r12d
462d1a: call 0x426a00
462d1f: mov qword ptr [rbx], 0
462d26: jmp 0x462cc1
462d28: nop dword ptr [rax + rax]
462d30: endbr64 
462d34: push rbx
462d35: mov rbx, rdi
462d38: mov rdi, qword ptr [rdi]
462d3b: call 0x426a00
462d40: mov rdi, qword ptr [rbx + 8]
462d44: pop rbx
462d45: jmp 0x426a00
462d4a: nop word ptr [rax + rax]
462d50: push r15
462d52: lea rax, [rip + 0x37aef]
462d59: xor r15d, r15d
462d5c: push r14
462d5e: push r13
462d60: push r12
462d62: mov r12, rsi
462d65: push rbp
462d66: xor ebp, ebp
462d68: push rbx
462d69: mov ebx, 1
462d6e: sub rsp, 0x28
462d72: mov dword ptr [rsp + 0x14], edi
462d76: mov qword ptr [rsp + 8], rax
462d7b: cmp edi, 6
462d7e: jne 0x462dd6
462d80: jmp 0x462df4
462d82: nop word ptr [rax + rax]
462d88: lea rax, [rip + 0x5ec71]
462d8f: mov r13, qword ptr [rax + r15*8]
462d93: mov rdi, r13
462d96: call 0x401180
462d9b: mov r14, rax
462d9e: mov rax, qword ptr [rsp + 8]
462da3: movzx eax, byte ptr [rax + r15]
462da8: lea rbp, [rbp + rax + 2]
462dad: add rbp, r14
462db0: test ebx, ebx
462db2: je 0x462dcc
462db4: mov rsi, qword ptr [r12]
462db8: cmp r13, rsi
462dbb: je 0x462dcc
462dbd: mov rdi, r13
462dc0: xor ebx, ebx
462dc2: call 0x401130
462dc7: test eax, eax
462dc9: sete bl
462dcc: cmp r15d, 0xc
462dd0: je 0x462e41
462dd2: add r15, 1
462dd6: cmp r15, 6
462dda: je 0x462dd2
462ddc: cmp dword ptr [rsp + 0x14], r15d
462de1: jne 0x462d88
462de3: mov r13, qword ptr [r12]
462de7: jmp 0x462d93
462de9: nop dword ptr [rax]
462df0: add r15, 1
462df4: cmp r15, 6
462df8: je 0x462df0
462dfa: mov rdi, qword ptr [r12 + r15*8]
462dfe: mov qword ptr [rsp + 0x18], rdi
462e03: call 0x401180
462e08: mov r14, rax
462e0b: mov rax, qword ptr [rsp + 8]
462e10: movzx eax, byte ptr [rax + r15]
462e15: lea rbp, [rbp + rax + 2]
462e1a: add rbp, r14
462e1d: test ebx, ebx
462e1f: je 0x462e3b
462e21: mov rsi, qword ptr [r12]
462e25: mov rdi, qword ptr [rsp + 0x18]
462e2a: cmp rsi, rdi
462e2d: je 0x462e3b
462e2f: call 0x401130
462e34: xor ebx, ebx
462e36: test eax, eax
462e38: sete bl
462e3b: cmp r15d, 0xc
462e3f: jne 0x462df0
462e41: test ebx, ebx
462e43: je 0x462ea0
462e45: mov rbp, qword ptr [r12]
462e49: lea rsi, [rip + 0x36bb8]
462e50: mov rdi, rbp
462e53: call 0x401130
462e58: test eax, eax
462e5a: je 0x462e90
462e5c: lea rsi, [rip + 0x32508]
462e63: mov rdi, rbp
462e66: lea r13, [rip + 0x36b9b]
462e6d: call 0x401130
462e72: test eax, eax
462e74: jne 0x462f80
462e7a: add rsp, 0x28
462e7e: mov rax, r13
462e81: pop rbx
462e82: pop rbp
462e83: pop r12
462e85: pop r13
462e87: pop r14
462e89: pop r15
462e8b: ret 
462e8c: nop dword ptr [rax]
462e90: lea r13, [rip + 0x36b71]
462e97: jmp 0x462e7a
462e99: nop dword ptr [rax]
462ea0: mov rdi, rbp
462ea3: call 0x426410
462ea8: mov r13, rax
462eab: test rax, rax
462eae: je 0x462fad
462eb4: cmp dword ptr [rsp + 0x14], 6
462eb9: mov rdi, rax
462ebc: je 0x462f24
462ebe: xor r15d, r15d
462ec1: lea rbp, [rip + 0x37998]
462ec8: lea rbx, [rip + 0x379b1]
462ecf: jmp 0x462f11
462ed1: nop dword ptr [rax]
462ed8: lea rax, [rip + 0x5eb21]
462edf: mov r14, qword ptr [rax + r15*8]
462ee3: movzx esi, byte ptr [rbp + r15]
462ee9: add rsi, rbx
462eec: call 0x401090
462ef1: mov rsi, r14
462ef4: mov byte ptr [rax], 0x3d
462ef7: lea rdi, [rax + 1]
462efb: call 0x401090
462f00: mov byte ptr [rax], 0x3b
462f03: lea rdi, [rax + 1]
462f07: cmp r15d, 0xc
462f0b: je 0x462f78
462f0d: add r15, 1
462f11: cmp r15, 6
462f15: je 0x462f0d
462f17: cmp dword ptr [rsp + 0x14], r15d
462f1c: jne 0x462ed8
462f1e: mov r14, qword ptr [r12]
462f22: jmp 0x462ee3
462f24: xor r14d, r14d
462f27: lea rbp, [rip + 0x37932]
462f2e: lea rbx, [rip + 0x3794b]
462f35: jmp 0x462f44
462f37: nop word ptr [rax + rax]
462f40: add r14, 1
462f44: cmp r14, 6
462f48: je 0x462f40
462f4a: movzx esi, byte ptr [rbp + r14]
462f50: mov r15, qword ptr [r12 + r14*8]
462f54: add rsi, rbx
462f57: call 0x401090
462f5c: mov rsi, r15
462f5f: mov byte ptr [rax], 0x3d
462f62: lea rdi, [rax + 1]
462f66: call 0x401090
462f6b: mov byte ptr [rax], 0x3b
462f6e: lea rdi, [rax + 1]
462f72: cmp r14d, 0xc
462f76: jne 0x462f40
462f78: mov byte ptr [rax], 0
462f7b: jmp 0x462e7a
462f80: lea r12, [r14 + 1]
462f84: mov rdi, r12
462f87: call 0x426410
462f8c: mov rdi, rax
462f8f: test rax, rax
462f92: je 0x462fad
462f94: add rsp, 0x28
462f98: mov rdx, r12
462f9b: mov rsi, rbp
462f9e: pop rbx
462f9f: pop rbp
462fa0: pop r12
462fa2: pop r13
462fa4: pop r14
462fa6: pop r15
462fa8: jmp 0x401060
462fad: xor r13d, r13d
462fb0: jmp 0x462e7a
462fb5: nop word ptr cs:[rax + rax]
462fc0: endbr64 
462fc4: push r15
462fc6: push r14
462fc8: push r13
462fca: push r12
462fcc: movsxd r12, edi
462fcf: push rbp
462fd0: push rbx
462fd1: sub rsp, 0x118
462fd8: mov rax, qword ptr fs:[0x28]
462fe1: mov qword ptr [rsp + 0x108], rax
462fe9: xor eax, eax
462feb: cmp r12, 0xc
462fef: ja 0x463490
462ff5: mov r14, rsi
462ff8: test rsi, rsi
462ffb: je 0x4633c0
463001: cmp qword ptr [rip + 0x5cf27], 0
463009: mov rbp, r12
46300c: je 0x46301a
46300e: lea rdi, [rip + 0x5fdeb]
463015: call 0
46301a: lea rbx, [rip + 0x5e95f]
463021: lea r13, [r12 + 0x10]
463026: mov rdi, r14
463029: mov r15, qword ptr [rbx + r13*8]
46302d: mov rsi, r15
463030: call 0x401130
463035: test eax, eax
463037: jne 0x463080
463039: cmp qword ptr [rip + 0x5cf1f], 0
463041: je 0x463053
463043: lea rdi, [rip + 0x5fdb6]
46304a: call 0
46304f: mov r15, qword ptr [rbx + r13*8]
463053: mov rax, qword ptr [rsp + 0x108]
46305b: xor rax, qword ptr fs:[0x28]
463064: jne 0x4638b1
46306a: add rsp, 0x118
463071: mov rax, r15
463074: pop rbx
463075: pop rbp
463076: pop r12
463078: pop r13
46307a: pop r14
46307c: pop r15
46307e: ret 
46307f: nop 
463080: mov qword ptr [rsp + 0x20], 0
463089: lea rdi, [rip + 0x377ad]
463090: mov qword ptr [rsp + 0x28], 0
463099: call 0x40fe70
46309e: test rax, rax
4630a1: je 0x4630ac
4630a3: cmp byte ptr [rax], 0
4630a6: jne 0x463360
4630ac: cmp ebp, 6
4630af: jne 0x463230
4630b5: mov esi, 0x3b
4630ba: mov rdi, r14
4630bd: mov qword ptr [rsp + 0x30], r14
4630c2: mov qword ptr [rsp + 0x38], r14
4630c7: mov qword ptr [rsp + 0x40], r14
4630cc: mov qword ptr [rsp + 0x48], r14
4630d1: mov qword ptr [rsp + 0x50], r14
4630d6: mov qword ptr [rsp + 0x58], r14
4630db: mov qword ptr [rsp + 0x68], r14
4630e0: mov qword ptr [rsp + 0x70], r14
4630e5: mov qword ptr [rsp + 0x78], r14
4630ea: mov qword ptr [rsp + 0x80], r14
4630f2: mov qword ptr [rsp + 0x88], r14
4630fa: mov qword ptr [rsp + 0x90], r14
463102: call 0x401190
463107: mov qword ptr [rsp + 0x10], rax
46310c: test rax, rax
46310f: jne 0x4633d4
463115: mov r12d, 0xd
46311b: mov ebp, 0xc
463120: lea r14, [rsp + 0x30]
463125: lea r13, [rip + 0x368dc]
46312c: jmp 0x463193
46312e: nop 
463130: cmp dword ptr [rax + 0x30], -1
463134: je 0x46313d
463136: mov dword ptr [rax + 0x30], 0xffffffff
46313d: mov rdi, qword ptr [rsp + r15*8 + 0x30]
463142: cmp rdi, r13
463145: je 0x463178
463147: mov rdx, qword ptr [rbx + r15*8 + 0x80]
46314f: mov qword ptr [rsp + 8], rdi
463154: mov rsi, rdx
463157: mov qword ptr [rsp + 0x18], rdx
46315c: call 0x401130
463161: mov rdi, qword ptr [rsp + 8]
463166: test eax, eax
463168: jne 0x4634c0
46316e: mov rdx, qword ptr [rsp + 0x18]
463173: mov qword ptr [rsp + r15*8 + 0x30], rdx
463178: lea r12d, [rbp - 1]
46317c: test ebp, ebp
46317e: je 0x463508
463184: cmp r12d, 6
463188: jne 0x4638b6
46318e: mov ebp, 5
463193: movsxd r15, ebp
463196: mov rsi, qword ptr [rsp + 0x28]
46319b: mov rdi, qword ptr [rsp + 0x20]
4631a0: mov edx, ebp
4631a2: lea rcx, [r14 + r15*8]
4631a6: call 0x4638d0
4631ab: mov qword ptr [rsp + r15*8 + 0xa0], rax
4631b3: test rax, rax
4631b6: jne 0x463130
4631bc: cmp qword ptr [rsp + r15*8 + 0x30], r13
4631c1: je 0x463178
4631c3: cmp r12d, 0xd
4631c7: je 0x4631fa
4631c9: movsxd rbx, r12d
4631cc: lea r12, [rip + 0x5e82d]
4631d3: jmp 0x4631dc
4631d5: nop dword ptr [rax]
4631d8: add rbx, 1
4631dc: cmp ebx, 6
4631df: je 0x4631d8
4631e1: mov rdi, qword ptr [r14 + rbx*8]
4631e5: cmp rdi, r13
4631e8: je 0x4631f5
4631ea: cmp rdi, qword ptr [r12 + rbx*8]
4631ee: je 0x4631f5
4631f0: call 0x426a00
4631f5: cmp ebx, 0xc
4631f8: jne 0x4631d8
4631fa: xor r15d, r15d
4631fd: cmp qword ptr [rip + 0x5cd5b], 0
463205: je 0x463213
463207: lea rdi, [rip + 0x5fbf2]
46320e: call 0
463213: mov rdi, qword ptr [rsp + 0x20]
463218: call 0x426a00
46321d: mov rdi, qword ptr [rsp + 0x10]
463222: call 0x426a00
463227: jmp 0x463053
46322c: nop dword ptr [rax]
463230: lea rax, [rip + 0x5ca89]
463237: mov qword ptr [rsp + 0xa0], r14
46323f: mov r15, qword ptr [rax + r12*8]
463243: test r15, r15
463246: je 0x4634b0
46324c: mov rsi, qword ptr [rsp + 0x28]
463251: mov rdi, qword ptr [rsp + 0x20]
463256: lea rcx, [rsp + 0xa0]
46325e: mov edx, ebp
463260: call 0x4638d0
463265: mov qword ptr [rsp + 8], rax
46326a: test rax, rax
46326d: je 0x4634f2
463273: cmp dword ptr [rax + 0x30], -1
463277: mov r14, qword ptr [rsp + 0xa0]
46327f: je 0x463288
463281: mov dword ptr [rax + 0x30], 0xffffffff
463288: lea r13, [rip + 0x36779]
46328f: cmp r14, r13
463292: je 0x4632ad
463294: mov rdi, r14
463297: call 0x429020
46329c: mov qword ptr [rsp + 0xa0], rax
4632a4: test rax, rax
4632a7: je 0x4634f2
4632ad: mov edi, ebp
4632af: lea rsi, [rsp + 0xa0]
4632b7: call 0x462d50
4632bc: mov rbp, rax
4632bf: test rax, rax
4632c2: je 0x4634e0
4632c8: test r15, r15
4632cb: je 0x4632e8
4632cd: mov rax, qword ptr [rsp + 8]
4632d2: mov qword ptr [rbx + r12*8], rax
4632d6: lea rax, [rip + 0x5c963]
4632dd: mov rax, qword ptr [rax + r12*8]
4632e1: test rax, rax
4632e4: je 0x4632e8
4632e6: call rax
4632e8: mov r14, qword ptr [rsp + 0xa0]
4632f0: mov rdi, qword ptr [rbx + r12*8 + 0x80]
4632f8: cmp r14, rdi
4632fb: je 0x46330f
4632fd: cmp rdi, r13
463300: je 0x463307
463302: call 0x426a00
463307: mov qword ptr [rbx + r12*8 + 0x80], r14
46330f: mov rdi, qword ptr [rip + 0x5e71a]
463316: cmp rbp, rdi
463319: je 0x46332c
46331b: cmp rdi, r13
46331e: je 0x463325
463320: call 0x426a00
463325: mov qword ptr [rip + 0x5e704], rbp
46332c: add dword ptr [rip + 0x60415], 1
463333: cmp qword ptr [rip + 0x5cc25], 0
46333b: je 0x463349
46333d: lea rdi, [rip + 0x5fabc]
463344: call 0
463349: mov rdi, qword ptr [rsp + 0x20]
46334e: call 0x426a00
463353: mov r15, qword ptr [rsp + 0xa0]
46335b: jmp 0x463053
463360: lea r15, [rsp + 0x28]
463365: lea r13, [rsp + 0x20]
46336a: mov esi, 0x3a
46336f: mov rdi, rax
463372: mov rcx, r15
463375: mov rdx, r13
463378: call 0x475f10
46337d: test eax, eax
46337f: jne 0x4633a0
463381: mov ecx, 0x3a
463386: lea rdx, [rip + 0x375c3]
46338d: mov rsi, r15
463390: mov rdi, r13
463393: call 0x475ff0
463398: test eax, eax
46339a: je 0x4630ac
4633a0: cmp qword ptr [rip + 0x5cbb8], 0
4633a8: je 0x4633b6
4633aa: lea rdi, [rip + 0x5fa4f]
4633b1: call 0
4633b6: xor r15d, r15d
4633b9: jmp 0x463053
4633be: nop 
4633c0: lea rax, [rip + 0x5e5b9]
4633c7: mov r15, qword ptr [rax + r12*8 + 0x80]
4633cf: jmp 0x463053
4633d4: movabs r15, 0x54454e4f4d5f434c
4633de: mov rdi, r14
4633e1: movabs r13, 0x52454d554e5f434c
4633eb: movabs r12, 0x45505954435f434c
4633f5: call 0x429020
4633fa: mov qword ptr [rsp + 0x10], rax
4633ff: mov rbp, rax
463402: test rax, rax
463405: je 0x46388f
46340b: nop dword ptr [rax + rax]
463410: mov esi, 0x3d
463415: mov rdi, rbp
463418: call 0x401190
46341d: test rax, rax
463420: je 0x4637ec
463426: mov rdx, rax
463429: sub rdx, rbp
46342c: cmp rdx, 8
463430: je 0x4635c0
463436: cmp rdx, 0xa
46343a: je 0x463618
463440: cmp rdx, 7
463444: jne 0x46365a
46344a: cmp dword ptr [rbp], 0x545f434c
463451: je 0x463771
463457: cmp dword ptr [rbp], 0x4e5f434c
46345e: je 0x4637cc
463464: nop dword ptr [rax]
463468: cmp qword ptr [rip + 0x5caf0], 0
463470: je 0x463480
463472: lea rdi, [rip + 0x5f987]
463479: call 0
46347e: nop 
463480: mov rdi, qword ptr [rsp + 0x10]
463485: call 0x426a00
46348a: nop word ptr [rax + rax]
463490: mov rax, 0xffffffffffffffc0
463497: xor r15d, r15d
46349a: mov dword ptr fs:[rax], 0x16
4634a1: jmp 0x463053
4634a6: nop word ptr cs:[rax + rax]
4634b0: mov qword ptr [rsp + 8], 0
4634b9: jmp 0x463288
4634be: nop 
4634c0: call 0x429020
4634c5: mov qword ptr [rsp + r15*8 + 0x30], rax
4634ca: test rax, rax
4634cd: jne 0x463178
4634d3: jmp 0x4631c3
4634d8: nop dword ptr [rax + rax]
4634e0: mov rdi, qword ptr [rsp + 0xa0]
4634e8: cmp rdi, r13
4634eb: je 0x4634f2
4634ed: call 0x426a00
4634f2: mov qword ptr [rsp + 0xa0], 0
4634fe: jmp 0x463333
463503: nop dword ptr [rax + rax]
463508: mov rsi, r14
46350b: mov edi, 6
463510: lea r12, [rip + 0x5e4e9]
463517: call 0x462d50
46351c: mov r15, rax
46351f: xor eax, eax
463521: test r15, r15
463524: je 0x463880
46352a: mov qword ptr [rsp + 8], r15
46352f: mov rbp, rax
463532: jmp 0x46353c
463534: nop dword ptr [rax]
463538: add rbp, 1
46353c: cmp rbp, 6
463540: je 0x463538
463542: lea rax, [rip + 0x5c777]
463549: cmp qword ptr [rax + rbp*8], 0
46354e: je 0x46356e
463550: mov rax, qword ptr [rsp + rbp*8 + 0xa0]
463558: mov qword ptr [rbx + rbp*8], rax
46355c: lea rax, [rip + 0x5c6dd]
463563: mov rax, qword ptr [rax + rbp*8]
463567: test rax, rax
46356a: je 0x46356e
46356c: call rax
46356e: mov r15, qword ptr [r14 + rbp*8]
463572: mov rdi, qword ptr [r12 + rbp*8]
463576: cmp r15, rdi
463579: je 0x463589
46357b: cmp rdi, r13
46357e: je 0x463585
463580: call 0x426a00
463585: mov qword ptr [r12 + rbp*8], r15
463589: cmp ebp, 0xc
46358c: jne 0x463538
46358e: mov r15, qword ptr [rsp + 8]
463593: mov rdi, qword ptr [rip + 0x5e496]
46359a: cmp r15, rdi
46359d: je 0x4635b0
46359f: cmp rdi, r13
4635a2: je 0x4635a9
4635a4: call 0x426a00
4635a9: mov qword ptr [rip + 0x5e480], r15
4635b0: add dword ptr [rip + 0x60191], 1
4635b7: jmp 0x4631fd
4635bc: nop dword ptr [rax]
4635c0: cmp qword ptr [rbp], r12
4635c4: je 0x463888
4635ca: movabs rcx, 0x52455041505f434c
4635d4: cmp qword ptr [rbp], rcx
4635d8: jne 0x463468
4635de: mov edx, 7
4635e3: nop dword ptr [rax + rax]
4635e8: lea rdi, [rax + 1]
4635ec: mov esi, 0x3b
4635f1: movsxd rax, edx
4635f4: mov qword ptr [rsp + rax*8 + 0x30], rdi
4635f9: call 0x401190
4635fe: test rax, rax
463601: je 0x4637ec
463607: mov byte ptr [rax], 0
46360a: lea rbp, [rax + 1]
46360e: jmp 0x463410
463613: nop dword ptr [rax + rax]
463618: cmp qword ptr [rbp], r13
46361c: je 0x46375b
463622: mov rcx, qword ptr [rip + 0x37257]
463629: cmp qword ptr [rbp], rcx
46362d: je 0x4637b1
463633: movabs rcx, 0x45524444415f434c
46363d: cmp qword ptr [rbp], rcx
463641: jne 0x463468
463647: cmp word ptr [rbp + 8], 0x5353
46364d: jne 0x463468
463653: mov edx, 9
463658: jmp 0x4635e8
46365a: cmp rdx, 0xb
46365e: jne 0x4636a0
463660: cmp qword ptr [rbp], r15
463664: je 0x463791
46366a: movabs rcx, 0x415353454d5f434c
463674: cmp qword ptr [rbp], rcx
463678: jne 0x463468
46367e: cmp word ptr [rbp + 8], 0x4547
463684: jne 0x463468
46368a: cmp byte ptr [rbp + 0xa], 0x53
46368e: jne 0x463468
463694: mov edx, 5
463699: jmp 0x4635e8
46369e: nop 
4636a0: cmp rdx, 0xc
4636a4: jne 0x4636d8
4636a6: movabs rcx, 0x50454c45545f434c
4636b0: cmp qword ptr [rbp], rcx
4636b4: jne 0x463468
4636ba: cmp dword ptr [rbp + 8], 0x454e4f48
4636c1: jne 0x463468
4636c7: mov edx, 0xa
4636cc: jmp 0x4635e8
4636d1: nop dword ptr [rax]
4636d8: cmp rdx, 0xe
4636dc: jne 0x463718
4636de: movabs rcx, 0x555341454d5f434c
4636e8: cmp qword ptr [rbp], rcx
4636ec: jne 0x463468
4636f2: cmp dword ptr [rbp + 8], 0x454d4552
4636f9: jne 0x463468
4636ff: cmp word ptr [rbp + 0xc], 0x544e
463705: jne 0x463468
46370b: mov edx, 0xb
463710: jmp 0x4635e8
463715: nop dword ptr [rax]
463718: cmp rdx, 0x11
46371c: jne 0x463468
463722: movabs rcx, 0x4f49544143494649
46372c: xor rcx, qword ptr [rbp + 8]
463730: movabs rdx, 0x544e4544495f434c
46373a: xor rdx, qword ptr [rbp]
46373e: or rcx, rdx
463741: jne 0x463468
463747: cmp byte ptr [rbp + 0x10], 0x4e
46374b: jne 0x463468
463751: mov edx, 0xc
463756: jmp 0x4635e8
46375b: cmp word ptr [rbp + 8], 0x4349
463761: mov edx, 1
463766: jne 0x463622
46376c: jmp 0x4635e8
463771: cmp word ptr [rbp + 4], 0x4d49
463777: jne 0x463457
46377d: cmp byte ptr [rbp + 6], 0x45
463781: mov edx, 2
463786: jne 0x463457
46378c: jmp 0x4635e8
463791: cmp word ptr [rbp + 8], 0x5241
463797: jne 0x46366a
46379d: cmp byte ptr [rbp + 0xa], 0x59
4637a1: mov edx, 4
4637a6: jne 0x46366a
4637ac: jmp 0x4635e8
4637b1: movzx ecx, word ptr [rip + 0x370d0]
4637b8: mov edx, 3
4637bd: cmp word ptr [rbp + 8], cx
4637c1: jne 0x463633
4637c7: jmp 0x4635e8
4637cc: cmp word ptr [rbp + 4], 0x4d41
4637d2: jne 0x463468
4637d8: cmp byte ptr [rbp + 6], 0x45
4637dc: jne 0x463468
4637e2: mov edx, 8
4637e7: jmp 0x4635e8
4637ec: cmp qword ptr [rsp + 0x30], r14
4637f1: je 0x463468
4637f7: cmp r14, qword ptr [rsp + 0x38]
4637fc: je 0x463468
463802: cmp r14, qword ptr [rsp + 0x40]
463807: je 0x463468
46380d: cmp r14, qword ptr [rsp + 0x48]
463812: je 0x463468
463818: cmp r14, qword ptr [rsp + 0x50]
46381d: je 0x463468
463823: cmp qword ptr [rsp + 0x58], r14
463828: je 0x463468
46382e: cmp qword ptr [rsp + 0x68], r14
463833: je 0x463468
463839: cmp qword ptr [rsp + 0x70], r14
46383e: je 0x463468
463844: cmp r14, qword ptr [rsp + 0x78]
463849: je 0x463468
46384f: cmp r14, qword ptr [rsp + 0x80]
463857: je 0x463468
46385d: cmp r14, qword ptr [rsp + 0x88]
463865: je 0x463468
46386b: cmp qword ptr [rsp + 0x90], r14
463873: jne 0x463115
463879: jmp 0x463468
46387e: nop 
463880: xor r12d, r12d
463883: jmp 0x4631c9
463888: xor edx, edx
46388a: jmp 0x4635e8
46388f: xor r15d, r15d
463892: cmp qword ptr [rip + 0x5c6c6], 0
46389a: je 0x463053
4638a0: lea rdi, [rip + 0x5f559]
4638a7: call 0
4638ac: jmp 0x463053
4638b1: call 0x4547a0
4638b6: mov eax, ebp
4638b8: mov ebp, r12d
4638bb: mov r12d, eax
4638be: jmp 0x463193
4638c3: nop word ptr cs:[rax + rax]
4638cd: nop dword ptr [rax]
4638d0: endbr64 
4638d4: push rbp
4638d5: mov rbp, rsp
4638d8: push r15
4638da: mov r15, rcx
4638dd: push r14
4638df: push r13
4638e1: mov r13, rdi
4638e4: push r12
4638e6: push rbx
4638e7: movsxd rbx, edx
4638ea: sub rsp, 0x68
4638ee: mov qword ptr [rbp - 0x78], rsi
4638f2: mov r12, qword ptr [rcx]
4638f5: mov rax, qword ptr fs:[0x28]
4638fe: mov qword ptr [rbp - 0x38], rax
463902: xor eax, eax
463904: mov qword ptr [rbp - 0x68], r12
463908: cmp byte ptr [r12], 0
46390d: je 0x463a48
463913: lea rsi, [rip + 0x360ee]
46391a: mov rdi, r12
46391d: call 0x401130
463922: test eax, eax
463924: je 0x463ad0
46392a: lea rsi, [rip + 0x31a3a]
463931: mov rdi, r12
463934: call 0x401130
463939: test eax, eax
46393b: je 0x463ad0
463941: mov rdi, r12
463944: call 0x401180
463949: mov r14, rax
46394c: cmp rax, 0xff
463952: ja 0x463a30
463958: mov ecx, 4
46395d: lea rdx, [rip + 0x36fd5]
463964: mov rsi, rax
463967: mov rdi, r12
46396a: call 0x475c50
46396f: test rax, rax
463972: jne 0x463a30
463978: cmp r14, 2
46397c: je 0x463a00
463982: jbe 0x46399b
463984: cmp byte ptr [r12], 0x2e
463989: je 0x463fe8
46398f: cmp byte ptr [r12 + r14 - 3], 0x2f
463995: je 0x463fc8
46399b: mov rdx, r14
46399e: mov esi, 0x2f
4639a3: mov rdi, r12
4639a6: call 0x4010b0
4639ab: test rax, rax
4639ae: jne 0x463d50
4639b4: mov rdi, qword ptr [rbp - 0x68]
4639b8: mov qword ptr [r15], rdi
4639bb: test r13, r13
4639be: jne 0x463af0
4639c4: mov rsi, r15
4639c7: mov edi, ebx
4639c9: call 0x4647d0
4639ce: mov r13, rax
4639d1: test rax, rax
4639d4: je 0x463d60
4639da: mov rax, qword ptr [rbp - 0x38]
4639de: xor rax, qword ptr fs:[0x28]
4639e7: jne 0x464146
4639ed: lea rsp, [rbp - 0x28]
4639f1: mov rax, r13
4639f4: pop rbx
4639f5: pop r12
4639f7: pop r13
4639f9: pop r14
4639fb: pop r15
4639fd: pop rbp
4639fe: ret 
4639ff: nop 
463a00: cmp byte ptr [r12], 0x2e
463a05: jne 0x46399b
463a07: cmp byte ptr [r12 + 1], 0x2e
463a0d: je 0x463a30
463a0f: mov edx, 2
463a14: mov esi, 0x2f
463a19: mov rdi, r12
463a1c: call 0x4010b0
463a21: test rax, rax
463a24: je 0x4639b4
463a26: nop word ptr cs:[rax + rax]
463a30: mov rax, 0xffffffffffffffc0
463a37: xor r13d, r13d
463a3a: mov dword ptr fs:[rax], 0x16
463a41: jmp 0x4639da
463a43: nop dword ptr [rax + rax]
463a48: lea rdi, [rip + 0x36eba]
463a4f: call 0x40fe70
463a54: mov qword ptr [rbp - 0x68], rax
463a58: mov r12, rax
463a5b: test rax, rax
463a5e: je 0x463a69
463a60: cmp byte ptr [rax], 0
463a63: jne 0x463913
463a69: movsxd rax, ebx
463a6c: lea rdx, [rip + 0x36ded]
463a73: movzx edi, byte ptr [rdx + rax]
463a77: lea rax, [rip + 0x36e02]
463a7e: add rdi, rax
463a81: call 0x40fe70
463a86: mov qword ptr [rbp - 0x68], rax
463a8a: mov r12, rax
463a8d: test rax, rax
463a90: je 0x463a9b
463a92: cmp byte ptr [rax], 0
463a95: jne 0x463913
463a9b: lea rdi, [rip + 0x36e6e]
463aa2: call 0x40fe70
463aa7: mov qword ptr [rbp - 0x68], rax
463aab: mov r12, rax
463aae: test rax, rax
463ab1: je 0x463abc
463ab3: cmp byte ptr [rax], 0
463ab6: jne 0x463913
463abc: lea r12, [rip + 0x35f45]
463ac3: mov qword ptr [rbp - 0x68], r12
463ac7: jmp 0x463913
463acc: nop dword ptr [rax]
463ad0: lea rax, [rip + 0x35f31]
463ad7: mov qword ptr [r15], rax
463ada: lea rax, [rip + 0x5c25f]
463ae1: mov r13, qword ptr [rax + rbx*8]
463ae5: jmp 0x4639da
463aea: nop word ptr [rax + rax]
463af0: call 0x406930
463af5: mov qword ptr [rbp - 0x68], rax
463af9: mov r12, rax
463afc: test r12, r12
463aff: je 0x463daf
463b05: mov rdi, r12
463b08: call 0x401180
463b0d: mov rsi, rsp
463b10: lea r8, [rax + 1]
463b14: add rax, 0x18
463b18: mov rdx, rax
463b1b: and rax, 0xfffffffffffff000
463b21: sub rsi, rax
463b24: and rdx, 0xfffffffffffffff0
463b28: mov rax, rsi
463b2b: cmp rsp, rax
463b2e: je 0x463b45
463b30: sub rsp, 0x1000
463b37: or qword ptr [rsp + 0xff8], 0
463b40: cmp rsp, rax
463b43: jne 0x463b30
463b45: and edx, 0xfff
463b4b: sub rsp, rdx
463b4e: test rdx, rdx
463b51: je 0x463b59
463b53: or qword ptr [rsp + rdx - 8], 0
463b59: lea rdi, [rsp + 0xf]
463b5e: mov rdx, r8
463b61: mov rsi, r12
463b64: and rdi, 0xfffffffffffffff0
463b68: call 0x401060
463b6d: lea rcx, [rbp - 0x50]
463b71: lea rdx, [rbp - 0x58]
463b75: mov rdi, rax
463b78: lea rsi, [rbp - 0x60]
463b7c: lea r9, [rbp - 0x40]
463b80: lea r8, [rbp - 0x48]
463b84: call 0x4071f0
463b89: mov ecx, eax
463b8b: cmp eax, -1
463b8e: je 0x464058
463b94: movsxd r15, ebx
463b97: sub rsp, 8
463b9b: mov r9, qword ptr [rbp - 0x50]
463b9f: mov r8, qword ptr [rbp - 0x60]
463ba3: lea rax, [rip + 0x36cb6]
463baa: push 0
463bac: mov rdx, qword ptr [rbp - 0x78]
463bb0: mov rsi, r13
463bb3: movzx r10d, byte ptr [rax + r15]
463bb8: lea rax, [rip + 0x36cc1]
463bbf: mov dword ptr [rbp - 0x84], ecx
463bc5: add r10, rax
463bc8: lea rax, [rip + 0x5fd11]
463bcf: push r10
463bd1: lea rdi, [rax + r15*8]
463bd5: push qword ptr [rbp - 0x58]
463bd8: push qword ptr [rbp - 0x40]
463bdb: push qword ptr [rbp - 0x48]
463bde: mov qword ptr [rbp - 0x90], r10
463be5: mov qword ptr [rbp - 0x80], rdi
463be9: call 0x406b20
463bee: add rsp, 0x30
463bf2: mov rdi, qword ptr [rbp - 0x80]
463bf6: mov ecx, dword ptr [rbp - 0x84]
463bfc: test rax, rax
463bff: mov r10, qword ptr [rbp - 0x90]
463c06: mov r12, rax
463c09: je 0x464018
463c0f: and ecx, 1
463c12: jne 0x464070
463c18: mov edx, dword ptr [r12 + 8]
463c1d: test edx, edx
463c1f: je 0x464060
463c25: mov r13, qword ptr [r12 + 0x10]
463c2a: test r13, r13
463c2d: je 0x464080
463c33: mov rbx, qword ptr [rbp - 0x48]
463c37: test rbx, rbx
463c3a: je 0x463e4b
463c40: lea rax, [rip + 0x36d19]
463c47: movsxd rax, dword ptr [rax + r15*4]
463c4b: mov r15, qword ptr [r13 + rax*8 + 0x40]
463c50: test r15, r15
463c53: je 0x46414b
463c59: mov rdi, r15
463c5c: call 0x401180
463c61: mov rsi, rsp
463c64: add rax, 0x1a
463c68: mov rdx, rax
463c6b: and rax, 0xfffffffffffff000
463c71: sub rsi, rax
463c74: and rdx, 0xfffffffffffffff0
463c78: mov rax, rsi
463c7b: cmp rsp, rax
463c7e: je 0x463c95
463c80: sub rsp, 0x1000
463c87: or qword ptr [rsp + 0xff8], 0
463c90: cmp rsp, rax
463c93: jne 0x463c80
463c95: and edx, 0xfff
463c9b: sub rsp, rdx
463c9e: test rdx, rdx
463ca1: je 0x463ca9
463ca3: or qword ptr [rsp + rdx - 8], 0
463ca9: movzx edx, byte ptr [r15]
463cad: lea r13, [rsp + 0xf]
463cb2: mov r14, qword ptr [rip + 0x5c17f]
463cb9: and r13, 0xfffffffffffffff0
463cbd: test dl, dl
463cbf: je 0x464110
463cc5: mov r9, qword ptr [rip + 0x5c15c]
463ccc: mov rdi, r13
463ccf: xor r8d, r8d
463cd2: movabs r10, 0x8000000004007
463cdc: jmp 0x463cfc
463cde: nop 
463ce0: mov eax, dword ptr [r14 + rsi*4]
463ce4: add rdi, 1
463ce8: mov byte ptr [rdi - 1], al
463ceb: movzx edx, byte ptr [r15 + 1]
463cf0: add r15, 1
463cf4: test dl, dl
463cf6: je 0x463ea0
463cfc: movsx rsi, dl
463d00: lea ecx, [rdx - 0x2c]
463d03: movzx eax, word ptr [r9 + rsi*2]
463d08: shr ax, 3
463d0c: and eax, 1
463d0f: cmp cl, 0x33
463d12: ja 0x463d22
463d14: mov r11, r10
463d17: shr r11, cl
463d1a: mov rcx, r11
463d1d: and ecx, 1
463d20: or eax, ecx
463d22: lea ecx, [r8 + 1]
463d26: test al, al
463d28: jne 0x463ce0
463d2a: cmp dl, 0x2f
463d2d: jne 0x463ceb
463d2f: cmp ecx, 3
463d32: je 0x463ed2
463d38: lea eax, [r8 + 2]
463d3c: mov byte ptr [rdi], 0x2f
463d3f: mov r8d, ecx
463d42: add rdi, 1
463d46: mov ecx, eax
463d48: jmp 0x463ceb
463d4a: nop word ptr [rax + rax]
463d50: cmp byte ptr [r12], 0x2f
463d55: je 0x4639b4
463d5b: jmp 0x463a30
463d60: mov rdi, qword ptr [r15]
463d63: call 0x406930
463d68: mov qword ptr [rbp - 0x68], rax
463d6c: test rax, rax
463d6f: je 0x463da0
463d71: lea rsi, [rbp - 0x68]
463d75: mov edi, ebx
463d77: call 0x4647d0
463d7c: mov r13, rax
463d7f: test rax, rax
463d82: jne 0x4639da
463d88: mov qword ptr [rbp - 0x78], 0x10
463d90: mov r12, qword ptr [rbp - 0x68]
463d94: lea r13, [rip + 0x36bb5]
463d9b: jmp 0x463afc
463da0: mov qword ptr [rbp - 0x78], 0x10
463da8: lea r13, [rip + 0x36ba1]
463daf: mov r12, qword ptr [r15]
463db2: mov qword ptr [rbp - 0x68], r12
463db6: jmp 0x463b05
463dbb: nop dword ptr [rax + rax]
463dc0: cmp r8d, 1
463dc4: jg 0x463df0
463dc6: mov ebx, 2
463dcb: mov eax, 1
463dd0: mov esi, 0x2f
463dd5: sub ebx, ecx
463dd7: add rbx, 1
463ddb: cmp ecx, 2
463dde: cmovg rbx, rax
463de2: mov rdx, rbx
463de5: call 0x401110
463dea: mov rdi, rax
463ded: add rdi, rbx
463df0: mov byte ptr [rdi], 0
463df3: mov rax, r13
463df6: nop word ptr cs:[rax + rax]
463e00: movsx rdx, byte ptr [rax]
463e04: add rax, 1
463e08: mov edx, dword ptr [r14 + rdx*4]
463e0c: mov byte ptr [rax - 1], dl
463e0f: test dl, dl
463e11: jne 0x463e00
463e13: mov rax, r15
463e16: nop word ptr cs:[rax + rax]
463e20: movsx rdx, byte ptr [rax]
463e24: add rax, 1
463e28: mov edx, dword ptr [r14 + rdx*4]
463e2c: mov byte ptr [rax - 1], dl
463e2f: test dl, dl
463e31: jne 0x463e20
463e33: mov rsi, r13
463e36: mov rdi, r15
463e39: call 0x458440
463e3e: test eax, eax
463e40: jne 0x464058
463e46: mov r13, qword ptr [r12 + 0x10]
463e4b: cmp qword ptr [r13], 0
463e50: je 0x4640c8
463e56: mov rdi, qword ptr [rbp - 0x58]
463e5a: test rdi, rdi
463e5d: je 0x464008
463e63: lea rdx, [rip + 0x5bf56]
463e6a: lea rsi, [rip + 0x369b3]
463e71: call 0x4010f0
463e76: mov r13, qword ptr [r12 + 0x10]
463e7b: test eax, eax
463e7d: jne 0x463e87
463e7f: mov dword ptr [r13 + 0x34], 1
463e87: mov eax, dword ptr [r13 + 0x30]
463e8b: cmp eax, -3
463e8e: ja 0x4639da
463e94: add eax, 1
463e97: mov dword ptr [r13 + 0x30], eax
463e9b: jmp 0x4639da
463ea0: cmp r8d, 1
463ea4: jg 0x463ed2
463ea6: mov r15d, 2
463eac: mov eax, 1
463eb1: mov esi, 0x2f
463eb6: sub r15d, ecx
463eb9: add r15, 1
463ebd: cmp ecx, 2
463ec0: cmovg r15, rax
463ec4: mov rdx, r15
463ec7: call 0x401110
463ecc: mov rdi, rax
463ecf: add rdi, r15
463ed2: mov byte ptr [rdi], 0
463ed5: mov rdi, rbx
463ed8: call 0x401180
463edd: mov rsi, rsp
463ee0: add rax, 0x1a
463ee4: mov rdx, rax
463ee7: and rax, 0xfffffffffffff000
463eed: sub rsi, rax
463ef0: and rdx, 0xfffffffffffffff0
463ef4: mov rax, rsi
463ef7: cmp rsp, rax
463efa: je 0x463f11
463efc: sub rsp, 0x1000
463f03: or qword ptr [rsp + 0xff8], 0
463f0c: cmp rsp, rax
463f0f: jne 0x463efc
463f11: and edx, 0xfff
463f17: sub rsp, rdx
463f1a: test rdx, rdx
463f1d: je 0x463f25
463f1f: or qword ptr [rsp + rdx - 8], 0
463f25: movzx edx, byte ptr [rbx]
463f28: lea r15, [rsp + 0xf]
463f2d: and r15, 0xfffffffffffffff0
463f31: test dl, dl
463f33: je 0x46411d
463f39: mov r9, qword ptr [rip + 0x5bee8]
463f40: mov rdi, r15
463f43: xor r8d, r8d
463f46: movabs r10, 0x8000000004007
463f50: jmp 0x463f73
463f52: nop word ptr [rax + rax]
463f58: mov eax, dword ptr [r14 + rsi*4]
463f5c: add rdi, 1
463f60: mov byte ptr [rdi - 1], al
463f63: movzx edx, byte ptr [rbx + 1]
463f67: add rbx, 1
463f6b: test dl, dl
463f6d: je 0x463dc0
463f73: movsx rsi, dl
463f77: lea ecx, [rdx - 0x2c]
463f7a: movzx eax, word ptr [r9 + rsi*2]
463f7f: shr ax, 3
463f83: and eax, 1
463f86: cmp cl, 0x33
463f89: ja 0x463f99
463f8b: mov r11, r10
463f8e: shr r11, cl
463f91: mov rcx, r11
463f94: and ecx, 1
463f97: or eax, ecx
463f99: lea ecx, [r8 + 1]
463f9d: test al, al
463f9f: jne 0x463f58
463fa1: cmp dl, 0x2f
463fa4: jne 0x463f63
463fa6: cmp ecx, 3
463fa9: je 0x463df0
463faf: lea eax, [r8 + 2]
463fb3: mov byte ptr [rdi], 0x2f
463fb6: mov r8d, ecx
463fb9: add rdi, 1
463fbd: mov ecx, eax
463fbf: jmp 0x463f63
463fc1: nop dword ptr [rax]
463fc8: cmp byte ptr [r12 + r14 - 2], 0x2e
463fce: jne 0x46399b
463fd4: cmp byte ptr [r12 + r14 - 1], 0x2e
463fda: jne 0x46399b
463fe0: jmp 0x463a30
463fe5: nop dword ptr [rax]
463fe8: cmp byte ptr [r12 + 1], 0x2e
463fee: jne 0x46398f
463ff4: cmp byte ptr [r12 + 2], 0x2f
463ffa: jne 0x46398f
464000: jmp 0x463a30
464005: nop dword ptr [rax]
464008: mov r13, qword ptr [r12 + 0x10]
46400d: jmp 0x463e87
464012: nop word ptr [rax + rax]
464018: sub rsp, 8
46401c: mov r9, qword ptr [rbp - 0x50]
464020: mov r8, qword ptr [rbp - 0x60]
464024: mov rsi, r13
464027: push 1
464029: mov rdx, qword ptr [rbp - 0x78]
46402d: push r10
46402f: push qword ptr [rbp - 0x58]
464032: push qword ptr [rbp - 0x40]
464035: push qword ptr [rbp - 0x48]
464038: mov dword ptr [rbp - 0x80], ecx
46403b: call 0x406b20
464040: add rsp, 0x30
464044: mov ecx, dword ptr [rbp - 0x80]
464047: test rax, rax
46404a: mov r12, rax
46404d: jne 0x463c0f
464053: nop dword ptr [rax + rax]
464058: xor r13d, r13d
46405b: jmp 0x4639da
464060: mov esi, ebx
464062: mov rdi, r12
464065: call 0x4643c0
46406a: jmp 0x463c25
46406f: nop 
464070: mov rdi, qword ptr [rbp - 0x40]
464074: call 0x426a00
464079: jmp 0x463c18
46407e: nop 
464080: mov rdi, qword ptr [r12 + 0x20]
464085: test rdi, rdi
464088: je 0x464138
46408e: lea r14, [r12 + 0x20]
464093: jmp 0x4640b2
464095: nop dword ptr [rax]
464098: mov rax, qword ptr [rdi + 0x10]
46409c: test rax, rax
46409f: jne 0x464100
4640a1: mov rdi, qword ptr [r14 + 8]
4640a5: add r14, 8
4640a9: test rdi, rdi
4640ac: je 0x464138
4640b2: mov eax, dword ptr [rdi + 8]
4640b5: test eax, eax
4640b7: jne 0x464098
4640b9: mov esi, ebx
4640bb: call 0x4643c0
4640c0: mov rdi, qword ptr [r14]
4640c3: jmp 0x464098
4640c5: nop dword ptr [rax]
4640c8: mov rdi, qword ptr [r12]
4640cc: mov esi, 0x2f
4640d1: call 0x401080
4640d6: cmp byte ptr [rax - 2], 0x2f
4640da: lea rdi, [rax - 1]
4640de: je 0x46412a
4640e0: sub rdi, 1
4640e4: cmp byte ptr [rdi - 1], 0x2f
4640e8: jne 0x4640e0
4640ea: sub rax, rdi
4640ed: mov rsi, rax
4640f0: call 0x475770
4640f5: mov qword ptr [r13], rax
4640f9: jmp 0x463e56
4640fe: nop 
464100: mov qword ptr [r12 + 0x20], rdi
464105: mov r13, rax
464108: mov r12, rdi
46410b: jmp 0x463c33
464110: mov rdi, r13
464113: mov ecx, 1
464118: jmp 0x463ea6
46411d: mov rdi, r15
464120: mov ecx, 1
464125: jmp 0x463dc6
46412a: mov esi, 1
46412f: jmp 0x4640f0
464131: nop dword ptr [rax]
464138: mov qword ptr [r12 + 0x20], 0
464141: jmp 0x4639da
464146: call 0x4547a0
46414b: lea rcx, [rip + 0x367ee]
464152: mov edx, 0x11b
464157: lea rsi, [rip + 0x367b7]
46415e: lea rdi, [rip + 0x367bd]
464165: call 0x4032a0
46416a: nop word ptr [rax + rax]
464170: endbr64 
464174: sub dword ptr [rsi + 0x30], 1
464178: movsxd rdx, edi
46417b: mov rdi, rsi
46417e: jne 0x4641c0
464180: cmp dword ptr [rsi + 0x18], 2
464184: je 0x4641b9
464186: lea rax, [rip + 0x5f753]
46418d: mov rax, qword ptr [rax + rdx*8]
464191: cmp rsi, qword ptr [rax + 0x10]
464195: je 0x4641aa
464197: nop word ptr [rax + rax]
4641a0: mov rax, qword ptr [rax + 0x18]
4641a4: cmp qword ptr [rax + 0x10], rdi
4641a8: jne 0x4641a0
4641aa: mov dword ptr [rax + 8], 0
4641b1: mov qword ptr [rax + 0x10], 0
4641b9: jmp 0x464770
4641be: nop 
4641c0: ret 
4641c1: nop word ptr cs:[rax + rax]
4641cb: nop dword ptr [rax + rax]
4641d0: endbr64 
4641d4: push r15
4641d6: push r14
4641d8: push r13
4641da: push r12
4641dc: push rbp
4641dd: push rbx
4641de: sub rsp, 8
4641e2: cmp rdx, 7
4641e6: jbe 0x4642c8
4641ec: mov r12, rdx
4641ef: mov ebp, edi
4641f1: mov edx, dword ptr [rsi]
4641f3: mov rbx, rsi
4641f6: mov eax, 0x20051017
4641fb: cmp edi, 3
4641fe: je 0x464211
464200: mov eax, edi
464202: mov ecx, 0x20090720
464207: xor eax, 0x20031115
46420c: test edi, edi
46420e: cmove eax, ecx
464211: cmp edx, eax
464213: jne 0x4642c8
464219: movsxd r14, ebp
46421c: lea rax, [rip + 0x36ddd]
464223: mov r13d, dword ptr [rbx + 4]
464227: cmp r13, qword ptr [rax + r14*8]
46422b: jb 0x4642c8
464231: lea rax, [r13*4 + 8]
464239: cmp rax, r12
46423c: jae 0x4642c8
464242: lea rdi, [r13*8 + 0x40]
46424a: call 0x426410
46424f: test rax, rax
464252: je 0x4642d8
464258: mov qword ptr [rax + 8], rbx
46425c: mov qword ptr [rax + 0x10], r12
464260: mov qword ptr [rax + 0x20], 0
464268: mov qword ptr [rax + 0x28], 0
464270: mov qword ptr [rax + 0x30], 0
464278: mov dword ptr [rax + 0x38], r13d
46427c: test r13, r13
46427f: je 0x4642d8
464281: xor ecx, ecx
464283: lea r10, [rip + 0x595b6]
46428a: mov r9d, ebp
46428d: lea rdx, [rip + 0x3672c]
464294: mov edi, dword ptr [rbx + rcx*4 + 8]
464298: mov rsi, rdi
46429b: cmp r12, rdi
46429e: jb 0x4642c0
4642a0: cmp ebp, 0xc
4642a3: ja 0x464383
4642a9: movsxd r8, dword ptr [rdx + r9*4]
4642ad: add r8, rdx
4642b0: notrack jmp r8
4642b4: cmp rcx, 1
4642b8: jbe 0x4642f0
4642ba: nop word ptr [rax + rax]
4642c0: mov rdi, rax
4642c3: call 0x426a00
4642c8: mov rax, 0xffffffffffffffc0
4642cf: mov dword ptr fs:[rax], 0x16
4642d6: xor eax, eax
4642d8: add rsp, 8
4642dc: pop rbx
4642dd: pop rbp
4642de: pop r12
4642e0: pop r13
4642e2: pop r14
4642e4: pop r15
4642e6: ret 
4642e7: cmp rcx, 4
4642eb: ja 0x4642c0
4642ed: nop dword ptr [rax]
4642f0: mov r8, qword ptr [r10 + r14*8]
4642f4: cmp dword ptr [r8 + rcx*4], 5
4642f9: je 0x464320
4642fb: add rdi, rbx
4642fe: mov qword ptr [rax + rcx*8 + 0x40], rdi
464303: add rcx, 1
464307: cmp r13, rcx
46430a: jne 0x464294
46430c: jmp 0x4642d8
46430e: cmp rcx, 0xc
464312: ja 0x4642c0
464314: mov r8, qword ptr [r10 + r14*8]
464318: cmp dword ptr [r8 + rcx*4], 5
46431d: jne 0x4642fb
46431f: nop 
464320: and esi, 3
464323: jne 0x4642c0
464325: mov esi, dword ptr [rbx + rdi]
464328: mov dword ptr [rax + rcx*8 + 0x40], esi
46432c: jmp 0x464303
46432e: cmp rcx, 6
464332: jbe 0x4642f0
464334: jmp 0x4642c0
464336: cmp rcx, 2
46433a: jbe 0x4642f0
46433c: jmp 0x4642c0
464341: cmp rcx, 0xf
464345: jbe 0x4642f0
464347: jmp 0x4642c0
46434c: cmp rcx, 0x2d
464350: jbe 0x4642f0
464352: jmp 0x4642c0
464357: cmp rcx, 0x12
46435b: jbe 0x4642f0
46435d: jmp 0x4642c0
464362: cmp rcx, 0x9e
464369: jbe 0x4642f0
46436f: jmp 0x4642c0
464374: cmp rcx, 5
464378: jbe 0x4642f0
46437e: jmp 0x4642c0
464383: test ebp, ebp
464385: jne 0x464396
464387: cmp rcx, 0x55
46438b: ja 0x4642fb
464391: jmp 0x4642f0
464396: lea rcx, [rip + 0x36cd3]
46439d: mov edx, 0x90
4643a2: lea rsi, [rip + 0x365eb]
4643a9: lea rdi, [rip + 0x365f1]
4643b0: call 0x4032a0
4643b5: nop word ptr cs:[rax + rax]
4643c0: endbr64 
4643c4: push rbp
4643c5: mov rbp, rsp
4643c8: push r15
4643ca: push r14
4643cc: push r13
4643ce: push r12
4643d0: mov r12d, esi
4643d3: mov esi, 0x80000
4643d8: push rbx
4643d9: mov rbx, rdi
4643dc: sub rsp, 0xb8
4643e3: mov rax, qword ptr fs:[0x28]
4643ec: mov qword ptr [rbp - 0x38], rax
4643f0: xor eax, eax
4643f2: mov dword ptr [rdi + 8], 1
4643f9: mov qword ptr [rdi + 0x10], 0
464401: mov rdi, qword ptr [rdi]
464404: call 0x4518a0
464409: test eax, eax
46440b: js 0x4644ba
464411: lea r13, [rbp - 0xd0]
464418: mov esi, eax
46441a: mov edi, 1
46441f: mov r14d, eax
464422: mov rdx, r13
464425: call 0x450c30
46442a: test eax, eax
46442c: js 0x464570
464432: mov eax, dword ptr [rbp - 0xb8]
464438: and eax, 0xf000
46443d: cmp eax, 0x4000
464442: je 0x464580
464448: mov rax, 0xffffffffffffffc0
46444f: xor r9d, r9d
464452: mov r8d, r14d
464455: xor edi, edi
464457: mov rsi, qword ptr [rbp - 0xa0]
46445e: mov ecx, 2
464463: mov edx, 1
464468: mov eax, dword ptr fs:[rax]
46446b: mov dword ptr [rbp - 0xd8], eax
464471: call 0x451bc0
464476: mov r15, rax
464479: cmp rax, -1
46447d: je 0x4644e0
46447f: mov edi, r14d
464482: call 0x451730
464487: test r15, r15
46448a: je 0x4644ba
46448c: mov rdx, qword ptr [rbp - 0xa0]
464493: mov rsi, r15
464496: mov edi, r12d
464499: call 0x4641d0
46449e: test rax, rax
4644a1: je 0x4646f0
4644a7: mov edx, 1
4644ac: mov qword ptr [rax], 0
4644b3: mov dword ptr [rax + 0x18], edx
4644b6: mov qword ptr [rbx + 0x10], rax
4644ba: mov rax, qword ptr [rbp - 0x38]
4644be: xor rax, qword ptr fs:[0x28]
4644c7: jne 0x464767
4644cd: lea rsp, [rbp - 0x28]
4644d1: pop rbx
4644d2: pop r12
4644d4: pop r13
4644d6: pop r14
4644d8: pop r15
4644da: pop rbp
4644db: ret 
4644dc: nop dword ptr [rax]
4644e0: mov rax, 0xffffffffffffffc0
4644e7: cmp dword ptr fs:[rax], 0x26
4644eb: jne 0x464570
4644f1: mov r15, qword ptr [rbp - 0xa0]
4644f8: mov rdi, r15
4644fb: call 0x426410
464500: mov qword ptr [rbp - 0xe0], rax
464507: test rax, rax
46450a: je 0x464570
46450c: mov r13, rax
46450f: test r15, r15
464512: jg 0x46452f
464514: jmp 0x4646a8
464519: nop dword ptr [rax]
464520: sub r15, rax
464523: add r13, rax
464526: test r15, r15
464529: jle 0x4646a8
46452f: mov rdx, r15
464532: mov rsi, r13
464535: mov edi, r14d
464538: call 0x4519f0
46453d: test rax, rax
464540: jg 0x464520
464542: mov rdi, qword ptr [rbp - 0xe0]
464549: mov qword ptr [rbp - 0xd8], rax
464550: call 0x426a00
464555: mov rax, qword ptr [rbp - 0xd8]
46455c: test rax, rax
46455f: jne 0x464570
464561: mov rax, 0xffffffffffffffc0
464568: mov dword ptr fs:[rax], 0x16
46456f: nop 
464570: mov edi, r14d
464573: call 0x451730
464578: jmp 0x4644ba
46457d: nop dword ptr [rax]
464580: mov edi, r14d
464583: call 0x451730
464588: mov rsi, qword ptr [rbx]
46458b: mov rdi, rsi
46458e: mov qword ptr [rbp - 0xd8], rsi
464595: call 0x401180
46459a: movsxd rdi, r12d
46459d: mov rsi, rsp
4645a0: mov rdx, rax
4645a3: lea rax, [rip + 0x3629e]
4645aa: movzx eax, byte ptr [rax + rdi]
4645ae: lea rcx, [rdx + rax + 0x1d]
4645b3: mov r14, rax
4645b6: mov rax, rcx
4645b9: and rcx, 0xfffffffffffff000
4645c0: sub rsi, rcx
4645c3: and rax, 0xfffffffffffffff0
4645c7: mov rcx, rsi
4645ca: mov rsi, qword ptr [rbp - 0xd8]
4645d1: cmp rsp, rcx
4645d4: je 0x4645eb
4645d6: sub rsp, 0x1000
4645dd: or qword ptr [rsp + 0xff8], 0
4645e6: cmp rsp, rcx
4645e9: jne 0x4645d6
4645eb: and eax, 0xfff
4645f0: sub rsp, rax
4645f3: test rax, rax
4645f6: je 0x4645fe
4645f8: or qword ptr [rsp + rax - 8], 0
4645fe: lea rax, [rip + 0x3625b]
464605: lea r15, [rsp + 0xf]
46460a: add r14d, 1
46460e: movzx ecx, byte ptr [rax + rdi]
464612: and r15, 0xfffffffffffffff0
464616: lea rax, [rip + 0x36263]
46461d: mov rdi, r15
464620: add rcx, rax
464623: mov qword ptr [rbp - 0xd8], rcx
46462a: call 0x401150
46462f: cmp r14d, 8
464633: mov rcx, qword ptr [rbp - 0xd8]
46463a: mov dword ptr [rax], 0x5359532f
464640: lea rdx, [rax + 5]
464644: mov byte ptr [rax + 4], 0x5f
464648: jae 0x464708
46464e: test r14b, 4
464652: jne 0x464742
464658: test r14d, r14d
46465b: je 0x46466e
46465d: movzx esi, byte ptr [rcx]
464660: mov byte ptr [rax + 5], sil
464664: test r14b, 2
464668: jne 0x464756
46466e: mov esi, 0x80000
464673: mov rdi, r15
464676: xor eax, eax
464678: call 0x4518a0
46467d: mov r14d, eax
464680: test eax, eax
464682: js 0x4644ba
464688: mov rdx, r13
46468b: mov esi, eax
46468d: mov edi, 1
464692: call 0x450c30
464697: test eax, eax
464699: jns 0x464448
46469f: jmp 0x464570
4646a4: nop dword ptr [rax]
4646a8: mov rax, 0xffffffffffffffc0
4646af: mov ecx, dword ptr [rbp - 0xd8]
4646b5: mov edi, r14d
4646b8: mov dword ptr fs:[rax], ecx
4646bb: call 0x451730
4646c0: mov rdx, qword ptr [rbp - 0xa0]
4646c7: mov rsi, qword ptr [rbp - 0xe0]
4646ce: mov edi, r12d
4646d1: call 0x4641d0
4646d6: test rax, rax
4646d9: je 0x4644ba
4646df: xor edx, edx
4646e1: jmp 0x4644ac
4646e6: nop word ptr cs:[rax + rax]
4646f0: mov rsi, qword ptr [rbp - 0xa0]
4646f7: mov rdi, r15
4646fa: call 0x451c70
4646ff: jmp 0x4644ba
464704: nop dword ptr [rax]
464708: mov rsi, qword ptr [rcx]
46470b: mov qword ptr [rax + 5], rsi
46470f: mov esi, r14d
464712: mov rdi, qword ptr [rcx + rsi - 8]
464717: mov qword ptr [rdx + rsi - 8], rdi
46471c: lea rdi, [rax + 0xd]
464720: mov rax, rdx
464723: and rdi, 0xfffffffffffffff8
464727: sub rax, rdi
46472a: add r14d, eax
46472d: sub rcx, rax
464730: shr r14d, 3
464734: mov rsi, rcx
464737: mov ecx, r14d
46473a: rep movsq qword ptr [rdi], qword ptr [rsi]
46473d: jmp 0x46466e
464742: mov esi, dword ptr [rcx]
464744: mov dword ptr [rax + 5], esi
464747: mov eax, dword ptr [rcx + r14 - 4]
46474c: mov dword ptr [rdx + r14 - 4], eax
464751: jmp 0x46466e
464756: movzx eax, word ptr [rcx + r14 - 2]
46475c: mov word ptr [rdx + r14 - 2], ax
464762: jmp 0x46466e
464767: call 0x4547a0
46476c: nop dword ptr [rax]
464770: endbr64 
464774: push rbp
464775: mov rax, qword ptr [rdi + 0x20]
464779: mov rbp, rdi
46477c: test rax, rax
46477f: je 0x464783
464781: call rax
464783: mov eax, dword ptr [rbp + 0x18]
464786: test eax, eax
464788: je 0x4647c0
46478a: cmp eax, 1
46478d: jne 0x46479f
46478f: mov rsi, qword ptr [rbp + 0x10]
464793: mov rdi, qword ptr [rbp + 8]
464797: call 0x451c70
46479c: mov eax, dword ptr [rbp + 0x18]
46479f: cmp eax, 2
4647a2: je 0x4647ad
4647a4: mov rdi, qword ptr [rbp]
4647a8: call 0x426a00
4647ad: mov rdi, rbp
4647b0: pop rbp
4647b1: jmp 0x426a00
4647b6: nop word ptr cs:[rax + rax]
4647c0: mov rdi, qword ptr [rbp + 8]
4647c4: call 0x426a00
4647c9: mov eax, dword ptr [rbp + 0x18]
4647cc: jmp 0x46479f
4647ce: nop 
4647d0: endbr64 
4647d4: push rbp
4647d5: mov rbp, rsp
4647d8: push r15
4647da: push r14
4647dc: push r13
4647de: push r12
4647e0: push rbx
4647e1: sub rsp, 0x118
4647e8: mov dword ptr [rbp - 0x134], edi
4647ee: mov edi, 0x1e
4647f3: mov r13, qword ptr [rsi]
4647f6: mov qword ptr [rbp - 0x130], rsi
4647fd: mov rdx, qword ptr fs:[0x28]
464806: mov qword ptr [rbp - 0x38], rdx
46480a: xor edx, edx
46480c: call 0x450760
464811: mov rbx, qword ptr [rip + 0x5e628]
464818: test rbx, rbx
46481b: jne 0x46483b
46481d: jmp 0x464880
46481f: nop 
464820: mov rsi, r14
464823: mov rdi, r13
464826: call 0x401130
46482b: test eax, eax
46482d: je 0x464c40
464833: mov rbx, qword ptr [rbx]
464836: test rbx, rbx
464839: je 0x464880
46483b: mov r14, qword ptr [rbx + 8]
46483f: cmp r14, r13
464842: jne 0x464820
464844: mov rax, qword ptr [rbp - 0x130]
46484b: movsxd r12, dword ptr [rbp - 0x134]
464852: mov qword ptr [rax], r13
464855: mov r15, qword ptr [rbx + r12*8 + 0x10]
46485a: mov rax, qword ptr [rbp - 0x38]
46485e: xor rax, qword ptr fs:[0x28]
464867: jne 0x464e62
46486d: lea rsp, [rbp - 0x28]
464871: mov rax, r15
464874: pop rbx
464875: pop r12
464877: pop r13
464879: pop r14
46487b: pop r15
46487d: pop rbp
46487e: ret 
46487f: nop 
464880: mov esi, 0x2e
464885: mov rdi, r13
464888: call 0x401190
46488d: test rax, rax
464890: je 0x46489c
464892: test byte ptr [rax + 1], 0xbf
464896: jne 0x464c90
46489c: mov r15, qword ptr [rip + 0x5e665]
4648a3: test r15, r15
4648a6: je 0x464c48
4648ac: mov r14, qword ptr [rip + 0x5e63d]
4648b3: test r14, r14
4648b6: je 0x464c78
4648bc: mov rdi, r13
4648bf: call 0x401180
4648c4: mov r8d, eax
4648c7: test rax, rax
4648ca: je 0x464c80
4648d0: mov rdx, r13
4648d3: lea rcx, [rax + r13]
4648d7: nop word ptr [rax + rax]
4648e0: movzx eax, byte ptr [rdx]
4648e3: rol r8d, 9
4648e7: add rdx, 1
4648eb: add r8d, eax
4648ee: cmp rdx, rcx
4648f1: jne 0x4648e0
4648f3: mov esi, r8d
4648f6: test r8d, r8d
4648f9: je 0x464c80
4648ff: mov eax, dword ptr [r14 + 8]
464903: mov edi, dword ptr [r14 + 0x10]
464907: mov qword ptr [rbp - 0x140], rax
46490e: cmp edi, 2
464911: jbe 0x464c78
464917: mov r9d, edi
46491a: mov rax, rsi
46491d: xor edx, edx
46491f: sub edi, 2
464922: div r9
464925: mov rax, rsi
464928: mov rcx, rdx
46492b: xor edx, edx
46492d: div rdi
464930: lea r12, [rdx + 1]
464934: lea r11, [r12 + r12*2]
464938: lea rbx, [r11*4]
464940: mov rdx, qword ptr [rbp - 0x140]
464947: lea rax, [rcx + rcx*2]
46494b: lea r15, [rdx + rax*4]
46494f: add r15, r14
464952: jmp 0x464967
464954: nop dword ptr [rax]
464958: add rcx, r12
46495b: add r15, rbx
46495e: cmp r9, rcx
464961: jbe 0x464d98
464967: mov esi, dword ptr [r15 + 4]
46496b: test esi, esi
46496d: je 0x464c78
464973: cmp dword ptr [r15], r8d
464976: jne 0x464958
464978: add rsi, r14
46497b: mov rdi, r13
46497e: mov qword ptr [rbp - 0x128], rcx
464985: mov qword ptr [rbp - 0x120], r9
46498c: mov dword ptr [rbp - 0x118], r8d
464993: call 0x401130
464998: mov r8d, dword ptr [rbp - 0x118]
46499f: mov r9, qword ptr [rbp - 0x120]
4649a6: test eax, eax
4649a8: mov rcx, qword ptr [rbp - 0x128]
4649af: jne 0x464958
4649b1: mov eax, dword ptr [r15 + 8]
4649b5: test eax, eax
4649b7: je 0x464c78
4649bd: mov ecx, dword ptr [rip + 0x5e539]
4649c3: add rax, r14
4649c6: cmp rcx, qword ptr [rip + 0x5e4c3]
4649cd: mov rdx, rcx
4649d0: jne 0x464e67
4649d6: mov ecx, dword ptr [rax + 4]
4649d9: mov esi, dword ptr [rax + 8]
4649dc: lea edi, [rsi + rcx]
4649df: cmp edx, edi
4649e1: jb 0x464c78
4649e7: add rcx, r14
4649ea: mov edi, esi
4649ec: mov esi, dword ptr [rax + 0x10]
4649ef: mov qword ptr [rbp - 0x110], rcx
4649f6: mov ecx, dword ptr [rax + 0xc]
4649f9: mov qword ptr [rbp - 0x108], rdi
464a00: lea edi, [rsi + rcx]
464a03: cmp edx, edi
464a05: jb 0x464c78
464a0b: add rcx, r14
464a0e: mov edi, esi
464a10: mov esi, dword ptr [rax + 0x18]
464a13: mov qword ptr [rbp - 0x100], rcx
464a1a: mov ecx, dword ptr [rax + 0x14]
464a1d: mov qword ptr [rbp - 0xf8], rdi
464a24: lea edi, [rsi + rcx]
464a27: cmp edx, edi
464a29: jb 0x464c78
464a2f: add rcx, r14
464a32: mov edi, esi
464a34: mov esi, dword ptr [rax + 0x20]
464a37: mov qword ptr [rbp - 0xf0], rcx
464a3e: mov ecx, dword ptr [rax + 0x1c]
464a41: mov qword ptr [rbp - 0xe8], rdi
464a48: lea edi, [rsi + rcx]
464a4b: cmp edx, edi
464a4d: jb 0x464c78
464a53: add rcx, r14
464a56: mov edi, esi
464a58: mov esi, dword ptr [rax + 0x28]
464a5b: mov qword ptr [rbp - 0xe0], rcx
464a62: mov ecx, dword ptr [rax + 0x24]
464a65: mov qword ptr [rbp - 0xd8], rdi
464a6c: lea edi, [rcx + rsi]
464a6f: cmp edx, edi
464a71: jb 0x464c78
464a77: add rcx, r14
464a7a: mov edi, esi
464a7c: mov esi, dword ptr [rax + 0x30]
464a7f: mov qword ptr [rbp - 0xd0], rcx
464a86: mov ecx, dword ptr [rax + 0x2c]
464a89: mov qword ptr [rbp - 0xc8], rdi
464a90: lea edi, [rcx + rsi]
464a93: cmp edx, edi
464a95: jb 0x464c78
464a9b: add rcx, r14
464a9e: mov edi, esi
464aa0: mov esi, dword ptr [rax + 0x40]
464aa3: mov qword ptr [rbp - 0xc0], rcx
464aaa: mov ecx, dword ptr [rax + 0x3c]
464aad: mov qword ptr [rbp - 0xb8], rdi
464ab4: lea edi, [rcx + rsi]
464ab7: cmp edx, edi
464ab9: jb 0x464c78
464abf: add rcx, r14
464ac2: mov edi, esi
464ac4: mov esi, dword ptr [rax + 0x48]
464ac7: mov qword ptr [rbp - 0xa0], rcx
464ace: mov ecx, dword ptr [rax + 0x44]
464ad1: mov qword ptr [rbp - 0x98], rdi
464ad8: lea edi, [rcx + rsi]
464adb: cmp edx, edi
464add: jb 0x464c78
464ae3: add rcx, r14
464ae6: mov edi, esi
464ae8: mov esi, dword ptr [rax + 0x50]
464aeb: mov qword ptr [rbp - 0x90], rcx
464af2: mov ecx, dword ptr [rax + 0x4c]
464af5: mov qword ptr [rbp - 0x88], rdi
464afc: lea edi, [rcx + rsi]
464aff: cmp edx, edi
464b01: jb 0x464c78
464b07: add rcx, r14
464b0a: mov edi, esi
464b0c: mov esi, dword ptr [rax + 0x58]
464b0f: mov qword ptr [rbp - 0x80], rcx
464b13: mov ecx, dword ptr [rax + 0x54]
464b16: mov qword ptr [rbp - 0x78], rdi
464b1a: lea edi, [rcx + rsi]
464b1d: cmp edx, edi
464b1f: jb 0x464c78
464b25: add rcx, r14
464b28: mov edi, esi
464b2a: mov esi, dword ptr [rax + 0x60]
464b2d: mov qword ptr [rbp - 0x70], rcx
464b31: mov ecx, dword ptr [rax + 0x5c]
464b34: mov qword ptr [rbp - 0x68], rdi
464b38: lea edi, [rcx + rsi]
464b3b: cmp edx, edi
464b3d: jb 0x464c78
464b43: add rcx, r14
464b46: mov edi, esi
464b48: mov esi, dword ptr [rax + 0x68]
464b4b: mov qword ptr [rbp - 0x60], rcx
464b4f: mov ecx, dword ptr [rax + 0x64]
464b52: mov qword ptr [rbp - 0x58], rdi
464b56: lea eax, [rcx + rsi]
464b59: cmp edx, eax
464b5b: jb 0x464c78
464b61: mov eax, ecx
464b63: mov edi, 0x78
464b68: add r14, rax
464b6b: mov eax, esi
464b6d: mov qword ptr [rbp - 0x50], r14
464b71: mov qword ptr [rbp - 0x48], rax
464b75: call 0x426410
464b7a: mov r14, rax
464b7d: test rax, rax
464b80: je 0x464c78
464b86: mov rax, qword ptr [rbp - 0x130]
464b8d: mov rdi, qword ptr [rax]
464b90: call 0x429020
464b95: mov qword ptr [r14 + 8], rax
464b99: mov r15, rax
464b9c: test rax, rax
464b9f: je 0x464e55
464ba5: mov rax, qword ptr [rip + 0x5e294]
464bac: xor ebx, ebx
464bae: mov qword ptr [rip + 0x5e28b], r14
464bb5: lea r15, [rbp - 0x110]
464bbc: lea r13, [rbp - 0x108]
464bc3: mov qword ptr [r14], rax
464bc6: jmp 0x464bd4
464bc8: nop dword ptr [rax + rax]
464bd0: add rbx, 1
464bd4: mov r12d, ebx
464bd7: cmp rbx, 6
464bdb: je 0x464bd0
464bdd: mov rax, rbx
464be0: mov edi, ebx
464be2: shl rax, 4
464be6: mov rsi, qword ptr [r15 + rax]
464bea: mov rdx, qword ptr [r13 + rax]
464bef: call 0x4641d0
464bf4: mov qword ptr [r14 + rbx*8 + 0x10], rax
464bf9: test rax, rax
464bfc: je 0x464c13
464bfe: mov rdx, qword ptr [r14 + 8]
464c02: mov dword ptr [rax + 0x18], 2
464c09: mov dword ptr [rax + 0x30], 0xffffffff
464c10: mov qword ptr [rax], rdx
464c13: cmp r12d, 0xc
464c17: jne 0x464bd0
464c19: mov rax, qword ptr [r14 + 8]
464c1d: mov rdx, qword ptr [rbp - 0x130]
464c24: movsxd r12, dword ptr [rbp - 0x134]
464c2b: mov qword ptr [rdx], rax
464c2e: mov r15, qword ptr [r14 + r12*8 + 0x10]
464c33: jmp 0x46485a
464c38: nop dword ptr [rax + rax]
464c40: mov r13, r14
464c43: jmp 0x464844
464c48: lea rax, [rip + 0x5e2a1]
464c4f: mov esi, 0x80000
464c54: lea rdi, [rip + 0x364c5]
464c5b: mov qword ptr [rip + 0x5e2a6], rax
464c62: xor eax, eax
464c64: call 0x4518a0
464c69: mov ebx, eax
464c6b: test eax, eax
464c6d: jns 0x464da0
464c73: nop dword ptr [rax + rax]
464c78: xor r15d, r15d
464c7b: jmp 0x46485a
464c80: mov esi, 0xffffffff
464c85: mov r8d, 0xffffffff
464c8b: jmp 0x4648ff
464c90: lea rbx, [rax + 1]
464c94: mov esi, 0x40
464c99: mov rdi, rbx
464c9c: call 0x4010a0
464ca1: mov rdi, rbx
464ca4: mov r15, rax
464ca7: mov r14, rax
464caa: sub r15, rbx
464cad: mov rsi, r15
464cb0: call 0x4070e0
464cb5: mov r12, rax
464cb8: test rax, rax
464cbb: je 0x464c78
464cbd: mov rdx, r15
464cc0: mov rsi, rbx
464cc3: mov rdi, rax
464cc6: call 0x4010d0
464ccb: test eax, eax
464ccd: jne 0x464cda
464ccf: cmp byte ptr [r12 + r15], 0
464cd4: je 0x464d87
464cda: mov rdi, r12
464cdd: call 0x401180
464ce2: mov rdi, r14
464ce5: mov r15, rax
464ce8: call 0x401180
464ced: mov rdx, rbx
464cf0: mov rdi, rsp
464cf3: sub rdx, r13
464cf6: lea r9, [rax + 1]
464cfa: lea rcx, [rdx + r15]
464cfe: lea rax, [rcx + rax + 0x18]
464d03: mov rcx, rax
464d06: and rax, 0xfffffffffffff000
464d0c: sub rdi, rax
464d0f: and rcx, 0xfffffffffffffff0
464d13: mov rax, rdi
464d16: cmp rsp, rax
464d19: je 0x464d30
464d1b: sub rsp, 0x1000
464d22: or qword ptr [rsp + 0xff8], 0
464d2b: cmp rsp, rax
464d2e: jne 0x464d1b
464d30: mov rax, rcx
464d33: and eax, 0xfff
464d38: sub rsp, rax
464d3b: test rax, rax
464d3e: je 0x464d46
464d40: or qword ptr [rsp + rax - 8], 0
464d46: lea rbx, [rsp + 0xf]
464d4b: mov rsi, r13
464d4e: mov qword ptr [rbp - 0x118], r9
464d55: and rbx, 0xfffffffffffffff0
464d59: mov rdi, rbx
464d5c: mov r13, rbx
464d5f: call 0x401150
464d64: mov rdx, r15
464d67: mov rsi, r12
464d6a: mov rdi, rax
464d6d: call 0x401150
464d72: mov r9, qword ptr [rbp - 0x118]
464d79: mov rsi, r14
464d7c: mov rdi, rax
464d7f: mov rdx, r9
464d82: call 0x401060
464d87: mov rdi, r12
464d8a: call 0x426a00
464d8f: jmp 0x46489c
464d94: nop dword ptr [rax]
464d98: sub rcx, r9
464d9b: jmp 0x464940
464da0: lea rdx, [rip + 0x5e0b9]
464da7: mov esi, eax
464da9: mov edi, 1
464dae: call 0x450c30
464db3: cmp eax, -1
464db6: je 0x464e49
464dbc: mov r12, qword ptr [rip + 0x5e0cd]
464dc3: xor r9d, r9d
464dc6: mov r8d, ebx
464dc9: xor edi, edi
464dcb: mov ecx, 2
464dd0: mov edx, 1
464dd5: mov rsi, r12
464dd8: call 0x451bc0
464ddd: mov r14, rax
464de0: cmp rax, -1
464de4: je 0x464e49
464de6: mov eax, dword ptr [rax + 0x10]
464de9: lea rdx, [rax + rax*2]
464ded: mov eax, dword ptr [r14 + 8]
464df1: lea rax, [rax + rdx*4]
464df5: mov edx, dword ptr [r14 + 0x24]
464df9: lea rdx, [rdx + rdx*2]
464dfd: lea rcx, [rdx + rdx*8]
464e01: mov edx, dword ptr [r14 + 0x20]
464e05: lea rdx, [rdx + rcx*4]
464e09: cmp rax, rdx
464e0c: cmovl rax, rdx
464e10: mov edx, dword ptr [r14 + 0x18]
464e14: add edx, dword ptr [r14 + 0x14]
464e18: cmp rax, rdx
464e1b: cmovl rax, rdx
464e1f: cmp r12, rax
464e22: jb 0x464e3e
464e24: mov edi, ebx
464e26: call 0x451730
464e2b: mov qword ptr [rip + 0x5e0be], r14
464e32: mov dword ptr [rip + 0x5e0c3], r12d
464e39: jmp 0x4648bc
464e3e: mov rsi, r12
464e41: mov rdi, r14
464e44: call 0x451c70
464e49: mov edi, ebx
464e4b: call 0x451730
464e50: jmp 0x46485a
464e55: mov rdi, r14
464e58: call 0x426a00
464e5d: jmp 0x46485a
464e62: call 0x4547a0
464e67: lea rcx, [rip + 0x36292]
464e6e: mov edx, 0x136
464e73: lea rsi, [rip + 0x36216]
464e7a: lea rdi, [rip + 0x36237]
464e81: call 0x4032a0
464e86: nop word ptr cs:[rax + rax]
464e90: endbr64 
464e94: mov rdx, qword ptr [rip + 0x5cae5]
464e9b: mov rdi, 0xffffffffffffffb0
464ea2: lea rsi, [rip + 0x5cad7]
464ea9: mov rax, qword ptr [rdx + 0x40]
464ead: lea rcx, [rax + 0x100]
464eb4: mov rax, qword ptr [rdx + 0x58]
464eb8: mov rdx, qword ptr [rdx + 0x48]
464ebc: mov qword ptr [rip + 0x5cb25], rcx
464ec3: add rax, 0x200
464ec9: add rdx, 0x200
464ed0: mov qword ptr [rip + 0x5cb19], rax
464ed7: mov qword ptr [rip + 0x5cb1a], rdx
464ede: cmp qword ptr fs:[rdi], rsi
464ee2: je 0x464ee8
464ee4: ret 
464ee5: nop dword ptr [rax]
464ee8: mov rsi, 0xfffffffffffffff0
464eef: mov qword ptr fs:[rsi], rcx
464ef3: mov rcx, 0xffffffffffffffe8
464efa: mov qword ptr fs:[rcx], rdx
464efe: mov rdx, 0xffffffffffffffe0
464f05: mov qword ptr fs:[rdx], rax
464f09: ret 
464f0a: nop word ptr [rax + rax]
464f10: endbr64 
464f14: mov rax, 0xffffffffffffffb0
464f1b: movsxd rdi, edi
464f1e: mov rax, qword ptr fs:[rax]
464f22: mov rax, qword ptr [rax + rdi*8 + 0x80]
464f2a: ret 
464f2b: nop dword ptr [rax + rax]
464f30: endbr64 
464f34: mov rax, 0xfffffffffffffff0
464f3b: add rax, qword ptr fs:[0]
464f44: ret 
464f45: nop word ptr cs:[rax + rax]
464f50: endbr64 
464f54: mov rax, 0xffffffffffffffe8
464f5b: add rax, qword ptr fs:[0]
464f64: ret 
464f65: nop word ptr cs:[rax + rax]
464f70: endbr64 
464f74: mov rax, 0xffffffffffffffe0
464f7b: add rax, qword ptr fs:[0]
464f84: ret 
464f85: nop word ptr cs:[rax + rax]
464f90: endbr64 
464f94: mov rax, 0xffffffffffffffa0
464f9b: mov rcx, 0xfffffffffffffff0
464fa2: mov rax, qword ptr fs:[rax]
464fa6: mov rax, qword ptr [rax]
464fa9: mov rsi, qword ptr [rax + 0x40]
464fad: lea rdx, [rsi + 0x100]
464fb4: mov qword ptr fs:[rcx], rdx
464fb8: mov rdi, qword ptr [rax + 0x48]
464fbc: mov rcx, 0xffffffffffffffe8
464fc3: lea rdx, [rdi + 0x200]
464fca: mov qword ptr fs:[rcx], rdx
464fce: mov rax, qword ptr [rax + 0x58]
464fd2: mov rdx, 0xffffffffffffffe0
464fd9: add rax, 0x200
464fdf: mov qword ptr fs:[rdx], rax
464fe3: ret 
464fe4: nop word ptr cs:[rax + rax]
464fee: nop 
464ff0: endbr64 
464ff4: sub rsp, 0x18
464ff8: mov eax, edi
464ffa: mov rdx, qword ptr fs:[0x28]
465003: mov qword ptr [rsp + 8], rdx
465008: xor edx, edx
46500a: fnstcw word ptr [rsp + 6]
46500e: movzx edi, word ptr [rsp + 6]
465013: and ax, 0xf3f
465017: and di, 0xf0c0
46501c: or edi, eax
46501e: mov word ptr [rsp + 6], di
465023: fldcw word ptr [rsp + 6]
465027: mov rax, qword ptr [rsp + 8]
46502c: xor rax, qword ptr fs:[0x28]
465035: jne 0x46503c
465037: add rsp, 0x18
46503b: ret 
46503c: call 0x4547a0
465041: nop word ptr cs:[rax + rax]
46504b: nop dword ptr [rax + rax]
465050: endbr64 
465054: mov qword ptr [rdi], rbx
465057: mov rax, rbp
46505a: xor rax, qword ptr fs:[0x30]
465063: rol rax, 0x11
465067: mov qword ptr [rdi + 8], rax
46506b: mov qword ptr [rdi + 0x10], r12
46506f: mov qword ptr [rdi + 0x18], r13
465073: mov qword ptr [rdi + 0x20], r14
465077: mov qword ptr [rdi + 0x28], r15
46507b: lea rdx, [rsp + 8]
465080: xor rdx, qword ptr fs:[0x30]
465089: rol rdx, 0x11
46508d: mov qword ptr [rdi + 0x30], rdx
465091: mov rax, qword ptr [rsp]
465095: nop 
465096: xor rax, qword ptr fs:[0x30]
46509f: rol rax, 0x11
4650a3: mov qword ptr [rdi + 0x38], rax
4650a7: xor eax, eax
4650a9: rdsspq rax
4650ae: mov qword ptr [rdi + 0x58], rax
4650b2: jmp 0x4650c0
4650b7: nop word ptr [rax + rax]
4650c0: endbr64 
4650c4: push rbx
4650c5: mov rbx, rdi
4650c8: test esi, esi
4650ca: jne 0x4650d8
4650cc: mov dword ptr [rbx + 0x40], esi
4650cf: xor eax, eax
4650d1: pop rbx
4650d2: ret 
4650d3: nop dword ptr [rax + rax]
4650d8: xor esi, esi
4650da: lea rdx, [rdi + 0x48]
4650de: xor edi, edi
4650e0: call 0x465340
4650e5: xor esi, esi
4650e7: test eax, eax
4650e9: sete sil
4650ed: xor eax, eax
4650ef: mov dword ptr [rbx + 0x40], esi
4650f2: pop rbx
4650f3: ret 
4650f4: nop word ptr cs:[rax + rax]
4650fe: nop 
465100: nop 
465101: nop word ptr cs:[rax + rax]
46510c: nop dword ptr [rax]
465110: mov rax, 0xf
465117: syscall 
465119: nop dword ptr [rax]
465120: endbr64 
465124: sub rsp, 0x148
46512b: mov r8, rdx
46512e: mov rax, qword ptr fs:[0x28]
465137: mov qword ptr [rsp + 0x138], rax
46513f: xor eax, eax
465141: test rsi, rsi
465144: je 0x4652c0
46514a: mov rax, qword ptr [rsi]
46514d: movdqu xmm0, xmmword ptr [rsi + 8]
465152: lea rdx, [rsp + 0xa0]
46515a: movdqu xmm1, xmmword ptr [rsi + 0x18]
46515f: movdqu xmm2, xmmword ptr [rsi + 0x28]
465164: movdqu xmm3, xmmword ptr [rsi + 0x38]
465169: movdqu xmm4, xmmword ptr [rsi + 0x48]
46516e: mov qword ptr [rsp], rax
465172: mov eax, dword ptr [rsi + 0x88]
465178: movdqu xmm5, xmmword ptr [rsi + 0x58]
46517d: movups xmmword ptr [rsp + 0x18], xmm0
465182: movdqu xmm6, xmmword ptr [rsi + 0x68]
465187: movdqu xmm7, xmmword ptr [rsi + 0x78]
46518c: movups xmmword ptr [rsp + 0x28], xmm1
465191: mov rsi, rsp
465194: or eax, 0x4000000
465199: test r8, r8
46519c: movups xmmword ptr [rsp + 0x38], xmm2
4651a1: cdqe 
4651a3: movups xmmword ptr [rsp + 0x48], xmm3
4651a8: mov qword ptr [rsp + 8], rax
4651ad: lea rax, [rip - 0xa4]
4651b4: mov qword ptr [rsp + 0x10], rax
4651b9: mov eax, 0
4651be: cmove rdx, rax
4651c2: movups xmmword ptr [rsp + 0x58], xmm4
4651c7: movups xmmword ptr [rsp + 0x68], xmm5
4651cc: movups xmmword ptr [rsp + 0x78], xmm6
4651d1: movups xmmword ptr [rsp + 0x88], xmm7
4651d9: mov r10d, 8
4651df: mov eax, 0xd
4651e4: syscall 
4651e6: cmp rax, -0x1000
4651ec: ja 0x4652e0
4651f2: mov r9d, eax
4651f5: test r8, r8
4651f8: je 0x46529f
4651fe: test eax, eax
465200: js 0x46529f
465206: mov rax, qword ptr [rsp + 0xa0]
46520e: movdqu xmm0, xmmword ptr [rsp + 0xb8]
465217: movdqu xmm1, xmmword ptr [rsp + 0xc8]
465220: movdqu xmm2, xmmword ptr [rsp + 0xd8]
465229: movdqu xmm3, xmmword ptr [rsp + 0xe8]
465232: mov qword ptr [r8], rax
465235: mov rax, qword ptr [rsp + 0xa8]
46523d: movups xmmword ptr [r8 + 8], xmm0
465242: movdqu xmm4, xmmword ptr [rsp + 0xf8]
46524b: movdqu xmm5, xmmword ptr [rsp + 0x108]
465254: movups xmmword ptr [r8 + 0x18], xmm1
465259: movdqu xmm6, xmmword ptr [rsp + 0x118]
465262: movdqu xmm7, xmmword ptr [rsp + 0x128]
46526b: mov dword ptr [r8 + 0x88], eax
465272: mov rax, qword ptr [rsp + 0xb0]
46527a: movups xmmword ptr [r8 + 0x28], xmm2
46527f: movups xmmword ptr [r8 + 0x38], xmm3
465284: mov qword ptr [r8 + 0x90], rax
46528b: movups xmmword ptr [r8 + 0x48], xmm4
465290: movups xmmword ptr [r8 + 0x58], xmm5
465295: movups xmmword ptr [r8 + 0x68], xmm6
46529a: movups xmmword ptr [r8 + 0x78], xmm7
46529f: mov rax, qword ptr [rsp + 0x138]
4652a7: xor rax, qword ptr fs:[0x28]
4652b0: jne 0x4652f4
4652b2: mov eax, r9d
4652b5: add rsp, 0x148
4652bc: ret 
4652bd: nop dword ptr [rax]
4652c0: xor esi, esi
4652c2: lea rdx, [rsp + 0xa0]
4652ca: test r8, r8
4652cd: cmove rdx, rsi
4652d1: jmp 0x4651d9
4652d6: nop word ptr cs:[rax + rax]
4652e0: mov rdx, 0xffffffffffffffc0
4652e7: neg eax
4652e9: mov r9d, 0xffffffff
4652ef: mov dword ptr fs:[rdx], eax
4652f2: jmp 0x46529f
4652f4: call 0x4547a0
4652f9: nop dword ptr [rax]
465300: endbr64 
465304: lea eax, [rdi - 1]
465307: cmp eax, 0x3f
46530a: ja 0x465320
46530c: lea eax, [rdi - 0x20]
46530f: cmp eax, 1
465312: jbe 0x465320
465314: jmp 0x465120
465319: nop dword ptr [rax]
465320: mov rax, 0xffffffffffffffc0
465327: mov dword ptr fs:[rax], 0x16
46532e: mov eax, 0xffffffff
465333: ret 
465334: nop word ptr cs:[rax + rax]
46533e: nop 
465340: endbr64 
465344: sub rsp, 0x98
46534b: xor r8d, r8d
46534e: mov rax, qword ptr fs:[0x28]
465357: mov qword ptr [rsp + 0x88], rax
46535f: xor eax, eax
465361: test rsi, rsi
465364: je 0x46537b
465366: movabs rcx, 0x180000000
465370: mov rax, qword ptr [rsi]
465373: test rax, rcx
465376: jne 0x4653c0
465378: mov r8, rsi
46537b: mov r10d, 8
465381: mov rsi, r8
465384: mov eax, 0xe
465389: syscall 
46538b: cmp rax, -0x1000
465391: ja 0x465430
465397: mov rcx, qword ptr [rsp + 0x88]
46539f: xor rcx, qword ptr fs:[0x28]
4653a8: jne 0x465446
4653ae: add rsp, 0x98
4653b5: ret 
4653b6: nop word ptr cs:[rax + rax]
4653c0: movdqu xmm0, xmmword ptr [rsi]
4653c4: movdqu xmm1, xmmword ptr [rsi + 0x10]
4653c9: mov r8, rsp
4653cc: movabs rcx, 0xfffffffe7fffffff
4653d6: movdqu xmm2, xmmword ptr [rsi + 0x20]
4653db: movdqu xmm3, xmmword ptr [rsi + 0x30]
4653e0: and rax, rcx
4653e3: movdqu xmm4, xmmword ptr [rsi + 0x40]
4653e8: movdqu xmm5, xmmword ptr [rsi + 0x50]
4653ed: movaps xmmword ptr [rsp], xmm0
4653f1: movdqu xmm6, xmmword ptr [rsi + 0x60]
4653f6: movdqu xmm7, xmmword ptr [rsi + 0x70]
4653fb: mov qword ptr [rsp], rax
4653ff: movaps xmmword ptr [rsp + 0x10], xmm1
465404: movaps xmmword ptr [rsp + 0x20], xmm2
465409: movaps xmmword ptr [rsp + 0x30], xmm3
46540e: movaps xmmword ptr [rsp + 0x40], xmm4
465413: movaps xmmword ptr [rsp + 0x50], xmm5
465418: movaps xmmword ptr [rsp + 0x60], xmm6
46541d: movaps xmmword ptr [rsp + 0x70], xmm7
465422: jmp 0x46537b
465427: nop word ptr [rax + rax]
465430: mov rdx, 0xffffffffffffffc0
465437: neg eax
465439: mov dword ptr fs:[rdx], eax
46543c: mov eax, 0xffffffff
465441: jmp 0x465397
465446: call 0x4547a0
46544b: nop dword ptr [rax + rax]
465450: endbr64 
465454: push r15
465456: push r14
465458: push r13
46545a: push r12
46545c: push rbp
46545d: push rbx
46545e: sub rsp, 0x4e8
465465: mov qword ptr [rsp + 0xb8], rdi
46546d: mov qword ptr [rsp + 8], rdx
465472: mov rax, qword ptr fs:[0x28]
46547b: mov qword ptr [rsp + 0x4d8], rax
465483: xor eax, eax
465485: test rsi, rsi
465488: je 0x465a00
46548e: lea rax, [rdx*4]
465496: mov rbx, rcx
465499: mov rbp, r8
46549c: mov rcx, rdx
46549f: mov qword ptr [rsp + 0x60], rax
4654a4: lea rax, [rsi - 1]
4654a8: imul rax, rdx
4654ac: mov rdx, rdi
4654af: add rax, rdi
4654b2: mov qword ptr [rsp + 0x40], rax
4654b7: mov r10, rax
4654ba: cmp rsi, 4
4654be: jbe 0x4656b9
4654c4: mov rdi, rcx
4654c7: lea rax, [rcx - 0x10]
4654cb: mov qword ptr [rsp + 0x18], r10
4654d0: pxor xmm0, xmm0
4654d4: neg rdi
4654d7: shr rax, 4
4654db: mov qword ptr [rsp + 0x10], rdx
4654e0: mov r14, rdi
4654e3: mov rdi, rcx
4654e6: lea rcx, [rax + 1]
4654ea: movaps xmmword ptr [rsp + 0xd0], xmm0
4654f2: lea rax, [rdi - 1]
4654f6: mov qword ptr [rsp + 0x28], rcx
4654fb: shl rcx, 4
4654ff: mov qword ptr [rsp + 0x20], rax
465504: sub rax, rcx
465507: mov qword ptr [rsp + 0x30], rcx
46550c: lea rcx, [rax - 1]
465510: lea rdi, [rax - 3]
465514: mov qword ptr [rsp + 0x48], rcx
465519: lea rcx, [rax - 2]
46551d: mov qword ptr [rsp + 0x50], rcx
465522: lea rcx, [rax - 4]
465526: mov qword ptr [rsp + 0x68], rdi
46552b: lea rdi, [rax - 5]
46552f: mov qword ptr [rsp + 0x70], rcx
465534: lea rcx, [rax - 6]
465538: mov qword ptr [rsp + 0x78], rdi
46553d: lea rdi, [rax - 7]
465541: mov qword ptr [rsp + 0x80], rcx
465549: lea rcx, [rax - 8]
46554d: mov qword ptr [rsp + 0x88], rdi
465555: lea rdi, [rax - 9]
465559: mov qword ptr [rsp + 0x90], rcx
465561: lea rcx, [rax - 0xa]
465565: mov qword ptr [rsp + 0x38], rax
46556a: mov qword ptr [rsp + 0x98], rdi
465572: lea rdi, [rax - 0xb]
465576: mov qword ptr [rsp + 0xa8], rcx
46557e: lea rcx, [rax - 0xc]
465582: sub rax, 0xd
465586: mov qword ptr [rsp + 0xc8], rax
46558e: lea rax, [rsp + 0xe0]
465596: mov qword ptr [rsp + 0x58], rax
46559b: lea rax, [rsp + 0xd0]
4655a3: mov qword ptr [rsp + 0xb0], rdi
4655ab: mov qword ptr [rsp + 0xc0], rcx
4655b3: mov qword ptr [rsp + 0xa0], rax
4655bb: nop dword ptr [rax + rax]
4655c0: mov rcx, qword ptr [rsp + 0x10]
4655c5: mov rax, qword ptr [rsp + 0x18]
4655ca: xor edx, edx
4655cc: mov rdi, qword ptr [rsp + 8]
4655d1: sub rax, rcx
4655d4: mov rsi, rcx
4655d7: div rdi
4655da: mov rdx, rbp
4655dd: shr rax, 1
4655e0: imul rax, rdi
4655e4: lea r12, [rcx + rax]
4655e8: mov r13, rax
4655eb: mov rdi, r12
4655ee: call rbx
4655f0: test eax, eax
4655f2: js 0x46612a
4655f8: mov rdi, qword ptr [rsp + 0x18]
4655fd: mov rdx, rbp
465600: mov rsi, r12
465603: call rbx
465605: test eax, eax
465607: js 0x465ce0
46560d: mov rax, qword ptr [rsp + 0x18]
465612: mov r13, qword ptr [rsp + 0x10]
465617: add r13, qword ptr [rsp + 8]
46561c: lea r15, [rax + r14]
465620: mov rdx, rbp
465623: mov rsi, r12
465626: mov rdi, r13
465629: call rbx
46562b: test eax, eax
46562d: jns 0x46563b
46562f: jmp 0x465a30
465634: nop dword ptr [rax]
465638: add r15, r14
46563b: mov rdx, rbp
46563e: mov rsi, r15
465641: mov rdi, r12
465644: call rbx
465646: test eax, eax
465648: js 0x465638
46564a: cmp r13, r15
46564d: jb 0x465a40
465653: je 0x465cd3
465659: cmp r13, r15
46565c: jbe 0x465620
46565e: mov rax, qword ptr [rsp + 0x18]
465663: mov rcx, qword ptr [rsp + 0x60]
465668: mov rdx, r15
46566b: sub rdx, qword ptr [rsp + 0x10]
465670: sub rax, r13
465673: cmp rdx, rcx
465676: ja 0x465c95
46567c: mov qword ptr [rsp + 0x10], r13
465681: cmp rcx, rax
465684: jb 0x4656a6
465686: mov rax, qword ptr [rsp + 0x58]
46568b: mov rdi, qword ptr [rax - 0x10]
46568f: mov rcx, qword ptr [rax - 8]
465693: sub rax, 0x10
465697: mov qword ptr [rsp + 0x58], rax
46569c: mov qword ptr [rsp + 0x10], rdi
4656a1: mov qword ptr [rsp + 0x18], rcx
4656a6: mov rcx, qword ptr [rsp + 0xa0]
4656ae: cmp qword ptr [rsp + 0x58], rcx
4656b3: ja 0x4655c0
4656b9: mov r13, qword ptr [rsp + 0xb8]
4656c1: mov r12, qword ptr [rsp + 0x60]
4656c6: mov rcx, qword ptr [rsp + 0x40]
4656cb: add r12, r13
4656ce: cmp rcx, r12
4656d1: mov r15, r12
4656d4: mov r12, qword ptr [rsp + 8]
4656d9: cmovb r15, rcx
4656dd: add r12, r13
4656e0: mov r14, r12
4656e3: cmp r15, r12
4656e6: jb 0x465926
4656ec: mov qword ptr [rsp + 0x10], r12
4656f1: mov r12, rbp
4656f4: mov rbp, rbx
4656f7: mov rbx, qword ptr [rsp + 8]
4656fc: nop dword ptr [rax]
465700: mov rsi, r13
465703: mov rdi, r14
465706: mov rdx, r12
465709: call rbp
46570b: test eax, eax
46570d: cmovs r13, r14
465711: add r14, rbx
465714: cmp r15, r14
465717: jae 0x465700
465719: mov rcx, qword ptr [rsp + 0xb8]
465721: mov rbx, rbp
465724: mov rbp, r12
465727: mov r12, qword ptr [rsp + 0x10]
46572c: cmp r13, rcx
46572f: je 0x465926
465735: lea rax, [rcx + 0xf]
465739: sub rax, r13
46573c: cmp rax, 0x1e
465740: jbe 0x4663bb
465746: mov rdi, qword ptr [rsp + 8]
46574b: lea rax, [rdi - 1]
46574f: cmp rax, 0xe
465753: jbe 0x4663bb
465759: lea rsi, [rdi - 0x10]
46575d: xor eax, eax
46575f: xor edx, edx
465761: shr rsi, 4
465765: add rsi, 1
465769: movdqu xmm0, xmmword ptr [r13 + rax]
465770: movdqu xmm4, xmmword ptr [rcx + rax]
465775: add rdx, 1
465779: movups xmmword ptr [r13 + rax], xmm4
46577f: movups xmmword ptr [rcx + rax], xmm0
465783: add rax, 0x10
465787: cmp rsi, rdx
46578a: ja 0x465769
46578c: mov rdi, qword ptr [rsp + 8]
465791: mov rax, qword ptr [rsp + 0xb8]
465799: shl rsi, 4
46579d: add r13, rsi
4657a0: mov rdx, rdi
4657a3: add rax, rsi
4657a6: sub rdx, rsi
4657a9: cmp rdi, rsi
4657ac: je 0x465926
4657b2: movzx esi, byte ptr [r13]
4657b7: movzx edi, byte ptr [rax]
4657ba: mov byte ptr [r13], dil
4657be: mov byte ptr [rax], sil
4657c1: cmp rdx, 1
4657c5: je 0x465926
4657cb: movzx esi, byte ptr [r13 + 1]
4657d0: movzx edi, byte ptr [rax + 1]
4657d4: mov byte ptr [r13 + 1], dil
4657d8: mov byte ptr [rax + 1], sil
4657dc: cmp rdx, 2
4657e0: je 0x465926
4657e6: movzx esi, byte ptr [r13 + 2]
4657eb: movzx edi, byte ptr [rax + 2]
4657ef: mov byte ptr [r13 + 2], dil
4657f3: mov byte ptr [rax + 2], sil
4657f7: cmp rdx, 3
4657fb: je 0x465926
465801: movzx esi, byte ptr [r13 + 3]
465806: movzx edi, byte ptr [rax + 3]
46580a: mov byte ptr [r13 + 3], dil
46580e: mov byte ptr [rax + 3], sil
465812: cmp rdx, 4
465816: je 0x465926
46581c: movzx esi, byte ptr [r13 + 4]
465821: movzx edi, byte ptr [rax + 4]
465825: mov byte ptr [r13 + 4], dil
465829: mov byte ptr [rax + 4], sil
46582d: cmp rdx, 5
465831: je 0x465926
465837: movzx esi, byte ptr [r13 + 5]
46583c: movzx edi, byte ptr [rax + 5]
465840: mov byte ptr [r13 + 5], dil
465844: mov byte ptr [rax + 5], sil
465848: cmp rdx, 6
46584c: je 0x465926
465852: movzx esi, byte ptr [r13 + 6]
465857: movzx edi, byte ptr [rax + 6]
46585b: mov byte ptr [r13 + 6], dil
46585f: mov byte ptr [rax + 6], sil
465863: cmp rdx, 7
465867: je 0x465926
46586d: movzx esi, byte ptr [r13 + 7]
465872: movzx edi, byte ptr [rax + 7]
465876: mov byte ptr [r13 + 7], dil
46587a: mov byte ptr [rax + 7], sil
46587e: cmp rdx, 8
465882: je 0x465926
465888: movzx esi, byte ptr [r13 + 8]
46588d: movzx edi, byte ptr [rax + 8]
465891: mov byte ptr [r13 + 8], dil
465895: mov byte ptr [rax + 8], sil
465899: cmp rdx, 9
46589d: je 0x465926
4658a3: movzx esi, byte ptr [r13 + 9]
4658a8: movzx edi, byte ptr [rax + 9]
4658ac: mov byte ptr [r13 + 9], dil
4658b0: mov byte ptr [rax + 9], sil
4658b4: cmp rdx, 0xa
4658b8: je 0x465926
4658ba: movzx esi, byte ptr [r13 + 0xa]
4658bf: movzx edi, byte ptr [rax + 0xa]
4658c3: mov byte ptr [r13 + 0xa], dil
4658c7: mov byte ptr [rax + 0xa], sil
4658cb: cmp rdx, 0xb
4658cf: je 0x465926
4658d1: movzx esi, byte ptr [r13 + 0xb]
4658d6: movzx edi, byte ptr [rax + 0xb]
4658da: mov byte ptr [r13 + 0xb], dil
4658de: mov byte ptr [rax + 0xb], sil
4658e2: cmp rdx, 0xc
4658e6: je 0x465926
4658e8: movzx esi, byte ptr [r13 + 0xc]
4658ed: movzx edi, byte ptr [rax + 0xc]
4658f1: mov byte ptr [r13 + 0xc], dil
4658f5: mov byte ptr [rax + 0xc], sil
4658f9: cmp rdx, 0xd
4658fd: je 0x465926
4658ff: movzx esi, byte ptr [r13 + 0xd]
465904: movzx edi, byte ptr [rax + 0xd]
465908: mov byte ptr [r13 + 0xd], dil
46590c: mov byte ptr [rax + 0xd], sil
465910: cmp rdx, 0xe
465914: je 0x465926
465916: movzx edx, byte ptr [r13 + 0xe]
46591b: movzx esi, byte ptr [rax + 0xe]
46591f: mov byte ptr [r13 + 0xe], sil
465923: mov byte ptr [rax + 0xe], dl
465926: mov rax, qword ptr [rsp + 8]
46592b: mov r13, rax
46592e: lea r14, [r12 + rax]
465932: lea r15, [rax - 1]
465936: neg r13
465939: cmp r14, qword ptr [rsp + 0x40]
46593e: ja 0x465a00
465944: mov qword ptr [rsp + 0x10], r15
465949: mov r15, rbp
46594c: mov rbp, rbx
46594f: jmp 0x46595b
465951: nop dword ptr [rax]
465958: add r12, r13
46595b: mov rdx, r15
46595e: mov rsi, r12
465961: mov rdi, r14
465964: call rbp
465966: test eax, eax
465968: js 0x465958
46596a: mov rbx, qword ptr [rsp + 8]
46596f: lea rcx, [r12 + rbx]
465973: lea r11, [r14 + rbx]
465977: cmp rcx, r14
46597a: jne 0x46598b
46597c: mov r12, r14
46597f: cmp qword ptr [rsp + 0x40], r11
465984: jb 0x465a00
465986: mov r14, r11
465989: jmp 0x46595b
46598b: mov rdi, qword ptr [rsp + 0x10]
465990: add rdi, r14
465993: jb 0x46597c
465995: lea r9, [r14 - 1]
465999: movzx r8d, byte ptr [rdi]
46599d: mov r12, r9
4659a0: mov rax, r9
4659a3: cmp r9, rcx
4659a6: jb 0x4659e8
4659a8: nop dword ptr [rax + rax]
4659b0: mov rdx, rdi
4659b3: nop dword ptr [rax + rax]
4659b8: movzx esi, byte ptr [rax]
4659bb: mov byte ptr [rdx], sil
4659be: mov rsi, rax
4659c1: add rax, r13
4659c4: sub rdx, rbx
4659c7: cmp rcx, rax
4659ca: jbe 0x4659b8
4659cc: sub rdi, 1
4659d0: mov byte ptr [rsi], r8b
4659d3: sub r9, 1
4659d7: cmp rdi, r12
4659da: je 0x46597c
4659dc: movzx r8d, byte ptr [rdi]
4659e0: mov rax, r9
4659e3: cmp r9, rcx
4659e6: jae 0x4659b0
4659e8: mov rsi, rdi
4659eb: sub rdi, 1
4659ef: sub r9, 1
4659f3: mov byte ptr [rsi], r8b
4659f6: cmp rdi, r12
4659f9: jne 0x4659dc
4659fb: jmp 0x46597c
465a00: mov rax, qword ptr [rsp + 0x4d8]
465a08: xor rax, qword ptr fs:[0x28]
465a11: jne 0x466410
465a17: add rsp, 0x4e8
465a1e: pop rbx
465a1f: pop rbp
465a20: pop r12
465a22: pop r13
465a24: pop r14
465a26: pop r15
465a28: ret 
465a29: nop dword ptr [rax]
465a30: add r13, qword ptr [rsp + 8]
465a35: jmp 0x465620
465a3a: nop word ptr [rax + rax]
465a40: lea rax, [r13 + 0xf]
465a44: sub rax, r15
465a47: cmp rax, 0x1e
465a4b: jbe 0x465c64
465a51: cmp qword ptr [rsp + 0x20], 0xe
465a57: jbe 0x465c64
465a5d: mov rcx, qword ptr [rsp + 0x28]
465a62: xor eax, eax
465a64: xor edx, edx
465a66: nop word ptr cs:[rax + rax]
465a70: movdqu xmm0, xmmword ptr [r13 + rax]
465a77: movdqu xmm1, xmmword ptr [r15 + rax]
465a7d: add rdx, 1
465a81: movups xmmword ptr [r13 + rax], xmm1
465a87: movups xmmword ptr [r15 + rax], xmm0
465a8c: add rax, 0x10
465a90: cmp rcx, rdx
465a93: ja 0x465a70
465a95: mov rcx, qword ptr [rsp + 0x30]
465a9a: lea rax, [r13 + rcx]
465a9f: lea rdx, [r15 + rcx]
465aa3: cmp qword ptr [rsp + 8], rcx
465aa8: je 0x465c48
465aae: movzx ecx, byte ptr [rax]
465ab1: movzx esi, byte ptr [rdx]
465ab4: cmp qword ptr [rsp + 0x38], 0
465aba: mov byte ptr [rax], sil
465abd: mov byte ptr [rdx], cl
465abf: je 0x465c40
465ac5: movzx ecx, byte ptr [rax + 1]
465ac9: movzx esi, byte ptr [rdx + 1]
465acd: cmp qword ptr [rsp + 0x48], 0
465ad3: mov byte ptr [rax + 1], sil
465ad7: mov byte ptr [rdx + 1], cl
465ada: je 0x465c40
465ae0: movzx ecx, byte ptr [rax + 2]
465ae4: movzx esi, byte ptr [rdx + 2]
465ae8: cmp qword ptr [rsp + 0x50], 0
465aee: mov byte ptr [rax + 2], sil
465af2: mov byte ptr [rdx + 2], cl
465af5: je 0x465c40
465afb: movzx ecx, byte ptr [rax + 3]
465aff: movzx esi, byte ptr [rdx + 3]
465b03: cmp qword ptr [rsp + 0x68], 0
465b09: mov byte ptr [rax + 3], sil
465b0d: mov byte ptr [rdx + 3], cl
465b10: je 0x465c40
465b16: movzx ecx, byte ptr [rax + 4]
465b1a: movzx esi, byte ptr [rdx + 4]
465b1e: cmp qword ptr [rsp + 0x70], 0
465b24: mov byte ptr [rax + 4], sil
465b28: mov byte ptr [rdx + 4], cl
465b2b: je 0x465c40
465b31: movzx ecx, byte ptr [rax + 5]
465b35: movzx esi, byte ptr [rdx + 5]
465b39: cmp qword ptr [rsp + 0x78], 0
465b3f: mov byte ptr [rax + 5], sil
465b43: mov byte ptr [rdx + 5], cl
465b46: je 0x465c40
465b4c: movzx ecx, byte ptr [rax + 6]
465b50: movzx esi, byte ptr [rdx + 6]
465b54: cmp qword ptr [rsp + 0x80], 0
465b5d: mov byte ptr [rax + 6], sil
465b61: mov byte ptr [rdx + 6], cl
465b64: je 0x465c40
465b6a: movzx ecx, byte ptr [rax + 7]
465b6e: movzx esi, byte ptr [rdx + 7]
465b72: cmp qword ptr [rsp + 0x88], 0
465b7b: mov byte ptr [rax + 7], sil
465b7f: mov byte ptr [rdx + 7], cl
465b82: je 0x465c40
465b88: movzx ecx, byte ptr [rax + 8]
465b8c: movzx esi, byte ptr [rdx + 8]
465b90: cmp qword ptr [rsp + 0x90], 0
465b99: mov byte ptr [rax + 8], sil
465b9d: mov byte ptr [rdx + 8], cl
465ba0: je 0x465c40
465ba6: movzx ecx, byte ptr [rax + 9]
465baa: movzx esi, byte ptr [rdx + 9]
465bae: cmp qword ptr [rsp + 0x98], 0
465bb7: mov byte ptr [rax + 9], sil
465bbb: mov byte ptr [rdx + 9], cl
465bbe: je 0x465c40
465bc4: movzx ecx, byte ptr [rax + 0xa]
465bc8: movzx esi, byte ptr [rdx + 0xa]
465bcc: cmp qword ptr [rsp + 0xa8], 0
465bd5: mov byte ptr [rax + 0xa], sil
465bd9: mov byte ptr [rdx + 0xa], cl
465bdc: je 0x465c40
465bde: movzx ecx, byte ptr [rax + 0xb]
465be2: movzx esi, byte ptr [rdx + 0xb]
465be6: cmp qword ptr [rsp + 0xb0], 0
465bef: mov byte ptr [rax + 0xb], sil
465bf3: mov byte ptr [rdx + 0xb], cl
465bf6: je 0x465c40
465bf8: movzx ecx, byte ptr [rax + 0xc]
465bfc: movzx esi, byte ptr [rdx + 0xc]
465c00: cmp qword ptr [rsp + 0xc0], 0
465c09: mov byte ptr [rax + 0xc], sil
465c0d: mov byte ptr [rdx + 0xc], cl
465c10: je 0x465c40
465c12: movzx ecx, byte ptr [rax + 0xd]
465c16: movzx esi, byte ptr [rdx + 0xd]
465c1a: cmp qword ptr [rsp + 0xc8], 0
465c23: mov byte ptr [rax + 0xd], sil
465c27: mov byte ptr [rdx + 0xd], cl
465c2a: je 0x465c40
465c2c: movzx ecx, byte ptr [rax + 0xe]
465c30: movzx esi, byte ptr [rdx + 0xe]
465c34: mov byte ptr [rax + 0xe], sil
465c38: mov byte ptr [rdx + 0xe], cl
465c3b: nop dword ptr [rax + rax]
465c40: mov rax, qword ptr [rsp + 8]
465c45: add rax, r13
465c48: cmp r13, r12
465c4b: je 0x465c5f
465c4d: cmp r15, r12
465c50: cmove r12, r13
465c54: mov r13, rax
465c57: add r15, r14
465c5a: jmp 0x465659
465c5f: mov r12, r15
465c62: jmp 0x465c54
465c64: mov rax, qword ptr [rsp + 8]
465c69: mov rcx, r15
465c6c: mov rdx, r13
465c6f: add rax, r13
465c72: nop word ptr [rax + rax]
465c78: movzx esi, byte ptr [rdx]
465c7b: movzx edi, byte ptr [rcx]
465c7e: add rdx, 1
465c82: add rcx, 1
465c86: mov byte ptr [rdx - 1], dil
465c8a: mov byte ptr [rcx - 1], sil
465c8e: cmp rdx, rax
465c91: jne 0x465c78
465c93: jmp 0x465c48
465c95: cmp qword ptr [rsp + 0x60], rax
465c9a: jae 0x466120
465ca0: mov rdi, qword ptr [rsp + 0x58]
465ca5: lea rsi, [rdi + 0x10]
465ca9: cmp rdx, rax
465cac: jle 0x46633f
465cb2: movq xmm0, qword ptr [rsp + 0x10]
465cb8: movq xmm6, r15
465cbd: mov qword ptr [rsp + 0x58], rsi
465cc2: mov qword ptr [rsp + 0x10], r13
465cc7: punpcklqdq xmm0, xmm6
465ccb: movaps xmmword ptr [rdi], xmm0
465cce: jmp 0x4656a6
465cd3: add r13, qword ptr [rsp + 8]
465cd8: add r15, r14
465cdb: jmp 0x46565e
465ce0: cmp qword ptr [rsp + 0x20], 0xe
465ce6: mov rax, qword ptr [rsp + 0x10]
465ceb: seta r15b
465cef: mov rcx, qword ptr [rsp + 0x18]
465cf4: add r13, 0x10
465cf8: add rax, r13
465cfb: cmp rcx, rax
465cfe: lea rax, [rcx + 0x10]
465d02: setae dl
465d05: cmp r12, rax
465d08: setae al
465d0b: or dl, al
465d0d: je 0x46635b
465d13: test r15b, r15b
465d16: je 0x46635b
465d1c: mov rsi, qword ptr [rsp + 0x28]
465d21: xor eax, eax
465d23: xor edx, edx
465d25: nop dword ptr [rax]
465d28: movdqu xmm0, xmmword ptr [r12 + rax]
465d2e: movdqu xmm2, xmmword ptr [rcx + rax]
465d33: add rdx, 1
465d37: movups xmmword ptr [r12 + rax], xmm2
465d3c: movups xmmword ptr [rcx + rax], xmm0
465d40: add rax, 0x10
465d44: cmp rsi, rdx
465d47: ja 0x465d28
465d49: mov rdi, qword ptr [rsp + 0x30]
465d4e: mov rax, qword ptr [rsp + 0x18]
465d53: lea rdx, [r12 + rdi]
465d57: add rax, rdi
465d5a: cmp qword ptr [rsp + 8], rdi
465d5f: je 0x465efd
465d65: movzx esi, byte ptr [rdx]
465d68: movzx edi, byte ptr [rax]
465d6b: cmp qword ptr [rsp + 0x38], 0
465d71: mov byte ptr [rdx], dil
465d74: mov byte ptr [rax], sil
465d77: je 0x465efd
465d7d: movzx esi, byte ptr [rdx + 1]
465d81: movzx edi, byte ptr [rax + 1]
465d85: cmp qword ptr [rsp + 0x48], 0
465d8b: mov byte ptr [rdx + 1], dil
465d8f: mov byte ptr [rax + 1], sil
465d93: je 0x465efd
465d99: movzx esi, byte ptr [rdx + 2]
465d9d: movzx edi, byte ptr [rax + 2]
465da1: cmp qword ptr [rsp + 0x50], 0
465da7: mov byte ptr [rdx + 2], dil
465dab: mov byte ptr [rax + 2], sil
465daf: je 0x465efd
465db5: movzx esi, byte ptr [rdx + 3]
465db9: movzx edi, byte ptr [rax + 3]
465dbd: cmp qword ptr [rsp + 0x68], 0
465dc3: mov byte ptr [rdx + 3], dil
465dc7: mov byte ptr [rax + 3], sil
465dcb: je 0x465efd
465dd1: movzx esi, byte ptr [rdx + 4]
465dd5: movzx edi, byte ptr [rax + 4]
465dd9: cmp qword ptr [rsp + 0x70], 0
465ddf: mov byte ptr [rdx + 4], dil
465de3: mov byte ptr [rax + 4], sil
465de7: je 0x465efd
465ded: movzx esi, byte ptr [rdx + 5]
465df1: movzx edi, byte ptr [rax + 5]
465df5: cmp qword ptr [rsp + 0x78], 0
465dfb: mov byte ptr [rdx + 5], dil
465dff: mov byte ptr [rax + 5], sil
465e03: je 0x465efd
465e09: movzx esi, byte ptr [rdx + 6]
465e0d: movzx edi, byte ptr [rax + 6]
465e11: cmp qword ptr [rsp + 0x80], 0
465e1a: mov byte ptr [rdx + 6], dil
465e1e: mov byte ptr [rax + 6], sil
465e22: je 0x465efd
465e28: movzx esi, byte ptr [rdx + 7]
465e2c: movzx edi, byte ptr [rax + 7]
465e30: cmp qword ptr [rsp + 0x88], 0
465e39: mov byte ptr [rdx + 7], dil
465e3d: mov byte ptr [rax + 7], sil
465e41: je 0x465efd
465e47: movzx esi, byte ptr [rdx + 8]
465e4b: movzx edi, byte ptr [rax + 8]
465e4f: cmp qword ptr [rsp + 0x90], 0
465e58: mov byte ptr [rdx + 8], dil
465e5c: mov byte ptr [rax + 8], sil
465e60: je 0x465efd
465e66: movzx esi, byte ptr [rdx + 9]
465e6a: movzx edi, byte ptr [rax + 9]
465e6e: cmp qword ptr [rsp + 0x98], 0
465e77: mov byte ptr [rdx + 9], dil
465e7b: mov byte ptr [rax + 9], sil
465e7f: je 0x465efd
465e81: movzx esi, byte ptr [rdx + 0xa]
465e85: movzx edi, byte ptr [rax + 0xa]
465e89: cmp qword ptr [rsp + 0xa8], 0
465e92: mov byte ptr [rdx + 0xa], dil
465e96: mov byte ptr [rax + 0xa], sil
465e9a: je 0x465efd
465e9c: movzx esi, byte ptr [rdx + 0xb]
465ea0: movzx edi, byte ptr [rax + 0xb]
465ea4: cmp qword ptr [rsp + 0xb0], 0
465ead: mov byte ptr [rdx + 0xb], dil
465eb1: mov byte ptr [rax + 0xb], sil
465eb5: je 0x465efd
465eb7: movzx esi, byte ptr [rdx + 0xc]
465ebb: movzx edi, byte ptr [rax + 0xc]
465ebf: cmp qword ptr [rsp + 0xc0], 0
465ec8: mov byte ptr [rdx + 0xc], dil
465ecc: mov byte ptr [rax + 0xc], sil
465ed0: je 0x465efd
465ed2: movzx esi, byte ptr [rdx + 0xd]
465ed6: movzx edi, byte ptr [rax + 0xd]
465eda: cmp qword ptr [rsp + 0xc8], 0
465ee3: mov byte ptr [rdx + 0xd], dil
465ee7: mov byte ptr [rax + 0xd], sil
465eeb: je 0x465efd
465eed: movzx esi, byte ptr [rdx + 0xe]
465ef1: movzx edi, byte ptr [rax + 0xe]
465ef5: mov byte ptr [rdx + 0xe], dil
465ef9: mov byte ptr [rax + 0xe], sil
465efd: mov rsi, qword ptr [rsp + 0x10]
465f02: mov rdx, rbp
465f05: mov rdi, r12
465f08: call rbx
465f0a: test eax, eax
465f0c: jns 0x46560d
465f12: mov rcx, qword ptr [rsp + 0x10]
465f17: lea rax, [rcx + 0x10]
465f1b: cmp r12, rax
465f1e: setae dl
465f21: test r13, r13
465f24: setle al
465f27: or dl, al
465f29: je 0x4663df
465f2f: test r15b, r15b
465f32: je 0x4663df
465f38: mov rsi, qword ptr [rsp + 0x28]
465f3d: xor eax, eax
465f3f: xor edx, edx
465f41: movdqu xmm0, xmmword ptr [r12 + rax]
465f47: movdqu xmm5, xmmword ptr [rcx + rax]
465f4c: add rdx, 1
465f50: movups xmmword ptr [r12 + rax], xmm5
465f55: movups xmmword ptr [rcx + rax], xmm0
465f59: add rax, 0x10
465f5d: cmp rsi, rdx
465f60: ja 0x465f41
465f62: mov rdi, qword ptr [rsp + 0x30]
465f67: mov rax, qword ptr [rsp + 0x10]
465f6c: lea rdx, [r12 + rdi]
465f70: add rax, rdi
465f73: cmp qword ptr [rsp + 8], rdi
465f78: je 0x46560d
465f7e: movzx ecx, byte ptr [rdx]
465f81: movzx esi, byte ptr [rax]
465f84: cmp qword ptr [rsp + 0x38], 0
465f8a: mov byte ptr [rdx], sil
465f8d: mov byte ptr [rax], cl
465f8f: je 0x46560d
465f95: movzx ecx, byte ptr [rdx + 1]
465f99: movzx esi, byte ptr [rax + 1]
465f9d: cmp qword ptr [rsp + 0x48], 0
465fa3: mov byte ptr [rdx + 1], sil
465fa7: mov byte ptr [rax + 1], cl
465faa: je 0x46560d
465fb0: movzx ecx, byte ptr [rdx + 2]
465fb4: movzx esi, byte ptr [rax + 2]
465fb8: cmp qword ptr [rsp + 0x50], 0
465fbe: mov byte ptr [rdx + 2], sil
465fc2: mov byte ptr [rax + 2], cl
465fc5: je 0x46560d
465fcb: movzx ecx, byte ptr [rdx + 3]
465fcf: movzx esi, byte ptr [rax + 3]
465fd3: cmp qword ptr [rsp + 0x68], 0
465fd9: mov byte ptr [rdx + 3], sil
465fdd: mov byte ptr [rax + 3], cl
465fe0: je 0x46560d
465fe6: movzx ecx, byte ptr [rdx + 4]
465fea: movzx esi, byte ptr [rax + 4]
465fee: cmp qword ptr [rsp + 0x70], 0
465ff4: mov byte ptr [rdx + 4], sil
465ff8: mov byte ptr [rax + 4], cl
465ffb: je 0x46560d
466001: movzx ecx, byte ptr [rdx + 5]
466005: movzx esi, byte ptr [rax + 5]
466009: cmp qword ptr [rsp + 0x78], 0
46600f: mov byte ptr [rdx + 5], sil
466013: mov byte ptr [rax + 5], cl
466016: je 0x46560d
46601c: movzx ecx, byte ptr [rdx + 6]
466020: movzx esi, byte ptr [rax + 6]
466024: cmp qword ptr [rsp + 0x80], 0
46602d: mov byte ptr [rdx + 6], sil
466031: mov byte ptr [rax + 6], cl
466034: je 0x46560d
46603a: movzx ecx, byte ptr [rdx + 7]
46603e: movzx esi, byte ptr [rax + 7]
466042: cmp qword ptr [rsp + 0x88], 0
46604b: mov byte ptr [rdx + 7], sil
46604f: mov byte ptr [rax + 7], cl
466052: je 0x46560d
466058: movzx ecx, byte ptr [rdx + 8]
46605c: movzx esi, byte ptr [rax + 8]
466060: cmp qword ptr [rsp + 0x90], 0
466069: mov byte ptr [rdx + 8], sil
46606d: mov byte ptr [rax + 8], cl
466070: je 0x46560d
466076: movzx ecx, byte ptr [rdx + 9]
46607a: movzx esi, byte ptr [rax + 9]
46607e: cmp qword ptr [rsp + 0x98], 0
466087: mov byte ptr [rdx + 9], sil
46608b: mov byte ptr [rax + 9], cl
46608e: je 0x46560d
466094: movzx ecx, byte ptr [rdx + 0xa]
466098: movzx esi, byte ptr [rax + 0xa]
46609c: cmp qword ptr [rsp + 0xa8], 0
4660a5: mov byte ptr [rdx + 0xa], sil
4660a9: mov byte ptr [rax + 0xa], cl
4660ac: je 0x46560d
4660b2: movzx ecx, byte ptr [rdx + 0xb]
4660b6: movzx esi, byte ptr [rax + 0xb]
4660ba: cmp qword ptr [rsp + 0xb0], 0
4660c3: mov byte ptr [rdx + 0xb], sil
4660c7: mov byte ptr [rax + 0xb], cl
4660ca: je 0x46560d
4660d0: movzx ecx, byte ptr [rdx + 0xc]
4660d4: movzx esi, byte ptr [rax + 0xc]
4660d8: cmp qword ptr [rsp + 0xc0], 0
4660e1: mov byte ptr [rdx + 0xc], sil
4660e5: mov byte ptr [rax + 0xc], cl
4660e8: je 0x46560d
4660ee: movzx ecx, byte ptr [rdx + 0xd]
4660f2: movzx esi, byte ptr [rax + 0xd]
4660f6: cmp qword ptr [rsp + 0xc8], 0
4660ff: mov byte ptr [rdx + 0xd], sil
466103: mov byte ptr [rax + 0xd], cl
466106: je 0x46560d
46610c: movzx ecx, byte ptr [rdx + 0xe]
466110: movzx esi, byte ptr [rax + 0xe]
466114: mov byte ptr [rdx + 0xe], sil
466118: mov byte ptr [rax + 0xe], cl
46611b: jmp 0x46560d
466120: mov qword ptr [rsp + 0x18], r15
466125: jmp 0x4656a6
46612a: mov rcx, qword ptr [rsp + 0x10]
46612f: lea rax, [r13 + 0x10]
466133: test rax, rax
466136: lea rax, [rcx + 0x10]
46613a: setle dl
46613d: cmp r12, rax
466140: setae al
466143: or dl, al
466145: je 0x46638b
46614b: cmp qword ptr [rsp + 0x20], 0xe
466151: jbe 0x46638b
466157: mov rsi, qword ptr [rsp + 0x28]
46615c: xor eax, eax
46615e: xor edx, edx
466160: movdqu xmm0, xmmword ptr [r12 + rax]
466166: movdqu xmm3, xmmword ptr [rcx + rax]
46616b: add rdx, 1
46616f: movups xmmword ptr [r12 + rax], xmm3
466174: movups xmmword ptr [rcx + rax], xmm0
466178: add rax, 0x10
46617c: cmp rsi, rdx
46617f: ja 0x466160
466181: mov rdi, qword ptr [rsp + 0x30]
466186: mov rax, qword ptr [rsp + 0x10]
46618b: lea rdx, [r12 + rdi]
46618f: add rax, rdi
466192: cmp qword ptr [rsp + 8], rdi
466197: je 0x4655f8
46619d: movzx ecx, byte ptr [rdx]
4661a0: movzx esi, byte ptr [rax]
4661a3: cmp qword ptr [rsp + 0x38], 0
4661a9: mov byte ptr [rdx], sil
4661ac: mov byte ptr [rax], cl
4661ae: je 0x4655f8
4661b4: movzx ecx, byte ptr [rdx + 1]
4661b8: movzx esi, byte ptr [rax + 1]
4661bc: cmp qword ptr [rsp + 0x48], 0
4661c2: mov byte ptr [rdx + 1], sil
4661c6: mov byte ptr [rax + 1], cl
4661c9: je 0x4655f8
4661cf: movzx ecx, byte ptr [rdx + 2]
4661d3: movzx esi, byte ptr [rax + 2]
4661d7: cmp qword ptr [rsp + 0x50], 0
4661dd: mov byte ptr [rdx + 2], sil
4661e1: mov byte ptr [rax + 2], cl
4661e4: je 0x4655f8
4661ea: movzx ecx, byte ptr [rdx + 3]
4661ee: movzx esi, byte ptr [rax + 3]
4661f2: cmp qword ptr [rsp + 0x68], 0
4661f8: mov byte ptr [rdx + 3], sil
4661fc: mov byte ptr [rax + 3], cl
4661ff: je 0x4655f8
466205: movzx ecx, byte ptr [rdx + 4]
466209: movzx esi, byte ptr [rax + 4]
46620d: cmp qword ptr [rsp + 0x70], 0
466213: mov byte ptr [rdx + 4], sil
466217: mov byte ptr [rax + 4], cl
46621a: je 0x4655f8
466220: movzx ecx, byte ptr [rdx + 5]
466224: movzx esi, byte ptr [rax + 5]
466228: cmp qword ptr [rsp + 0x78], 0
46622e: mov byte ptr [rdx + 5], sil
466232: mov byte ptr [rax + 5], cl
466235: je 0x4655f8
46623b: movzx ecx, byte ptr [rdx + 6]
46623f: movzx esi, byte ptr [rax + 6]
466243: cmp qword ptr [rsp + 0x80], 0
46624c: mov byte ptr [rdx + 6], sil
466250: mov byte ptr [rax + 6], cl
466253: je 0x4655f8
466259: movzx ecx, byte ptr [rdx + 7]
46625d: movzx esi, byte ptr [rax + 7]
466261: cmp qword ptr [rsp + 0x88], 0
46626a: mov byte ptr [rdx + 7], sil
46626e: mov byte ptr [rax + 7], cl
466271: je 0x4655f8
466277: movzx ecx, byte ptr [rdx + 8]
46627b: movzx esi, byte ptr [rax + 8]
46627f: cmp qword ptr [rsp + 0x90], 0
466288: mov byte ptr [rdx + 8], sil
46628c: mov byte ptr [rax + 8], cl
46628f: je 0x4655f8
466295: movzx ecx, byte ptr [rdx + 9]
466299: movzx esi, byte ptr [rax + 9]
46629d: cmp qword ptr [rsp + 0x98], 0
4662a6: mov byte ptr [rdx + 9], sil
4662aa: mov byte ptr [rax + 9], cl
4662ad: je 0x4655f8
4662b3: movzx ecx, byte ptr [rdx + 0xa]
4662b7: movzx esi, byte ptr [rax + 0xa]
4662bb: cmp qword ptr [rsp + 0xa8], 0
4662c4: mov byte ptr [rdx + 0xa], sil
4662c8: mov byte ptr [rax + 0xa], cl
4662cb: je 0x4655f8
4662d1: movzx ecx, byte ptr [rdx + 0xb]
4662d5: movzx esi, byte ptr [rax + 0xb]
4662d9: cmp qword ptr [rsp + 0xb0], 0
4662e2: mov byte ptr [rdx + 0xb], sil
4662e6: mov byte ptr [rax + 0xb], cl
4662e9: je 0x4655f8
4662ef: movzx ecx, byte ptr [rdx + 0xc]
4662f3: movzx esi, byte ptr [rax + 0xc]
4662f7: cmp qword ptr [rsp + 0xc0], 0
466300: mov byte ptr [rdx + 0xc], sil
466304: mov byte ptr [rax + 0xc], cl
466307: je 0x4655f8
46630d: movzx ecx, byte ptr [rdx + 0xd]
466311: movzx esi, byte ptr [rax + 0xd]
466315: cmp qword ptr [rsp + 0xc8], 0
46631e: mov byte ptr [rdx + 0xd], sil
466322: mov byte ptr [rax + 0xd], cl
466325: je 0x4655f8
46632b: movzx ecx, byte ptr [rdx + 0xe]
46632f: movzx esi, byte ptr [rax + 0xe]
466333: mov byte ptr [rdx + 0xe], sil
466337: mov byte ptr [rax + 0xe], cl
46633a: jmp 0x4655f8
46633f: movq xmm0, r13
466344: mov qword ptr [rsp + 0x58], rsi
466349: movhps xmm0, qword ptr [rsp + 0x18]
46634e: mov qword ptr [rsp + 0x18], r15
466353: movaps xmmword ptr [rdi], xmm0
466356: jmp 0x4656a6
46635b: mov rax, qword ptr [rsp + 8]
466360: mov rdx, qword ptr [rsp + 0x18]
466365: lea r8, [r12 + rax]
466369: mov rax, r12
46636c: movzx ecx, byte ptr [rax]
46636f: movzx esi, byte ptr [rdx]
466372: add rax, 1
466376: add rdx, 1
46637a: mov byte ptr [rax - 1], sil
46637e: mov byte ptr [rdx - 1], cl
466381: cmp rax, r8
466384: jne 0x46636c
466386: jmp 0x465efd
46638b: mov rax, qword ptr [rsp + 8]
466390: mov rdx, qword ptr [rsp + 0x10]
466395: lea rdi, [r12 + rax]
466399: mov rax, r12
46639c: movzx ecx, byte ptr [rax]
46639f: movzx esi, byte ptr [rdx]
4663a2: add rax, 1
4663a6: add rdx, 1
4663aa: mov byte ptr [rax - 1], sil
4663ae: mov byte ptr [rdx - 1], cl
4663b1: cmp rax, rdi
4663b4: jne 0x46639c
4663b6: jmp 0x4655f8
4663bb: mov rax, rcx
4663be: movzx edx, byte ptr [r13]
4663c3: movzx ecx, byte ptr [rax]
4663c6: add rax, 1
4663ca: add r13, 1
4663ce: mov byte ptr [r13 - 1], cl
4663d2: mov byte ptr [rax - 1], dl
4663d5: cmp r12, rax
4663d8: jne 0x4663be
4663da: jmp 0x465926
4663df: mov rax, qword ptr [rsp + 8]
4663e4: mov rdx, qword ptr [rsp + 0x10]
4663e9: lea rcx, [r12 + rax]
4663ed: mov rax, r12
4663f0: movzx esi, byte ptr [rax]
4663f3: movzx edi, byte ptr [rdx]
4663f6: add rax, 1
4663fa: add rdx, 1
4663fe: mov byte ptr [rax - 1], dil
466402: mov byte ptr [rdx - 1], sil
466406: cmp rax, rcx
466409: jne 0x4663f0
46640b: jmp 0x46560d
466410: call 0x4547a0
466415: nop word ptr cs:[rax + rax]
46641f: nop 
466420: endbr64 
466424: push rbp
466425: mov rbp, rsp
466428: push r15
46642a: push r14
46642c: push r13
46642e: push r12
466430: mov r12, rdi
466433: push rbx
466434: mov rbx, rdx
466437: sub rsp, 0x48
46643b: mov qword ptr [rbp - 0x60], rsi
46643f: mov qword ptr [rbp - 0x48], rdx
466443: mov dword ptr [rbp - 0x54], ecx
466446: mov rax, qword ptr fs:[0x28]
46644f: mov qword ptr [rbp - 0x38], rax
466453: xor eax, eax
466455: call 0x401180
46645a: mov r14, rax
46645d: test rbx, rbx
466460: je 0x4665b0
466466: mov eax, dword ptr fs:[0x18]
46646e: test eax, eax
466470: jne 0x4666e0
466476: mov edx, 1
46647b: cmpxchg dword ptr [rip + 0x5ca9e], edx
466482: mov rbx, qword ptr [rip + 0x5c84f]
466489: test rbx, rbx
46648c: je 0x4665a0
466492: mov r13, qword ptr [rbx]
466495: test r13, r13
466498: je 0x4665a0
46649e: xor r15d, r15d
4664a1: jmp 0x4664ab
4664a3: nop dword ptr [rax + rax]
4664a8: mov r15, rdx
4664ab: mov rdx, r14
4664ae: mov rsi, r12
4664b1: mov rdi, r13
4664b4: call 0x4010d0
4664b9: test eax, eax
4664bb: jne 0x4664c5
4664bd: cmp byte ptr [r13 + r14], 0x3d
4664c3: je 0x46653e
4664c5: mov r13, qword ptr [rbx + 8]
4664c9: add rbx, 8
4664cd: lea rdx, [r15 + 1]
4664d1: test r13, r13
4664d4: jne 0x4664a8
4664d6: lea rsi, [r15*8 + 0x18]
4664de: mov r13, qword ptr [rip + 0x5ca2b]
4664e5: mov qword ptr [rbp - 0x50], rdx
4664e9: mov rdi, r13
4664ec: call 0x427100
4664f1: mov rdx, qword ptr [rbp - 0x50]
4664f5: test rax, rax
4664f8: mov rcx, rax
4664fb: je 0x4667c3
466501: mov rsi, qword ptr [rip + 0x5c7d0]
466508: lea rbx, [rdx*8]
466510: cmp r13, rsi
466513: je 0x466523
466515: mov rdx, rbx
466518: mov rdi, rax
46651b: call 0x401060
466520: mov rcx, rax
466523: add rbx, rcx
466526: pxor xmm0, xmm0
46652a: mov qword ptr [rip + 0x5c9df], rcx
466531: movups xmmword ptr [rbx], xmm0
466534: mov r13, qword ptr [rbx]
466537: mov qword ptr [rip + 0x5c79a], rcx
46653e: test r13, r13
466541: je 0x466590
466543: mov eax, dword ptr [rbp - 0x54]
466546: test eax, eax
466548: jne 0x466590
46654a: mov r8d, dword ptr fs:[0x18]
466553: test r8d, r8d
466556: jne 0x466710
46655c: sub dword ptr [rip + 0x5c9bd], 1
466563: mov rax, qword ptr [rbp - 0x38]
466567: xor rax, qword ptr fs:[0x28]
466570: jne 0x4667f9
466576: lea rsp, [rbp - 0x28]
46657a: mov eax, r8d
46657d: pop rbx
46657e: pop r12
466580: pop r13
466582: pop r14
466584: pop r15
466586: pop rbp
466587: ret 
466588: nop dword ptr [rax + rax]
466590: cmp qword ptr [rbp - 0x48], 0
466595: je 0x4665d0
466597: mov rax, qword ptr [rbp - 0x48]
46659b: mov qword ptr [rbx], rax
46659e: jmp 0x46654a
4665a0: mov esi, 0x10
4665a5: xor edx, edx
4665a7: jmp 0x4664de
4665ac: nop dword ptr [rax]
4665b0: mov rdi, qword ptr [rbp - 0x60]
4665b4: call 0x401180
4665b9: add rax, 1
4665bd: mov qword ptr [rbp - 0x68], rax
4665c1: jmp 0x466466
4665c6: nop word ptr cs:[rax + rax]
4665d0: mov rax, qword ptr [rbp - 0x68]
4665d4: lea r15, [rax + r14 + 1]
4665d9: mov rdi, r15
4665dc: call 0x421200
4665e1: cmp r15, 0x1000
4665e8: jbe 0x4665f2
4665ea: test eax, eax
4665ec: je 0x46674f
4665f2: lea rax, [r15 + 0x17]
4665f6: mov rcx, rsp
4665f9: mov rdx, rax
4665fc: and rax, 0xfffffffffffff000
466602: sub rcx, rax
466605: and rdx, 0xfffffffffffffff0
466609: mov rax, rcx
46660c: cmp rsp, rax
46660f: je 0x466626
466611: sub rsp, 0x1000
466618: or qword ptr [rsp + 0xff8], 0
466621: cmp rsp, rax
466624: jne 0x466611
466626: and edx, 0xfff
46662c: sub rsp, rdx
46662f: test rdx, rdx
466632: jne 0x466744
466638: lea rax, [rsp + 0xf]
46663d: mov rdx, r14
466640: mov rsi, r12
466643: and rax, 0xfffffffffffffff0
466647: mov rdi, rax
46664a: mov r13, rax
46664d: call 0x401150
466652: mov rdx, qword ptr [rbp - 0x68]
466656: mov rsi, qword ptr [rbp - 0x60]
46665a: mov byte ptr [rax], 0x3d
46665d: lea rdi, [rax + 1]
466661: call 0x401060
466666: lea rdx, [rip - 0x6553d]
46666d: lea rsi, [rip + 0x5c8a4]
466674: mov rdi, r13
466677: call 0x452270
46667c: test rax, rax
46667f: je 0x466691
466681: mov rax, qword ptr [rax]
466684: mov qword ptr [rbp - 0x48], rax
466688: test rax, rax
46668b: jne 0x466597
466691: mov rdi, r15
466694: call 0x426410
466699: mov qword ptr [rbp - 0x48], rax
46669d: test rax, rax
4666a0: je 0x4667c3
4666a6: mov rdi, rax
4666a9: mov rdx, r15
4666ac: mov rsi, r13
4666af: call 0x401060
4666b4: mov rdi, qword ptr [rbp - 0x48]
4666b8: lea rdx, [rip - 0x6558f]
4666bf: lea rsi, [rip + 0x5c852]
4666c6: call 0x451e70
4666cb: mov rax, qword ptr [rbp - 0x48]
4666cf: mov qword ptr [rbx], rax
4666d2: jmp 0x46654a
4666d7: nop word ptr [rax + rax]
4666e0: xor eax, eax
4666e2: mov edx, 1
4666e7: lock cmpxchg dword ptr [rip + 0x5c831], edx
4666ef: je 0x466482
4666f5: lea rdi, [rip + 0x5c824]
4666fc: call 0x421250
466701: jmp 0x466482
466706: nop word ptr cs:[rax + rax]
466710: xor eax, eax
466712: xchg dword ptr [rip + 0x5c808], eax
466718: xor r8d, r8d
46671b: cmp eax, 1
46671e: jle 0x466563
466724: xor r10d, r10d
466727: mov edx, 1
46672c: mov esi, 0x81
466731: mov eax, 0xca
466736: lea rdi, [rip + 0x5c7e3]
46673d: syscall 
46673f: jmp 0x466563
466744: or qword ptr [rsp + rdx - 8], 0
46674a: jmp 0x466638
46674f: mov rdi, r15
466752: call 0x426410
466757: mov qword ptr [rbp - 0x48], rax
46675b: test rax, rax
46675e: je 0x4667c3
466760: mov rdx, r14
466763: mov r14, qword ptr [rbp - 0x48]
466767: mov rsi, r12
46676a: mov rdi, r14
46676d: call 0x401150
466772: mov rdx, qword ptr [rbp - 0x68]
466776: mov rsi, qword ptr [rbp - 0x60]
46677a: mov byte ptr [rax], 0x3d
46677d: lea rdi, [rax + 1]
466781: call 0x401060
466786: lea rdx, [rip - 0x6565d]
46678d: lea rsi, [rip + 0x5c784]
466794: mov rdi, r14
466797: call 0x452270
46679c: test rax, rax
46679f: je 0x4666b4
4667a5: mov r12, qword ptr [rax]
4667a8: test r12, r12
4667ab: je 0x4666b4
4667b1: mov rdi, qword ptr [rbp - 0x48]
4667b5: call 0x426a00
4667ba: mov qword ptr [rbp - 0x48], r12
4667be: jmp 0x466597
4667c3: mov eax, dword ptr fs:[0x18]
4667cb: test eax, eax
4667cd: jne 0x4667e1
4667cf: sub dword ptr [rip + 0x5c74a], 1
4667d6: mov r8d, 0xffffffff
4667dc: jmp 0x466563
4667e1: xor eax, eax
4667e3: xchg dword ptr [rip + 0x5c737], eax
4667e9: cmp eax, 1
4667ec: jg 0x4667fe
4667ee: mov r8d, 0xffffffff
4667f4: jmp 0x466563
4667f9: call 0x4547a0
4667fe: xor r10d, r10d
466801: mov edx, 1
466806: mov esi, 0x81
46680b: mov eax, 0xca
466810: lea rdi, [rip + 0x5c709]
466817: syscall 
466819: jmp 0x4667ee
46681b: nop dword ptr [rax + rax]
466820: endbr64 
466824: push r13
466826: push r12
466828: push rbp
466829: test rdi, rdi
46682c: je 0x466860
46682e: cmp byte ptr [rdi], 0
466831: mov rbp, rdi
466834: je 0x466860
466836: mov r12, rsi
466839: mov esi, 0x3d
46683e: mov r13d, edx
466841: call 0x401190
466846: test rax, rax
466849: jne 0x466860
46684b: mov ecx, r13d
46684e: mov rsi, r12
466851: mov rdi, rbp
466854: xor edx, edx
466856: pop rbp
466857: pop r12
466859: pop r13
46685b: jmp 0x466420
466860: mov rax, 0xffffffffffffffc0
466867: mov dword ptr fs:[rax], 0x16
46686e: mov eax, 0xffffffff
466873: pop rbp
466874: pop r12
466876: pop r13
466878: ret 
466879: nop dword ptr [rax]
466880: endbr64 
466884: push r13
466886: push r12
466888: push rbp
466889: push rbx
46688a: sub rsp, 8
46688e: test rdi, rdi
466891: je 0x4669c0
466897: cmp byte ptr [rdi], 0
46689a: mov r12, rdi
46689d: je 0x4669c0
4668a3: mov esi, 0x3d
4668a8: call 0x401190
4668ad: test rax, rax
4668b0: jne 0x4669c0
4668b6: mov rdi, r12
4668b9: call 0x401180
4668be: mov r13, rax
4668c1: mov eax, dword ptr fs:[0x18]
4668c9: test eax, eax
4668cb: jne 0x466960
4668d1: mov edx, 1
4668d6: cmpxchg dword ptr [rip + 0x5c643], edx
4668dd: mov rbp, qword ptr [rip + 0x5c3f4]
4668e4: test rbp, rbp
4668e7: jne 0x46690d
4668e9: jmp 0x466916
4668eb: nop dword ptr [rax + rax]
4668f0: mov rdx, r13
4668f3: mov rsi, r12
4668f6: mov rdi, rbx
4668f9: call 0x4010d0
4668fe: test eax, eax
466900: jne 0x466909
466902: cmp byte ptr [rbx + r13], 0x3d
466907: je 0x466940
466909: add rbp, 8
46690d: mov rbx, qword ptr [rbp]
466911: test rbx, rbx
466914: jne 0x4668f0
466916: mov r8d, dword ptr fs:[0x18]
46691f: test r8d, r8d
466922: jne 0x466990
466924: sub dword ptr [rip + 0x5c5f5], 1
46692b: add rsp, 8
46692f: mov eax, r8d
466932: pop rbx
466933: pop rbp
466934: pop r12
466936: pop r13
466938: ret 
466939: nop dword ptr [rax]
466940: mov rax, rbp
466943: nop dword ptr [rax + rax]
466948: mov rdx, qword ptr [rax + 8]
46694c: add rax, 8
466950: mov qword ptr [rax - 8], rdx
466954: test rdx, rdx
466957: jne 0x466948
466959: jmp 0x46690d
46695b: nop dword ptr [rax + rax]
466960: xor eax, eax
466962: mov edx, 1
466967: lock cmpxchg dword ptr [rip + 0x5c5b1], edx
46696f: je 0x4668dd
466975: lea rdi, [rip + 0x5c5a4]
46697c: call 0x421250
466981: jmp 0x4668dd
466986: nop word ptr cs:[rax + rax]
466990: xor eax, eax
466992: xchg dword ptr [rip + 0x5c588], eax
466998: xor r8d, r8d
46699b: cmp eax, 1
46699e: jle 0x46692b
4669a0: xor r10d, r10d
4669a3: mov edx, 1
4669a8: mov esi, 0x81
4669ad: mov eax, 0xca
4669b2: lea rdi, [rip + 0x5c567]
4669b9: syscall 
4669bb: jmp 0x46692b
4669c0: mov rax, 0xffffffffffffffc0
4669c7: mov r8d, 0xffffffff
4669cd: mov dword ptr fs:[rax], 0x16
4669d4: jmp 0x46692b
4669d9: nop dword ptr [rax]
4669e0: endbr64 
4669e4: sub rsp, 8
4669e8: mov eax, dword ptr fs:[0x18]
4669f0: test eax, eax
4669f2: jne 0x466a88
4669f8: mov edx, 1
4669fd: cmpxchg dword ptr [rip + 0x5c51c], edx
466a04: mov rdi, qword ptr [rip + 0x5c2cd]
466a0b: cmp qword ptr [rip + 0x5c4fe], rdi
466a12: jne 0x466a19
466a14: test rdi, rdi
466a17: jne 0x466a40
466a19: mov qword ptr [rip + 0x5c2b4], 0
466a24: mov eax, dword ptr fs:[0x18]
466a2c: test eax, eax
466a2e: jne 0x466a58
466a30: sub dword ptr [rip + 0x5c4e9], 1
466a37: xor eax, eax
466a39: add rsp, 8
466a3d: ret 
466a3e: nop 
466a40: call 0x426a00
466a45: mov qword ptr [rip + 0x5c4c0], 0
466a50: jmp 0x466a19
466a52: nop word ptr [rax + rax]
466a58: xor eax, eax
466a5a: xchg dword ptr [rip + 0x5c4c0], eax
466a60: cmp eax, 1
466a63: jle 0x466a37
466a65: xor r10d, r10d
466a68: mov edx, 1
466a6d: mov esi, 0x81
466a72: mov eax, 0xca
466a77: lea rdi, [rip + 0x5c4a2]
466a7e: syscall 
466a80: jmp 0x466a37
466a82: nop word ptr [rax + rax]
466a88: xor eax, eax
466a8a: mov edx, 1
466a8f: lock cmpxchg dword ptr [rip + 0x5c489], edx
466a97: je 0x466a04
466a9d: lea rdi, [rip + 0x5c47c]
466aa4: call 0x421250
466aa9: jmp 0x466a04
466aae: nop 
466ab0: endbr64 
466ab4: mov eax, dword ptr [rip + 0x58fe6]
466aba: test eax, eax
466abc: jne 0x466ac8
466abe: jmp 0x40fe70
466ac3: nop dword ptr [rax + rax]
466ac8: xor eax, eax
466aca: ret 
466acb: nop dword ptr [rax + rax]
466ad0: endbr64 
466ad4: mov rax, 0xffffffffffffffb0
466adb: mov r8, qword ptr fs:[rax]
466adf: jmp 0x466b10
466ae4: nop word ptr cs:[rax + rax]
466aef: nop 
466af0: endbr64 
466af4: mov rax, 0xffffffffffffffb0
466afb: xor ecx, ecx
466afd: mov r8, qword ptr fs:[rax]
466b01: jmp 0x466b10
466b06: nop word ptr cs:[rax + rax]
466b10: endbr64 
466b14: push r15
466b16: push r14
466b18: xor r14d, r14d
466b1b: push r13
466b1d: mov r13, rdi
466b20: push r12
466b22: xor r12d, r12d
466b25: push rbp
466b26: push rbx
466b27: sub rsp, 0x28
466b2b: mov qword ptr [rsp + 8], rsi
466b30: test ecx, ecx
466b32: jne 0x466e18
466b38: cmp edx, 1
466b3b: je 0x466cc0
466b41: cmp edx, 0x24
466b44: ja 0x466cc0
466b4a: movsx rax, byte ptr [r13]
466b4f: mov rsi, qword ptr [r8 + 0x68]
466b53: mov rbx, r13
466b56: mov rcx, rax
466b59: test byte ptr [rsi + rax*2 + 1], 0x20
466b5e: je 0x466b73
466b60: movsx rax, byte ptr [rbx + 1]
466b65: add rbx, 1
466b69: mov rcx, rax
466b6c: test byte ptr [rsi + rax*2 + 1], 0x20
466b71: jne 0x466b60
466b73: test cl, cl
466b75: je 0x466f39
466b7b: cmp cl, 0x2d
466b7e: je 0x466e00
466b84: mov dword ptr [rsp + 0x14], 0
466b8c: cmp cl, 0x2b
466b8f: je 0x466d18
466b95: cmp cl, 0x30
466b98: je 0x466db0
466b9e: test edx, edx
466ba0: jne 0x466ce0
466ba6: test r14, r14
466ba9: jne 0x466f50
466baf: mov byte ptr [rsp + 0x12], 5
466bb4: mov edx, 0xa
466bb9: xor ebp, ebp
466bbb: movabs r8, 0x1999999999999999
466bc5: test cl, cl
466bc7: je 0x466e50
466bcd: cmp r14, rbx
466bd0: je 0x466e50
466bd6: mov r10, qword ptr [rip + 0x5925b]
466bdd: lea rsi, [rbp - 1]
466be1: mov r11, qword ptr [rip + 0x59240]
466be8: mov rdi, rbx
466beb: xor eax, eax
466bed: mov qword ptr [rsp + 0x18], rsi
466bf2: xor r9d, r9d
466bf5: movsxd r15, edx
466bf8: jmp 0x466c28
466bfa: nop word ptr [rax + rax]
466c00: jne 0x466c09
466c02: cmp sil, byte ptr [rsp + 0x12]
466c07: ja 0x466c59
466c09: imul rax, r15
466c0d: movzx esi, sil
466c11: mov rcx, rdi
466c14: add rax, rsi
466c17: lea rdi, [rcx + 1]
466c1b: movzx ecx, byte ptr [rcx + 1]
466c1f: cmp rdi, r14
466c22: je 0x466c70
466c24: test cl, cl
466c26: je 0x466c70
466c28: lea esi, [rcx - 0x30]
466c2b: cmp sil, 9
466c2f: jbe 0x466c4c
466c31: test rbp, rbp
466c34: jne 0x466d28
466c3a: movzx ecx, cl
466c3d: test byte ptr [r11 + rcx*2 + 1], 4
466c43: je 0x466c70
466c45: mov esi, dword ptr [r10 + rcx*4]
466c49: sub esi, 0x37
466c4c: movzx ecx, sil
466c50: cmp ecx, edx
466c52: jge 0x466c70
466c54: cmp r8, rax
466c57: jae 0x466c00
466c59: mov rcx, rdi
466c5c: mov r9d, 1
466c62: lea rdi, [rcx + 1]
466c66: movzx ecx, byte ptr [rcx + 1]
466c6a: cmp rdi, r14
466c6d: jne 0x466c24
466c6f: nop 
466c70: cmp rdi, rbx
466c73: je 0x466e50
466c79: mov rbx, qword ptr [rsp + 8]
466c7e: test rbx, rbx
466c81: je 0x466c86
466c83: mov qword ptr [rbx], rdi
466c86: test r9d, r9d
466c89: je 0x466d70
466c8f: mov rax, 0xffffffffffffffc0
466c96: movabs rdx, 0x7fffffffffffffff
466ca0: mov dword ptr fs:[rax], 0x22
466ca7: mov esi, dword ptr [rsp + 0x14]
466cab: movabs rax, 0x8000000000000000
466cb5: test esi, esi
466cb7: cmove rax, rdx
466cbb: jmp 0x466cd0
466cbd: nop dword ptr [rax]
466cc0: mov rax, 0xffffffffffffffc0
466cc7: mov dword ptr fs:[rax], 0x16
466cce: xor eax, eax
466cd0: add rsp, 0x28
466cd4: pop rbx
466cd5: pop rbp
466cd6: pop r12
466cd8: pop r13
466cda: pop r14
466cdc: pop r15
466cde: ret 
466cdf: nop 
466ce0: cmp edx, 0xa
466ce3: je 0x466ba6
466ce9: lea eax, [rdx - 2]
466cec: lea rsi, [rip + 0x4224d]
466cf3: xor ebp, ebp
466cf5: xor r14d, r14d
466cf8: cdqe 
466cfa: movzx edi, byte ptr [rsi + rax]
466cfe: lea rsi, [rip + 0x4227b]
466d05: mov r8, qword ptr [rsi + rax*8]
466d09: mov byte ptr [rsp + 0x12], dil
466d0e: jmp 0x466bc5
466d13: nop dword ptr [rax + rax]
466d18: movzx ecx, byte ptr [rbx + 1]
466d1c: add rbx, 1
466d20: jmp 0x466b95
466d25: nop dword ptr [rax]
466d28: mov byte ptr [rsp + 0x13], cl
466d2c: xor esi, esi
466d2e: nop 
466d30: movzx ecx, byte ptr [rdi + rsi]
466d34: cmp byte ptr [r12 + rsi], cl
466d38: jne 0x466d58
466d3a: add rsi, 1
466d3e: cmp rsi, rbp
466d41: jne 0x466d30
466d43: mov rsi, qword ptr [rsp + 0x18]
466d48: lea rcx, [rdi + rsi]
466d4c: jmp 0x466c17
466d51: nop dword ptr [rax]
466d58: movzx ecx, byte ptr [rsp + 0x13]
466d5d: cmp rbp, rsi
466d60: jne 0x466c3d
466d66: jmp 0x466d43
466d68: nop dword ptr [rax + rax]
466d70: movabs rcx, 0x7fffffffffffffff
466d7a: movsxd rdx, dword ptr [rsp + 0x14]
466d7f: add rdx, rcx
466d82: cmp rdx, rax
466d85: jb 0x466c8f
466d8b: mov ecx, dword ptr [rsp + 0x14]
466d8f: mov rdx, rax
466d92: neg rdx
466d95: test ecx, ecx
466d97: cmovne rax, rdx
466d9b: add rsp, 0x28
466d9f: pop rbx
466da0: pop rbp
466da1: pop r12
466da3: pop r13
466da5: pop r14
466da7: pop r15
466da9: ret 
466daa: nop word ptr [rax + rax]
466db0: test edx, 0xffffffef
466db6: je 0x466e90
466dbc: cmp edx, 0xa
466dbf: je 0x466f19
466dc5: lea eax, [rdx - 2]
466dc8: lea rcx, [rip + 0x421b1]
466dcf: xor r14d, r14d
466dd2: xor ebp, ebp
466dd4: cdqe 
466dd6: mov r10, qword ptr [rip + 0x5905b]
466ddd: mov r8, qword ptr [rcx + rax*8]
466de1: lea rcx, [rip + 0x42158]
466de8: movzx eax, byte ptr [rcx + rax]
466dec: mov ecx, 0x30
466df1: mov byte ptr [rsp + 0x12], al
466df5: jmp 0x466bdd
466dfa: nop word ptr [rax + rax]
466e00: movzx ecx, byte ptr [rbx + 1]
466e04: mov dword ptr [rsp + 0x14], 1
466e0c: add rbx, 1
466e10: jmp 0x466b95
466e15: nop dword ptr [rax]
466e18: mov rcx, qword ptr [r8 + 8]
466e1c: mov r14, qword ptr [rcx + 0x50]
466e20: movzx eax, byte ptr [r14]
466e24: sub eax, 1
466e27: cmp al, 0x7d
466e29: ja 0x466ece
466e2f: mov r12, qword ptr [rcx + 0x48]
466e33: cmp byte ptr [r12], 0
466e38: jne 0x466b38
466e3e: xor r14d, r14d
466e41: xor r12d, r12d
466e44: jmp 0x466b38
466e49: nop dword ptr [rax]
466e50: cmp qword ptr [rsp + 8], 0
466e56: je 0x466f12
466e5c: mov rax, rbx
466e5f: sub rax, r13
466e62: cmp rax, 1
466e66: jle 0x466e7e
466e68: movsx rdx, byte ptr [rbx - 1]
466e6d: mov rax, qword ptr [rip + 0x58fc4]
466e74: cmp dword ptr [rax + rdx*4], 0x58
466e78: je 0x466efc
466e7e: mov rax, qword ptr [rsp + 8]
466e83: mov qword ptr [rax], r13
466e86: xor eax, eax
466e88: jmp 0x466cd0
466e8d: nop dword ptr [rax]
466e90: mov r10, qword ptr [rip + 0x58fa1]
466e97: movsx rax, byte ptr [rbx + 1]
466e9c: cmp dword ptr [r10 + rax*4], 0x58
466ea1: je 0x466ed6
466ea3: test edx, edx
466ea5: jne 0x466dbc
466eab: mov byte ptr [rsp + 0x12], 7
466eb0: mov edx, 8
466eb5: xor r14d, r14d
466eb8: xor ebp, ebp
466eba: movabs r8, 0x1fffffffffffffff
466ec4: mov ecx, 0x30
466ec9: jmp 0x466bdd
466ece: xor r14d, r14d
466ed1: jmp 0x466b38
466ed6: movzx ecx, byte ptr [rbx + 2]
466eda: mov byte ptr [rsp + 0x12], 0xf
466edf: add rbx, 2
466ee3: xor ebp, ebp
466ee5: movabs r8, 0xfffffffffffffff
466eef: mov edx, 0x10
466ef4: xor r14d, r14d
466ef7: jmp 0x466bc5
466efc: cmp byte ptr [rbx - 2], 0x30
466f00: jne 0x466e7e
466f06: mov rax, qword ptr [rsp + 8]
466f0b: sub rbx, 1
466f0f: mov qword ptr [rax], rbx
466f12: xor eax, eax
466f14: jmp 0x466cd0
466f19: test r14, r14
466f1c: jne 0x466f50
466f1e: mov byte ptr [rsp + 0x12], 5
466f23: xor ebp, ebp
466f25: mov ecx, 0x30
466f2a: movabs r8, 0x1999999999999999
466f34: jmp 0x466bd6
466f39: cmp qword ptr [rsp + 8], 0
466f3f: jne 0x466e7e
466f45: xor eax, eax
466f47: jmp 0x466cd0
466f4c: nop dword ptr [rax]
466f50: mov rdi, r12
466f53: mov byte ptr [rsp + 0x12], cl
466f57: call 0x401180
466f5c: mov rdx, rax
466f5f: mov rbp, rax
466f62: test rax, rax
466f65: je 0x466e50
466f6b: movzx ecx, byte ptr [rsp + 0x12]
466f70: xor eax, eax
466f72: jmp 0x466f85
466f74: nop dword ptr [rax]
466f78: add rax, 1
466f7c: cmp rax, rdx
466f7f: je 0x466e50
466f85: movzx edi, byte ptr [rbx + rax]
466f89: cmp byte ptr [r12 + rax], dil
466f8d: je 0x466f78
466f8f: mov rsi, rbx
466f92: test cl, cl
466f94: je 0x466ff7
466f96: mov r8, qword ptr [rip + 0x58e8b]
466f9d: mov rdi, qword ptr [rip + 0x58e94]
466fa4: mov rsi, rbx
466fa7: jmp 0x466fbc
466fa9: nop dword ptr [rax]
466fb0: movzx ecx, byte ptr [rsi + 1]
466fb4: add rsi, 1
466fb8: test cl, cl
466fba: je 0x466ff7
466fbc: lea eax, [rcx - 0x30]
466fbf: cmp al, 9
466fc1: jbe 0x466fb0
466fc3: xor eax, eax
466fc5: jmp 0x466fd9
466fc7: nop word ptr [rax + rax]
466fd0: add rax, 1
466fd4: cmp rax, rdx
466fd7: je 0x466fb0
466fd9: movzx r11d, byte ptr [rsi + rax]
466fde: cmp byte ptr [r12 + rax], r11b
466fe2: je 0x466fd0
466fe4: cmp rdx, rax
466fe7: jbe 0x466fb0
466fe9: test byte ptr [r8 + rcx*2 + 1], 4
466fef: je 0x466ff7
466ff1: cmp dword ptr [rdi + rcx*4], 0x40
466ff5: jle 0x466fb0
466ff7: mov rcx, r14
466ffa: mov rdx, r12
466ffd: mov rdi, rbx
467000: call 0x410af0
467005: mov byte ptr [rsp + 0x12], 5
46700a: movzx ecx, byte ptr [rbx]
46700d: movabs r8, 0x1999999999999999
467017: mov r14, rax
46701a: mov edx, 0xa
46701f: jmp 0x466bc5
467024: nop word ptr cs:[rax + rax]
46702f: nop 
467030: endbr64 
467034: mov r8, rcx
467037: xor ecx, ecx
467039: jmp 0x466b10
46703e: nop 
467040: endbr64 
467044: mov r8, rsi
467047: test ecx, ecx
467049: lea rsi, [rip + 0x42090]
467050: lea rax, [rip + 0x42049]
467057: cmove rsi, rax
46705b: cmp edx, 0xa
46705e: je 0x4670d0
467060: cmp edx, 0x10
467063: je 0x467090
467065: mov ecx, edx
467067: cmp edx, 8
46706a: je 0x4670b0
46706c: mov rax, rdi
46706f: xor edx, edx
467071: sub r8, 1
467075: div rcx
467078: movzx edx, byte ptr [rsi + rdx]
46707c: mov byte ptr [r8], dl
46707f: mov rdx, rdi
467082: mov rdi, rax
467085: cmp rdx, rcx
467088: jae 0x46706c
46708a: mov rax, r8
46708d: ret 
46708e: nop 
467090: mov rax, rdi
467093: sub r8, 1
467097: and eax, 0xf
46709a: movzx eax, byte ptr [rsi + rax]
46709e: mov byte ptr [r8], al
4670a1: mov rax, rdi
4670a4: shr rdi, 4
4670a8: cmp rax, 0xf
4670ac: ja 0x467090
4670ae: jmp 0x46708a
4670b0: mov rax, rdi
4670b3: sub r8, 1
4670b7: and eax, 7
4670ba: movzx eax, byte ptr [rsi + rax]
4670be: mov byte ptr [r8], al
4670c1: mov rax, rdi
4670c4: shr rdi, 3
4670c8: cmp rax, 7
4670cc: ja 0x4670b0
4670ce: jmp 0x46708a
4670d0: movabs rcx, 0xcccccccccccccccd
4670da: nop word ptr [rax + rax]
4670e0: mov rax, rdi
4670e3: mov r9, rdi
4670e6: sub r8, 1
4670ea: mul rcx
4670ed: shr rdx, 3
4670f1: lea rax, [rdx + rdx*4]
4670f5: add rax, rax
4670f8: sub r9, rax
4670fb: movzx eax, byte ptr [rsi + r9]
467100: mov byte ptr [r8], al
467103: mov rax, rdi
467106: mov rdi, rdx
467109: cmp rax, 9
46710d: ja 0x4670e0
46710f: mov rax, r8
467112: ret 
467113: nop word ptr cs:[rax + rax]
46711e: nop 
467120: endbr64 
467124: sub rsp, 0x38
467128: mov r11, rsi
46712b: mov rax, qword ptr fs:[0x28]
467134: mov qword ptr [rsp + 0x28], rax
467139: xor eax, eax
46713b: lea r10, [rsp + 0x20]
467140: mov rsi, r10
467143: call 0x467040
467148: cmp rax, r10
46714b: jae 0x4672f0
467151: mov rsi, rax
467154: mov rcx, rax
467157: lea rax, [rsp + 0x1f]
46715c: sub rax, rsi
46715f: cmp rax, 0xe
467163: jbe 0x4672e0
467169: lea rax, [rsi + 0xf]
46716d: sub rax, r11
467170: cmp rax, 0x1e
467174: jbe 0x4672e0
46717a: mov rdi, r10
46717d: xor eax, eax
46717f: sub rdi, rsi
467182: mov rdx, rdi
467185: and rdx, 0xfffffffffffffff0
467189: nop dword ptr [rax]
467190: movdqu xmm0, xmmword ptr [rsi + rax]
467195: movups xmmword ptr [r11 + rax], xmm0
46719a: add rax, 0x10
46719e: cmp rax, rdx
4671a1: jne 0x467190
4671a3: mov rdx, rdi
4671a6: and rdx, 0xfffffffffffffff0
4671aa: lea rax, [r11 + rdx]
4671ae: add rsi, rdx
4671b1: cmp rdi, rdx
4671b4: je 0x4672c0
4671ba: movzx edx, byte ptr [rsi]
4671bd: mov byte ptr [rax], dl
4671bf: lea rdx, [rsi + 1]
4671c3: cmp r10, rdx
4671c6: jbe 0x4672c0
4671cc: movzx edx, byte ptr [rsi + 1]
4671d0: mov byte ptr [rax + 1], dl
4671d3: lea rdx, [rsi + 2]
4671d7: cmp r10, rdx
4671da: jbe 0x4672c0
4671e0: movzx edx, byte ptr [rsi + 2]
4671e4: mov byte ptr [rax + 2], dl
4671e7: lea rdx, [rsi + 3]
4671eb: cmp r10, rdx
4671ee: jbe 0x4672c0
4671f4: movzx edx, byte ptr [rsi + 3]
4671f8: mov byte ptr [rax + 3], dl
4671fb: lea rdx, [rsi + 4]
4671ff: cmp r10, rdx
467202: jbe 0x4672c0
467208: movzx edx, byte ptr [rsi + 4]
46720c: mov byte ptr [rax + 4], dl
46720f: lea rdx, [rsi + 5]
467213: cmp r10, rdx
467216: jbe 0x4672c0
46721c: movzx edx, byte ptr [rsi + 5]
467220: mov byte ptr [rax + 5], dl
467223: lea rdx, [rsi + 6]
467227: cmp r10, rdx
46722a: jbe 0x4672c0
467230: movzx edx, byte ptr [rsi + 6]
467234: mov byte ptr [rax + 6], dl
467237: lea rdx, [rsi + 7]
46723b: cmp r10, rdx
46723e: jbe 0x4672c0
467244: movzx edx, byte ptr [rsi + 7]
467248: mov byte ptr [rax + 7], dl
46724b: lea rdx, [rsi + 8]
46724f: cmp r10, rdx
467252: jbe 0x4672c0
467254: movzx edx, byte ptr [rsi + 8]
467258: mov byte ptr [rax + 8], dl
46725b: lea rdx, [rsi + 9]
46725f: cmp r10, rdx
467262: jbe 0x4672c0
467264: movzx edx, byte ptr [rsi + 9]
467268: mov byte ptr [rax + 9], dl
46726b: lea rdx, [rsi + 0xa]
46726f: cmp r10, rdx
467272: jbe 0x4672c0
467274: movzx edx, byte ptr [rsi + 0xa]
467278: mov byte ptr [rax + 0xa], dl
46727b: lea rdx, [rsi + 0xb]
46727f: cmp r10, rdx
467282: jbe 0x4672c0
467284: movzx edx, byte ptr [rsi + 0xb]
467288: mov byte ptr [rax + 0xb], dl
46728b: lea rdx, [rsi + 0xc]
46728f: cmp r10, rdx
467292: jbe 0x4672c0
467294: movzx edx, byte ptr [rsi + 0xc]
467298: mov byte ptr [rax + 0xc], dl
46729b: lea rdx, [rsi + 0xd]
46729f: cmp r10, rdx
4672a2: jbe 0x4672c0
4672a4: movzx edx, byte ptr [rsi + 0xd]
4672a8: mov byte ptr [rax + 0xd], dl
4672ab: lea rdx, [rsi + 0xe]
4672af: cmp r10, rdx
4672b2: jbe 0x4672c0
4672b4: movzx edx, byte ptr [rsi + 0xe]
4672b8: mov byte ptr [rax + 0xe], dl
4672bb: nop dword ptr [rax + rax]
4672c0: sub r10, rcx
4672c3: lea rax, [r11 + r10]
4672c7: mov rcx, qword ptr [rsp + 0x28]
4672cc: xor rcx, qword ptr fs:[0x28]
4672d5: jne 0x4672f5
4672d7: add rsp, 0x38
4672db: ret 
4672dc: nop dword ptr [rax]
4672e0: mov rdi, r11
4672e3: nop dword ptr [rax + rax]
4672e8: movsb byte ptr [rdi], byte ptr [rsi]
4672e9: cmp rsi, r10
4672ec: jne 0x4672e8
4672ee: jmp 0x4672c0
4672f0: mov rax, r11
4672f3: jmp 0x4672c7
4672f5: call 0x4547a0
4672fa: nop word ptr [rax + rax]
467300: push r12
467302: push rbx
467303: mov rbx, rdi
467306: sub rsp, 8
46730a: mov eax, dword ptr [rdi]
46730c: test eax, eax
46730e: je 0x46731a
467310: cmp dword ptr [rdi + 4], 0x66
467314: je 0x467408
46731a: mov r9, qword ptr [rbx + 0x28]
46731e: mov rdx, qword ptr [rbx + 0x18]
467322: mov rdi, qword ptr [rbx + 0x10]
467326: test r9, r9
467329: je 0x4673d8
46732f: cmp r9, rdx
467332: jle 0x467370
467334: mov r12d, 0x30
46733a: mov ecx, 0xa
46733f: mov rsi, rdi
467342: call 0x486050
467347: test rax, rax
46734a: je 0x467360
46734c: mov rdx, qword ptr [rbx + 0x18]
467350: mov rcx, qword ptr [rbx + 0x10]
467354: lea rsi, [rdx + 1]
467358: mov qword ptr [rbx + 0x18], rsi
46735c: mov qword ptr [rcx + rdx*8], rax
467360: add rsp, 8
467364: mov eax, r12d
467367: pop rbx
467368: pop r12
46736a: ret 
46736b: nop dword ptr [rax + rax]
467370: mov r10, qword ptr [rbx + 0x30]
467374: mov r8, qword ptr [rbx + 0x20]
467378: mov rcx, rdx
46737b: xor esi, esi
46737d: mov rdx, rdi
467380: mov rdi, r10
467383: call 0x485320
467388: mov rdx, qword ptr [rbx + 0x30]
46738c: mov r8, rax
46738f: mov rax, qword ptr [rbx + 0x18]
467393: sub rax, qword ptr [rbx + 0x28]
467397: mov qword ptr [rdx + rax*8], r8
46739b: mov r12, qword ptr [rdx]
46739e: mov rdx, qword ptr [rbx + 0x28]
4673a2: mov qword ptr [rbx + 0x18], rdx
4673a6: test rdx, rdx
4673a9: je 0x467430
4673af: mov rdi, qword ptr [rbx + 0x10]
4673b3: jmp 0x4673c2
4673b5: nop dword ptr [rax]
4673b8: sub rdx, 1
4673bc: mov qword ptr [rbx + 0x18], rdx
4673c0: je 0x467430
4673c2: cmp qword ptr [rdi + rdx*8 - 8], 0
4673c8: je 0x4673b8
4673ca: add r12d, 0x30
4673ce: jmp 0x46733a
4673d3: nop dword ptr [rax + rax]
4673d8: lea rbx, [rdi + rdx*8 - 8]
4673dd: mov ecx, 0xa
4673e2: sub rdx, 1
4673e6: mov rsi, rdi
4673e9: mov r12, qword ptr [rbx]
4673ec: call 0x486050
4673f1: mov qword ptr [rbx], rax
4673f4: add r12d, 0x30
4673f8: add rsp, 8
4673fc: mov eax, r12d
4673ff: pop rbx
467400: pop r12
467402: ret 
467403: nop dword ptr [rax + rax]
467408: mov eax, dword ptr [rdi + 8]
46740b: mov r12d, 0x30
467411: lea edx, [rax - 1]
467414: mov dword ptr [rdi + 8], edx
467417: test eax, eax
467419: jle 0x46731a
46741f: add rsp, 8
467423: mov eax, r12d
467426: pop rbx
467427: pop r12
467429: ret 
46742a: nop word ptr [rax + rax]
467430: mov qword ptr [rbx + 0x18], 1
467438: add r12d, 0x30
46743c: add rsp, 8
467440: mov eax, r12d
467443: pop rbx
467444: pop r12
467446: ret 
467447: nop word ptr [rax + rax]
467450: push r15
467452: push r14
467454: mov r14, rdx
467457: push r13
467459: mov r13, rdi
46745c: lea rdi, [rip + 0x2e46f]
467463: push r12
467465: mov r12, rsi
467468: push rbp
467469: push rbx
46746a: sub rsp, 0x468
467471: mov rax, qword ptr fs:[0x28]
46747a: mov qword ptr [rsp + 0x458], rax
467482: xor eax, eax
467484: call 0x454490
467489: mov edi, 0x2e
46748e: mov rbx, rax
467491: mov rsi, rax
467494: call 0x454520
467499: mov rsi, rbx
46749c: mov edi, 0x2c
4674a1: mov ebp, eax
4674a3: call 0x454520
4674a8: lea r8, [rsp + 0x10]
4674ad: test rbx, rbx
4674b0: jne 0x467680
4674b6: sub r12, r13
4674b9: lea rbp, [rsp + 0x20]
4674be: mov edx, 1
4674c3: mov rdi, r8
4674c6: mov rsi, r12
4674c9: mov qword ptr [rsp + 0x10], rbp
4674ce: mov qword ptr [rsp + 0x18], 0x400
4674d7: call 0x428e40
4674dc: test al, al
4674de: je 0x4676f0
4674e4: mov rcx, qword ptr [rsp + 0x10]
4674e9: mov rdx, r12
4674ec: mov rsi, r13
4674ef: mov rdi, rcx
4674f2: mov qword ptr [rsp], rcx
4674f6: call 0x401150
4674fb: mov rcx, qword ptr [rsp]
4674ff: lea r15, [rax - 1]
467503: cmp rcx, r15
467506: ja 0x4675a5
46750c: lea rax, [rsp + 0x440]
467514: lea r12, [rcx - 1]
467518: mov qword ptr [rsp], rax
46751c: lea rax, [rsp + 0x420]
467524: mov qword ptr [rsp + 8], rax
467529: jmp 0x46754a
46752b: nop dword ptr [rax + rax]
467530: test rbx, rbx
467533: jne 0x4675e0
467539: mov byte ptr [r14 - 1], al
46753d: sub r14, 1
467541: sub r15, 1
467545: cmp r15, r12
467548: je 0x4675a5
46754a: movsx eax, byte ptr [r15]
46754e: lea ecx, [rax - 0x30]
467551: cmp cl, 9
467554: ja 0x467530
467556: mov rcx, 0xffffffffffffffa0
46755d: sub eax, 7
467560: cdqe 
467562: mov rcx, qword ptr fs:[rcx]
467566: mov rcx, qword ptr [rcx]
467569: mov r13, qword ptr [rcx + rax*8 + 0x40]
46756e: mov rdi, r13
467571: call 0x401180
467576: sub r14, rax
467579: lea rcx, [rax - 1]
46757d: test rax, rax
467580: je 0x467541
467582: nop word ptr [rax + rax]
467588: movzx eax, byte ptr [r13 + rcx]
46758e: mov byte ptr [r14 + rcx], al
467592: sub rcx, 1
467596: cmp rcx, -1
46759a: jne 0x467588
46759c: sub r15, 1
4675a0: cmp r15, r12
4675a3: jne 0x46754a
4675a5: mov rdi, qword ptr [rsp + 0x10]
4675aa: cmp rdi, rbp
4675ad: je 0x4675b4
4675af: call 0x426a00
4675b4: mov rax, qword ptr [rsp + 0x458]
4675bc: xor rax, qword ptr fs:[0x28]
4675c5: jne 0x46777b
4675cb: add rsp, 0x468
4675d2: mov rax, r14
4675d5: pop rbx
4675d6: pop rbp
4675d7: pop r12
4675d9: pop r13
4675db: pop r14
4675dd: pop r15
4675df: ret 
4675e0: mov ecx, eax
4675e2: and ecx, 0xfffffffd
4675e5: cmp cl, 0x2c
4675e8: jne 0x467539
4675ee: mov rdi, qword ptr [rsp]
4675f2: cmp al, 0x2e
4675f4: cmove rdi, qword ptr [rsp + 8]
4675fa: mov rcx, rdi
4675fd: mov esi, dword ptr [rcx]
4675ff: add rcx, 4
467603: lea eax, [rsi - 0x1010101]
467609: not esi
46760b: and eax, esi
46760d: and eax, 0x80808080
467612: je 0x4675fd
467614: mov esi, eax
467616: shr esi, 0x10
467619: test eax, 0x8080
46761e: cmove eax, esi
467621: lea rsi, [rcx + 2]
467625: cmove rcx, rsi
467629: mov edx, eax
46762b: add dl, al
46762d: sbb rcx, 3
467631: sub rcx, rdi
467634: sub r14, rcx
467637: test rcx, rcx
46763a: je 0x467541
467640: mov eax, ecx
467642: cmp ecx, 8
467645: jae 0x4676f8
46764b: and ecx, 4
46764e: jne 0x467768
467654: test eax, eax
467656: je 0x467541
46765c: movzx ecx, byte ptr [rdi]
46765f: mov byte ptr [r14], cl
467662: test al, 2
467664: je 0x467541
46766a: movzx ecx, word ptr [rdi + rax - 2]
46766f: mov word ptr [r14 + rax - 2], cx
467675: jmp 0x467541
46767a: nop word ptr [rax + rax]
467680: mov rdx, r8
467683: lea rdi, [rsp + 0x420]
46768b: mov esi, ebp
46768d: mov r15d, eax
467690: mov qword ptr [rsp], r8
467694: mov qword ptr [rsp + 0x10], 0
46769d: call 0x44f020
4676a2: mov r8, qword ptr [rsp]
4676a6: cmp rax, -1
4676aa: je 0x467756
4676b0: mov byte ptr [rsp + rax + 0x420], 0
4676b8: mov rdx, r8
4676bb: lea rdi, [rsp + 0x440]
4676c3: mov esi, r15d
4676c6: mov qword ptr [rsp], r8
4676ca: mov qword ptr [rsp + 0x10], 0
4676d3: call 0x44f020
4676d8: mov r8, qword ptr [rsp]
4676dc: cmp rax, -1
4676e0: je 0x467744
4676e2: mov byte ptr [rsp + rax + 0x440], 0
4676ea: jmp 0x4674b6
4676ef: nop 
4676f0: mov r14, r13
4676f3: jmp 0x4675b4
4676f8: mov rax, qword ptr [rdi]
4676fb: lea r8, [r14 + 8]
4676ff: and r8, 0xfffffffffffffff8
467703: mov qword ptr [r14], rax
467706: mov eax, ecx
467708: mov rsi, qword ptr [rdi + rax - 8]
46770d: mov qword ptr [r14 + rax - 8], rsi
467712: mov rax, r14
467715: sub rax, r8
467718: sub rdi, rax
46771b: add eax, ecx
46771d: and eax, 0xfffffff8
467720: cmp eax, 8
467723: jb 0x467541
467729: and eax, 0xfffffff8
46772c: xor ecx, ecx
46772e: mov esi, ecx
467730: add ecx, 8
467733: mov r9, qword ptr [rdi + rsi]
467737: mov qword ptr [r8 + rsi], r9
46773b: cmp ecx, eax
46773d: jb 0x46772e
46773f: jmp 0x467541
467744: mov eax, 0x2c
467749: mov word ptr [rsp + 0x440], ax
467751: jmp 0x4674b6
467756: mov edx, 0x2e
46775b: mov word ptr [rsp + 0x420], dx
467763: jmp 0x4676b8
467768: mov ecx, dword ptr [rdi]
46776a: mov dword ptr [r14], ecx
46776d: mov ecx, dword ptr [rdi + rax - 4]
467771: mov dword ptr [r14 + rax - 4], ecx
467776: jmp 0x467541
46777b: call 0x4547a0
467780: endbr64 
467784: push rbp
467785: mov r11, rsi
467788: mov rbp, rsp
46778b: push r15
46778d: push r14
46778f: push r13
467791: push r12
467793: mov r12, rdi
467796: mov rdi, rdx
467799: push rbx
46779a: sub rsp, 0x128
4677a1: mov qword ptr [rbp - 0xf8], rsi
4677a8: mov qword ptr [rbp - 0xb8], rdx
4677af: mov rax, qword ptr fs:[0x28]
4677b8: mov qword ptr [rbp - 0x38], rax
4677bc: xor eax, eax
4677be: movzx eax, byte ptr [rdx + 0xd]
4677c2: mov dword ptr [rbp - 0xa4], 0
4677cc: mov dword ptr [rbp - 0xa0], 0
4677d6: mov edx, eax
4677d8: mov esi, eax
4677da: shr dl, 2
4677dd: mov ebx, edx
4677df: and ebx, 1
4677e2: mov dword ptr [rbp - 0xbc], ebx
4677e8: movzx ebx, byte ptr [rdi + 0xc]
4677ec: and esi, 1
4677ef: jne 0x467990
4677f5: mov rdx, qword ptr [r11 + 8]
4677f9: mov rdi, qword ptr [rdx + 0x40]
4677fd: mov qword ptr [rbp - 0x108], rdi
467804: mov edi, dword ptr [rdx + 0x58]
467807: mov dword ptr [rbp - 0xc0], edi
46780d: test bl, bl
46780f: js 0x467ae0
467815: mov qword ptr [rbp - 0xe8], 0
467820: mov dword ptr [rbp - 0x114], 0
46782a: mov qword ptr [rbp - 0x110], 0
467835: mov rdx, qword ptr [rcx]
467838: test al, 0x10
46783a: je 0x467a60
467840: movdqa xmm2, xmmword ptr [rdx]
467844: movdqa xmm1, xmm2
467848: movdqa xmm0, xmm2
46784c: movaps xmmword ptr [rbp - 0xd0], xmm2
467853: call 0x48df20
467858: movdqa xmm2, xmmword ptr [rbp - 0xd0]
467860: test rax, rax
467863: jne 0x4684c0
467869: movdqa xmm0, xmm2
46786d: movdqa xmm1, xmmword ptr [rip + 0x4191b]
467875: pand xmm0, xmmword ptr [rip + 0x41903]
46787d: movaps xmmword ptr [rbp - 0xd0], xmm2
467884: movaps xmmword ptr [rbp - 0xe0], xmm0
46788b: call 0x48df20
467890: movdqa xmm2, xmmword ptr [rbp - 0xd0]
467898: test rax, rax
46789b: jne 0x4685c8
4678a1: movdqa xmm1, xmmword ptr [rip + 0x418e7]
4678a9: movdqa xmm0, xmmword ptr [rbp - 0xe0]
4678b1: call 0x48e130
4678b6: movdqa xmm2, xmmword ptr [rbp - 0xd0]
4678be: test rax, rax
4678c1: jle 0x4685c8
4678c7: movmskps r13d, xmm2
4678cb: and r13d, 8
4678cf: mov rax, qword ptr [rbp - 0xb8]
4678d6: mov dword ptr [rbp - 0xa4], r13d
4678dd: lea r15, [rip + 0x41844]
4678e4: lea r14, [rip + 0x4181e]
4678eb: movsxd rdx, dword ptr [rax + 8]
4678ef: mov rax, 0xfffffffffffffff0
4678f6: mov rax, qword ptr fs:[rax]
4678fa: movzx eax, word ptr [rax + rdx*2]
4678fe: lea rdx, [rip + 0x41843]
467905: and ax, 0x100
467909: lea rax, [rip + 0x41801]
467910: cmove r15, rdx
467914: cmove r14, rax
467918: mov edx, ebx
46791a: mov rax, qword ptr [rbp - 0xb8]
467921: shr dl, 5
467924: xor edx, 1
467927: mov ecx, dword ptr [rax + 4]
46792a: and edx, 1
46792d: test r13d, r13d
467930: je 0x467b98
467936: sub ecx, 4
467939: test ecx, ecx
46793b: setg r8b
46793f: jle 0x467949
467941: test dl, dl
467943: jne 0x467af0
467949: xor r13d, r13d
46794c: mov eax, dword ptr [rbp - 0xbc]
467952: test eax, eax
467954: je 0x467d18
46795a: mov rax, qword ptr [r12 + 0xa0]
467962: test rax, rax
467965: je 0x469b9a
46796b: mov rdx, qword ptr [rax + 0x20]
46796f: cmp rdx, qword ptr [rax + 0x28]
467973: jae 0x469b9a
467979: lea rsi, [rdx + 4]
46797d: mov qword ptr [rax + 0x20], rsi
467981: mov dword ptr [rdx], 0x2d
467987: jmp 0x467bf8
46798c: nop dword ptr [rax]
467990: mov rdx, qword ptr [r11 + 0x20]
467994: mov rdi, qword ptr [rdx + 0x50]
467998: cmp byte ptr [rdi], 0
46799b: mov qword ptr [rbp - 0x108], rdi
4679a2: jne 0x4679b3
4679a4: mov rdi, qword ptr [r11 + 8]
4679a8: mov rdi, qword ptr [rdi + 0x40]
4679ac: mov qword ptr [rbp - 0x108], rdi
4679b3: mov edi, dword ptr [rdx + 0x198]
4679b9: mov dword ptr [rbp - 0xc0], edi
4679bf: test edi, edi
4679c1: jne 0x4679d7
4679c3: mov rdi, qword ptr [rbp - 0xf8]
4679ca: mov rdi, qword ptr [rdi + 8]
4679ce: mov edi, dword ptr [rdi + 0x58]
4679d1: mov dword ptr [rbp - 0xc0], edi
4679d7: test bl, bl
4679d9: jns 0x467815
4679df: mov rdi, qword ptr [rdx + 0x60]
4679e3: mov qword ptr [rbp - 0xe8], rdi
4679ea: movzx edi, byte ptr [rdi]
4679ed: lea edx, [rdi - 1]
4679f0: mov byte ptr [rbp - 0xd0], dil
4679f7: cmp dl, 0x7d
4679fa: ja 0x467815
467a00: mov edi, dword ptr [rbp - 0xbc]
467a06: test edi, edi
467a08: je 0x467d50
467a0e: test sil, sil
467a11: mov rsi, qword ptr [rbp - 0xf8]
467a18: jne 0x468740
467a1e: mov rdx, qword ptr [rsi + 8]
467a22: mov esi, dword ptr [rdx + 0x60]
467a25: mov dword ptr [rbp - 0x114], esi
467a2b: mov edx, dword ptr [rbp - 0x114]
467a31: mov qword ptr [rbp - 0x110], 0
467a3c: test edx, edx
467a3e: mov edx, 0
467a43: cmovne rdx, qword ptr [rbp - 0xe8]
467a4b: mov qword ptr [rbp - 0xe8], rdx
467a52: mov rdx, qword ptr [rcx]
467a55: test al, 0x10
467a57: jne 0x467840
467a5d: nop dword ptr [rax]
467a60: test bl, 1
467a63: je 0x467aa0
467a65: fld xword ptr [rdx]
467a67: fucomi st(0)
467a69: jp 0x469d0d
467a6f: fld xword ptr [rip + 0x4172b]
467a75: fld st(1)
467a77: fabs 
467a79: fucompi st(1)
467a7b: fstp st(0)
467a7d: jbe 0x468480
467a83: fxam 
467a85: fnstsw ax
467a87: fstp st(0)
467a89: mov r13d, eax
467a8c: and r13d, 0x200
467a93: jmp 0x4678cf
467a98: nop dword ptr [rax + rax]
467aa0: movsd xmm0, qword ptr [rdx]
467aa4: ucomisd xmm0, xmm0
467aa8: jp 0x469cff
467aae: movapd xmm1, xmm0
467ab2: andpd xmm1, xmmword ptr [rip + 0x416f6]
467aba: ucomisd xmm1, qword ptr [rip + 0x4170e]
467ac2: jbe 0x467da0
467ac8: movmskpd r13d, xmm0
467acd: and r13d, 1
467ad1: jmp 0x4678cf
467ad6: nop word ptr cs:[rax + rax]
467ae0: mov rdi, qword ptr [rdx + 0x50]
467ae4: mov qword ptr [rbp - 0xe8], rdi
467aeb: jmp 0x4679ea
467af0: mov edx, dword ptr [rbp - 0xbc]
467af6: movsxd rbx, ecx
467af9: mov esi, 0x20
467afe: mov rdi, r12
467b01: mov dword ptr [rbp - 0xd0], ecx
467b07: test edx, edx
467b09: mov rdx, rbx
467b0c: je 0x467d40
467b12: call 0x474150
467b17: mov ecx, dword ptr [rbp - 0xd0]
467b1d: cmp rax, rbx
467b20: jne 0x468648
467b26: mov eax, dword ptr [rbp - 0xa4]
467b2c: mov r13d, ecx
467b2f: mov r8d, 1
467b35: test eax, eax
467b37: jne 0x46794c
467b3d: mov rax, qword ptr [rbp - 0xb8]
467b44: movzx ebx, byte ptr [rax + 0xc]
467b48: test bl, 0x40
467b4b: jne 0x467bb9
467b4d: and ebx, 0x10
467b50: je 0x467bfc
467b56: mov eax, dword ptr [rbp - 0xbc]
467b5c: test eax, eax
467b5e: je 0x46877a
467b64: mov rax, qword ptr [r12 + 0xa0]
467b6c: test rax, rax
467b6f: je 0x46a135
467b75: mov rdx, qword ptr [rax + 0x20]
467b79: cmp rdx, qword ptr [rax + 0x28]
467b7d: jae 0x46a135
467b83: lea rsi, [rdx + 4]
467b87: mov qword ptr [rax + 0x20], rsi
467b8b: mov dword ptr [rdx], 0x20
467b91: jmp 0x467bf8
467b93: nop dword ptr [rax + rax]
467b98: test bl, 0x50
467b9b: jne 0x467d00
467ba1: sub ecx, 3
467ba4: test ecx, ecx
467ba6: setg r8b
467baa: jle 0x467bb4
467bac: test dl, dl
467bae: jne 0x467af0
467bb4: test bl, 0x40
467bb7: je 0x467b4d
467bb9: mov eax, dword ptr [rbp - 0xbc]
467bbf: test eax, eax
467bc1: je 0x468658
467bc7: mov rax, qword ptr [r12 + 0xa0]
467bcf: test rax, rax
467bd2: je 0x469f3c
467bd8: mov rdx, qword ptr [rax + 0x20]
467bdc: cmp rdx, qword ptr [rax + 0x28]
467be0: jae 0x469f3c
467be6: lea rsi, [rdx + 4]
467bea: mov qword ptr [rax + 0x20], rsi
467bee: mov dword ptr [rdx], 0x2b
467bf4: nop dword ptr [rax]
467bf8: add r13d, 1
467bfc: mov eax, dword ptr [rbp - 0xbc]
467c02: test eax, eax
467c04: je 0x468520
467c0a: mov rax, qword ptr [r12 + 0xa0]
467c12: mov esi, dword ptr [r15]
467c15: test rax, rax
467c18: je 0x468680
467c1e: mov rdx, qword ptr [rax + 0x20]
467c22: cmp rdx, qword ptr [rax + 0x28]
467c26: jae 0x468680
467c2c: lea rdi, [rdx + 4]
467c30: mov qword ptr [rax + 0x20], rdi
467c34: mov dword ptr [rdx], esi
467c36: cmp esi, -1
467c39: je 0x468648
467c3f: mov esi, dword ptr [r15 + 4]
467c43: add r13d, 1
467c47: lea rbx, [r15 + 8]
467c4b: mov rdx, qword ptr [rax + 0x20]
467c4f: cmp qword ptr [rax + 0x28], rdx
467c53: jbe 0x4686c5
467c59: lea rdi, [rdx + 4]
467c5d: mov qword ptr [rax + 0x20], rdi
467c61: mov dword ptr [rdx], esi
467c63: cmp esi, -1
467c66: je 0x468648
467c6c: mov esi, dword ptr [rbx]
467c6e: add r13d, 1
467c72: mov rdx, qword ptr [rax + 0x20]
467c76: cmp rdx, qword ptr [rax + 0x28]
467c7a: jae 0x468708
467c80: lea rdi, [rdx + 4]
467c84: cmp esi, -1
467c87: mov qword ptr [rax + 0x20], rdi
467c8b: sete al
467c8e: mov dword ptr [rdx], esi
467c90: test al, al
467c92: jne 0x468648
467c98: mov rax, qword ptr [rbp - 0xb8]
467c9f: add r13d, 1
467ca3: test byte ptr [rax + 0xc], 0x20
467ca7: je 0x467cd9
467ca9: test r8b, r8b
467cac: je 0x467cd9
467cae: movsxd rbx, ecx
467cb1: mov esi, 0x20
467cb6: mov rdi, r12
467cb9: mov dword ptr [rbp - 0xb8], ecx
467cbf: mov rdx, rbx
467cc2: call 0x474150
467cc7: mov ecx, dword ptr [rbp - 0xb8]
467ccd: cmp rax, rbx
467cd0: jne 0x468648
467cd6: add r13d, ecx
467cd9: mov rax, qword ptr [rbp - 0x38]
467cdd: xor rax, qword ptr fs:[0x28]
467ce6: jne 0x46a392
467cec: lea rsp, [rbp - 0x28]
467cf0: mov eax, r13d
467cf3: pop rbx
467cf4: pop r12
467cf6: pop r13
467cf8: pop r14
467cfa: pop r15
467cfc: pop rbp
467cfd: ret 
467cfe: nop 
467d00: sub ecx, 4
467d03: test ecx, ecx
467d05: setg r8b
467d09: jg 0x467bac
467d0f: jmp 0x467bb4
467d14: nop dword ptr [rax]
467d18: mov rax, qword ptr [r12 + 0x28]
467d1d: cmp rax, qword ptr [r12 + 0x30]
467d22: jae 0x469eee
467d28: lea rdx, [rax + 1]
467d2c: mov qword ptr [r12 + 0x28], rdx
467d31: mov byte ptr [rax], 0x2d
467d34: jmp 0x467bf8
467d39: nop dword ptr [rax]
467d40: call 0x418850
467d45: mov ecx, dword ptr [rbp - 0xd0]
467d4b: jmp 0x467b1d
467d50: test sil, sil
467d53: mov rsi, qword ptr [rbp - 0xf8]
467d5a: jne 0x468758
467d60: mov rdx, qword ptr [rsi + 8]
467d64: mov rsi, qword ptr [rdx + 0x48]
467d68: mov qword ptr [rbp - 0x110], rsi
467d6f: mov rdi, rsi
467d72: cmp byte ptr [rdi], 1
467d75: mov edx, 0
467d7a: sbb esi, esi
467d7c: not esi
467d7e: and esi, 0xfffffffe
467d81: cmp byte ptr [rdi], 0
467d84: cmovne rdx, qword ptr [rbp - 0xe8]
467d8c: mov dword ptr [rbp - 0x114], esi
467d92: mov qword ptr [rbp - 0xe8], rdx
467d99: jmp 0x467835
467d9e: nop 
467da0: lea r15, [rbp - 0x60]
467da4: lea rcx, [rbp - 0xa4]
467dab: mov esi, 2
467db0: lea rdx, [rbp - 0x98]
467db7: mov rdi, r15
467dba: call 0x487160
467dbf: mov ecx, eax
467dc1: mov qword ptr [rbp - 0x88], rax
467dc8: mov r13, rax
467dcb: shl ecx, 6
467dce: lea r14d, [rcx - 0x34]
467dd2: mov ecx, dword ptr [rbp - 0x98]
467dd8: mov rbx, rsp
467ddb: mov edx, ecx
467ddd: sar edx, 0x1f
467de0: mov eax, edx
467de2: xor eax, ecx
467de4: sub eax, edx
467de6: add eax, 0x3f
467de9: sar eax, 6
467dec: add eax, 4
467def: cdqe 
467df1: lea rax, [rax*8 + 0x17]
467df9: mov rsi, rax
467dfc: mov rdx, rax
467dff: and rsi, 0xfffffffffffff000
467e06: and rdx, 0xfffffffffffffff0
467e0a: sub rbx, rsi
467e0d: mov rsi, rbx
467e10: cmp rsp, rsi
467e13: je 0x467e2a
467e15: sub rsp, 0x1000
467e1c: or qword ptr [rsp + 0xff8], 0
467e25: cmp rsp, rsi
467e28: jne 0x467e15
467e2a: and edx, 0xfff
467e30: sub rsp, rdx
467e33: test rdx, rdx
467e36: jne 0x46876f
467e3c: mov rsi, rax
467e3f: mov rbx, rsp
467e42: lea rdi, [rsp + 0xf]
467e47: mov rdx, rax
467e4a: and rsi, 0xfffffffffffff000
467e51: and rdi, 0xfffffffffffffff0
467e55: and rdx, 0xfffffffffffffff0
467e59: sub rbx, rsi
467e5c: mov qword ptr [rbp - 0x90], rdi
467e63: mov rsi, rbx
467e66: cmp rsp, rsi
467e69: je 0x467e80
467e6b: sub rsp, 0x1000
467e72: or qword ptr [rsp + 0xff8], 0
467e7b: cmp rsp, rsi
467e7e: jne 0x467e6b
467e80: and edx, 0xfff
467e86: sub rsp, rdx
467e89: test rdx, rdx
467e8c: je 0x467e94
467e8e: or qword ptr [rsp + rdx - 8], 0
467e94: lea rdx, [rsp + 0xf]
467e99: mov rbx, rsp
467e9c: and rdx, 0xfffffffffffffff0
467ea0: mov qword ptr [rbp - 0x70], rdx
467ea4: mov rdx, rax
467ea7: and rax, 0xfffffffffffff000
467ead: sub rbx, rax
467eb0: and rdx, 0xfffffffffffffff0
467eb4: mov rax, rbx
467eb7: cmp rsp, rax
467eba: je 0x467ed1
467ebc: sub rsp, 0x1000
467ec3: or qword ptr [rsp + 0xff8], 0
467ecc: cmp rsp, rax
467ecf: jne 0x467ebc
467ed1: and edx, 0xfff
467ed7: sub rsp, rdx
467eda: test rdx, rdx
467edd: je 0x467ee5
467edf: or qword ptr [rsp + rdx - 8], 0
467ee5: lea rax, [rsp + 0xf]
467eea: mov qword ptr [rbp - 0x78], 0
467ef2: and rax, 0xfffffffffffffff0
467ef6: mov qword ptr [rbp - 0x80], rax
467efa: cmp ecx, 2
467efd: jle 0x46901b
467f03: lea eax, [rcx + r14]
467f07: test eax, eax
467f09: lea edx, [rax + 0x3f]
467f0c: cmovns edx, eax
467f0f: sar edx, 6
467f12: test al, 0x3f
467f14: jne 0x469740
467f1a: mov rax, r13
467f1d: sub rax, 1
467f21: js 0x469b92
467f27: movsxd rbx, edx
467f2a: mov rsi, r15
467f2d: mov dword ptr [rbp - 0xd0], ecx
467f33: lea rdx, [r13*8]
467f3b: lea rdi, [rdi + rbx*8]
467f3f: call 0x401060
467f44: mov ecx, dword ptr [rbp - 0xd0]
467f4a: add r13, rbx
467f4d: mov rdx, rbx
467f50: mov qword ptr [rbp - 0x88], r13
467f57: test rdx, rdx
467f5a: jle 0x467f7a
467f5c: mov rdi, qword ptr [rbp - 0x90]
467f63: shl rdx, 3
467f67: xor esi, esi
467f69: mov dword ptr [rbp - 0xd0], ecx
467f6f: call 0x401110
467f74: mov ecx, dword ptr [rbp - 0xd0]
467f7a: mov r13d, 0xc
467f80: xor r14d, r14d
467f83: xor eax, eax
467f85: mov rdx, qword ptr [rbp - 0x78]
467f89: lea r15, [rip + 0x44788]
467f90: mov qword ptr [rbp - 0xd0], r12
467f97: mov r12d, r14d
467f9a: mov r14d, r13d
467f9d: lea rbx, [r15 - 0x138]
467fa4: mov r13d, eax
467fa7: jmp 0x46800e
467fa9: nop dword ptr [rax]
467fb0: mov rax, qword ptr [rbp - 0xb8]
467fb7: test byte ptr [rax + 0xd], 0x10
467fbb: jne 0x4687a0
467fc1: mov rdx, qword ptr [r15 + 8]
467fc5: mov rax, qword ptr [r15]
467fc8: lea rsi, [rip + 0x44791]
467fcf: mov qword ptr [rbp - 0x68], rdx
467fd3: lea rsi, [rsi + rax*8]
467fd7: shl rdx, 3
467fdb: call 0x401060
467fe0: mov rdx, qword ptr [rbp - 0x68]
467fe4: cmp qword ptr [rbp - 0x88], rdx
467feb: jg 0x468070
467ff1: je 0x469060
467ff7: mov rdx, qword ptr [rbp - 0x78]
467ffb: sub r14d, 1
467fff: cmp r15, rbx
468002: je 0x4680c3
468008: mov ecx, dword ptr [rbp - 0x98]
46800e: mov eax, dword ptr [r15 - 8]
468012: sub r15, 0x18
468016: add eax, r12d
468019: sub eax, 1
46801c: cmp eax, ecx
46801e: jg 0x467ffb
468020: mov rdi, qword ptr [rbp - 0x70]
468024: test rdx, rdx
468027: je 0x467fb0
468029: mov rcx, qword ptr [r15]
46802c: mov rax, qword ptr [r15 + 8]
468030: lea rsi, [rip + 0x44729]
468037: lea rcx, [rsi + rcx*8 + 8]
46803c: mov rsi, qword ptr [rbp - 0x80]
468040: lea r8, [rax - 1]
468044: call 0x485bb0
468049: mov rdx, qword ptr [r15 + 8]
46804d: add rdx, qword ptr [rbp - 0x78]
468051: test rax, rax
468054: je 0x4687e8
46805a: sub rdx, 1
46805e: mov qword ptr [rbp - 0x68], rdx
468062: cmp qword ptr [rbp - 0x88], rdx
468069: jle 0x467ff1
46806b: nop dword ptr [rax + rax]
468070: mov rsi, qword ptr [rbp - 0x70]
468074: mov rdi, qword ptr [rbp - 0x80]
468078: mov qword ptr [rbp - 0x78], rdx
46807c: shl rdx, 3
468080: call 0x401060
468085: mov rdx, qword ptr [rbp - 0x78]
468089: mov rax, qword ptr [rbp - 0x80]
46808d: bsr rax, qword ptr [rax + rdx*8 - 8]
468093: mov ecx, edx
468095: shl ecx, 6
468098: lea r10d, [rcx - 0x81]
46809f: mov ecx, r14d
4680a2: sub r14d, 1
4680a6: xor rax, 0x3f
4680aa: sub r10d, eax
4680ad: mov eax, 1
4680b2: shl eax, cl
4680b4: mov r12d, r10d
4680b7: or r13d, eax
4680ba: cmp r15, rbx
4680bd: jne 0x468008
4680c3: mov dword ptr [rbp - 0x98], r13d
4680ca: mov r12, qword ptr [rbp - 0xd0]
4680d1: test rdx, rdx
4680d4: jle 0x468140
4680d6: mov rdi, qword ptr [rbp - 0x80]
4680da: bsr rsi, qword ptr [rdi + rdx*8 - 8]
4680e0: mov rax, qword ptr [rdi]
4680e3: xor rsi, 0x3f
4680e7: mov ecx, esi
4680e9: test rax, rax
4680ec: jne 0x46a245
4680f2: mov r9, qword ptr [rbp - 0x90]
4680f9: mov rsi, rdi
4680fc: xor r14d, r14d
4680ff: jmp 0x468124
468101: nop dword ptr [rax]
468108: mov r8, qword ptr [rsi + 8]
46810c: lea ebx, [rax + 1]
46810f: add rsi, 8
468113: add rax, 1
468117: add r14, 8
46811b: test r8, r8
46811e: jne 0x4698f4
468124: mov r8, qword ptr [r9 + r14]
468128: mov ebx, eax
46812a: test r8, r8
46812d: je 0x468108
46812f: test ecx, ecx
468131: jne 0x469e37
468137: test ebx, ebx
468139: jne 0x469dc1
46813f: nop 
468140: mov rcx, qword ptr [rbp - 0xb8]
468147: mov eax, dword ptr [rcx + 4]
46814a: movsxd rdx, dword ptr [rcx + 8]
46814e: mov ecx, dword ptr [rcx]
468150: mov dword ptr [rbp - 0x138], eax
468156: mov rax, 0xffffffffffffffe0
46815d: mov rbx, rdx
468160: mov rax, qword ptr fs:[rax]
468164: mov dword ptr [rbp - 0xf0], ecx
46816a: mov eax, dword ptr [rax + rdx*4]
46816d: mov dword ptr [rbp - 0x13c], eax
468173: cmp al, 0x65
468175: je 0x469128
46817b: cmp byte ptr [rbp - 0x13c], 0x66
468182: je 0x469258
468188: mov dword ptr [rbp - 0x128], 6
468192: test ecx, ecx
468194: js 0x4681a4
468196: mov eax, 1
46819b: cmovne eax, ecx
46819e: mov dword ptr [rbp - 0x128], eax
4681a4: mov r14d, dword ptr [rbp - 0xa0]
4681ab: mov eax, dword ptr [rbp - 0x98]
4681b1: test r14d, r14d
4681b4: je 0x4692e0
4681ba: cmp eax, 4
4681bd: jg 0x469700
4681c3: mov dword ptr [rbp - 0x9c], 0x66
4681cd: mov eax, dword ptr [rbp - 0x128]
4681d3: mov dword ptr [rbp - 0x118], 0
4681dd: mov dword ptr [rbp - 0xe0], eax
4681e3: movsxd rax, dword ptr [rbp - 0x128]
4681ea: mov ebx, 0x66
4681ef: add rax, 5
4681f3: mov qword ptr [rbp - 0x120], rax
4681fa: mov rax, qword ptr [rbp - 0xb8]
468201: xor esi, esi
468203: test byte ptr [rax + 0xc], 8
468207: mov eax, dword ptr [rbp - 0xe0]
46820d: cmove eax, esi
468210: mov dword ptr [rbp - 0xf0], eax
468216: cmp qword ptr [rbp - 0xe8], 0
46821e: je 0x4691d0
468224: mov rax, qword ptr [rbp - 0xe8]
46822b: movzx eax, byte ptr [rax]
46822e: mov byte ptr [rbp - 0xd0], al
468234: sub eax, 1
468237: cmp al, 0x7d
468239: ja 0x469240
46823f: mov edx, dword ptr [rbp - 0x118]
468245: mov rax, qword ptr [rbp - 0xe8]
46824c: xor r9d, r9d
46824f: jmp 0x46827d
468251: nop dword ptr [rax]
468258: movzx r8d, byte ptr [rax + 1]
46825d: add rax, 1
468261: lea ecx, [r9 + 1]
468265: sub edx, edi
468267: cmp r8b, 0x7e
46826b: ja 0x4697b8
468271: test r8b, r8b
468274: je 0x4697c9
46827a: mov r9d, ecx
46827d: movsx edi, byte ptr [rax]
468280: cmp edx, edi
468282: ja 0x468258
468284: mov eax, r9d
468287: mov dword ptr [rbp - 0x124], r9d
46828e: add eax, 1
468291: cdqe 
468293: add qword ptr [rbp - 0x120], rax
46829a: movabs rax, 0x3ffffffffffffffc
4682a4: cmp qword ptr [rbp - 0x120], rax
4682ab: ja 0x4696e0
4682b1: movsxd rax, dword ptr [rbp - 0xe0]
4682b8: mov rcx, qword ptr [rbp - 0x120]
4682bf: mov dword ptr [rbp - 0xd0], esi
4682c5: cmp rax, rcx
4682c8: ja 0x4696e0
4682ce: lea r15, [rcx*4 + 8]
4682d6: mov rdi, r15
4682d9: call 0x421200
4682de: mov esi, dword ptr [rbp - 0xd0]
4682e4: test eax, eax
4682e6: jne 0x4682f5
4682e8: cmp r15, 0x1000
4682ef: ja 0x469d6a
4682f5: add r15, 0x17
4682f9: mov rdx, rsp
4682fc: mov rax, r15
4682ff: and r15, 0xfffffffffffff000
468306: sub rdx, r15
468309: and rax, 0xfffffffffffffff0
46830d: cmp rsp, rdx
468310: je 0x468327
468312: sub rsp, 0x1000
468319: or qword ptr [rsp + 0xff8], 0
468322: cmp rsp, rdx
468325: jne 0x468312
468327: and eax, 0xfff
46832c: sub rsp, rax
46832f: test rax, rax
468332: je 0x46833a
468334: or qword ptr [rsp + rax - 8], 0
46833a: mov dword ptr [rbp - 0x140], 1
468344: lea rax, [rsp + 0xf]
468349: and rax, 0xfffffffffffffff0
46834d: mov qword ptr [rbp - 0x130], rax
468354: mov r13d, dword ptr [rbp - 0xa0]
46835b: lea r14, [rax + 8]
46835f: test r13d, r13d
468362: je 0x46836d
468364: cmp ebx, 0x66
468367: je 0x4698c3
46836d: mov eax, dword ptr [rbp - 0x118]
468373: test eax, eax
468375: jle 0x469eb8
46837b: sub eax, 1
46837e: mov rbx, qword ptr [rbp - 0x130]
468385: mov r15, r14
468388: lea r13, [rbp - 0xa0]
46838f: mov qword ptr [rbp - 0xd0], rax
468396: lea rbx, [rbx + rax*4 + 0xc]
46839b: nop dword ptr [rax + rax]
4683a0: mov rdi, r13
4683a3: add r15, 4
4683a7: call 0x467300
4683ac: mov dword ptr [r15 - 4], eax
4683b0: cmp r15, rbx
4683b3: jne 0x4683a0
4683b5: mov ebx, dword ptr [rbp - 0x118]
4683bb: mov rax, qword ptr [rbp - 0xd0]
4683c2: mov dword ptr [rbp - 0x134], ebx
4683c8: lea rax, [r14 + rax*4 + 4]
4683cd: mov rbx, qword ptr [rbp - 0xb8]
4683d4: test byte ptr [rbx + 0xc], 8
4683d8: jne 0x4683e8
4683da: mov ebx, dword ptr [rbp - 0xf0]
4683e0: test ebx, ebx
4683e2: jle 0x469887
4683e8: mov ebx, dword ptr [rbp - 0xc0]
4683ee: lea r15, [rax + 4]
4683f2: mov esi, 1
4683f7: mov dword ptr [rax], ebx
4683f9: mov eax, dword ptr [rbp - 0xf0]
4683ff: xor ebx, ebx
468401: mov qword ptr [rbp - 0x148], r12
468408: mov r12, r13
46840b: mov dword ptr [rbp - 0x100], 0
468415: mov r13d, ebx
468418: mov ebx, esi
46841a: mov dword ptr [rbp - 0xd0], eax
468420: mov eax, dword ptr [rbp - 0xd0]
468426: mov r9d, eax
468429: cmp eax, r13d
46842c: jg 0x468449
46842e: cmp dword ptr [rbp - 0xe0], r13d
468435: jle 0x468809
46843b: cmp qword ptr [rbp - 0x88], 1
468443: jle 0x4687f8
468449: mov rdi, r12
46844c: add r13d, 1
468450: add r15, 4
468454: call 0x467300
468459: mov dword ptr [r15 - 4], eax
46845d: test ebx, ebx
46845f: jne 0x46846a
468461: cmp eax, 0x30
468464: je 0x468ea8
46846a: mov eax, dword ptr [rbp - 0xd0]
468470: mov ebx, 1
468475: mov r9d, eax
468478: cmp eax, r13d
46847b: jle 0x46842e
46847d: jmp 0x468449
46847f: nop 
468480: lea r15, [rbp - 0x60]
468484: sub rsp, 0x10
468488: lea rcx, [rbp - 0xa4]
46848f: mov esi, 2
468494: lea rdx, [rbp - 0x98]
46849b: mov rdi, r15
46849e: fstp xword ptr [rsp]
4684a1: call 0x4871f0
4684a6: mov ecx, eax
4684a8: mov qword ptr [rbp - 0x88], rax
4684af: mov r13, rax
4684b2: shl ecx, 6
4684b5: lea r14d, [rcx - 0x3f]
4684b9: pop rcx
4684ba: pop rsi
4684bb: jmp 0x467dd2
4684c0: movmskps r13d, xmm2
4684c4: and r13d, 8
4684c8: mov rax, qword ptr [rbp - 0xb8]
4684cf: mov dword ptr [rbp - 0xa4], r13d
4684d6: lea r15, [rip + 0x40c3b]
4684dd: lea r14, [rip + 0x40c21]
4684e4: movsxd rdx, dword ptr [rax + 8]
4684e8: mov rax, 0xfffffffffffffff0
4684ef: mov rax, qword ptr fs:[rax]
4684f3: movzx eax, word ptr [rax + rdx*2]
4684f7: lea rdx, [rip + 0x40c3a]
4684fe: and ax, 0x100
468502: lea rax, [rip + 0x40c04]
468509: cmove r15, rdx
46850d: cmove r14, rax
468511: jmp 0x467918
468516: nop word ptr cs:[rax + rax]
468520: movzx edx, byte ptr [r14]
468524: mov rax, qword ptr [r12 + 0x28]
468529: cmp qword ptr [r12 + 0x30], rax
46852e: jbe 0x469a90
468534: lea rsi, [rax + 1]
468538: mov qword ptr [r12 + 0x28], rsi
46853d: mov byte ptr [rax], dl
46853f: movzx edx, byte ptr [r14 + 1]
468544: mov rax, qword ptr [r12 + 0x28]
468549: cmp qword ptr [r12 + 0x30], rax
46854e: jbe 0x469a59
468554: lea rsi, [rax + 1]
468558: mov qword ptr [r12 + 0x28], rsi
46855d: mov byte ptr [rax], dl
46855f: movzx edx, byte ptr [r14 + 2]
468564: mov rax, qword ptr [r12 + 0x28]
468569: cmp rax, qword ptr [r12 + 0x30]
46856e: jae 0x469b1d
468574: lea rsi, [rax + 1]
468578: mov qword ptr [r12 + 0x28], rsi
46857d: mov byte ptr [rax], dl
46857f: mov rax, qword ptr [rbp - 0xb8]
468586: add r13d, 3
46858a: test byte ptr [rax + 0xc], 0x20
46858e: je 0x467cd9
468594: test r8b, r8b
468597: je 0x467cd9
46859d: movsxd rbx, ecx
4685a0: mov esi, 0x20
4685a5: mov rdi, r12
4685a8: mov dword ptr [rbp - 0xb8], ecx
4685ae: mov rdx, rbx
4685b1: call 0x418850
4685b6: mov ecx, dword ptr [rbp - 0xb8]
4685bc: jmp 0x467ccd
4685c1: nop dword ptr [rax]
4685c8: lea r15, [rbp - 0x60]
4685cc: lea rcx, [rbp - 0xa4]
4685d3: movdqa xmm0, xmm2
4685d7: mov esi, 2
4685dc: lea rdx, [rbp - 0x98]
4685e3: mov rdi, r15
4685e6: call 0x4872b0
4685eb: mov ecx, eax
4685ed: mov qword ptr [rbp - 0x88], rax
4685f4: mov r13, rax
4685f7: shl ecx, 6
4685fa: lea r14d, [rcx - 0x70]
4685fe: jmp 0x467dd2
468603: mov dword ptr [rbp - 0xe0], r9d
46860a: mov esi, 0x2d
46860f: mov rdi, r12
468612: call 0x474890
468617: mov r9d, dword ptr [rbp - 0xe0]
46861e: cmp eax, -1
468621: sete al
468624: test al, al
468626: je 0x468bfb
46862c: mov r8d, dword ptr [rbp - 0x140]
468633: test r8d, r8d
468636: jne 0x468648
468638: mov rdi, qword ptr [rbp - 0x130]
46863f: call 0x426a00
468644: nop dword ptr [rax]
468648: mov r13d, 0xffffffff
46864e: jmp 0x467cd9
468653: nop dword ptr [rax + rax]
468658: mov rax, qword ptr [r12 + 0x28]
46865d: cmp rax, qword ptr [r12 + 0x30]
468662: jae 0x46a11e
468668: lea rdx, [rax + 1]
46866c: mov qword ptr [r12 + 0x28], rdx
468671: mov byte ptr [rax], 0x2b
468674: jmp 0x467bf8
468679: nop dword ptr [rax]
468680: mov rdi, r12
468683: mov byte ptr [rbp - 0xe0], r8b
46868a: mov dword ptr [rbp - 0xd0], ecx
468690: call 0x474890
468695: mov ecx, dword ptr [rbp - 0xd0]
46869b: movzx r8d, byte ptr [rbp - 0xe0]
4686a3: cmp eax, -1
4686a6: je 0x468648
4686a8: mov rax, qword ptr [r12 + 0xa0]
4686b0: mov esi, dword ptr [r15 + 4]
4686b4: add r13d, 1
4686b8: lea rbx, [r15 + 8]
4686bc: test rax, rax
4686bf: jne 0x467c4b
4686c5: mov rdi, r12
4686c8: mov byte ptr [rbp - 0xe0], r8b
4686cf: mov dword ptr [rbp - 0xd0], ecx
4686d5: call 0x474890
4686da: mov ecx, dword ptr [rbp - 0xd0]
4686e0: movzx r8d, byte ptr [rbp - 0xe0]
4686e8: cmp eax, -1
4686eb: je 0x468648
4686f1: mov rax, qword ptr [r12 + 0xa0]
4686f9: mov esi, dword ptr [rbx]
4686fb: add r13d, 1
4686ff: test rax, rax
468702: jne 0x467c72
468708: mov rdi, r12
46870b: mov byte ptr [rbp - 0xe0], r8b
468712: mov dword ptr [rbp - 0xd0], ecx
468718: call 0x474890
46871d: mov ecx, dword ptr [rbp - 0xd0]
468723: movzx r8d, byte ptr [rbp - 0xe0]
46872b: cmp eax, -1
46872e: sete al
468731: jmp 0x467c90
468736: nop word ptr cs:[rax + rax]
468740: mov rdx, qword ptr [rsi + 0x20]
468744: mov esi, dword ptr [rdx + 0x1a0]
46874a: mov dword ptr [rbp - 0x114], esi
468750: jmp 0x467a2b
468755: nop dword ptr [rax]
468758: mov rdx, qword ptr [rsi + 0x20]
46875c: mov rsi, qword ptr [rdx + 0x58]
468760: mov qword ptr [rbp - 0x110], rsi
468767: mov rdi, rsi
46876a: jmp 0x467d72
46876f: or qword ptr [rsp + rdx - 8], 0
468775: jmp 0x467e3c
46877a: mov rax, qword ptr [r12 + 0x28]
46877f: cmp rax, qword ptr [r12 + 0x30]
468784: jae 0x46a312
46878a: lea rdx, [rax + 1]
46878e: mov qword ptr [r12 + 0x28], rdx
468793: mov byte ptr [rax], 0x20
468796: jmp 0x467bf8
46879b: nop dword ptr [rax + rax]
4687a0: mov rax, qword ptr [r15 + 8]
4687a4: lea rsi, [rip + 0x43fb5]
4687ab: add rdi, 8
4687af: lea rdx, [rax + 1]
4687b3: mov rax, qword ptr [r15]
4687b6: mov qword ptr [rbp - 0x68], rdx
4687ba: shl rdx, 3
4687be: lea rsi, [rsi + rax*8]
4687c2: call 0x401060
4687c7: mov rax, qword ptr [rbp - 0x70]
4687cb: mov qword ptr [rax], 0
4687d2: mov rdx, qword ptr [rbp - 0x68]
4687d6: add dword ptr [rbp - 0x98], 0x40
4687dd: jmp 0x467fe4
4687e2: nop word ptr [rax + rax]
4687e8: sub rdx, 2
4687ec: mov qword ptr [rbp - 0x68], rdx
4687f0: jmp 0x467fe4
4687f5: nop dword ptr [rax]
4687f8: mov rax, qword ptr [rbp - 0x90]
4687ff: cmp qword ptr [rax], 0
468803: jne 0x468449
468809: mov ebx, r13d
46880c: mov r13, r12
46880f: mov r12, qword ptr [rbp - 0x148]
468816: mov edx, dword ptr [r15 - 4]
46881a: cmp edx, dword ptr [rbp - 0xc0]
468820: jne 0x468826
468822: mov edx, dword ptr [r15 - 8]
468826: mov rdi, r13
468829: mov dword ptr [rbp - 0xe0], edx
46882f: mov dword ptr [rbp - 0xd0], r9d
468836: call 0x467300
46883b: mov r9d, dword ptr [rbp - 0xd0]
468842: mov edx, dword ptr [rbp - 0xe0]
468848: cmp eax, 0x30
46884b: setne dil
46884f: cmp eax, 0x35
468852: setne sil
468856: and dil, sil
468859: jne 0x46889b
46885b: mov rsi, qword ptr [rbp - 0x88]
468862: cmp rsi, 1
468866: je 0x469861
46886c: cmp qword ptr [rbp - 0x78], 0
468871: jne 0x468896
468873: mov r10, qword ptr [rbp - 0x90]
46887a: test rsi, rsi
46887d: jne 0x46888e
46887f: jmp 0x46889b
468881: nop dword ptr [rax]
468888: sub rsi, 1
46888c: je 0x46889b
46888e: cmp qword ptr [r10 + rsi*8 - 8], 0
468894: je 0x468888
468896: mov edi, 1
46889b: fnstcw word ptr [rbp - 0xa6]
4688a1: movzx esi, word ptr [rbp - 0xa6]
4688a8: and si, 0xc00
4688ad: cmp si, 0x800
4688b2: je 0x469590
4688b8: ja 0x468ee0
4688be: test si, si
4688c1: jne 0x468ef0
4688c7: cmp eax, 0x34
4688ca: jle 0x4688e0
4688cc: and edx, 1
4688cf: jne 0x468f14
4688d5: test dil, dil
4688d8: jne 0x468f14
4688de: nop 
4688e0: cmp ebx, r9d
4688e3: jg 0x4688fc
4688e5: jmp 0x468903
4688e7: nop word ptr [rax + rax]
4688f0: sub ebx, 1
4688f3: sub r15, 4
4688f7: cmp ebx, r9d
4688fa: jle 0x468903
4688fc: cmp dword ptr [r15 - 4], 0x30
468901: je 0x4688f0
468903: test ebx, ebx
468905: jne 0x468928
468907: mov rax, qword ptr [rbp - 0xb8]
46890e: test byte ptr [rax + 0xc], 8
468912: jne 0x468928
468914: mov eax, dword ptr [rbp - 0xc0]
46891a: cmp dword ptr [r15 - 4], eax
46891e: jne 0x468928
468920: sub r15, 4
468924: nop dword ptr [rax]
468928: mov rsi, qword ptr [rbp - 0xe8]
46892f: test rsi, rsi
468932: je 0x468a8a
468938: mov edx, dword ptr [rbp - 0x134]
46893e: mov eax, dword ptr [rbp - 0x118]
468944: mov ebx, edx
468946: cmp edx, eax
468948: je 0x468997
46894a: mov dword ptr [rbp - 0x124], 0
468954: movzx eax, byte ptr [rsi]
468957: mov byte ptr [rbp - 0xd0], al
46895d: sub eax, 1
468960: cmp al, 0x7d
468962: ja 0x468a8a
468968: mov rax, rsi
46896b: xor esi, esi
46896d: jmp 0x46898a
46896f: nop 
468970: movzx ecx, byte ptr [rax + 1]
468974: add rax, 1
468978: add esi, 1
46897b: sub edx, edi
46897d: cmp cl, 0x7e
468980: ja 0x468991
468982: test cl, cl
468984: je 0x469da1
46898a: movsx edi, byte ptr [rax]
46898d: cmp edx, edi
46898f: ja 0x468970
468991: mov dword ptr [rbp - 0x124], esi
468997: mov ecx, dword ptr [rbp - 0x124]
46899d: test ecx, ecx
46899f: je 0x468a8a
4689a5: movsxd rax, dword ptr [rbp - 0x134]
4689ac: movsxd r13, ecx
4689af: mov rdx, r15
4689b2: lea rsi, [r14 + rax*4]
4689b6: add rax, r13
4689b9: lea rcx, [rax*4]
4689c1: sub rdx, rsi
4689c4: lea rdi, [r14 + rcx]
4689c8: sar rdx, 2
4689cc: mov qword ptr [rbp - 0xd0], rcx
4689d3: call 0x476c20
4689d8: mov rcx, qword ptr [rbp - 0xd0]
4689df: mov r8d, dword ptr [rbp - 0x114]
4689e6: lea rdi, [r14 + rcx - 4]
4689eb: mov rcx, qword ptr [rbp - 0xe8]
4689f2: movsx r9d, byte ptr [rcx]
4689f6: nop word ptr cs:[rax + rax]
468a00: mov esi, ebx
468a02: mov rax, rdi
468a05: sub esi, r9d
468a08: nop dword ptr [rax + rax]
468a10: lea edx, [rbx - 1]
468a13: sub rax, 4
468a17: mov rbx, rdx
468a1a: mov edx, dword ptr [r14 + rdx*4]
468a1e: mov dword ptr [rax + 4], edx
468a21: cmp ebx, esi
468a23: jne 0x468a10
468a25: lea eax, [r9 - 1]
468a29: mov rdx, rax
468a2c: neg rax
468a2f: not rdx
468a32: lea rdx, [rdi + rdx*4]
468a36: lea rdi, [rdi + rax*4 - 8]
468a3b: mov dword ptr [rdx], r8d
468a3e: movsx r9d, byte ptr [rcx + 1]
468a43: cmp r9b, 0x7e
468a47: ja 0x468a70
468a49: test r9b, r9b
468a4c: je 0x468a60
468a4e: add rcx, 1
468a52: cmp r9d, esi
468a55: jae 0x468a70
468a57: mov ebx, esi
468a59: jmp 0x468a00
468a5b: nop dword ptr [rax + rax]
468a60: movsx r9d, byte ptr [rcx]
468a64: cmp r9d, esi
468a67: jb 0x468a57
468a69: nop dword ptr [rax]
468a70: lea eax, [rsi - 1]
468a73: sub rdi, 4
468a77: mov rsi, rax
468a7a: mov eax, dword ptr [r14 + rax*4]
468a7e: mov dword ptr [rdi + 4], eax
468a81: cmp rdi, r14
468a84: ja 0x468a70
468a86: lea r15, [r15 + r13*4]
468a8a: mov edx, dword ptr [rbp - 0x9c]
468a90: cmp edx, 0x66
468a93: je 0x468b1b
468a99: mov esi, dword ptr [rbp - 0xa0]
468a9f: mov eax, dword ptr [rbp - 0x98]
468aa5: test esi, esi
468aa7: jne 0x469f53
468aad: mov dword ptr [r15], edx
468ab0: mov edx, 0x2b
468ab5: mov dword ptr [r15 + 4], edx
468ab9: lea rsi, [r15 + 8]
468abd: cmp eax, 9
468ac0: jle 0x4691bd
468ac6: mov ecx, 0xa
468acb: nop dword ptr [rax + rax]
468ad0: lea ecx, [rcx + rcx*4]
468ad3: add ecx, ecx
468ad5: cmp ecx, eax
468ad7: jle 0x468ad0
468ad9: nop dword ptr [rax]
468ae0: movsxd rcx, ecx
468ae3: add rsi, 4
468ae7: mov rdi, rcx
468aea: imul rcx, rcx, 0x66666667
468af1: mov edx, edi
468af3: sar edx, 0x1f
468af6: sar rcx, 0x22
468afa: sub ecx, edx
468afc: cdq 
468afd: idiv ecx
468aff: add eax, 0x30
468b02: mov dword ptr [rsi - 4], eax
468b05: mov eax, edx
468b07: cmp edi, 0x6d
468b0a: jg 0x468ae0
468b0c: mov dword ptr [rbp - 0x98], edx
468b12: add eax, 0x30
468b15: lea r15, [rsi + 4]
468b19: mov dword ptr [rsi], eax
468b1b: mov rbx, qword ptr [rbp - 0xb8]
468b22: mov eax, dword ptr [rbp - 0xa4]
468b28: mov r13, r15
468b2b: sub r13, r14
468b2e: movzx ebx, byte ptr [rbx + 0xc]
468b32: test eax, eax
468b34: jne 0x468fb0
468b3a: test bl, 0x50
468b3d: jne 0x468fb0
468b43: mov esi, dword ptr [rbp - 0x138]
468b49: mov rax, r13
468b4c: sar rax, 2
468b50: sub esi, eax
468b52: mov dword ptr [rbp - 0xd0], esi
468b58: test bl, 0x20
468b5b: jne 0x4697b0
468b61: mov rax, qword ptr [rbp - 0xb8]
468b68: mov esi, dword ptr [rax + 0x10]
468b6b: cmp esi, 0x30
468b6e: je 0x4697b0
468b74: mov eax, dword ptr [rbp - 0xd0]
468b7a: test eax, eax
468b7c: jle 0x4697b0
468b82: movsxd rbx, dword ptr [rbp - 0xd0]
468b89: mov ecx, dword ptr [rbp - 0xbc]
468b8f: mov rdi, r12
468b92: mov rdx, rbx
468b95: test ecx, ecx
468b97: je 0x469d97
468b9d: call 0x474150
468ba2: cmp rax, rbx
468ba5: jne 0x46862c
468bab: mov eax, dword ptr [rbp - 0xa4]
468bb1: mov r9d, dword ptr [rbp - 0xd0]
468bb8: test eax, eax
468bba: je 0x4691e0
468bc0: mov eax, dword ptr [rbp - 0xbc]
468bc6: test eax, eax
468bc8: je 0x4695e8
468bce: mov rax, qword ptr [r12 + 0xa0]
468bd6: test rax, rax
468bd9: je 0x468603
468bdf: mov rdx, qword ptr [rax + 0x20]
468be3: cmp rdx, qword ptr [rax + 0x28]
468be7: jae 0x468603
468bed: lea rsi, [rdx + 4]
468bf1: mov qword ptr [rax + 0x20], rsi
468bf5: mov dword ptr [rdx], 0x2d
468bfb: mov rax, qword ptr [rbp - 0xb8]
468c02: add r9d, 1
468c06: movzx eax, byte ptr [rax + 0xc]
468c0a: test al, 0x20
468c0c: jne 0x468c29
468c0e: mov rax, qword ptr [rbp - 0xb8]
468c15: cmp dword ptr [rax + 0x10], 0x30
468c19: jne 0x468c29
468c1b: mov eax, dword ptr [rbp - 0xd0]
468c21: test eax, eax
468c23: jg 0x469d22
468c29: mov r11d, dword ptr [rbp - 0xbc]
468c30: mov rax, qword ptr [rbp - 0xb8]
468c37: test r11d, r11d
468c3a: jne 0x469088
468c40: test byte ptr [rax + 0xd], 8
468c44: je 0x468c65
468c46: mov rax, qword ptr [rbp - 0xf8]
468c4d: mov rax, qword ptr [rax]
468c50: mov eax, dword ptr [rax + 0xa8]
468c56: imul rax, qword ptr [rbp - 0x120]
468c5e: mov qword ptr [rbp - 0x120], rax
468c65: mov rdi, qword ptr [rbp - 0x108]
468c6c: mov dword ptr [rbp - 0xe0], r9d
468c73: call 0x401180
468c78: mov rdi, qword ptr [rbp - 0x110]
468c7f: mov r9d, dword ptr [rbp - 0xe0]
468c86: mov rbx, rax
468c89: test rdi, rdi
468c8c: je 0x469a4f
468c92: call 0x401180
468c97: mov r9d, dword ptr [rbp - 0xe0]
468c9e: mov r13, rax
468ca1: movsxd rax, dword ptr [rbp - 0x124]
468ca8: imul rax, r13
468cac: mov rdx, rax
468caf: mov rax, qword ptr [rbp - 0x120]
468cb6: lea rax, [rax + rbx + 2]
468cbb: add rax, rdx
468cbe: cmp dword ptr [rbp - 0x140], 1
468cc5: mov qword ptr [rbp - 0xf0], rax
468ccc: jne 0x46a057
468cd2: add rax, 0x17
468cd6: mov rsi, rsp
468cd9: mov rdx, rax
468cdc: and rax, 0xfffffffffffff000
468ce2: sub rsi, rax
468ce5: and rdx, 0xfffffffffffffff0
468ce9: mov rax, rsi
468cec: cmp rsp, rax
468cef: je 0x468d06
468cf1: sub rsp, 0x1000
468cf8: or qword ptr [rsp + 0xff8], 0
468d01: cmp rsp, rax
468d04: jne 0x468cf1
468d06: and edx, 0xfff
468d0c: sub rsp, rdx
468d0f: test rdx, rdx
468d12: je 0x468d1a
468d14: or qword ptr [rsp + rdx - 8], 0
468d1a: lea rax, [rsp + 0xf]
468d1f: and rax, 0xfffffffffffffff0
468d23: mov qword ptr [rbp - 0xe0], rax
468d2a: cmp r15, r14
468d2d: jbe 0x469fc3
468d33: mov qword ptr [rbp - 0xe8], r13
468d3a: mov rdi, qword ptr [rbp - 0xe0]
468d41: mov qword ptr [rbp - 0x100], r12
468d48: mov r13d, dword ptr [rbp - 0x114]
468d4f: mov r12, r15
468d52: mov r15, r14
468d55: mov dword ptr [rbp - 0xf8], r9d
468d5c: mov r14, rbx
468d5f: mov ebx, dword ptr [rbp - 0xc0]
468d65: jmp 0x468d88
468d67: nop word ptr [rax + rax]
468d70: cmp r13d, edx
468d73: je 0x469000
468d79: mov byte ptr [rdi], dl
468d7b: add rdi, 1
468d7f: add r15, 4
468d83: cmp r12, r15
468d86: jbe 0x468daa
468d88: mov edx, dword ptr [r15]
468d8b: cmp edx, ebx
468d8d: jne 0x468d70
468d8f: mov rsi, qword ptr [rbp - 0x108]
468d96: mov rdx, r14
468d99: add r15, 4
468d9d: call 0x401150
468da2: mov rdi, rax
468da5: cmp r12, r15
468da8: ja 0x468d88
468daa: mov rax, qword ptr [rbp - 0xb8]
468db1: mov r9d, dword ptr [rbp - 0xf8]
468db8: mov r12, qword ptr [rbp - 0x100]
468dbf: test byte ptr [rax + 0xd], 8
468dc3: jne 0x46a01f
468dc9: mov r14, qword ptr [rbp - 0xe0]
468dd0: mov rbx, rdi
468dd3: sub rbx, r14
468dd6: mov r8, rbx
468dd9: cmp rbx, 0x14
468ddd: jle 0x469610
468de3: mov rbx, qword ptr [r12 + 0xd8]
468deb: mov rax, 0x4c1b60
468df2: mov rsi, 0x4c2208
468df9: mov rdx, rbx
468dfc: sub rdx, rax
468dff: sub rsi, rax
468e02: cmp rdx, rsi
468e05: jae 0x46a1fc
468e0b: mov rax, qword ptr [rbx + 0x38]
468e0f: mov dword ptr [rbp - 0xf0], r9d
468e16: mov rdx, r8
468e19: mov rsi, r14
468e1c: mov rdi, r12
468e1f: mov qword ptr [rbp - 0xe8], r8
468e26: call rax
468e28: mov r8, qword ptr [rbp - 0xe8]
468e2f: mov r9d, dword ptr [rbp - 0xf0]
468e36: cmp rax, r8
468e39: jne 0x46862c
468e3f: lea r13d, [r9 + r8]
468e43: cmp dword ptr [rbp - 0x140], 1
468e4a: jne 0x469ed1
468e50: mov rax, qword ptr [rbp - 0xb8]
468e57: test byte ptr [rax + 0xc], 0x20
468e5b: je 0x467cd9
468e61: movsxd rbx, dword ptr [rbp - 0xd0]
468e68: test ebx, ebx
468e6a: jle 0x467cd9
468e70: mov r9d, dword ptr [rbp - 0xbc]
468e77: mov esi, dword ptr [rax + 0x10]
468e7a: mov rdx, rbx
468e7d: mov rdi, r12
468e80: test r9d, r9d
468e83: je 0x469c81
468e89: call 0x474150
468e8e: cmp rax, rbx
468e91: jne 0x46862c
468e97: add r13d, dword ptr [rbp - 0xd0]
468e9e: jmp 0x467cd9
468ea3: nop dword ptr [rax + rax]
468ea8: mov eax, dword ptr [rbp - 0xf0]
468eae: add dword ptr [rbp - 0xe0], 1
468eb5: test eax, eax
468eb7: jle 0x468420
468ebd: add dword ptr [rbp - 0x100], 1
468ec4: mov ecx, dword ptr [rbp - 0x100]
468eca: add eax, ecx
468ecc: mov dword ptr [rbp - 0xd0], eax
468ed2: jmp 0x468420
468ed7: nop word ptr [rax + rax]
468ee0: cmp si, 0xc00
468ee5: je 0x4688e0
468eeb: jmp 0x4015ff
468ef0: cmp si, 0x400
468ef5: jne 0x46a3d1
468efb: mov r8d, dword ptr [rbp - 0xa4]
468f02: test r8d, r8d
468f05: je 0x4688e0
468f0b: cmp eax, 0x34
468f0e: jle 0x4688d5
468f14: mov esi, dword ptr [r15 - 4]
468f18: lea rax, [r15 - 4]
468f1c: test ebx, ebx
468f1e: je 0x469175
468f24: mov edx, dword ptr [rbp - 0xc0]
468f2a: xor edi, edi
468f2c: cmp dword ptr [rbp - 0xc0], esi
468f32: jne 0x468f58
468f34: jmp 0x469bd8
468f39: nop dword ptr [rax]
468f40: mov dword ptr [rax], 0x30
468f46: mov esi, dword ptr [rax - 4]
468f49: sub rax, 4
468f4d: add edi, 1
468f50: cmp esi, edx
468f52: je 0x469bd8
468f58: cmp esi, 0x39
468f5b: je 0x468f40
468f5d: cmp edi, dword ptr [rbp - 0xf0]
468f63: jne 0x468f90
468f65: mov edi, dword ptr [rbp - 0x100]
468f6b: test edi, edi
468f6d: jle 0x468f90
468f6f: sub dword ptr [rbp - 0x100], 1
468f76: mov r9d, dword ptr [rbp - 0x100]
468f7d: cmp esi, dword ptr [rbp - 0xc0]
468f83: je 0x469bee
468f89: add r9d, dword ptr [rbp - 0xf0]
468f90: add esi, 1
468f93: mov dword ptr [rax], esi
468f95: cmp dword ptr [rbp - 0xc0], esi
468f9b: je 0x46916e
468fa1: cmp ebx, r9d
468fa4: jg 0x4688fc
468faa: jmp 0x468928
468faf: nop 
468fb0: mov esi, dword ptr [rbp - 0x138]
468fb6: mov rdx, r13
468fb9: sar rdx, 2
468fbd: sub esi, 1
468fc0: mov ecx, esi
468fc2: sub ecx, edx
468fc4: and ebx, 0x20
468fc7: mov dword ptr [rbp - 0xd0], ecx
468fcd: jne 0x468ff0
468fcf: mov rbx, qword ptr [rbp - 0xb8]
468fd6: mov esi, dword ptr [rbx + 0x10]
468fd9: test ecx, ecx
468fdb: jle 0x468ff0
468fdd: cmp esi, 0x30
468fe0: jne 0x468b82
468fe6: nop word ptr cs:[rax + rax]
468ff0: xor r9d, r9d
468ff3: jmp 0x468bb8
468ff8: nop dword ptr [rax + rax]
469000: mov rdx, qword ptr [rbp - 0xe8]
469007: mov rsi, qword ptr [rbp - 0x110]
46900e: call 0x401150
469013: mov rdi, rax
469016: jmp 0x468d7f
46901b: test ecx, ecx
46901d: js 0x469318
469023: mov rdx, r13
469026: add ecx, r14d
469029: mov rsi, r15
46902c: call 0x485980
469031: mov r8, rax
469034: mov rax, qword ptr [rbp - 0x88]
46903b: lea rdx, [rax + 1]
46903f: mov qword ptr [rbp - 0x88], rdx
469046: mov rdx, qword ptr [rbp - 0x90]
46904d: mov qword ptr [rdx + rax*8], r8
469051: mov dword ptr [rbp - 0x98], 0
46905b: jmp 0x468140
469060: mov rsi, qword ptr [rbp - 0x70]
469064: mov rdi, qword ptr [rbp - 0x90]
46906b: call 0x4852e0
469070: mov rdx, qword ptr [rbp - 0x68]
469074: test eax, eax
469076: jns 0x468070
46907c: jmp 0x467ff7
469081: nop dword ptr [rax]
469088: test byte ptr [rax + 0xd], 8
46908c: jne 0x469ffa
469092: sar r13, 2
469096: mov r8, r13
469099: cmp r15, r14
46909c: jne 0x4695a8
4690a2: lea ebx, [r13 + 1]
4690a6: test r13, r13
4690a9: je 0x46a329
4690af: mov rdi, r12
4690b2: mov r15, r13
4690b5: mov r12d, ebx
4690b8: mov ebx, r9d
4690bb: jmp 0x4690f3
4690bd: nop dword ptr [rax]
4690c0: mov rdx, qword ptr [rax + 0x20]
4690c4: cmp rdx, qword ptr [rax + 0x28]
4690c8: jae 0x469107
4690ca: lea rcx, [rdx + 4]
4690ce: cmp esi, -1
4690d1: mov qword ptr [rax + 0x20], rcx
4690d5: sete al
4690d8: mov dword ptr [rdx], esi
4690da: test al, al
4690dc: jne 0x46862c
4690e2: lea r13d, [r12 + rbx]
4690e6: sub r13d, r15d
4690e9: sub r15, 1
4690ed: je 0x469c8b
4690f3: mov rax, qword ptr [rdi + 0xa0]
4690fa: add r14, 4
4690fe: mov esi, dword ptr [r14 - 4]
469102: test rax, rax
469105: jne 0x4690c0
469107: mov qword ptr [rbp - 0xe0], rdi
46910e: call 0x474890
469113: mov rdi, qword ptr [rbp - 0xe0]
46911a: cmp eax, -1
46911d: sete al
469120: jmp 0x4690da
469122: nop word ptr [rax + rax]
469128: movsxd rax, ecx
46912b: mov dword ptr [rbp - 0x9c], edx
469131: test eax, eax
469133: js 0x469847
469139: add rax, 8
46913d: mov qword ptr [rbp - 0x120], rax
469144: mov eax, dword ptr [rbp - 0xf0]
46914a: mov esi, 1
46914f: mov dword ptr [rbp - 0x128], 0x7fffffff
469159: mov dword ptr [rbp - 0x118], 1
469163: mov dword ptr [rbp - 0xe0], eax
469169: jmp 0x468216
46916e: mov esi, dword ptr [rax - 4]
469171: sub rax, 4
469175: lea rdi, [rax - 4]
469179: cmp dword ptr [rbp - 0xc0], esi
46917f: cmove rax, rdi
469183: cmp r14, rax
469186: jbe 0x4691a3
469188: jmp 0x4697e2
46918d: nop dword ptr [rax]
469190: mov dword ptr [rax], 0x30
469196: sub rax, 4
46919a: cmp r14, rax
46919d: ja 0x4697e2
4691a3: mov esi, dword ptr [rax]
4691a5: cmp esi, 0x39
4691a8: je 0x469190
4691aa: cmp rax, r14
4691ad: jb 0x4697e2
4691b3: add esi, 1
4691b6: mov dword ptr [rax], esi
4691b8: jmp 0x4688e0
4691bd: mov dword ptr [r15 + 8], 0x30
4691c5: lea rsi, [r15 + 0xc]
4691c9: jmp 0x468b12
4691ce: nop 
4691d0: mov dword ptr [rbp - 0x124], 0
4691da: jmp 0x4682b1
4691df: nop 
4691e0: mov rax, qword ptr [rbp - 0xb8]
4691e7: movzx ebx, byte ptr [rax + 0xc]
4691eb: mov eax, ebx
4691ed: test bl, 0x40
4691f0: je 0x469690
4691f6: mov eax, dword ptr [rbp - 0xbc]
4691fc: test eax, eax
4691fe: je 0x469c60
469204: mov rax, qword ptr [r12 + 0xa0]
46920c: test rax, rax
46920f: je 0x46a234
469215: mov rdx, qword ptr [rax + 0x20]
469219: cmp rdx, qword ptr [rax + 0x28]
46921d: jae 0x46a234
469223: lea rsi, [rdx + 4]
469227: mov qword ptr [rax + 0x20], rsi
46922b: mov dword ptr [rdx], 0x2b
469231: jmp 0x468bfb
469236: nop word ptr cs:[rax + rax]
469240: mov dword ptr [rbp - 0x124], 0
46924a: mov eax, 1
46924f: jmp 0x468293
469254: nop dword ptr [rax]
469258: mov dword ptr [rbp - 0x9c], 0x66
469262: movsxd rdx, ecx
469265: test ecx, ecx
469267: jns 0x469278
469269: mov dword ptr [rbp - 0xf0], 6
469273: mov edx, 6
469278: mov eax, dword ptr [rbp - 0xa0]
46927e: mov dword ptr [rbp - 0x124], eax
469284: test eax, eax
469286: jne 0x469b58
46928c: movsxd rax, dword ptr [rbp - 0x98]
469293: cmp qword ptr [rbp - 0xe8], 0
46929b: mov esi, 1
4692a0: mov dword ptr [rbp - 0x128], 0x7fffffff
4692aa: lea ebx, [rax + 1]
4692ad: lea rax, [rdx + rax + 2]
4692b2: mov qword ptr [rbp - 0x120], rax
4692b9: mov eax, dword ptr [rbp - 0xf0]
4692bf: mov dword ptr [rbp - 0x118], ebx
4692c5: mov ebx, 0x66
4692ca: mov dword ptr [rbp - 0xe0], eax
4692d0: jne 0x468224
4692d6: jmp 0x46829a
4692db: nop dword ptr [rax + rax]
4692e0: cmp dword ptr [rbp - 0x128], eax
4692e6: jle 0x469700
4692ec: mov ebx, dword ptr [rbp - 0x128]
4692f2: add eax, 1
4692f5: mov dword ptr [rbp - 0x9c], 0x66
4692ff: mov dword ptr [rbp - 0x118], eax
469305: sub ebx, eax
469307: mov dword ptr [rbp - 0xe0], ebx
46930d: jmp 0x4681e3
469312: nop word ptr [rax + rax]
469318: mov rdx, r13
46931b: mov rsi, r15
46931e: mov ecx, r14d
469321: mov r13d, 0xc
469327: call 0x485980
46932c: mov esi, dword ptr [rbp - 0x98]
469332: mov dword ptr [rbp - 0xd0], 0
46933c: lea rbx, [rip + 0x433d5]
469343: mov r8, rax
469346: mov rax, qword ptr [rbp - 0x88]
46934d: mov qword ptr [rbp - 0xe0], r12
469354: neg esi
469356: lea rdx, [rax + 1]
46935a: mov qword ptr [rbp - 0x88], rdx
469361: mov rdx, qword ptr [rbp - 0x90]
469368: mov qword ptr [rdx + rax*8], r8
46936c: mov dword ptr [rbp - 0xa0], 1
469376: mov dword ptr [rbp - 0x98], esi
46937c: jmp 0x469425
469381: nop dword ptr [rax]
469388: lea r10, [rcx + rax*8 + 8]
46938d: mov r8, r9
469390: mov rcx, rsi
469393: mov rsi, r10
469396: call 0x485bb0
46939b: mov rsi, qword ptr [rbp - 0x88]
4693a2: mov r8, qword ptr [rbx + 8]
4693a6: add r8, rsi
4693a9: test rax, rax
4693ac: je 0x469470
4693b2: sub r8, 1
4693b6: mov qword ptr [rbp - 0x68], r8
4693ba: mov r10, qword ptr [rbp - 0x70]
4693be: lea rdx, [r8*8]
4693c6: mov r14, r8
4693c9: sub r14, rsi
4693cc: lea rax, [r10 + rdx - 8]
4693d1: add r14, 1
4693d5: bsr rcx, qword ptr [rax]
4693d9: shl r14d, 6
4693dd: xor rcx, 0x3f
4693e1: mov esi, ecx
4693e3: mov r12d, ecx
4693e6: not esi
4693e8: add r14d, esi
4693eb: mov esi, dword ptr [rbp - 0x98]
4693f1: lea edi, [rsi + 3]
4693f4: cmp edi, r14d
4693f7: je 0x469538
4693fd: lea eax, [rsi + 2]
469400: cmp r14d, eax
469403: jle 0x469488
469409: lea rax, [rip + 0x431e8]
469410: sub r13d, 1
469414: cmp rbx, rax
469417: je 0x46999f
46941d: test esi, esi
46941f: jle 0x469db5
469425: sub rbx, 0x18
469429: cmp dword ptr [rbx + 0x14], esi
46942c: jg 0x469409
46942e: mov rax, qword ptr [rbx + 8]
469432: mov rdi, qword ptr [rbp - 0x70]
469436: lea rcx, [rip + 0x43323]
46943d: mov r9, qword ptr [rbp - 0x88]
469444: mov rsi, qword ptr [rbp - 0x90]
46944b: lea rdx, [rax - 1]
46944f: mov rax, qword ptr [rbx]
469452: cmp r9, rdx
469455: jl 0x469388
46945b: mov r8, rdx
46945e: lea rcx, [rcx + rax*8 + 8]
469463: mov rdx, r9
469466: call 0x485bb0
46946b: jmp 0x46939b
469470: sub r8, 2
469474: mov qword ptr [rbp - 0x68], r8
469478: jmp 0x4693ba
46947d: mov r10, qword ptr [rbp - 0x70]
469481: mov r8, qword ptr [rbp - 0x68]
469485: nop dword ptr [rax]
469488: mov eax, 1
46948d: mov ecx, r13d
469490: sub esi, r14d
469493: shl eax, cl
469495: or dword ptr [rbp - 0xd0], eax
46949b: mov eax, r12d
46949e: sub eax, esi
4694a0: test esi, esi
4694a2: mov dword ptr [rbp - 0x98], esi
4694a8: cmovs r12d, eax
4694ac: mov rax, qword ptr [r10]
4694af: test rax, rax
4694b2: jne 0x46a096
4694b8: lea rdx, [r10 + 8]
4694bc: mov eax, 1
4694c1: nop dword ptr [rax]
4694c8: mov rcx, qword ptr [rdx]
4694cb: lea r9d, [rax - 1]
4694cf: movsxd rdi, eax
4694d2: mov r14, rdx
4694d5: lea r11, [rax*8]
4694dd: mov r15, rax
4694e0: add rdx, 8
4694e4: add rax, 1
4694e8: test rcx, rcx
4694eb: je 0x4694c8
4694ed: cmp r12d, 0x3f
4694f1: jne 0x469ac8
4694f7: sub r8, rdi
4694fa: test r8, r8
4694fd: jle 0x469528
4694ff: mov r9, qword ptr [rbp - 0x90]
469506: lea rcx, [r10 + r15*8]
46950a: xor eax, eax
46950c: nop dword ptr [rax]
469510: mov rdx, qword ptr [rcx + rax*8]
469514: mov qword ptr [r9 + rax*8], rdx
469518: mov r8, qword ptr [rbp - 0x68]
46951c: add rax, 1
469520: sub r8, rdi
469523: cmp r8, rax
469526: jg 0x469510
469528: mov qword ptr [rbp - 0x88], r8
46952f: jmp 0x469409
469534: nop dword ptr [rax]
469538: cmp ecx, 0x3c
46953b: jg 0x469c9e
469541: mov ecx, 0x3c
469546: mov edi, 0xa
46954b: mov qword ptr [rbp - 0x50], 0
469553: sub ecx, r12d
469556: shl rdi, cl
469559: mov qword ptr [rbp - 0x48], rdi
46955d: mov rcx, rdi
469560: lea edi, [rsi + 2]
469563: cmp r14d, edi
469566: jle 0x469488
46956c: cmp qword ptr [rax], rcx
46956f: jb 0x469488
469575: jne 0x469409
46957b: mov rax, qword ptr [rbp - 0x50]
46957f: cmp qword ptr [r10 + rdx - 0x10], rax
469584: jae 0x469409
46958a: jmp 0x469488
46958f: nop 
469590: mov r10d, dword ptr [rbp - 0xa4]
469597: test r10d, r10d
46959a: jne 0x4688e0
4695a0: jmp 0x468f0b
4695a5: nop dword ptr [rax]
4695a8: mov rbx, qword ptr [r12 + 0xd8]
4695b0: mov rax, 0x4c1b60
4695b7: mov rcx, 0x4c2208
4695be: mov rdx, rbx
4695c1: sub rdx, rax
4695c4: sub rcx, rax
4695c7: cmp rdx, rcx
4695ca: jae 0x46a1a1
4695d0: mov qword ptr [rbp - 0xe0], 0
4695db: mov rax, qword ptr [rbx + 0x38]
4695df: jmp 0x468e0f
4695e4: nop dword ptr [rax]
4695e8: mov rax, qword ptr [r12 + 0x28]
4695ed: cmp rax, qword ptr [r12 + 0x30]
4695f2: jae 0x46a1d6
4695f8: lea rdx, [rax + 1]
4695fc: mov qword ptr [r12 + 0x28], rdx
469601: mov byte ptr [rax], 0x2d
469604: jmp 0x468bfb
469609: nop dword ptr [rax]
469610: mov r15, r14
469613: mov r13d, r9d
469616: test rbx, rbx
469619: jne 0x469643
46961b: jmp 0x469fd0
469620: lea rdx, [rax + 1]
469624: mov qword ptr [r12 + 0x28], rdx
469629: mov byte ptr [rax], sil
46962c: mov rdx, r14
46962f: lea eax, [r13 + r15]
469634: sub rdx, r15
469637: sub eax, r14d
46963a: add rdx, rbx
46963d: je 0x469738
469643: add r15, 1
469647: mov rax, qword ptr [r12 + 0x28]
46964c: movzx esi, byte ptr [r15 - 1]
469651: cmp rax, qword ptr [r12 + 0x30]
469656: jb 0x469620
469658: mov rdi, r12
46965b: call 0x41e8a0
469660: cmp eax, -1
469663: jne 0x46962c
469665: mov r10d, dword ptr [rbp - 0x140]
46966c: mov r13d, eax
46966f: test r10d, r10d
469672: jne 0x468648
469678: mov rdi, qword ptr [rbp - 0x130]
46967f: call 0x426a00
469684: jmp 0x467cd9
469689: nop dword ptr [rax]
469690: and ebx, 0x10
469693: je 0x468c0a
469699: mov eax, dword ptr [rbp - 0xbc]
46969f: test eax, eax
4696a1: je 0x469f72
4696a7: mov rax, qword ptr [r12 + 0xa0]
4696af: test rax, rax
4696b2: je 0x46a33c
4696b8: mov rdx, qword ptr [rax + 0x20]
4696bc: cmp rdx, qword ptr [rax + 0x28]
4696c0: jae 0x46a33c
4696c6: lea rsi, [rdx + 4]
4696ca: mov qword ptr [rax + 0x20], rsi
4696ce: mov dword ptr [rdx], 0x20
4696d4: jmp 0x468bfb
4696d9: nop dword ptr [rax]
4696e0: mov rax, 0xffffffffffffffc0
4696e7: mov r13d, 0xffffffff
4696ed: mov dword ptr fs:[rax], 0x22
4696f4: jmp 0x467cd9
4696f9: nop dword ptr [rax]
469700: mov eax, dword ptr [rbp - 0x128]
469706: sub ebx, 2
469709: mov dword ptr [rbp - 0x118], 1
469713: mov dword ptr [rbp - 0x9c], ebx
469719: sub eax, 1
46971c: mov dword ptr [rbp - 0xe0], eax
469722: cdqe 
469724: add rax, 8
469728: mov qword ptr [rbp - 0x120], rax
46972f: jmp 0x4681fa
469734: nop dword ptr [rax]
469738: mov r13d, eax
46973b: jmp 0x468e43
469740: mov esi, eax
469742: movsxd rdx, edx
469745: sar esi, 0x1f
469748: lea rdi, [rdi + rdx*8]
46974c: mov rdx, r13
46974f: shr esi, 0x1a
469752: lea ecx, [rax + rsi]
469755: and ecx, 0x3f
469758: sub ecx, esi
46975a: mov rsi, r15
46975d: call 0x485980
469762: mov ecx, dword ptr [rbp - 0x98]
469768: mov rsi, qword ptr [rbp - 0x88]
46976f: add r14d, ecx
469772: lea edx, [r14 + 0x3f]
469776: cmovns edx, r14d
46977a: sar edx, 6
46977d: movsxd rdx, edx
469780: add rsi, rdx
469783: mov qword ptr [rbp - 0x88], rsi
46978a: test rax, rax
46978d: je 0x467f57
469793: lea rdi, [rsi + 1]
469797: mov qword ptr [rbp - 0x88], rdi
46979e: mov rdi, qword ptr [rbp - 0x90]
4697a5: mov qword ptr [rdi + rsi*8], rax
4697a9: jmp 0x467f57
4697ae: nop 
4697b0: xor r9d, r9d
4697b3: jmp 0x4691eb
4697b8: lea eax, [r9 + 2]
4697bc: mov dword ptr [rbp - 0x124], ecx
4697c2: cdqe 
4697c4: jmp 0x468293
4697c9: lea eax, [rdx - 1]
4697cc: xor edx, edx
4697ce: div edi
4697d0: add eax, ecx
4697d2: mov dword ptr [rbp - 0x124], eax
4697d8: add eax, 1
4697db: cdqe 
4697dd: jmp 0x468293
4697e2: cmp dword ptr [rbp - 0x9c], 0x66
4697e9: je 0x469f93
4697ef: mov rax, qword ptr [rbp - 0x130]
4697f6: cmp dword ptr [rbp - 0xa0], 1
4697fd: mov dword ptr [rax + 8], 0x31
469804: sbb eax, eax
469806: and eax, 2
469809: sub eax, 1
46980c: add dword ptr [rbp - 0x98], eax
469812: jne 0x46981e
469814: mov dword ptr [rbp - 0xa0], 0
46981e: mov eax, dword ptr [rbp - 0x134]
469824: mov ecx, dword ptr [rbp - 0x128]
46982a: add eax, ebx
46982c: cmp eax, ecx
46982e: jle 0x4688e0
469834: sub eax, ecx
469836: movsxd rsi, eax
469839: sub ebx, eax
46983b: shl rsi, 2
46983f: sub r15, rsi
469842: jmp 0x4688e0
469847: mov qword ptr [rbp - 0x120], 0xe
469852: mov dword ptr [rbp - 0xf0], 6
46985c: jmp 0x469144
469861: mov r10, qword ptr [rbp - 0x90]
469868: cmp qword ptr [r10], 0
46986c: je 0x46889b
469872: cmp qword ptr [rbp - 0x78], 0
469877: mov esi, 1
46987c: je 0x46888e
469882: jmp 0x468896
469887: mov r11d, dword ptr [rbp - 0xe0]
46988e: test r11d, r11d
469891: jle 0x469f21
469897: cmp qword ptr [rbp - 0x88], 1
46989f: jg 0x4683e8
4698a5: mov rdx, qword ptr [rbp - 0x90]
4698ac: cmp qword ptr [rdx], 0
4698b0: jne 0x4683e8
4698b6: mov r15, rax
4698b9: mov esi, 1
4698be: jmp 0x4683f9
4698c3: mov ebx, dword ptr [rbp - 0xc0]
4698c9: lea r15, [rax + 0x10]
4698cd: sub dword ptr [rbp - 0x98], 1
4698d4: lea r13, [rbp - 0xa0]
4698db: mov dword ptr [rax + 8], 0x30
4698e2: mov dword ptr [rax + 0xc], ebx
4698e5: mov dword ptr [rbp - 0x134], 0
4698ef: jmp 0x4683f9
4698f4: test ecx, ecx
4698f6: je 0x469dc1
4698fc: xor eax, eax
4698fe: mov r9, qword ptr [r9 + r14]
469902: tzcnt rax, r8
469907: mov r8d, eax
46990a: test r9, r9
46990d: je 0x46a088
469913: xor r8d, r8d
469916: mov r15d, 0x40
46991c: tzcnt r8, r9
469921: cmp eax, r8d
469924: cmovle r8d, eax
469928: sub r15d, ecx
46992b: movsxd r13, ebx
46992e: cmp r15d, r8d
469931: jle 0x469e5b
469937: sub ebx, 1
46993a: sub r14, 8
46993e: mov ecx, r15d
469941: movsxd rbx, ebx
469944: lea rsi, [rdi + r14]
469948: sub rdx, rbx
46994b: call 0x485aa0
469950: mov rdi, qword ptr [rbp - 0x90]
469957: mov ecx, r15d
46995a: sub qword ptr [rbp - 0x78], r13
46995e: mov rdx, qword ptr [rbp - 0x88]
469965: lea rsi, [rdi + r14]
469969: sub rdx, rbx
46996c: call 0x485aa0
469971: mov rdx, qword ptr [rbp - 0x88]
469978: mov rcx, qword ptr [rbp - 0x90]
46997f: mov rax, rdx
469982: sub rax, rbx
469985: cmp qword ptr [rcx + rax*8 - 8], 0
46998b: jne 0x469993
46998d: mov rax, rdx
469990: sub rax, r13
469993: mov qword ptr [rbp - 0x88], rax
46999a: jmp 0x468140
46999f: mov r12, qword ptr [rbp - 0xe0]
4699a6: test esi, esi
4699a8: jle 0x469a3e
4699ae: mov rdx, qword ptr [rbp - 0x88]
4699b5: mov rdi, qword ptr [rbp - 0x70]
4699b9: mov ecx, 0xa
4699be: mov rsi, qword ptr [rbp - 0x90]
4699c5: call 0x486050
4699ca: mov rsi, qword ptr [rbp - 0x70]
4699ce: xor eax, eax
4699d0: mov ecx, 4
4699d5: mov rdx, qword ptr [rbp - 0x88]
4699dc: mov qword ptr [rbp - 0x68], rdx
4699e0: tzcnt rax, qword ptr [rsi]
4699e5: cmp dword ptr [rbp - 0x98], 4
4699ec: cmovle ecx, dword ptr [rbp - 0x98]
4699f3: cmp ecx, eax
4699f5: jle 0x469fd8
4699fb: mov eax, 0x40
469a00: mov rdi, qword ptr [rbp - 0x90]
469a07: sub eax, ecx
469a09: mov ecx, eax
469a0b: call 0x485980
469a10: test rax, rax
469a13: je 0x469a2c
469a15: mov rdx, qword ptr [rbp - 0x68]
469a19: lea rcx, [rdx + 1]
469a1d: mov qword ptr [rbp - 0x68], rcx
469a21: mov rcx, qword ptr [rbp - 0x90]
469a28: mov qword ptr [rcx + rdx*8], rax
469a2c: mov rax, qword ptr [rbp - 0x68]
469a30: or dword ptr [rbp - 0xd0], 1
469a37: mov qword ptr [rbp - 0x88], rax
469a3e: mov eax, dword ptr [rbp - 0xd0]
469a44: mov dword ptr [rbp - 0x98], eax
469a4a: jmp 0x468140
469a4f: xor edx, edx
469a51: xor r13d, r13d
469a54: jmp 0x468caf
469a59: movzx esi, dl
469a5c: mov rdi, r12
469a5f: mov byte ptr [rbp - 0xe0], r8b
469a66: mov dword ptr [rbp - 0xd0], ecx
469a6c: call 0x41e8a0
469a71: mov ecx, dword ptr [rbp - 0xd0]
469a77: movzx r8d, byte ptr [rbp - 0xe0]
469a7f: cmp eax, -1
469a82: jne 0x46855f
469a88: jmp 0x468648
469a8d: nop dword ptr [rax]
469a90: movzx esi, dl
469a93: mov rdi, r12
469a96: mov byte ptr [rbp - 0xe0], r8b
469a9d: mov dword ptr [rbp - 0xd0], ecx
469aa3: call 0x41e8a0
469aa8: mov ecx, dword ptr [rbp - 0xd0]
469aae: movzx r8d, byte ptr [rbp - 0xe0]
469ab6: cmp eax, -1
469ab9: jne 0x46853f
469abf: jmp 0x468648
469ac4: nop dword ptr [rax]
469ac8: xor eax, eax
469aca: mov esi, 0x3f
469acf: mov r15, qword ptr [rbp - 0x90]
469ad6: sub esi, r12d
469ad9: tzcnt rax, rcx
469ade: mov r12d, esi
469ae1: mov ecx, esi
469ae3: cmp eax, esi
469ae5: jge 0x46a226
469aeb: movsxd r14, r9d
469aee: mov rdx, r8
469af1: lea rsi, [r10 + r11 - 8]
469af6: mov ecx, r12d
469af9: sub rdx, r14
469afc: mov rdi, r15
469aff: call 0x485aa0
469b04: mov rax, qword ptr [rbp - 0x68]
469b08: mov esi, dword ptr [rbp - 0x98]
469b0e: sub rax, r14
469b11: mov qword ptr [rbp - 0x88], rax
469b18: jmp 0x469409
469b1d: movzx esi, dl
469b20: mov rdi, r12
469b23: mov byte ptr [rbp - 0xe0], r8b
469b2a: mov dword ptr [rbp - 0xd0], ecx
469b30: call 0x41e8a0
469b35: mov ecx, dword ptr [rbp - 0xd0]
469b3b: movzx r8d, byte ptr [rbp - 0xe0]
469b43: cmp eax, -1
469b46: jne 0x46857f
469b4c: jmp 0x468648
469b51: nop dword ptr [rax]
469b58: lea rax, [rdx + 2]
469b5c: mov ebx, 0x66
469b61: mov esi, 1
469b66: mov dword ptr [rbp - 0x128], 0x7fffffff
469b70: mov qword ptr [rbp - 0x120], rax
469b77: mov eax, dword ptr [rbp - 0xf0]
469b7d: mov dword ptr [rbp - 0x118], 1
469b87: mov dword ptr [rbp - 0xe0], eax
469b8d: jmp 0x468216
469b92: movsxd rbx, edx
469b95: jmp 0x467f4a
469b9a: mov byte ptr [rbp - 0xe0], r8b
469ba1: mov esi, 0x2d
469ba6: mov dword ptr [rbp - 0xd0], ecx
469bac: mov rdi, r12
469baf: call 0x474890
469bb4: mov ecx, dword ptr [rbp - 0xd0]
469bba: movzx r8d, byte ptr [rbp - 0xe0]
469bc2: cmp eax, -1
469bc5: sete al
469bc8: test al, al
469bca: je 0x467bf8
469bd0: jmp 0x468648
469bd5: nop dword ptr [rax]
469bd8: cmp edi, dword ptr [rbp - 0xf0]
469bde: jne 0x469bee
469be0: mov ecx, dword ptr [rbp - 0x100]
469be6: test ecx, ecx
469be8: jg 0x468f6f
469bee: mov r9d, dword ptr [rbp - 0xf0]
469bf5: add r9d, dword ptr [rbp - 0x100]
469bfc: cmp byte ptr [rbp - 0x13c], 0x67
469c03: mov esi, dword ptr [rax]
469c05: jne 0x468f95
469c0b: cmp dword ptr [rbp - 0x9c], 0x66
469c12: jne 0x468f95
469c18: mov rcx, qword ptr [rbp - 0xb8]
469c1f: test byte ptr [rcx + 0xc], 8
469c23: je 0x468f95
469c29: mov rcx, qword ptr [rbp - 0x130]
469c30: lea rdi, [rcx + 0xc]
469c34: cmp rax, rdi
469c37: jne 0x468f95
469c3d: cmp dword ptr [rcx + 8], 0x30
469c41: jne 0x468f95
469c47: mov ecx, dword ptr [rbp - 0x100]
469c4d: mov edi, dword ptr [rbp - 0xf0]
469c53: lea r9d, [rcx + rdi - 1]
469c58: jmp 0x468f95
469c5d: nop dword ptr [rax]
469c60: mov rax, qword ptr [r12 + 0x28]
469c65: cmp rax, qword ptr [r12 + 0x30]
469c6a: jae 0x46a34d
469c70: lea rdx, [rax + 1]
469c74: mov qword ptr [r12 + 0x28], rdx
469c79: mov byte ptr [rax], 0x2b
469c7c: jmp 0x468bfb
469c81: call 0x418850
469c86: jmp 0x468e8e
469c8b: mov qword ptr [rbp - 0xe0], 0
469c96: mov r12, rdi
469c99: jmp 0x468e43
469c9e: lea rdi, [rbp - 0x50]
469ca2: mov ecx, 0x40
469ca7: mov edx, 2
469cac: movdqa xmm3, xmmword ptr [rip + 0x3f50c]
469cb4: mov rsi, rdi
469cb7: sub ecx, r12d
469cba: movaps xmmword ptr [rbp - 0x50], xmm3
469cbe: call 0x485980
469cc3: mov esi, dword ptr [rbp - 0x98]
469cc9: lea eax, [rsi + 2]
469ccc: cmp eax, r14d
469ccf: jge 0x46947d
469cd5: lea eax, [rsi + 3]
469cd8: cmp eax, r14d
469cdb: jne 0x469409
469ce1: mov r8, qword ptr [rbp - 0x68]
469ce5: mov r10, qword ptr [rbp - 0x70]
469ce9: mov rcx, qword ptr [rbp - 0x48]
469ced: lea rdx, [r8*8]
469cf5: lea rax, [r10 + rdx - 8]
469cfa: jmp 0x46956c
469cff: movmskpd r13d, xmm0
469d04: and r13d, 1
469d08: jmp 0x4684c8
469d0d: fxam 
469d0f: fnstsw ax
469d11: fstp st(0)
469d13: mov r13d, eax
469d16: and r13d, 0x200
469d1d: jmp 0x4684c8
469d22: mov eax, dword ptr [rbp - 0xbc]
469d28: movsxd rbx, dword ptr [rbp - 0xd0]
469d2f: mov esi, 0x30
469d34: mov rdi, r12
469d37: mov dword ptr [rbp - 0xe0], r9d
469d3e: test eax, eax
469d40: mov rdx, rbx
469d43: je 0x469fe9
469d49: call 0x474150
469d4e: mov r9d, dword ptr [rbp - 0xe0]
469d55: cmp rax, rbx
469d58: jne 0x46862c
469d5e: add r9d, dword ptr [rbp - 0xd0]
469d65: jmp 0x468c29
469d6a: mov rdi, r15
469d6d: call 0x426410
469d72: mov qword ptr [rbp - 0x130], rax
469d79: test rax, rax
469d7c: je 0x468648
469d82: mov dword ptr [rbp - 0x140], 0
469d8c: mov esi, dword ptr [rbp - 0xd0]
469d92: jmp 0x468354
469d97: call 0x418850
469d9c: jmp 0x468ba2
469da1: lea eax, [rdx - 1]
469da4: xor edx, edx
469da6: div edi
469da8: add eax, esi
469daa: mov dword ptr [rbp - 0x124], eax
469db0: jmp 0x468997
469db5: mov r12, qword ptr [rbp - 0xe0]
469dbc: jmp 0x469a3e
469dc1: movsxd rbx, ebx
469dc4: sub rdx, rbx
469dc7: test rdx, rdx
469dca: jle 0x469df0
469dcc: lea rsi, [rdi + rax*8]
469dd0: xor ecx, ecx
469dd2: nop word ptr [rax + rax]
469dd8: mov rdx, qword ptr [rsi + rcx*8]
469ddc: mov qword ptr [rdi + rcx*8], rdx
469de0: mov rdx, qword ptr [rbp - 0x78]
469de4: add rcx, 1
469de8: sub rdx, rbx
469deb: cmp rdx, rcx
469dee: jg 0x469dd8
469df0: mov qword ptr [rbp - 0x78], rdx
469df4: mov rdx, qword ptr [rbp - 0x88]
469dfb: sub rdx, rbx
469dfe: test rdx, rdx
469e01: jle 0x469e2b
469e03: lea rcx, [r9 + rax*8]
469e07: xor eax, eax
469e09: nop dword ptr [rax]
469e10: mov rdx, qword ptr [rcx + rax*8]
469e14: mov qword ptr [r9 + rax*8], rdx
469e18: mov rdx, qword ptr [rbp - 0x88]
469e1f: add rax, 1
469e23: sub rdx, rbx
469e26: cmp rdx, rax
469e29: jg 0x469e10
469e2b: mov qword ptr [rbp - 0x88], rdx
469e32: jmp 0x468140
469e37: mov r15d, 0x40
469e3d: tzcnt r8, r8
469e42: sub r15d, ecx
469e45: test ebx, ebx
469e47: jne 0x46992b
469e4d: xor ebx, ebx
469e4f: xor r13d, r13d
469e52: cmp r15d, r8d
469e55: jg 0x46a14c
469e5b: sub rdx, r13
469e5e: mov ecx, r15d
469e61: add ebx, 1
469e64: call 0x485aa0
469e69: mov rdi, qword ptr [rbp - 0x90]
469e70: mov ecx, r15d
469e73: movsxd rbx, ebx
469e76: mov rdx, qword ptr [rbp - 0x88]
469e7d: sub qword ptr [rbp - 0x78], rbx
469e81: lea rsi, [rdi + r14]
469e85: sub rdx, r13
469e88: call 0x485aa0
469e8d: mov rdx, qword ptr [rbp - 0x88]
469e94: mov rcx, qword ptr [rbp - 0x90]
469e9b: mov rax, rdx
469e9e: sub rax, r13
469ea1: cmp qword ptr [rcx + rax*8 - 8], 0
469ea7: jne 0x469993
469ead: mov rax, rdx
469eb0: sub rax, rbx
469eb3: jmp 0x469993
469eb8: mov dword ptr [rbp - 0x134], 0
469ec2: mov rax, r14
469ec5: lea r13, [rbp - 0xa0]
469ecc: jmp 0x4683cd
469ed1: mov rdi, qword ptr [rbp - 0xe0]
469ed8: call 0x426a00
469edd: mov rdi, qword ptr [rbp - 0x130]
469ee4: call 0x426a00
469ee9: jmp 0x468e50
469eee: mov byte ptr [rbp - 0xe0], r8b
469ef5: mov esi, 0x2d
469efa: mov dword ptr [rbp - 0xd0], ecx
469f00: mov rdi, r12
469f03: call 0x41e8a0
469f08: mov ecx, dword ptr [rbp - 0xd0]
469f0e: movzx r8d, byte ptr [rbp - 0xe0]
469f16: cmp eax, -1
469f19: sete al
469f1c: jmp 0x469bc8
469f21: mov dword ptr [rbp - 0x100], 0
469f2b: mov r9d, dword ptr [rbp - 0xf0]
469f32: mov r15, rax
469f35: xor ebx, ebx
469f37: jmp 0x468816
469f3c: mov byte ptr [rbp - 0xe0], r8b
469f43: mov esi, 0x2b
469f48: mov dword ptr [rbp - 0xd0], ecx
469f4e: jmp 0x469bac
469f53: cmp byte ptr [rbp - 0x13c], 0x67
469f5a: jne 0x469f65
469f5c: cmp eax, 4
469f5f: je 0x46a3a1
469f65: mov dword ptr [r15], edx
469f68: mov edx, 0x2d
469f6d: jmp 0x468ab5
469f72: mov rax, qword ptr [r12 + 0x28]
469f77: cmp rax, qword ptr [r12 + 0x30]
469f7c: jae 0x46a35e
469f82: lea rdx, [rax + 1]
469f86: mov qword ptr [r12 + 0x28], rdx
469f8b: mov byte ptr [rax], 0x20
469f8e: jmp 0x468bfb
469f93: mov ecx, dword ptr [rbp - 0x128]
469f99: mov rax, qword ptr [rbp - 0x130]
469fa0: cmp dword ptr [rbp - 0x134], ecx
469fa6: je 0x46a28b
469fac: add dword ptr [rbp - 0x134], 1
469fb3: lea r14, [rax + 4]
469fb7: mov dword ptr [rax + 4], 0x31
469fbe: jmp 0x46981e
469fc3: mov rax, qword ptr [rbp - 0xb8]
469fca: test byte ptr [rax + 0xd], 8
469fce: jne 0x46a018
469fd0: mov r13d, r9d
469fd3: jmp 0x468e43
469fd8: mov rdi, qword ptr [rbp - 0x90]
469fdf: call 0x485aa0
469fe4: jmp 0x469a2c
469fe9: call 0x418850
469fee: mov r9d, dword ptr [rbp - 0xe0]
469ff5: jmp 0x469d55
469ffa: xor edx, edx
469ffc: xor esi, esi
469ffe: xor edi, edi
46a000: mov dword ptr [rbp - 0xe0], r9d
46a007: call 0x467450
46a00c: mov r9d, dword ptr [rbp - 0xe0]
46a013: jmp 0x469092
46a018: mov rdi, qword ptr [rbp - 0xe0]
46a01f: mov rax, qword ptr [rbp - 0xe0]
46a026: mov r15, qword ptr [rbp - 0xf0]
46a02d: mov rsi, rdi
46a030: mov dword ptr [rbp - 0xe8], r9d
46a037: add r15, rax
46a03a: mov rdi, rax
46a03d: mov rdx, r15
46a040: call 0x467450
46a045: mov r9d, dword ptr [rbp - 0xe8]
46a04c: mov rdi, r15
46a04f: mov r14, rax
46a052: jmp 0x468dd0
46a057: mov rdi, rax
46a05a: mov dword ptr [rbp - 0xe8], r9d
46a061: call 0x426410
46a066: mov r9d, dword ptr [rbp - 0xe8]
46a06d: test rax, rax
46a070: mov qword ptr [rbp - 0xe0], rax
46a077: jne 0x468d2a
46a07d: jmp 0x468638
46a082: nop word ptr [rax + rax]
46a088: mov r15d, 0x40
46a08e: sub r15d, ecx
46a091: jmp 0x46992b
46a096: cmp r12d, 0x3f
46a09a: je 0x46a397
46a0a0: mov ecx, 0x3f
46a0a5: tzcnt rax, rax
46a0aa: mov r15, qword ptr [rbp - 0x90]
46a0b1: sub ecx, r12d
46a0b4: cmp eax, ecx
46a0b6: jl 0x46a0e2
46a0b8: xor r12d, r12d
46a0bb: mov rsi, r10
46a0be: mov rdx, r8
46a0c1: mov rdi, r15
46a0c4: call 0x485aa0
46a0c9: mov rax, qword ptr [rbp - 0x68]
46a0cd: mov esi, dword ptr [rbp - 0x98]
46a0d3: sub rax, r12
46a0d6: mov qword ptr [rbp - 0x88], rax
46a0dd: jmp 0x469409
46a0e2: mov rdx, r8
46a0e5: mov rsi, r10
46a0e8: lea ecx, [r12 + 1]
46a0ed: mov rdi, r15
46a0f0: call 0x485980
46a0f5: mov rdx, qword ptr [rbp - 0x90]
46a0fc: mov esi, dword ptr [rbp - 0x98]
46a102: mov r8, rax
46a105: mov rax, qword ptr [rbp - 0x68]
46a109: add rax, 1
46a10d: mov qword ptr [rbp - 0x88], rax
46a114: mov qword ptr [rdx + rax*8 - 8], r8
46a119: jmp 0x469409
46a11e: mov byte ptr [rbp - 0xe0], r8b
46a125: mov esi, 0x2b
46a12a: mov dword ptr [rbp - 0xd0], ecx
46a130: jmp 0x469f00
46a135: mov byte ptr [rbp - 0xe0], r8b
46a13c: mov esi, 0x20
46a141: mov dword ptr [rbp - 0xd0], ecx
46a147: jmp 0x469bac
46a14c: mov rsi, rdi
46a14f: mov dword ptr [rbp - 0xd0], ecx
46a155: call 0x485980
46a15a: mov rdi, qword ptr [rbp - 0x90]
46a161: mov ecx, dword ptr [rbp - 0xd0]
46a167: mov rdx, qword ptr [rbp - 0x88]
46a16e: mov rsi, rdi
46a171: call 0x485980
46a176: test rax, rax
46a179: je 0x468140
46a17f: mov rdx, qword ptr [rbp - 0x88]
46a186: lea rcx, [rdx + 1]
46a18a: mov qword ptr [rbp - 0x88], rcx
46a191: mov rcx, qword ptr [rbp - 0x90]
46a198: mov qword ptr [rcx + rdx*8], rax
46a19c: jmp 0x468140
46a1a1: mov dword ptr [rbp - 0xe8], r9d
46a1a8: mov qword ptr [rbp - 0xf0], r13
46a1af: call 0x41b240
46a1b4: mov rax, qword ptr [rbx + 0x38]
46a1b8: mov qword ptr [rbp - 0xe0], 0
46a1c3: mov r9d, dword ptr [rbp - 0xe8]
46a1ca: mov r8, qword ptr [rbp - 0xf0]
46a1d1: jmp 0x468e0f
46a1d6: mov dword ptr [rbp - 0xe0], r9d
46a1dd: mov esi, 0x2d
46a1e2: mov rdi, r12
46a1e5: call 0x41e8a0
46a1ea: mov r9d, dword ptr [rbp - 0xe0]
46a1f1: cmp eax, -1
46a1f4: sete al
46a1f7: jmp 0x468624
46a1fc: mov qword ptr [rbp - 0xf0], r8
46a203: mov dword ptr [rbp - 0xe8], r9d
46a20a: call 0x41b240
46a20f: mov rax, qword ptr [rbx + 0x38]
46a213: mov r9d, dword ptr [rbp - 0xe8]
46a21a: mov r8, qword ptr [rbp - 0xf0]
46a221: jmp 0x468e0f
46a226: movsxd r12, edi
46a229: mov r10, r14
46a22c: sub r8, r12
46a22f: jmp 0x46a0bb
46a234: mov dword ptr [rbp - 0xe0], r9d
46a23b: mov esi, 0x2b
46a240: jmp 0x46860f
46a245: test esi, esi
46a247: je 0x468140
46a24d: mov rsi, qword ptr [rbp - 0x90]
46a254: tzcnt rax, rax
46a259: mov r8d, eax
46a25c: mov r14, qword ptr [rsi]
46a25f: test r14, r14
46a262: je 0x46a381
46a268: xor r8d, r8d
46a26b: mov r15d, 0x40
46a271: mov rsi, rdi
46a274: tzcnt r8, r14
46a279: cmp eax, r8d
46a27c: cmovle r8d, eax
46a280: sub r15d, ecx
46a283: xor r14d, r14d
46a286: jmp 0x469e4d
46a28b: mov ecx, dword ptr [rbp - 0xc0]
46a291: mov dword ptr [rax], 0x31
46a297: mov dword ptr [rax + 4], ecx
46a29a: mov rax, qword ptr [rbp - 0xb8]
46a2a1: test byte ptr [rax + 0xc], 8
46a2a5: jne 0x46a2af
46a2a7: test ebx, ebx
46a2a9: je 0x46a36f
46a2af: movsxd rax, dword ptr [rbp - 0x134]
46a2b6: mov rsi, qword ptr [rbp - 0x130]
46a2bd: mov dword ptr [rsi + rax*4 + 8], 0x30
46a2c5: lea ebx, [rbx + rax + 1]
46a2c9: mov r14, rsi
46a2cc: mov rax, qword ptr [rbp - 0xb8]
46a2d3: add dword ptr [rbp - 0x98], 1
46a2da: movsxd rsi, dword ptr [rax + 8]
46a2de: mov rax, 0xfffffffffffffff0
46a2e5: mov rax, qword ptr fs:[rax]
46a2e9: mov dword ptr [rbp - 0x134], 1
46a2f3: movzx eax, word ptr [rax + rsi*2]
46a2f7: and ax, 0x100
46a2fb: cmp ax, 1
46a2ff: sbb eax, eax
46a301: and eax, 0x20
46a304: add eax, 0x45
46a307: mov dword ptr [rbp - 0x9c], eax
46a30d: jmp 0x46981e
46a312: mov byte ptr [rbp - 0xe0], r8b
46a319: mov esi, 0x20
46a31e: mov dword ptr [rbp - 0xd0], ecx
46a324: jmp 0x469f00
46a329: mov qword ptr [rbp - 0xe0], 0
46a334: mov r13d, r9d
46a337: jmp 0x468e43
46a33c: mov dword ptr [rbp - 0xe0], r9d
46a343: mov esi, 0x20
46a348: jmp 0x46860f
46a34d: mov dword ptr [rbp - 0xe0], r9d
46a354: mov esi, 0x2b
46a359: jmp 0x46a1e2
46a35e: mov dword ptr [rbp - 0xe0], r9d
46a365: mov esi, 0x20
46a36a: jmp 0x46a1e2
46a36f: mov ebx, dword ptr [rbp - 0x128]
46a375: mov r14, qword ptr [rbp - 0x130]
46a37c: jmp 0x46a2cc
46a381: mov r15d, 0x40
46a387: mov rsi, rdi
46a38a: sub r15d, ecx
46a38d: jmp 0x469e4d
46a392: call 0x4547a0
46a397: xor edi, edi
46a399: xor r15d, r15d
46a39c: jmp 0x4694f7
46a3a1: mov edx, 6
46a3a6: lea rsi, [rip + 0x3edab]
46a3ad: mov rdi, r14
46a3b0: call 0x476c10
46a3b5: mov eax, dword ptr [rbp - 0xc0]
46a3bb: mov dword ptr [r14 + 4], eax
46a3bf: lea rax, [r14 + 8]
46a3c3: cmp rax, r15
46a3c6: jbe 0x46a3d6
46a3c8: add r15, 0x14
46a3cc: jmp 0x468b1b
46a3d1: jmp 0x4015ff
46a3d6: mov rdx, r15
46a3d9: lea rdi, [r14 + 0x18]
46a3dd: mov esi, 0x30
46a3e2: add r15, 0x10
46a3e6: sub rdx, rax
46a3e9: sar rdx, 2
46a3ed: call 0x401140
46a3f2: jmp 0x468b1b
46a3f7: nop word ptr [rax + rax]
46a400: endbr64 
46a404: mov rax, 0xffffffffffffffb0
46a40b: mov r8, rsi
46a40e: mov rcx, rdx
46a411: mov rdx, r8
46a414: mov rsi, qword ptr fs:[rax]
46a418: jmp 0x467780
46a41d: nop dword ptr [rax]
46a420: endbr64 
46a424: movzx eax, byte ptr [rsi]
46a427: xor r8d, r8d
46a42a: sub eax, 1
46a42d: cmp al, 0x7d
46a42f: jbe 0x46a44e
46a431: jmp 0x46a455
46a433: nop dword ptr [rax + rax]
46a438: movzx eax, byte ptr [rsi + 1]
46a43c: add rsi, 1
46a440: add r8d, 1
46a444: sub edi, ecx
46a446: cmp al, 0x7e
46a448: ja 0x46a455
46a44a: test al, al
46a44c: je 0x46a460
46a44e: movsx ecx, byte ptr [rsi]
46a451: cmp edi, ecx
46a453: ja 0x46a438
46a455: mov eax, r8d
46a458: ret 
46a459: nop dword ptr [rax]
46a460: lea eax, [rdi - 1]
46a463: xor edx, edx
46a465: div ecx
46a467: add r8d, eax
46a46a: mov eax, r8d
46a46d: ret 
46a46e: nop 
46a470: endbr64 
46a474: push r12
46a476: push rbp
46a477: push rbx
46a478: movsxd rbx, edi
46a47b: cmp ebx, 0xff
46a481: ja 0x46a580
46a487: mov rbp, rsi
46a48a: mov r12, rdx
46a48d: mov eax, dword ptr fs:[0x18]
46a495: test eax, eax
46a497: jne 0x46a550
46a49d: mov ecx, 1
46a4a2: cmpxchg dword ptr [rip + 0x58a7b], ecx
46a4a9: mov rcx, qword ptr [rip + 0x59498]
46a4b0: test rcx, rcx
46a4b3: je 0x46a4e8
46a4b5: mov rax, qword ptr [rip + 0x594ac]
46a4bc: mov qword ptr [rcx + rbx*8], rbp
46a4c0: xor r8d, r8d
46a4c3: mov qword ptr [rax + rbx*8], r12
46a4c7: mov eax, dword ptr fs:[0x18]
46a4cf: test eax, eax
46a4d1: jne 0x46a520
46a4d3: sub dword ptr [rip + 0x58a4a], 1
46a4da: pop rbx
46a4db: mov eax, r8d
46a4de: pop rbp
46a4df: pop r12
46a4e1: ret 
46a4e2: nop word ptr [rax + rax]
46a4e8: mov esi, 0x10
46a4ed: mov edi, 0x100
46a4f2: call 0x427d10
46a4f7: mov qword ptr [rip + 0x5946a], rax
46a4fe: test rax, rax
46a501: je 0x46a599
46a507: lea rcx, [rax + 0x800]
46a50e: mov qword ptr [rip + 0x59433], rcx
46a515: jmp 0x46a4bc
46a517: nop word ptr [rax + rax]
46a520: xor eax, eax
46a522: xchg dword ptr [rip + 0x589fc], eax
46a528: cmp eax, 1
46a52b: jle 0x46a4da
46a52d: xor r10d, r10d
46a530: mov edx, 1
46a535: mov esi, 0x81
46a53a: mov eax, 0xca
46a53f: lea rdi, [rip + 0x589de]
46a546: syscall 
46a548: jmp 0x46a4da
46a54a: nop word ptr [rax + rax]
46a550: xor eax, eax
46a552: mov ecx, 1
46a557: lock cmpxchg dword ptr [rip + 0x589c5], ecx
46a55f: je 0x46a4a9
46a565: lea rdi, [rip + 0x589b8]
46a56c: call 0x421250
46a571: jmp 0x46a4a9
46a576: nop word ptr cs:[rax + rax]
46a580: mov rax, 0xffffffffffffffc0
46a587: mov r8d, 0xffffffff
46a58d: mov dword ptr fs:[rax], 0x16
46a594: jmp 0x46a4da
46a599: or r8d, 0xffffffff
46a59d: jmp 0x46a4c7
46a5a2: nop word ptr cs:[rax + rax]
46a5ad: nop dword ptr [rax]
46a5b0: endbr64 
46a5b4: push r12
46a5b6: push rbp
46a5b7: push rbx
46a5b8: movsxd rbx, edi
46a5bb: cmp ebx, 0xff
46a5c1: ja 0x46a6c0
46a5c7: mov rbp, rsi
46a5ca: mov r12, rdx
46a5cd: mov eax, dword ptr fs:[0x18]
46a5d5: test eax, eax
46a5d7: jne 0x46a690
46a5dd: mov ecx, 1
46a5e2: cmpxchg dword ptr [rip + 0x5893b], ecx
46a5e9: mov rcx, qword ptr [rip + 0x59358]
46a5f0: test rcx, rcx
46a5f3: je 0x46a628
46a5f5: mov rax, qword ptr [rip + 0x5936c]
46a5fc: mov qword ptr [rcx + rbx*8], rbp
46a600: xor r8d, r8d
46a603: mov qword ptr [rax + rbx*8], r12
46a607: mov eax, dword ptr fs:[0x18]
46a60f: test eax, eax
46a611: jne 0x46a660
46a613: sub dword ptr [rip + 0x5890a], 1
46a61a: pop rbx
46a61b: mov eax, r8d
46a61e: pop rbp
46a61f: pop r12
46a621: ret 
46a622: nop word ptr [rax + rax]
46a628: mov esi, 0x10
46a62d: mov edi, 0x100
46a632: call 0x427d10
46a637: mov qword ptr [rip + 0x5932a], rax
46a63e: test rax, rax
46a641: je 0x46a6d9
46a647: lea rcx, [rax + 0x800]
46a64e: mov qword ptr [rip + 0x592f3], rcx
46a655: jmp 0x46a5fc
46a657: nop word ptr [rax + rax]
46a660: xor eax, eax
46a662: xchg dword ptr [rip + 0x588bc], eax
46a668: cmp eax, 1
46a66b: jle 0x46a61a
46a66d: xor r10d, r10d
46a670: mov edx, 1
46a675: mov esi, 0x81
46a67a: mov eax, 0xca
46a67f: lea rdi, [rip + 0x5889e]
46a686: syscall 
46a688: jmp 0x46a61a
46a68a: nop word ptr [rax + rax]
46a690: xor eax, eax
46a692: mov ecx, 1
46a697: lock cmpxchg dword ptr [rip + 0x58885], ecx
46a69f: je 0x46a5e9
46a6a5: lea rdi, [rip + 0x58878]
46a6ac: call 0x421250
46a6b1: jmp 0x46a5e9
46a6b6: nop word ptr cs:[rax + rax]
46a6c0: mov rax, 0xffffffffffffffc0
46a6c7: mov r8d, 0xffffffff
46a6cd: mov dword ptr fs:[rax], 0x16
46a6d4: jmp 0x46a61a
46a6d9: or r8d, 0xffffffff
46a6dd: jmp 0x46a607
46a6e2: nop word ptr cs:[rax + rax]
46a6ec: nop dword ptr [rax]
46a6f0: endbr64 
46a6f4: push r15
46a6f6: push r14
46a6f8: push r13
46a6fa: push r12
46a6fc: push rbp
46a6fd: mov rbp, rdi
46a700: push rbx
46a701: sub rsp, 0x178
46a708: mov edi, dword ptr [rsi]
46a70a: movzx eax, byte ptr [rsi + 0xd]
46a70e: mov qword ptr [rsp + 8], rsi
46a713: mov ecx, eax
46a715: shr cl, 2
46a718: mov rbx, qword ptr fs:[0x28]
46a721: mov qword ptr [rsp + 0x168], rbx
46a729: xor ebx, ebx
46a72b: mov dword ptr [rsp + 0x20], edi
46a72f: mov edi, dword ptr [rsi + 4]
46a732: mov dword ptr [rsp + 0x2c], edi
46a736: mov edi, ecx
46a738: and edi, 1
46a73b: mov dword ptr [rsp + 0x28], edi
46a73f: test al, 1
46a741: jne 0x46ac70
46a747: mov rcx, 0xffffffffffffffa8
46a74e: mov rcx, qword ptr fs:[rcx]
46a752: mov rcx, qword ptr [rcx]
46a755: mov r12, qword ptr [rcx + 0x40]
46a759: mov r13d, dword ptr [rcx + 0x58]
46a75d: cmp byte ptr [r12], 0
46a762: je 0x46c547
46a768: test r13d, r13d
46a76b: je 0x46c547
46a771: mov rbx, qword ptr [rsp + 8]
46a776: mov rcx, qword ptr [rdx]
46a779: movsxd r14, dword ptr [rbx + 8]
46a77d: test al, 0x10
46a77f: je 0x46ac90
46a785: movdqa xmm2, xmmword ptr [rcx]
46a789: movdqa xmm1, xmm2
46a78d: movdqa xmm0, xmm2
46a791: movaps xmmword ptr [rsp + 0x10], xmm2
46a796: call 0x48df20
46a79b: test rax, rax
46a79e: jne 0x46bef0
46a7a4: movaps xmm3, xmmword ptr [rsp + 0x10]
46a7a9: movdqa xmm0, xmmword ptr [rsp + 0x10]
46a7af: movdqa xmm1, xmmword ptr [rip + 0x3e9d9]
46a7b7: pand xmm0, xmmword ptr [rip + 0x3e9c1]
46a7bf: movmskps ebx, xmm3
46a7c2: and ebx, 8
46a7c5: movaps xmmword ptr [rsp + 0x30], xmm0
46a7ca: call 0x48df20
46a7cf: test rax, rax
46a7d2: jne 0x46a7f0
46a7d4: movdqa xmm1, xmmword ptr [rip + 0x3e9b4]
46a7dc: movdqa xmm0, xmmword ptr [rsp + 0x30]
46a7e2: call 0x48e130
46a7e7: test rax, rax
46a7ea: jg 0x46b448
46a7f0: mov r15, qword ptr [rsp + 0x10]
46a7f5: mov rax, qword ptr [rsp + 0x18]
46a7fa: xor ecx, ecx
46a7fc: cmp r14d, 0x41
46a800: lea r14, [rsp + 0x160]
46a808: sete cl
46a80b: mov edx, 0x10
46a810: mov rsi, r14
46a813: mov rdi, r15
46a816: mov qword ptr [rsp + 0x30], rax
46a81b: call 0x467040
46a820: lea rcx, [rsp + 0x130]
46a828: lea rdi, [rip + 0x455d1]
46a82f: mov r10, rax
46a832: mov rax, qword ptr [rsp + 8]
46a837: mov qword ptr [rsp + 0x48], rcx
46a83c: mov r8, rcx
46a83f: mov esi, dword ptr [rax + 8]
46a842: lea rax, [rip + 0x45517]
46a849: cmp esi, 0x41
46a84c: cmove rdi, rax
46a850: mov rax, r15
46a853: mov rdx, rax
46a856: mov rcx, r8
46a859: sub r8, 4
46a85d: and edx, 0xf
46a860: mov edx, dword ptr [rdi + rdx*4]
46a863: mov dword ptr [r8], edx
46a866: mov rdx, rax
46a869: shr rax, 4
46a86d: cmp rdx, 0xf
46a871: ja 0x46a853
46a873: lea rdi, [rsp + 0x150]
46a87b: mov qword ptr [rsp + 0x40], rcx
46a880: cmp r10, rdi
46a883: jbe 0x46a94a
46a889: mov rdx, r10
46a88c: mov esi, 0x30
46a891: mov qword ptr [rsp + 0x60], r8
46a896: sub rdx, rdi
46a899: mov qword ptr [rsp + 0x58], r10
46a89e: mov qword ptr [rsp + 0x50], rdx
46a8a3: call 0x401110
46a8a8: mov r10, qword ptr [rsp + 0x58]
46a8ad: mov rdx, qword ptr [rsp + 0x50]
46a8b2: mov rdi, rax
46a8b5: not rax
46a8b8: mov r8, qword ptr [rsp + 0x60]
46a8bd: add rax, r10
46a8c0: cmp rax, 2
46a8c4: jbe 0x46c3f5
46a8ca: mov rcx, qword ptr [rsp + 0x40]
46a8cf: mov rax, rdx
46a8d2: movdqa xmm1, xmmword ptr [rip + 0x3e956]
46a8da: xor esi, esi
46a8dc: shr rax, 2
46a8e0: sub rcx, 0x14
46a8e4: nop dword ptr [rax]
46a8e8: add rsi, 1
46a8ec: movups xmmword ptr [rcx], xmm1
46a8ef: sub rcx, 0x10
46a8f3: cmp rsi, rax
46a8f6: jne 0x46a8e8
46a8f8: mov rax, rdx
46a8fb: and rax, 0xfffffffffffffffc
46a8ff: mov rcx, rax
46a902: sub r10, rax
46a905: neg rcx
46a908: lea rcx, [r8 + rcx*4]
46a90c: cmp rax, rdx
46a90f: je 0x46a938
46a911: lea rax, [r10 - 1]
46a915: mov dword ptr [rcx - 4], 0x30
46a91c: cmp rdi, rax
46a91f: jae 0x46a938
46a921: sub r10, 2
46a925: mov dword ptr [rcx - 8], 0x30
46a92c: cmp rdi, r10
46a92f: jae 0x46a938
46a931: mov dword ptr [rcx - 0xc], 0x30
46a938: mov rax, qword ptr [rsp + 8]
46a93d: neg rdx
46a940: mov r10, rdi
46a943: lea r8, [r8 + rdx*4]
46a947: mov esi, dword ptr [rax + 8]
46a94a: movdqa xmm4, xmmword ptr [rsp + 0x10]
46a950: mov rax, qword ptr [rsp + 0x18]
46a955: xor ecx, ecx
46a957: mov edx, 0x10
46a95c: mov qword ptr [rsp + 0x50], r8
46a961: pextrw r11d, xmm4, 6
46a967: mov eax, eax
46a969: shl r11, 0x20
46a96d: or r11, rax
46a970: cmp esi, 0x41
46a973: mov rsi, r10
46a976: sete cl
46a979: mov rdi, r11
46a97c: mov qword ptr [rsp + 0x40], r11
46a981: call 0x467040
46a986: mov r11, qword ptr [rsp + 0x40]
46a98b: mov r8, qword ptr [rsp + 0x50]
46a990: lea rsi, [rip + 0x453c9]
46a997: mov r9, rax
46a99a: mov rax, qword ptr [rsp + 8]
46a99f: cmp dword ptr [rax + 8], 0x41
46a9a3: lea rax, [rip + 0x45456]
46a9aa: cmovne rsi, rax
46a9ae: mov rax, r11
46a9b1: nop dword ptr [rax]
46a9b8: mov rdx, rax
46a9bb: mov rcx, r8
46a9be: sub r8, 4
46a9c2: and edx, 0xf
46a9c5: mov edx, dword ptr [rsi + rdx*4]
46a9c8: mov dword ptr [r8], edx
46a9cb: mov rdx, rax
46a9ce: shr rax, 4
46a9d2: cmp rdx, 0xf
46a9d6: ja 0x46a9b8
46a9d8: lea r10, [rsp + 0x144]
46a9e0: mov qword ptr [rsp + 0x40], rcx
46a9e5: cmp r9, r10
46a9e8: jbe 0x46aaba
46a9ee: mov rdx, r9
46a9f1: mov rdi, r10
46a9f4: mov esi, 0x30
46a9f9: mov qword ptr [rsp + 0x68], r11
46a9fe: sub rdx, r10
46aa01: mov qword ptr [rsp + 0x60], r8
46aa06: mov qword ptr [rsp + 0x58], r9
46aa0b: mov qword ptr [rsp + 0x50], rdx
46aa10: call 0x401110
46aa15: mov r9, qword ptr [rsp + 0x58]
46aa1a: mov rdx, qword ptr [rsp + 0x50]
46aa1f: mov r10, rax
46aa22: not rax
46aa25: mov r8, qword ptr [rsp + 0x60]
46aa2a: mov r11, qword ptr [rsp + 0x68]
46aa2f: add rax, r9
46aa32: cmp rax, 2
46aa36: jbe 0x46c3ed
46aa3c: mov rcx, qword ptr [rsp + 0x40]
46aa41: mov rax, rdx
46aa44: movdqa xmm1, xmmword ptr [rip + 0x3e7e4]
46aa4c: xor esi, esi
46aa4e: shr rax, 2
46aa52: sub rcx, 0x14
46aa56: nop word ptr cs:[rax + rax]
46aa60: add rsi, 1
46aa64: movups xmmword ptr [rcx], xmm1
46aa67: sub rcx, 0x10
46aa6b: cmp rsi, rax
46aa6e: jne 0x46aa60
46aa70: mov rax, rdx
46aa73: and rax, 0xfffffffffffffffc
46aa77: mov rcx, rax
46aa7a: sub r9, rax
46aa7d: neg rcx
46aa80: lea rcx, [r8 + rcx*4]
46aa84: cmp rax, rdx
46aa87: je 0x46aab0
46aa89: lea rax, [r9 - 1]
46aa8d: mov dword ptr [rcx - 4], 0x30
46aa94: cmp r10, rax
46aa97: jae 0x46aab0
46aa99: lea rdi, [r9 - 2]
46aa9d: mov dword ptr [rcx - 8], 0x30
46aaa4: cmp r10, rdi
46aaa7: jae 0x46aab0
46aaa9: mov dword ptr [rcx - 0xc], 0x30
46aab0: neg rdx
46aab3: mov r9, r10
46aab6: lea r8, [r8 + rdx*4]
46aaba: movdqa xmm5, xmmword ptr [rsp + 0x10]
46aac0: pextrw eax, xmm5, 7
46aac5: test ax, 0x7fff
46aac9: setne al
46aacc: or r15, r11
46aacf: add eax, 0x30
46aad2: mov byte ptr [rsp + 0x40], al
46aad6: mov rax, qword ptr [rsp + 0x30]
46aadb: shr rax, 0x30
46aadf: and eax, 0x7fff
46aae4: mov dword ptr [rsp + 0x30], eax
46aae8: je 0x46b870
46aaee: cmp eax, 0x3ffe
46aaf3: jle 0x46c10c
46aaf9: mov dword ptr [rsp + 0x30], 0
46ab01: sub eax, 0x3fff
46ab06: mov edx, eax
46ab08: xor r10d, r10d
46ab0b: test r15, r15
46ab0e: sete r10b
46ab12: test r10d, r10d
46ab15: jne 0x46b0fd
46ab1b: cmp dword ptr [rsp + 0x12c], 0x30
46ab23: jne 0x46ab3e
46ab25: mov rax, qword ptr [rsp + 0x48]
46ab2a: nop word ptr [rax + rax]
46ab30: sub rax, 4
46ab34: sub r14, 1
46ab38: cmp dword ptr [rax - 4], 0x30
46ab3c: je 0x46ab30
46ab3e: mov rax, r14
46ab41: mov edi, dword ptr [rsp + 0x20]
46ab45: sub rax, r9
46ab48: mov qword ptr [rsp + 0x60], rax
46ab4d: cmp edi, -1
46ab50: je 0x46bea0
46ab56: movsxd r10, edi
46ab59: cmp r10, rax
46ab5c: jge 0x46b119
46ab62: movzx eax, byte ptr [rsp + 0x40]
46ab67: test edi, edi
46ab69: jle 0x46ab71
46ab6b: movzx eax, byte ptr [r9 + r10 - 1]
46ab71: movsx esi, al
46ab74: lea edi, [rax - 0x41]
46ab77: movzx ecx, byte ptr [r9 + r10]
46ab7c: lea r11d, [rsi - 0x37]
46ab80: cmp dil, 5
46ab84: jbe 0x46ab97
46ab86: sub eax, 0x61
46ab89: lea edi, [rsi - 0x57]
46ab8c: sub esi, 0x30
46ab8f: cmp al, 5
46ab91: cmova edi, esi
46ab94: mov r11d, edi
46ab97: lea esi, [rcx - 0x41]
46ab9a: movsx eax, cl
46ab9d: cmp sil, 5
46aba1: ja 0x46c122
46aba7: lea ecx, [rax - 0x37]
46abaa: mov edi, 1
46abaf: mov esi, 1
46abb4: fnstcw word ptr [rsp + 0x7e]
46abb8: movzx eax, word ptr [rsp + 0x7e]
46abbd: and ax, 0xc00
46abc1: cmp ax, 0x800
46abc5: je 0x46c39f
46abcb: ja 0x46bf68
46abd1: test ax, ax
46abd4: jne 0x46bf38
46abda: cmp ecx, 7
46abdd: jle 0x46b119
46abe3: or esi, r11d
46abe6: and esi, 1
46abe9: je 0x46b119
46abef: mov ecx, dword ptr [rsp + 0x20]
46abf3: sub ecx, 1
46abf6: js 0x46c15c
46abfc: movsxd rsi, ecx
46abff: sub r10, 2
46ac03: mov ecx, ecx
46ac05: sub r10, rcx
46ac08: lea rax, [r9 + rsi]
46ac0c: lea rsi, [r8 + rsi*4]
46ac10: lea r11, [r9 + r10]
46ac14: jmp 0x46ac55
46ac16: nop word ptr cs:[rax + rax]
46ac20: mov r10, 0xffffffffffffffe0
46ac27: movsx rcx, dil
46ac2b: mov r10, qword ptr fs:[r10]
46ac2f: cmp dword ptr [r10 + rcx*4], 0x65
46ac34: jle 0x46c27d
46ac3a: mov byte ptr [rax], 0x30
46ac3d: sub rax, 1
46ac41: sub rsi, 4
46ac45: mov dword ptr [rsi + 4], 0x30
46ac4c: cmp r11, rax
46ac4f: je 0x46c15c
46ac55: movzx edi, byte ptr [rax]
46ac58: cmp dil, 0x39
46ac5c: jne 0x46ac20
46ac5e: mov rdi, qword ptr [rsp + 8]
46ac63: mov ecx, dword ptr [rdi + 8]
46ac66: mov dword ptr [rsi], ecx
46ac68: mov byte ptr [rax], cl
46ac6a: jmp 0x46b119
46ac6f: nop 
46ac70: mov rcx, 0xffffffffffffffb8
46ac77: mov rcx, qword ptr fs:[rcx]
46ac7b: mov rcx, qword ptr [rcx]
46ac7e: mov r12, qword ptr [rcx + 0x50]
46ac82: mov r13d, dword ptr [rcx + 0x198]
46ac89: jmp 0x46a75d
46ac8e: nop 
46ac90: movzx edx, byte ptr [rbx + 0xc]
46ac94: test dl, 1
46ac97: je 0x46aee8
46ac9d: fld xword ptr [rcx]
46ac9f: fld st(0)
46aca1: fstp xword ptr [rsp + 0x10]
46aca5: fxam 
46aca7: fnstsw ax
46aca9: mov ebx, eax
46acab: and ebx, 0x200
46acb1: fucompi st(0)
46acb3: jp 0x46beb0
46acb9: fld xword ptr [rip + 0x3e4e1]
46acbf: fld xword ptr [rsp + 0x10]
46acc3: fabs 
46acc5: fucompi st(1)
46acc7: fstp st(0)
46acc9: jbe 0x46b4d0
46accf: mov rax, 0xfffffffffffffff0
46acd6: lea rcx, [rip + 0x3e46b]
46acdd: lea r12, [rip + 0x3e425]
46ace4: mov rax, qword ptr fs:[rax]
46ace8: movzx eax, word ptr [rax + r14*2]
46aced: lea r14, [rip + 0x3e434]
46acf4: and ax, 0x100
46acf8: lea rax, [rip + 0x3e412]
46acff: cmove r14, rcx
46ad03: cmove r12, rax
46ad07: mov eax, edx
46ad09: and eax, 0x20
46ad0c: test ebx, ebx
46ad0e: je 0x46ae50
46ad14: mov r13d, dword ptr [rsp + 0x2c]
46ad19: sub r13d, 4
46ad1d: test al, al
46ad1f: je 0x46b4b8
46ad25: mov eax, dword ptr [rsp + 0x28]
46ad29: xor ebx, ebx
46ad2b: test eax, eax
46ad2d: jne 0x46aeb2
46ad33: mov rax, qword ptr [rbp + 0x28]
46ad37: cmp rax, qword ptr [rbp + 0x30]
46ad3b: jae 0x46c1ef
46ad41: lea rdx, [rax + 1]
46ad45: mov qword ptr [rbp + 0x28], rdx
46ad49: mov byte ptr [rax], 0x2d
46ad4c: add ebx, 1
46ad4f: mov r15d, dword ptr [rsp + 0x28]
46ad54: test r15d, r15d
46ad57: je 0x46b6d0
46ad5d: mov rax, qword ptr [rbp + 0xa0]
46ad64: mov esi, dword ptr [r14]
46ad67: test rax, rax
46ad6a: je 0x46b800
46ad70: mov rdx, qword ptr [rax + 0x20]
46ad74: cmp rdx, qword ptr [rax + 0x28]
46ad78: jae 0x46b800
46ad7e: lea rcx, [rdx + 4]
46ad82: mov qword ptr [rax + 0x20], rcx
46ad86: mov dword ptr [rdx], esi
46ad88: cmp esi, -1
46ad8b: je 0x46b438
46ad91: mov esi, dword ptr [r14 + 4]
46ad95: add ebx, 1
46ad98: lea r12, [r14 + 8]
46ad9c: mov rdx, qword ptr [rax + 0x20]
46ada0: cmp qword ptr [rax + 0x28], rdx
46ada4: jbe 0x46b82c
46adaa: lea rcx, [rdx + 4]
46adae: mov qword ptr [rax + 0x20], rcx
46adb2: mov dword ptr [rdx], esi
46adb4: cmp esi, -1
46adb7: je 0x46b438
46adbd: mov esi, dword ptr [r12]
46adc1: add ebx, 1
46adc4: mov rdx, qword ptr [rax + 0x20]
46adc8: cmp rdx, qword ptr [rax + 0x28]
46adcc: jae 0x46b854
46add2: lea rcx, [rdx + 4]
46add6: cmp esi, -1
46add9: mov qword ptr [rax + 0x20], rcx
46addd: sete al
46ade0: mov dword ptr [rdx], esi
46ade2: test al, al
46ade4: jne 0x46b438
46adea: mov rax, qword ptr [rsp + 8]
46adef: lea r12d, [rbx + 1]
46adf3: test byte ptr [rax + 0xc], 0x20
46adf7: je 0x46ae1d
46adf9: test r13d, r13d
46adfc: jle 0x46ae1d
46adfe: movsxd rbx, r13d
46ae01: mov esi, 0x20
46ae06: mov rdi, rbp
46ae09: mov rdx, rbx
46ae0c: call 0x474150
46ae11: cmp rax, rbx
46ae14: jne 0x46b438
46ae1a: add r12d, r13d
46ae1d: mov rax, qword ptr [rsp + 0x168]
46ae25: xor rax, qword ptr fs:[0x28]
46ae2e: jne 0x46c566
46ae34: add rsp, 0x178
46ae3b: mov eax, r12d
46ae3e: pop rbx
46ae3f: pop rbp
46ae40: pop r12
46ae42: pop r13
46ae44: pop r14
46ae46: pop r15
46ae48: ret 
46ae49: nop dword ptr [rax]
46ae50: test dl, 0x50
46ae53: jne 0x46b490
46ae59: mov r13d, dword ptr [rsp + 0x2c]
46ae5e: sub r13d, 3
46ae62: test al, al
46ae64: jne 0x46b68a
46ae6a: test r13d, r13d
46ae6d: jle 0x46b68a
46ae73: mov eax, dword ptr [rsp + 0x28]
46ae77: movsxd r15, r13d
46ae7a: mov esi, 0x20
46ae7f: mov rdi, rbp
46ae82: mov rdx, r15
46ae85: test eax, eax
46ae87: je 0x46b7b0
46ae8d: call 0x474150
46ae92: cmp rax, r15
46ae95: jne 0x46b438
46ae9b: test ebx, ebx
46ae9d: je 0x46b678
46aea3: mov eax, dword ptr [rsp + 0x28]
46aea7: mov ebx, r13d
46aeaa: test eax, eax
46aeac: je 0x46ad33
46aeb2: mov rax, qword ptr [rbp + 0xa0]
46aeb9: test rax, rax
46aebc: je 0x46c030
46aec2: mov rdx, qword ptr [rax + 0x20]
46aec6: cmp rdx, qword ptr [rax + 0x28]
46aeca: jae 0x46c030
46aed0: lea rcx, [rdx + 4]
46aed4: mov qword ptr [rax + 0x20], rcx
46aed8: mov dword ptr [rdx], 0x2d
46aede: jmp 0x46ad4c
46aee3: nop dword ptr [rax + rax]
46aee8: movsd xmm0, qword ptr [rcx]
46aeec: movsd qword ptr [rsp + 0x80], xmm0
46aef5: movmskpd ebx, xmm0
46aef9: and ebx, 1
46aefc: ucomisd xmm0, xmm0
46af00: jp 0x46beb0
46af06: movapd xmm1, xmm0
46af0a: andpd xmm1, xmmword ptr [rip + 0x3e29e]
46af12: ucomisd xmm1, qword ptr [rip + 0x3e2b6]
46af1a: ja 0x46accf
46af20: mov r15d, dword ptr [rsp + 0x84]
46af28: movq rax, xmm0
46af2d: xor r10d, r10d
46af30: lea rdi, [rsp + 0x130]
46af38: mov eax, eax
46af3a: mov qword ptr [rsp + 0x48], rdi
46af3f: lea rcx, [rip + 0x44eba]
46af46: mov r8, rdi
46af49: and r15d, 0xfffff
46af50: shl r15, 0x20
46af54: or r15, rax
46af57: lea rax, [rip + 0x44e02]
46af5e: sete r10b
46af62: xor r11d, r11d
46af65: cmp r14d, 0x41
46af69: cmove rcx, rax
46af6d: sete r11b
46af71: mov rax, r15
46af74: nop dword ptr [rax]
46af78: mov rdx, rax
46af7b: sub r8, 4
46af7f: and edx, 0xf
46af82: mov edx, dword ptr [rcx + rdx*4]
46af85: mov dword ptr [r8], edx
46af88: mov rdx, rax
46af8b: shr rax, 4
46af8f: cmp rdx, 0xf
46af93: ja 0x46af78
46af95: mov rdi, r15
46af98: mov ecx, r11d
46af9b: mov edx, 0x10
46afa0: mov dword ptr [rsp + 0x30], r10d
46afa5: lea r14, [rsp + 0x160]
46afad: mov qword ptr [rsp + 0x10], r8
46afb2: mov rsi, r14
46afb5: movsd qword ptr [rsp + 0x40], xmm0
46afbb: call 0x467040
46afc0: mov r8, qword ptr [rsp + 0x10]
46afc5: mov r10d, dword ptr [rsp + 0x30]
46afca: lea rdi, [rsp + 0xfc]
46afd2: movsd xmm0, qword ptr [rsp + 0x40]
46afd8: mov r9, rax
46afdb: cmp r8, rdi
46afde: jbe 0x46b0bc
46afe4: mov rdx, rdi
46afe7: mov rax, r8
46afea: not rdx
46afed: add rdx, r8
46aff0: mov rsi, rdx
46aff3: shr rsi, 2
46aff7: add rsi, 1
46affb: cmp rdx, 0xb
46afff: jbe 0x46b043
46b001: mov rcx, rsi
46b004: mov r11, r8
46b007: movdqa xmm1, xmmword ptr [rip + 0x3e221]
46b00f: shr rcx, 2
46b013: shl rcx, 4
46b017: sub r11, rcx
46b01a: mov rcx, r11
46b01d: nop dword ptr [rax]
46b020: movups xmmword ptr [rax - 0x10], xmm1
46b024: sub rax, 0x10
46b028: cmp rcx, rax
46b02b: jne 0x46b020
46b02d: mov rcx, rsi
46b030: and rcx, 0xfffffffffffffffc
46b034: mov rax, rcx
46b037: neg rax
46b03a: lea rax, [r8 + rax*4]
46b03e: cmp rcx, rsi
46b041: je 0x46b06a
46b043: lea rcx, [rax - 4]
46b047: mov dword ptr [rax - 4], 0x30
46b04e: cmp rdi, rcx
46b051: jae 0x46b06a
46b053: lea rcx, [rax - 8]
46b057: mov dword ptr [rax - 8], 0x30
46b05e: cmp rdi, rcx
46b061: jae 0x46b06a
46b063: mov dword ptr [rax - 0xc], 0x30
46b06a: shr rdx, 2
46b06e: mov esi, 0x30
46b073: mov qword ptr [rsp + 0x50], r8
46b078: lea rcx, [rdx + 1]
46b07c: not rdx
46b07f: mov dword ptr [rsp + 0x40], r10d
46b084: add r9, rdx
46b087: mov rdx, rcx
46b08a: mov qword ptr [rsp + 0x10], rcx
46b08f: mov rdi, r9
46b092: movsd qword ptr [rsp + 0x30], xmm0
46b098: call 0x401110
46b09d: mov rcx, qword ptr [rsp + 0x10]
46b0a2: mov r8, qword ptr [rsp + 0x50]
46b0a7: mov r10d, dword ptr [rsp + 0x40]
46b0ac: movsd xmm0, qword ptr [rsp + 0x30]
46b0b2: mov r9, rax
46b0b5: neg rcx
46b0b8: lea r8, [r8 + rcx*4]
46b0bc: movq rax, xmm0
46b0c1: movzx edx, word ptr [rsp + 0x86]
46b0c9: shr rax, 0x30
46b0cd: test eax, 0x7ff0
46b0d2: setne al
46b0d5: shr dx, 4
46b0d9: add eax, 0x30
46b0dc: mov byte ptr [rsp + 0x40], al
46b0e0: and edx, 0x7ff
46b0e6: jne 0x46b7e0
46b0ec: test r15, r15
46b0ef: jne 0x46b8b0
46b0f5: mov dword ptr [rsp + 0x30], 0
46b0fd: mov edi, dword ptr [rsp + 0x20]
46b101: mov eax, 0
46b106: mov qword ptr [rsp + 0x60], 0
46b10f: cmp edi, -1
46b112: cmovne eax, edi
46b115: mov dword ptr [rsp + 0x20], eax
46b119: movsxd r14, edx
46b11c: lea rsi, [rsp + 0x140]
46b124: xor ecx, ecx
46b126: mov edx, 0xa
46b12b: mov rdi, r14
46b12e: mov qword ptr [rsp + 0x58], r9
46b133: lea r15, [rsp + 0xa4]
46b13b: mov qword ptr [rsp + 0x50], r8
46b140: mov qword ptr [rsp + 0x48], rsi
46b145: call 0x467040
46b14a: mov r8, qword ptr [rsp + 0x50]
46b14f: mov r9, qword ptr [rsp + 0x58]
46b154: lea rdi, [rip + 0x44ca5]
46b15b: mov qword ptr [rsp + 0x10], rax
46b160: mov rsi, qword ptr [rsp + 0x48]
46b165: movabs rcx, 0xcccccccccccccccd
46b16f: nop 
46b170: mov rax, r14
46b173: mov r11, r14
46b176: sub r15, 4
46b17a: mul rcx
46b17d: shr rdx, 3
46b181: lea rax, [rdx + rdx*4]
46b185: add rax, rax
46b188: sub r11, rax
46b18b: mov eax, dword ptr [rdi + r11*4]
46b18f: mov dword ptr [r15], eax
46b192: mov rax, r14
46b195: mov r14, rdx
46b198: cmp rax, 9
46b19c: ja 0x46b170
46b19e: mov rax, qword ptr [rsp + 8]
46b1a3: movzx r14d, byte ptr [rax + 0xc]
46b1a8: mov eax, 4
46b1ad: test ebx, ebx
46b1af: jne 0x46b1bd
46b1b1: xor eax, eax
46b1b3: test r14b, 0x50
46b1b7: setne al
46b1ba: add eax, 3
46b1bd: mov edx, dword ptr [rsp + 0x2c]
46b1c1: mov rdi, rsi
46b1c4: sub rdi, qword ptr [rsp + 0x10]
46b1c9: mov qword ptr [rsp + 0x48], rdi
46b1ce: sub edx, 2
46b1d1: sub edx, edi
46b1d3: mov edi, dword ptr [rsp + 0x20]
46b1d7: add eax, edi
46b1d9: sub edx, eax
46b1db: test edi, edi
46b1dd: jle 0x46bc20
46b1e3: mov r10d, dword ptr [rsp + 0x28]
46b1e8: mov eax, 1
46b1ed: test r10d, r10d
46b1f0: jne 0x46b216
46b1f2: mov rdi, r12
46b1f5: mov qword ptr [rsp + 0x58], r9
46b1fa: mov qword ptr [rsp + 0x50], r8
46b1ff: mov dword ptr [rsp + 0x2c], edx
46b203: call 0x401180
46b208: mov r9, qword ptr [rsp + 0x58]
46b20d: mov r8, qword ptr [rsp + 0x50]
46b212: mov edx, dword ptr [rsp + 0x2c]
46b216: sub edx, eax
46b218: and r14d, 0x20
46b21c: mov dword ptr [rsp + 0x2c], edx
46b220: jne 0x46b9d0
46b226: mov rax, qword ptr [rsp + 8]
46b22b: cmp dword ptr [rax + 0x10], 0x30
46b22f: je 0x46b9d0
46b235: mov eax, dword ptr [rsp + 0x2c]
46b239: test eax, eax
46b23b: jle 0x46b9d0
46b241: mov edi, dword ptr [rsp + 0x28]
46b245: movsxd r14, eax
46b248: mov qword ptr [rsp + 0x58], r9
46b24d: mov esi, 0x20
46b252: mov qword ptr [rsp + 0x50], r8
46b257: mov rdx, r14
46b25a: test edi, edi
46b25c: mov rdi, rbp
46b25f: je 0x46c050
46b265: call 0x474150
46b26a: mov r8, qword ptr [rsp + 0x50]
46b26f: mov r9, qword ptr [rsp + 0x58]
46b274: cmp rax, r14
46b277: jne 0x46b438
46b27d: mov r14d, dword ptr [rsp + 0x2c]
46b282: test ebx, ebx
46b284: je 0x46b9db
46b28a: nop word ptr [rax + rax]
46b290: mov esi, dword ptr [rsp + 0x28]
46b294: test esi, esi
46b296: je 0x46be40
46b29c: mov rax, qword ptr [rbp + 0xa0]
46b2a3: test rax, rax
46b2a6: je 0x46c34d
46b2ac: mov rdx, qword ptr [rax + 0x20]
46b2b0: cmp rdx, qword ptr [rax + 0x28]
46b2b4: jae 0x46c34d
46b2ba: lea rcx, [rdx + 4]
46b2be: mov qword ptr [rax + 0x20], rcx
46b2c2: mov dword ptr [rdx], 0x2d
46b2c8: add r14d, 1
46b2cc: mov eax, dword ptr [rsp + 0x28]
46b2d0: test eax, eax
46b2d2: je 0x46ba50
46b2d8: mov rax, qword ptr [rbp + 0xa0]
46b2df: test rax, rax
46b2e2: je 0x46c068
46b2e8: mov rsi, qword ptr [rax + 0x20]
46b2ec: mov rcx, qword ptr [rax + 0x28]
46b2f0: cmp rsi, rcx
46b2f3: jae 0x46c068
46b2f9: mov rbx, qword ptr [rsp + 8]
46b2fe: lea rdx, [rsi + 4]
46b302: mov qword ptr [rax + 0x20], rdx
46b306: mov dword ptr [rsi], 0x30
46b30c: mov ebx, dword ptr [rbx + 8]
46b30f: mov dword ptr [rsp + 0x50], ebx
46b313: lea esi, [rbx + 0x17]
46b316: cmp rdx, rcx
46b319: jae 0x46c0b1
46b31f: lea rcx, [rdx + 4]
46b323: cmp esi, -1
46b326: mov qword ptr [rax + 0x20], rcx
46b32a: sete al
46b32d: mov dword ptr [rdx], esi
46b32f: test al, al
46b331: jne 0x46b438
46b337: mov rax, qword ptr [rsp + 8]
46b33c: add r14d, 2
46b340: test byte ptr [rax + 0xc], 0x20
46b344: jne 0x46b360
46b346: cmp dword ptr [rax + 0x10], 0x30
46b34a: jne 0x46b360
46b34c: mov eax, dword ptr [rsp + 0x2c]
46b350: test eax, eax
46b352: jg 0x46c235
46b358: nop dword ptr [rax + rax]
46b360: mov eax, dword ptr [rsp + 0x28]
46b364: test eax, eax
46b366: je 0x46bab8
46b36c: mov rax, qword ptr [rbp + 0xa0]
46b373: test rax, rax
46b376: je 0x46c0e0
46b37c: mov rdx, qword ptr [rax + 0x20]
46b380: cmp rdx, qword ptr [rax + 0x28]
46b384: jae 0x46c0e0
46b38a: movsx ecx, byte ptr [rsp + 0x40]
46b38f: lea rsi, [rdx + 4]
46b393: mov qword ptr [rax + 0x20], rsi
46b397: mov dword ptr [rdx], ecx
46b399: cmp ecx, -1
46b39c: sete al
46b39f: test al, al
46b3a1: jne 0x46b438
46b3a7: mov eax, dword ptr [rsp + 0x20]
46b3ab: lea edx, [r14 + 1]
46b3af: test eax, eax
46b3b1: jle 0x46bae5
46b3b7: mov ebx, dword ptr [rsp + 0x28]
46b3bb: mov qword ptr [rsp + 0x50], r9
46b3c0: mov dword ptr [rsp + 0x40], edx
46b3c4: test ebx, ebx
46b3c6: jne 0x46b900
46b3cc: mov rdi, r12
46b3cf: mov rbx, r12
46b3d2: call 0x401180
46b3d7: mov edx, dword ptr [rsp + 0x40]
46b3db: mov r9, qword ptr [rsp + 0x50]
46b3e0: test rax, rax
46b3e3: lea r13, [r12 + rax]
46b3e7: je 0x46bc95
46b3ed: mov qword ptr [rsp + 0x40], r9
46b3f2: jmp 0x46b415
46b3f4: nop dword ptr [rax]
46b3f8: lea rdx, [rax + 1]
46b3fc: mov qword ptr [rbp + 0x28], rdx
46b400: mov byte ptr [rax], sil
46b403: lea edx, [rbx + 1]
46b406: sub edx, r12d
46b409: add edx, r14d
46b40c: cmp r13, rbx
46b40f: je 0x46bc90
46b415: add rbx, 1
46b419: mov rax, qword ptr [rbp + 0x28]
46b41d: movzx esi, byte ptr [rbx - 1]
46b421: cmp rax, qword ptr [rbp + 0x30]
46b425: jb 0x46b3f8
46b427: mov rdi, rbp
46b42a: call 0x41e8a0
46b42f: cmp eax, -1
46b432: jne 0x46b403
46b434: nop dword ptr [rax]
46b438: mov r12d, 0xffffffff
46b43e: jmp 0x46ae1d
46b443: nop dword ptr [rax + rax]
46b448: mov rax, 0xfffffffffffffff0
46b44f: lea rdx, [rip + 0x3dcf2]
46b456: lea r12, [rip + 0x3dcac]
46b45d: mov rax, qword ptr fs:[rax]
46b461: movzx eax, word ptr [rax + r14*2]
46b466: lea r14, [rip + 0x3dcbb]
46b46d: and ax, 0x100
46b471: lea rax, [rip + 0x3dc99]
46b478: cmove r14, rdx
46b47c: cmove r12, rax
46b480: mov rax, qword ptr [rsp + 8]
46b485: movzx edx, byte ptr [rax + 0xc]
46b489: jmp 0x46ad07
46b48e: nop 
46b490: mov r13d, dword ptr [rsp + 0x2c]
46b495: sub r13d, 4
46b499: test al, al
46b49b: jne 0x46b68a
46b4a1: test r13d, r13d
46b4a4: jg 0x46ae73
46b4aa: mov eax, r13d
46b4ad: xor r13d, r13d
46b4b0: jmp 0x46b684
46b4b5: nop dword ptr [rax]
46b4b8: test r13d, r13d
46b4bb: jg 0x46ae73
46b4c1: jmp 0x46ad25
46b4c6: nop word ptr cs:[rax + rax]
46b4d0: mov r10, qword ptr [rsp + 0x10]
46b4d5: fld xword ptr [rsp + 0x10]
46b4d9: xor ecx, ecx
46b4db: cmp r14d, 0x41
46b4df: lea r14, [rsp + 0x160]
46b4e7: sete cl
46b4ea: mov edx, 0x10
46b4ef: mov rdi, r10
46b4f2: mov rsi, r14
46b4f5: fstp xword ptr [rsp + 0x80]
46b4fc: call 0x467040
46b501: lea rdi, [rsp + 0x130]
46b509: mov r10, qword ptr [rsp + 0x10]
46b50e: lea rsi, [rip + 0x4484b]
46b515: mov rcx, rax
46b518: mov rax, qword ptr [rsp + 8]
46b51d: mov qword ptr [rsp + 0x48], rdi
46b522: mov r15, rdi
46b525: cmp dword ptr [rax + 8], 0x41
46b529: lea rax, [rip + 0x448d0]
46b530: cmovne rsi, rax
46b534: mov rax, r10
46b537: nop word ptr [rax + rax]
46b540: mov rdx, rax
46b543: mov r8, r15
46b546: sub r15, 4
46b54a: and edx, 0xf
46b54d: mov edx, dword ptr [rsi + rdx*4]
46b550: mov dword ptr [r15], edx
46b553: mov rdx, rax
46b556: shr rax, 4
46b55a: cmp rdx, 0xf
46b55e: ja 0x46b540
46b560: lea rdi, [rsp + 0x150]
46b568: cmp rcx, rdi
46b56b: jbe 0x46c42d
46b571: mov rdx, rcx
46b574: mov esi, 0x30
46b579: mov qword ptr [rsp + 0x50], r10
46b57e: sub rdx, rdi
46b581: mov qword ptr [rsp + 0x40], r8
46b586: mov qword ptr [rsp + 0x30], rcx
46b58b: mov qword ptr [rsp + 0x10], rdx
46b590: call 0x401110
46b595: mov rcx, qword ptr [rsp + 0x30]
46b59a: mov rdx, qword ptr [rsp + 0x10]
46b59f: mov rdi, rax
46b5a2: not rax
46b5a5: mov r8, qword ptr [rsp + 0x40]
46b5aa: mov r10, qword ptr [rsp + 0x50]
46b5af: add rax, rcx
46b5b2: cmp rax, 2
46b5b6: jbe 0x46b5f9
46b5b8: mov r11, rdx
46b5bb: movdqa xmm1, xmmword ptr [rip + 0x3dc6d]
46b5c3: lea rsi, [r8 - 0x14]
46b5c7: xor eax, eax
46b5c9: shr r11, 2
46b5cd: nop dword ptr [rax]
46b5d0: add rax, 1
46b5d4: movups xmmword ptr [rsi], xmm1
46b5d7: sub rsi, 0x10
46b5db: cmp r11, rax
46b5de: jne 0x46b5d0
46b5e0: mov rax, rdx
46b5e3: and rax, 0xfffffffffffffffc
46b5e7: mov rsi, rax
46b5ea: sub rcx, rax
46b5ed: neg rsi
46b5f0: lea r15, [r15 + rsi*4]
46b5f4: cmp rax, rdx
46b5f7: je 0x46b623
46b5f9: lea rax, [rcx - 1]
46b5fd: mov dword ptr [r15 - 4], 0x30
46b605: cmp rdi, rax
46b608: jae 0x46b623
46b60a: sub rcx, 2
46b60e: mov dword ptr [r15 - 8], 0x30
46b616: cmp rdi, rcx
46b619: jae 0x46b623
46b61b: mov dword ptr [r15 - 0xc], 0x30
46b623: mov byte ptr [rsp + 0x40], 0x30
46b628: neg rdx
46b62b: lea r9, [rdi + 1]
46b62f: lea r8, [r8 + rdx*4]
46b633: movzx eax, word ptr [rsp + 0x88]
46b63b: and eax, 0x7fff
46b640: mov dword ptr [rsp + 0x30], eax
46b644: je 0x46b8e0
46b64a: cmp eax, 0x4001
46b64f: jle 0x46c21f
46b655: mov dword ptr [rsp + 0x30], 0
46b65d: sub eax, 0x4002
46b662: mov edx, eax
46b664: test r10, r10
46b667: sete r10b
46b66b: movzx r10d, r10b
46b66f: jmp 0x46ab12
46b674: nop dword ptr [rax]
46b678: mov rbx, qword ptr [rsp + 8]
46b67d: mov eax, r13d
46b680: movzx edx, byte ptr [rbx + 0xc]
46b684: mov ebx, r13d
46b687: mov r13d, eax
46b68a: test dl, 0x40
46b68d: je 0x46b760
46b693: mov eax, dword ptr [rsp + 0x28]
46b697: test eax, eax
46b699: je 0x46b7c0
46b69f: mov rax, qword ptr [rbp + 0xa0]
46b6a6: test rax, rax
46b6a9: je 0x46c207
46b6af: mov rdx, qword ptr [rax + 0x20]
46b6b3: cmp rdx, qword ptr [rax + 0x28]
46b6b7: jae 0x46c207
46b6bd: lea rcx, [rdx + 4]
46b6c1: mov qword ptr [rax + 0x20], rcx
46b6c5: mov dword ptr [rdx], 0x2b
46b6cb: jmp 0x46ad4c
46b6d0: movzx edx, byte ptr [r12]
46b6d5: mov rax, qword ptr [rbp + 0x28]
46b6d9: cmp qword ptr [rbp + 0x30], rax
46b6dd: jbe 0x46bfc0
46b6e3: lea rcx, [rax + 1]
46b6e7: mov qword ptr [rbp + 0x28], rcx
46b6eb: mov byte ptr [rax], dl
46b6ed: movzx edx, byte ptr [r12 + 1]
46b6f3: mov rax, qword ptr [rbp + 0x28]
46b6f7: cmp qword ptr [rbp + 0x30], rax
46b6fb: jbe 0x46bfa0
46b701: lea rcx, [rax + 1]
46b705: mov qword ptr [rbp + 0x28], rcx
46b709: mov byte ptr [rax], dl
46b70b: movzx edx, byte ptr [r12 + 2]
46b711: mov rax, qword ptr [rbp + 0x28]
46b715: cmp rax, qword ptr [rbp + 0x30]
46b719: jae 0x46bfe0
46b71f: lea rcx, [rax + 1]
46b723: mov qword ptr [rbp + 0x28], rcx
46b727: mov byte ptr [rax], dl
46b729: mov rax, qword ptr [rsp + 8]
46b72e: lea r12d, [rbx + 3]
46b732: test byte ptr [rax + 0xc], 0x20
46b736: je 0x46ae1d
46b73c: test r13d, r13d
46b73f: jle 0x46ae1d
46b745: movsxd rbx, r13d
46b748: mov esi, 0x20
46b74d: mov rdi, rbp
46b750: mov rdx, rbx
46b753: call 0x418850
46b758: jmp 0x46ae11
46b75d: nop dword ptr [rax]
46b760: and edx, 0x10
46b763: je 0x46ad4f
46b769: mov eax, dword ptr [rsp + 0x28]
46b76d: test eax, eax
46b76f: je 0x46b890
46b775: mov rax, qword ptr [rbp + 0xa0]
46b77c: test rax, rax
46b77f: je 0x46c415
46b785: mov rdx, qword ptr [rax + 0x20]
46b789: cmp rdx, qword ptr [rax + 0x28]
46b78d: jae 0x46c415
46b793: lea rcx, [rdx + 4]
46b797: mov qword ptr [rax + 0x20], rcx
46b79b: mov dword ptr [rdx], 0x20
46b7a1: jmp 0x46ad4c
46b7a6: nop word ptr cs:[rax + rax]
46b7b0: call 0x418850
46b7b5: jmp 0x46ae92
46b7ba: nop word ptr [rax + rax]
46b7c0: mov rax, qword ptr [rbp + 0x28]
46b7c4: cmp rax, qword ptr [rbp + 0x30]
46b7c8: jae 0x46c3fd
46b7ce: lea rdx, [rax + 1]
46b7d2: mov qword ptr [rbp + 0x28], rdx
46b7d6: mov byte ptr [rax], 0x2b
46b7d9: jmp 0x46ad4c
46b7de: nop 
46b7e0: cmp edx, 0x3fe
46b7e6: jle 0x46b8c8
46b7ec: mov dword ptr [rsp + 0x30], 0
46b7f4: sub edx, 0x3ff
46b7fa: jmp 0x46ab12
46b7ff: nop 
46b800: mov rdi, rbp
46b803: call 0x474890
46b808: cmp eax, -1
46b80b: je 0x46b438
46b811: mov rax, qword ptr [rbp + 0xa0]
46b818: mov esi, dword ptr [r14 + 4]
46b81c: add ebx, 1
46b81f: lea r12, [r14 + 8]
46b823: test rax, rax
46b826: jne 0x46ad9c
46b82c: mov rdi, rbp
46b82f: call 0x474890
46b834: cmp eax, -1
46b837: je 0x46b438
46b83d: mov rax, qword ptr [rbp + 0xa0]
46b844: mov esi, dword ptr [r12]
46b848: add ebx, 1
46b84b: test rax, rax
46b84e: jne 0x46adc4
46b854: mov rdi, rbp
46b857: call 0x474890
46b85c: cmp eax, -1
46b85f: sete al
46b862: jmp 0x46ade2
46b867: nop word ptr [rax + rax]
46b870: cmp r15, 1
46b874: sbb edx, edx
46b876: xor eax, eax
46b878: not edx
46b87a: and edx, 0x3ffe
46b880: test r15, r15
46b883: setne al
46b886: mov dword ptr [rsp + 0x30], eax
46b88a: jmp 0x46ab08
46b88f: nop 
46b890: mov rax, qword ptr [rbp + 0x28]
46b894: cmp rax, qword ptr [rbp + 0x30]
46b898: jae 0x46c4cb
46b89e: lea rdx, [rax + 1]
46b8a2: mov qword ptr [rbp + 0x28], rdx
46b8a6: mov byte ptr [rax], 0x20
46b8a9: jmp 0x46ad4c
46b8ae: nop 
46b8b0: mov dword ptr [rsp + 0x30], 1
46b8b8: mov edx, 0x3fe
46b8bd: jmp 0x46ab1b
46b8c2: nop word ptr [rax + rax]
46b8c8: mov eax, 0x3ff
46b8cd: mov dword ptr [rsp + 0x30], 1
46b8d5: sub eax, edx
46b8d7: mov edx, eax
46b8d9: jmp 0x46ab12
46b8de: nop 
46b8e0: cmp r10, 1
46b8e4: sbb edx, edx
46b8e6: xor eax, eax
46b8e8: not edx
46b8ea: and edx, 0x4001
46b8f0: test r10, r10
46b8f3: setne al
46b8f6: mov dword ptr [rsp + 0x30], eax
46b8fa: jmp 0x46b664
46b8ff: nop 
46b900: mov rax, qword ptr [rbp + 0xa0]
46b907: test rax, rax
46b90a: je 0x46ba30
46b910: mov rdx, qword ptr [rax + 0x20]
46b914: cmp rdx, qword ptr [rax + 0x28]
46b918: jae 0x46ba30
46b91e: lea rcx, [rdx + 4]
46b922: cmp r13d, -1
46b926: mov qword ptr [rax + 0x20], rcx
46b92a: sete al
46b92d: mov dword ptr [rdx], r13d
46b930: test al, al
46b932: jne 0x46b438
46b938: mov r11d, dword ptr [rsp + 0x20]
46b93d: lea r12d, [r14 + 2]
46b941: test r11d, r11d
46b944: jle 0x46c4b4
46b94a: movsxd r13, dword ptr [rsp + 0x20]
46b94f: mov rax, qword ptr [rsp + 0x60]
46b954: cmp rax, r13
46b957: mov qword ptr [rsp + 0x20], r13
46b95c: cmovle r13, rax
46b960: lea ebx, [r13 + 3]
46b964: test r13, r13
46b967: je 0x46c003
46b96d: mov r12, r8
46b970: jmp 0x46b9ab
46b972: nop word ptr [rax + rax]
46b978: mov rdx, qword ptr [rax + 0x20]
46b97c: cmp rdx, qword ptr [rax + 0x28]
46b980: jae 0x46b9c0
46b982: lea rcx, [rdx + 4]
46b986: cmp esi, -1
46b989: mov qword ptr [rax + 0x20], rcx
46b98d: sete al
46b990: mov dword ptr [rdx], esi
46b992: test al, al
46b994: jne 0x46b438
46b99a: lea eax, [rbx + r14]
46b99e: sub eax, r13d
46b9a1: sub r13, 1
46b9a5: je 0x46c000
46b9ab: mov rax, qword ptr [rbp + 0xa0]
46b9b2: add r12, 4
46b9b6: mov esi, dword ptr [r12 - 4]
46b9bb: test rax, rax
46b9be: jne 0x46b978
46b9c0: mov rdi, rbp
46b9c3: call 0x474890
46b9c8: cmp eax, -1
46b9cb: sete al
46b9ce: jmp 0x46b992
46b9d0: xor r14d, r14d
46b9d3: test ebx, ebx
46b9d5: jne 0x46b290
46b9db: mov rax, qword ptr [rsp + 8]
46b9e0: movzx eax, byte ptr [rax + 0xc]
46b9e4: test al, 0x40
46b9e6: je 0x46bdf8
46b9ec: mov ecx, dword ptr [rsp + 0x28]
46b9f0: test ecx, ecx
46b9f2: je 0x46bf80
46b9f8: mov rax, qword ptr [rbp + 0xa0]
46b9ff: test rax, rax
46ba02: je 0x46c469
46ba08: mov rdx, qword ptr [rax + 0x20]
46ba0c: cmp rdx, qword ptr [rax + 0x28]
46ba10: jae 0x46c469
46ba16: lea rcx, [rdx + 4]
46ba1a: mov qword ptr [rax + 0x20], rcx
46ba1e: mov dword ptr [rdx], 0x2b
46ba24: jmp 0x46b2c8
46ba29: nop dword ptr [rax]
46ba30: mov esi, r13d
46ba33: mov rdi, rbp
46ba36: mov qword ptr [rsp + 0x40], r8
46ba3b: call 0x474890
46ba40: mov r8, qword ptr [rsp + 0x40]
46ba45: cmp eax, -1
46ba48: sete al
46ba4b: jmp 0x46b930
46ba50: mov rax, qword ptr [rbp + 0x28]
46ba54: cmp rax, qword ptr [rbp + 0x30]
46ba58: jae 0x46c2b5
46ba5e: lea rdx, [rax + 1]
46ba62: mov qword ptr [rbp + 0x28], rdx
46ba66: mov byte ptr [rax], 0x30
46ba69: mov rax, qword ptr [rsp + 8]
46ba6e: mov eax, dword ptr [rax + 8]
46ba71: mov dword ptr [rsp + 0x50], eax
46ba75: add eax, 0x17
46ba78: mov rdx, qword ptr [rbp + 0x28]
46ba7c: cmp rdx, qword ptr [rbp + 0x30]
46ba80: jae 0x46c28b
46ba86: lea rcx, [rdx + 1]
46ba8a: add r14d, 2
46ba8e: mov qword ptr [rbp + 0x28], rcx
46ba92: mov byte ptr [rdx], al
46ba94: mov rax, qword ptr [rsp + 8]
46ba99: test byte ptr [rax + 0xc], 0x20
46ba9d: jne 0x46bab8
46ba9f: cmp dword ptr [rax + 0x10], 0x30
46baa3: jne 0x46bab8
46baa5: mov eax, dword ptr [rsp + 0x2c]
46baa9: test eax, eax
46baab: jg 0x46c31f
46bab1: nop dword ptr [rax]
46bab8: mov rax, qword ptr [rbp + 0x28]
46babc: cmp rax, qword ptr [rbp + 0x30]
46bac0: jae 0x46c2f3
46bac6: movzx ebx, byte ptr [rsp + 0x40]
46bacb: lea rdx, [rax + 1]
46bacf: mov qword ptr [rbp + 0x28], rdx
46bad3: lea edx, [r14 + 1]
46bad7: mov byte ptr [rax], bl
46bad9: mov eax, dword ptr [rsp + 0x20]
46badd: test eax, eax
46badf: jg 0x46b3b7
46bae5: mov rax, qword ptr [rsp + 8]
46baea: test byte ptr [rax + 0xc], 8
46baee: jne 0x46b3b7
46baf4: mov rax, qword ptr [rsp + 8]
46baf9: mov r10d, dword ptr [rsp + 0x28]
46bafe: mov eax, dword ptr [rax + 8]
46bb01: mov dword ptr [rsp + 0x20], eax
46bb05: lea esi, [rax + 0xf]
46bb08: test r10d, r10d
46bb0b: je 0x46bd3f
46bb11: mov rax, qword ptr [rbp + 0xa0]
46bb18: test rax, rax
46bb1b: je 0x46c1b0
46bb21: mov rcx, qword ptr [rax + 0x20]
46bb25: cmp rcx, qword ptr [rax + 0x28]
46bb29: jae 0x46c1b0
46bb2f: lea rdi, [rcx + 4]
46bb33: cmp esi, -1
46bb36: mov qword ptr [rax + 0x20], rdi
46bb3a: sete al
46bb3d: mov dword ptr [rcx], esi
46bb3f: test al, al
46bb41: jne 0x46b438
46bb47: mov ebx, dword ptr [rsp + 0x30]
46bb4b: mov r9d, dword ptr [rsp + 0x28]
46bb50: cmp ebx, 1
46bb53: sbb eax, eax
46bb55: and eax, 0xfffffffe
46bb58: add eax, 0x2d
46bb5b: cmp ebx, 1
46bb5e: sbb r8d, r8d
46bb61: and r8d, 0xfffffffe
46bb65: add r8d, 0x2d
46bb69: mov esi, r8d
46bb6c: test r9d, r9d
46bb6f: je 0x46bd72
46bb75: mov rax, qword ptr [rbp + 0xa0]
46bb7c: test rax, rax
46bb7f: je 0x46c1cb
46bb85: mov rcx, qword ptr [rax + 0x20]
46bb89: cmp rcx, qword ptr [rax + 0x28]
46bb8d: jae 0x46c1cb
46bb93: lea rdi, [rcx + 4]
46bb97: add edx, 2
46bb9a: mov qword ptr [rax + 0x20], rdi
46bb9e: mov dword ptr [rcx], r8d
46bba1: mov rax, qword ptr [rsp + 0x48]
46bba6: lea ecx, [rdx + 1]
46bba9: mov r12d, edx
46bbac: lea r14, [rax - 1]
46bbb0: mov r13, r14
46bbb3: test rax, rax
46bbb6: je 0x46bc38
46bbbc: mov ebx, ecx
46bbbe: jmp 0x46bbf7
46bbc0: mov rdx, qword ptr [rax + 0x20]
46bbc4: cmp rdx, qword ptr [rax + 0x28]
46bbc8: jae 0x46bc06
46bbca: lea rdi, [rdx + 4]
46bbce: cmp esi, -1
46bbd1: mov qword ptr [rax + 0x20], rdi
46bbd5: sete al
46bbd8: mov dword ptr [rdx], esi
46bbda: test al, al
46bbdc: jne 0x46b438
46bbe2: lea r12d, [rbx + r14]
46bbe6: add r15, 4
46bbea: sub r12d, r13d
46bbed: sub r13, 1
46bbf1: cmp r13, -1
46bbf5: je 0x46bc38
46bbf7: mov rax, qword ptr [rbp + 0xa0]
46bbfe: mov esi, dword ptr [r15]
46bc01: test rax, rax
46bc04: jne 0x46bbc0
46bc06: mov rdi, rbp
46bc09: call 0x474890
46bc0e: cmp eax, -1
46bc11: sete al
46bc14: jmp 0x46bbda
46bc16: nop word ptr cs:[rax + rax]
46bc20: test r14b, 8
46bc24: jne 0x46b1e3
46bc2a: jmp 0x46b218
46bc2f: mov r12d, r14d
46bc32: nop word ptr [rax + rax]
46bc38: mov rax, qword ptr [rsp + 8]
46bc3d: test byte ptr [rax + 0xc], 0x20
46bc41: je 0x46ae1d
46bc47: mov esi, dword ptr [rax + 0x10]
46bc4a: cmp esi, 0x30
46bc4d: je 0x46ae1d
46bc53: mov eax, dword ptr [rsp + 0x2c]
46bc57: test eax, eax
46bc59: jle 0x46ae1d
46bc5f: mov r8d, dword ptr [rsp + 0x28]
46bc64: movsxd rbx, eax
46bc67: mov rdi, rbp
46bc6a: mov rdx, rbx
46bc6d: test r8d, r8d
46bc70: je 0x46c395
46bc76: call 0x474150
46bc7b: cmp rax, rbx
46bc7e: jne 0x46b438
46bc84: add r12d, dword ptr [rsp + 0x2c]
46bc89: jmp 0x46ae1d
46bc8e: nop 
46bc90: mov r9, qword ptr [rsp + 0x40]
46bc95: mov ecx, dword ptr [rsp + 0x20]
46bc99: test ecx, ecx
46bc9b: jle 0x46bd30
46bca1: movsxd r14, dword ptr [rsp + 0x20]
46bca6: mov rax, qword ptr [rsp + 0x60]
46bcab: mov r13, r9
46bcae: mov r12d, edx
46bcb1: mov rbx, r14
46bcb4: sub rbx, rax
46bcb7: cmp rax, r14
46bcba: cmovle r14, rax
46bcbe: test r14, r14
46bcc1: je 0x46be6a
46bcc7: mov qword ptr [rsp + 0x20], r15
46bccc: mov r15, r14
46bccf: mov r14, r9
46bcd2: mov qword ptr [rsp + 0x40], rbx
46bcd7: mov ebx, edx
46bcd9: jmp 0x46bd03
46bcdb: nop dword ptr [rax + rax]
46bce0: lea rdi, [rax + 1]
46bce4: mov qword ptr [rbp + 0x28], rdi
46bce8: mov byte ptr [rax], sil
46bceb: mov r12d, r13d
46bcee: mov rax, r14
46bcf1: sub r12d, r14d
46bcf4: sub rax, r13
46bcf7: add r12d, ebx
46bcfa: add rax, r15
46bcfd: je 0x46be60
46bd03: add r13, 1
46bd07: mov rax, qword ptr [rbp + 0x28]
46bd0b: movzx esi, byte ptr [r13 - 1]
46bd10: cmp rax, qword ptr [rbp + 0x30]
46bd14: jb 0x46bce0
46bd16: mov rdi, rbp
46bd19: call 0x41e8a0
46bd1e: cmp eax, -1
46bd21: jne 0x46bceb
46bd23: jmp 0x46b438
46bd28: nop dword ptr [rax + rax]
46bd30: mov rax, qword ptr [rsp + 8]
46bd35: mov eax, dword ptr [rax + 8]
46bd38: mov dword ptr [rsp + 0x20], eax
46bd3c: lea esi, [rax + 0xf]
46bd3f: mov rax, qword ptr [rbp + 0x28]
46bd43: cmp rax, qword ptr [rbp + 0x30]
46bd47: jae 0x46c3ac
46bd4d: mov ebx, dword ptr [rsp + 0x30]
46bd51: lea rcx, [rax + 1]
46bd55: mov qword ptr [rbp + 0x28], rcx
46bd59: cmp ebx, 1
46bd5c: mov byte ptr [rax], sil
46bd5f: sbb eax, eax
46bd61: and eax, 0xfffffffe
46bd64: add eax, 0x2d
46bd67: cmp ebx, 1
46bd6a: sbb esi, esi
46bd6c: and esi, 0xfffffffe
46bd6f: add esi, 0x2d
46bd72: mov rcx, qword ptr [rbp + 0x28]
46bd76: cmp rcx, qword ptr [rbp + 0x30]
46bd7a: jae 0x46c3cb
46bd80: lea rsi, [rcx + 1]
46bd84: lea r14d, [rdx + 2]
46bd88: mov qword ptr [rbp + 0x28], rsi
46bd8c: mov byte ptr [rcx], al
46bd8e: mov r13, qword ptr [rsp + 0x10]
46bd93: mov rax, qword ptr [rsp + 0x48]
46bd98: mov r15, r13
46bd9b: mov rbx, r13
46bd9e: add r15, rax
46bda1: test rax, rax
46bda4: jne 0x46bdcd
46bda6: jmp 0x46bc2f
46bdab: nop dword ptr [rax + rax]
46bdb0: lea rdx, [rax + 1]
46bdb4: mov qword ptr [rbp + 0x28], rdx
46bdb8: mov byte ptr [rax], sil
46bdbb: mov r12d, r13d
46bdbe: sub r12d, ebx
46bdc1: add r12d, r14d
46bdc4: cmp r15, r13
46bdc7: je 0x46bc38
46bdcd: add r13, 1
46bdd1: mov rax, qword ptr [rbp + 0x28]
46bdd5: movzx esi, byte ptr [r13 - 1]
46bdda: cmp rax, qword ptr [rbp + 0x30]
46bdde: jb 0x46bdb0
46bde0: mov rdi, rbp
46bde3: call 0x41e8a0
46bde8: cmp eax, -1
46bdeb: jne 0x46bdbb
46bded: jmp 0x46b438
46bdf2: nop word ptr [rax + rax]
46bdf8: test al, 0x10
46bdfa: je 0x46b2cc
46be00: mov edx, dword ptr [rsp + 0x28]
46be04: test edx, edx
46be06: je 0x46c192
46be0c: mov rax, qword ptr [rbp + 0xa0]
46be13: test rax, rax
46be16: je 0x46c4f7
46be1c: mov rdx, qword ptr [rax + 0x20]
46be20: cmp rdx, qword ptr [rax + 0x28]
46be24: jae 0x46c4f7
46be2a: lea rcx, [rdx + 4]
46be2e: mov qword ptr [rax + 0x20], rcx
46be32: mov dword ptr [rdx], 0x20
46be38: jmp 0x46b2c8
46be3d: nop dword ptr [rax]
46be40: mov rax, qword ptr [rbp + 0x28]
46be44: cmp rax, qword ptr [rbp + 0x30]
46be48: jae 0x46c43d
46be4e: lea rdx, [rax + 1]
46be52: mov qword ptr [rbp + 0x28], rdx
46be56: mov byte ptr [rax], 0x2d
46be59: jmp 0x46b2c8
46be5e: nop 
46be60: mov r15, qword ptr [rsp + 0x20]
46be65: mov rbx, qword ptr [rsp + 0x40]
46be6a: mov edx, r12d
46be6d: test rbx, rbx
46be70: jle 0x46bd30
46be76: mov rdx, rbx
46be79: mov esi, 0x30
46be7e: mov rdi, rbp
46be81: call 0x418850
46be86: cmp rax, rbx
46be89: jne 0x46b438
46be8f: lea edx, [r12 + rax]
46be93: jmp 0x46baf4
46be98: nop dword ptr [rax + rax]
46bea0: mov eax, dword ptr [rsp + 0x60]
46bea4: mov dword ptr [rsp + 0x20], eax
46bea8: jmp 0x46b119
46bead: nop dword ptr [rax]
46beb0: mov rax, 0xfffffffffffffff0
46beb7: lea rcx, [rip + 0x3d27a]
46bebe: lea r12, [rip + 0x3d240]
46bec5: mov rax, qword ptr fs:[rax]
46bec9: movzx eax, word ptr [rax + r14*2]
46bece: lea r14, [rip + 0x3d243]
46bed5: and ax, 0x100
46bed9: lea rax, [rip + 0x3d22d]
46bee0: cmove r14, rcx
46bee4: cmove r12, rax
46bee8: jmp 0x46ad07
46beed: nop dword ptr [rax]
46bef0: mov rax, 0xfffffffffffffff0
46bef7: movaps xmm6, xmmword ptr [rsp + 0x10]
46befc: lea rdx, [rip + 0x3d235]
46bf03: lea r12, [rip + 0x3d1fb]
46bf0a: mov rax, qword ptr fs:[rax]
46bf0e: movmskps ebx, xmm6
46bf11: and ebx, 8
46bf14: movzx eax, word ptr [rax + r14*2]
46bf19: lea r14, [rip + 0x3d1f8]
46bf20: and ax, 0x100
46bf24: lea rax, [rip + 0x3d1e2]
46bf2b: cmove r14, rdx
46bf2f: cmove r12, rax
46bf33: jmp 0x46b480
46bf38: cmp ax, 0x400
46bf3c: jne 0x46c56b
46bf42: test ebx, ebx
46bf44: je 0x46b119
46bf4a: cmp ecx, 7
46bf4d: jg 0x46abef
46bf53: test dil, dil
46bf56: je 0x46b119
46bf5c: jmp 0x46abef
46bf61: nop dword ptr [rax]
46bf68: cmp ax, 0xc00
46bf6c: je 0x46b119
46bf72: jmp 0x401604
46bf77: nop word ptr [rax + rax]
46bf80: mov rax, qword ptr [rbp + 0x28]
46bf84: cmp rax, qword ptr [rbp + 0x30]
46bf88: jae 0x46c4e3
46bf8e: lea rdx, [rax + 1]
46bf92: mov qword ptr [rbp + 0x28], rdx
46bf96: mov byte ptr [rax], 0x2b
46bf99: jmp 0x46b2c8
46bf9e: nop 
46bfa0: movzx esi, dl
46bfa3: mov rdi, rbp
46bfa6: call 0x41e8a0
46bfab: cmp eax, -1
46bfae: jne 0x46b70b
46bfb4: jmp 0x46b438
46bfb9: nop dword ptr [rax]
46bfc0: movzx esi, dl
46bfc3: mov rdi, rbp
46bfc6: call 0x41e8a0
46bfcb: cmp eax, -1
46bfce: jne 0x46b6ed
46bfd4: jmp 0x46b438
46bfd9: nop dword ptr [rax]
46bfe0: movzx esi, dl
46bfe3: mov rdi, rbp
46bfe6: call 0x41e8a0
46bfeb: cmp eax, -1
46bfee: jne 0x46b729
46bff4: jmp 0x46b438
46bff9: nop dword ptr [rax]
46c000: mov r12d, eax
46c003: mov rbx, qword ptr [rsp + 0x20]
46c008: sub rbx, qword ptr [rsp + 0x60]
46c00d: test rbx, rbx
46c010: jle 0x46c4b4
46c016: mov rdx, rbx
46c019: mov esi, 0x30
46c01e: mov rdi, rbp
46c021: call 0x474150
46c026: jmp 0x46be86
46c02b: nop dword ptr [rax + rax]
46c030: mov esi, 0x2d
46c035: mov rdi, rbp
46c038: call 0x474890
46c03d: cmp eax, -1
46c040: sete al
46c043: test al, al
46c045: je 0x46ad4c
46c04b: jmp 0x46b438
46c050: call 0x418850
46c055: mov r9, qword ptr [rsp + 0x58]
46c05a: mov r8, qword ptr [rsp + 0x50]
46c05f: jmp 0x46b274
46c064: nop dword ptr [rax]
46c068: mov esi, 0x30
46c06d: mov rdi, rbp
46c070: mov qword ptr [rsp + 0x58], r9
46c075: mov qword ptr [rsp + 0x50], r8
46c07a: call 0x474890
46c07f: mov r8, qword ptr [rsp + 0x50]
46c084: mov r9, qword ptr [rsp + 0x58]
46c089: cmp eax, -1
46c08c: je 0x46b438
46c092: mov rax, qword ptr [rsp + 8]
46c097: mov eax, dword ptr [rax + 8]
46c09a: mov dword ptr [rsp + 0x50], eax
46c09e: lea esi, [rax + 0x17]
46c0a1: mov rax, qword ptr [rbp + 0xa0]
46c0a8: test rax, rax
46c0ab: jne 0x46c388
46c0b1: mov rdi, rbp
46c0b4: mov qword ptr [rsp + 0x58], r9
46c0b9: mov qword ptr [rsp + 0x50], r8
46c0be: call 0x474890
46c0c3: mov r8, qword ptr [rsp + 0x50]
46c0c8: mov r9, qword ptr [rsp + 0x58]
46c0cd: cmp eax, -1
46c0d0: sete al
46c0d3: jmp 0x46b32f
46c0d8: nop dword ptr [rax + rax]
46c0e0: movsx esi, byte ptr [rsp + 0x40]
46c0e5: mov rdi, rbp
46c0e8: mov qword ptr [rsp + 0x58], r9
46c0ed: mov qword ptr [rsp + 0x50], r8
46c0f2: call 0x474890
46c0f7: mov r8, qword ptr [rsp + 0x50]
46c0fc: mov r9, qword ptr [rsp + 0x58]
46c101: cmp eax, -1
46c104: sete al
46c107: jmp 0x46b39f
46c10c: mov edx, 0x3fff
46c111: sub edx, dword ptr [rsp + 0x30]
46c115: mov dword ptr [rsp + 0x30], 1
46c11d: jmp 0x46ab08
46c122: sub ecx, 0x61
46c125: cmp cl, 5
46c128: ja 0x46c132
46c12a: lea ecx, [rax - 0x57]
46c12d: jmp 0x46abaa
46c132: lea ecx, [rax - 0x30]
46c135: test al, 7
46c137: jne 0x46abaa
46c13d: mov eax, dword ptr [rsp + 0x20]
46c141: add eax, 1
46c144: cdqe 
46c146: cmp rax, qword ptr [rsp + 0x60]
46c14b: setl sil
46c14f: setl dil
46c153: movzx esi, sil
46c157: jmp 0x46abb4
46c15c: cmp byte ptr [rsp + 0x40], 0x39
46c161: je 0x46c4a2
46c167: mov rcx, 0xffffffffffffffe0
46c16e: movsx rax, byte ptr [rsp + 0x40]
46c174: mov rcx, qword ptr fs:[rcx]
46c178: mov rdi, rax
46c17b: cmp dword ptr [rcx + rax*4], 0x65
46c17f: jg 0x46c47d
46c185: add edi, 1
46c188: mov byte ptr [rsp + 0x40], dil
46c18d: jmp 0x46b119
46c192: mov rax, qword ptr [rbp + 0x28]
46c196: cmp rax, qword ptr [rbp + 0x30]
46c19a: jae 0x46c518
46c1a0: lea rdx, [rax + 1]
46c1a4: mov qword ptr [rbp + 0x28], rdx
46c1a8: mov byte ptr [rax], 0x20
46c1ab: jmp 0x46b2c8
46c1b0: mov rdi, rbp
46c1b3: mov dword ptr [rsp + 0x20], edx
46c1b7: call 0x474890
46c1bc: mov edx, dword ptr [rsp + 0x20]
46c1c0: cmp eax, -1
46c1c3: sete al
46c1c6: jmp 0x46bb3f
46c1cb: mov esi, r8d
46c1ce: mov rdi, rbp
46c1d1: mov dword ptr [rsp + 0x20], edx
46c1d5: call 0x474890
46c1da: mov edx, dword ptr [rsp + 0x20]
46c1de: cmp eax, -1
46c1e1: je 0x46b438
46c1e7: add edx, 2
46c1ea: jmp 0x46bba1
46c1ef: mov esi, 0x2d
46c1f4: mov rdi, rbp
46c1f7: call 0x41e8a0
46c1fc: cmp eax, -1
46c1ff: sete al
46c202: jmp 0x46c043
46c207: mov esi, 0x2b
46c20c: mov rdi, rbp
46c20f: call 0x474890
46c214: cmp eax, -1
46c217: sete al
46c21a: jmp 0x46c043
46c21f: mov edx, 0x4002
46c224: sub edx, dword ptr [rsp + 0x30]
46c228: mov dword ptr [rsp + 0x30], 1
46c230: jmp 0x46b664
46c235: mov eax, dword ptr [rsp + 0x28]
46c239: movsxd rbx, dword ptr [rsp + 0x2c]
46c23e: test eax, eax
46c240: je 0x46c324
46c246: mov rdx, rbx
46c249: mov esi, 0x30
46c24e: mov rdi, rbp
46c251: mov qword ptr [rsp + 0x58], r9
46c256: mov qword ptr [rsp + 0x50], r8
46c25b: call 0x474150
46c260: mov r8, qword ptr [rsp + 0x50]
46c265: mov r9, qword ptr [rsp + 0x58]
46c26a: cmp rax, rbx
46c26d: jne 0x46b438
46c273: add r14d, dword ptr [rsp + 0x2c]
46c278: jmp 0x46b360
46c27d: add edi, 1
46c280: add dword ptr [rsi], 1
46c283: mov byte ptr [rax], dil
46c286: jmp 0x46b119
46c28b: movzx esi, al
46c28e: mov rdi, rbp
46c291: mov qword ptr [rsp + 0x58], r9
46c296: mov qword ptr [rsp + 0x50], r8
46c29b: call 0x41e8a0
46c2a0: mov r8, qword ptr [rsp + 0x50]
46c2a5: mov r9, qword ptr [rsp + 0x58]
46c2aa: cmp eax, -1
46c2ad: sete al
46c2b0: jmp 0x46b32f
46c2b5: mov esi, 0x30
46c2ba: mov rdi, rbp
46c2bd: mov qword ptr [rsp + 0x58], r9
46c2c2: mov qword ptr [rsp + 0x50], r8
46c2c7: call 0x41e8a0
46c2cc: mov r8, qword ptr [rsp + 0x50]
46c2d1: mov r9, qword ptr [rsp + 0x58]
46c2d6: cmp eax, -1
46c2d9: je 0x46b438
46c2df: mov rax, qword ptr [rsp + 8]
46c2e4: mov eax, dword ptr [rax + 8]
46c2e7: mov dword ptr [rsp + 0x50], eax
46c2eb: add eax, 0x17
46c2ee: jmp 0x46ba78
46c2f3: movzx esi, byte ptr [rsp + 0x40]
46c2f8: mov rdi, rbp
46c2fb: mov qword ptr [rsp + 0x58], r9
46c300: mov qword ptr [rsp + 0x50], r8
46c305: call 0x41e8a0
46c30a: mov r8, qword ptr [rsp + 0x50]
46c30f: mov r9, qword ptr [rsp + 0x58]
46c314: cmp eax, -1
46c317: sete al
46c31a: jmp 0x46b39f
46c31f: movsxd rbx, dword ptr [rsp + 0x2c]
46c324: mov rdx, rbx
46c327: mov esi, 0x30
46c32c: mov rdi, rbp
46c32f: mov qword ptr [rsp + 0x58], r9
46c334: mov qword ptr [rsp + 0x50], r8
46c339: call 0x418850
46c33e: mov r9, qword ptr [rsp + 0x58]
46c343: mov r8, qword ptr [rsp + 0x50]
46c348: jmp 0x46c26a
46c34d: mov qword ptr [rsp + 0x58], r9
46c352: mov esi, 0x2d
46c357: mov qword ptr [rsp + 0x50], r8
46c35c: mov rdi, rbp
46c35f: call 0x474890
46c364: mov r8, qword ptr [rsp + 0x50]
46c369: mov r9, qword ptr [rsp + 0x58]
46c36e: cmp eax, -1
46c371: sete al
46c374: test al, al
46c376: je 0x46b2c8
46c37c: jmp 0x46b438
46c381: nop dword ptr [rax]
46c388: mov rdx, qword ptr [rax + 0x20]
46c38c: mov rcx, qword ptr [rax + 0x28]
46c390: jmp 0x46b316
46c395: call 0x418850
46c39a: jmp 0x46bc7b
46c39f: test ebx, ebx
46c3a1: jne 0x46b119
46c3a7: jmp 0x46bf4a
46c3ac: movzx esi, sil
46c3b0: mov rdi, rbp
46c3b3: mov dword ptr [rsp + 0x20], edx
46c3b7: call 0x41e8a0
46c3bc: mov edx, dword ptr [rsp + 0x20]
46c3c0: cmp eax, -1
46c3c3: sete al
46c3c6: jmp 0x46bb3f
46c3cb: mov rdi, rbp
46c3ce: mov dword ptr [rsp + 0x20], edx
46c3d2: call 0x41e8a0
46c3d7: mov edx, dword ptr [rsp + 0x20]
46c3db: cmp eax, -1
46c3de: je 0x46b438
46c3e4: lea r14d, [rdx + 2]
46c3e8: jmp 0x46bd8e
46c3ed: mov rcx, r8
46c3f0: jmp 0x46aa89
46c3f5: mov rcx, r8
46c3f8: jmp 0x46a911
46c3fd: mov esi, 0x2b
46c402: mov rdi, rbp
46c405: call 0x41e8a0
46c40a: cmp eax, -1
46c40d: sete al
46c410: jmp 0x46c043
46c415: mov esi, 0x20
46c41a: mov rdi, rbp
46c41d: call 0x474890
46c422: cmp eax, -1
46c425: sete al
46c428: jmp 0x46c043
46c42d: movzx eax, byte ptr [rcx]
46c430: lea r9, [rcx + 1]
46c434: mov byte ptr [rsp + 0x40], al
46c438: jmp 0x46b633
46c43d: mov qword ptr [rsp + 0x58], r9
46c442: mov esi, 0x2d
46c447: mov qword ptr [rsp + 0x50], r8
46c44c: mov rdi, rbp
46c44f: call 0x41e8a0
46c454: mov r8, qword ptr [rsp + 0x50]
46c459: mov r9, qword ptr [rsp + 0x58]
46c45e: cmp eax, -1
46c461: sete al
46c464: jmp 0x46c374
46c469: mov qword ptr [rsp + 0x58], r9
46c46e: mov esi, 0x2b
46c473: mov qword ptr [rsp + 0x50], r8
46c478: jmp 0x46c35c
46c47d: mov r11d, dword ptr [rsp + 0x30]
46c482: test r11d, r11d
46c485: je 0x46c50b
46c48b: lea eax, [rdx - 4]
46c48e: test eax, eax
46c490: jle 0x46c52c
46c496: mov byte ptr [rsp + 0x40], 0x31
46c49b: mov edx, eax
46c49d: jmp 0x46b119
46c4a2: mov rax, qword ptr [rsp + 8]
46c4a7: movzx eax, byte ptr [rax + 8]
46c4ab: mov byte ptr [rsp + 0x40], al
46c4af: jmp 0x46b119
46c4b4: mov rax, qword ptr [rsp + 8]
46c4b9: mov edx, r12d
46c4bc: mov eax, dword ptr [rax + 8]
46c4bf: mov dword ptr [rsp + 0x20], eax
46c4c3: lea esi, [rax + 0xf]
46c4c6: jmp 0x46bb11
46c4cb: mov esi, 0x20
46c4d0: mov rdi, rbp
46c4d3: call 0x41e8a0
46c4d8: cmp eax, -1
46c4db: sete al
46c4de: jmp 0x46c043
46c4e3: mov qword ptr [rsp + 0x58], r9
46c4e8: mov esi, 0x2b
46c4ed: mov qword ptr [rsp + 0x50], r8
46c4f2: jmp 0x46c44c
46c4f7: mov qword ptr [rsp + 0x58], r9
46c4fc: mov esi, 0x20
46c501: mov qword ptr [rsp + 0x50], r8
46c506: jmp 0x46c35c
46c50b: mov byte ptr [rsp + 0x40], 0x31
46c510: add edx, 4
46c513: jmp 0x46b119
46c518: mov qword ptr [rsp + 0x58], r9
46c51d: mov esi, 0x20
46c522: mov qword ptr [rsp + 0x50], r8
46c527: jmp 0x46c44c
46c52c: mov eax, 4
46c531: mov byte ptr [rsp + 0x40], 0x31
46c536: sub eax, edx
46c538: mov dword ptr [rsp + 0x30], 0
46c540: mov edx, eax
46c542: jmp 0x46b119
46c547: lea rcx, [rip + 0x3ccd2]
46c54e: mov edx, 0xa5
46c553: lea rsi, [rip + 0x3cc7e]
46c55a: lea rdi, [rip + 0x3cc97]
46c561: call 0x4032a0
46c566: call 0x4547a0
46c56b: jmp 0x401604
46c570: endbr64 
46c574: push r13
46c576: push r12
46c578: push rbp
46c579: push rbx
46c57a: sub rsp, 8
46c57e: mov eax, dword ptr [rdi]
46c580: test eax, eax
46c582: je 0x46c5a2
46c584: mov rbp, rdi
46c587: mov rbx, rdi
46c58a: jmp 0x46c59b
46c58c: nop dword ptr [rax]
46c590: mov eax, dword ptr [rbx + 4]
46c593: add rbx, 4
46c597: test eax, eax
46c599: je 0x46c5c8
46c59b: cmp eax, 0xff
46c5a0: jbe 0x46c590
46c5a2: mov rax, 0xffffffffffffffc0
46c5a9: mov r8d, 0xffffffff
46c5af: mov dword ptr fs:[rax], 0x16
46c5b6: add rsp, 8
46c5ba: mov eax, r8d
46c5bd: pop rbx
46c5be: pop rbp
46c5bf: pop r12
46c5c1: pop r13
46c5c3: ret 
46c5c4: nop dword ptr [rax]
46c5c8: mov ecx, dword ptr [rip + 0x5695a]
46c5ce: lea edx, [rcx - 0x10]
46c5d1: cmp edx, 7
46c5d4: jbe 0x46c711
46c5da: mov edx, dword ptr fs:[0x18]
46c5e2: test edx, edx
46c5e4: mov edx, 1
46c5e9: jne 0x46c690
46c5ef: cmpxchg dword ptr [rip + 0x56936], edx
46c5f6: mov r13, qword ptr [rip + 0x57353]
46c5fd: test r13, r13
46c600: je 0x46c6b0
46c606: sub rbx, rbp
46c609: lea rdi, [rbx + 0x10]
46c60d: call 0x426410
46c612: mov r12, rax
46c615: test rax, rax
46c618: je 0x46c6d2
46c61e: movzx eax, byte ptr [rbp]
46c622: mov rdx, rbx
46c625: lea rsi, [rbp + 4]
46c629: lea rdi, [r12 + 0xc]
46c62e: mov ecx, dword ptr [rip + 0x568f4]
46c634: sar rdx, 2
46c638: mov rax, qword ptr [r13 + rax*8]
46c63d: mov qword ptr [r12], rax
46c641: lea eax, [rcx + 1]
46c644: mov dword ptr [rip + 0x568de], eax
46c64a: mov eax, 1
46c64f: shl eax, cl
46c651: mov dword ptr [r12 + 8], eax
46c656: call 0x476c10
46c65b: movzx edx, byte ptr [rbp]
46c65f: mov r8d, dword ptr [r12 + 8]
46c664: mov rax, qword ptr [rip + 0x572e5]
46c66b: mov qword ptr [rax + rdx*8], r12
46c66f: mov eax, dword ptr fs:[0x18]
46c677: test eax, eax
46c679: jne 0x46c6e0
46c67b: sub dword ptr [rip + 0x568aa], 1
46c682: add rsp, 8
46c686: mov eax, r8d
46c689: pop rbx
46c68a: pop rbp
46c68b: pop r12
46c68d: pop r13
46c68f: ret 
46c690: lock cmpxchg dword ptr [rip + 0x56894], edx
46c698: je 0x46c5f6
46c69e: lea rdi, [rip + 0x56887]
46c6a5: call 0x421250
46c6aa: jmp 0x46c5f6
46c6af: nop 
46c6b0: mov esi, 8
46c6b5: mov edi, 0xff
46c6ba: call 0x427d10
46c6bf: mov qword ptr [rip + 0x5728a], rax
46c6c6: mov r13, rax
46c6c9: test rax, rax
46c6cc: jne 0x46c606
46c6d2: or r8d, 0xffffffff
46c6d6: jmp 0x46c66f
46c6d8: nop dword ptr [rax + rax]
46c6e0: xor eax, eax
46c6e2: xchg dword ptr [rip + 0x56844], eax
46c6e8: cmp eax, 1
46c6eb: jle 0x46c5b6
46c6f1: xor r10d, r10d
46c6f4: mov edx, 1
46c6f9: mov esi, 0x81
46c6fe: mov eax, 0xca
46c703: lea rdi, [rip + 0x56822]
46c70a: syscall 
46c70c: jmp 0x46c5b6
46c711: mov rax, 0xffffffffffffffc0
46c718: mov r8d, 0xffffffff
46c71e: mov dword ptr fs:[rax], 0x1c
46c725: jmp 0x46c5b6
46c72a: nop word ptr [rax + rax]
46c730: endbr64 
46c734: push r13
46c736: mov rax, qword ptr [rip + 0x57213]
46c73d: push r12
46c73f: mov r12, rsi
46c742: push rbp
46c743: push rbx
46c744: mov rsi, qword ptr [rdi]
46c747: movzx edx, byte ptr [rsi]
46c74a: mov r9, qword ptr [rax + rdx*8]
46c74e: test r9, r9
46c751: je 0x46c7e8
46c757: movzx r10d, byte ptr [rsi + 1]
46c75c: mov rbx, rdi
46c75f: lea r11, [rsi + 1]
46c763: xor r13d, r13d
46c766: xor edi, edi
46c768: xor ebp, ebp
46c76a: nop word ptr [rax + rax]
46c770: lea rdx, [r9 + 0xc]
46c774: mov rcx, r11
46c777: movzx eax, r10b
46c77b: test r10b, r10b
46c77e: jne 0x46c79d
46c780: jmp 0x46c7e0
46c782: nop word ptr [rax + rax]
46c788: cmp eax, r8d
46c78b: jne 0x46c7bc
46c78d: movzx eax, byte ptr [rcx + 1]
46c791: add rcx, 1
46c795: add rdx, 4
46c799: test al, al
46c79b: je 0x46c7e0
46c79d: mov r8d, dword ptr [rdx]
46c7a0: test r8d, r8d
46c7a3: jne 0x46c788
46c7a5: mov rax, rcx
46c7a8: movsxd rdx, edi
46c7ab: sub rax, rsi
46c7ae: cmp rax, rdx
46c7b1: jle 0x46c7bc
46c7b3: mov ebp, dword ptr [r9 + 8]
46c7b7: mov edi, eax
46c7b9: mov r13, rcx
46c7bc: mov r9, qword ptr [r9]
46c7bf: test r9, r9
46c7c2: jne 0x46c770
46c7c4: mov eax, 1
46c7c9: test ebp, ebp
46c7cb: je 0x46c7d8
46c7cd: or word ptr [r12 + 0xe], bp
46c7d3: xor eax, eax
46c7d5: mov qword ptr [rbx], r13
46c7d8: pop rbx
46c7d9: pop rbp
46c7da: pop r12
46c7dc: pop r13
46c7de: ret 
46c7df: nop 
46c7e0: mov eax, dword ptr [rdx]
46c7e2: test eax, eax
46c7e4: jne 0x46c7bc
46c7e6: jmp 0x46c7a5
46c7e8: pop rbx
46c7e9: mov eax, 1
46c7ee: pop rbp
46c7ef: pop r12
46c7f1: pop r13
46c7f3: ret 
46c7f4: nop word ptr cs:[rax + rax]
46c7ff: nop 
46c800: endbr64 
46c804: push r13
46c806: mov rax, qword ptr [rip + 0x57143]
46c80d: push r12
46c80f: mov r12, rsi
46c812: push rbp
46c813: push rbx
46c814: mov rsi, qword ptr [rdi]
46c817: mov edx, dword ptr [rsi]
46c819: mov r9, qword ptr [rax + rdx*8]
46c81d: test r9, r9
46c820: je 0x46c8c0
46c826: mov r10d, dword ptr [rsi + 4]
46c82a: mov rbx, rdi
46c82d: lea r11, [rsi + 4]
46c831: xor r13d, r13d
46c834: xor edi, edi
46c836: xor ebp, ebp
46c838: nop dword ptr [rax + rax]
46c840: lea rax, [r9 + 0xc]
46c844: mov rdx, r11
46c847: mov r8d, r10d
46c84a: test r10d, r10d
46c84d: jne 0x46c86e
46c84f: jmp 0x46c8b8
46c851: nop dword ptr [rax]
46c858: cmp ecx, r8d
46c85b: jne 0x46c88f
46c85d: mov r8d, dword ptr [rdx + 4]
46c861: add rdx, 4
46c865: add rax, 4
46c869: test r8d, r8d
46c86c: je 0x46c8b8
46c86e: mov ecx, dword ptr [rax]
46c870: test ecx, ecx
46c872: jne 0x46c858
46c874: mov rax, rdx
46c877: movsxd rcx, edi
46c87a: sub rax, rsi
46c87d: sar rax, 2
46c881: cmp rax, rcx
46c884: jle 0x46c88f
46c886: mov ebp, dword ptr [r9 + 8]
46c88a: mov edi, eax
46c88c: mov r13, rdx
46c88f: mov r9, qword ptr [r9]
46c892: test r9, r9
46c895: jne 0x46c840
46c897: mov eax, 1
46c89c: test ebp, ebp
46c89e: je 0x46c8ab
46c8a0: or word ptr [r12 + 0xe], bp
46c8a6: xor eax, eax
46c8a8: mov qword ptr [rbx], r13
46c8ab: pop rbx
46c8ac: pop rbp
46c8ad: pop r12
46c8af: pop r13
46c8b1: ret 
46c8b2: nop word ptr [rax + rax]
46c8b8: mov eax, dword ptr [rax]
46c8ba: test eax, eax
46c8bc: jne 0x46c88f
46c8be: jmp 0x46c874
46c8c0: pop rbx
46c8c1: mov eax, 1
46c8c6: pop rbp
46c8c7: pop r12
46c8c9: pop r13
46c8cb: ret 
46c8cc: nop dword ptr [rax]
46c8d0: endbr64 
46c8d4: push rbx
46c8d5: mov rbx, rdi
46c8d8: mov eax, dword ptr fs:[0x18]
46c8e0: test eax, eax
46c8e2: jne 0x46c998
46c8e8: mov edx, 1
46c8ed: cmpxchg dword ptr [rip + 0x5663c], edx
46c8f4: mov rax, qword ptr [rip + 0x57075]
46c8fb: test rax, rax
46c8fe: je 0x46c940
46c900: mov r8d, dword ptr [rip + 0x55165]
46c907: cmp r8d, 0x100
46c90e: je 0x46c9c0
46c914: lea edx, [r8 + 1]
46c918: mov dword ptr [rip + 0x5514e], edx
46c91e: movsxd rdx, r8d
46c921: mov qword ptr [rax + rdx*8 - 0x40], rbx
46c926: mov eax, dword ptr fs:[0x18]
46c92e: test eax, eax
46c930: jne 0x46c968
46c932: sub dword ptr [rip + 0x565f7], 1
46c939: mov eax, r8d
46c93c: pop rbx
46c93d: ret 
46c93e: nop 
46c940: mov esi, 8
46c945: mov edi, 0xf8
46c94a: call 0x427d10
46c94f: mov qword ptr [rip + 0x5701a], rax
46c956: test rax, rax
46c959: jne 0x46c900
46c95b: or r8d, 0xffffffff
46c95f: jmp 0x46c926
46c961: nop dword ptr [rax]
46c968: xor eax, eax
46c96a: xchg dword ptr [rip + 0x565c0], eax
46c970: cmp eax, 1
46c973: jle 0x46c939
46c975: xor r10d, r10d
46c978: mov edx, 1
46c97d: mov esi, 0x81
46c982: mov eax, 0xca
46c987: lea rdi, [rip + 0x565a2]
46c98e: syscall 
46c990: jmp 0x46c939
46c992: nop word ptr [rax + rax]
46c998: xor eax, eax
46c99a: mov edx, 1
46c99f: lock cmpxchg dword ptr [rip + 0x56589], edx
46c9a7: je 0x46c8f4
46c9ad: lea rdi, [rip + 0x5657c]
46c9b4: call 0x421250
46c9b9: jmp 0x46c8f4
46c9be: nop 
46c9c0: mov rax, 0xffffffffffffffc0
46c9c7: mov r8d, 0xffffffff
46c9cd: mov dword ptr fs:[rax], 0x1c
46c9d4: jmp 0x46c926
46c9d9: nop dword ptr [rax]
46c9e0: endbr64 
46c9e4: sub rsp, 0xd8
46c9eb: mov qword ptr [rsp + 0x30], rdx
46c9f0: mov qword ptr [rsp + 0x38], rcx
46c9f5: mov qword ptr [rsp + 0x40], r8
46c9fa: mov qword ptr [rsp + 0x48], r9
46c9ff: test al, al
46ca01: je 0x46ca3a
46ca03: movaps xmmword ptr [rsp + 0x50], xmm0
46ca08: movaps xmmword ptr [rsp + 0x60], xmm1
46ca0d: movaps xmmword ptr [rsp + 0x70], xmm2
46ca12: movaps xmmword ptr [rsp + 0x80], xmm3
46ca1a: movaps xmmword ptr [rsp + 0x90], xmm4
46ca22: movaps xmmword ptr [rsp + 0xa0], xmm5
46ca2a: movaps xmmword ptr [rsp + 0xb0], xmm6
46ca32: movaps xmmword ptr [rsp + 0xc0], xmm7
46ca3a: mov rax, qword ptr fs:[0x28]
46ca43: mov qword ptr [rsp + 0x18], rax
46ca48: xor eax, eax
46ca4a: lea rax, [rsp + 0xe0]
46ca52: xor ecx, ecx
46ca54: mov rdx, rsp
46ca57: mov qword ptr [rsp + 8], rax
46ca5c: lea rax, [rsp + 0x20]
46ca61: mov dword ptr [rsp], 0x10
46ca68: mov dword ptr [rsp + 4], 0x30
46ca70: mov qword ptr [rsp + 0x10], rax
46ca75: call 0x413e90
46ca7a: mov rcx, qword ptr [rsp + 0x18]
46ca7f: xor rcx, qword ptr fs:[0x28]
46ca88: jne 0x46ca92
46ca8a: add rsp, 0xd8
46ca91: ret 
46ca92: call 0x4547a0
46ca97: nop word ptr [rax + rax]
46caa0: endbr64 
46caa4: mov rdi, qword ptr [rdi + 0x88]
46caab: mov eax, dword ptr [rdi + 4]
46caae: sub eax, 1
46cab1: mov dword ptr [rdi + 4], eax
46cab4: jne 0x46caeb
46cab6: mov qword ptr [rdi + 8], 0
46cabe: mov edx, dword ptr fs:[0x18]
46cac6: test edx, edx
46cac8: jne 0x46cad0
46caca: sub dword ptr [rdi], 1
46cacd: ret 
46cace: nop 
46cad0: xchg dword ptr [rdi], eax
46cad2: cmp eax, 1
46cad5: jle 0x46caeb
46cad7: xor r10d, r10d
46cada: mov edx, 1
46cadf: mov esi, 0x81
46cae4: mov eax, 0xca
46cae9: syscall 
46caeb: ret 
46caec: nop dword ptr [rax]
46caf0: push r14
46caf2: mov r9, rsi
46caf5: push r13
46caf7: push r12
46caf9: push rbp
46cafa: movsx ebp, byte ptr [rcx]
46cafd: push rbx
46cafe: lea eax, [rbp - 1]
46cb01: cmp al, 0x7d
46cb03: jbe 0x46cb18
46cb05: pop rbx
46cb06: mov rax, r9
46cb09: pop rbp
46cb0a: pop r12
46cb0c: pop r13
46cb0e: pop r14
46cb10: ret 
46cb11: nop dword ptr [rax]
46cb18: mov rbx, rdx
46cb1b: mov r12, rdx
46cb1e: lea r13, [rcx + 1]
46cb22: mov r14d, r8d
46cb25: sub rbx, rsi
46cb28: mov rdx, rbx
46cb2b: call 0x401040
46cb30: lea rsi, [rax + rbx]
46cb34: mov rdi, rax
46cb37: cmp rax, rsi
46cb3a: jb 0x46cb73
46cb3c: jmp 0x46cbbd
46cb3e: nop 
46cb40: cmp rdi, rsi
46cb43: jae 0x46cb05
46cb45: cmp rsi, r9
46cb48: je 0x46cba0
46cb4a: mov dword ptr [r12 - 8], r14d
46cb4f: movsx ebp, byte ptr [r13]
46cb54: lea r9, [r12 - 8]
46cb59: cmp bpl, 0x7e
46cb5d: ja 0x46cba0
46cb5f: test bpl, bpl
46cb62: je 0x46cb98
46cb64: add r13, 1
46cb68: nop dword ptr [rax + rax]
46cb70: mov r12, r9
46cb73: mov eax, dword ptr [rsi - 4]
46cb76: sub rsi, 4
46cb7a: lea r9, [r12 - 4]
46cb7f: mov dword ptr [r12 - 4], eax
46cb84: sub ebp, 1
46cb87: je 0x46cb40
46cb89: cmp rdi, rsi
46cb8c: jb 0x46cb70
46cb8e: jmp 0x46cb05
46cb93: nop dword ptr [rax + rax]
46cb98: movsx ebp, byte ptr [r13 - 1]
46cb9d: jmp 0x46cb70
46cb9f: nop 
46cba0: mov rdx, rdi
46cba3: mov rdi, r9
46cba6: sub rdx, rsi
46cba9: call 0x401040
46cbae: pop rbx
46cbaf: pop rbp
46cbb0: mov r9, rax
46cbb3: pop r12
46cbb5: pop r13
46cbb7: mov rax, r9
46cbba: pop r14
46cbbc: ret 
46cbbd: mov r9, r12
46cbc0: jmp 0x46cb05
46cbc5: nop word ptr cs:[rax + rax]
46cbd0: push r15
46cbd2: push r14
46cbd4: mov r14, rsi
46cbd7: push r13
46cbd9: mov r13, rdx
46cbdc: push r12
46cbde: push rbp
46cbdf: mov rbp, rdi
46cbe2: lea rdi, [rip + 0x28ce9]
46cbe9: push rbx
46cbea: sub r14, rbp
46cbed: sub rsp, 0x438
46cbf4: mov rax, qword ptr fs:[0x28]
46cbfd: mov qword ptr [rsp + 0x428], rax
46cc05: xor eax, eax
46cc07: lea r15, [rsp + 0x20]
46cc0c: call 0x454490
46cc11: mov edi, 0x2e
46cc16: mov r12, rax
46cc19: mov rsi, rax
46cc1c: call 0x454520
46cc21: mov rsi, r12
46cc24: mov edi, 0x2c
46cc29: mov dword ptr [rsp + 8], eax
46cc2d: call 0x454520
46cc32: mov rsi, r14
46cc35: lea rdi, [rsp + 0x10]
46cc3a: mov edx, 4
46cc3f: sar rsi, 2
46cc43: mov dword ptr [rsp + 0xc], eax
46cc47: mov qword ptr [rsp + 0x10], r15
46cc4c: mov qword ptr [rsp + 0x18], 0x400
46cc55: call 0x428e40
46cc5a: test al, al
46cc5c: je 0x46cd60
46cc62: mov rbx, qword ptr [rsp + 0x10]
46cc67: mov rdx, r14
46cc6a: mov rsi, rbp
46cc6d: mov rdi, rbx
46cc70: call 0x401150
46cc75: lea rdx, [rax - 4]
46cc79: cmp rdx, rbx
46cc7c: jb 0x46cce2
46cc7e: mov rcx, 0xffffffffffffffa0
46cc85: mov rsi, r13
46cc88: mov r8, qword ptr fs:[rcx]
46cc8c: test r12, r12
46cc8f: je 0x46ccab
46cc91: jmp 0x46cd38
46cc96: nop word ptr cs:[rax + rax]
46cca0: sub rdx, 4
46cca4: mov dword ptr [rsi], ecx
46cca6: cmp rbx, rdx
46cca9: ja 0x46ccd1
46ccab: mov ecx, dword ptr [rdx]
46ccad: sub rsi, 4
46ccb1: lea edi, [rcx - 0x30]
46ccb4: cmp edi, 9
46ccb7: ja 0x46cca0
46ccb9: mov rdi, qword ptr [r8]
46ccbc: add ecx, 3
46ccbf: sub rdx, 4
46ccc3: movsxd rcx, ecx
46ccc6: mov ecx, dword ptr [rdi + rcx*8 + 0x40]
46ccca: mov dword ptr [rsi], ecx
46cccc: cmp rbx, rdx
46cccf: jbe 0x46ccab
46ccd1: sub rax, rbx
46ccd4: lea rbp, [rax - 4]
46ccd8: not rbp
46ccdb: and rbp, 0xfffffffffffffffc
46ccdf: add r13, rbp
46cce2: mov rdi, qword ptr [rsp + 0x10]
46cce7: cmp rdi, r15
46ccea: je 0x46ccf1
46ccec: call 0x426a00
46ccf1: mov rax, qword ptr [rsp + 0x428]
46ccf9: xor rax, qword ptr fs:[0x28]
46cd02: jne 0x46cd65
46cd04: add rsp, 0x438
46cd0b: mov rax, r13
46cd0e: pop rbx
46cd0f: pop rbp
46cd10: pop r12
46cd12: pop r13
46cd14: pop r14
46cd16: pop r15
46cd18: ret 
46cd19: nop dword ptr [rax]
46cd20: mov rdi, qword ptr [r8]
46cd23: add ecx, 3
46cd26: movsxd rcx, ecx
46cd29: mov ecx, dword ptr [rdi + rcx*8 + 0x40]
46cd2d: mov dword ptr [rsi], ecx
46cd2f: sub rdx, 4
46cd33: cmp rbx, rdx
46cd36: ja 0x46ccd1
46cd38: mov ecx, dword ptr [rdx]
46cd3a: sub rsi, 4
46cd3e: lea edi, [rcx - 0x30]
46cd41: cmp edi, 9
46cd44: jbe 0x46cd20
46cd46: mov edi, ecx
46cd48: and edi, 0xfffffffd
46cd4b: cmp edi, 0x2c
46cd4e: jne 0x46cd2d
46cd50: cmp ecx, 0x2e
46cd53: mov ecx, dword ptr [rsp + 0xc]
46cd57: cmove ecx, dword ptr [rsp + 8]
46cd5c: mov dword ptr [rsi], ecx
46cd5e: jmp 0x46cd2f
46cd60: mov r13, rbp
46cd63: jmp 0x46ccf1
46cd65: call 0x4547a0
46cd6a: nop word ptr [rax + rax]
46cd70: endbr64 
46cd74: push r13
46cd76: push r12
46cd78: mov r12, rdi
46cd7b: push rbp
46cd7c: mov ebp, esi
46cd7e: push rbx
46cd7f: sub rsp, 0x18
46cd83: mov rax, qword ptr [rdi + 0xa0]
46cd8a: mov rdx, qword ptr [rax + 0x20]
46cd8e: mov rsi, qword ptr [rax + 0x18]
46cd92: mov rbx, rdx
46cd95: sub rbx, rsi
46cd98: sar rbx, 2
46cd9c: test ebx, ebx
46cd9e: je 0x46ce25
46cda4: mov rdi, qword ptr [rdi + 0x1c8]
46cdab: mov rdx, 0x4c1b60
46cdb2: mov rax, 0x4c2208
46cdb9: mov r13, qword ptr [rdi + 0xd8]
46cdc0: sub rax, rdx
46cdc3: mov rcx, r13
46cdc6: sub rcx, rdx
46cdc9: cmp rax, rcx
46cdcc: jbe 0x46ce48
46cdce: movsxd rbx, ebx
46cdd1: mov rdx, rbx
46cdd4: call qword ptr [r13 + 0x38]
46cdd8: test rax, rax
46cddb: je 0x46ce88
46cde1: mov edx, 0xffffffff
46cde6: cmp rax, rdx
46cde9: je 0x46ce88
46cdef: mov rdx, qword ptr [r12 + 0xa0]
46cdf7: lea r13, [rax*4]
46cdff: sub rbx, rax
46ce02: mov rdi, qword ptr [rdx + 0x18]
46ce06: mov rdx, rbx
46ce09: lea rsi, [rdi + r13]
46ce0d: call 0x476c20
46ce12: mov rax, qword ptr [r12 + 0xa0]
46ce1a: mov rdx, qword ptr [rax + 0x20]
46ce1e: sub rdx, r13
46ce21: mov qword ptr [rax + 0x20], rdx
46ce25: cmp qword ptr [rax + 0x28], rdx
46ce29: jbe 0x46ce70
46ce2b: lea rcx, [rdx + 4]
46ce2f: mov qword ptr [rax + 0x20], rcx
46ce33: mov eax, ebp
46ce35: mov dword ptr [rdx], ebp
46ce37: add rsp, 0x18
46ce3b: pop rbx
46ce3c: pop rbp
46ce3d: pop r12
46ce3f: pop r13
46ce41: ret 
46ce42: nop word ptr [rax + rax]
46ce48: mov qword ptr [rsp + 8], rdi
46ce4d: call 0x41b240
46ce52: mov rax, qword ptr [r12 + 0xa0]
46ce5a: mov rdi, qword ptr [rsp + 8]
46ce5f: mov rsi, qword ptr [rax + 0x18]
46ce63: jmp 0x46cdce
46ce68: nop dword ptr [rax + rax]
46ce70: add rsp, 0x18
46ce74: mov esi, ebp
46ce76: mov rdi, r12
46ce79: pop rbx
46ce7a: pop rbp
46ce7b: pop r12
46ce7d: pop r13
46ce7f: jmp 0x474890
46ce84: nop dword ptr [rax]
46ce88: mov eax, 0xffffffff
46ce8d: jmp 0x46ce37
46ce8f: nop 
46ce90: push rbp
46ce91: mov rbp, rsp
46ce94: push r15
46ce96: push r14
46ce98: push r13
46ce9a: push r12
46ce9c: push rbx
46ce9d: sub rsp, 0x958
46cea4: mov rax, qword ptr [rbp + 0x20]
46cea8: mov qword ptr [rbp - 0x8f0], rdi
46ceaf: lea rdi, [rbp - 0x850]
46ceb6: mov qword ptr [rbp - 0x918], rsi
46cebd: mov r14, qword ptr [rbp + 0x18]
46cec1: mov qword ptr [rbp - 0x8f8], rax
46cec8: mov rax, qword ptr [rbp + 0x30]
46cecc: mov dword ptr [rbp - 0x90c], edx
46ced2: mov qword ptr [rbp - 0x8d0], r8
46ced9: mov dword ptr [rbp - 0x8e8], r9d
46cee0: mov qword ptr [rbp - 0x8d8], rax
46cee7: mov rbx, qword ptr fs:[0x28]
46cef0: mov qword ptr [rbp - 0x38], rbx
46cef4: xor ebx, ebx
46cef6: mov qword ptr [rbp - 0x8c8], rdi
46cefd: mov qword ptr [rbp - 0x860], rdi
46cf04: lea rdi, [rbp - 0x440]
46cf0b: mov qword ptr [rbp - 0x858], 0x400
46cf16: mov qword ptr [rbp - 0x8e0], rdi
46cf1d: mov qword ptr [rbp - 0x450], rdi
46cf24: mov qword ptr [rbp - 0x448], 0x400
46cf2f: mov qword ptr [rbp - 0x8a8], 0
46cf3a: cmp rax, -1
46cf3e: je 0x46da98
46cf44: mov r11d, dword ptr [r14]
46cf47: test r11d, r11d
46cf4a: je 0x46df8b
46cf50: mov rax, qword ptr [rbp - 0x8c8]
46cf57: xor r13d, r13d
46cf5a: xor r15d, r15d
46cf5d: lea r12, [rbp - 0x8a8]
46cf64: mov qword ptr [rbp - 0x8c0], 0xe
46cf6f: mov qword ptr [rbp - 0x8b8], rax
46cf76: nop word ptr cs:[rax + rax]
46cf80: mov rcx, qword ptr [rbp - 0x8b8]
46cf87: lea rax, [r13 + r13*8]
46cf8c: mov rsi, r15
46cf8f: mov rdi, r14
46cf92: add r13, 1
46cf96: lea rbx, [rcx + rax*8]
46cf9a: mov rcx, r12
46cf9d: mov rdx, rbx
46cfa0: call 0x472ed0
46cfa5: mov r14, qword ptr [rbx + 0x20]
46cfa9: add r15, rax
46cfac: mov r10d, dword ptr [r14]
46cfaf: test r10d, r10d
46cfb2: je 0x46d000
46cfb4: cmp qword ptr [rbp - 0x8c0], r13
46cfbb: jne 0x46cf80
46cfbd: lea rdi, [rbp - 0x860]
46cfc4: call 0x428d80
46cfc9: test al, al
46cfcb: je 0x46d3f0
46cfd1: mov rax, qword ptr [rbp - 0x860]
46cfd8: mov qword ptr [rbp - 0x8b8], rax
46cfdf: movabs rax, 0xe38e38e38e38e38f
46cfe9: mul qword ptr [rbp - 0x858]
46cff0: shr rdx, 6
46cff4: mov qword ptr [rbp - 0x8c0], rdx
46cffb: jmp 0x46cf80
46cffd: nop dword ptr [rax]
46d000: cmp qword ptr [rbp - 0x8a8], r15
46d007: mov rbx, r15
46d00a: cmovae rbx, qword ptr [rbp - 0x8a8]
46d012: lea rdi, [rbp - 0x450]
46d019: mov edx, 0x18
46d01e: mov rsi, rbx
46d021: call 0x428e40
46d026: mov byte ptr [rbp - 0x951], al
46d02c: test al, al
46d02e: je 0x46d3f0
46d034: mov rax, qword ptr [rbp - 0x450]
46d03b: mov r12, rbx
46d03e: lea rdx, [rbx*4]
46d046: shl r12, 4
46d04a: add r12, rax
46d04d: mov qword ptr [rbp - 0x8c0], rax
46d054: mov eax, dword ptr [rbp + 0x40]
46d057: lea r15, [r12 + rdx]
46d05b: and eax, 2
46d05e: mov rdi, r15
46d061: setne sil
46d065: mov dword ptr [rbp - 0x910], eax
46d06b: movzx esi, sil
46d06f: neg esi
46d071: call 0x401110
46d076: test r13, r13
46d079: je 0x46df52
46d07f: mov rcx, qword ptr [rbp - 0x8b8]
46d086: lea rax, [r13 + r13*8]
46d08b: mov qword ptr [rbp - 0x900], rbx
46d092: mov rbx, r12
46d095: lea r8, [rcx + rax*8]
46d099: mov r14, rcx
46d09c: mov r12, r8
46d09f: jmp 0x46d0c8
46d0a1: nop dword ptr [rax]
46d0a8: mov edx, dword ptr [r14 + 0x34]
46d0ac: movsxd rax, dword ptr [r14 + 0x30]
46d0b0: mov dword ptr [r15 + rax*4], edx
46d0b4: mov edx, dword ptr [r14 + 0x40]
46d0b8: movsxd rax, dword ptr [r14 + 0x30]
46d0bc: mov dword ptr [rbx + rax*4], edx
46d0bf: add r14, 0x48
46d0c3: cmp r12, r14
46d0c6: je 0x46d123
46d0c8: movsxd rax, dword ptr [r14 + 0x2c]
46d0cc: cmp eax, -1
46d0cf: je 0x46d0d9
46d0d1: mov dword ptr [r15 + rax*4], 0
46d0d9: movsxd rax, dword ptr [r14 + 0x28]
46d0dd: cmp eax, -1
46d0e0: je 0x46d0ea
46d0e2: mov dword ptr [r15 + rax*4], 0
46d0ea: mov rsi, qword ptr [r14 + 0x38]
46d0ee: test rsi, rsi
46d0f1: je 0x46d0bf
46d0f3: cmp rsi, 1
46d0f7: je 0x46d0a8
46d0f9: movsxd rdx, dword ptr [r14 + 0x30]
46d0fd: movsxd r9, dword ptr [r14 + 8]
46d101: mov rdi, r14
46d104: add r14, 0x48
46d108: mov rax, qword ptr [rip + 0x56859]
46d10f: shl rdx, 2
46d113: lea rcx, [rbx + rdx]
46d117: add rdx, r15
46d11a: call qword ptr [rax + r9*8]
46d11e: cmp r12, r14
46d121: jne 0x46d0c8
46d123: mov r12, rbx
46d126: mov rbx, qword ptr [rbp - 0x900]
46d12d: test rbx, rbx
46d130: je 0x46d481
46d136: movzx r8d, byte ptr [rbp + 0x40]
46d13b: mov r9d, dword ptr [rbp + 0x40]
46d13f: xor edx, edx
46d141: lea r14, [rip + 0x3c118]
46d148: mov r10, qword ptr [rbp - 0x8c0]
46d14f: mov rcx, qword ptr [rbp - 0x8d0]
46d156: and r8d, 1
46d15a: and r9d, 8
46d15e: nop 
46d160: mov eax, dword ptr [r15 + rdx*4]
46d164: cmp eax, 7
46d167: jg 0x46d970
46d16d: cmp eax, -1
46d170: jl 0x46dda0
46d176: cmp eax, 7
46d179: ja 0x46da31
46d17f: movsxd rax, dword ptr [r14 + rax*4]
46d183: add rax, r14
46d186: notrack jmp rax
46d189: endbr64 
46d18d: mov r11d, 0x10
46d193: movsxd rax, dword ptr [r14 + 0x30]
46d197: mov r12d, dword ptr [rbp - 0x8f0]
46d19e: shl rax, 4
46d1a2: add rax, qword ptr [rbp - 0x8c0]
46d1a9: test r12d, r12d
46d1ac: je 0x46e855
46d1b2: mov dword ptr [rbp - 0x920], 0
46d1bc: mov rsi, qword ptr [rax]
46d1bf: mov dword ptr [rbp - 0x928], 0
46d1c9: mov dword ptr [rbp - 0x8f0], 0
46d1d3: test ecx, ecx
46d1d5: js 0x46e845
46d1db: jne 0x46e37c
46d1e1: test rsi, rsi
46d1e4: jne 0x46ee3b
46d1ea: cmp r11d, 8
46d1ee: jne 0x46f0d2
46d1f4: cmp byte ptr [rbp - 0x930], 0
46d1fb: je 0x46f0d2
46d201: mov rax, qword ptr [rbp - 0x908]
46d208: mov r9d, 4
46d20e: mov dword ptr [rax - 4], 0x30
46d215: sub rax, 4
46d219: mov qword ptr [rbp - 0x908], rax
46d220: mov byte ptr [rbp - 0x934], 0x20
46d227: mov r12, qword ptr [rbp - 0x908]
46d22e: xor edx, edx
46d230: mov esi, dword ptr [rbp - 0x900]
46d236: test esi, esi
46d238: je 0x46ee17
46d23e: mov qword ptr [rbp - 0x940], 0
46d249: mov eax, dword ptr [rbp - 0x8f0]
46d24f: test eax, eax
46d251: je 0x46ea51
46d257: mov rax, qword ptr [r13 + 0xa0]
46d25e: test rax, rax
46d261: je 0x46f276
46d267: mov rsi, qword ptr [rax + 0x20]
46d26b: cmp rsi, qword ptr [rax + 0x28]
46d26f: jae 0x46f276
46d275: lea rdi, [rsi + 4]
46d279: mov qword ptr [rax + 0x20], rdi
46d27d: mov dword ptr [rsi], 0x2d
46d283: cmp ebx, 0x7fffffff
46d289: je 0x46d3d9
46d28f: add ebx, 1
46d292: sub r15d, 1
46d296: cmp qword ptr [rbp - 0x940], 0
46d29e: je 0x46d312
46d2a0: cmp r11d, 0x10
46d2a4: jne 0x46d312
46d2a6: cmp byte ptr [rbp - 0x930], 0
46d2ad: je 0x46d312
46d2af: mov rax, qword ptr [r13 + 0xa0]
46d2b6: test rax, rax
46d2b9: je 0x46f570
46d2bf: mov r8, qword ptr [rax + 0x20]
46d2c3: mov rdi, qword ptr [rax + 0x28]
46d2c7: cmp r8, rdi
46d2ca: jae 0x46f570
46d2d0: lea rsi, [r8 + 4]
46d2d4: mov qword ptr [rax + 0x20], rsi
46d2d8: mov dword ptr [r8], 0x30
46d2df: cmp ebx, 0x7fffffff
46d2e5: je 0x46d3d9
46d2eb: cmp rsi, rdi
46d2ee: jae 0x46f529
46d2f4: lea rdi, [rsi + 4]
46d2f8: mov qword ptr [rax + 0x20], rdi
46d2fc: mov dword ptr [rsi], r10d
46d2ff: cmp ebx, 0x7ffffffe
46d305: je 0x46d3d9
46d30b: add ebx, 2
46d30e: sub r15d, 2
46d312: sar r9, 2
46d316: add edx, r9d
46d319: sub r15d, edx
46d31c: test ecx, ecx
46d31e: jg 0x46eb01
46d324: test ebx, ebx
46d326: js 0x46f90e
46d32c: mov rcx, qword ptr [r13 + 0xd8]
46d333: mov rdx, 0x4c1b60
46d33a: mov rax, 0x4c2208
46d341: mov rsi, rcx
46d344: sub rax, rdx
46d347: sub rsi, rdx
46d34a: cmp rax, rsi
46d34d: jbe 0x46f250
46d353: mov qword ptr [rbp - 0x8f0], r9
46d35a: mov rdx, r9
46d35d: mov rsi, r12
46d360: mov rdi, r13
46d363: call qword ptr [rcx + 0x38]
46d366: mov r9, qword ptr [rbp - 0x8f0]
46d36d: cmp r9, rax
46d370: jne 0x46d3d9
46d372: mov r12d, 0x7fffffff
46d378: mov eax, r12d
46d37b: sub eax, ebx
46d37d: cdqe 
46d37f: cmp r9, rax
46d382: jg 0x46d3cb
46d384: add ebx, r9d
46d387: test r15d, r15d
46d38a: jle 0x46dcc8
46d390: movsxd rdx, r15d
46d393: mov esi, 0x20
46d398: mov rdi, r13
46d39b: mov qword ptr [rbp - 0x8f0], rdx
46d3a2: call 0x474150
46d3a7: mov rdx, qword ptr [rbp - 0x8f0]
46d3ae: cmp rdx, rax
46d3b1: jne 0x46d3d9
46d3b3: cmp ebx, 0x7ffffffe
46d3b9: ja 0x46f8a8
46d3bf: sub r12d, ebx
46d3c2: cmp r12d, r15d
46d3c5: jae 0x46dcc2
46d3cb: mov rax, 0xffffffffffffffc0
46d3d2: mov dword ptr fs:[rax], 0x4b
46d3d9: mov rax, qword ptr [rbp - 0x8e8]
46d3e0: test rax, rax
46d3e3: je 0x46d3f0
46d3e5: mov rdi, rax
46d3e8: call 0x426a00
46d3ed: nop dword ptr [rax]
46d3f0: mov r12d, 0xffffffff
46d3f6: mov rdi, qword ptr [rbp - 0x450]
46d3fd: cmp rdi, qword ptr [rbp - 0x8e0]
46d404: je 0x46d40b
46d406: call 0x426a00
46d40b: mov rdi, qword ptr [rbp - 0x860]
46d412: cmp rdi, qword ptr [rbp - 0x8c8]
46d419: je 0x46d420
46d41b: call 0x426a00
46d420: mov rax, qword ptr [rbp - 0x38]
46d424: xor rax, qword ptr fs:[0x28]
46d42d: jne 0x46f9a9
46d433: lea rsp, [rbp - 0x28]
46d437: mov eax, r12d
46d43a: pop rbx
46d43b: pop r12
46d43d: pop r13
46d43f: pop r14
46d441: pop r15
46d443: pop rbp
46d444: ret 
46d445: cmp eax, 0x100
46d44a: jne 0x46dae0
46d450: mov eax, dword ptr [rcx]
46d452: cmp eax, 0x2f
46d455: ja 0x46da20
46d45b: mov esi, eax
46d45d: add eax, 8
46d460: add rsi, qword ptr [rcx + 0x10]
46d464: mov dword ptr [rcx], eax
46d466: mov rsi, qword ptr [rsi]
46d469: mov rax, rdx
46d46c: shl rax, 4
46d470: mov qword ptr [r10 + rax], rsi
46d474: add rdx, 1
46d478: cmp rdx, rbx
46d47b: jb 0x46d160
46d481: movsxd rax, dword ptr [rbp + 0x10]
46d485: mov qword ptr [rbp - 0x8d0], rax
46d48c: cmp r13, rax
46d48f: jbe 0x46df5b
46d495: movzx eax, byte ptr [rbp + 0x40]
46d499: mov rbx, qword ptr [rbp - 0x8b8]
46d4a0: mov qword ptr [rbp - 0x960], r13
46d4a7: mov r13, qword ptr [rbp - 0x8f0]
46d4ae: and eax, 1
46d4b1: mov byte ptr [rbp - 0x952], al
46d4b7: mov eax, dword ptr [rbp + 0x40]
46d4ba: and eax, 8
46d4bd: mov dword ptr [rbp - 0x96c], eax
46d4c3: mov rax, qword ptr [rbp - 0x8f8]
46d4ca: add rax, 0x3e8
46d4d0: mov qword ptr [rbp - 0x968], rax
46d4d7: mov rax, qword ptr [rbp - 0x8d0]
46d4de: lea rax, [rax + rax*8]
46d4e2: lea r14, [rbx + rax*8]
46d4e6: mov ebx, dword ptr [rbp - 0x8e8]
46d4ec: movzx eax, byte ptr [r14 + 0xc]
46d4f1: movzx r9d, byte ptr [r14 + 0xd]
46d4f6: mov r10d, dword ptr [r14 + 8]
46d4fa: mov edx, eax
46d4fc: mov edi, eax
46d4fe: shr dl, 4
46d501: shr dil, 3
46d505: mov ecx, edx
46d507: mov edx, eax
46d509: and edi, 1
46d50c: and ecx, 1
46d50f: shr dl, 5
46d512: mov byte ptr [rbp - 0x930], dil
46d519: mov edi, eax
46d51b: mov dword ptr [rbp - 0x928], ecx
46d521: mov ecx, edx
46d523: mov edx, eax
46d525: and edi, 1
46d528: shr dl, 6
46d52b: and ecx, 1
46d52e: mov byte ptr [rbp - 0x938], dil
46d535: mov esi, edx
46d537: mov edx, eax
46d539: mov dword ptr [rbp - 0x900], ecx
46d53f: mov ecx, eax
46d541: shr dl, 1
46d543: and esi, 1
46d546: shr cl, 7
46d549: mov dword ptr [rbp - 0x920], esi
46d54f: mov esi, edx
46d551: mov edx, r9d
46d554: shr r9b, 3
46d558: shr dl, 1
46d55a: mov byte ptr [rbp - 0x940], cl
46d560: and esi, 1
46d563: and r9d, 1
46d567: mov ecx, edx
46d569: mov edx, eax
46d56b: mov dword ptr [rbp - 0x950], esi
46d571: movzx esi, byte ptr [r14 + 0x10]
46d576: shr dl, 2
46d579: and ecx, 1
46d57c: mov edi, edx
46d57e: movsxd rdx, dword ptr [r14 + 0x2c]
46d582: mov dword ptr [rbp - 0x948], ecx
46d588: and edi, 1
46d58b: mov byte ptr [rbp - 0x934], sil
46d592: mov ecx, dword ptr [r14]
46d595: mov dword ptr [rbp - 0x8f0], edi
46d59b: cmp edx, -1
46d59e: je 0x46dd90
46d5a4: mov rdi, qword ptr [rbp - 0x8c0]
46d5ab: shl rdx, 4
46d5af: mov r15d, dword ptr [rdi + rdx]
46d5b3: test r15d, r15d
46d5b6: js 0x46dde0
46d5bc: mov dword ptr [r14 + 4], r15d
46d5c0: movsxd rax, dword ptr [r14 + 0x28]
46d5c4: cmp eax, -1
46d5c7: je 0x46d5e2
46d5c9: mov rcx, qword ptr [rbp - 0x8c0]
46d5d0: shl rax, 4
46d5d4: mov ecx, dword ptr [rcx + rax]
46d5d7: test ecx, ecx
46d5d9: js 0x46de00
46d5df: mov dword ptr [r14], ecx
46d5e2: cmp r15d, ecx
46d5e5: mov eax, ecx
46d5e7: cmovge eax, r15d
46d5eb: cmp eax, 0xda
46d5f0: jle 0x46dd70
46d5f6: lea r12d, [rax + 0x20]
46d5fa: mov dword ptr [rbp - 0x958], ecx
46d600: movsxd r12, r12d
46d603: mov dword ptr [rbp - 0x908], r10d
46d60a: shl r12, 2
46d60e: mov byte ptr [rbp - 0x8e8], r9b
46d615: mov rdi, r12
46d618: call 0x421200
46d61d: movzx r9d, byte ptr [rbp - 0x8e8]
46d625: mov r10d, dword ptr [rbp - 0x908]
46d62c: test eax, eax
46d62e: mov ecx, dword ptr [rbp - 0x958]
46d634: jne 0x46d643
46d636: cmp r12, 0x1000
46d63d: ja 0x46f768
46d643: add r12, 0x17
46d647: mov rdx, rsp
46d64a: mov rax, r12
46d64d: and r12, 0xfffffffffffff000
46d654: sub rdx, r12
46d657: and rax, 0xfffffffffffffff0
46d65b: cmp rsp, rdx
46d65e: je 0x46d675
46d660: sub rsp, 0x1000
46d667: or qword ptr [rsp + 0xff8], 0
46d670: cmp rsp, rdx
46d673: jne 0x46d660
46d675: and eax, 0xfff
46d67a: sub rsp, rax
46d67d: test rax, rax
46d680: jne 0x46dfbc
46d686: lea rdx, [rsp + 0xf]
46d68b: and rdx, 0xfffffffffffffff0
46d68f: cmp r15d, ecx
46d692: jl 0x46db96
46d698: movsxd rax, r15d
46d69b: lea rax, [rax*4 + 0x80]
46d6a3: mov qword ptr [rbp - 0x8e8], 0
46d6ae: add rax, rdx
46d6b1: mov qword ptr [rbp - 0x908], rax
46d6b8: cmp r10d, 0xff
46d6bf: jg 0x46d6dd
46d6c1: mov rax, qword ptr [rip + 0x56280]
46d6c8: test rax, rax
46d6cb: je 0x46d6dd
46d6cd: movsxd r12, r10d
46d6d0: mov rax, qword ptr [rax + r12*8]
46d6d4: test rax, rax
46d6d7: jne 0x46de11
46d6dd: lea eax, [r10 - 0x20]
46d6e1: mov dword ptr [rbp - 0x958], r10d
46d6e8: cmp eax, 0x5a
46d6eb: jbe 0x46dbb0
46d6f1: endbr64 
46d6f5: mov rsi, qword ptr [r14 + 0x38]
46d6f9: mov rcx, rsp
46d6fc: lea rax, [rsi*8 + 0x17]
46d704: mov rdx, rax
46d707: and rax, 0xfffffffffffff000
46d70d: sub rcx, rax
46d710: and rdx, 0xfffffffffffffff0
46d714: mov rax, rcx
46d717: cmp rsp, rax
46d71a: je 0x46d731
46d71c: sub rsp, 0x1000
46d723: or qword ptr [rsp + 0xff8], 0
46d72c: cmp rsp, rax
46d72f: jne 0x46d71c
46d731: mov rax, rdx
46d734: and eax, 0xfff
46d739: sub rsp, rax
46d73c: test rax, rax
46d73f: je 0x46d747
46d741: or qword ptr [rsp + rax - 8], 0
46d747: lea r8, [rsp + 0xf]
46d74c: and r8, 0xfffffffffffffff0
46d750: test rsi, rsi
46d753: je 0x46d781
46d755: mov edi, dword ptr [r14 + 0x30]
46d759: mov r9, qword ptr [rbp - 0x8c0]
46d760: xor edx, edx
46d762: xor ecx, ecx
46d764: nop dword ptr [rax]
46d768: lea eax, [rdi + rdx]
46d76b: shl rax, 4
46d76f: add rax, r9
46d772: mov qword ptr [r8 + rcx*8], rax
46d776: lea ecx, [rdx + 1]
46d779: mov rdx, rcx
46d77c: cmp rsi, rcx
46d77f: ja 0x46d768
46d781: mov rax, qword ptr [r13 + 0xa0]
46d788: test rax, rax
46d78b: je 0x46f350
46d791: mov rdx, qword ptr [rax + 0x20]
46d795: mov rsi, qword ptr [rax + 0x28]
46d799: cmp rdx, rsi
46d79c: jae 0x46f350
46d7a2: lea rcx, [rdx + 4]
46d7a6: mov qword ptr [rax + 0x20], rcx
46d7aa: mov dword ptr [rdx], 0x25
46d7b0: movzx edx, byte ptr [r14 + 0xc]
46d7b5: test dl, 8
46d7b8: je 0x46f00c
46d7be: cmp rcx, rsi
46d7c1: jae 0x46f384
46d7c7: lea rdx, [rcx + 4]
46d7cb: mov r12d, 2
46d7d1: mov qword ptr [rax + 0x20], rdx
46d7d5: mov dword ptr [rcx], 0x23
46d7db: movzx edx, byte ptr [r14 + 0xc]
46d7e0: test dl, dl
46d7e2: js 0x46f4ba
46d7e8: test dl, 0x40
46d7eb: je 0x46eedb
46d7f1: mov rax, qword ptr [r13 + 0xa0]
46d7f8: test rax, rax
46d7fb: je 0x46f710
46d801: mov rdx, qword ptr [rax + 0x20]
46d805: cmp rdx, qword ptr [rax + 0x28]
46d809: jae 0x46f710
46d80f: lea rcx, [rdx + 4]
46d813: mov qword ptr [rax + 0x20], rcx
46d817: mov dword ptr [rdx], 0x2b
46d81d: movzx edx, byte ptr [r14 + 0xc]
46d822: add r12d, 1
46d826: and edx, 0x20
46d829: je 0x46d85b
46d82b: mov rax, qword ptr [r13 + 0xa0]
46d832: test rax, rax
46d835: je 0x46f6cf
46d83b: mov rdx, qword ptr [rax + 0x20]
46d83f: cmp rdx, qword ptr [rax + 0x28]
46d843: jae 0x46f6cf
46d849: lea rcx, [rdx + 4]
46d84d: mov qword ptr [rax + 0x20], rcx
46d851: mov dword ptr [rdx], 0x2d
46d857: add r12d, 1
46d85b: cmp dword ptr [r14 + 0x10], 0x30
46d860: je 0x46f0da
46d866: test byte ptr [r14 + 0xd], 8
46d86b: je 0x46d89d
46d86d: mov rax, qword ptr [r13 + 0xa0]
46d874: test rax, rax
46d877: je 0x46f730
46d87d: mov rdx, qword ptr [rax + 0x20]
46d881: cmp rdx, qword ptr [rax + 0x28]
46d885: jae 0x46f730
46d88b: lea rcx, [rdx + 4]
46d88f: mov qword ptr [rax + 0x20], rcx
46d893: mov dword ptr [rdx], 0x49
46d899: add r12d, 1
46d89d: movsxd rsi, dword ptr [r14 + 4]
46d8a1: test esi, esi
46d8a3: je 0x46eccc
46d8a9: lea rcx, [rbp - 0x860]
46d8b0: mov r15, rcx
46d8b3: nop dword ptr [rax + rax]
46d8b8: movabs rax, 0xcccccccccccccccd
46d8c2: mov rdi, rsi
46d8c5: sub r15, 4
46d8c9: mul rsi
46d8cc: shr rdx, 3
46d8d0: lea rax, [rdx + rdx*4]
46d8d4: add rax, rax
46d8d7: sub rdi, rax
46d8da: mov rax, rdi
46d8dd: lea rdi, [rip + 0x4251c]
46d8e4: mov eax, dword ptr [rdi + rax*4]
46d8e7: mov dword ptr [r15], eax
46d8ea: mov rax, rsi
46d8ed: mov rsi, rdx
46d8f0: cmp rax, 9
46d8f4: ja 0x46d8b8
46d8f6: cmp r15, rcx
46d8f9: jae 0x46eccc
46d8ff: mov dword ptr [rbp - 0x8f0], ebx
46d905: mov rbx, rcx
46d908: jmp 0x46d947
46d90a: nop word ptr [rax + rax]
46d910: mov rdx, qword ptr [rax + 0x20]
46d914: cmp rdx, qword ptr [rax + 0x28]
46d918: jae 0x46d95b
46d91a: lea rdi, [rdx + 4]
46d91e: mov qword ptr [rax + 0x20], rdi
46d922: mov dword ptr [rdx], esi
46d924: cmp esi, -1
46d927: je 0x46d3d9
46d92d: cmp r12d, 0x7fffffff
46d934: je 0x46d3d9
46d93a: add r12d, 1
46d93e: cmp r15, rbx
46d941: jae 0x46ecc6
46d947: mov rax, qword ptr [r13 + 0xa0]
46d94e: add r15, 4
46d952: mov esi, dword ptr [r15 - 4]
46d956: test rax, rax
46d959: jne 0x46d910
46d95b: mov rdi, r13
46d95e: call 0x474890
46d963: cmp eax, -1
46d966: jne 0x46d92d
46d968: jmp 0x46d3d9
46d96d: nop dword ptr [rax]
46d970: cmp eax, 0x107
46d975: je 0x46da50
46d97b: jle 0x46d445
46d981: cmp eax, 0x200
46d986: je 0x46d450
46d98c: cmp eax, 0x400
46d991: jne 0x46dda0
46d997: mov eax, dword ptr [rcx]
46d999: cmp eax, 0x2f
46d99c: jbe 0x46db60
46d9a2: mov rsi, qword ptr [rcx + 8]
46d9a6: lea rax, [rsi + 8]
46d9aa: mov qword ptr [rcx + 8], rax
46d9ae: mov esi, dword ptr [rsi]
46d9b0: mov rax, rdx
46d9b3: shl rax, 4
46d9b7: mov dword ptr [r10 + rax], esi
46d9bb: jmp 0x46d474
46d9c0: mov eax, dword ptr [rcx + 4]
46d9c3: cmp eax, 0xaf
46d9c8: ja 0x46db28
46d9ce: mov esi, eax
46d9d0: add eax, 0x10
46d9d3: add rsi, qword ptr [rcx + 0x10]
46d9d7: mov dword ptr [rcx + 4], eax
46d9da: movsd xmm0, qword ptr [rsi]
46d9de: mov rax, rdx
46d9e1: shl rax, 4
46d9e5: movsd qword ptr [r10 + rax], xmm0
46d9eb: jmp 0x46d474
46d9f0: mov eax, dword ptr [rcx]
46d9f2: cmp eax, 0x2f
46d9f5: ja 0x46db10
46d9fb: mov esi, eax
46d9fd: add eax, 8
46da00: add rsi, qword ptr [rcx + 0x10]
46da04: mov dword ptr [rcx], eax
46da06: mov esi, dword ptr [rsi]
46da08: mov rax, rdx
46da0b: shl rax, 4
46da0f: mov dword ptr [r10 + rax], esi
46da13: jmp 0x46d474
46da18: nop dword ptr [rax + rax]
46da20: mov rsi, qword ptr [rcx + 8]
46da24: lea rax, [rsi + 8]
46da28: mov qword ptr [rcx + 8], rax
46da2c: jmp 0x46d466
46da31: mov r9d, dword ptr [rbp - 0x910]
46da38: test r9d, r9d
46da3b: je 0x46db40
46da41: lea rdi, [rip + 0x27ef8]
46da48: call 0x41b220
46da4d: nop dword ptr [rax]
46da50: test r8b, r8b
46da53: jne 0x46eac9
46da59: test r9d, r9d
46da5c: je 0x46db70
46da62: mov esi, dword ptr [rcx + 4]
46da65: cmp esi, 0xaf
46da6b: ja 0x46df39
46da71: mov eax, esi
46da73: add esi, 0x10
46da76: add rax, qword ptr [rcx + 0x10]
46da7a: mov dword ptr [rcx + 4], esi
46da7d: movdqa xmm0, xmmword ptr [rax]
46da81: mov rax, rdx
46da84: shl rax, 4
46da88: movaps xmmword ptr [r10 + rax], xmm0
46da8d: jmp 0x46d474
46da92: nop word ptr [rax + rax]
46da98: mov rax, 0xffffffffffffffa8
46da9f: mov rax, qword ptr fs:[rax]
46daa3: mov rax, qword ptr [rax]
46daa6: mov ebx, dword ptr [rax + 0x60]
46daa9: mov rax, qword ptr [rax + 0x50]
46daad: mov qword ptr [rbp - 0x8d8], rax
46dab4: movzx eax, byte ptr [rax]
46dab7: mov dword ptr [rbp + 0x38], ebx
46daba: test al, al
46dabc: je 0x46dac6
46dabe: cmp al, 0x7f
46dac0: jne 0x46cf44
46dac6: mov qword ptr [rbp - 0x8d8], 0
46dad1: jmp 0x46cf44
46dad6: nop word ptr cs:[rax + rax]
46dae0: mov rsi, rdx
46dae3: shl rsi, 4
46dae7: lea rdi, [r10 + rsi]
46daeb: mov r11, qword ptr [rip + 0x55e7e]
46daf2: test r11, r11
46daf5: jne 0x46ef2e
46dafb: pxor xmm0, xmm0
46daff: movups xmmword ptr [rdi], xmm0
46db02: jmp 0x46d474
46db07: nop word ptr [rax + rax]
46db10: mov rsi, qword ptr [rcx + 8]
46db14: lea rax, [rsi + 8]
46db18: mov qword ptr [rcx + 8], rax
46db1c: jmp 0x46da06
46db21: nop dword ptr [rax]
46db28: mov rsi, qword ptr [rcx + 8]
46db2c: lea rax, [rsi + 8]
46db30: mov qword ptr [rcx + 8], rax
46db34: jmp 0x46d9da
46db39: nop dword ptr [rax]
46db40: lea rcx, [rip + 0x27f39]
46db47: mov edx, 0x796
46db4c: lea rsi, [rip + 0x27d91]
46db53: lea rdi, [rip + 0x27dbe]
46db5a: call 0x4032a0
46db5f: nop 
46db60: mov esi, eax
46db62: add eax, 8
46db65: add rsi, qword ptr [rcx + 0x10]
46db69: mov dword ptr [rcx], eax
46db6b: jmp 0x46d9ae
46db70: mov rax, qword ptr [rcx + 8]
46db74: add rax, 0xf
46db78: and rax, 0xfffffffffffffff0
46db7c: lea rsi, [rax + 0x10]
46db80: mov qword ptr [rcx + 8], rsi
46db84: fld xword ptr [rax]
46db86: mov rax, rdx
46db89: shl rax, 4
46db8d: fstp xword ptr [r10 + rax]
46db91: jmp 0x46d474
46db96: movsxd rax, ecx
46db99: lea rax, [rax*4 + 0x80]
46dba1: jmp 0x46d6a3
46dba6: nop word ptr cs:[rax + rax]
46dbb0: lea rdi, [rip + 0x3b6c9]
46dbb7: lea rsi, [rip + 0x50002]
46dbbe: movzx eax, byte ptr [rdi + rax]
46dbc2: jmp qword ptr [rsi + rax*8]
46dbc5: endbr64 
46dbc9: sub r15d, 1
46dbcd: mov eax, dword ptr [rbp - 0x900]
46dbd3: test r15d, r15d
46dbd6: setg r12b
46dbda: test eax, eax
46dbdc: jne 0x46dc29
46dbde: test r12b, r12b
46dbe1: je 0x46dc29
46dbe3: movsxd rdx, r15d
46dbe6: mov esi, 0x20
46dbeb: mov rdi, r13
46dbee: mov qword ptr [rbp - 0x8f0], rdx
46dbf5: call 0x474150
46dbfa: mov rdx, qword ptr [rbp - 0x8f0]
46dc01: cmp rdx, rax
46dc04: jne 0x46d3d9
46dc0a: cmp ebx, 0x7ffffffe
46dc10: ja 0x46f92d
46dc16: mov eax, 0x7fffffff
46dc1b: sub eax, ebx
46dc1d: cmp eax, r15d
46dc20: jb 0x46d3cb
46dc26: add ebx, r15d
46dc29: movsxd rax, dword ptr [r14 + 0x30]
46dc2d: mov rcx, qword ptr [rbp - 0x8c0]
46dc34: shl rax, 4
46dc38: mov esi, dword ptr [rcx + rax]
46dc3b: mov rax, qword ptr [r13 + 0xa0]
46dc42: test rax, rax
46dc45: je 0x46e021
46dc4b: mov rdx, qword ptr [rax + 0x20]
46dc4f: cmp rdx, qword ptr [rax + 0x28]
46dc53: jae 0x46e021
46dc59: lea rcx, [rdx + 4]
46dc5d: mov qword ptr [rax + 0x20], rcx
46dc61: mov dword ptr [rdx], esi
46dc63: cmp esi, -1
46dc66: je 0x46d3d9
46dc6c: cmp ebx, 0x7fffffff
46dc72: je 0x46d3d9
46dc78: mov eax, dword ptr [rbp - 0x900]
46dc7e: add ebx, 1
46dc81: test eax, eax
46dc83: je 0x46dcc8
46dc85: test r12b, r12b
46dc88: je 0x46dcc8
46dc8a: movsxd r12, r15d
46dc8d: mov esi, 0x20
46dc92: mov rdi, r13
46dc95: mov rdx, r12
46dc98: call 0x474150
46dc9d: cmp r12, rax
46dca0: jne 0x46d3d9
46dca6: cmp ebx, 0x7ffffffe
46dcac: ja 0x46f92d
46dcb2: mov eax, 0x7fffffff
46dcb7: sub eax, ebx
46dcb9: cmp eax, r15d
46dcbc: jb 0x46d3cb
46dcc2: add ebx, r15d
46dcc5: nop dword ptr [rax]
46dcc8: cmp qword ptr [rbp - 0x8e8], 0
46dcd0: jne 0x46df7a
46dcd6: test ebx, ebx
46dcd8: js 0x46f94c
46dcde: mov r12, qword ptr [r13 + 0xd8]
46dce5: mov rdx, 0x4c1b60
46dcec: mov rax, 0x4c2208
46dcf3: mov rsi, r12
46dcf6: sub rax, rdx
46dcf9: sub rsi, rdx
46dcfc: cmp rax, rsi
46dcff: jbe 0x46df70
46dd05: mov rsi, qword ptr [r14 + 0x18]
46dd09: mov rdx, qword ptr [r14 + 0x20]
46dd0d: mov rdi, r13
46dd10: sub rdx, rsi
46dd13: sar rdx, 2
46dd17: call qword ptr [r12 + 0x38]
46dd1c: mov rdx, qword ptr [r14 + 0x20]
46dd20: sub rdx, qword ptr [r14 + 0x18]
46dd24: sar rdx, 2
46dd28: cmp rax, rdx
46dd2b: jne 0x46d3f0
46dd31: mov edx, 0x7fffffff
46dd36: sub edx, ebx
46dd38: movsxd rdx, edx
46dd3b: cmp rax, rdx
46dd3e: jg 0x46dfa3
46dd44: add qword ptr [rbp - 0x8d0], 1
46dd4c: add ebx, eax
46dd4e: add r14, 0x48
46dd52: mov rax, qword ptr [rbp - 0x8d0]
46dd59: cmp qword ptr [rbp - 0x960], rax
46dd60: ja 0x46d4ec
46dd66: mov r12d, ebx
46dd69: jmp 0x46d3f6
46dd6e: nop 
46dd70: mov rax, qword ptr [rbp - 0x968]
46dd77: mov qword ptr [rbp - 0x8e8], 0
46dd82: mov qword ptr [rbp - 0x908], rax
46dd89: jmp 0x46d6b8
46dd8e: nop 
46dd90: mov r15d, dword ptr [r14 + 4]
46dd94: jmp 0x46d5c0
46dd99: nop dword ptr [rax]
46dda0: mov rsi, rdx
46dda3: shl rsi, 4
46dda7: lea rdi, [r10 + rsi]
46ddab: test ah, 8
46ddae: je 0x46daeb
46ddb4: mov eax, dword ptr [rcx]
46ddb6: cmp eax, 0x2f
46ddb9: ja 0x46df28
46ddbf: mov edi, eax
46ddc1: add eax, 8
46ddc4: add rdi, qword ptr [rcx + 0x10]
46ddc8: mov dword ptr [rcx], eax
46ddca: mov rax, qword ptr [rdi]
46ddcd: mov qword ptr [r10 + rsi], rax
46ddd1: jmp 0x46d474
46ddd6: nop word ptr cs:[rax + rax]
46dde0: mov dword ptr [rbp - 0x900], 1
46ddea: neg r15d
46dded: or eax, 0x20
46ddf0: mov dword ptr [r14 + 4], r15d
46ddf4: mov byte ptr [r14 + 0xc], al
46ddf8: jmp 0x46d5c0
46ddfd: nop dword ptr [rax]
46de00: mov dword ptr [r14], 0xffffffff
46de07: mov ecx, 0xffffffff
46de0c: jmp 0x46d5e2
46de11: mov rdi, qword ptr [r14 + 0x38]
46de15: mov r11, rsp
46de18: lea rdx, [rdi*8 + 0x17]
46de20: mov rsi, rdx
46de23: and rdx, 0xfffffffffffff000
46de2a: sub r11, rdx
46de2d: and rsi, 0xfffffffffffffff0
46de31: mov rdx, r11
46de34: cmp rsp, rdx
46de37: je 0x46de4e
46de39: sub rsp, 0x1000
46de40: or qword ptr [rsp + 0xff8], 0
46de49: cmp rsp, rdx
46de4c: jne 0x46de39
46de4e: and esi, 0xfff
46de54: sub rsp, rsi
46de57: test rsi, rsi
46de5a: je 0x46de62
46de5c: or qword ptr [rsp + rsi - 8], 0
46de62: lea r8, [rsp + 0xf]
46de67: and r8, 0xfffffffffffffff0
46de6b: test rdi, rdi
46de6e: je 0x46deb3
46de70: mov dword ptr [rbp - 0x958], ecx
46de76: mov r11d, dword ptr [r14 + 0x30]
46de7a: xor edx, edx
46de7c: xor esi, esi
46de7e: mov rcx, qword ptr [rbp - 0x8c0]
46de85: nop dword ptr [rax]
46de88: lea eax, [r11 + rdx]
46de8c: shl rax, 4
46de90: add rax, rcx
46de93: mov qword ptr [r8 + rsi*8], rax
46de97: lea esi, [rdx + 1]
46de9a: mov rdx, rsi
46de9d: cmp rdi, rsi
46dea0: ja 0x46de88
46dea2: mov rax, qword ptr [rip + 0x55a9f]
46dea9: mov ecx, dword ptr [rbp - 0x958]
46deaf: mov rax, qword ptr [rax + r12*8]
46deb3: mov dword ptr [rbp - 0x974], ecx
46deb9: mov rdx, r8
46debc: mov rsi, r14
46debf: mov rdi, r13
46dec2: mov dword ptr [rbp - 0x970], r10d
46dec9: mov byte ptr [rbp - 0x958], r9b
46ded0: call rax
46ded2: movzx r9d, byte ptr [rbp - 0x958]
46deda: mov r10d, dword ptr [rbp - 0x970]
46dee1: cmp eax, -2
46dee4: mov ecx, dword ptr [rbp - 0x974]
46deea: je 0x46d6dd
46def0: test eax, eax
46def2: js 0x46d3d9
46def8: cmp ebx, 0x7ffffffe
46defe: jbe 0x46e683
46df04: lea rcx, [rip + 0x27b75]
46df0b: mov edx, 0x811
46df10: lea rsi, [rip + 0x279cd]
46df17: lea rdi, [rip + 0x27a4a]
46df1e: call 0x4032a0
46df23: nop dword ptr [rax + rax]
46df28: mov rdi, qword ptr [rcx + 8]
46df2c: lea rax, [rdi + 8]
46df30: mov qword ptr [rcx + 8], rax
46df34: jmp 0x46ddca
46df39: mov rax, qword ptr [rcx + 8]
46df3d: add rax, 0xf
46df41: and rax, 0xfffffffffffffff0
46df45: lea rsi, [rax + 0x10]
46df49: mov qword ptr [rcx + 8], rsi
46df4d: jmp 0x46da7d
46df52: test rbx, rbx
46df55: jne 0x46d136
46df5b: mov r12d, dword ptr [rbp - 0x8e8]
46df62: jmp 0x46d3f6
46df67: nop word ptr [rax + rax]
46df70: call 0x41b240
46df75: jmp 0x46dd05
46df7a: mov rdi, qword ptr [rbp - 0x8e8]
46df81: call 0x426a00
46df86: jmp 0x46dcd6
46df8b: mov rax, qword ptr [rbp - 0x8c8]
46df92: xor ebx, ebx
46df94: xor r13d, r13d
46df97: mov qword ptr [rbp - 0x8b8], rax
46df9e: jmp 0x46d012
46dfa3: mov rax, 0xffffffffffffffc0
46dfaa: mov r12d, 0xffffffff
46dfb0: mov dword ptr fs:[rax], 0x4b
46dfb7: jmp 0x46d3f6
46dfbc: or qword ptr [rsp + rax - 8], 0
46dfc2: jmp 0x46d686
46dfc7: endbr64 
46dfcb: mov eax, dword ptr [rbp - 0x8f0]
46dfd1: test eax, eax
46dfd3: jne 0x46dbc5
46dfd9: sub r15d, 1
46dfdd: mov eax, dword ptr [rbp - 0x900]
46dfe3: test r15d, r15d
46dfe6: setg r12b
46dfea: test eax, eax
46dfec: jne 0x46dff7
46dfee: test r12b, r12b
46dff1: jne 0x46f445
46dff7: movsxd rax, dword ptr [r14 + 0x30]
46dffb: mov rcx, qword ptr [rbp - 0x8c0]
46e002: shl rax, 4
46e006: movzx edi, byte ptr [rcx + rax]
46e00a: call 0x476c90
46e00f: mov esi, eax
46e011: mov rax, qword ptr [r13 + 0xa0]
46e018: test rax, rax
46e01b: jne 0x46dc4b
46e021: mov rdi, r13
46e024: call 0x474890
46e029: cmp eax, -1
46e02c: jne 0x46dc6c
46e032: jmp 0x46d3d9
46e037: nop word ptr [rax + rax]
46e040: endbr64 
46e044: movsxd rax, dword ptr [r14 + 0x30]
46e048: mov rdi, qword ptr [rbp - 0x8c0]
46e04f: shl rax, 4
46e053: mov r12, qword ptr [rdi + rax]
46e057: test r12, r12
46e05a: je 0x46ec92
46e060: mov r11d, dword ptr [rbp - 0x8f0]
46e067: test r11d, r11d
46e06a: jne 0x46ee52
46e070: cmp r10d, 0x53
46e074: je 0x46ee52
46e07a: mov qword ptr [rbp - 0x898], r12
46e081: cmp ecx, -1
46e084: je 0x46f1bf
46e08a: movsxd rsi, ecx
46e08d: mov rdi, r12
46e090: call 0x401030
46e095: mov rdx, rax
46e098: movabs rax, 0x3fffffffffffffff
46e0a2: cmp rdx, rax
46e0a5: ja 0x46d3cb
46e0ab: lea r12, [rdx*4]
46e0b3: mov qword ptr [rbp - 0x8f0], rdx
46e0ba: mov rdi, r12
46e0bd: call 0x421200
46e0c2: cmp r12, 0x1000
46e0c9: mov rdx, qword ptr [rbp - 0x8f0]
46e0d0: jbe 0x46e0da
46e0d2: test eax, eax
46e0d4: je 0x46f8c7
46e0da: add r12, 0x17
46e0de: mov rcx, rsp
46e0e1: mov rax, r12
46e0e4: and r12, 0xfffffffffffff000
46e0eb: sub rcx, r12
46e0ee: and rax, 0xfffffffffffffff0
46e0f2: cmp rsp, rcx
46e0f5: je 0x46e10c
46e0f7: sub rsp, 0x1000
46e0fe: or qword ptr [rsp + 0xff8], 0
46e107: cmp rsp, rcx
46e10a: jne 0x46e0f7
46e10c: and eax, 0xfff
46e111: sub rsp, rax
46e114: test rax, rax
46e117: je 0x46e11f
46e119: or qword ptr [rsp + rax - 8], 0
46e11f: mov dword ptr [rbp - 0x920], 0
46e129: lea r12, [rsp + 0xf]
46e12e: and r12, 0xfffffffffffffff0
46e132: lea rcx, [rbp - 0x890]
46e139: mov rdi, r12
46e13c: lea rsi, [rbp - 0x898]
46e143: mov qword ptr [rbp - 0x890], 0
46e14e: call 0x44f210
46e153: mov rcx, rax
46e156: cmp rax, -1
46e15a: je 0x46d3d9
46e160: mov dword ptr [rbp - 0x8f0], eax
46e166: sub r15d, dword ptr [rbp - 0x8f0]
46e16d: js 0x46ebbd
46e173: mov r9d, dword ptr [rbp - 0x900]
46e17a: setne byte ptr [rbp - 0x908]
46e181: movzx eax, byte ptr [rbp - 0x908]
46e188: test r9d, r9d
46e18b: jne 0x46e195
46e18d: test al, al
46e18f: jne 0x46f2d8
46e195: test ebx, ebx
46e197: js 0x46f96b
46e19d: mov r8, qword ptr [r13 + 0xd8]
46e1a4: mov rdx, 0x4c1b60
46e1ab: mov rax, 0x4c2208
46e1b2: mov rdi, r8
46e1b5: sub rax, rdx
46e1b8: sub rdi, rdx
46e1bb: cmp rax, rdi
46e1be: jbe 0x46f4cd
46e1c4: mov qword ptr [rbp - 0x928], rcx
46e1cb: mov rdx, rcx
46e1ce: mov rsi, r12
46e1d1: mov rdi, r13
46e1d4: call qword ptr [r8 + 0x38]
46e1d8: mov rcx, qword ptr [rbp - 0x928]
46e1df: cmp rax, rcx
46e1e2: jne 0x46d3d9
46e1e8: mov r8d, 0x7fffffff
46e1ee: mov eax, r8d
46e1f1: sub eax, ebx
46e1f3: cdqe 
46e1f5: cmp rax, rcx
46e1f8: jb 0x46d3cb
46e1fe: mov r8d, dword ptr [rbp - 0x900]
46e205: add ebx, dword ptr [rbp - 0x8f0]
46e20b: test r8d, r8d
46e20e: je 0x46e21d
46e210: cmp byte ptr [rbp - 0x908], 0
46e217: jne 0x46f3f8
46e21d: mov edi, dword ptr [rbp - 0x920]
46e223: test edi, edi
46e225: je 0x46dcc8
46e22b: mov rdi, r12
46e22e: call 0x426a00
46e233: jmp 0x46dcc8
46e238: endbr64 
46e23c: mov r9d, dword ptr [rbp - 0x910]
46e243: test r9d, r9d
46e246: je 0x46e266
46e248: mov r8d, dword ptr [rbp - 0x90c]
46e24f: test r8d, r8d
46e252: je 0x46f490
46e258: mov edi, dword ptr [rbp - 0x90c]
46e25e: test edi, edi
46e260: js 0x46f902
46e266: movsxd rax, dword ptr [r14 + 0x30]
46e26a: mov rcx, qword ptr [rbp - 0x8c0]
46e271: mov esi, dword ptr [rbp - 0x8f0]
46e277: shl rax, 4
46e27b: mov rax, qword ptr [rcx + rax]
46e27f: test esi, esi
46e281: je 0x46eeac
46e287: movsxd rdx, ebx
46e28a: mov qword ptr [rax], rdx
46e28d: jmp 0x46dcc8
46e292: endbr64 
46e296: mov rax, qword ptr [r13 + 0xa0]
46e29d: test rax, rax
46e2a0: je 0x46f331
46e2a6: mov rdx, qword ptr [rax + 0x20]
46e2aa: cmp rdx, qword ptr [rax + 0x28]
46e2ae: jae 0x46f331
46e2b4: lea rcx, [rdx + 4]
46e2b8: mov qword ptr [rax + 0x20], rcx
46e2bc: mov dword ptr [rdx], 0x25
46e2c2: cmp ebx, 0x7fffffff
46e2c8: je 0x46d3d9
46e2ce: add ebx, 1
46e2d1: jmp 0x46dcc8
46e2d6: endbr64 
46e2da: mov rsi, qword ptr [rbp - 0x8f8]
46e2e1: mov edi, dword ptr [rbp + 0x28]
46e2e4: mov edx, 0x3e8
46e2e9: mov dword ptr [rbp - 0x920], ecx
46e2ef: mov dword ptr [rbp - 0x908], r10d
46e2f6: call 0x429060
46e2fb: mov r10d, dword ptr [rbp - 0x908]
46e302: mov dword ptr [rbp - 0x8f0], 0
46e30c: mov ecx, dword ptr [rbp - 0x920]
46e312: mov r12, rax
46e315: jmp 0x46e057
46e31a: endbr64 
46e31e: movsxd rax, dword ptr [r14 + 0x30]
46e322: mov rsi, qword ptr [rbp - 0x8c0]
46e329: shl rax, 4
46e32d: mov rsi, qword ptr [rsi + rax]
46e331: test rsi, rsi
46e334: je 0x46ee77
46e33a: test ecx, ecx
46e33c: js 0x46f134
46e342: movzx eax, byte ptr [rbp - 0x951]
46e349: mov byte ptr [rbp - 0x930], al
46e34f: je 0x46e790
46e355: mov dword ptr [rbp - 0x958], 0x78
46e35f: mov r10d, 0x78
46e365: mov r11d, 0x10
46e36b: mov byte ptr [rbp - 0x940], 0
46e372: mov dword ptr [rbp - 0x8f0], 0
46e37c: movsxd rax, ecx
46e37f: mov byte ptr [rbp - 0x934], 0x20
46e386: mov qword ptr [rbp - 0x948], rax
46e38d: cmp qword ptr [rbp - 0x8d8], 0
46e395: lea rcx, [rip + 0x419c4]
46e39c: setne al
46e39f: and al, byte ptr [rbp - 0x940]
46e3a5: mov byte ptr [rbp - 0x938], al
46e3ab: cmp r10d, 0x58
46e3af: jne 0x46e7c9
46e3b5: cmp r11d, 0xa
46e3b9: je 0x46e884
46e3bf: cmp r11d, 0x10
46e3c3: je 0x46ea90
46e3c9: cmp r11d, 8
46e3cd: je 0x46e96e
46e3d3: mov r12, qword ptr [rbp - 0x908]
46e3da: movsxd r8, r11d
46e3dd: mov rdi, rsi
46e3e0: mov rax, rdi
46e3e3: xor edx, edx
46e3e5: sub r12, 4
46e3e9: div r8
46e3ec: mov edx, dword ptr [rcx + rdx*4]
46e3ef: mov dword ptr [r12], edx
46e3f3: mov rdx, rdi
46e3f6: mov rdi, rax
46e3f9: cmp rdx, r8
46e3fc: jae 0x46e3e0
46e3fe: cmp byte ptr [rbp - 0x938], 0
46e405: mov qword ptr [rbp - 0x940], rsi
46e40c: jne 0x46e8d6
46e412: nop word ptr [rax + rax]
46e418: mov rcx, qword ptr [rbp - 0x908]
46e41f: mov r9, rcx
46e422: sub r9, r12
46e425: mov rax, r9
46e428: sar rax, 2
46e42c: mov r8, rax
46e42f: cmp rax, qword ptr [rbp - 0x948]
46e436: jge 0x46e7d5
46e43c: mov rdx, qword ptr [rbp - 0x948]
46e443: mov esi, dword ptr [rbp - 0x900]
46e449: sub rdx, rax
46e44c: mov eax, 0
46e451: cmovs rdx, rax
46e455: mov ecx, edx
46e457: test esi, esi
46e459: jne 0x46d249
46e45f: sub r15d, r8d
46e462: mov dword ptr [rbp - 0x900], r8d
46e469: sub r15d, edx
46e46c: cmp qword ptr [rbp - 0x940], 0
46e474: je 0x46e48f
46e476: cmp r11d, 0x10
46e47a: sete al
46e47d: and al, byte ptr [rbp - 0x930]
46e483: je 0x46e48f
46e485: mov byte ptr [rbp - 0x930], al
46e48b: sub r15d, 2
46e48f: mov eax, dword ptr [rbp - 0x920]
46e495: or eax, dword ptr [rbp - 0x928]
46e49b: or eax, dword ptr [rbp - 0x8f0]
46e4a1: je 0x46e9b7
46e4a7: sub r15d, 1
46e4ab: cmp byte ptr [rbp - 0x934], 0x20
46e4b2: je 0x46f8f1
46e4b8: mov edx, dword ptr [rbp - 0x8f0]
46e4be: test edx, edx
46e4c0: je 0x46ec2d
46e4c6: mov rax, qword ptr [r13 + 0xa0]
46e4cd: test rax, rax
46e4d0: je 0x46f1fc
46e4d6: mov rdx, qword ptr [rax + 0x20]
46e4da: cmp rdx, qword ptr [rax + 0x28]
46e4de: jae 0x46f1fc
46e4e4: lea rsi, [rdx + 4]
46e4e8: mov qword ptr [rax + 0x20], rsi
46e4ec: mov dword ptr [rdx], 0x2d
46e4f2: cmp ebx, 0x7fffffff
46e4f8: je 0x46d3d9
46e4fe: add ebx, 1
46e501: cmp qword ptr [rbp - 0x940], 0
46e509: je 0x46e578
46e50b: cmp r11d, 0x10
46e50f: jne 0x46e578
46e511: cmp byte ptr [rbp - 0x930], 0
46e518: je 0x46e578
46e51a: mov rax, qword ptr [r13 + 0xa0]
46e521: test rax, rax
46e524: je 0x46f658
46e52a: mov rdi, qword ptr [rax + 0x20]
46e52e: mov rsi, qword ptr [rax + 0x28]
46e532: cmp rdi, rsi
46e535: jae 0x46f658
46e53b: lea rdx, [rdi + 4]
46e53f: mov qword ptr [rax + 0x20], rdx
46e543: mov dword ptr [rdi], 0x30
46e549: cmp ebx, 0x7fffffff
46e54f: je 0x46d3d9
46e555: cmp rdx, rsi
46e558: jae 0x46f61c
46e55e: lea rsi, [rdx + 4]
46e562: mov qword ptr [rax + 0x20], rsi
46e566: mov dword ptr [rdx], r10d
46e569: cmp ebx, 0x7ffffffe
46e56f: je 0x46d3d9
46e575: add ebx, 2
46e578: add r15d, ecx
46e57b: test r15d, r15d
46e57e: jg 0x46eb64
46e584: test ebx, ebx
46e586: js 0x46f90e
46e58c: mov r15, qword ptr [r13 + 0xd8]
46e593: mov rdx, 0x4c1b60
46e59a: mov rax, 0x4c2208
46e5a1: mov rcx, r15
46e5a4: sub rax, rdx
46e5a7: sub rcx, rdx
46e5aa: cmp rax, rcx
46e5ad: jbe 0x46f3e0
46e5b3: mov qword ptr [rbp - 0x8f0], r8
46e5ba: mov rdx, r8
46e5bd: mov rsi, r12
46e5c0: mov rdi, r13
46e5c3: call qword ptr [r15 + 0x38]
46e5c7: mov r8, qword ptr [rbp - 0x8f0]
46e5ce: cmp r8, rax
46e5d1: jne 0x46d3d9
46e5d7: mov eax, 0x7fffffff
46e5dc: sub eax, ebx
46e5de: cdqe 
46e5e0: cmp rax, r8
46e5e3: jl 0x46d3cb
46e5e9: add ebx, dword ptr [rbp - 0x900]
46e5ef: jmp 0x46dcc8
46e5f4: endbr64 
46e5f8: movsxd rax, dword ptr [r14 + 0x30]
46e5fc: shl rax, 4
46e600: add rax, qword ptr [rbp - 0x8c0]
46e607: cmp byte ptr [rbp - 0x952], 0
46e60e: mov qword ptr [rbp - 0x898], rax
46e615: jne 0x46f51f
46e61b: mov r10d, dword ptr [rbp - 0x96c]
46e622: movzx ecx, byte ptr [rbp - 0x938]
46e629: mov eax, 0
46e62e: mov rdi, r13
46e631: movzx edx, byte ptr [r14 + 0xd]
46e636: test r10d, r10d
46e639: cmove ecx, eax
46e63c: and edx, 0xffffffef
46e63f: mov eax, ecx
46e641: and eax, 1
46e644: shl eax, 4
46e647: or eax, edx
46e649: lea rdx, [rbp - 0x898]
46e650: mov byte ptr [r14 + 0xd], al
46e654: mov rax, qword ptr [rbp - 0x8d0]
46e65b: mov rcx, qword ptr [rbp - 0x8b8]
46e662: lea rax, [rax + rax*8]
46e666: lea rsi, [rcx + rax*8]
46e66a: call 0x46a6f0
46e66f: test eax, eax
46e671: js 0x46d3d9
46e677: cmp ebx, 0x7ffffffe
46e67d: ja 0x46f8a8
46e683: mov edx, 0x7fffffff
46e688: sub edx, ebx
46e68a: cmp edx, eax
46e68c: jb 0x46d3cb
46e692: add ebx, eax
46e694: jmp 0x46dcc8
46e699: endbr64 
46e69d: mov r11d, 8
46e6a3: jmp 0x46d193
46e6a8: endbr64 
46e6ac: mov r11d, 0xa
46e6b2: jmp 0x46d193
46e6b7: endbr64 
46e6bb: movsxd rax, dword ptr [r14 + 0x30]
46e6bf: mov r8d, dword ptr [rbp - 0x8f0]
46e6c6: mov rsi, qword ptr [rbp - 0x8c0]
46e6cd: shl rax, 4
46e6d1: test r8d, r8d
46e6d4: je 0x46eec1
46e6da: mov rsi, qword ptr [rsi + rax]
46e6de: test rsi, rsi
46e6e1: js 0x46f046
46e6e7: mov dword ptr [rbp - 0x8f0], 0
46e6f1: mov r11d, 0xa
46e6f7: jmp 0x46d1d3
46e6fc: endbr64 
46e700: movsxd rax, dword ptr [r14 + 0x30]
46e704: shl rax, 4
46e708: add rax, qword ptr [rbp - 0x8c0]
46e70f: cmp byte ptr [rbp - 0x952], 0
46e716: mov qword ptr [rbp - 0x8a0], rax
46e71d: jne 0x46f5e5
46e723: mov r11d, dword ptr [rbp - 0x96c]
46e72a: movzx ecx, byte ptr [rbp - 0x938]
46e731: mov eax, 0
46e736: mov rdi, r13
46e739: test r11d, r11d
46e73c: cmove ecx, eax
46e73f: mov eax, ecx
46e741: and eax, 1
46e744: shl eax, 4
46e747: mov edx, eax
46e749: movzx eax, byte ptr [r14 + 0xd]
46e74e: and eax, 0xffffffef
46e751: or eax, edx
46e753: lea rdx, [rbp - 0x8a0]
46e75a: mov byte ptr [r14 + 0xd], al
46e75e: mov rax, qword ptr [rbp - 0x8d0]
46e765: mov rcx, qword ptr [rbp - 0x8b8]
46e76c: lea rax, [rax + rax*8]
46e770: lea rsi, [rcx + rax*8]
46e774: call 0x46a400
46e779: test eax, eax
46e77b: jns 0x46e677
46e781: jmp 0x46d3d9
46e786: nop word ptr cs:[rax + rax]
46e790: mov dword ptr [rbp - 0x8f0], 0
46e79a: mov r10d, 0x78
46e7a0: mov r11d, 0x10
46e7a6: mov dword ptr [rbp - 0x958], 0x78
46e7b0: mov byte ptr [rbp - 0x938], 0
46e7b7: mov qword ptr [rbp - 0x948], 0
46e7c2: mov byte ptr [rbp - 0x934], 0x20
46e7c9: lea rcx, [rip + 0x41630]
46e7d0: jmp 0x46e3b5
46e7d5: cmp qword ptr [rbp - 0x940], 0
46e7dd: je 0x46ef15
46e7e3: cmp r11d, 8
46e7e7: jne 0x46e809
46e7e9: cmp byte ptr [rbp - 0x930], 0
46e7f0: je 0x46e809
46e7f2: mov dword ptr [r12 - 4], 0x30
46e7fb: lea rax, [r12 - 4]
46e800: sub rcx, rax
46e803: mov r12, rax
46e806: mov r9, rcx
46e809: mov rdx, qword ptr [rbp - 0x948]
46e810: mov r8, r9
46e813: mov eax, 0
46e818: sar r8, 2
46e81c: sub rdx, r8
46e81f: cmovs rdx, rax
46e823: mov eax, dword ptr [rbp - 0x900]
46e829: mov ecx, edx
46e82b: test eax, eax
46e82d: jne 0x46d249
46e833: sub r15d, r8d
46e836: mov dword ptr [rbp - 0x900], r8d
46e83d: sub r15d, edx
46e840: jmp 0x46e476
46e845: mov qword ptr [rbp - 0x948], 1
46e850: jmp 0x46e38d
46e855: mov r8d, dword ptr [rbp - 0x948]
46e85c: mov esi, dword ptr [rax]
46e85e: test r8d, r8d
46e861: je 0x46ec6c
46e867: mov dword ptr [rbp - 0x920], 0
46e871: movzx esi, sil
46e875: mov dword ptr [rbp - 0x928], 0
46e87f: jmp 0x46d1d3
46e884: mov r12, qword ptr [rbp - 0x908]
46e88b: mov rdi, rsi
46e88e: nop 
46e890: movabs rax, 0xcccccccccccccccd
46e89a: mov r8, rdi
46e89d: sub r12, 4
46e8a1: mul rdi
46e8a4: shr rdx, 3
46e8a8: lea rax, [rdx + rdx*4]
46e8ac: add rax, rax
46e8af: sub r8, rax
46e8b2: mov eax, dword ptr [rcx + r8*4]
46e8b6: mov dword ptr [r12], eax
46e8ba: mov rax, rdi
46e8bd: mov rdi, rdx
46e8c0: cmp rax, 9
46e8c4: ja 0x46e890
46e8c6: cmp byte ptr [rbp - 0x938], 0
46e8cd: mov qword ptr [rbp - 0x940], rsi
46e8d4: je 0x46e925
46e8d6: mov r8d, dword ptr [rbp + 0x38]
46e8da: mov rcx, qword ptr [rbp - 0x8d8]
46e8e1: mov rsi, r12
46e8e4: mov dword ptr [rbp - 0x970], r10d
46e8eb: mov rdx, qword ptr [rbp - 0x908]
46e8f2: mov rdi, qword ptr [rbp - 0x8f8]
46e8f9: mov dword ptr [rbp - 0x950], r11d
46e900: mov byte ptr [rbp - 0x938], r9b
46e907: call 0x46caf0
46e90c: mov r10d, dword ptr [rbp - 0x970]
46e913: mov r11d, dword ptr [rbp - 0x950]
46e91a: movzx r9d, byte ptr [rbp - 0x938]
46e922: mov r12, rax
46e925: cmp r11d, 0xa
46e929: jne 0x46e418
46e92f: test r9b, r9b
46e932: je 0x46e418
46e938: mov rsi, qword ptr [rbp - 0x908]
46e93f: mov rdi, r12
46e942: mov dword ptr [rbp - 0x950], r10d
46e949: mov dword ptr [rbp - 0x938], r11d
46e950: mov rdx, rsi
46e953: call 0x46cbd0
46e958: mov r10d, dword ptr [rbp - 0x950]
46e95f: mov r11d, dword ptr [rbp - 0x938]
46e966: mov r12, rax
46e969: jmp 0x46e418
46e96e: mov r12, qword ptr [rbp - 0x908]
46e975: mov rax, rsi
46e978: nop dword ptr [rax + rax]
46e980: mov rdx, rax
46e983: sub r12, 4
46e987: and edx, 7
46e98a: mov edx, dword ptr [rcx + rdx*4]
46e98d: mov dword ptr [r12], edx
46e991: mov rdx, rax
46e994: shr rax, 3
46e998: cmp rdx, 7
46e99c: ja 0x46e980
46e99e: mov qword ptr [rbp - 0x940], rsi
46e9a5: cmp byte ptr [rbp - 0x938], 0
46e9ac: je 0x46e418
46e9b2: jmp 0x46e8d6
46e9b7: cmp byte ptr [rbp - 0x934], 0x20
46e9be: jne 0x46e501
46e9c4: test r15d, r15d
46e9c7: jle 0x46f8a0
46e9cd: movsxd rdx, r15d
46e9d0: mov esi, 0x20
46e9d5: mov rdi, r13
46e9d8: mov qword ptr [rbp - 0x950], r8
46e9df: mov qword ptr [rbp - 0x908], rdx
46e9e6: mov dword ptr [rbp - 0x938], ecx
46e9ec: mov dword ptr [rbp - 0x948], r10d
46e9f3: mov dword ptr [rbp - 0x934], r11d
46e9fa: call 0x474150
46e9ff: mov rdx, qword ptr [rbp - 0x908]
46ea06: cmp rdx, rax
46ea09: jne 0x46d3d9
46ea0f: cmp ebx, 0x7ffffffe
46ea15: mov r11d, dword ptr [rbp - 0x934]
46ea1c: mov r10d, dword ptr [rbp - 0x948]
46ea23: mov ecx, dword ptr [rbp - 0x938]
46ea29: mov r8, qword ptr [rbp - 0x950]
46ea30: ja 0x46f8a8
46ea36: mov eax, 0x7fffffff
46ea3b: sub eax, ebx
46ea3d: cmp eax, r15d
46ea40: jb 0x46d3cb
46ea46: add ebx, r15d
46ea49: xor r15d, r15d
46ea4c: jmp 0x46e4b8
46ea51: mov eax, dword ptr [rbp - 0x920]
46ea57: test eax, eax
46ea59: je 0x46edd8
46ea5f: mov rax, qword ptr [r13 + 0xa0]
46ea66: test rax, rax
46ea69: je 0x46f4f3
46ea6f: mov rsi, qword ptr [rax + 0x20]
46ea73: cmp rsi, qword ptr [rax + 0x28]
46ea77: jae 0x46f4f3
46ea7d: lea rdi, [rsi + 4]
46ea81: mov qword ptr [rax + 0x20], rdi
46ea85: mov dword ptr [rsi], 0x2b
46ea8b: jmp 0x46d283
46ea90: mov qword ptr [rbp - 0x940], rsi
46ea97: mov r12, qword ptr [rbp - 0x908]
46ea9e: nop 
46eaa0: mov rax, rsi
46eaa3: sub r12, 4
46eaa7: and eax, 0xf
46eaaa: mov eax, dword ptr [rcx + rax*4]
46eaad: mov dword ptr [r12], eax
46eab1: mov rax, rsi
46eab4: shr rsi, 4
46eab8: cmp rax, 0xf
46eabc: ja 0x46eaa0
46eabe: mov r11d, 0x10
46eac4: jmp 0x46e9a5
46eac9: mov eax, dword ptr [rcx + 4]
46eacc: cmp eax, 0xaf
46ead1: ja 0x46effb
46ead7: mov esi, eax
46ead9: add eax, 0x10
46eadc: add rsi, qword ptr [rcx + 0x10]
46eae0: mov dword ptr [rcx + 4], eax
46eae3: movsd xmm0, qword ptr [rsi]
46eae7: mov rax, rdx
46eaea: shl rax, 4
46eaee: movsd qword ptr [r10 + rax], xmm0
46eaf4: and dword ptr [r15 + rdx*4], 0xfffffeff
46eafc: jmp 0x46d474
46eb01: movsxd rdx, ecx
46eb04: mov esi, 0x30
46eb09: mov rdi, r13
46eb0c: mov qword ptr [rbp - 0x908], r9
46eb13: mov qword ptr [rbp - 0x8f0], rdx
46eb1a: mov dword ptr [rbp - 0x900], ecx
46eb20: call 0x474150
46eb25: mov rdx, qword ptr [rbp - 0x8f0]
46eb2c: cmp rdx, rax
46eb2f: jne 0x46d3d9
46eb35: cmp ebx, 0x7ffffffe
46eb3b: ja 0x46f8a8
46eb41: mov eax, 0x7fffffff
46eb46: mov ecx, dword ptr [rbp - 0x900]
46eb4c: sub eax, ebx
46eb4e: cmp eax, ecx
46eb50: jb 0x46d3cb
46eb56: mov r9, qword ptr [rbp - 0x908]
46eb5d: add ebx, ecx
46eb5f: jmp 0x46d324
46eb64: movsxd rdx, r15d
46eb67: mov esi, 0x30
46eb6c: mov rdi, r13
46eb6f: mov qword ptr [rbp - 0x908], r8
46eb76: mov qword ptr [rbp - 0x8f0], rdx
46eb7d: call 0x474150
46eb82: mov rdx, qword ptr [rbp - 0x8f0]
46eb89: cmp rdx, rax
46eb8c: jne 0x46d3d9
46eb92: cmp ebx, 0x7ffffffe
46eb98: ja 0x46f8a8
46eb9e: mov eax, 0x7fffffff
46eba3: sub eax, ebx
46eba5: cmp eax, r15d
46eba8: jb 0x46d3cb
46ebae: mov r8, qword ptr [rbp - 0x908]
46ebb5: add ebx, r15d
46ebb8: jmp 0x46e584
46ebbd: test ebx, ebx
46ebbf: js 0x46f96b
46ebc5: mov r15, qword ptr [r13 + 0xd8]
46ebcc: mov rdx, 0x4c1b60
46ebd3: mov rax, 0x4c2208
46ebda: mov rdi, r15
46ebdd: sub rax, rdx
46ebe0: sub rdi, rdx
46ebe3: cmp rax, rdi
46ebe6: jbe 0x46f750
46ebec: mov qword ptr [rbp - 0x900], rcx
46ebf3: mov rdx, rcx
46ebf6: mov rsi, r12
46ebf9: mov rdi, r13
46ebfc: call qword ptr [r15 + 0x38]
46ec00: mov rcx, qword ptr [rbp - 0x900]
46ec07: cmp rax, rcx
46ec0a: jne 0x46d3d9
46ec10: mov eax, 0x7fffffff
46ec15: sub eax, ebx
46ec17: cdqe 
46ec19: cmp rax, rcx
46ec1c: jb 0x46d3cb
46ec22: add ebx, dword ptr [rbp - 0x8f0]
46ec28: jmp 0x46dcc8
46ec2d: mov eax, dword ptr [rbp - 0x920]
46ec33: test eax, eax
46ec35: je 0x46f180
46ec3b: mov rax, qword ptr [r13 + 0xa0]
46ec42: test rax, rax
46ec45: je 0x46f5f7
46ec4b: mov rdx, qword ptr [rax + 0x20]
46ec4f: cmp rdx, qword ptr [rax + 0x28]
46ec53: jae 0x46f5f7
46ec59: lea rsi, [rdx + 4]
46ec5d: mov qword ptr [rax + 0x20], rsi
46ec61: mov dword ptr [rdx], 0x2b
46ec67: jmp 0x46e4f2
46ec6c: mov edi, dword ptr [rbp - 0x950]
46ec72: test edi, edi
46ec74: je 0x46ec79
46ec76: movzx esi, si
46ec79: mov dword ptr [rbp - 0x920], 0
46ec83: mov dword ptr [rbp - 0x928], 0
46ec8d: jmp 0x46d1d3
46ec92: cmp ecx, -1
46ec95: je 0x46f10f
46ec9b: cmp ecx, 5
46ec9e: jg 0x46f10f
46eca4: mov dword ptr [rbp - 0x8f0], 0
46ecae: xor ecx, ecx
46ecb0: lea r12, [rip + 0x3a59d]
46ecb7: mov dword ptr [rbp - 0x920], 0
46ecc1: jmp 0x46e166
46ecc6: mov ebx, dword ptr [rbp - 0x8f0]
46eccc: cmp dword ptr [r14], -1
46ecd0: je 0x46f064
46ecd6: mov rax, qword ptr [r13 + 0xa0]
46ecdd: test rax, rax
46ece0: je 0x46f6f0
46ece6: mov rdx, qword ptr [rax + 0x20]
46ecea: cmp rdx, qword ptr [rax + 0x28]
46ecee: jae 0x46f6f0
46ecf4: lea rcx, [rdx + 4]
46ecf8: mov qword ptr [rax + 0x20], rcx
46ecfc: mov dword ptr [rdx], 0x2e
46ed02: cmp r12d, 0x7fffffff
46ed09: je 0x46d3d9
46ed0f: lea rcx, [rbp - 0x860]
46ed16: movsxd rsi, dword ptr [r14]
46ed19: add r12d, 1
46ed1d: mov r15, rcx
46ed20: movabs rax, 0xcccccccccccccccd
46ed2a: mov rdi, rsi
46ed2d: sub r15, 4
46ed31: mul rsi
46ed34: shr rdx, 3
46ed38: lea rax, [rdx + rdx*4]
46ed3c: add rax, rax
46ed3f: sub rdi, rax
46ed42: mov rax, rdi
46ed45: lea rdi, [rip + 0x410b4]
46ed4c: mov eax, dword ptr [rdi + rax*4]
46ed4f: mov dword ptr [r15], eax
46ed52: mov rax, rsi
46ed55: mov rsi, rdx
46ed58: cmp rax, 9
46ed5c: ja 0x46ed20
46ed5e: cmp r15, rcx
46ed61: jae 0x46f064
46ed67: mov dword ptr [rbp - 0x8f0], ebx
46ed6d: mov rbx, rcx
46ed70: jmp 0x46edaf
46ed72: nop word ptr [rax + rax]
46ed78: mov rdx, qword ptr [rax + 0x20]
46ed7c: cmp rdx, qword ptr [rax + 0x28]
46ed80: jae 0x46edc3
46ed82: lea rdi, [rdx + 4]
46ed86: mov qword ptr [rax + 0x20], rdi
46ed8a: mov dword ptr [rdx], esi
46ed8c: cmp esi, -1
46ed8f: je 0x46d3d9
46ed95: cmp r12d, 0x7fffffff
46ed9c: je 0x46d3d9
46eda2: add r12d, 1
46eda6: cmp r15, rbx
46eda9: jae 0x46f05e
46edaf: mov rax, qword ptr [r13 + 0xa0]
46edb6: add r15, 4
46edba: mov esi, dword ptr [r15 - 4]
46edbe: test rax, rax
46edc1: jne 0x46ed78
46edc3: mov rdi, r13
46edc6: call 0x474890
46edcb: cmp eax, -1
46edce: jne 0x46ed95
46edd0: jmp 0x46d3d9
46edd5: nop dword ptr [rax]
46edd8: mov eax, dword ptr [rbp - 0x928]
46edde: test eax, eax
46ede0: je 0x46d296
46ede6: mov rax, qword ptr [r13 + 0xa0]
46eded: test rax, rax
46edf0: je 0x46f7dd
46edf6: mov rsi, qword ptr [rax + 0x20]
46edfa: cmp rsi, qword ptr [rax + 0x28]
46edfe: jae 0x46f7dd
46ee04: lea rdi, [rsi + 4]
46ee08: mov qword ptr [rax + 0x20], rdi
46ee0c: mov dword ptr [rsi], 0x20
46ee12: jmp 0x46d283
46ee17: mov r8, r9
46ee1a: sub r15d, edx
46ee1d: mov qword ptr [rbp - 0x940], 0
46ee28: sar r8, 2
46ee2c: mov dword ptr [rbp - 0x900], r8d
46ee33: sub r15d, r8d
46ee36: jmp 0x46e48f
46ee3b: mov qword ptr [rbp - 0x948], 0
46ee46: mov byte ptr [rbp - 0x934], 0x20
46ee4d: jmp 0x46e38d
46ee52: cmp ecx, -1
46ee55: jne 0x46ee89
46ee57: mov rdi, r12
46ee5a: call 0x401070
46ee5f: mov dword ptr [rbp - 0x920], 0
46ee69: mov dword ptr [rbp - 0x8f0], eax
46ee6f: mov rcx, rax
46ee72: jmp 0x46e166
46ee77: cmp ecx, 5
46ee7a: mov eax, 5
46ee7f: lea r12, [rip + 0x3a3ba]
46ee86: cmovl ecx, eax
46ee89: movsxd rsi, ecx
46ee8c: mov rdi, r12
46ee8f: call 0x401120
46ee94: mov dword ptr [rbp - 0x920], 0
46ee9e: mov dword ptr [rbp - 0x8f0], eax
46eea4: mov rcx, rax
46eea7: jmp 0x46e166
46eeac: mov ecx, dword ptr [rbp - 0x948]
46eeb2: test ecx, ecx
46eeb4: je 0x46f1cf
46eeba: mov byte ptr [rax], bl
46eebc: jmp 0x46dcc8
46eec1: mov edi, dword ptr [rbp - 0x948]
46eec7: mov esi, dword ptr [rsi + rax]
46eeca: test edi, edi
46eecc: je 0x46f1e4
46eed2: movsx rsi, sil
46eed6: jmp 0x46e6de
46eedb: test dl, 0x10
46eede: je 0x46d826
46eee4: mov rax, qword ptr [r13 + 0xa0]
46eeeb: test rax, rax
46eeee: je 0x46f809
46eef4: mov rdx, qword ptr [rax + 0x20]
46eef8: cmp rdx, qword ptr [rax + 0x28]
46eefc: jae 0x46f809
46ef02: lea rcx, [rdx + 4]
46ef06: mov qword ptr [rax + 0x20], rcx
46ef0a: mov dword ptr [rdx], 0x20
46ef10: jmp 0x46d81d
46ef15: mov rdx, qword ptr [rbp - 0x948]
46ef1c: sub rdx, rax
46ef1f: cmovs rdx, qword ptr [rbp - 0x940]
46ef27: mov ecx, edx
46ef29: jmp 0x46d230
46ef2e: cdqe 
46ef30: cmp qword ptr [r11 + rax*8 - 0x40], 0
46ef36: je 0x46dafb
46ef3c: movsxd rax, dword ptr [r12 + rdx*4]
46ef40: add rax, 0x17
46ef44: mov rdi, rax
46ef47: and rax, 0xfffffffffffff000
46ef4d: and rdi, 0xfffffffffffffff0
46ef51: mov qword ptr [rbp - 0x8d0], rdi
46ef58: mov rdi, rsp
46ef5b: sub rdi, rax
46ef5e: mov rax, rdi
46ef61: mov rdi, qword ptr [rbp - 0x8d0]
46ef68: cmp rsp, rax
46ef6b: je 0x46ef82
46ef6d: sub rsp, 0x1000
46ef74: or qword ptr [rsp + 0xff8], 0
46ef7d: cmp rsp, rax
46ef80: jne 0x46ef6d
46ef82: and edi, 0xfff
46ef88: sub rsp, rdi
46ef8b: test rdi, rdi
46ef8e: je 0x46ef96
46ef90: or qword ptr [rsp + rdi - 8], 0
46ef96: lea rdi, [rsp + 0xf]
46ef9b: mov dword ptr [rbp - 0x928], r9d
46efa2: and rdi, 0xfffffffffffffff0
46efa6: mov byte ptr [rbp - 0x920], r8b
46efad: mov qword ptr [r10 + rsi], rdi
46efb1: movsxd rax, dword ptr [r15 + rdx*4]
46efb5: mov rsi, rcx
46efb8: mov qword ptr [rbp - 0x908], r10
46efbf: mov qword ptr [rbp - 0x900], rdx
46efc6: mov qword ptr [rbp - 0x8d0], rcx
46efcd: call qword ptr [r11 + rax*8 - 0x40]
46efd2: mov rcx, qword ptr [rbp - 0x8d0]
46efd9: mov rdx, qword ptr [rbp - 0x900]
46efe0: mov r10, qword ptr [rbp - 0x908]
46efe7: movzx r8d, byte ptr [rbp - 0x920]
46efef: mov r9d, dword ptr [rbp - 0x928]
46eff6: jmp 0x46d474
46effb: mov rsi, qword ptr [rcx + 8]
46efff: lea rax, [rsi + 8]
46f003: mov qword ptr [rcx + 8], rax
46f007: jmp 0x46eae3
46f00c: mov r12d, 1
46f012: test dl, dl
46f014: jns 0x46d7e8
46f01a: mov r12d, 2
46f020: mov rdx, qword ptr [rax + 0x20]
46f024: cmp rdx, qword ptr [rax + 0x28]
46f028: jae 0x46f3c5
46f02e: lea rcx, [rdx + 4]
46f032: mov qword ptr [rax + 0x20], rcx
46f036: mov dword ptr [rdx], 0x27
46f03c: movzx edx, byte ptr [r14 + 0xc]
46f041: jmp 0x46d7e8
46f046: mov dword ptr [rbp - 0x8f0], 1
46f050: neg rsi
46f053: mov r11d, 0xa
46f059: jmp 0x46d1d3
46f05e: mov ebx, dword ptr [rbp - 0x8f0]
46f064: mov esi, dword ptr [r14 + 8]
46f068: test esi, esi
46f06a: je 0x46f0ae
46f06c: mov rax, qword ptr [r13 + 0xa0]
46f073: test rax, rax
46f076: je 0x46f870
46f07c: mov rdx, qword ptr [rax + 0x20]
46f080: cmp rdx, qword ptr [rax + 0x28]
46f084: jae 0x46f870
46f08a: lea rcx, [rdx + 4]
46f08e: mov qword ptr [rax + 0x20], rcx
46f092: mov dword ptr [rdx], esi
46f094: cmp esi, -1
46f097: je 0x46d3d9
46f09d: cmp r12d, 0x7fffffff
46f0a4: je 0x46d3d9
46f0aa: add r12d, 1
46f0ae: cmp ebx, 0x7ffffffe
46f0b4: ja 0x46f98a
46f0ba: mov eax, 0x7fffffff
46f0bf: sub eax, ebx
46f0c1: cmp eax, r12d
46f0c4: jb 0x46d3cb
46f0ca: add ebx, r12d
46f0cd: jmp 0x46dcc8
46f0d2: xor r9d, r9d
46f0d5: jmp 0x46d220
46f0da: mov rax, qword ptr [r13 + 0xa0]
46f0e1: test rax, rax
46f0e4: je 0x46f84d
46f0ea: mov rdx, qword ptr [rax + 0x20]
46f0ee: cmp rdx, qword ptr [rax + 0x28]
46f0f2: jae 0x46f84d
46f0f8: lea rcx, [rdx + 4]
46f0fc: mov qword ptr [rax + 0x20], rcx
46f100: mov dword ptr [rdx], 0x30
46f106: add r12d, 1
46f10a: jmp 0x46d866
46f10f: mov dword ptr [rbp - 0x8f0], 6
46f119: mov ecx, 6
46f11e: lea r12, [rip + 0x3a1db]
46f125: mov dword ptr [rbp - 0x920], 0
46f12f: jmp 0x46e166
46f134: movzx eax, byte ptr [rbp - 0x951]
46f13b: mov qword ptr [rbp - 0x940], rsi
46f142: lea rcx, [rip + 0x40cb7]
46f149: mov r10d, 0x78
46f14f: mov dword ptr [rbp - 0x958], 0x78
46f159: mov byte ptr [rbp - 0x930], al
46f15f: mov byte ptr [rbp - 0x938], 0
46f166: mov qword ptr [rbp - 0x948], 1
46f171: mov dword ptr [rbp - 0x8f0], 0
46f17b: jmp 0x46ea97
46f180: mov eax, dword ptr [rbp - 0x928]
46f186: test eax, eax
46f188: je 0x46e501
46f18e: mov rax, qword ptr [r13 + 0xa0]
46f195: test rax, rax
46f198: je 0x46f828
46f19e: mov rdx, qword ptr [rax + 0x20]
46f1a2: cmp rdx, qword ptr [rax + 0x28]
46f1a6: jae 0x46f828
46f1ac: lea rsi, [rdx + 4]
46f1b0: mov qword ptr [rax + 0x20], rsi
46f1b4: mov dword ptr [rdx], 0x20
46f1ba: jmp 0x46e4f2
46f1bf: mov rdi, r12
46f1c2: call 0x401180
46f1c7: mov rdx, rax
46f1ca: jmp 0x46e098
46f1cf: mov edx, dword ptr [rbp - 0x950]
46f1d5: test edx, edx
46f1d7: jne 0x46f4c5
46f1dd: mov dword ptr [rax], ebx
46f1df: jmp 0x46dcc8
46f1e4: mov edx, dword ptr [rbp - 0x950]
46f1ea: movsxd rax, esi
46f1ed: movsx rsi, si
46f1f1: test edx, edx
46f1f3: cmove rsi, rax
46f1f7: jmp 0x46e6de
46f1fc: mov qword ptr [rbp - 0x928], r8
46f203: mov esi, 0x2d
46f208: mov dword ptr [rbp - 0x920], ecx
46f20e: mov dword ptr [rbp - 0x908], r10d
46f215: mov dword ptr [rbp - 0x8f0], r11d
46f21c: mov rdi, r13
46f21f: call 0x474890
46f224: mov r11d, dword ptr [rbp - 0x8f0]
46f22b: mov r10d, dword ptr [rbp - 0x908]
46f232: cmp eax, -1
46f235: mov ecx, dword ptr [rbp - 0x920]
46f23b: mov r8, qword ptr [rbp - 0x928]
46f242: jne 0x46e4f2
46f248: jmp 0x46d3d9
46f24d: nop dword ptr [rax]
46f250: mov qword ptr [rbp - 0x900], r9
46f257: mov qword ptr [rbp - 0x8f0], rcx
46f25e: call 0x41b240
46f263: mov r9, qword ptr [rbp - 0x900]
46f26a: mov rcx, qword ptr [rbp - 0x8f0]
46f271: jmp 0x46d353
46f276: mov dword ptr [rbp - 0x928], ecx
46f27c: mov esi, 0x2d
46f281: mov dword ptr [rbp - 0x920], r10d
46f288: mov qword ptr [rbp - 0x908], rdx
46f28f: mov qword ptr [rbp - 0x900], r9
46f296: mov dword ptr [rbp - 0x8f0], r11d
46f29d: mov rdi, r13
46f2a0: call 0x474890
46f2a5: mov r11d, dword ptr [rbp - 0x8f0]
46f2ac: mov r9, qword ptr [rbp - 0x900]
46f2b3: cmp eax, -1
46f2b6: mov rdx, qword ptr [rbp - 0x908]
46f2bd: mov r10d, dword ptr [rbp - 0x920]
46f2c4: mov ecx, dword ptr [rbp - 0x928]
46f2ca: jne 0x46d283
46f2d0: jmp 0x46d3d9
46f2d5: nop dword ptr [rax]
46f2d8: movsxd rdx, r15d
46f2db: mov esi, 0x20
46f2e0: mov rdi, r13
46f2e3: mov qword ptr [rbp - 0x930], rcx
46f2ea: mov qword ptr [rbp - 0x928], rdx
46f2f1: call 0x474150
46f2f6: mov rdx, qword ptr [rbp - 0x928]
46f2fd: cmp rdx, rax
46f300: jne 0x46d3d9
46f306: cmp ebx, 0x7ffffffe
46f30c: ja 0x46f92d
46f312: mov eax, 0x7fffffff
46f317: sub eax, ebx
46f319: cmp eax, r15d
46f31c: jb 0x46d3cb
46f322: mov rcx, qword ptr [rbp - 0x930]
46f329: add ebx, r15d
46f32c: jmp 0x46e195
46f331: mov esi, 0x25
46f336: mov rdi, r13
46f339: call 0x474890
46f33e: cmp eax, -1
46f341: jne 0x46e2c2
46f347: jmp 0x46d3d9
46f34c: nop dword ptr [rax]
46f350: mov esi, 0x25
46f355: mov rdi, r13
46f358: call 0x474890
46f35d: cmp eax, -1
46f360: je 0x46d3d9
46f366: movzx edx, byte ptr [r14 + 0xc]
46f36b: test dl, 8
46f36e: je 0x46f6bf
46f374: mov rax, qword ptr [r13 + 0xa0]
46f37b: test rax, rax
46f37e: jne 0x46f7d0
46f384: mov esi, 0x23
46f389: mov rdi, r13
46f38c: call 0x474890
46f391: cmp eax, -1
46f394: je 0x46d3d9
46f39a: movzx edx, byte ptr [r14 + 0xc]
46f39f: mov ecx, 3
46f3a4: mov r12d, 2
46f3aa: test dl, dl
46f3ac: jns 0x46d7e8
46f3b2: mov rax, qword ptr [r13 + 0xa0]
46f3b9: mov r12d, ecx
46f3bc: test rax, rax
46f3bf: jne 0x46f020
46f3c5: mov esi, 0x27
46f3ca: mov rdi, r13
46f3cd: call 0x474890
46f3d2: cmp eax, -1
46f3d5: jne 0x46f03c
46f3db: jmp 0x46d3d9
46f3e0: mov qword ptr [rbp - 0x8f0], r8
46f3e7: call 0x41b240
46f3ec: mov r8, qword ptr [rbp - 0x8f0]
46f3f3: jmp 0x46e5b3
46f3f8: movsxd rdx, r15d
46f3fb: mov esi, 0x20
46f400: mov rdi, r13
46f403: mov qword ptr [rbp - 0x8f0], rdx
46f40a: call 0x474150
46f40f: mov rdx, qword ptr [rbp - 0x8f0]
46f416: cmp rdx, rax
46f419: jne 0x46d3d9
46f41f: cmp ebx, 0x7ffffffe
46f425: ja 0x46f92d
46f42b: mov r8d, 0x7fffffff
46f431: sub r8d, ebx
46f434: cmp r8d, r15d
46f437: jb 0x46d3cb
46f43d: add ebx, r15d
46f440: jmp 0x46e21d
46f445: movsxd rdx, r15d
46f448: mov esi, 0x20
46f44d: mov rdi, r13
46f450: mov qword ptr [rbp - 0x8f0], rdx
46f457: call 0x474150
46f45c: mov rdx, qword ptr [rbp - 0x8f0]
46f463: cmp rdx, rax
46f466: jne 0x46d3d9
46f46c: cmp ebx, 0x7ffffffe
46f472: ja 0x46f92d
46f478: mov eax, 0x7fffffff
46f47d: sub eax, ebx
46f47f: cmp eax, r15d
46f482: jb 0x46d3cb
46f488: add ebx, r15d
46f48b: jmp 0x46dff7
46f490: mov r15, qword ptr [rbp - 0x918]
46f497: mov rdi, r15
46f49a: call 0x401070
46f49f: mov rdi, r15
46f4a2: lea rsi, [rax*4 + 4]
46f4aa: call 0x454590
46f4af: mov dword ptr [rbp - 0x90c], eax
46f4b5: jmp 0x46e258
46f4ba: mov r12d, 3
46f4c0: jmp 0x46f020
46f4c5: mov word ptr [rax], bx
46f4c8: jmp 0x46dcc8
46f4cd: mov qword ptr [rbp - 0x930], rcx
46f4d4: mov qword ptr [rbp - 0x928], r8
46f4db: call 0x41b240
46f4e0: mov rcx, qword ptr [rbp - 0x930]
46f4e7: mov r8, qword ptr [rbp - 0x928]
46f4ee: jmp 0x46e1c4
46f4f3: mov dword ptr [rbp - 0x928], ecx
46f4f9: mov esi, 0x2b
46f4fe: mov dword ptr [rbp - 0x920], r10d
46f505: mov qword ptr [rbp - 0x908], rdx
46f50c: mov qword ptr [rbp - 0x900], r9
46f513: mov dword ptr [rbp - 0x8f0], r11d
46f51a: jmp 0x46f29d
46f51f: and byte ptr [r14 + 0xc], 0xfe
46f524: jmp 0x46e61b
46f529: mov esi, dword ptr [rbp - 0x958]
46f52f: mov rdi, r13
46f532: mov dword ptr [rbp - 0x908], ecx
46f538: mov qword ptr [rbp - 0x900], rdx
46f53f: mov qword ptr [rbp - 0x8f0], r9
46f546: call 0x474890
46f54b: mov r9, qword ptr [rbp - 0x8f0]
46f552: mov rdx, qword ptr [rbp - 0x900]
46f559: cmp eax, -1
46f55c: mov ecx, dword ptr [rbp - 0x908]
46f562: jne 0x46d2ff
46f568: jmp 0x46d3d9
46f56d: nop dword ptr [rax]
46f570: mov esi, 0x30
46f575: mov rdi, r13
46f578: mov dword ptr [rbp - 0x920], ecx
46f57e: mov dword ptr [rbp - 0x908], r10d
46f585: mov qword ptr [rbp - 0x900], rdx
46f58c: mov qword ptr [rbp - 0x8f0], r9
46f593: call 0x474890
46f598: mov r9, qword ptr [rbp - 0x8f0]
46f59f: mov rdx, qword ptr [rbp - 0x900]
46f5a6: cmp eax, -1
46f5a9: mov r10d, dword ptr [rbp - 0x908]
46f5b0: mov ecx, dword ptr [rbp - 0x920]
46f5b6: je 0x46d3d9
46f5bc: cmp ebx, 0x7fffffff
46f5c2: je 0x46d3d9
46f5c8: mov rax, qword ptr [r13 + 0xa0]
46f5cf: test rax, rax
46f5d2: je 0x46f529
46f5d8: mov rsi, qword ptr [rax + 0x20]
46f5dc: mov rdi, qword ptr [rax + 0x28]
46f5e0: jmp 0x46d2eb
46f5e5: and byte ptr [r14 + 0xc], 0xfe
46f5ea: mov dword ptr [r14 + 0x34], 7
46f5f2: jmp 0x46e723
46f5f7: mov qword ptr [rbp - 0x928], r8
46f5fe: mov esi, 0x2b
46f603: mov dword ptr [rbp - 0x920], ecx
46f609: mov dword ptr [rbp - 0x908], r10d
46f610: mov dword ptr [rbp - 0x8f0], r11d
46f617: jmp 0x46f21c
46f61c: mov esi, dword ptr [rbp - 0x958]
46f622: mov rdi, r13
46f625: mov qword ptr [rbp - 0x908], r8
46f62c: mov dword ptr [rbp - 0x8f0], ecx
46f632: call 0x474890
46f637: mov ecx, dword ptr [rbp - 0x8f0]
46f63d: mov r8, qword ptr [rbp - 0x908]
46f644: cmp eax, -1
46f647: jne 0x46e569
46f64d: jmp 0x46d3d9
46f652: nop word ptr [rax + rax]
46f658: mov esi, 0x30
46f65d: mov rdi, r13
46f660: mov qword ptr [rbp - 0x920], r8
46f667: mov dword ptr [rbp - 0x908], ecx
46f66d: mov dword ptr [rbp - 0x8f0], r10d
46f674: call 0x474890
46f679: mov r10d, dword ptr [rbp - 0x8f0]
46f680: mov ecx, dword ptr [rbp - 0x908]
46f686: cmp eax, -1
46f689: mov r8, qword ptr [rbp - 0x920]
46f690: je 0x46d3d9
46f696: cmp ebx, 0x7fffffff
46f69c: je 0x46d3d9
46f6a2: mov rax, qword ptr [r13 + 0xa0]
46f6a9: test rax, rax
46f6ac: je 0x46f61c
46f6b2: mov rdx, qword ptr [rax + 0x20]
46f6b6: mov rsi, qword ptr [rax + 0x28]
46f6ba: jmp 0x46e555
46f6bf: mov ecx, 2
46f6c4: mov r12d, 1
46f6ca: jmp 0x46f3aa
46f6cf: mov esi, 0x2d
46f6d4: mov rdi, r13
46f6d7: call 0x474890
46f6dc: cmp eax, -1
46f6df: jne 0x46d857
46f6e5: jmp 0x46d3d9
46f6ea: nop word ptr [rax + rax]
46f6f0: mov esi, 0x2e
46f6f5: mov rdi, r13
46f6f8: call 0x474890
46f6fd: cmp eax, -1
46f700: jne 0x46ed02
46f706: jmp 0x46d3d9
46f70b: nop dword ptr [rax + rax]
46f710: mov esi, 0x2b
46f715: mov rdi, r13
46f718: call 0x474890
46f71d: cmp eax, -1
46f720: jne 0x46d81d
46f726: jmp 0x46d3d9
46f72b: nop dword ptr [rax + rax]
46f730: mov esi, 0x49
46f735: mov rdi, r13
46f738: call 0x474890
46f73d: cmp eax, -1
46f740: jne 0x46d899
46f746: jmp 0x46d3d9
46f74b: nop dword ptr [rax + rax]
46f750: mov qword ptr [rbp - 0x900], rcx
46f757: call 0x41b240
46f75c: mov rcx, qword ptr [rbp - 0x900]
46f763: jmp 0x46ebec
46f768: mov rdi, r12
46f76b: mov dword ptr [rbp - 0x970], ecx
46f771: mov dword ptr [rbp - 0x958], r10d
46f778: mov byte ptr [rbp - 0x908], r9b
46f77f: call 0x426410
46f784: movzx r9d, byte ptr [rbp - 0x908]
46f78c: mov r10d, dword ptr [rbp - 0x958]
46f793: test rax, rax
46f796: mov qword ptr [rbp - 0x8e8], rax
46f79d: mov ecx, dword ptr [rbp - 0x970]
46f7a3: je 0x46d3f0
46f7a9: cmp r15d, ecx
46f7ac: jge 0x46f890
46f7b2: movsxd rax, ecx
46f7b5: lea rax, [rax*4 + 0x80]
46f7bd: add rax, qword ptr [rbp - 0x8e8]
46f7c4: mov qword ptr [rbp - 0x908], rax
46f7cb: jmp 0x46d6b8
46f7d0: mov rcx, qword ptr [rax + 0x20]
46f7d4: mov rsi, qword ptr [rax + 0x28]
46f7d8: jmp 0x46d7be
46f7dd: mov dword ptr [rbp - 0x928], ecx
46f7e3: mov esi, 0x20
46f7e8: mov dword ptr [rbp - 0x920], r10d
46f7ef: mov qword ptr [rbp - 0x908], rdx
46f7f6: mov qword ptr [rbp - 0x900], r9
46f7fd: mov dword ptr [rbp - 0x8f0], r11d
46f804: jmp 0x46f29d
46f809: mov esi, 0x20
46f80e: mov rdi, r13
46f811: call 0x474890
46f816: cmp eax, -1
46f819: jne 0x46d81d
46f81f: jmp 0x46d3d9
46f824: nop dword ptr [rax]
46f828: mov qword ptr [rbp - 0x928], r8
46f82f: mov esi, 0x20
46f834: mov dword ptr [rbp - 0x920], ecx
46f83a: mov dword ptr [rbp - 0x908], r10d
46f841: mov dword ptr [rbp - 0x8f0], r11d
46f848: jmp 0x46f21c
46f84d: mov esi, 0x30
46f852: mov rdi, r13
46f855: call 0x474890
46f85a: cmp eax, -1
46f85d: jne 0x46f106
46f863: jmp 0x46d3d9
46f868: nop dword ptr [rax + rax]
46f870: mov rdi, r13
46f873: call 0x474890
46f878: cmp eax, -1
46f87b: jne 0x46f09d
46f881: jmp 0x46d3d9
46f886: nop word ptr cs:[rax + rax]
46f890: movsxd rax, r15d
46f893: lea rax, [rax*4 + 0x80]
46f89b: jmp 0x46f7bd
46f8a0: xor r15d, r15d
46f8a3: jmp 0x46e501
46f8a8: lea rcx, [rip + 0x261d1]
46f8af: mov edx, 0x818
46f8b4: lea rsi, [rip + 0x26029]
46f8bb: lea rdi, [rip + 0x260a6]
46f8c2: call 0x4032a0
46f8c7: mov rdi, r12
46f8ca: call 0x426410
46f8cf: mov r12, rax
46f8d2: test rax, rax
46f8d5: je 0x46d3d9
46f8db: mov dword ptr [rbp - 0x920], 1
46f8e5: mov rdx, qword ptr [rbp - 0x8f0]
46f8ec: jmp 0x46e132
46f8f1: test r15d, r15d
46f8f4: jg 0x46e9cd
46f8fa: xor r15d, r15d
46f8fd: jmp 0x46e4b8
46f902: lea rdi, [rip + 0x260b7]
46f909: call 0x41b220
46f90e: lea rcx, [rip + 0x2616b]
46f915: mov edx, 0x818
46f91a: lea rsi, [rip + 0x25fc3]
46f921: lea rdi, [rip + 0x26070]
46f928: call 0x4032a0
46f92d: lea rcx, [rip + 0x2614c]
46f934: mov edx, 0x819
46f939: lea rsi, [rip + 0x25fa4]
46f940: lea rdi, [rip + 0x26021]
46f947: call 0x4032a0
46f94c: lea rcx, [rip + 0x2612d]
46f953: mov edx, 0x83e
46f958: lea rsi, [rip + 0x25f85]
46f95f: lea rdi, [rip + 0x26032]
46f966: call 0x4032a0
46f96b: lea rcx, [rip + 0x2610e]
46f972: mov edx, 0x819
46f977: lea rsi, [rip + 0x25f66]
46f97e: lea rdi, [rip + 0x26013]
46f985: call 0x4032a0
46f98a: lea rcx, [rip + 0x260ef]
46f991: mov edx, 0x834
46f996: lea rsi, [rip + 0x25f47]
46f99d: lea rdi, [rip + 0x25fc4]
46f9a4: call 0x4032a0
46f9a9: call 0x4547a0
46f9ae: nop 
46f9b0: endbr64 
46f9b4: push rbp
46f9b5: mov rbp, rsp
46f9b8: push r15
46f9ba: mov r15, rdx
46f9bd: push r14
46f9bf: mov r14, rsi
46f9c2: mov esi, 1
46f9c7: push r13
46f9c9: push r12
46f9cb: mov r12, rdi
46f9ce: push rbx
46f9cf: sub rsp, 0x538
46f9d6: mov dword ptr [rbp - 0x4a8], ecx
46f9dc: mov rax, qword ptr fs:[0x28]
46f9e5: mov qword ptr [rbp - 0x38], rax
46f9e9: xor eax, eax
46f9eb: mov rax, 0xffffffffffffffc0
46f9f2: mov eax, dword ptr fs:[rax]
46f9f5: mov dword ptr [rbp - 0x4bc], eax
46f9fb: call 0x41a620
46fa00: cmp eax, 1
46fa03: jne 0x47134b
46fa09: mov eax, dword ptr [r12]
46fa0d: test al, 8
46fa0f: jne 0x471336
46fa15: test r14, r14
46fa18: je 0x47207a
46fa1e: mov esi, 1
46fa23: mov rdi, r12
46fa26: call 0x41a620
46fa2b: cmp eax, 1
46fa2e: jne 0x47134b
46fa34: mov r13d, dword ptr [r12]
46fa38: mov eax, r13d
46fa3b: and eax, 2
46fa3e: mov dword ptr [rbp - 0x4d0], eax
46fa44: jne 0x46fe40
46fa4a: movdqu xmm1, xmmword ptr [r15]
46fa4f: mov rax, qword ptr [r15 + 0x10]
46fa53: mov esi, 0x25
46fa58: mov rdi, r14
46fa5b: mov qword ptr [rbp - 0x428], rax
46fa62: movups xmmword ptr [rbp - 0x438], xmm1
46fa69: call 0x476e50
46fa6e: and r13d, 0x8000
46fa75: mov qword ptr [rbp - 0x4b0], rax
46fa7c: mov dword ptr [rbp - 0x4a4], r13d
46fa83: jne 0x46fb00
46fa85: cmp qword ptr [rip + 0x50523], 0
46fa8d: je 0x46fe60
46fa93: mov rsi, 0x46caa0
46fa9a: lea rdi, [rbp - 0x460]
46faa1: mov rdx, r12
46faa4: call 0
46faa9: test dword ptr [r12], 0x8000
46fab1: mov dword ptr [rbp - 0x4a4], 1
46fabb: jne 0x46fb0a
46fabd: mov rdi, qword ptr [r12 + 0x88]
46fac5: mov r13, qword ptr fs:[0x10]
46face: cmp qword ptr [rdi + 8], r13
46fad2: je 0x46faf8
46fad4: mov eax, dword ptr fs:[0x18]
46fadc: test eax, eax
46fade: jne 0x471830
46fae4: mov edx, 1
46fae9: cmpxchg dword ptr [rdi], edx
46faec: mov rdi, qword ptr [r12 + 0x88]
46faf4: mov qword ptr [rdi + 8], r13
46faf8: add dword ptr [rdi + 4], 1
46fafc: jmp 0x46fb0a
46fafe: nop 
46fb00: mov dword ptr [rbp - 0x4a4], 0
46fb0a: mov rax, qword ptr [r12 + 0xd8]
46fb12: mov rbx, 0x4c2208
46fb19: sub rbx, 0x4c1b60
46fb20: mov rdx, rax
46fb23: sub rdx, 0x4c1b60
46fb2a: mov qword ptr [rbp - 0x4b8], rbx
46fb31: cmp rbx, rdx
46fb34: jbe 0x46fe80
46fb3a: mov rbx, qword ptr [rbp - 0x4b0]
46fb41: mov rsi, r14
46fb44: mov rdi, r12
46fb47: sub rbx, r14
46fb4a: mov r13, rbx
46fb4d: sar r13, 2
46fb51: mov rdx, r13
46fb54: call qword ptr [rax + 0x38]
46fb57: cmp r13, rax
46fb5a: jne 0x46fde0
46fb60: movabs rax, 0x1fffffffc
46fb6a: cmp rbx, rax
46fb6d: jg 0x46fea0
46fb73: mov r11, qword ptr [rbp - 0x4b0]
46fb7a: mov esi, dword ptr [r11]
46fb7d: test esi, esi
46fb7f: je 0x46fd30
46fb85: cmp qword ptr [rip + 0x53dbb], 0
46fb8d: jne 0x46fcb0
46fb93: cmp qword ptr [rip + 0x53db5], 0
46fb9b: jne 0x46fcb0
46fba1: cmp qword ptr [rip + 0x53dc7], 0
46fba9: jne 0x46fcb0
46fbaf: mov dword ptr [rbp - 0x534], 0
46fbb9: mov eax, dword ptr [rbp - 0x4a8]
46fbbf: mov dword ptr [rbp - 0x4c0], 0
46fbc9: mov dword ptr [rbp - 0x518], 0
46fbd3: mov ecx, eax
46fbd5: mov qword ptr [rbp - 0x510], 0xffffffffffffffff
46fbe0: and ecx, 2
46fbe3: mov dword ptr [rbp - 0x540], ecx
46fbe9: mov ecx, eax
46fbeb: and eax, 8
46fbee: and ecx, 1
46fbf1: mov dword ptr [rbp - 0x53c], eax
46fbf7: mov byte ptr [rbp - 0x535], cl
46fbfd: mov ebx, dword ptr [r11 + 4]
46fc01: lea eax, [rbx - 0x20]
46fc04: cmp eax, 0x5a
46fc07: ja 0x46fe30
46fc0d: lea rdx, [rip + 0x3966c]
46fc14: add r11, 4
46fc18: lea rcx, [rip + 0x4e5a1]
46fc1f: mov dword ptr [rbp - 0x528], 0
46fc29: movzx eax, byte ptr [rdx + rax]
46fc2d: xor r9d, r9d
46fc30: mov dword ptr [rbp - 0x4d8], 0
46fc3a: mov r8d, 0xffffffff
46fc40: mov dword ptr [rbp - 0x530], 0
46fc4a: lea r10, [rbp - 0x38]
46fc4e: mov dword ptr [rbp - 0x4d0], 0
46fc58: mov rax, qword ptr [rcx + rax*8]
46fc5c: mov dword ptr [rbp - 0x4e8], 0
46fc66: mov dword ptr [rbp - 0x520], 0
46fc70: mov dword ptr [rbp - 0x4f8], 0
46fc7a: mov dword ptr [rbp - 0x4e0], 0
46fc84: mov dword ptr [rbp - 0x508], 0
46fc8e: mov dword ptr [rbp - 0x514], 0
46fc98: mov qword ptr [rbp - 0x4c8], 0
46fca3: mov dword ptr [rbp - 0x4f0], 0x20
46fcad: jmp rax
46fcaf: nop 
46fcb0: mov dword ptr [rbp - 0x518], 0
46fcba: mov dword ptr [rbp - 0x534], 0
46fcc4: mov qword ptr [rbp - 0x510], 0xffffffffffffffff
46fccf: mov eax, dword ptr [rbp - 0x4a8]
46fcd5: sub rsp, 8
46fcd9: mov r9d, r13d
46fcdc: mov rcx, r15
46fcdf: mov edx, dword ptr [rbp - 0x534]
46fce5: lea r8, [rbp - 0x438]
46fcec: mov rsi, r14
46fcef: mov rdi, r12
46fcf2: push rax
46fcf3: mov eax, dword ptr [rbp - 0x518]
46fcf9: push rax
46fcfa: mov eax, dword ptr [rbp - 0x4bc]
46fd00: push qword ptr [rbp - 0x510]
46fd06: push rax
46fd07: lea rax, [rbp - 0x420]
46fd0e: push rax
46fd0f: mov eax, dword ptr [rbp - 0x4d0]
46fd15: push qword ptr [rbp - 0x4b0]
46fd1b: push rax
46fd1c: call 0x46ce90
46fd21: add rsp, 0x40
46fd25: mov r13d, eax
46fd28: nop dword ptr [rax + rax]
46fd30: test dword ptr [r12], 0x8000
46fd38: jne 0x46fd51
46fd3a: mov rdi, qword ptr [r12 + 0x88]
46fd42: mov eax, dword ptr [rdi + 4]
46fd45: sub eax, 1
46fd48: mov dword ptr [rdi + 4], eax
46fd4b: je 0x46fe08
46fd51: mov edi, dword ptr [rbp - 0x4a4]
46fd57: test edi, edi
46fd59: jne 0x46fdf0
46fd5f: mov rax, qword ptr [rbp - 0x38]
46fd63: xor rax, qword ptr fs:[0x28]
46fd6c: jne 0x472a1b
46fd72: lea rsp, [rbp - 0x28]
46fd76: mov eax, r13d
46fd79: pop rbx
46fd7a: pop r12
46fd7c: pop r13
46fd7e: pop r14
46fd80: pop r15
46fd82: pop rbp
46fd83: ret 
46fd84: nop dword ptr [rax]
46fd88: endbr64 
46fd8c: endbr64 
46fd90: mov ebx, dword ptr [r11 + 4]
46fd94: lea rcx, [r11 + 4]
46fd98: lea eax, [rbx - 0x20]
46fd9b: cmp eax, 0x5a
46fd9e: jbe 0x46fec0
46fda4: nop dword ptr [rax]
46fda8: endbr64 
46fdac: test ebx, ebx
46fdae: jne 0x46ff10
46fdb4: mov rax, 0xffffffffffffffc0
46fdbb: mov dword ptr fs:[rax], 0x16
46fdc2: nop word ptr [rax + rax]
46fdc8: cmp qword ptr [rbp - 0x4c8], 0
46fdd0: je 0x46fde0
46fdd2: mov rdi, qword ptr [rbp - 0x4c8]
46fdd9: call 0x426a00
46fdde: nop 
46fde0: mov r13d, 0xffffffff
46fde6: jmp 0x46fd30
46fdeb: nop dword ptr [rax + rax]
46fdf0: lea rdi, [rbp - 0x460]
46fdf7: xor esi, esi
46fdf9: call 0
46fdfe: jmp 0x46fd5f
46fe03: nop dword ptr [rax + rax]
46fe08: mov qword ptr [rdi + 8], 0
46fe10: mov edx, dword ptr fs:[0x18]
46fe18: test edx, edx
46fe1a: jne 0x4719a0
46fe20: sub dword ptr [rdi], 1
46fe23: jmp 0x46fd51
46fe28: nop dword ptr [rax + rax]
46fe30: mov qword ptr [rbp - 0x4c8], 0
46fe3b: jmp 0x46fda8
46fe40: mov ecx, dword ptr [rbp - 0x4a8]
46fe46: mov rdx, r15
46fe49: mov rsi, r14
46fe4c: mov rdi, r12
46fe4f: call 0x472c00
46fe54: mov r13d, eax
46fe57: jmp 0x46fd5f
46fe5c: nop dword ptr [rax]
46fe60: mov rax, 0x46caa0
46fe67: mov qword ptr [rbp - 0x458], r12
46fe6e: mov qword ptr [rbp - 0x460], rax
46fe75: jmp 0x46fabd
46fe7a: nop word ptr [rax + rax]
46fe80: mov qword ptr [rbp - 0x4c8], rax
46fe87: call 0x41b240
46fe8c: mov rax, qword ptr [rbp - 0x4c8]
46fe93: jmp 0x46fb3a
46fe98: nop dword ptr [rax + rax]
46fea0: mov rax, 0xffffffffffffffc0
46fea7: mov r13d, 0xffffffff
46fead: mov dword ptr fs:[rax], 0x4b
46feb4: jmp 0x46fd30
46feb9: nop dword ptr [rax]
46fec0: movzx eax, byte ptr [rdx + rax]
46fec4: lea rsi, [rip + 0x4def5]
46fecb: mov r11, rcx
46fece: xor r9d, r9d
46fed1: mov dword ptr [rbp - 0x4d0], 1
46fedb: mov rax, qword ptr [rsi + rax*8]
46fedf: jmp rax
46fee1: mov r8d, dword ptr [rbp - 0x4d8]
46fee8: mov r11, qword ptr [rbp - 0x548]
46feef: cmp eax, -1
46fef2: je 0x470270
46fef8: test eax, eax
46fefa: je 0x470bf7
46ff00: cmp ebx, 0x24
46ff03: jne 0x470bf7
46ff09: nop dword ptr [rax]
46ff10: mov eax, dword ptr [rbp - 0x4c0]
46ff16: mov dword ptr [rbp - 0x4d0], eax
46ff1c: mov rax, qword ptr [rbp - 0x4c8]
46ff23: test rax, rax
46ff26: je 0x46fccf
46ff2c: mov rdi, rax
46ff2f: call 0x426a00
46ff34: jmp 0x46fccf
46ff39: nop dword ptr [rax]
46ff40: endbr64 
46ff44: mov ebx, dword ptr [rbp - 0x4d8]
46ff4a: mov edi, dword ptr [rbp - 0x4e0]
46ff50: sub ebx, 1
46ff53: test ebx, ebx
46ff55: setg cl
46ff58: test edi, edi
46ff5a: jne 0x46ff64
46ff5c: test cl, cl
46ff5e: jne 0x471ffc
46ff64: mov eax, dword ptr [r15]
46ff67: cmp eax, 0x2f
46ff6a: ja 0x471940
46ff70: mov edx, eax
46ff72: add eax, 8
46ff75: add rdx, qword ptr [r15 + 0x10]
46ff79: mov dword ptr [r15], eax
46ff7c: mov rax, qword ptr [r12 + 0xa0]
46ff84: mov esi, dword ptr [rdx]
46ff86: test rax, rax
46ff89: je 0x47210e
46ff8f: mov rdx, qword ptr [rax + 0x20]
46ff93: cmp rdx, qword ptr [rax + 0x28]
46ff97: jae 0x47210e
46ff9d: lea rdi, [rdx + 4]
46ffa1: mov qword ptr [rax + 0x20], rdi
46ffa5: mov dword ptr [rdx], esi
46ffa7: cmp esi, -1
46ffaa: je 0x46fdc8
46ffb0: cmp r13d, 0x7fffffff
46ffb7: je 0x46fdc8
46ffbd: mov esi, dword ptr [rbp - 0x4e0]
46ffc3: add r13d, 1
46ffc7: test esi, esi
46ffc9: je 0x46ffd8
46ffcb: test cl, cl
46ffcd: jne 0x470a11
46ffd3: nop dword ptr [rax + rax]
46ffd8: add dword ptr [rbp - 0x4c0], 1
46ffdf: cmp qword ptr [rbp - 0x4c8], 0
46ffe7: jne 0x471658
46ffed: lea r8, [r11 + 4]
46fff1: mov esi, 0x25
46fff6: mov rdi, r8
46fff9: mov qword ptr [rbp - 0x4c8], r8
470000: call 0x476e50
470005: test r13d, r13d
470008: mov r8, qword ptr [rbp - 0x4c8]
47000f: mov r11, rax
470012: js 0x472aa3
470018: mov rax, qword ptr [r12 + 0xd8]
470020: mov rdx, rax
470023: sub rdx, 0x4c1b60
47002a: cmp qword ptr [rbp - 0x4b8], rdx
470031: jbe 0x471620
470037: mov rbx, r11
47003a: mov qword ptr [rbp - 0x4c8], r11
470041: mov rsi, r8
470044: mov rdi, r12
470047: sub rbx, r8
47004a: sar rbx, 2
47004e: mov rdx, rbx
470051: call qword ptr [rax + 0x38]
470054: cmp rbx, rax
470057: jne 0x46fde0
47005d: mov eax, 0x7fffffff
470062: sub eax, r13d
470065: cdqe 
470067: cmp rbx, rax
47006a: jg 0x46fea0
470070: mov r11, qword ptr [rbp - 0x4c8]
470077: add r13d, ebx
47007a: mov r8d, dword ptr [r11]
47007d: test r8d, r8d
470080: jne 0x46fbfd
470086: jmp 0x46fd30
47008b: nop dword ptr [rax + rax]
470090: endbr64 
470094: mov eax, dword ptr [r15]
470097: cmp eax, 0x2f
47009a: ja 0x471b28
4700a0: mov edx, eax
4700a2: add eax, 8
4700a5: add rdx, qword ptr [r15 + 0x10]
4700a9: mov dword ptr [r15], eax
4700ac: mov r9, qword ptr [rdx]
4700af: test r9, r9
4700b2: je 0x4718e0
4700b8: mov ecx, dword ptr [rbp - 0x4d0]
4700be: test ecx, ecx
4700c0: jne 0x4719c8
4700c6: cmp ebx, 0x53
4700c9: je 0x4719c8
4700cf: mov qword ptr [rbp - 0x480], r9
4700d6: mov qword ptr [rbp - 0x4d0], r11
4700dd: cmp r8d, -1
4700e1: je 0x472063
4700e7: movsxd rsi, r8d
4700ea: mov rdi, r9
4700ed: call 0x401030
4700f2: mov r11, qword ptr [rbp - 0x4d0]
4700f9: mov rdx, rax
4700fc: movabs rax, 0x3fffffffffffffff
470106: cmp rdx, rax
470109: ja 0x470270
47010f: lea rbx, [rdx*4]
470117: mov qword ptr [rbp - 0x4e8], r11
47011e: mov rdi, rbx
470121: mov qword ptr [rbp - 0x4d0], rdx
470128: call 0x421200
47012d: mov rdx, qword ptr [rbp - 0x4d0]
470134: mov r11, qword ptr [rbp - 0x4e8]
47013b: test eax, eax
47013d: jne 0x47014c
47013f: cmp rbx, 0x1000
470146: ja 0x472a20
47014c: add rbx, 0x17
470150: mov rcx, rsp
470153: mov rax, rbx
470156: and rbx, 0xfffffffffffff000
47015d: sub rcx, rbx
470160: and rax, 0xfffffffffffffff0
470164: cmp rsp, rcx
470167: je 0x47017e
470169: sub rsp, 0x1000
470170: or qword ptr [rsp + 0xff8], 0
470179: cmp rsp, rcx
47017c: jne 0x470169
47017e: and eax, 0xfff
470183: sub rsp, rax
470186: test rax, rax
470189: je 0x470191
47018b: or qword ptr [rsp + rax - 8], 0
470191: mov dword ptr [rbp - 0x4e8], 0
47019b: lea r8, [rsp + 0xf]
4701a0: mov r9, r8
4701a3: and r9, 0xfffffffffffffff0
4701a7: lea rcx, [rbp - 0x440]
4701ae: lea rsi, [rbp - 0x480]
4701b5: mov rdi, r9
4701b8: mov qword ptr [rbp - 0x4f0], r11
4701bf: mov qword ptr [rbp - 0x440], 0
4701ca: mov qword ptr [rbp - 0x4d0], r9
4701d1: call 0x44f210
4701d6: mov rcx, rax
4701d9: cmp rax, -1
4701dd: je 0x46fdc8
4701e3: mov r9, qword ptr [rbp - 0x4d0]
4701ea: mov r11, qword ptr [rbp - 0x4f0]
4701f1: mov ebx, eax
4701f3: sub dword ptr [rbp - 0x4d8], ebx
4701f9: jns 0x471448
4701ff: test r13d, r13d
470202: js 0x472ba8
470208: mov r8, qword ptr [r12 + 0xd8]
470210: mov rax, r8
470213: sub rax, 0x4c1b60
47021a: cmp qword ptr [rbp - 0x4b8], rax
470221: jbe 0x4728eb
470227: mov qword ptr [rbp - 0x4d0], rcx
47022e: mov rdx, rcx
470231: mov rsi, r9
470234: mov rdi, r12
470237: mov qword ptr [rbp - 0x4d8], r11
47023e: call qword ptr [r8 + 0x38]
470242: mov rcx, qword ptr [rbp - 0x4d0]
470249: cmp rcx, rax
47024c: jne 0x46fdc8
470252: mov eax, 0x7fffffff
470257: mov r11, qword ptr [rbp - 0x4d8]
47025e: sub eax, r13d
470261: cdqe 
470263: cmp rcx, rax
470266: jbe 0x470a63
47026c: nop dword ptr [rax]
470270: mov rax, 0xffffffffffffffc0
470277: mov dword ptr fs:[rax], 0x4b
47027e: jmp 0x46fdc8
470283: nop dword ptr [rax + rax]
470288: endbr64 
47028c: jmp 0x46fd8c
470291: nop dword ptr [rax]
470298: endbr64 
47029c: cmp byte ptr [rbp - 0x535], 0
4702a3: jne 0x4728d7
4702a9: mov edx, r9d
4702ac: and edx, 1
4702af: mov eax, dword ptr [rbp - 0x4d8]
4702b5: movzx edx, dl
4702b8: mov dword ptr [rbp - 0x474], 0
4702c2: or dh, 4
4702c5: mov dword ptr [rbp - 0x480], r8d
4702cc: mov dword ptr [rbp - 0x47c], eax
4702d2: movzx eax, word ptr [rbp - 0x4e8]
4702d9: mov dword ptr [rbp - 0x478], ebx
4702df: add eax, eax
4702e1: or eax, edx
4702e3: movzx edx, word ptr [rbp - 0x4d0]
4702ea: shl edx, 2
4702ed: or eax, edx
4702ef: movzx edx, word ptr [rbp - 0x514]
4702f6: shl edx, 3
4702f9: or eax, edx
4702fb: movzx edx, word ptr [rbp - 0x508]
470302: shl edx, 4
470305: or eax, edx
470307: movzx edx, word ptr [rbp - 0x4e0]
47030e: shl edx, 5
470311: or eax, edx
470313: movzx edx, word ptr [rbp - 0x4f8]
47031a: shl edx, 6
47031d: or eax, edx
47031f: movzx edx, word ptr [rbp - 0x520]
470326: shl edx, 7
470329: or eax, edx
47032b: mov word ptr [rbp - 0x474], ax
470332: mov eax, dword ptr [rbp - 0x4f0]
470338: mov dword ptr [rbp - 0x470], eax
47033e: test r9d, r9d
470341: jne 0x471b40
470347: mov eax, dword ptr [r15 + 4]
47034b: and byte ptr [rbp - 0x473], 0xef
470352: cmp eax, 0xaf
470357: ja 0x4723c1
47035d: mov edx, eax
47035f: add eax, 0x10
470362: add rdx, qword ptr [r15 + 0x10]
470366: mov dword ptr [r15 + 4], eax
47036a: movsd xmm0, qword ptr [rdx]
47036e: movsd qword ptr [rbp - 0x490], xmm0
470376: lea rax, [rbp - 0x490]
47037d: lea rdx, [rbp - 0x498]
470384: mov rdi, r12
470387: mov qword ptr [rbp - 0x4d0], r11
47038e: lea rsi, [rbp - 0x480]
470395: mov qword ptr [rbp - 0x498], rax
47039c: call 0x46a6f0
4703a1: test eax, eax
4703a3: js 0x46fdc8
4703a9: cmp r13d, 0x7ffffffe
4703b0: ja 0x472b3a
4703b6: mov edx, 0x7fffffff
4703bb: mov r11, qword ptr [rbp - 0x4d0]
4703c2: sub edx, r13d
4703c5: cmp edx, eax
4703c7: jb 0x470270
4703cd: add r13d, eax
4703d0: jmp 0x46ffd8
4703d5: nop dword ptr [rax]
4703d8: endbr64 
4703dc: cmp byte ptr [rbp - 0x535], 0
4703e3: jne 0x4728e1
4703e9: mov edx, r9d
4703ec: and edx, 1
4703ef: mov eax, dword ptr [rbp - 0x4d8]
4703f5: movzx edx, dl
4703f8: mov dword ptr [rbp - 0x474], 0
470402: or dh, 4
470405: mov dword ptr [rbp - 0x480], r8d
47040c: mov dword ptr [rbp - 0x47c], eax
470412: movzx eax, word ptr [rbp - 0x4e8]
470419: mov dword ptr [rbp - 0x478], ebx
47041f: add eax, eax
470421: or eax, edx
470423: movzx edx, word ptr [rbp - 0x4d0]
47042a: shl edx, 2
47042d: or eax, edx
47042f: movzx edx, word ptr [rbp - 0x514]
470436: shl edx, 3
470439: or eax, edx
47043b: movzx edx, word ptr [rbp - 0x508]
470442: shl edx, 4
470445: or eax, edx
470447: movzx edx, word ptr [rbp - 0x4e0]
47044e: shl edx, 5
470451: or eax, edx
470453: movzx edx, word ptr [rbp - 0x4f8]
47045a: shl edx, 6
47045d: or eax, edx
47045f: movzx edx, word ptr [rbp - 0x520]
470466: shl edx, 7
470469: or eax, edx
47046b: movzx edx, word ptr [rbp - 0x528]
470472: shl edx, 0xb
470475: or eax, edx
470477: mov word ptr [rbp - 0x474], ax
47047e: mov eax, dword ptr [rbp - 0x4f0]
470484: mov dword ptr [rbp - 0x470], eax
47048a: test r9d, r9d
47048d: jne 0x471ae0
470493: mov eax, dword ptr [r15 + 4]
470497: and byte ptr [rbp - 0x473], 0xef
47049e: cmp eax, 0xaf
4704a3: ja 0x4723e8
4704a9: mov edx, eax
4704ab: add eax, 0x10
4704ae: add rdx, qword ptr [r15 + 0x10]
4704b2: mov dword ptr [r15 + 4], eax
4704b6: movsd xmm0, qword ptr [rdx]
4704ba: movsd qword ptr [rbp - 0x490], xmm0
4704c2: lea rax, [rbp - 0x490]
4704c9: lea rdx, [rbp - 0x4a0]
4704d0: mov rdi, r12
4704d3: mov qword ptr [rbp - 0x4d0], r11
4704da: lea rsi, [rbp - 0x480]
4704e1: mov qword ptr [rbp - 0x4a0], rax
4704e8: call 0x46a400
4704ed: test eax, eax
4704ef: jns 0x4703a9
4704f5: jmp 0x46fdc8
4704fa: nop word ptr [rax + rax]
470500: endbr64 
470504: mov dword ptr [rbp - 0x500], 0x10
47050e: mov esi, dword ptr [rbp - 0x4d0]
470514: mov eax, dword ptr [r15]
470517: test esi, esi
470519: je 0x4712f0
47051f: cmp eax, 0x2f
470522: ja 0x471850
470528: mov edx, eax
47052a: add eax, 8
47052d: add rdx, qword ptr [r15 + 0x10]
470531: mov dword ptr [r15], eax
470534: mov dword ptr [rbp - 0x4f8], 0
47053e: mov rax, qword ptr [rdx]
470541: mov dword ptr [rbp - 0x508], 0
47054b: mov qword ptr [rbp - 0x4e8], rax
470552: mov dword ptr [rbp - 0x4d0], 0
47055c: test r8d, r8d
47055f: js 0x471258
470565: je 0x471360
47056b: mov dword ptr [rbp - 0x4f0], 0x20
470575: movsxd rax, r8d
470578: mov qword ptr [rbp - 0x530], rax
47057f: lea rax, [rip + 0x3f87a]
470586: cmp ebx, 0x58
470589: lea rcx, [rip + 0x3f7d0]
470590: cmovne rcx, rax
470594: mov eax, dword ptr [rbp - 0x500]
47059a: cmp eax, 0xa
47059d: je 0x471680
4705a3: cmp eax, 0x10
4705a6: je 0x4713d8
4705ac: cmp eax, 8
4705af: je 0x471410
4705b5: movsxd rdi, dword ptr [rbp - 0x500]
4705bc: mov rsi, qword ptr [rbp - 0x4e8]
4705c3: mov r9, r10
4705c6: nop word ptr cs:[rax + rax]
4705d0: mov rax, rsi
4705d3: xor edx, edx
4705d5: sub r9, 4
4705d9: div rdi
4705dc: mov edx, dword ptr [rcx + rdx*4]
4705df: mov dword ptr [r9], edx
4705e2: mov rdx, rsi
4705e5: mov rsi, rax
4705e8: cmp rdx, rdi
4705eb: jae 0x4705d0
4705ed: cmp qword ptr [rbp - 0x510], 0
4705f5: je 0x470684
4705fb: mov eax, dword ptr [rbp - 0x520]
470601: test eax, eax
470603: je 0x470684
470605: mov r8d, dword ptr [rbp - 0x518]
47060c: mov rcx, qword ptr [rbp - 0x510]
470613: mov rdx, r10
470616: mov rsi, r9
470619: lea rdi, [rbp - 0x420]
470620: mov qword ptr [rbp - 0x548], r11
470627: mov qword ptr [rbp - 0x520], r10
47062e: call 0x46caf0
470633: mov r11, qword ptr [rbp - 0x548]
47063a: mov r10, qword ptr [rbp - 0x520]
470641: mov r9, rax
470644: cmp dword ptr [rbp - 0x500], 0xa
47064b: jne 0x470684
47064d: mov eax, dword ptr [rbp - 0x528]
470653: test eax, eax
470655: je 0x470684
470657: mov rdx, r10
47065a: mov rsi, r10
47065d: mov rdi, r9
470660: mov qword ptr [rbp - 0x528], r11
470667: mov qword ptr [rbp - 0x520], r10
47066e: call 0x46cbd0
470673: mov r11, qword ptr [rbp - 0x528]
47067a: mov r10, qword ptr [rbp - 0x520]
470681: mov r9, rax
470684: mov rdx, r10
470687: mov rax, qword ptr [rbp - 0x530]
47068e: sub rdx, r9
470691: mov rcx, rdx
470694: sar rcx, 2
470698: cmp rcx, rax
47069b: jge 0x471270
4706a1: mov r10, rax
4706a4: mov eax, 0
4706a9: sub r10, rcx
4706ac: cmovs r10, rax
4706b0: mov eax, dword ptr [rbp - 0x4e0]
4706b6: mov r8d, r10d
4706b9: test eax, eax
4706bb: jne 0x471080
4706c1: mov eax, dword ptr [rbp - 0x4d8]
4706c7: mov dword ptr [rbp - 0x4e0], ecx
4706cd: sub eax, ecx
4706cf: sub eax, r10d
4706d2: cmp qword ptr [rbp - 0x4e8], 0
4706da: mov r10d, eax
4706dd: je 0x4706fc
4706df: movzx eax, byte ptr [rbp - 0x514]
4706e6: and eax, 1
4706e9: cmp dword ptr [rbp - 0x500], 0x10
4706f0: jne 0x4706fc
4706f2: lea edx, [r10 - 2]
4706f6: test al, al
4706f8: cmovne r10d, edx
4706fc: mov eax, dword ptr [rbp - 0x4f8]
470702: or eax, dword ptr [rbp - 0x508]
470708: or eax, dword ptr [rbp - 0x4d0]
47070e: je 0x471570
470714: sub r10d, 1
470718: cmp dword ptr [rbp - 0x4f0], 0x20
47071f: je 0x472bc7
470725: mov edi, dword ptr [rbp - 0x4d0]
47072b: test edi, edi
47072d: je 0x4717f0
470733: mov rax, qword ptr [r12 + 0xa0]
47073b: test rax, rax
47073e: je 0x472220
470744: mov rdx, qword ptr [rax + 0x20]
470748: cmp rdx, qword ptr [rax + 0x28]
47074c: jae 0x472220
470752: lea rsi, [rdx + 4]
470756: mov qword ptr [rax + 0x20], rsi
47075a: mov dword ptr [rdx], 0x2d
470760: cmp r13d, 0x7fffffff
470767: je 0x46fdc8
47076d: add r13d, 1
470771: cmp qword ptr [rbp - 0x4e8], 0
470779: je 0x4707f8
47077b: cmp dword ptr [rbp - 0x500], 0x10
470782: jne 0x4707f8
470784: mov eax, dword ptr [rbp - 0x514]
47078a: test eax, eax
47078c: je 0x4707f8
47078e: mov rax, qword ptr [r12 + 0xa0]
470796: test rax, rax
470799: je 0x472850
47079f: mov rsi, qword ptr [rax + 0x20]
4707a3: mov rdi, qword ptr [rax + 0x28]
4707a7: cmp rsi, rdi
4707aa: jae 0x472850
4707b0: lea rdx, [rsi + 4]
4707b4: mov qword ptr [rax + 0x20], rdx
4707b8: mov dword ptr [rsi], 0x30
4707be: cmp r13d, 0x7fffffff
4707c5: je 0x46fdc8
4707cb: cmp rdx, rdi
4707ce: jae 0x4727ed
4707d4: lea rsi, [rdx + 4]
4707d8: mov qword ptr [rax + 0x20], rsi
4707dc: mov dword ptr [rdx], ebx
4707de: cmp ebx, -1
4707e1: je 0x46fdc8
4707e7: cmp r13d, 0x7ffffffe
4707ee: je 0x46fdc8
4707f4: add r13d, 2
4707f8: lea ebx, [r10 + r8]
4707fc: test ebx, ebx
4707fe: jg 0x471770
470804: test r13d, r13d
470807: js 0x472ac2
47080d: mov rbx, qword ptr [r12 + 0xd8]
470815: mov rax, rbx
470818: sub rax, 0x4c1b60
47081f: cmp qword ptr [rbp - 0x4b8], rax
470826: jbe 0x47233e
47082c: mov qword ptr [rbp - 0x4d0], rcx
470833: mov rdx, rcx
470836: mov rsi, r9
470839: mov rdi, r12
47083c: mov qword ptr [rbp - 0x4d8], r11
470843: call qword ptr [rbx + 0x38]
470846: mov rcx, qword ptr [rbp - 0x4d0]
47084d: cmp rcx, rax
470850: jne 0x46fdc8
470856: mov eax, 0x7fffffff
47085b: mov r11, qword ptr [rbp - 0x4d8]
470862: sub eax, r13d
470865: cdqe 
470867: cmp rax, rcx
47086a: jl 0x470270
470870: add r13d, dword ptr [rbp - 0x4e0]
470877: jmp 0x46ffd8
47087c: nop dword ptr [rax]
470880: endbr64 
470884: mov ebx, dword ptr [r11 + 4]
470888: lea rcx, [r11 + 4]
47088c: lea eax, [rbx - 0x20]
47088f: cmp eax, 0x5a
470892: ja 0x46fda8
470898: movzx eax, byte ptr [rdx + rax]
47089c: lea rsi, [rip + 0x4d91d]
4708a3: mov r11, rcx
4708a6: mov dword ptr [rbp - 0x528], 1
4708b0: mov rax, qword ptr [rsi + rax*8]
4708b4: jmp rax
4708b6: nop word ptr cs:[rax + rax]
4708c0: endbr64 
4708c4: mov ecx, dword ptr [rbp - 0x4e0]
4708ca: mov ebx, dword ptr [r11 + 4]
4708ce: mov eax, 0x30
4708d3: test ecx, ecx
4708d5: cmovne eax, dword ptr [rbp - 0x4f0]
4708dc: add r11, 4
4708e0: mov dword ptr [rbp - 0x4f0], eax
4708e6: lea eax, [rbx - 0x20]
4708e9: cmp eax, 0x5a
4708ec: ja 0x46fda8
4708f2: movzx eax, byte ptr [rdx + rax]
4708f6: lea rcx, [rip + 0x4d8c3]
4708fd: jmp qword ptr [rcx + rax*8]
470900: endbr64 
470904: mov ebx, dword ptr [r11 + 4]
470908: lea rcx, [r11 + 4]
47090c: lea eax, [rbx - 0x20]
47090f: cmp eax, 0x5a
470912: ja 0x46fda8
470918: movzx eax, byte ptr [rdx + rax]
47091c: lea rsi, [rip + 0x4d89d]
470923: mov r11, rcx
470926: mov dword ptr [rbp - 0x514], 1
470930: mov rax, qword ptr [rsi + rax*8]
470934: jmp rax
470936: nop word ptr cs:[rax + rax]
470940: endbr64 
470944: mov r10d, dword ptr [rbp - 0x4d0]
47094b: test r10d, r10d
47094e: jne 0x46ff40
470954: mov ebx, dword ptr [rbp - 0x4d8]
47095a: mov r9d, dword ptr [rbp - 0x4e0]
470961: sub ebx, 1
470964: test ebx, ebx
470966: setg byte ptr [rbp - 0x4d0]
47096d: movzx eax, byte ptr [rbp - 0x4d0]
470974: test r9d, r9d
470977: jne 0x470981
470979: test al, al
47097b: jne 0x4723f9
470981: mov eax, dword ptr [r15]
470984: cmp eax, 0x2f
470987: ja 0x471f60
47098d: mov edx, eax
47098f: add eax, 8
470992: add rdx, qword ptr [r15 + 0x10]
470996: mov dword ptr [r15], eax
470999: movzx edi, byte ptr [rdx]
47099c: mov qword ptr [rbp - 0x4d8], r11
4709a3: call 0x476c90
4709a8: mov r11, qword ptr [rbp - 0x4d8]
4709af: mov esi, eax
4709b1: mov rax, qword ptr [r12 + 0xa0]
4709b9: test rax, rax
4709bc: je 0x4725e5
4709c2: mov rdx, qword ptr [rax + 0x20]
4709c6: cmp rdx, qword ptr [rax + 0x28]
4709ca: jae 0x4725e5
4709d0: lea rcx, [rdx + 4]
4709d4: mov qword ptr [rax + 0x20], rcx
4709d8: mov dword ptr [rdx], esi
4709da: cmp esi, -1
4709dd: je 0x46fdc8
4709e3: cmp r13d, 0x7fffffff
4709ea: je 0x46fdc8
4709f0: mov r8d, dword ptr [rbp - 0x4e0]
4709f7: add r13d, 1
4709fb: test r8d, r8d
4709fe: je 0x46ffd8
470a04: cmp byte ptr [rbp - 0x4d0], 0
470a0b: je 0x46ffd8
470a11: movsxd rdx, ebx
470a14: mov esi, 0x20
470a19: mov rdi, r12
470a1c: mov qword ptr [rbp - 0x4d8], r11
470a23: mov qword ptr [rbp - 0x4d0], rdx
470a2a: call 0x474150
470a2f: mov rdx, qword ptr [rbp - 0x4d0]
470a36: cmp rdx, rax
470a39: jne 0x46fdc8
470a3f: cmp r13d, 0x7ffffffe
470a46: ja 0x472bd8
470a4c: mov eax, 0x7fffffff
470a51: mov r11, qword ptr [rbp - 0x4d8]
470a58: sub eax, r13d
470a5b: cmp eax, ebx
470a5d: jb 0x470270
470a63: add r13d, ebx
470a66: jmp 0x46ffd8
470a6b: nop dword ptr [rax + rax]
470a70: endbr64 
470a74: mov edi, dword ptr [rbp - 0x4bc]
470a7a: lea rsi, [rbp - 0x420]
470a81: mov edx, 0x3e8
470a86: mov qword ptr [rbp - 0x4f0], r11
470a8d: mov dword ptr [rbp - 0x4e8], r8d
470a94: call 0x429060
470a99: mov r8d, dword ptr [rbp - 0x4e8]
470aa0: mov dword ptr [rbp - 0x4d0], 0
470aaa: mov r11, qword ptr [rbp - 0x4f0]
470ab1: mov r9, rax
470ab4: jmp 0x4700af
470ab9: nop dword ptr [rax]
470ac0: endbr64 
470ac4: mov ebx, dword ptr [r11 + 4]
470ac8: lea rcx, [r11 + 4]
470acc: lea eax, [rbx - 0x20]
470acf: cmp eax, 0x5a
470ad2: ja 0x46fda8
470ad8: movzx esi, byte ptr [rdx + rax]
470adc: lea rax, [rip + 0x4d3dd]
470ae3: mov r11, rcx
470ae6: mov dword ptr [rbp - 0x4e8], 1
470af0: mov rax, qword ptr [rax + rsi*8]
470af4: jmp rax
470af6: nop word ptr cs:[rax + rax]
470b00: endbr64 
470b04: mov eax, dword ptr [r11 + 4]
470b08: lea rcx, [r11 + 4]
470b0c: cmp eax, 0x2a
470b0f: je 0x471d98
470b15: sub eax, 0x30
470b18: cmp eax, 9
470b1b: jbe 0x4721a8
470b21: mov r11, rcx
470b24: xor r8d, r8d
470b27: mov ebx, dword ptr [r11]
470b2a: lea eax, [rbx - 0x20]
470b2d: cmp eax, 0x5a
470b30: ja 0x46fda8
470b36: movzx ecx, byte ptr [rdx + rax]
470b3a: lea rax, [rip + 0x4d47f]
470b41: jmp qword ptr [rax + rcx*8]
470b44: nop dword ptr [rax]
470b48: endbr64 
470b4c: mov eax, dword ptr [r11]
470b4f: mov ebx, dword ptr [r11 + 4]
470b53: lea esi, [rax - 0x30]
470b56: lea ecx, [rbx - 0x30]
470b59: mov dword ptr [rbp - 0x4d8], esi
470b5f: lea rax, [r11 + 4]
470b63: cmp ecx, 9
470b66: ja 0x472610
470b6c: mov dword ptr [rbp - 0x4d8], r8d
470b73: jmp 0x470b9b
470b75: nop dword ptr [rax]
470b78: lea esi, [rsi + rsi*4]
470b7b: mov r8d, 0x7fffffff
470b81: add esi, esi
470b83: sub r8d, ecx
470b86: cmp esi, r8d
470b89: jg 0x470bb1
470b8b: add esi, ecx
470b8d: cmp edi, 9
470b90: ja 0x471ba0
470b96: mov ecx, edi
470b98: mov rax, r11
470b9b: mov ebx, dword ptr [rax + 4]
470b9e: lea r11, [rax + 4]
470ba2: lea edi, [rbx - 0x30]
470ba5: test esi, esi
470ba7: js 0x470b8d
470ba9: cmp esi, 0xccccccc
470baf: jle 0x470b78
470bb1: cmp edi, 9
470bb4: ja 0x470270
470bba: mov ecx, dword ptr [rax + 8]
470bbd: lea r11, [rax + 8]
470bc1: sub ecx, 0x30
470bc4: cmp ecx, 9
470bc7: ja 0x470270
470bcd: mov esi, 0xffffffff
470bd2: jmp 0x470b98
470bd4: nop dword ptr [rax]
470bd8: endbr64 
470bdc: lea rax, [r11 + 4]
470be0: mov qword ptr [rbp - 0x500], rax
470be7: mov eax, dword ptr [r11 + 4]
470beb: sub eax, 0x30
470bee: cmp eax, 9
470bf1: jbe 0x471ed0
470bf7: mov eax, dword ptr [r15]
470bfa: cmp eax, 0x2f
470bfd: jbe 0x471b88
470c03: mov rcx, qword ptr [r15 + 8]
470c07: lea rax, [rcx + 8]
470c0b: mov qword ptr [r15 + 8], rax
470c0f: mov eax, dword ptr [rcx]
470c11: mov dword ptr [rbp - 0x4d8], eax
470c17: test eax, eax
470c19: jns 0x470c37
470c1b: mov dword ptr [rbp - 0x4e0], 1
470c25: neg eax
470c27: mov dword ptr [rbp - 0x4d8], eax
470c2d: mov dword ptr [rbp - 0x4f0], 0x20
470c37: cmp dword ptr [rbp - 0x4d8], 0x1fffffde
470c41: jg 0x470270
470c47: movsxd rax, dword ptr [rbp - 0x4d8]
470c4e: cmp eax, 0xd9
470c53: jle 0x470d00
470c59: lea rbx, [rax*4 + 0x80]
470c61: mov dword ptr [rbp - 0x554], r9d
470c68: mov rdi, rbx
470c6b: mov qword ptr [rbp - 0x550], r11
470c72: mov dword ptr [rbp - 0x548], r8d
470c79: call 0x421200
470c7e: cmp rbx, 0x1000
470c85: mov r8d, dword ptr [rbp - 0x548]
470c8c: mov r11, qword ptr [rbp - 0x550]
470c93: mov r9d, dword ptr [rbp - 0x554]
470c9a: lea rdx, [rip + 0x385df]
470ca1: jbe 0x470cab
470ca3: test eax, eax
470ca5: je 0x472a5f
470cab: lea rax, [rbx + 0x17]
470caf: mov rsi, rsp
470cb2: mov rcx, rax
470cb5: and rax, 0xfffffffffffff000
470cbb: sub rsi, rax
470cbe: and rcx, 0xfffffffffffffff0
470cc2: mov rax, rsi
470cc5: cmp rsp, rax
470cc8: je 0x470cdf
470cca: sub rsp, 0x1000
470cd1: or qword ptr [rsp + 0xff8], 0
470cda: cmp rsp, rax
470cdd: jne 0x470cca
470cdf: and ecx, 0xfff
470ce5: sub rsp, rcx
470ce8: test rcx, rcx
470ceb: je 0x470cf3
470ced: or qword ptr [rsp + rcx - 8], 0
470cf3: lea rax, [rsp + 0xf]
470cf8: and rax, 0xfffffffffffffff0
470cfc: lea r10, [rax + rbx]
470d00: mov ebx, dword ptr [r11 + 4]
470d04: mov r11, qword ptr [rbp - 0x500]
470d0b: lea eax, [rbx - 0x20]
470d0e: cmp eax, 0x5a
470d11: ja 0x46fda8
470d17: movzx ecx, byte ptr [rdx + rax]
470d1b: lea rax, [rip + 0x4d39e]
470d22: jmp qword ptr [rax + rcx*8]
470d25: nop dword ptr [rax]
470d28: endbr64 
470d2c: mov ebx, dword ptr [r11 + 4]
470d30: lea rcx, [r11 + 4]
470d34: lea eax, [rbx - 0x20]
470d37: cmp eax, 0x5a
470d3a: ja 0x46fda8
470d40: movzx esi, byte ptr [rdx + rax]
470d44: lea rax, [rip + 0x4cf75]
470d4b: mov r11, rcx
470d4e: mov dword ptr [rbp - 0x4d0], 1
470d58: mov rax, qword ptr [rax + rsi*8]
470d5c: jmp rax
470d5e: nop 
470d60: endbr64 
470d64: mov dword ptr [rbp - 0x500], 0xa
470d6e: jmp 0x47050e
470d73: nop dword ptr [rax + rax]
470d78: endbr64 
470d7c: mov edx, dword ptr [rbp - 0x4d0]
470d82: mov eax, dword ptr [r15]
470d85: test edx, edx
470d87: je 0x471aa8
470d8d: cmp eax, 0x2f
470d90: ja 0x4720d2
470d96: mov edx, eax
470d98: add eax, 8
470d9b: add rdx, qword ptr [r15 + 0x10]
470d9f: mov dword ptr [r15], eax
470da2: mov rax, qword ptr [rdx]
470da5: test rax, rax
470da8: js 0x471ca0
470dae: mov qword ptr [rbp - 0x4e8], rax
470db5: mov dword ptr [rbp - 0x4d0], 0
470dbf: mov dword ptr [rbp - 0x500], 0xa
470dc9: jmp 0x47055c
470dce: nop 
470dd0: endbr64 
470dd4: mov rax, qword ptr [r12 + 0xa0]
470ddc: test rax, rax
470ddf: je 0x472383
470de5: mov rdx, qword ptr [rax + 0x20]
470de9: cmp rdx, qword ptr [rax + 0x28]
470ded: jae 0x472383
470df3: lea rcx, [rdx + 4]
470df7: mov qword ptr [rax + 0x20], rcx
470dfb: mov dword ptr [rdx], 0x25
470e01: cmp r13d, 0x7fffffff
470e08: je 0x46fdc8
470e0e: add r13d, 1
470e12: jmp 0x46ffd8
470e17: nop word ptr [rax + rax]
470e20: endbr64 
470e24: mov dword ptr [rbp - 0x500], 8
470e2e: jmp 0x47050e
470e33: nop dword ptr [rax + rax]
470e38: endbr64 
470e3c: mov edi, dword ptr [rbp - 0x540]
470e42: test edi, edi
470e44: je 0x470e54
470e46: mov esi, dword ptr [rbp - 0x534]
470e4c: test esi, esi
470e4e: je 0x4724cd
470e54: mov ecx, dword ptr [rbp - 0x4d0]
470e5a: mov eax, dword ptr [r15]
470e5d: test ecx, ecx
470e5f: je 0x471a58
470e65: cmp eax, 0x2f
470e68: ja 0x4720c1
470e6e: mov edx, eax
470e70: add eax, 8
470e73: add rdx, qword ptr [r15 + 0x10]
470e77: mov dword ptr [r15], eax
470e7a: mov rax, qword ptr [rdx]
470e7d: movsxd rdx, r13d
470e80: mov qword ptr [rax], rdx
470e83: jmp 0x46ffd8
470e88: nop dword ptr [rax + rax]
470e90: endbr64 
470e94: mov eax, dword ptr [r15]
470e97: cmp eax, 0x2f
470e9a: ja 0x471a90
470ea0: mov edx, eax
470ea2: add eax, 8
470ea5: add rdx, qword ptr [r15 + 0x10]
470ea9: mov dword ptr [r15], eax
470eac: mov rax, qword ptr [rdx]
470eaf: test rax, rax
470eb2: je 0x471a06
470eb8: mov qword ptr [rbp - 0x4e8], rax
470ebf: mov ebx, 0x78
470ec4: mov dword ptr [rbp - 0x520], 0
470ece: mov dword ptr [rbp - 0x514], 1
470ed8: mov dword ptr [rbp - 0x4d0], 0
470ee2: mov dword ptr [rbp - 0x500], 0x10
470eec: jmp 0x47055c
470ef1: nop dword ptr [rax]
470ef8: endbr64 
470efc: mov ebx, dword ptr [r11 + 4]
470f00: lea rcx, [r11 + 4]
470f04: lea eax, [rbx - 0x20]
470f07: cmp eax, 0x5a
470f0a: ja 0x46fda8
470f10: movzx eax, byte ptr [rdx + rax]
470f14: mov r11, rcx
470f17: lea rsi, [rip + 0x4d2a2]
470f1e: mov dword ptr [rbp - 0x4e0], 1
470f28: mov dword ptr [rbp - 0x4f0], 0x20
470f32: mov rax, qword ptr [rsi + rax*8]
470f36: jmp rax
470f38: nop dword ptr [rax + rax]
470f40: endbr64 
470f44: mov ebx, dword ptr [r11 + 4]
470f48: lea rcx, [r11 + 4]
470f4c: lea eax, [rbx - 0x20]
470f4f: cmp eax, 0x5a
470f52: ja 0x46fda8
470f58: movzx eax, byte ptr [rdx + rax]
470f5c: lea rsi, [rip + 0x4d25d]
470f63: mov r11, rcx
470f66: mov dword ptr [rbp - 0x4f8], 1
470f70: mov rax, qword ptr [rsi + rax*8]
470f74: jmp rax
470f76: nop word ptr cs:[rax + rax]
470f80: endbr64 
470f84: mov ebx, dword ptr [r11 + 4]
470f88: lea rcx, [r11 + 4]
470f8c: lea eax, [rbx - 0x20]
470f8f: cmp eax, 0x5a
470f92: ja 0x46fda8
470f98: movzx eax, byte ptr [rdx + rax]
470f9c: lea rsi, [rip + 0x4ce1d]
470fa3: mov r11, rcx
470fa6: mov dword ptr [rbp - 0x4d0], 1
470fb0: mov r9d, 1
470fb6: mov rax, qword ptr [rsi + rax*8]
470fba: jmp rax
470fbc: nop dword ptr [rax]
470fc0: endbr64 
470fc4: mov ebx, dword ptr [r11 + 4]
470fc8: lea rcx, [r11 + 4]
470fcc: lea eax, [rbx - 0x20]
470fcf: cmp eax, 0x5a
470fd2: ja 0x46fda8
470fd8: movzx eax, byte ptr [rdx + rax]
470fdc: mov r11, rcx
470fdf: lea rsi, [rip + 0x4cdda]
470fe6: mov dword ptr [rbp - 0x530], 1
470ff0: mov dword ptr [rbp - 0x4e8], 0
470ffa: mov rax, qword ptr [rsi + rax*8]
470ffe: jmp rax
471000: endbr64 
471004: cmp qword ptr [rbp - 0x510], -1
47100c: je 0x471f71
471012: mov ebx, dword ptr [r11 + 4]
471016: lea rcx, [r11 + 4]
47101a: lea eax, [rbx - 0x20]
47101d: cmp eax, 0x5a
471020: ja 0x46fda8
471026: movzx eax, byte ptr [rdx + rax]
47102a: lea rsi, [rip + 0x4d18f]
471031: mov r11, rcx
471034: mov dword ptr [rbp - 0x520], 1
47103e: mov rax, qword ptr [rsi + rax*8]
471042: jmp rax
471044: nop dword ptr [rax]
471048: endbr64 
47104c: mov ebx, dword ptr [r11 + 4]
471050: lea rcx, [r11 + 4]
471054: lea eax, [rbx - 0x20]
471057: cmp eax, 0x5a
47105a: ja 0x46fda8
471060: movzx eax, byte ptr [rdx + rax]
471064: lea rsi, [rip + 0x4d155]
47106b: mov r11, rcx
47106e: mov dword ptr [rbp - 0x508], 1
471078: mov rax, qword ptr [rsi + rax*8]
47107c: jmp rax
47107e: nop 
471080: mov eax, dword ptr [rbp - 0x4d0]
471086: test eax, eax
471088: je 0x471530
47108e: mov rax, qword ptr [r12 + 0xa0]
471096: test rax, rax
471099: je 0x472140
47109f: mov rcx, qword ptr [rax + 0x20]
4710a3: cmp rcx, qword ptr [rax + 0x28]
4710a7: jae 0x472140
4710ad: lea rsi, [rcx + 4]
4710b1: mov qword ptr [rax + 0x20], rsi
4710b5: mov dword ptr [rcx], 0x2d
4710bb: cmp r13d, 0x7fffffff
4710c2: je 0x46fdc8
4710c8: sub dword ptr [rbp - 0x4d8], 1
4710cf: add r13d, 1
4710d3: cmp qword ptr [rbp - 0x4e8], 0
4710db: je 0x471165
4710e1: cmp dword ptr [rbp - 0x500], 0x10
4710e8: jne 0x471165
4710ea: mov eax, dword ptr [rbp - 0x514]
4710f0: test eax, eax
4710f2: je 0x471165
4710f4: mov rax, qword ptr [r12 + 0xa0]
4710fc: test rax, rax
4710ff: je 0x4726e0
471105: mov rsi, qword ptr [rax + 0x20]
471109: mov rdi, qword ptr [rax + 0x28]
47110d: cmp rsi, rdi
471110: jae 0x4726e0
471116: lea rcx, [rsi + 4]
47111a: mov qword ptr [rax + 0x20], rcx
47111e: mov dword ptr [rsi], 0x30
471124: cmp r13d, 0x7fffffff
47112b: je 0x46fdc8
471131: cmp rcx, rdi
471134: jae 0x47275a
47113a: lea rsi, [rcx + 4]
47113e: mov qword ptr [rax + 0x20], rsi
471142: mov dword ptr [rcx], ebx
471144: cmp ebx, -1
471147: je 0x46fdc8
47114d: cmp r13d, 0x7ffffffe
471154: je 0x46fdc8
47115a: sub dword ptr [rbp - 0x4d8], 2
471161: add r13d, 2
471165: mov rbx, rdx
471168: mov eax, dword ptr [rbp - 0x4d8]
47116e: sar rbx, 2
471172: add r10d, ebx
471175: sub eax, r10d
471178: mov dword ptr [rbp - 0x4d0], eax
47117e: test r8d, r8d
471181: jg 0x4716f0
471187: test r13d, r13d
47118a: js 0x472ac2
471190: mov rax, qword ptr [r12 + 0xd8]
471198: mov rdx, rax
47119b: sub rdx, 0x4c1b60
4711a2: cmp qword ptr [rbp - 0x4b8], rdx
4711a9: jbe 0x47230a
4711af: mov qword ptr [rbp - 0x4d8], r11
4711b6: mov rdx, rbx
4711b9: mov rsi, r9
4711bc: mov rdi, r12
4711bf: call qword ptr [rax + 0x38]
4711c2: cmp rbx, rax
4711c5: jne 0x46fdc8
4711cb: mov eax, 0x7fffffff
4711d0: mov r11, qword ptr [rbp - 0x4d8]
4711d7: sub eax, r13d
4711da: cdqe 
4711dc: cmp rbx, rax
4711df: jg 0x470270
4711e5: add r13d, ebx
4711e8: mov ebx, dword ptr [rbp - 0x4d0]
4711ee: test ebx, ebx
4711f0: jle 0x46ffd8
4711f6: movsxd rdx, ebx
4711f9: mov esi, 0x20
4711fe: mov rdi, r12
471201: mov qword ptr [rbp - 0x4e0], r11
471208: mov qword ptr [rbp - 0x4d8], rdx
47120f: call 0x474150
471214: mov rdx, qword ptr [rbp - 0x4d8]
47121b: cmp rdx, rax
47121e: jne 0x46fdc8
471224: cmp r13d, 0x7ffffffe
47122b: ja 0x472b3a
471231: mov eax, 0x7fffffff
471236: mov r11, qword ptr [rbp - 0x4e0]
47123d: sub eax, r13d
471240: cmp eax, ebx
471242: jb 0x470270
471248: add r13d, dword ptr [rbp - 0x4d0]
47124f: jmp 0x46ffd8
471254: nop dword ptr [rax]
471258: mov qword ptr [rbp - 0x530], 1
471263: jmp 0x47057f
471268: nop dword ptr [rax + rax]
471270: cmp qword ptr [rbp - 0x4e8], 0
471278: je 0x471920
47127e: movzx eax, byte ptr [rbp - 0x514]
471285: and eax, 1
471288: cmp dword ptr [rbp - 0x500], 8
47128f: jne 0x4712aa
471291: test al, al
471293: je 0x4712aa
471295: lea rcx, [r9 - 4]
471299: mov rdx, r10
47129c: mov dword ptr [r9 - 4], 0x30
4712a4: sub rdx, rcx
4712a7: mov r9, rcx
4712aa: mov r10, qword ptr [rbp - 0x530]
4712b1: mov rcx, rdx
4712b4: mov esi, 0
4712b9: sar rcx, 2
4712bd: sub r10, rcx
4712c0: cmovs r10, rsi
4712c4: mov esi, dword ptr [rbp - 0x4e0]
4712ca: mov r8d, r10d
4712cd: test esi, esi
4712cf: jne 0x471080
4712d5: mov edx, dword ptr [rbp - 0x4d8]
4712db: mov dword ptr [rbp - 0x4e0], ecx
4712e1: sub edx, ecx
4712e3: sub edx, r10d
4712e6: mov r10d, edx
4712e9: jmp 0x4706e9
4712ee: nop 
4712f0: mov ecx, dword ptr [rbp - 0x530]
4712f6: test ecx, ecx
4712f8: je 0x471868
4712fe: cmp eax, 0x2f
471301: ja 0x471d38
471307: mov edx, eax
471309: add eax, 8
47130c: add rdx, qword ptr [r15 + 0x10]
471310: mov dword ptr [r15], eax
471313: mov dword ptr [rbp - 0x4f8], 0
47131d: movzx eax, byte ptr [rdx]
471320: mov dword ptr [rbp - 0x508], 0
47132a: mov qword ptr [rbp - 0x4e8], rax
471331: jmp 0x47055c
471336: or eax, 0x20
471339: mov dword ptr [r12], eax
47133d: mov rax, 0xffffffffffffffc0
471344: mov dword ptr fs:[rax], 9
47134b: mov r13d, 0xffffffff
471351: jmp 0x46fd5f
471356: nop word ptr cs:[rax + rax]
471360: cmp qword ptr [rbp - 0x4e8], 0
471368: jne 0x4718c0
47136e: cmp dword ptr [rbp - 0x500], 8
471375: jne 0x471d78
47137b: mov eax, dword ptr [rbp - 0x514]
471381: test eax, eax
471383: je 0x471d78
471389: lea r9, [r10 - 4]
47138d: mov ecx, 1
471392: mov edx, 4
471397: mov dword ptr [rbp - 0x4f0], 0x20
4713a1: mov dword ptr [r10 - 4], 0x30
4713a9: xor r10d, r10d
4713ac: mov eax, dword ptr [rbp - 0x4e0]
4713b2: test eax, eax
4713b4: jne 0x471080
4713ba: mov eax, dword ptr [rbp - 0x4d8]
4713c0: add r10d, ecx
4713c3: mov dword ptr [rbp - 0x4e0], ecx
4713c9: sub eax, r10d
4713cc: mov r10d, eax
4713cf: jmp 0x4706fc
4713d4: nop dword ptr [rax]
4713d8: mov rax, qword ptr [rbp - 0x4e8]
4713df: mov r9, r10
4713e2: nop word ptr [rax + rax]
4713e8: mov rdx, rax
4713eb: sub r9, 4
4713ef: and edx, 0xf
4713f2: mov edx, dword ptr [rcx + rdx*4]
4713f5: mov dword ptr [r9], edx
4713f8: mov rdx, rax
4713fb: shr rax, 4
4713ff: cmp rdx, 0xf
471403: ja 0x4713e8
471405: jmp 0x4705ed
47140a: nop word ptr [rax + rax]
471410: mov rax, qword ptr [rbp - 0x4e8]
471417: mov r9, r10
47141a: nop word ptr [rax + rax]
471420: mov rdx, rax
471423: sub r9, 4
471427: and edx, 7
47142a: mov edx, dword ptr [rcx + rdx*4]
47142d: mov dword ptr [r9], edx
471430: mov rdx, rax
471433: shr rax, 3
471437: cmp rdx, 7
47143b: ja 0x471420
47143d: jmp 0x4705ed
471442: nop word ptr [rax + rax]
471448: mov eax, dword ptr [rbp - 0x4d8]
47144e: mov edx, dword ptr [rbp - 0x4e0]
471454: test eax, eax
471456: setne byte ptr [rbp - 0x4d0]
47145d: movzx eax, byte ptr [rbp - 0x4d0]
471464: test edx, edx
471466: jne 0x471470
471468: test al, al
47146a: jne 0x472288
471470: test r13d, r13d
471473: js 0x472ba8
471479: mov rax, qword ptr [r12 + 0xd8]
471481: mov rdx, rax
471484: sub rdx, 0x4c1b60
47148b: cmp qword ptr [rbp - 0x4b8], rdx
471492: jbe 0x472510
471498: mov qword ptr [rbp - 0x4f0], rcx
47149f: mov rdx, rcx
4714a2: mov rsi, r9
4714a5: mov rdi, r12
4714a8: mov qword ptr [rbp - 0x500], r11
4714af: mov qword ptr [rbp - 0x4f8], r9
4714b6: call qword ptr [rax + 0x38]
4714b9: mov rcx, qword ptr [rbp - 0x4f0]
4714c0: cmp rcx, rax
4714c3: jne 0x46fdc8
4714c9: mov eax, 0x7fffffff
4714ce: mov r9, qword ptr [rbp - 0x4f8]
4714d5: mov r11, qword ptr [rbp - 0x500]
4714dc: sub eax, r13d
4714df: cdqe 
4714e1: cmp rcx, rax
4714e4: ja 0x470270
4714ea: add r13d, ebx
4714ed: mov ebx, dword ptr [rbp - 0x4e0]
4714f3: test ebx, ebx
4714f5: je 0x471504
4714f7: cmp byte ptr [rbp - 0x4d0], 0
4714fe: jne 0x472453
471504: mov r10d, dword ptr [rbp - 0x4e8]
47150b: test r10d, r10d
47150e: je 0x46ffd8
471514: mov rdi, r9
471517: mov qword ptr [rbp - 0x4d0], r11
47151e: call 0x426a00
471523: mov r11, qword ptr [rbp - 0x4d0]
47152a: jmp 0x46ffd8
47152f: nop 
471530: mov eax, dword ptr [rbp - 0x4f8]
471536: test eax, eax
471538: je 0x471958
47153e: mov rax, qword ptr [r12 + 0xa0]
471546: test rax, rax
471549: je 0x472618
47154f: mov rcx, qword ptr [rax + 0x20]
471553: cmp rcx, qword ptr [rax + 0x28]
471557: jae 0x472618
47155d: lea rsi, [rcx + 4]
471561: mov qword ptr [rax + 0x20], rsi
471565: mov dword ptr [rcx], 0x2b
47156b: jmp 0x4710bb
471570: cmp dword ptr [rbp - 0x4f0], 0x20
471577: jne 0x470771
47157d: test r10d, r10d
471580: jle 0x472ba0
471586: movsxd rdx, r10d
471589: mov esi, 0x20
47158e: mov rdi, r12
471591: mov qword ptr [rbp - 0x548], rcx
471598: mov qword ptr [rbp - 0x4d8], rdx
47159f: mov qword ptr [rbp - 0x530], r9
4715a6: mov qword ptr [rbp - 0x528], r11
4715ad: mov dword ptr [rbp - 0x520], r8d
4715b4: mov dword ptr [rbp - 0x4f0], r10d
4715bb: call 0x474150
4715c0: mov rdx, qword ptr [rbp - 0x4d8]
4715c7: cmp rdx, rax
4715ca: jne 0x46fdc8
4715d0: cmp r13d, 0x7ffffffe
4715d7: mov r10d, dword ptr [rbp - 0x4f0]
4715de: mov r8d, dword ptr [rbp - 0x520]
4715e5: mov r11, qword ptr [rbp - 0x528]
4715ec: mov r9, qword ptr [rbp - 0x530]
4715f3: mov rcx, qword ptr [rbp - 0x548]
4715fa: ja 0x472b3a
471600: mov eax, 0x7fffffff
471605: sub eax, r13d
471608: cmp eax, r10d
47160b: jb 0x470270
471611: add r13d, r10d
471614: xor r10d, r10d
471617: jmp 0x470725
47161c: nop dword ptr [rax]
471620: mov qword ptr [rbp - 0x4d8], r11
471627: mov qword ptr [rbp - 0x4d0], rax
47162e: mov qword ptr [rbp - 0x4c8], r8
471635: call 0x41b240
47163a: mov r11, qword ptr [rbp - 0x4d8]
471641: mov rax, qword ptr [rbp - 0x4d0]
471648: mov r8, qword ptr [rbp - 0x4c8]
47164f: jmp 0x470037
471654: nop dword ptr [rax]
471658: mov rdi, qword ptr [rbp - 0x4c8]
47165f: mov qword ptr [rbp - 0x4d0], r11
471666: call 0x426a00
47166b: mov r11, qword ptr [rbp - 0x4d0]
471672: jmp 0x46ffed
471677: nop word ptr [rax + rax]
471680: mov rsi, qword ptr [rbp - 0x4e8]
471687: mov r9, r10
47168a: movabs rdi, 0xcccccccccccccccd
471694: nop dword ptr [rax]
471698: mov rax, rsi
47169b: mov r8, rsi
47169e: sub r9, 4
4716a2: mul rdi
4716a5: shr rdx, 3
4716a9: lea rax, [rdx + rdx*4]
4716ad: add rax, rax
4716b0: sub r8, rax
4716b3: mov eax, dword ptr [rcx + r8*4]
4716b7: mov dword ptr [r9], eax
4716ba: mov rax, rsi
4716bd: mov rsi, rdx
4716c0: cmp rax, 9
4716c4: ja 0x471698
4716c6: cmp qword ptr [rbp - 0x510], 0
4716ce: je 0x470644
4716d4: mov eax, dword ptr [rbp - 0x520]
4716da: test eax, eax
4716dc: je 0x470644
4716e2: jmp 0x470605
4716e7: nop word ptr [rax + rax]
4716f0: movsxd rdx, r8d
4716f3: mov esi, 0x30
4716f8: mov rdi, r12
4716fb: mov qword ptr [rbp - 0x4f0], r9
471702: mov qword ptr [rbp - 0x4d8], rdx
471709: mov qword ptr [rbp - 0x4e8], r11
471710: mov dword ptr [rbp - 0x4e0], r8d
471717: call 0x474150
47171c: mov rdx, qword ptr [rbp - 0x4d8]
471723: cmp rdx, rax
471726: jne 0x46fdc8
47172c: cmp r13d, 0x7ffffffe
471733: ja 0x472b3a
471739: mov r8d, dword ptr [rbp - 0x4e0]
471740: mov eax, 0x7fffffff
471745: mov r11, qword ptr [rbp - 0x4e8]
47174c: sub eax, r13d
47174f: mov r9, qword ptr [rbp - 0x4f0]
471756: cmp eax, r8d
471759: jb 0x470270
47175f: add r13d, r8d
471762: jmp 0x471187
471767: nop word ptr [rax + rax]
471770: movsxd rdx, ebx
471773: mov esi, 0x30
471778: mov rdi, r12
47177b: mov qword ptr [rbp - 0x4f0], rcx
471782: mov qword ptr [rbp - 0x4d0], rdx
471789: mov qword ptr [rbp - 0x4e8], r9
471790: mov qword ptr [rbp - 0x4d8], r11
471797: call 0x474150
47179c: mov rdx, qword ptr [rbp - 0x4d0]
4717a3: cmp rdx, rax
4717a6: jne 0x46fdc8
4717ac: cmp r13d, 0x7ffffffe
4717b3: ja 0x472b3a
4717b9: mov eax, 0x7fffffff
4717be: mov r11, qword ptr [rbp - 0x4d8]
4717c5: mov r9, qword ptr [rbp - 0x4e8]
4717cc: sub eax, r13d
4717cf: mov rcx, qword ptr [rbp - 0x4f0]
4717d6: cmp eax, ebx
4717d8: jb 0x470270
4717de: add r13d, ebx
4717e1: jmp 0x470804
4717e6: nop word ptr cs:[rax + rax]
4717f0: mov esi, dword ptr [rbp - 0x4f8]
4717f6: test esi, esi
4717f8: je 0x471fbc
4717fe: mov rax, qword ptr [r12 + 0xa0]
471806: test rax, rax
471809: je 0x4727c0
47180f: mov rdx, qword ptr [rax + 0x20]
471813: cmp rdx, qword ptr [rax + 0x28]
471817: jae 0x4727c0
47181d: lea rsi, [rdx + 4]
471821: mov qword ptr [rax + 0x20], rsi
471825: mov dword ptr [rdx], 0x2b
47182b: jmp 0x470760
471830: xor eax, eax
471832: mov edx, 1
471837: lock cmpxchg dword ptr [rdi], edx
47183b: je 0x46faec
471841: call 0x421250
471846: jmp 0x46faec
47184b: nop dword ptr [rax + rax]
471850: mov rdx, qword ptr [r15 + 8]
471854: lea rax, [rdx + 8]
471858: mov qword ptr [r15 + 8], rax
47185c: jmp 0x470534
471861: nop dword ptr [rax]
471868: mov edx, dword ptr [rbp - 0x4e8]
47186e: test edx, edx
471870: jne 0x471cc8
471876: cmp eax, 0x2f
471879: ja 0x4723b0
47187f: mov edx, eax
471881: add eax, 8
471884: add rdx, qword ptr [r15 + 0x10]
471888: mov dword ptr [r15], eax
47188b: mov dword ptr [rbp - 0x4f8], 0
471895: mov eax, dword ptr [rdx]
471897: mov dword ptr [rbp - 0x508], 0
4718a1: mov qword ptr [rbp - 0x4e8], rax
4718a8: mov dword ptr [rbp - 0x4d0], 0
4718b2: jmp 0x47055c
4718b7: nop word ptr [rax + rax]
4718c0: mov qword ptr [rbp - 0x530], 0
4718cb: mov dword ptr [rbp - 0x4f0], 0x20
4718d5: jmp 0x47057f
4718da: nop word ptr [rax + rax]
4718e0: mov dword ptr [rbp - 0x4e8], 0
4718ea: cmp r8d, -1
4718ee: je 0x471905
4718f0: xor ebx, ebx
4718f2: lea r9, [rip + 0x3795b]
4718f9: xor ecx, ecx
4718fb: cmp r8d, 5
4718ff: jle 0x471448
471905: mov ebx, 6
47190a: mov ecx, 6
47190f: lea r9, [rip + 0x379ea]
471916: jmp 0x4701f3
47191b: nop dword ptr [rax + rax]
471920: mov r10, rax
471923: sub r10, rcx
471926: cmovs r10, qword ptr [rbp - 0x4e8]
47192e: mov r8d, r10d
471931: jmp 0x4713ac
471936: nop word ptr cs:[rax + rax]
471940: mov rdx, qword ptr [r15 + 8]
471944: lea rax, [rdx + 8]
471948: mov qword ptr [r15 + 8], rax
47194c: jmp 0x46ff7c
471951: nop dword ptr [rax]
471958: mov eax, dword ptr [rbp - 0x508]
47195e: test eax, eax
471960: je 0x4710d3
471966: mov rax, qword ptr [r12 + 0xa0]
47196e: test rax, rax
471971: je 0x47299e
471977: mov rcx, qword ptr [rax + 0x20]
47197b: cmp rcx, qword ptr [rax + 0x28]
47197f: jae 0x47299e
471985: lea rsi, [rcx + 4]
471989: mov qword ptr [rax + 0x20], rsi
47198d: mov dword ptr [rcx], 0x20
471993: jmp 0x4710bb
471998: nop dword ptr [rax + rax]
4719a0: xchg dword ptr [rdi], eax
4719a2: cmp eax, 1
4719a5: jle 0x46fd51
4719ab: xor r10d, r10d
4719ae: mov edx, 1
4719b3: mov esi, 0x81
4719b8: mov eax, 0xca
4719bd: syscall 
4719bf: jmp 0x46fd51
4719c4: nop dword ptr [rax]
4719c8: cmp r8d, -1
4719cc: jne 0x471a1a
4719ce: mov rdi, r9
4719d1: mov qword ptr [rbp - 0x4f0], r11
4719d8: mov qword ptr [rbp - 0x4d0], r9
4719df: call 0x401070
4719e4: mov r11, qword ptr [rbp - 0x4f0]
4719eb: mov dword ptr [rbp - 0x4e8], 0
4719f5: mov r9, qword ptr [rbp - 0x4d0]
4719fc: mov rcx, rax
4719ff: mov ebx, eax
471a01: jmp 0x4701f3
471a06: cmp r8d, 5
471a0a: mov eax, 5
471a0f: lea r9, [rip + 0x3782a]
471a16: cmovl r8d, eax
471a1a: mov rdi, r9
471a1d: movsxd rsi, r8d
471a20: mov qword ptr [rbp - 0x4f0], r11
471a27: mov qword ptr [rbp - 0x4d0], r9
471a2e: call 0x401120
471a33: mov r9, qword ptr [rbp - 0x4d0]
471a3a: mov dword ptr [rbp - 0x4e8], 0
471a44: mov r11, qword ptr [rbp - 0x4f0]
471a4b: mov rcx, rax
471a4e: mov ebx, eax
471a50: jmp 0x4701f3
471a55: nop dword ptr [rax]
471a58: mov edx, dword ptr [rbp - 0x530]
471a5e: test edx, edx
471a60: je 0x472093
471a66: cmp eax, 0x2f
471a69: ja 0x4725d4
471a6f: mov edx, eax
471a71: add eax, 8
471a74: add rdx, qword ptr [r15 + 0x10]
471a78: mov dword ptr [r15], eax
471a7b: mov rax, qword ptr [rdx]
471a7e: mov byte ptr [rax], r13b
471a81: jmp 0x46ffd8
471a86: nop word ptr cs:[rax + rax]
471a90: mov rdx, qword ptr [r15 + 8]
471a94: lea rax, [rdx + 8]
471a98: mov qword ptr [r15 + 8], rax
471a9c: jmp 0x470eac
471aa1: nop dword ptr [rax]
471aa8: mov r9d, dword ptr [rbp - 0x530]
471aaf: test r9d, r9d
471ab2: je 0x4720e3
471ab8: cmp eax, 0x2f
471abb: ja 0x4725c3
471ac1: mov edx, eax
471ac3: add eax, 8
471ac6: add rdx, qword ptr [r15 + 0x10]
471aca: mov dword ptr [r15], eax
471acd: movsx rax, byte ptr [rdx]
471ad1: jmp 0x470da5
471ad6: nop word ptr cs:[rax + rax]
471ae0: mov r9d, dword ptr [rbp - 0x53c]
471ae7: test r9d, r9d
471aea: je 0x471d49
471af0: mov edx, dword ptr [r15 + 4]
471af4: or byte ptr [rbp - 0x473], 0x10
471afb: cmp edx, 0xaf
471b01: ja 0x472552
471b07: mov eax, edx
471b09: add edx, 0x10
471b0c: add rax, qword ptr [r15 + 0x10]
471b10: mov dword ptr [r15 + 4], edx
471b14: movdqa xmm2, xmmword ptr [rax]
471b18: movaps xmmword ptr [rbp - 0x490], xmm2
471b1f: jmp 0x4704c2
471b24: nop dword ptr [rax]
471b28: mov rdx, qword ptr [r15 + 8]
471b2c: lea rax, [rdx + 8]
471b30: mov qword ptr [r15 + 8], rax
471b34: jmp 0x4700ac
471b39: nop dword ptr [rax]
471b40: mov r8d, dword ptr [rbp - 0x53c]
471b47: test r8d, r8d
471b4a: je 0x471d0a
471b50: mov edx, dword ptr [r15 + 4]
471b54: or byte ptr [rbp - 0x473], 0x10
471b5b: cmp edx, 0xaf
471b61: ja 0x472589
471b67: mov eax, edx
471b69: add edx, 0x10
471b6c: add rax, qword ptr [r15 + 0x10]
471b70: mov dword ptr [r15 + 4], edx
471b74: movdqa xmm3, xmmword ptr [rax]
471b78: movaps xmmword ptr [rbp - 0x490], xmm3
471b7f: jmp 0x470376
471b84: nop dword ptr [rax]
471b88: mov ecx, eax
471b8a: add eax, 8
471b8d: add rcx, qword ptr [r15 + 0x10]
471b91: mov dword ptr [r15], eax
471b94: jmp 0x470c0f
471b99: nop dword ptr [rax]
471ba0: mov r8d, dword ptr [rbp - 0x4d8]
471ba7: mov dword ptr [rbp - 0x4d8], esi
471bad: cmp esi, 0x1fffffde
471bb3: ja 0x470270
471bb9: movsxd rax, dword ptr [rbp - 0x4d8]
471bc0: cmp eax, 0xd9
471bc5: jle 0x471c7f
471bcb: lea r10, [rax*4 + 0x80]
471bd3: mov dword ptr [rbp - 0x554], r9d
471bda: mov rdi, r10
471bdd: mov qword ptr [rbp - 0x550], r11
471be4: mov dword ptr [rbp - 0x548], r8d
471beb: mov qword ptr [rbp - 0x500], r10
471bf2: call 0x421200
471bf7: mov r10, qword ptr [rbp - 0x500]
471bfe: mov r8d, dword ptr [rbp - 0x548]
471c05: lea rdx, [rip + 0x37674]
471c0c: test eax, eax
471c0e: mov r11, qword ptr [rbp - 0x550]
471c15: mov r9d, dword ptr [rbp - 0x554]
471c1c: jne 0x471c2b
471c1e: cmp r10, 0x1000
471c25: ja 0x472b59
471c2b: lea rax, [r10 + 0x17]
471c2f: mov rcx, rsp
471c32: mov rsi, rax
471c35: and rax, 0xfffffffffffff000
471c3b: sub rcx, rax
471c3e: and rsi, 0xfffffffffffffff0
471c42: mov rax, rcx
471c45: cmp rsp, rax
471c48: je 0x471c5f
471c4a: sub rsp, 0x1000
471c51: or qword ptr [rsp + 0xff8], 0
471c5a: cmp rsp, rax
471c5d: jne 0x471c4a
471c5f: and esi, 0xfff
471c65: sub rsp, rsi
471c68: test rsi, rsi
471c6b: je 0x471c73
471c6d: or qword ptr [rsp + rsi - 8], 0
471c73: lea rax, [rsp + 0xf]
471c78: and rax, 0xfffffffffffffff0
471c7c: add r10, rax
471c7f: cmp ebx, 0x24
471c82: je 0x46ff10
471c88: lea eax, [rbx - 0x20]
471c8b: cmp eax, 0x5a
471c8e: ja 0x46fda8
471c94: jmp 0x470d17
471c99: nop dword ptr [rax]
471ca0: mov dword ptr [rbp - 0x4d0], 1
471caa: neg rax
471cad: mov qword ptr [rbp - 0x4e8], rax
471cb4: mov dword ptr [rbp - 0x500], 0xa
471cbe: jmp 0x47055c
471cc3: nop dword ptr [rax + rax]
471cc8: cmp eax, 0x2f
471ccb: ja 0x472372
471cd1: mov edx, eax
471cd3: add eax, 8
471cd6: add rdx, qword ptr [r15 + 0x10]
471cda: mov dword ptr [r15], eax
471cdd: mov dword ptr [rbp - 0x4f8], 0
471ce7: movzx eax, word ptr [rdx]
471cea: mov dword ptr [rbp - 0x508], 0
471cf4: mov qword ptr [rbp - 0x4e8], rax
471cfb: mov dword ptr [rbp - 0x4d0], 0
471d05: jmp 0x47055c
471d0a: mov rax, qword ptr [r15 + 8]
471d0e: and byte ptr [rbp - 0x473], 0xef
471d15: add rax, 0xf
471d19: and rax, 0xfffffffffffffff0
471d1d: lea rdx, [rax + 0x10]
471d21: mov qword ptr [r15 + 8], rdx
471d25: fld xword ptr [rax]
471d27: fstp xword ptr [rbp - 0x490]
471d2d: jmp 0x470376
471d32: nop word ptr [rax + rax]
471d38: mov rdx, qword ptr [r15 + 8]
471d3c: lea rax, [rdx + 8]
471d40: mov qword ptr [r15 + 8], rax
471d44: jmp 0x471313
471d49: mov rax, qword ptr [r15 + 8]
471d4d: and byte ptr [rbp - 0x473], 0xef
471d54: add rax, 0xf
471d58: and rax, 0xfffffffffffffff0
471d5c: lea rdx, [rax + 0x10]
471d60: mov qword ptr [r15 + 8], rdx
471d64: fld xword ptr [rax]
471d66: fstp xword ptr [rbp - 0x490]
471d6c: jmp 0x4704c2
471d71: nop dword ptr [rax]
471d78: mov r9, r10
471d7b: xor ecx, ecx
471d7d: xor r10d, r10d
471d80: xor edx, edx
471d82: mov dword ptr [rbp - 0x4f0], 0x20
471d8c: jmp 0x4713ac
471d91: nop dword ptr [rax]
471d98: mov eax, dword ptr [r11 + 8]
471d9c: lea rbx, [r11 + 8]
471da0: sub eax, 0x30
471da3: cmp eax, 9
471da6: jbe 0x472645
471dac: mov eax, dword ptr [r15]
471daf: cmp eax, 0x2f
471db2: jbe 0x4724bc
471db8: mov rcx, qword ptr [r15 + 8]
471dbc: lea rax, [rcx + 8]
471dc0: mov qword ptr [r15 + 8], rax
471dc4: mov ecx, dword ptr [rcx]
471dc6: mov eax, 0xffffffff
471dcb: mov r11, rbx
471dce: test ecx, ecx
471dd0: cmovns eax, ecx
471dd3: mov r8d, eax
471dd6: mov ecx, dword ptr [rbp - 0x4d8]
471ddc: mov eax, 0xda
471de1: cmp ecx, 0xda
471de7: cmovge eax, ecx
471dea: cmp r8d, eax
471ded: jle 0x470b27
471df3: cmp qword ptr [rbp - 0x4c8], 0
471dfb: jne 0x4729d8
471e01: cmp r8d, 0x1fffffde
471e08: jg 0x46fea0
471e0e: movsxd rax, r8d
471e11: mov dword ptr [rbp - 0x548], r9d
471e18: lea rbx, [rax*4 + 0x80]
471e20: mov qword ptr [rbp - 0x500], r11
471e27: mov rdi, rbx
471e2a: mov dword ptr [rbp - 0x4c8], r8d
471e31: call 0x421200
471e36: cmp rbx, 0x1000
471e3d: mov r8d, dword ptr [rbp - 0x4c8]
471e44: mov r11, qword ptr [rbp - 0x500]
471e4b: mov r9d, dword ptr [rbp - 0x548]
471e52: lea rdx, [rip + 0x37427]
471e59: jbe 0x471e63
471e5b: test eax, eax
471e5d: je 0x472ae1
471e63: lea rax, [rbx + 0x17]
471e67: mov rsi, rsp
471e6a: mov rcx, rax
471e6d: and rax, 0xfffffffffffff000
471e73: sub rsi, rax
471e76: and rcx, 0xfffffffffffffff0
471e7a: mov rax, rsi
471e7d: cmp rsp, rax
471e80: je 0x471e97
471e82: sub rsp, 0x1000
471e89: or qword ptr [rsp + 0xff8], 0
471e92: cmp rsp, rax
471e95: jne 0x471e82
471e97: and ecx, 0xfff
471e9d: sub rsp, rcx
471ea0: test rcx, rcx
471ea3: je 0x471eab
471ea5: or qword ptr [rsp + rcx - 8], 0
471eab: mov qword ptr [rbp - 0x4c8], 0
471eb6: lea rax, [rsp + 0xf]
471ebb: and rax, 0xfffffffffffffff0
471ebf: lea r10, [rax + rbx]
471ec3: jmp 0x470b27
471ec8: nop dword ptr [rax + rax]
471ed0: mov ebx, dword ptr [r11 + 8]
471ed4: lea rcx, [r11 + 8]
471ed8: lea esi, [rbx - 0x30]
471edb: cmp esi, 9
471ede: ja 0x46fef8
471ee4: mov dword ptr [rbp - 0x4d8], r8d
471eeb: mov qword ptr [rbp - 0x548], r11
471ef2: jmp 0x471f1d
471ef4: nop dword ptr [rax]
471ef8: lea eax, [rax + rax*4]
471efb: mov r11d, 0x7fffffff
471f01: add eax, eax
471f03: sub r11d, esi
471f06: cmp eax, r11d
471f09: jg 0x471f33
471f0b: add eax, esi
471f0d: cmp r8d, 9
471f11: ja 0x46fee1
471f17: mov esi, r8d
471f1a: mov rcx, rdi
471f1d: mov ebx, dword ptr [rcx + 4]
471f20: lea rdi, [rcx + 4]
471f24: lea r8d, [rbx - 0x30]
471f28: test eax, eax
471f2a: js 0x471f0d
471f2c: cmp eax, 0xccccccc
471f31: jle 0x471ef8
471f33: cmp r8d, 9
471f37: ja 0x470270
471f3d: mov esi, dword ptr [rcx + 8]
471f40: lea rdi, [rcx + 8]
471f44: sub esi, 0x30
471f47: cmp esi, 9
471f4a: ja 0x470270
471f50: mov eax, 0xffffffff
471f55: jmp 0x471f1a
471f57: nop word ptr [rax + rax]
471f60: mov rdx, qword ptr [r15 + 8]
471f64: lea rax, [rdx + 8]
471f68: mov qword ptr [r15 + 8], rax
471f6c: jmp 0x470999
471f71: mov rax, 0xffffffffffffffa8
471f78: mov rax, qword ptr fs:[rax]
471f7c: mov rax, qword ptr [rax]
471f7f: mov esi, dword ptr [rax + 0x60]
471f82: mov rax, qword ptr [rax + 0x50]
471f86: mov qword ptr [rbp - 0x510], rax
471f8d: movzx eax, byte ptr [rax]
471f90: mov dword ptr [rbp - 0x518], esi
471f96: test al, al
471f98: sete cl
471f9b: cmp al, 0x7f
471f9d: sete al
471fa0: or cl, al
471fa2: jne 0x471fac
471fa4: test esi, esi
471fa6: jne 0x471012
471fac: mov qword ptr [rbp - 0x510], 0
471fb7: jmp 0x471012
471fbc: mov edx, dword ptr [rbp - 0x508]
471fc2: test edx, edx
471fc4: je 0x470771
471fca: mov rax, qword ptr [r12 + 0xa0]
471fd2: test rax, rax
471fd5: je 0x472971
471fdb: mov rdx, qword ptr [rax + 0x20]
471fdf: cmp rdx, qword ptr [rax + 0x28]
471fe3: jae 0x472971
471fe9: lea rsi, [rdx + 4]
471fed: mov qword ptr [rax + 0x20], rsi
471ff1: mov dword ptr [rdx], 0x20
471ff7: jmp 0x470760
471ffc: movsxd rdx, ebx
471fff: mov esi, 0x20
472004: mov rdi, r12
472007: mov byte ptr [rbp - 0x4e8], cl
47200d: mov qword ptr [rbp - 0x4d0], rdx
472014: mov qword ptr [rbp - 0x4d8], r11
47201b: call 0x474150
472020: mov rdx, qword ptr [rbp - 0x4d0]
472027: cmp rdx, rax
47202a: jne 0x46fdc8
472030: cmp r13d, 0x7ffffffe
472037: ja 0x472bd8
47203d: mov eax, 0x7fffffff
472042: mov r11, qword ptr [rbp - 0x4d8]
472049: movzx ecx, byte ptr [rbp - 0x4e8]
472050: sub eax, r13d
472053: cmp eax, ebx
472055: jb 0x470270
47205b: add r13d, ebx
47205e: jmp 0x46ff64
472063: mov rdi, r9
472066: call 0x401180
47206b: mov r11, qword ptr [rbp - 0x4d0]
472072: mov rdx, rax
472075: jmp 0x4700fc
47207a: mov rax, 0xffffffffffffffc0
472081: mov r13d, 0xffffffff
472087: mov dword ptr fs:[rax], 0x16
47208e: jmp 0x46fd5f
472093: mov ebx, dword ptr [rbp - 0x4e8]
472099: test ebx, ebx
47209b: jne 0x4725a2
4720a1: cmp eax, 0x2f
4720a4: ja 0x47294f
4720aa: mov edx, eax
4720ac: add eax, 8
4720af: add rdx, qword ptr [r15 + 0x10]
4720b3: mov dword ptr [r15], eax
4720b6: mov rax, qword ptr [rdx]
4720b9: mov dword ptr [rax], r13d
4720bc: jmp 0x46ffd8
4720c1: mov rdx, qword ptr [r15 + 8]
4720c5: lea rax, [rdx + 8]
4720c9: mov qword ptr [r15 + 8], rax
4720cd: jmp 0x470e7a
4720d2: mov rdx, qword ptr [r15 + 8]
4720d6: lea rax, [rdx + 8]
4720da: mov qword ptr [r15 + 8], rax
4720de: jmp 0x470da2
4720e3: mov edi, dword ptr [rbp - 0x4e8]
4720e9: test edi, edi
4720eb: jne 0x47256b
4720f1: cmp eax, 0x2f
4720f4: ja 0x47293e
4720fa: mov edx, eax
4720fc: add eax, 8
4720ff: add rdx, qword ptr [r15 + 0x10]
472103: mov dword ptr [r15], eax
472106: movsxd rax, dword ptr [rdx]
472109: jmp 0x470da5
47210e: mov rdi, r12
472111: mov byte ptr [rbp - 0x4d8], cl
472117: mov qword ptr [rbp - 0x4d0], r11
47211e: call 0x474890
472123: mov r11, qword ptr [rbp - 0x4d0]
47212a: movzx ecx, byte ptr [rbp - 0x4d8]
472131: cmp eax, -1
472134: jne 0x46ffb0
47213a: jmp 0x46fdc8
47213f: nop 
472140: mov qword ptr [rbp - 0x508], r9
472147: mov esi, 0x2d
47214c: mov qword ptr [rbp - 0x4f8], r11
472153: mov qword ptr [rbp - 0x4f0], r10
47215a: mov qword ptr [rbp - 0x4e0], rdx
472161: mov dword ptr [rbp - 0x4d0], r8d
472168: mov rdi, r12
47216b: call 0x474890
472170: mov r8d, dword ptr [rbp - 0x4d0]
472177: mov rdx, qword ptr [rbp - 0x4e0]
47217e: cmp eax, -1
472181: mov r10, qword ptr [rbp - 0x4f0]
472188: mov r11, qword ptr [rbp - 0x4f8]
47218f: mov r9, qword ptr [rbp - 0x508]
472196: jne 0x4710bb
47219c: jmp 0x46fdc8
4721a1: nop dword ptr [rax]
4721a8: mov ecx, dword ptr [rcx + 4]
4721ab: mov r8d, eax
4721ae: lea rax, [r11 + 8]
4721b2: sub ecx, 0x30
4721b5: cmp ecx, 9
4721b8: jbe 0x4721e4
4721ba: jmp 0x472a13
4721bf: nop 
4721c0: lea r8d, [r8 + r8*4]
4721c4: mov edi, 0x7fffffff
4721c9: add r8d, r8d
4721cc: sub edi, ecx
4721ce: cmp r8d, edi
4721d1: jg 0x4721fc
4721d3: add r8d, ecx
4721d6: cmp esi, 9
4721d9: ja 0x4723d2
4721df: mov ecx, esi
4721e1: mov rax, r11
4721e4: mov esi, dword ptr [rax + 4]
4721e7: lea r11, [rax + 4]
4721eb: sub esi, 0x30
4721ee: test r8d, r8d
4721f1: js 0x4721d6
4721f3: cmp r8d, 0xccccccc
4721fa: jle 0x4721c0
4721fc: cmp esi, 9
4721ff: ja 0x470270
472205: mov ecx, dword ptr [rax + 8]
472208: lea r11, [rax + 8]
47220c: sub ecx, 0x30
47220f: cmp ecx, 9
472212: ja 0x470270
472218: mov r8d, 0xffffffff
47221e: jmp 0x4721e1
472220: mov qword ptr [rbp - 0x508], rcx
472227: mov esi, 0x2d
47222c: mov qword ptr [rbp - 0x4f8], r9
472233: mov dword ptr [rbp - 0x4f0], r10d
47223a: mov qword ptr [rbp - 0x4d8], r11
472241: mov dword ptr [rbp - 0x4d0], r8d
472248: mov rdi, r12
47224b: call 0x474890
472250: mov r8d, dword ptr [rbp - 0x4d0]
472257: mov r11, qword ptr [rbp - 0x4d8]
47225e: cmp eax, -1
472261: mov r10d, dword ptr [rbp - 0x4f0]
472268: mov r9, qword ptr [rbp - 0x4f8]
47226f: mov rcx, qword ptr [rbp - 0x508]
472276: jne 0x470760
47227c: jmp 0x46fdc8
472281: nop dword ptr [rax]
472288: movsxd rdx, dword ptr [rbp - 0x4d8]
47228f: mov esi, 0x20
472294: mov rdi, r12
472297: mov qword ptr [rbp - 0x508], r9
47229e: mov qword ptr [rbp - 0x500], r11
4722a5: mov qword ptr [rbp - 0x4f0], rdx
4722ac: mov qword ptr [rbp - 0x4f8], rcx
4722b3: call 0x474150
4722b8: mov rdx, qword ptr [rbp - 0x4f0]
4722bf: cmp rdx, rax
4722c2: jne 0x46fdc8
4722c8: cmp r13d, 0x7ffffffe
4722cf: ja 0x472bd8
4722d5: mov eax, 0x7fffffff
4722da: mov rcx, qword ptr [rbp - 0x4f8]
4722e1: mov r11, qword ptr [rbp - 0x500]
4722e8: sub eax, r13d
4722eb: cmp eax, dword ptr [rbp - 0x4d8]
4722f1: mov r9, qword ptr [rbp - 0x508]
4722f8: jb 0x470270
4722fe: add r13d, dword ptr [rbp - 0x4d8]
472305: jmp 0x471470
47230a: mov qword ptr [rbp - 0x4e8], r9
472311: mov qword ptr [rbp - 0x4e0], rax
472318: mov qword ptr [rbp - 0x4d8], r11
47231f: call 0x41b240
472324: mov r9, qword ptr [rbp - 0x4e8]
47232b: mov rax, qword ptr [rbp - 0x4e0]
472332: mov r11, qword ptr [rbp - 0x4d8]
472339: jmp 0x4711af
47233e: mov qword ptr [rbp - 0x4e8], rcx
472345: mov qword ptr [rbp - 0x4d8], r9
47234c: mov qword ptr [rbp - 0x4d0], r11
472353: call 0x41b240
472358: mov rcx, qword ptr [rbp - 0x4e8]
47235f: mov r9, qword ptr [rbp - 0x4d8]
472366: mov r11, qword ptr [rbp - 0x4d0]
47236d: jmp 0x47082c
472372: mov rdx, qword ptr [r15 + 8]
472376: lea rax, [rdx + 8]
47237a: mov qword ptr [r15 + 8], rax
47237e: jmp 0x471cdd
472383: mov esi, 0x25
472388: mov rdi, r12
47238b: mov qword ptr [rbp - 0x4d0], r11
472392: call 0x474890
472397: mov r11, qword ptr [rbp - 0x4d0]
47239e: cmp eax, -1
4723a1: jne 0x470e01
4723a7: jmp 0x46fdc8
4723ac: nop dword ptr [rax]
4723b0: mov rdx, qword ptr [r15 + 8]
4723b4: lea rax, [rdx + 8]
4723b8: mov qword ptr [r15 + 8], rax
4723bc: jmp 0x47188b
4723c1: mov rdx, qword ptr [r15 + 8]
4723c5: lea rax, [rdx + 8]
4723c9: mov qword ptr [r15 + 8], rax
4723cd: jmp 0x47036a
4723d2: cmp r8d, -1
4723d6: jne 0x471dd6
4723dc: jmp 0x470270
4723e1: nop dword ptr [rax]
4723e8: mov rdx, qword ptr [r15 + 8]
4723ec: lea rax, [rdx + 8]
4723f0: mov qword ptr [r15 + 8], rax
4723f4: jmp 0x4704b6
4723f9: movsxd rdx, ebx
4723fc: mov esi, 0x20
472401: mov rdi, r12
472404: mov qword ptr [rbp - 0x4e8], r11
47240b: mov qword ptr [rbp - 0x4d8], rdx
472412: call 0x474150
472417: mov rdx, qword ptr [rbp - 0x4d8]
47241e: cmp rdx, rax
472421: jne 0x46fdc8
472427: cmp r13d, 0x7ffffffe
47242e: mov r11, qword ptr [rbp - 0x4e8]
472435: ja 0x472bd8
47243b: mov eax, 0x7fffffff
472440: sub eax, r13d
472443: cmp eax, ebx
472445: jb 0x470270
47244b: add r13d, ebx
47244e: jmp 0x470981
472453: movsxd rbx, dword ptr [rbp - 0x4d8]
47245a: mov esi, 0x20
47245f: mov rdi, r12
472462: mov qword ptr [rbp - 0x4e0], r9
472469: mov qword ptr [rbp - 0x4d0], r11
472470: mov rdx, rbx
472473: call 0x474150
472478: cmp rbx, rax
47247b: jne 0x46fdc8
472481: cmp r13d, 0x7ffffffe
472488: ja 0x472bd8
47248e: mov eax, 0x7fffffff
472493: mov r11, qword ptr [rbp - 0x4d0]
47249a: mov r9, qword ptr [rbp - 0x4e0]
4724a1: sub eax, r13d
4724a4: cmp eax, dword ptr [rbp - 0x4d8]
4724aa: jb 0x470270
4724b0: add r13d, dword ptr [rbp - 0x4d8]
4724b7: jmp 0x471504
4724bc: mov ecx, eax
4724be: add eax, 8
4724c1: add rcx, qword ptr [r15 + 0x10]
4724c5: mov dword ptr [r15], eax
4724c8: jmp 0x471dc4
4724cd: mov rdi, r14
4724d0: mov qword ptr [rbp - 0x4d8], r11
4724d7: call 0x401070
4724dc: mov rdi, r14
4724df: lea rsi, [rax*4 + 4]
4724e7: call 0x454590
4724ec: mov r11, qword ptr [rbp - 0x4d8]
4724f3: test eax, eax
4724f5: mov dword ptr [rbp - 0x534], eax
4724fb: jns 0x470e54
472501: lea rdi, [rip + 0x234b8]
472508: call 0x41b220
47250d: nop dword ptr [rax]
472510: mov qword ptr [rbp - 0x508], rax
472517: mov qword ptr [rbp - 0x500], r9
47251e: mov qword ptr [rbp - 0x4f8], r11
472525: mov qword ptr [rbp - 0x4f0], rcx
47252c: call 0x41b240
472531: mov rax, qword ptr [rbp - 0x508]
472538: mov r9, qword ptr [rbp - 0x500]
47253f: mov r11, qword ptr [rbp - 0x4f8]
472546: mov rcx, qword ptr [rbp - 0x4f0]
47254d: jmp 0x471498
472552: mov rax, qword ptr [r15 + 8]
472556: add rax, 0xf
47255a: and rax, 0xfffffffffffffff0
47255e: lea rdx, [rax + 0x10]
472562: mov qword ptr [r15 + 8], rdx
472566: jmp 0x471b14
47256b: cmp eax, 0x2f
47256e: ja 0x472960
472574: mov edx, eax
472576: add eax, 8
472579: add rdx, qword ptr [r15 + 0x10]
47257d: mov dword ptr [r15], eax
472580: movsx rax, word ptr [rdx]
472584: jmp 0x470da5
472589: mov rax, qword ptr [r15 + 8]
47258d: add rax, 0xf
472591: and rax, 0xfffffffffffffff0
472595: lea rdx, [rax + 0x10]
472599: mov qword ptr [r15 + 8], rdx
47259d: jmp 0x471b74
4725a2: cmp eax, 0x2f
4725a5: ja 0x47292d
4725ab: mov edx, eax
4725ad: add eax, 8
4725b0: add rdx, qword ptr [r15 + 0x10]
4725b4: mov dword ptr [r15], eax
4725b7: mov rax, qword ptr [rdx]
4725ba: mov word ptr [rax], r13w
4725be: jmp 0x46ffd8
4725c3: mov rdx, qword ptr [r15 + 8]
4725c7: lea rax, [rdx + 8]
4725cb: mov qword ptr [r15 + 8], rax
4725cf: jmp 0x471acd
4725d4: mov rdx, qword ptr [r15 + 8]
4725d8: lea rax, [rdx + 8]
4725dc: mov qword ptr [r15 + 8], rax
4725e0: jmp 0x471a7b
4725e5: mov rdi, r12
4725e8: mov qword ptr [rbp - 0x4d8], r11
4725ef: call 0x474890
4725f4: mov r11, qword ptr [rbp - 0x4d8]
4725fb: cmp eax, -1
4725fe: jne 0x4709e3
472604: jmp 0x46fdc8
472609: nop dword ptr [rax]
472610: mov r11, rax
472613: jmp 0x471bad
472618: mov qword ptr [rbp - 0x508], r9
47261f: mov esi, 0x2b
472624: mov qword ptr [rbp - 0x4f8], r11
47262b: mov qword ptr [rbp - 0x4f0], r10
472632: mov qword ptr [rbp - 0x4e0], rdx
472639: mov dword ptr [rbp - 0x4d0], r8d
472640: jmp 0x472168
472645: mov r8d, dword ptr [rbx + 4]
472649: lea rcx, [r11 + 0xc]
47264d: lea esi, [r8 - 0x30]
472651: cmp esi, 9
472654: ja 0x4726c8
472656: mov qword ptr [rbp - 0x500], rbx
47265d: jmp 0x47267d
47265f: lea eax, [rax + rax*4]
472662: mov ebx, 0x7fffffff
472667: add eax, eax
472669: sub ebx, esi
47266b: cmp eax, ebx
47266d: jg 0x472694
47266f: add eax, esi
472671: cmp r11d, 9
472675: ja 0x4726b8
472677: mov esi, r11d
47267a: mov rcx, rdi
47267d: mov r8d, dword ptr [rcx + 4]
472681: lea rdi, [rcx + 4]
472685: lea r11d, [r8 - 0x30]
472689: test eax, eax
47268b: js 0x472671
47268d: cmp eax, 0xccccccc
472692: jle 0x47265f
472694: cmp r11d, 9
472698: ja 0x470270
47269e: mov esi, dword ptr [rcx + 8]
4726a1: lea rdi, [rcx + 8]
4726a5: sub esi, 0x30
4726a8: cmp esi, 9
4726ab: ja 0x470270
4726b1: mov eax, 0xffffffff
4726b6: jmp 0x47267a
4726b8: mov rbx, qword ptr [rbp - 0x500]
4726bf: cmp eax, -1
4726c2: je 0x470270
4726c8: test eax, eax
4726ca: je 0x471dac
4726d0: cmp r8d, 0x24
4726d4: jne 0x471dac
4726da: jmp 0x46ff10
4726df: nop 
4726e0: mov esi, 0x30
4726e5: mov rdi, r12
4726e8: mov qword ptr [rbp - 0x4f8], r9
4726ef: mov qword ptr [rbp - 0x4f0], r11
4726f6: mov qword ptr [rbp - 0x4e8], r10
4726fd: mov qword ptr [rbp - 0x4e0], rdx
472704: mov dword ptr [rbp - 0x4d0], r8d
47270b: call 0x474890
472710: mov r8d, dword ptr [rbp - 0x4d0]
472717: mov rdx, qword ptr [rbp - 0x4e0]
47271e: cmp eax, -1
472721: mov r10, qword ptr [rbp - 0x4e8]
472728: mov r11, qword ptr [rbp - 0x4f0]
47272f: mov r9, qword ptr [rbp - 0x4f8]
472736: je 0x46fdc8
47273c: cmp r13d, 0x7fffffff
472743: je 0x46fdc8
472749: mov rax, qword ptr [r12 + 0xa0]
472751: test rax, rax
472754: jne 0x4729cb
47275a: mov esi, ebx
47275c: mov rdi, r12
47275f: mov qword ptr [rbp - 0x4f8], r9
472766: mov qword ptr [rbp - 0x4f0], r11
47276d: mov qword ptr [rbp - 0x4e8], r10
472774: mov qword ptr [rbp - 0x4e0], rdx
47277b: mov dword ptr [rbp - 0x4d0], r8d
472782: call 0x474890
472787: mov r8d, dword ptr [rbp - 0x4d0]
47278e: mov rdx, qword ptr [rbp - 0x4e0]
472795: cmp eax, -1
472798: mov r10, qword ptr [rbp - 0x4e8]
47279f: mov r11, qword ptr [rbp - 0x4f0]
4727a6: mov r9, qword ptr [rbp - 0x4f8]
4727ad: jne 0x47114d
4727b3: jmp 0x46fdc8
4727b8: nop dword ptr [rax + rax]
4727c0: mov qword ptr [rbp - 0x508], rcx
4727c7: mov esi, 0x2b
4727cc: mov qword ptr [rbp - 0x4f8], r9
4727d3: mov dword ptr [rbp - 0x4f0], r10d
4727da: mov qword ptr [rbp - 0x4d8], r11
4727e1: mov dword ptr [rbp - 0x4d0], r8d
4727e8: jmp 0x472248
4727ed: mov esi, ebx
4727ef: mov rdi, r12
4727f2: mov qword ptr [rbp - 0x4f8], rcx
4727f9: mov qword ptr [rbp - 0x4f0], r9
472800: mov dword ptr [rbp - 0x4e8], r10d
472807: mov qword ptr [rbp - 0x4d8], r11
47280e: mov dword ptr [rbp - 0x4d0], r8d
472815: call 0x474890
47281a: mov r8d, dword ptr [rbp - 0x4d0]
472821: mov r11, qword ptr [rbp - 0x4d8]
472828: cmp eax, -1
47282b: mov r10d, dword ptr [rbp - 0x4e8]
472832: mov r9, qword ptr [rbp - 0x4f0]
472839: mov rcx, qword ptr [rbp - 0x4f8]
472840: jne 0x4707e7
472846: jmp 0x46fdc8
47284b: nop dword ptr [rax + rax]
472850: mov esi, 0x30
472855: mov rdi, r12
472858: mov qword ptr [rbp - 0x4f8], rcx
47285f: mov qword ptr [rbp - 0x4f0], r9
472866: mov dword ptr [rbp - 0x4e8], r10d
47286d: mov qword ptr [rbp - 0x4d8], r11
472874: mov dword ptr [rbp - 0x4d0], r8d
47287b: call 0x474890
472880: mov r8d, dword ptr [rbp - 0x4d0]
472887: mov r11, qword ptr [rbp - 0x4d8]
47288e: cmp eax, -1
472891: mov r10d, dword ptr [rbp - 0x4e8]
472898: mov r9, qword ptr [rbp - 0x4f0]
47289f: mov rcx, qword ptr [rbp - 0x4f8]
4728a6: je 0x46fdc8
4728ac: cmp r13d, 0x7fffffff
4728b3: je 0x46fdc8
4728b9: mov rax, qword ptr [r12 + 0xa0]
4728c1: test rax, rax
4728c4: je 0x4727ed
4728ca: mov rdx, qword ptr [rax + 0x20]
4728ce: mov rdi, qword ptr [rax + 0x28]
4728d2: jmp 0x4707cb
4728d7: xor r9d, r9d
4728da: xor edx, edx
4728dc: jmp 0x4702af
4728e1: xor r9d, r9d
4728e4: xor edx, edx
4728e6: jmp 0x4703ef
4728eb: mov qword ptr [rbp - 0x4e8], r8
4728f2: mov qword ptr [rbp - 0x4e0], r9
4728f9: mov qword ptr [rbp - 0x4d8], r11
472900: mov qword ptr [rbp - 0x4d0], rcx
472907: call 0x41b240
47290c: mov r8, qword ptr [rbp - 0x4e8]
472913: mov r9, qword ptr [rbp - 0x4e0]
47291a: mov r11, qword ptr [rbp - 0x4d8]
472921: mov rcx, qword ptr [rbp - 0x4d0]
472928: jmp 0x470227
47292d: mov rdx, qword ptr [r15 + 8]
472931: lea rax, [rdx + 8]
472935: mov qword ptr [r15 + 8], rax
472939: jmp 0x4725b7
47293e: mov rdx, qword ptr [r15 + 8]
472942: lea rax, [rdx + 8]
472946: mov qword ptr [r15 + 8], rax
47294a: jmp 0x472106
47294f: mov rdx, qword ptr [r15 + 8]
472953: lea rax, [rdx + 8]
472957: mov qword ptr [r15 + 8], rax
47295b: jmp 0x4720b6
472960: mov rdx, qword ptr [r15 + 8]
472964: lea rax, [rdx + 8]
472968: mov qword ptr [r15 + 8], rax
47296c: jmp 0x472580
472971: mov qword ptr [rbp - 0x508], rcx
472978: mov esi, 0x20
47297d: mov qword ptr [rbp - 0x4f8], r9
472984: mov dword ptr [rbp - 0x4f0], r10d
47298b: mov qword ptr [rbp - 0x4d8], r11
472992: mov dword ptr [rbp - 0x4d0], r8d
472999: jmp 0x472248
47299e: mov qword ptr [rbp - 0x508], r9
4729a5: mov esi, 0x20
4729aa: mov qword ptr [rbp - 0x4f8], r11
4729b1: mov qword ptr [rbp - 0x4f0], r10
4729b8: mov qword ptr [rbp - 0x4e0], rdx
4729bf: mov dword ptr [rbp - 0x4d0], r8d
4729c6: jmp 0x472168
4729cb: mov rcx, qword ptr [rax + 0x20]
4729cf: mov rdi, qword ptr [rax + 0x28]
4729d3: jmp 0x471131
4729d8: mov rdi, qword ptr [rbp - 0x4c8]
4729df: mov dword ptr [rbp - 0x550], r9d
4729e6: mov qword ptr [rbp - 0x548], r11
4729ed: mov dword ptr [rbp - 0x500], r8d
4729f4: call 0x426a00
4729f9: mov r9d, dword ptr [rbp - 0x550]
472a00: mov r11, qword ptr [rbp - 0x548]
472a07: mov r8d, dword ptr [rbp - 0x500]
472a0e: jmp 0x471e01
472a13: mov r11, rax
472a16: jmp 0x470b27
472a1b: call 0x4547a0
472a20: mov rdi, rbx
472a23: mov qword ptr [rbp - 0x4f0], rdx
472a2a: mov qword ptr [rbp - 0x4d0], r11
472a31: call 0x426410
472a36: mov r9, rax
472a39: test rax, rax
472a3c: je 0x46fdc8
472a42: mov r11, qword ptr [rbp - 0x4d0]
472a49: mov rdx, qword ptr [rbp - 0x4f0]
472a50: mov dword ptr [rbp - 0x4e8], 1
472a5a: jmp 0x4701a7
472a5f: mov rdi, rbx
472a62: call 0x426410
472a67: mov r8d, dword ptr [rbp - 0x548]
472a6e: mov r11, qword ptr [rbp - 0x550]
472a75: lea rdx, [rip + 0x36804]
472a7c: test rax, rax
472a7f: mov qword ptr [rbp - 0x4c8], rax
472a86: mov r9d, dword ptr [rbp - 0x554]
472a8d: je 0x46fde0
472a93: mov rax, qword ptr [rbp - 0x4c8]
472a9a: lea r10, [rax + rbx]
472a9e: jmp 0x470d00
472aa3: lea rcx, [rip + 0x36836]
472aaa: mov edx, 0x6b7
472aaf: lea rsi, [rip + 0x22e2e]
472ab6: lea rdi, [rip + 0x22edb]
472abd: call 0x4032a0
472ac2: lea rcx, [rip + 0x36817]
472ac9: mov edx, 0x697
472ace: lea rsi, [rip + 0x22e0f]
472ad5: lea rdi, [rip + 0x22ebc]
472adc: call 0x4032a0
472ae1: mov rdi, rbx
472ae4: mov dword ptr [rbp - 0x550], r9d
472aeb: mov qword ptr [rbp - 0x548], r11
472af2: mov dword ptr [rbp - 0x500], r8d
472af9: call 0x426410
472afe: mov r8d, dword ptr [rbp - 0x500]
472b05: mov r11, qword ptr [rbp - 0x548]
472b0c: lea rdx, [rip + 0x3676d]
472b13: test rax, rax
472b16: mov qword ptr [rbp - 0x4c8], rax
472b1d: mov r9d, dword ptr [rbp - 0x550]
472b24: je 0x46fde0
472b2a: mov rax, qword ptr [rbp - 0x4c8]
472b31: lea r10, [rax + rbx]
472b35: jmp 0x470b27
472b3a: lea rcx, [rip + 0x3679f]
472b41: mov edx, 0x697
472b46: lea rsi, [rip + 0x22d97]
472b4d: lea rdi, [rip + 0x22e14]
472b54: call 0x4032a0
472b59: mov rdi, r10
472b5c: call 0x426410
472b61: mov r10, qword ptr [rbp - 0x500]
472b68: mov r8d, dword ptr [rbp - 0x548]
472b6f: lea rdx, [rip + 0x3670a]
472b76: test rax, rax
472b79: mov qword ptr [rbp - 0x4c8], rax
472b80: mov r11, qword ptr [rbp - 0x550]
472b87: mov r9d, dword ptr [rbp - 0x554]
472b8e: je 0x46fde0
472b94: add r10, qword ptr [rbp - 0x4c8]
472b9b: jmp 0x471c7f
472ba0: xor r10d, r10d
472ba3: jmp 0x470771
472ba8: lea rcx, [rip + 0x36731]
472baf: mov edx, 0x698
472bb4: lea rsi, [rip + 0x22d29]
472bbb: lea rdi, [rip + 0x22dd6]
472bc2: call 0x4032a0
472bc7: test r10d, r10d
472bca: jg 0x471586
472bd0: xor r10d, r10d
472bd3: jmp 0x470725
472bd8: lea rcx, [rip + 0x36701]
472bdf: mov edx, 0x698
472be4: lea rsi, [rip + 0x22cf9]
472beb: lea rdi, [rip + 0x22d76]
472bf2: call 0x4032a0
472bf7: nop word ptr [rax + rax]
472c00: push r14
472c02: push r13
472c04: push r12
472c06: push rbp
472c07: push rbx
472c08: lea r11, [rsp - 0x8000]
472c10: sub rsp, 0x1000
472c17: or qword ptr [rsp], 0
472c1c: cmp rsp, r11
472c1f: jne 0x472c10
472c21: sub rsp, 0x210
472c28: mov rbp, rsi
472c2b: mov esi, 1
472c30: mov rbx, rdi
472c33: mov r12, rdx
472c36: mov rax, qword ptr fs:[0x28]
472c3f: mov qword ptr [rsp + 0x8208], rax
472c47: xor eax, eax
472c49: mov r13d, ecx
472c4c: call 0x41a620
472c51: cmp eax, 1
472c54: jne 0x472e70
472c5a: mov ecx, r13d
472c5d: mov rdx, r12
472c60: lea rdi, [rsp + 0x20]
472c65: mov rsi, rbp
472c68: lea rax, [rsp + 0x200]
472c70: mov qword ptr [rsp + 0x1e8], rbx
472c78: movq xmm0, rax
472c7d: lea rax, [rsp + 0x100]
472c85: mov dword ptr [rsp + 0xe0], 1
472c90: mov qword ptr [rsp + 0xc0], rax
472c98: punpcklqdq xmm0, xmm0
472c9c: lea rax, [rsp + 0x8200]
472ca4: mov qword ptr [rsp + 0x128], rax
472cac: mov eax, dword ptr [rbx + 0x74]
472caf: mov dword ptr [rsp + 0x20], 0xfbad8004
472cb7: mov dword ptr [rsp + 0x94], eax
472cbe: lea rax, [rip + 0x4f49b]
472cc5: mov qword ptr [rsp + 0xa8], 0
472cd1: mov qword ptr [rsp + 0xf8], rax
472cd9: movups xmmword ptr [rsp + 0x118], xmm0
472ce1: call 0x46f9b0
472ce6: mov r13, 0
472ced: mov r12d, eax
472cf0: test r13, r13
472cf3: je 0x472e40
472cf9: mov rsi, 0x46caa0
472d00: mov rdi, rsp
472d03: mov rdx, rbx
472d06: call 0
472d0b: mov edx, dword ptr [rbx]
472d0d: and edx, 0x8000
472d13: je 0x472de0
472d19: mov rax, qword ptr [rsp + 0xc0]
472d21: mov rsi, qword ptr [rax + 0x18]
472d25: mov rax, qword ptr [rax + 0x20]
472d29: sub rax, rsi
472d2c: sar rax, 2
472d30: mov ebp, eax
472d32: test eax, eax
472d34: jle 0x472da7
472d36: mov r14, qword ptr [rbx + 0xd8]
472d3d: mov rdx, 0x4c1b60
472d44: mov rax, 0x4c2208
472d4b: mov rcx, r14
472d4e: sub rax, rdx
472d51: sub rcx, rdx
472d54: cmp rax, rcx
472d57: jbe 0x472e58
472d5d: movsxd rdx, ebp
472d60: mov rdi, rbx
472d63: call qword ptr [r14 + 0x38]
472d67: cmp ebp, eax
472d69: mov eax, 0xffffffff
472d6e: cmovne r12d, eax
472d72: test dword ptr [rbx], 0x8000
472d78: jne 0x472da7
472d7a: mov rdi, qword ptr [rbx + 0x88]
472d81: mov eax, dword ptr [rdi + 4]
472d84: sub eax, 1
472d87: mov dword ptr [rdi + 4], eax
472d8a: jne 0x472da7
472d8c: mov qword ptr [rdi + 8], 0
472d94: mov edx, dword ptr fs:[0x18]
472d9c: test edx, edx
472d9e: jne 0x472ea0
472da4: sub dword ptr [rdi], 1
472da7: test r13, r13
472daa: je 0x472db6
472dac: mov rdi, rsp
472daf: xor esi, esi
472db1: call 0
472db6: mov rax, qword ptr [rsp + 0x8208]
472dbe: xor rax, qword ptr fs:[0x28]
472dc7: jne 0x472ec4
472dcd: add rsp, 0x8210
472dd4: mov eax, r12d
472dd7: pop rbx
472dd8: pop rbp
472dd9: pop r12
472ddb: pop r13
472ddd: pop r14
472ddf: ret 
472de0: mov rdi, qword ptr [rbx + 0x88]
472de7: mov rbp, qword ptr fs:[0x10]
472df0: cmp qword ptr [rdi + 8], rbp
472df4: je 0x472e15
472df6: mov eax, dword ptr fs:[0x18]
472dfe: test eax, eax
472e00: jne 0x472e80
472e02: mov edx, 1
472e07: cmpxchg dword ptr [rdi], edx
472e0a: mov rdi, qword ptr [rbx + 0x88]
472e11: mov qword ptr [rdi + 8], rbp
472e15: mov rax, qword ptr [rsp + 0xc0]
472e1d: add dword ptr [rdi + 4], 1
472e21: mov rsi, qword ptr [rax + 0x18]
472e25: mov rax, qword ptr [rax + 0x20]
472e29: sub rax, rsi
472e2c: sar rax, 2
472e30: mov ebp, eax
472e32: test eax, eax
472e34: jg 0x472d36
472e3a: jmp 0x472d72
472e3f: nop 
472e40: mov rax, 0x46caa0
472e47: mov qword ptr [rsp + 8], rbx
472e4c: mov qword ptr [rsp], rax
472e50: jmp 0x472d0b
472e55: nop dword ptr [rax]
472e58: call 0x41b240
472e5d: mov rax, qword ptr [rsp + 0xc0]
472e65: mov rsi, qword ptr [rax + 0x18]
472e69: jmp 0x472d5d
472e6e: nop 
472e70: mov r12d, 0xffffffff
472e76: jmp 0x472db6
472e7b: nop dword ptr [rax + rax]
472e80: mov ecx, 1
472e85: mov eax, edx
472e87: lock cmpxchg dword ptr [rdi], ecx
472e8b: je 0x472e0a
472e91: call 0x421250
472e96: jmp 0x472e0a
472e9b: nop dword ptr [rax + rax]
472ea0: xchg dword ptr [rdi], eax
472ea2: cmp eax, 1
472ea5: jle 0x472da7
472eab: xor r10d, r10d
472eae: mov edx, 1
472eb3: mov esi, 0x81
472eb8: mov eax, 0xca
472ebd: syscall 
472ebf: jmp 0x472da7
472ec4: call 0x4547a0
472ec9: nop dword ptr [rax]
472ed0: endbr64 
472ed4: push r12
472ed6: push rbp
472ed7: mov rbp, rsi
472eda: lea rsi, [rdi + 4]
472ede: push rbx
472edf: mov rbx, rdx
472ee2: sub rsp, 0x10
472ee6: movzx eax, word ptr [rdx + 0xc]
472eea: mov dword ptr [rdx + 0x30], 0xffffffff
472ef1: mov dword ptr [rdx + 0x10], 0x20
472ef8: and ax, 0xe207
472efc: mov qword ptr [rsp + 8], rsi
472f01: or ah, 4
472f04: mov word ptr [rdx + 0xc], ax
472f08: mov eax, dword ptr [rdi + 4]
472f0b: lea edx, [rax - 0x30]
472f0e: cmp edx, 9
472f11: jbe 0x4731d0
472f17: mov rdx, rsi
472f1a: xor r8d, r8d
472f1d: lea rdi, [rip + 0x37070]
472f24: nop dword ptr [rax]
472f28: mov eax, dword ptr [rdx]
472f2a: sub eax, 0x20
472f2d: cmp eax, 0x29
472f30: ja 0x472f40
472f32: movsxd rax, dword ptr [rdi + rax*4]
472f36: add rax, rdi
472f39: notrack jmp rax
472f3c: nop dword ptr [rax]
472f40: test r8b, r8b
472f43: je 0x472f4d
472f45: mov qword ptr [rsp + 8], rdx
472f4a: mov rsi, rdx
472f4d: test byte ptr [rbx + 0xc], 0x20
472f51: je 0x472f5a
472f53: mov dword ptr [rbx + 0x10], 0x20
472f5a: mov dword ptr [rbx + 0x2c], 0xffffffff
472f61: mov dword ptr [rbx + 4], 0
472f68: mov eax, dword ptr [rsi]
472f6a: cmp eax, 0x2a
472f6d: je 0x4731a0
472f73: sub eax, 0x30
472f76: mov edx, 1
472f7b: xor r12d, r12d
472f7e: cmp eax, 9
472f81: jbe 0x4730c0
472f87: mov dword ptr [rbx + 0x28], 0xffffffff
472f8e: mov dword ptr [rbx], 0xffffffff
472f94: cmp dword ptr [rsi], 0x2e
472f97: je 0x473170
472f9d: mov rdx, qword ptr [rip + 0x509ac]
472fa4: and dword ptr [rbx + 0xc], 0xfdf8
472fab: test rdx, rdx
472fae: jne 0x4732d0
472fb4: mov eax, dword ptr [rsi]
472fb6: lea rdx, [rsi + 4]
472fba: lea ecx, [rax - 0x4c]
472fbd: mov qword ptr [rsp + 8], rdx
472fc2: cmp ecx, 0x2e
472fc5: ja 0x472ff0
472fc7: lea rdi, [rip + 0x3706e]
472fce: movsxd rcx, dword ptr [rdi + rcx*4]
472fd2: add rcx, rdi
472fd5: notrack jmp rcx
472fd8: cmp dword ptr [rsi + 4], 0x68
472fdc: je 0x4735e5
472fe2: or byte ptr [rbx + 0xc], 2
472fe6: mov eax, dword ptr [rsi + 4]
472fe9: lea rdx, [rsi + 8]
472fed: nop dword ptr [rax]
472ff0: cmp qword ptr [rip + 0x50950], 0
472ff8: mov qword ptr [rsp + 8], rdx
472ffd: mov dword ptr [rbx + 8], eax
473000: mov dword ptr [rbx + 0x40], 0xffffffff
473007: je 0x473014
473009: cmp eax, 0xff
47300e: jle 0x473373
473014: lea edx, [rax - 0x41]
473017: mov qword ptr [rbx + 0x38], 1
47301f: mov esi, dword ptr [rbx + 0x30]
473022: cmp edx, 0x37
473025: ja 0x473250
47302b: lea rcx, [rip + 0x370c6]
473032: movsxd rdx, dword ptr [rcx + rdx*4]
473036: add rdx, rcx
473039: notrack jmp rdx
47303c: nop dword ptr [rax]
473040: or byte ptr [rbx + 0xd], 8
473044: nop dword ptr [rax]
473048: mov eax, dword ptr [rdx + 4]
47304b: add rdx, 4
47304f: mov r8d, 1
473055: test eax, eax
473057: jne 0x472f28
47305d: jmp 0x472f45
473062: nop word ptr [rax + rax]
473068: mov dword ptr [rbx + 0x10], 0x30
47306f: jmp 0x473048
473071: nop dword ptr [rax]
473078: or byte ptr [rbx + 0xc], 0x20
47307c: jmp 0x473048
47307e: nop 
473080: or byte ptr [rbx + 0xc], 0x40
473084: jmp 0x473048
473086: nop word ptr cs:[rax + rax]
473090: or byte ptr [rbx + 0xc], 0x80
473094: jmp 0x473048
473096: nop word ptr cs:[rax + rax]
4730a0: or byte ptr [rbx + 0xc], 8
4730a4: jmp 0x473048
4730a6: nop word ptr cs:[rax + rax]
4730b0: or byte ptr [rbx + 0xc], 0x10
4730b4: jmp 0x473048
4730b6: nop word ptr cs:[rax + rax]
4730c0: lea rdx, [rsi + 4]
4730c4: mov esi, dword ptr [rsi + 4]
4730c7: mov qword ptr [rsp + 8], rdx
4730cc: sub esi, 0x30
4730cf: cmp esi, 9
4730d2: ja 0x47313f
4730d4: mov r8d, 0x7fffffff
4730da: jmp 0x4730ff
4730dc: nop dword ptr [rax]
4730e0: lea eax, [rax + rax*4]
4730e3: mov edi, r8d
4730e6: add eax, eax
4730e8: sub edi, esi
4730ea: cmp eax, edi
4730ec: jg 0x47310a
4730ee: add eax, esi
4730f0: mov esi, dword ptr [rdx + 4]
4730f3: add rdx, 4
4730f7: sub esi, 0x30
4730fa: cmp esi, 9
4730fd: ja 0x473131
4730ff: test eax, eax
473101: js 0x4730f0
473103: cmp eax, 0xccccccc
473108: jle 0x4730e0
47310a: mov eax, dword ptr [rdx + 4]
47310d: add rdx, 4
473111: sub eax, 0x30
473114: cmp eax, 9
473117: ja 0x473550
47311d: mov esi, dword ptr [rdx + 4]
473120: add rdx, 4
473124: mov eax, 0xffffffff
473129: sub esi, 0x30
47312c: cmp esi, 9
47312f: jbe 0x4730ff
473131: mov qword ptr [rsp + 8], rdx
473136: cmp eax, -1
473139: je 0x47375d
47313f: mov rsi, rdx
473142: mov dword ptr [rbx + 4], eax
473145: mov edx, 1
47314a: xor r12d, r12d
47314d: jmp 0x472f87
473152: nop word ptr [rax + rax]
473158: or byte ptr [rbx + 0xc], 4
47315c: lea rdx, [rsi + 8]
473160: mov eax, dword ptr [rsi + 4]
473163: jmp 0x472ff0
473168: nop dword ptr [rax + rax]
473170: mov eax, dword ptr [rsi + 4]
473173: lea rdi, [rsi + 4]
473177: mov qword ptr [rsp + 8], rdi
47317c: cmp eax, 0x2a
47317f: je 0x4734a0
473185: sub eax, 0x30
473188: cmp eax, 9
47318b: jbe 0x473300
473191: mov dword ptr [rbx], 0
473197: mov rsi, rdi
47319a: jmp 0x472f9d
47319f: nop 
4731a0: mov eax, dword ptr [rsi + 4]
4731a3: lea edx, [rax - 0x30]
4731a6: cmp edx, 9
4731a9: jbe 0x4734d0
4731af: add rsi, 4
4731b3: mov dword ptr [rbx + 0x2c], ebp
4731b6: add rbp, 1
4731ba: mov edx, 2
4731bf: mov qword ptr [rsp + 8], rsi
4731c4: mov r12d, 1
4731ca: jmp 0x472f87
4731cf: nop 
4731d0: mov r10d, dword ptr [rdi + 8]
4731d4: lea r8, [rdi + 8]
4731d8: mov eax, edx
4731da: mov qword ptr [rsp + 8], r8
4731df: lea r9d, [r10 - 0x30]
4731e3: cmp r9d, 9
4731e7: ja 0x473692
4731ed: mov r11d, 0x7fffffff
4731f3: jmp 0x473223
4731f5: nop dword ptr [rax]
4731f8: lea eax, [rax + rax*4]
4731fb: mov edx, r11d
4731fe: add eax, eax
473200: sub edx, r9d
473203: cmp edx, eax
473205: jl 0x473232
473207: add eax, r9d
47320a: mov rdi, r8
47320d: mov r10d, dword ptr [rdi + 4]
473211: lea r8, [rdi + 4]
473215: lea r9d, [r10 - 0x30]
473219: cmp r9d, 9
47321d: ja 0x473468
473223: test eax, eax
473225: js 0x47368a
47322b: cmp eax, 0xccccccc
473230: jle 0x4731f8
473232: mov eax, dword ptr [r8 + 4]
473236: lea rdi, [r8 + 4]
47323a: lea edx, [rax - 0x30]
47323d: cmp edx, 9
473240: ja 0x473488
473246: mov eax, 0xffffffff
47324b: jmp 0x47320d
47324d: nop dword ptr [rax]
473250: mov qword ptr [rbx + 0x38], 0
473258: mov rdi, qword ptr [rsp + 8]
47325d: test eax, eax
47325f: jne 0x473416
473265: sub rdi, 4
473269: mov rax, r12
47326c: mov qword ptr [rbx + 0x20], rdi
473270: mov qword ptr [rbx + 0x18], rdi
473274: add rsp, 0x10
473278: pop rbx
473279: pop rbp
47327a: pop r12
47327c: ret 
47327d: nop dword ptr [rax]
473280: movzx edx, byte ptr [rbx + 0xc]
473284: and edx, 1
473287: cmp dl, 1
47328a: sbb edx, edx
47328c: xor dl, dl
47328e: add edx, 0x107
473294: mov dword ptr [rbx + 0x34], edx
473297: mov rdi, qword ptr [rsp + 8]
47329c: cmp esi, -1
47329f: jne 0x47325d
4732a1: mov edx, 1
4732a6: mov dword ptr [rbx + 0x30], ebp
4732a9: add r12, rdx
4732ac: jmp 0x47325d
4732ae: nop 
4732b0: movzx edx, byte ptr [rbx + 0xc]
4732b4: test dl, 4
4732b7: je 0x4735b3
4732bd: mov dword ptr [rbx + 0x34], 0x200
4732c4: jmp 0x473297
4732c6: nop word ptr cs:[rax + rax]
4732d0: mov ecx, dword ptr [rsi]
4732d2: cmp qword ptr [rdx + rcx*8], 0
4732d7: mov rax, rcx
4732da: je 0x472fb6
4732e0: lea rdi, [rsp + 8]
4732e5: mov rsi, rbx
4732e8: call 0x46c800
4732ed: test eax, eax
4732ef: je 0x4735d5
4732f5: mov rsi, qword ptr [rsp + 8]
4732fa: jmp 0x472fb4
4732ff: nop 
473300: mov edi, dword ptr [rsi + 8]
473303: lea rcx, [rsi + 8]
473307: mov qword ptr [rsp + 8], rcx
47330c: lea edx, [rdi - 0x30]
47330f: cmp edx, 9
473312: ja 0x47373f
473318: lea rcx, [rsi + 0xc]
47331c: mov edi, 0x7fffffff
473321: jmp 0x47334c
473323: nop dword ptr [rax + rax]
473328: lea eax, [rax + rax*4]
47332b: mov esi, edi
47332d: add eax, eax
47332f: sub esi, edx
473331: cmp esi, eax
473333: jl 0x473357
473335: add eax, edx
473337: mov rsi, rcx
47333a: mov ecx, dword ptr [rcx]
47333c: lea edx, [rcx - 0x30]
47333f: lea rcx, [rsi + 4]
473343: cmp edx, 9
473346: ja 0x4735f5
47334c: test eax, eax
47334e: js 0x473337
473350: cmp eax, 0xccccccc
473355: jle 0x473328
473357: mov rsi, rcx
47335a: add rcx, 4
47335e: mov eax, dword ptr [rsi]
473360: sub eax, 0x30
473363: cmp eax, 9
473366: ja 0x4736d8
47336c: mov eax, 0xffffffff
473371: jmp 0x473337
473373: mov rcx, qword ptr [rip + 0x505ee]
47337a: movsxd rdx, eax
47337d: mov r8, qword ptr [rcx + rdx*8]
473381: test r8, r8
473384: je 0x473014
47338a: lea rdx, [rbx + 0x34]
47338e: lea rcx, [rbx + 0x40]
473392: mov esi, 1
473397: mov rdi, rbx
47339a: call r8
47339d: movsxd rdx, eax
4733a0: test eax, eax
4733a2: mov eax, dword ptr [rbx + 8]
4733a5: mov qword ptr [rbx + 0x38], rdx
4733a9: js 0x473014
4733af: cmp dword ptr [rbx + 0x30], -1
4733b3: mov rdi, qword ptr [rsp + 8]
4733b8: jne 0x47325d
4733be: test rdx, rdx
4733c1: je 0x47325d
4733c7: jmp 0x4732a6
4733cc: nop dword ptr [rax]
4733d0: mov rsi, rdx
4733d3: or byte ptr [rbx + 0xc], 1
4733d7: lea rdx, [rsi + 4]
4733db: mov eax, dword ptr [rsi]
4733dd: jmp 0x472ff0
4733e2: or byte ptr [rbx + 0xc], 4
4733e6: mov eax, dword ptr [rsi + 4]
4733e9: lea rdx, [rsi + 8]
4733ed: add rsi, 8
4733f1: cmp eax, 0x6c
4733f4: jne 0x472ff0
4733fa: jmp 0x4733d3
4733fc: mov dword ptr [rbx + 0x34], 4
473403: nop dword ptr [rax + rax]
473408: mov rdi, qword ptr [rsp + 8]
47340d: cmp esi, -1
473410: je 0x4732a1
473416: mov qword ptr [rbx + 0x18], rdi
47341a: mov esi, 0x25
47341f: call 0x476e50
473424: mov qword ptr [rbx + 0x20], rax
473428: add rsp, 0x10
47342c: mov rax, r12
47342f: pop rbx
473430: pop rbp
473431: pop r12
473433: ret 
473434: mov dword ptr [rbx + 0x34], 3
47343b: jmp 0x473408
47343d: mov dword ptr [rbx + 0x34], 2
473444: jmp 0x473408
473446: mov dword ptr [rbx + 0x34], 1
47344d: jmp 0x473408
47344f: mov dword ptr [rbx + 0x34], 0x800
473456: jmp 0x473408
473458: mov dword ptr [rbx + 0x34], 5
47345f: jmp 0x473408
473461: nop dword ptr [rax]
473468: mov edx, eax
47346a: cmp r10d, 0x24
47346e: jne 0x473478
473470: test edx, edx
473472: jne 0x4736c2
473478: mov qword ptr [rsp + 8], rsi
47347d: jmp 0x472f17
473482: nop word ptr [rax + rax]
473488: cmp eax, 0x24
47348b: jne 0x473478
47348d: lea rsi, [r8 + 8]
473491: mov qword ptr [rsp + 8], rsi
473496: jmp 0x472f17
47349b: nop dword ptr [rax + rax]
4734a0: mov eax, dword ptr [rsi + 8]
4734a3: lea edi, [rax - 0x30]
4734a6: cmp edi, 9
4734a9: jbe 0x47360a
4734af: add rsi, 8
4734b3: mov dword ptr [rbx + 0x28], ebp
4734b6: mov r12, rdx
4734b9: add rbp, 1
4734bd: mov qword ptr [rsp + 8], rsi
4734c2: jmp 0x472f9d
4734c7: nop word ptr [rax + rax]
4734d0: mov r9d, dword ptr [rsi + 8]
4734d4: lea rdi, [rsi + 8]
4734d8: mov eax, edx
4734da: mov qword ptr [rsp + 8], rdi
4734df: lea r8d, [r9 - 0x30]
4734e3: cmp r8d, 9
4734e7: ja 0x473728
4734ed: lea rdx, [rsi + 0xc]
4734f1: mov r10d, 0x7fffffff
4734f7: jmp 0x473526
4734f9: nop dword ptr [rax]
473500: lea eax, [rax + rax*4]
473503: mov edi, r10d
473506: add eax, eax
473508: sub edi, r8d
47350b: cmp edi, eax
47350d: jl 0x473531
47350f: add eax, r8d
473512: mov r9d, dword ptr [rdx]
473515: mov rdi, rdx
473518: lea rdx, [rdx + 4]
47351c: lea r8d, [r9 - 0x30]
473520: cmp r8d, 9
473524: ja 0x473565
473526: test eax, eax
473528: js 0x473512
47352a: cmp eax, 0xccccccc
47352f: jle 0x473500
473531: mov rax, rdx
473534: add rdx, 4
473538: mov eax, dword ptr [rax]
47353a: sub eax, 0x30
47353d: cmp eax, 9
473540: ja 0x4731af
473546: mov eax, 0xffffffff
47354b: jmp 0x473512
47354d: nop dword ptr [rax]
473550: mov qword ptr [rsp + 8], rdx
473555: mov rsi, rdx
473558: xor r12d, r12d
47355b: mov edx, 1
473560: jmp 0x472f87
473565: mov edx, eax
473567: test edx, edx
473569: je 0x4731af
47356f: cmp r9d, 0x24
473573: jne 0x4731af
473579: cmp edx, -1
47357c: je 0x4731af
473582: cmp qword ptr [rcx], rdx
473585: lea eax, [rdx - 1]
473588: cmovae rdx, qword ptr [rcx]
47358c: add rdi, 4
473590: mov dword ptr [rbx + 0x2c], eax
473593: mov qword ptr [rsp + 8], rdi
473598: mov qword ptr [rcx], rdx
47359b: test eax, eax
47359d: js 0x4731af
4735a3: mov rsi, rdi
4735a6: mov edx, 1
4735ab: xor r12d, r12d
4735ae: jmp 0x472f87
4735b3: and edx, 2
4735b6: je 0x4735c4
4735b8: mov dword ptr [rbx + 0x34], 0x400
4735bf: jmp 0x473297
4735c4: xor edx, edx
4735c6: test byte ptr [rbx + 0xd], 2
4735ca: setne dl
4735cd: mov dword ptr [rbx + 0x34], edx
4735d0: jmp 0x473297
4735d5: mov rax, qword ptr [rsp + 8]
4735da: lea rdx, [rax + 4]
4735de: mov eax, dword ptr [rax]
4735e0: jmp 0x472ff0
4735e5: or byte ptr [rbx + 0xd], 2
4735e9: lea rdx, [rsi + 0xc]
4735ed: mov eax, dword ptr [rsi + 8]
4735f0: jmp 0x472ff0
4735f5: mov qword ptr [rsp + 8], rsi
4735fa: cmp eax, -1
4735fd: je 0x472f9d
473603: mov dword ptr [rbx], eax
473605: jmp 0x472f9d
47360a: mov r10d, dword ptr [rsi + 0xc]
47360e: lea r8, [rsi + 0xc]
473612: mov eax, edi
473614: mov qword ptr [rsp + 8], r8
473619: lea r9d, [r10 - 0x30]
47361d: cmp r9d, 9
473621: ja 0x473749
473627: lea rdi, [rsi + 0x10]
47362b: mov r10d, 0x7fffffff
473631: jmp 0x473663
473633: nop dword ptr [rax + rax]
473638: lea eax, [rax + rax*4]
47363b: mov r8d, r10d
47363e: add eax, eax
473640: sub r8d, r9d
473643: cmp r8d, eax
473646: jl 0x47366e
473648: add eax, r9d
47364b: mov r11d, dword ptr [rdi]
47364e: mov r8, rdi
473651: lea rdi, [rdi + 4]
473655: lea r9d, [r11 - 0x30]
473659: cmp r9d, 9
47365d: ja 0x4736e2
473663: test eax, eax
473665: js 0x47364b
473667: cmp eax, 0xccccccc
47366c: jle 0x473638
47366e: mov rax, rdi
473671: add rdi, 4
473675: mov eax, dword ptr [rax]
473677: sub eax, 0x30
47367a: cmp eax, 9
47367d: ja 0x4734af
473683: mov eax, 0xffffffff
473688: jmp 0x47364b
47368a: mov rdi, r8
47368d: jmp 0x47320d
473692: test edx, edx
473694: je 0x473478
47369a: cmp r10d, 0x24
47369e: jne 0x473478
4736a4: lea rsi, [rdi + 0xc]
4736a8: mov qword ptr [rsp + 8], rsi
4736ad: lea eax, [rdx - 1]
4736b0: cmp qword ptr [rcx], rdx
4736b3: cmovae rdx, qword ptr [rcx]
4736b7: mov dword ptr [rbx + 0x30], eax
4736ba: mov qword ptr [rcx], rdx
4736bd: jmp 0x472f17
4736c2: lea rsi, [rdi + 8]
4736c6: mov qword ptr [rsp + 8], rsi
4736cb: cmp edx, -1
4736ce: jne 0x4736ad
4736d0: jmp 0x472f17
4736d5: nop dword ptr [rax]
4736d8: mov qword ptr [rsp + 8], rsi
4736dd: jmp 0x472f9d
4736e2: mov edi, eax
4736e4: test edi, edi
4736e6: je 0x4734af
4736ec: cmp r11d, 0x24
4736f0: jne 0x4734af
4736f6: cmp edi, -1
4736f9: je 0x4734af
4736ff: cmp qword ptr [rcx], rdi
473702: lea eax, [rdi - 1]
473705: cmovae rdi, qword ptr [rcx]
473709: add r8, 4
47370d: mov dword ptr [rbx + 0x28], eax
473710: mov qword ptr [rsp + 8], r8
473715: mov qword ptr [rcx], rdi
473718: test eax, eax
47371a: js 0x4734af
473720: mov rsi, r8
473723: jmp 0x472f9d
473728: test edx, edx
47372a: je 0x4731af
473730: cmp r9d, 0x24
473734: jne 0x4731af
47373a: jmp 0x473582
47373f: mov dword ptr [rbx], eax
473741: mov rsi, rcx
473744: jmp 0x472f9d
473749: cmp r10d, 0x24
47374d: jne 0x4734af
473753: test edi, edi
473755: je 0x4734af
47375b: jmp 0x4736ff
47375d: mov rsi, rdx
473760: xor r12d, r12d
473763: mov edx, 1
473768: jmp 0x472f87
47376d: nop dword ptr [rax]
473770: endbr64 
473774: push r12
473776: push rbp
473777: mov rbp, rdi
47377a: push rbx
47377b: sub rsp, 0xa0
473782: mov rax, qword ptr fs:[0x28]
47378b: mov qword ptr [rsp + 0x98], rax
473793: xor eax, eax
473795: mov eax, dword ptr [rdi + 0x70]
473798: test eax, eax
47379a: js 0x473848
4737a0: mov rbx, qword ptr [rdi + 0xd8]
4737a7: mov rdx, 0x4c1b60
4737ae: mov rax, 0x4c2208
4737b5: mov rcx, rbx
4737b8: sub rax, rdx
4737bb: sub rcx, rdx
4737be: cmp rax, rcx
4737c1: jbe 0x4738c0
4737c7: mov rsi, rsp
4737ca: mov rdi, rbp
4737cd: call qword ptr [rbx + 0x90]
4737d3: test eax, eax
4737d5: js 0x473848
4737d7: mov eax, dword ptr [rsp + 0x18]
4737db: and eax, 0xf000
4737e0: cmp eax, 0x2000
4737e5: je 0x473868
4737eb: mov rbx, qword ptr [rsp + 0x38]
4737f0: lea rax, [rbx - 1]
4737f4: cmp rax, 0x1ffe
4737fa: ja 0x473848
4737fc: mov rdi, rbx
4737ff: call 0x426410
473804: mov rsi, rax
473807: test rax, rax
47380a: je 0x47385d
47380c: lea rdx, [rax + rbx]
473810: mov ecx, 1
473815: mov rdi, rbp
473818: call 0x41ecc0
47381d: mov eax, 1
473822: mov rcx, qword ptr [rsp + 0x98]
47382a: xor rcx, qword ptr fs:[0x28]
473833: jne 0x4738ca
473839: add rsp, 0xa0
473840: pop rbx
473841: pop rbp
473842: pop r12
473844: ret 
473845: nop dword ptr [rax]
473848: mov ebx, 0x2000
47384d: mov rdi, rbx
473850: call 0x426410
473855: mov rsi, rax
473858: test rax, rax
47385b: jne 0x47380c
47385d: mov eax, 0xffffffff
473862: jmp 0x473822
473864: nop dword ptr [rax]
473868: mov rax, qword ptr [rsp + 0x28]
47386d: mov rdx, rax
473870: shr rax, 0x20
473874: shr rdx, 8
473878: and eax, 0xfffff000
47387d: and edx, 0xfff
473883: or eax, edx
473885: sub eax, 0x88
47388a: cmp eax, 7
47388d: ja 0x4738a0
47388f: or dword ptr [rbp], 0x200
473896: jmp 0x4737eb
47389b: nop dword ptr [rax + rax]
4738a0: mov rbx, 0xffffffffffffffc0
4738a7: mov edi, dword ptr [rbp + 0x70]
4738aa: mov r12d, dword ptr fs:[rbx]
4738ae: call 0x478140
4738b3: mov dword ptr fs:[rbx], r12d
4738b7: test eax, eax
4738b9: jne 0x47388f
4738bb: jmp 0x4737eb
4738c0: call 0x41b240
4738c5: jmp 0x4737c7
4738ca: call 0x4547a0
4738cf: nop 
4738d0: endbr64 
4738d4: push r13
4738d6: push r12
4738d8: push rbp
4738d9: mov rbp, rdi
4738dc: push rbx
4738dd: mov rbx, rsi
4738e0: sub rsp, 8
4738e4: call 0x401180
4738e9: mov edx, dword ptr [rbx]
4738eb: mov r12, rax
4738ee: and edx, 0x8000
4738f4: jne 0x473933
4738f6: mov rdi, qword ptr [rbx + 0x88]
4738fd: mov r13, qword ptr fs:[0x10]
473906: cmp qword ptr [rdi + 8], r13
47390a: je 0x47392f
47390c: mov eax, dword ptr fs:[0x18]
473914: test eax, eax
473916: jne 0x473a00
47391c: mov edx, 1
473921: cmpxchg dword ptr [rdi], edx
473924: mov rdi, qword ptr [rbx + 0x88]
47392b: mov qword ptr [rdi + 8], r13
47392f: add dword ptr [rdi + 4], 1
473933: mov eax, dword ptr [rbx + 0xc0]
473939: test eax, eax
47393b: jne 0x4739a0
47393d: mov dword ptr [rbx + 0xc0], 0xffffffff
473947: mov r13, qword ptr [rbx + 0xd8]
47394e: mov rdx, 0x4c1b60
473955: mov rax, 0x4c2208
47395c: mov rcx, r13
47395f: sub rax, rdx
473962: sub rcx, rdx
473965: cmp rax, rcx
473968: jbe 0x4739f0
47396e: mov rdx, r12
473971: mov rsi, rbp
473974: mov rdi, rbx
473977: call qword ptr [r13 + 0x38]
47397b: mov r8d, 1
473981: cmp r12, rax
473984: jne 0x4739a5
473986: test dword ptr [rbx], 0x8000
47398c: je 0x4739b3
47398e: add rsp, 8
473992: mov eax, r8d
473995: pop rbx
473996: pop rbp
473997: pop r12
473999: pop r13
47399b: ret 
47399c: nop dword ptr [rax]
4739a0: cmp eax, -1
4739a3: je 0x473947
4739a5: mov r8d, 0xffffffff
4739ab: test dword ptr [rbx], 0x8000
4739b1: jne 0x47398e
4739b3: mov rdi, qword ptr [rbx + 0x88]
4739ba: mov eax, dword ptr [rdi + 4]
4739bd: sub eax, 1
4739c0: mov dword ptr [rdi + 4], eax
4739c3: jne 0x47398e
4739c5: mov qword ptr [rdi + 8], 0
4739cd: mov edx, dword ptr fs:[0x18]
4739d5: test edx, edx
4739d7: jne 0x473a20
4739d9: sub dword ptr [rdi], 1
4739dc: add rsp, 8
4739e0: mov eax, r8d
4739e3: pop rbx
4739e4: pop rbp
4739e5: pop r12
4739e7: pop r13
4739e9: ret 
4739ea: nop word ptr [rax + rax]
4739f0: call 0x41b240
4739f5: jmp 0x47396e
4739fa: nop word ptr [rax + rax]
473a00: mov ecx, 1
473a05: mov eax, edx
473a07: lock cmpxchg dword ptr [rdi], ecx
473a0b: je 0x473924
473a11: call 0x421250
473a16: jmp 0x473924
473a1b: nop dword ptr [rax + rax]
473a20: xchg dword ptr [rdi], eax
473a22: cmp eax, 1
473a25: jle 0x47398e
473a2b: xor r10d, r10d
473a2e: mov edx, 1
473a33: mov esi, 0x81
473a38: mov eax, 0xca
473a3d: syscall 
473a3f: jmp 0x47398e
473a44: endbr64 
473a48: mov r8, rax
473a4b: jmp 0x401609
473a50: endbr64 
473a54: push rbp
473a55: mov rbp, rdi
473a58: push rbx
473a59: sub rsp, 8
473a5d: mov rax, qword ptr [rdi + 0x38]
473a61: test rax, rax
473a64: je 0x473ab8
473a66: mov rdx, qword ptr [rbp + 0x40]
473a6a: sub rdx, rax
473a6d: lea rax, [rdx + 3]
473a71: shr rax, 2
473a75: test byte ptr [rbp], 1
473a79: cmovne rdx, rax
473a7d: lea rbx, [rdx*4]
473a85: mov rdi, rbx
473a88: call 0x426410
473a8d: mov rsi, rax
473a90: test rax, rax
473a93: je 0x473ac8
473a95: lea rdx, [rax + rbx]
473a99: mov rdi, rbp
473a9c: mov ecx, 1
473aa1: call 0x474570
473aa6: add rsp, 8
473aaa: mov eax, 1
473aaf: pop rbx
473ab0: pop rbp
473ab1: ret 
473ab2: nop word ptr [rax + rax]
473ab8: call 0x473770
473abd: mov rax, qword ptr [rbp + 0x38]
473ac1: jmp 0x473a66
473ac3: nop dword ptr [rax + rax]
473ac8: add rsp, 8
473acc: mov eax, 0xffffffff
473ad1: pop rbx
473ad2: pop rbp
473ad3: ret 
473ad4: nop word ptr cs:[rax + rax]
473ade: nop 
473ae0: endbr64 
473ae4: push r15
473ae6: push r14
473ae8: push r13
473aea: push r12
473aec: mov r12, rsi
473aef: push rbp
473af0: imul r12, rdx
473af4: push rbx
473af5: sub rsp, 8
473af9: test r12, r12
473afc: je 0x473be9
473b02: mov rbp, rdx
473b05: mov edx, dword ptr [rcx]
473b07: mov r14, rdi
473b0a: mov r13, rsi
473b0d: mov rbx, rcx
473b10: and edx, 0x8000
473b16: jne 0x473b55
473b18: mov rdi, qword ptr [rcx + 0x88]
473b1f: mov r15, qword ptr fs:[0x10]
473b28: cmp qword ptr [rdi + 8], r15
473b2c: je 0x473b51
473b2e: mov eax, dword ptr fs:[0x18]
473b36: test eax, eax
473b38: jne 0x473c48
473b3e: mov edx, 1
473b43: cmpxchg dword ptr [rdi], edx
473b46: mov rdi, qword ptr [rbx + 0x88]
473b4d: mov qword ptr [rdi + 8], r15
473b51: add dword ptr [rdi + 4], 1
473b55: mov eax, dword ptr [rbx + 0xc0]
473b5b: test eax, eax
473b5d: jne 0x473c00
473b63: mov dword ptr [rbx + 0xc0], 0xffffffff
473b6d: mov r15, qword ptr [rbx + 0xd8]
473b74: mov rdx, 0x4c1b60
473b7b: mov rax, 0x4c2208
473b82: mov rcx, r15
473b85: sub rax, rdx
473b88: sub rcx, rdx
473b8b: cmp rax, rcx
473b8e: jbe 0x473c68
473b94: mov rdx, r12
473b97: mov rsi, r14
473b9a: mov rdi, rbx
473b9d: call qword ptr [r15 + 0x38]
473ba1: cmp rax, -1
473ba5: mov r8, rax
473ba8: sete r9b
473bac: test dword ptr [rbx], 0x8000
473bb2: jne 0x473bdc
473bb4: mov rdi, qword ptr [rbx + 0x88]
473bbb: sub dword ptr [rdi + 4], 1
473bbf: jne 0x473bdc
473bc1: mov qword ptr [rdi + 8], 0
473bc9: mov eax, dword ptr fs:[0x18]
473bd1: test eax, eax
473bd3: jne 0x473c78
473bd9: sub dword ptr [rdi], 1
473bdc: cmp r12, r8
473bdf: je 0x473be6
473be1: test r9b, r9b
473be4: je 0x473c35
473be6: mov r12, rbp
473be9: add rsp, 8
473bed: mov rax, r12
473bf0: pop rbx
473bf1: pop rbp
473bf2: pop r12
473bf4: pop r13
473bf6: pop r14
473bf8: pop r15
473bfa: ret 
473bfb: nop dword ptr [rax + rax]
473c00: cmp eax, -1
473c03: je 0x473b6d
473c09: test dword ptr [rbx], 0x8000
473c0f: jne 0x473c30
473c11: mov rdi, qword ptr [rbx + 0x88]
473c18: sub dword ptr [rdi + 4], 1
473c1c: jne 0x473c30
473c1e: xor r9d, r9d
473c21: xor r8d, r8d
473c24: jmp 0x473bc1
473c26: nop word ptr cs:[rax + rax]
473c30: xor r12d, r12d
473c33: jmp 0x473be9
473c35: mov rax, r8
473c38: xor edx, edx
473c3a: div r13
473c3d: mov r12, rax
473c40: jmp 0x473be9
473c42: nop word ptr [rax + rax]
473c48: mov ecx, 1
473c4d: mov eax, edx
473c4f: lock cmpxchg dword ptr [rdi], ecx
473c53: je 0x473b46
473c59: call 0x421250
473c5e: jmp 0x473b46
473c63: nop dword ptr [rax + rax]
473c68: call 0x41b240
473c6d: jmp 0x473b94
473c72: nop word ptr [rax + rax]
473c78: xor eax, eax
473c7a: xchg dword ptr [rdi], eax
473c7c: cmp eax, 1
473c7f: jle 0x473bdc
473c85: xor r10d, r10d
473c88: mov edx, 1
473c8d: mov esi, 0x81
473c92: mov eax, 0xca
473c97: syscall 
473c99: jmp 0x473bdc
473c9e: endbr64 
473ca2: mov r8, rax
473ca5: jmp 0x40165f
473caa: nop word ptr [rax + rax]
473cb0: endbr64 
473cb4: push r15
473cb6: push r14
473cb8: push r13
473cba: push r12
473cbc: push rbp
473cbd: push rbx
473cbe: sub rsp, 0x28
473cc2: mov qword ptr [rsp + 0x10], rsi
473cc7: mov dword ptr [rsp + 0x1c], edx
473ccb: test rdi, rdi
473cce: je 0x473f6b
473cd4: test rsi, rsi
473cd7: je 0x473f6b
473cdd: mov edx, dword ptr [rcx]
473cdf: mov rbx, rcx
473ce2: mov rbp, rdi
473ce5: mov ecx, edx
473ce7: and ecx, 0x8000
473ced: je 0x473e78
473cf3: and edx, 0x20
473cf6: jne 0x473ee0
473cfc: cmp qword ptr [rbp], 0
473d01: je 0x473d0e
473d03: mov rax, qword ptr [rsp + 0x10]
473d08: cmp qword ptr [rax], 0
473d0c: jne 0x473d31
473d0e: mov rax, qword ptr [rsp + 0x10]
473d13: mov edi, 0x78
473d18: mov qword ptr [rax], 0x78
473d1f: call 0x426410
473d24: mov qword ptr [rbp], rax
473d28: test rax, rax
473d2b: je 0x473e27
473d31: mov r8, qword ptr [rbx + 8]
473d35: mov r14, qword ptr [rbx + 0x10]
473d39: sub r14, r8
473d3c: test r14, r14
473d3f: jle 0x473ef0
473d45: xor r15d, r15d
473d48: jmp 0x473dd9
473d4d: nop dword ptr [rax]
473d50: mov rax, qword ptr [rsp + 0x10]
473d55: lea r12, [r15 + r14]
473d59: mov rdi, qword ptr [rbp]
473d5d: lea rsi, [r12 + 1]
473d62: mov rax, qword ptr [rax]
473d65: cmp rax, rsi
473d68: jae 0x473d9f
473d6a: add rax, rax
473d6d: cmp rax, rsi
473d70: cmovae rsi, rax
473d74: mov qword ptr [rsp + 8], rsi
473d79: call 0x427100
473d7e: mov rsi, qword ptr [rsp + 8]
473d83: test rax, rax
473d86: mov rdi, rax
473d89: je 0x473e27
473d8f: mov qword ptr [rbp], rax
473d93: mov rax, qword ptr [rsp + 0x10]
473d98: mov r8, qword ptr [rbx + 8]
473d9c: mov qword ptr [rax], rsi
473d9f: add rdi, r15
473da2: mov rdx, r14
473da5: mov rsi, r8
473da8: call 0x401060
473dad: add qword ptr [rbx + 8], r14
473db1: test r13, r13
473db4: jne 0x473ed0
473dba: mov rdi, rbx
473dbd: call 0x41e910
473dc2: cmp eax, -1
473dc5: je 0x473ed0
473dcb: mov r8, qword ptr [rbx + 8]
473dcf: mov r14, qword ptr [rbx + 0x10]
473dd3: mov r15, r12
473dd6: sub r14, r8
473dd9: mov esi, dword ptr [rsp + 0x1c]
473ddd: mov rdx, r14
473de0: mov rdi, r8
473de3: mov qword ptr [rsp + 8], r8
473de8: call 0x4010b0
473ded: mov r8, qword ptr [rsp + 8]
473df2: mov r13, rax
473df5: sub rax, r8
473df8: add rax, 1
473dfc: test r13, r13
473dff: cmovne r14, rax
473e03: movabs rax, 0x7fffffffffffffff
473e0d: sub rax, r15
473e10: cmp rax, r14
473e13: jg 0x473d50
473e19: mov rax, 0xffffffffffffffc0
473e20: mov dword ptr fs:[rax], 0x4b
473e27: mov eax, dword ptr [rbx]
473e29: mov r12, 0xffffffffffffffff
473e30: test ah, 0x80
473e33: jne 0x473e62
473e35: mov rdi, qword ptr [rbx + 0x88]
473e3c: mov eax, dword ptr [rdi + 4]
473e3f: sub eax, 1
473e42: mov dword ptr [rdi + 4], eax
473e45: jne 0x473e62
473e47: mov qword ptr [rdi + 8], 0
473e4f: mov edx, dword ptr fs:[0x18]
473e57: test edx, edx
473e59: jne 0x473f47
473e5f: sub dword ptr [rdi], 1
473e62: add rsp, 0x28
473e66: mov rax, r12
473e69: pop rbx
473e6a: pop rbp
473e6b: pop r12
473e6d: pop r13
473e6f: pop r14
473e71: pop r15
473e73: ret 
473e74: nop dword ptr [rax]
473e78: mov rdi, qword ptr [rbx + 0x88]
473e7f: mov r12, qword ptr fs:[0x10]
473e88: cmp qword ptr [rdi + 8], r12
473e8c: je 0x473f18
473e92: mov eax, dword ptr fs:[0x18]
473e9a: mov edx, 1
473e9f: test eax, eax
473ea1: jne 0x473f31
473ea7: cmpxchg dword ptr [rdi], edx
473eaa: mov rdi, qword ptr [rbx + 0x88]
473eb1: mov eax, dword ptr [rbx]
473eb3: mov qword ptr [rdi + 8], r12
473eb7: add dword ptr [rdi + 4], 1
473ebb: test al, 0x20
473ebd: je 0x473cfc
473ec3: mov r12, 0xffffffffffffffff
473eca: jmp 0x473e30
473ecf: nop 
473ed0: mov rax, qword ptr [rbp]
473ed4: mov byte ptr [rax + r12], 0
473ed9: mov eax, dword ptr [rbx]
473edb: jmp 0x473e30
473ee0: mov r12, 0xffffffffffffffff
473ee7: jmp 0x473e62
473eec: nop dword ptr [rax]
473ef0: mov rdi, rbx
473ef3: call 0x41e910
473ef8: cmp eax, -1
473efb: je 0x473e27
473f01: mov r8, qword ptr [rbx + 8]
473f05: mov r14, qword ptr [rbx + 0x10]
473f09: sub r14, r8
473f0c: jmp 0x473d45
473f11: nop dword ptr [rax]
473f18: add dword ptr [rdi + 4], 1
473f1c: and edx, 0x20
473f1f: je 0x473cfc
473f25: mov r12, 0xffffffffffffffff
473f2c: jmp 0x473e3c
473f31: mov eax, ecx
473f33: lock cmpxchg dword ptr [rdi], edx
473f37: je 0x473eaa
473f3d: call 0x421250
473f42: jmp 0x473eaa
473f47: xchg dword ptr [rdi], eax
473f49: cmp eax, 1
473f4c: jle 0x473e62
473f52: xor r10d, r10d
473f55: mov edx, 1
473f5a: mov esi, 0x81
473f5f: mov eax, 0xca
473f64: syscall 
473f66: jmp 0x473e62
473f6b: mov rax, 0xffffffffffffffc0
473f72: mov r12, 0xffffffffffffffff
473f79: mov dword ptr fs:[rax], 0x16
473f80: jmp 0x473e62
473f85: endbr64 
473f89: mov r8, rax
473f8c: jmp 0x4016b5
473f91: nop word ptr cs:[rax + rax]
473f9b: nop dword ptr [rax + rax]
473fa0: endbr64 
473fa4: push r15
473fa6: mov r15, rdx
473fa9: push r14
473fab: push r13
473fad: push r12
473faf: mov r12, rdi
473fb2: push rbp
473fb3: mov ebp, ecx
473fb5: push rbx
473fb6: sub rsp, 0x28
473fba: mov qword ptr [rsp + 8], rsi
473fbf: mov dword ptr [rsp + 0x14], r8d
473fc4: mov qword ptr [rsp + 0x18], r9
473fc9: test r9, r9
473fcc: je 0x473fd5
473fce: mov dword ptr [r9], 0
473fd5: mov edx, dword ptr [r12 + 0xc0]
473fdd: test edx, edx
473fdf: je 0x474113
473fe5: test r15, r15
473fe8: je 0x474139
473fee: mov r14, qword ptr [rsp + 8]
473ff3: jmp 0x474032
473ff5: nop dword ptr [rax]
473ff8: cmp rbx, r15
473ffb: mov esi, ebp
473ffd: mov rdi, r13
474000: cmova rbx, r15
474004: mov rdx, rbx
474007: call 0x4010b0
47400c: mov rcx, rax
47400f: test rax, rax
474012: jne 0x474090
474014: mov rdi, r14
474017: mov rdx, rbx
47401a: mov rsi, r13
47401d: sub r15, rbx
474020: call 0x401060
474025: add r14, rbx
474028: add qword ptr [r12 + 8], rbx
47402d: test r15, r15
474030: je 0x474070
474032: mov r13, qword ptr [r12 + 8]
474037: mov rbx, qword ptr [r12 + 0x10]
47403c: sub rbx, r13
47403f: test rbx, rbx
474042: jg 0x473ff8
474044: mov rdi, r12
474047: call 0x41eae0
47404c: cmp eax, -1
47404f: je 0x4740e2
474055: cmp ebp, eax
474057: je 0x4740ff
47405d: sub r15, 1
474061: mov byte ptr [r14], al
474064: add r14, 1
474068: test r15, r15
47406b: jne 0x474032
47406d: nop dword ptr [rax]
474070: mov rax, r14
474073: sub rax, qword ptr [rsp + 8]
474078: add rsp, 0x28
47407c: pop rbx
47407d: pop rbp
47407e: pop r12
474080: pop r13
474082: pop r14
474084: pop r15
474086: ret 
474087: nop word ptr [rax + rax]
474090: mov rbp, rax
474093: mov eax, dword ptr [rsp + 0x14]
474097: mov rbx, r14
47409a: sub rbx, qword ptr [rsp + 8]
47409f: sub rbp, r13
4740a2: test eax, eax
4740a4: js 0x4740b1
4740a6: add rcx, 1
4740aa: cmp eax, 1
4740ad: sbb rbp, -1
4740b1: mov rdx, rbp
4740b4: mov rsi, r13
4740b7: mov rdi, r14
4740ba: mov qword ptr [rsp + 8], rcx
4740bf: call 0x401060
4740c4: mov rcx, qword ptr [rsp + 8]
4740c9: lea rax, [rbp + rbx]
4740ce: mov qword ptr [r12 + 8], rcx
4740d3: add rsp, 0x28
4740d7: pop rbx
4740d8: pop rbp
4740d9: pop r12
4740db: pop r13
4740dd: pop r14
4740df: pop r15
4740e1: ret 
4740e2: mov rsi, qword ptr [rsp + 0x18]
4740e7: mov rax, r14
4740ea: sub rax, qword ptr [rsp + 8]
4740ef: test rsi, rsi
4740f2: je 0x474078
4740f4: mov dword ptr [rsi], 0xffffffff
4740fa: jmp 0x474078
4740ff: mov eax, dword ptr [rsp + 0x14]
474103: test eax, eax
474105: jle 0x474124
474107: mov byte ptr [r14], bpl
47410a: add r14, 1
47410e: jmp 0x474070
474113: mov dword ptr [r12 + 0xc0], 0xffffffff
47411f: jmp 0x473fe5
474124: je 0x474070
47412a: mov esi, ebp
47412c: mov rdi, r12
47412f: call 0x41f870
474134: jmp 0x474070
474139: xor eax, eax
47413b: jmp 0x474078
474140: endbr64 
474144: xor r9d, r9d
474147: jmp 0x473fa0
47414c: nop dword ptr [rax]
474150: endbr64 
474154: push r15
474156: mov r15, rdi
474159: push r14
47415b: push r13
47415d: lea r13, [rip + 0x360bc]
474164: push r12
474166: push rbp
474167: push rbx
474168: sub rsp, 0x58
47416c: mov rcx, qword ptr fs:[0x28]
474175: mov qword ptr [rsp + 0x48], rcx
47417a: xor ecx, ecx
47417c: cmp esi, 0x20
47417f: je 0x4741ac
474181: lea r13, [rip + 0x36058]
474188: cmp esi, 0x30
47418b: je 0x4741ac
47418d: movd xmm1, esi
474191: mov r13, rsp
474194: pshufd xmm0, xmm1, 0
474199: movaps xmmword ptr [rsp + 0x30], xmm0
47419e: movaps xmmword ptr [rsp + 0x20], xmm0
4741a3: movaps xmmword ptr [rsp + 0x10], xmm0
4741a8: movaps xmmword ptr [rsp], xmm0
4741ac: mov ebx, edx
4741ae: cmp edx, 0xf
4741b1: jle 0x47420d
4741b3: mov rbp, 0x4c2208
4741ba: xor r12d, r12d
4741bd: sub rbp, 0x4c1b60
4741c4: jmp 0x4741f0
4741c6: nop word ptr cs:[rax + rax]
4741d0: mov edx, 0x10
4741d5: mov rsi, r13
4741d8: mov rdi, r15
4741db: call qword ptr [r14 + 0x38]
4741df: add r12, rax
4741e2: cmp rax, 0x10
4741e6: jne 0x474246
4741e8: sub ebx, 0x10
4741eb: cmp ebx, 0xf
4741ee: jle 0x474210
4741f0: mov r14, qword ptr [r15 + 0xd8]
4741f7: mov rax, r14
4741fa: sub rax, 0x4c1b60
474201: cmp rbp, rax
474204: ja 0x4741d0
474206: call 0x41b240
47420b: jmp 0x4741d0
47420d: xor r12d, r12d
474210: test ebx, ebx
474212: jle 0x474246
474214: mov rbp, qword ptr [r15 + 0xd8]
47421b: mov rdx, 0x4c1b60
474222: mov rax, 0x4c2208
474229: mov rcx, rbp
47422c: sub rax, rdx
47422f: sub rcx, rdx
474232: cmp rax, rcx
474235: jbe 0x474268
474237: movsxd rdx, ebx
47423a: mov rsi, r13
47423d: mov rdi, r15
474240: call qword ptr [rbp + 0x38]
474243: add r12, rax
474246: mov rax, qword ptr [rsp + 0x48]
47424b: xor rax, qword ptr fs:[0x28]
474254: jne 0x47426f
474256: add rsp, 0x58
47425a: mov rax, r12
47425d: pop rbx
47425e: pop rbp
47425f: pop r12
474261: pop r13
474263: pop r14
474265: pop r15
474267: ret 
474268: call 0x41b240
47426d: jmp 0x474237
47426f: call 0x4547a0
474274: nop word ptr cs:[rax + rax]
47427e: nop 
474280: push r15
474282: mov r8, rdx
474285: push r14
474287: push r13
474289: mov r13, rdi
47428c: push r12
47428e: mov r12, rsi
474291: push rbp
474292: mov rbp, rdx
474295: push rbx
474296: sub rsp, 0x28
47429a: mov rcx, qword ptr [rsi]
47429d: mov rax, qword ptr [rcx + 0x10]
4742a1: mov rsi, qword ptr [rcx + 0x50]
4742a5: sub r8, rax
4742a8: mov qword ptr [rsp], rax
4742ac: mov rax, qword ptr [rdi]
4742af: mov r9, rsi
4742b2: mov rdi, qword ptr [rcx + 0x40]
4742b6: mov r14, r8
4742b9: sar r14, 2
4742bd: mov r11, rax
4742c0: sub r9, rdi
4742c3: mov rbx, r14
4742c6: mov rdx, r14
4742c9: mov r10, r9
4742cc: sar r10, 2
4742d0: test rax, rax
4742d3: je 0x474490
4742d9: nop dword ptr [rax]
4742e0: movsxd r8, dword ptr [r11 + 0x10]
4742e4: mov r11, qword ptr [r11]
4742e7: cmp rbx, r8
4742ea: cmovg rbx, r8
4742ee: test r11, r11
4742f1: jne 0x4742e0
4742f3: mov r8, r14
4742f6: sub r8, rbx
4742f9: cmp r8, r10
4742fc: ja 0x474348
4742fe: mov r15, r10
474301: sub r15, r8
474304: lea r14, [r15*4]
47430c: add rdi, r14
47430f: test rbx, rbx
474312: js 0x4743f8
474318: test r8, r8
47431b: jne 0x474480
474321: mov qword ptr [rcx + 0x48], rdi
474325: nop dword ptr [rax]
474328: sub dword ptr [rax + 0x10], edx
47432b: mov rax, qword ptr [rax]
47432e: test rax, rax
474331: jne 0x474328
474333: xor eax, eax
474335: add rsp, 0x28
474339: pop rbx
47433a: pop rbp
47433b: pop r12
47433d: pop r13
47433f: pop r14
474341: pop r15
474343: ret 
474344: nop dword ptr [rax]
474348: lea rax, [r8*4 + 0x190]
474350: mov qword ptr [rsp + 0x18], rsi
474355: mov rdi, rax
474358: mov qword ptr [rsp + 0x10], r8
47435d: mov qword ptr [rsp + 8], rax
474362: call 0x426410
474367: mov r15, rax
47436a: test rax, rax
47436d: je 0x4744a8
474373: test rbx, rbx
474376: mov r8, qword ptr [rsp + 0x10]
47437b: lea rax, [rbx*4]
474383: lea rcx, [r15 + 0x190]
47438a: js 0x474448
474390: mov rsi, qword ptr [rsp]
474394: mov rdi, rcx
474397: mov rdx, r8
47439a: mov qword ptr [rsp], rcx
47439e: add rsi, rax
4743a1: call 0x476c10
4743a6: mov rcx, qword ptr [rsp]
4743aa: mov rax, qword ptr [r12]
4743ae: mov qword ptr [rsp], rcx
4743b2: mov rdi, qword ptr [rax + 0x40]
4743b6: call 0x426a00
4743bb: mov rsi, qword ptr [r12]
4743bf: mov rdx, rbp
4743c2: mov rax, qword ptr [r13]
4743c6: mov rcx, qword ptr [rsp]
4743ca: mov qword ptr [rsi + 0x40], r15
4743ce: add r15, qword ptr [rsp + 8]
4743d3: mov qword ptr [rsi + 0x50], r15
4743d7: sub rdx, qword ptr [rsi + 0x10]
4743db: sar rdx, 2
4743df: mov qword ptr [rsi + 0x48], rcx
4743e3: test rax, rax
4743e6: jne 0x474328
4743ec: jmp 0x474333
4743f1: mov rdi, rsi
4743f4: nop dword ptr [rax]
4743f8: mov rdx, rbx
4743fb: lea rsi, [rsi + rbx*4]
4743ff: sub r15, rbx
474402: neg rdx
474405: call 0x476c20
47440a: mov rax, qword ptr [r12]
47440e: mov rdx, rbp
474411: mov rsi, qword ptr [rax + 0x10]
474415: mov rax, qword ptr [rax + 0x40]
474419: sub rdx, rsi
47441c: lea rdi, [rax + r15*4]
474420: sar rdx, 2
474424: call 0x476c10
474429: mov rsi, qword ptr [r12]
47442d: mov rdx, rbp
474430: mov rax, qword ptr [r13]
474434: mov rcx, qword ptr [rsi + 0x40]
474438: sub rdx, qword ptr [rsi + 0x10]
47443c: sar rdx, 2
474440: add rcx, r14
474443: jmp 0x4743df
474445: nop dword ptr [rax]
474448: mov rsi, qword ptr [rsp + 0x18]
47444d: neg rbx
474450: mov rdi, rcx
474453: mov qword ptr [rsp + 0x10], rcx
474458: mov rdx, rbx
47445b: add rsi, rax
47445e: call 0x44f010
474463: mov rsi, qword ptr [rsp]
474467: mov rdx, r14
47446a: mov rdi, rax
47446d: call 0x44f010
474472: mov rcx, qword ptr [rsp + 0x10]
474477: jmp 0x4743aa
47447c: nop dword ptr [rax]
474480: mov rax, qword ptr [rsp]
474484: mov rdx, r8
474487: lea rsi, [rax + rbx*4]
47448b: jmp 0x474424
47448d: nop dword ptr [rax]
474490: mov r15, r10
474493: mov r14, r9
474496: test r8, r8
474499: js 0x4743f1
47449f: mov qword ptr [rcx + 0x48], rsi
4744a3: jmp 0x474333
4744a8: or eax, 0xffffffff
4744ab: jmp 0x474335
4744b0: endbr64 
4744b4: mov rax, qword ptr [rdi + 0xa0]
4744bb: mov rdx, qword ptr [rdi + 0x60]
4744bf: sub rsi, qword ptr [rax + 0x10]
4744c3: mov rax, rsi
4744c6: sar rax, 2
4744ca: test rdx, rdx
4744cd: je 0x4744e3
4744cf: nop 
4744d0: movsxd rcx, dword ptr [rdx + 0x10]
4744d4: mov rdx, qword ptr [rdx]
4744d7: cmp rax, rcx
4744da: cmovg rax, rcx
4744de: test rdx, rdx
4744e1: jne 0x4744d0
4744e3: ret 
4744e4: nop word ptr cs:[rax + rax]
4744ef: nop 
4744f0: endbr64 
4744f4: mov rax, qword ptr [rdi + 0xa0]
4744fb: and dword ptr [rdi], 0xfffffeff
474501: mov rdx, qword ptr [rax + 8]
474505: mov rcx, qword ptr [rax + 0x50]
474509: mov qword ptr [rax + 0x50], rdx
47450d: mov rdx, qword ptr [rax + 0x40]
474511: mov qword ptr [rax + 8], rcx
474515: mov rcx, qword ptr [rax + 0x10]
474519: mov qword ptr [rax], rdx
47451c: mov qword ptr [rax + 0x10], rdx
474520: mov qword ptr [rax + 0x40], rcx
474524: ret 
474525: nop word ptr cs:[rax + rax]
474530: endbr64 
474534: mov rax, qword ptr [rdi + 0xa0]
47453b: or dword ptr [rdi], 0x100
474541: mov rdx, qword ptr [rax + 8]
474545: movdqu xmm0, xmmword ptr [rax + 0x48]
47454a: mov rcx, qword ptr [rax + 0x40]
47454e: mov qword ptr [rax + 0x50], rdx
474552: mov rdx, qword ptr [rax + 0x10]
474556: punpckhqdq xmm0, xmm0
47455a: mov qword ptr [rax + 0x10], rcx
47455e: mov qword ptr [rax + 0x40], rdx
474562: movups xmmword ptr [rax], xmm0
474565: ret 
474566: nop word ptr cs:[rax + rax]
474570: endbr64 
474574: push rbp
474575: mov ebp, ecx
474577: push rbx
474578: mov rbx, rdi
47457b: sub rsp, 0x18
47457f: mov eax, dword ptr [rbx + 0x74]
474582: mov qword ptr [rsp + 8], rdx
474587: mov rdx, qword ptr [rdi + 0xa0]
47458e: mov qword ptr [rsp], rsi
474592: mov rdi, qword ptr [rdx + 0x30]
474596: test rdi, rdi
474599: je 0x47459f
47459b: test al, 8
47459d: je 0x4745c8
47459f: movq xmm0, qword ptr [rsp]
4745a4: movhps xmm0, qword ptr [rsp + 8]
4745a9: movups xmmword ptr [rdx + 0x30], xmm0
4745ad: mov edx, eax
4745af: or eax, 8
4745b2: and edx, 0xfffffff7
4745b5: test ebp, ebp
4745b7: cmovne eax, edx
4745ba: mov dword ptr [rbx + 0x74], eax
4745bd: add rsp, 0x18
4745c1: pop rbx
4745c2: pop rbp
4745c3: ret 
4745c4: nop dword ptr [rax]
4745c8: call 0x426a00
4745cd: mov rdx, qword ptr [rbx + 0xa0]
4745d4: mov eax, dword ptr [rbx + 0x74]
4745d7: jmp 0x47459f
4745d9: nop dword ptr [rax]
4745e0: endbr64 
4745e4: push r15
4745e6: mov r15, rdi
4745e9: push r14
4745eb: push r13
4745ed: push r12
4745ef: push rbp
4745f0: mov ebp, esi
4745f2: push rbx
4745f3: sub rsp, 0x18
4745f7: mov rbx, qword ptr [rdi + 0xa0]
4745fe: mov r13d, dword ptr [rdi]
474601: mov r12, qword ptr [rbx]
474604: mov r14, qword ptr [rbx + 0x10]
474608: mov eax, r13d
47460b: and eax, 0x100
474610: cmp r12, r14
474613: jbe 0x474640
474615: test eax, eax
474617: je 0x4746c0
47461d: lea rax, [r12 - 4]
474622: mov qword ptr [rbx], rax
474625: mov eax, ebp
474627: mov dword ptr [r12 - 4], ebp
47462c: add rsp, 0x18
474630: pop rbx
474631: pop rbp
474632: pop r12
474634: pop r13
474636: pop r14
474638: pop r15
47463a: ret 
47463b: nop dword ptr [rax + rax]
474640: test eax, eax
474642: je 0x474710
474648: mov r12, qword ptr [rbx + 8]
47464c: sub r12, r14
47464f: mov rbx, r12
474652: sar rbx, 2
474656: lea r13, [rbx*8]
47465e: mov rdi, r13
474661: call 0x426410
474666: test rax, rax
474669: je 0x474790
47466f: add r12, rax
474672: mov rdx, rbx
474675: mov rsi, r14
474678: mov qword ptr [rsp + 8], rax
47467d: mov rdi, r12
474680: call 0x476c10
474685: mov rax, qword ptr [r15 + 0xa0]
47468c: mov rdi, qword ptr [rax + 0x10]
474690: call 0x426a00
474695: mov rcx, qword ptr [rsp + 8]
47469a: mov rbx, qword ptr [r15 + 0xa0]
4746a1: add r13, rcx
4746a4: mov qword ptr [rbx + 0x10], rcx
4746a8: mov qword ptr [rbx], r12
4746ab: mov qword ptr [rbx + 8], r13
4746af: mov qword ptr [rbx + 0x48], r12
4746b3: jmp 0x47461d
4746b8: nop dword ptr [rax + rax]
4746c0: mov rdx, qword ptr [rdi + 8]
4746c4: movsx eax, byte ptr [rdx - 1]
4746c8: cmp eax, esi
4746ca: je 0x474780
4746d0: cmp qword ptr [rbx + 0x40], 0
4746d5: je 0x474750
4746d7: lea rsi, [r15 + 0xa0]
4746de: lea rdi, [r15 + 0x60]
4746e2: mov rdx, r12
4746e5: call 0x474280
4746ea: test eax, eax
4746ec: jne 0x474790
4746f2: mov rbx, qword ptr [r15 + 0xa0]
4746f9: mov r13d, dword ptr [r15]
4746fc: mov rcx, qword ptr [rbx]
4746ff: mov r12, qword ptr [rbx + 0x50]
474703: mov rax, qword ptr [rbx + 0x40]
474707: jmp 0x474720
474709: nop dword ptr [rax]
474710: mov rax, qword ptr [rbx + 0x40]
474714: test rax, rax
474717: je 0x474750
474719: mov rcx, r12
47471c: mov r12, qword ptr [rbx + 0x50]
474720: mov rdx, qword ptr [rbx + 8]
474724: movq xmm0, r12
474729: or r13d, 0x100
474730: punpcklqdq xmm0, xmm0
474734: mov dword ptr [r15], r13d
474737: mov qword ptr [rbx + 0x50], rdx
47473b: mov qword ptr [rbx + 0x10], rax
47473f: mov qword ptr [rbx + 0x40], rcx
474743: movups xmmword ptr [rbx], xmm0
474746: jmp 0x47461d
47474b: nop dword ptr [rax + rax]
474750: mov edi, 0x200
474755: call 0x426410
47475a: test rax, rax
47475d: je 0x474790
47475f: lea rdx, [rax + 0x200]
474766: mov rcx, r12
474769: mov qword ptr [rbx + 0x40], rax
47476d: mov qword ptr [rbx + 0x50], rdx
474771: mov r12, rdx
474774: mov qword ptr [rbx + 0x48], rdx
474778: jmp 0x474720
47477a: nop word ptr [rax + rax]
474780: sub rdx, 1
474784: mov qword ptr [rdi + 8], rdx
474788: jmp 0x47462c
47478d: nop dword ptr [rax]
474790: mov eax, 0xffffffff
474795: jmp 0x47462c
47479a: nop word ptr [rax + rax]
4747a0: endbr64 
4747a4: push rbp
4747a5: mov rdx, qword ptr [rdi + 0xa0]
4747ac: mov rbp, rdi
4747af: mov rdi, qword ptr [rdx + 0x30]
4747b3: test rdi, rdi
4747b6: je 0x4747be
4747b8: test byte ptr [rbp + 0x74], 8
4747bc: je 0x474808
4747be: mov rax, qword ptr [rbp + 0x60]
4747c2: test rax, rax
4747c5: je 0x4747e0
4747c7: nop word ptr [rax + rax]
4747d0: mov qword ptr [rax + 8], 0
4747d8: mov rax, qword ptr [rax]
4747db: test rax, rax
4747de: jne 0x4747d0
4747e0: cmp qword ptr [rbp + 0x48], 0
4747e5: je 0x4747f8
4747e7: mov rdi, qword ptr [rdx + 0x40]
4747eb: call 0x426a00
4747f0: mov qword ptr [rbp + 0x48], 0
4747f8: mov rdi, rbp
4747fb: pop rbp
4747fc: jmp 0x41e440
474801: nop dword ptr [rax]
474808: call 0x426a00
47480d: mov rdx, qword ptr [rbp + 0xa0]
474814: pxor xmm0, xmm0
474818: movups xmmword ptr [rdx + 0x30], xmm0
47481c: jmp 0x4747be
47481e: nop 
474820: endbr64 
474824: push rbp
474825: push rbx
474826: mov rbx, rdi
474829: sub rsp, 8
47482d: mov rbp, qword ptr [rdi + 0xd8]
474834: mov rdx, 0x4c1b60
47483b: mov rax, 0x4c2208
474842: mov rsi, rbp
474845: sub rax, rdx
474848: sub rsi, rdx
47484b: cmp rax, rsi
47484e: jbe 0x474888
474850: mov rdi, rbx
474853: call qword ptr [rbp + 0x20]
474856: cmp eax, -1
474859: je 0x474878
47485b: mov rdx, qword ptr [rbx + 0xa0]
474862: mov rax, qword ptr [rdx]
474865: lea rcx, [rax + 4]
474869: mov eax, dword ptr [rax]
47486b: mov qword ptr [rdx], rcx
47486e: add rsp, 8
474872: pop rbx
474873: pop rbp
474874: ret 
474875: nop dword ptr [rax]
474878: add rsp, 8
47487c: mov eax, 0xffffffff
474881: pop rbx
474882: pop rbp
474883: ret 
474884: nop dword ptr [rax]
474888: call 0x41b240
47488d: jmp 0x474850
47488f: nop 
474890: endbr64 
474894: push r12
474896: mov r12d, esi
474899: push rbp
47489a: mov rbp, rdi
47489d: push rbx
47489e: mov eax, dword ptr [rdi + 0xc0]
4748a4: test eax, eax
4748a6: je 0x4748e0
4748a8: mov rbx, qword ptr [rbp + 0xd8]
4748af: mov rdx, 0x4c1b60
4748b6: mov rax, 0x4c2208
4748bd: mov rcx, rbx
4748c0: sub rax, rdx
4748c3: sub rcx, rdx
4748c6: cmp rax, rcx
4748c9: jbe 0x4748f0
4748cb: mov rax, qword ptr [rbx + 0x18]
4748cf: mov esi, r12d
4748d2: pop rbx
4748d3: mov rdi, rbp
4748d6: pop rbp
4748d7: pop r12
4748d9: jmp rax
4748db: nop dword ptr [rax + rax]
4748e0: mov esi, 1
4748e5: call 0x41a620
4748ea: jmp 0x4748a8
4748ec: nop dword ptr [rax]
4748f0: call 0x41b240
4748f5: mov rax, qword ptr [rbx + 0x18]
4748f9: mov esi, r12d
4748fc: pop rbx
4748fd: mov rdi, rbp
474900: pop rbp
474901: pop r12
474903: jmp rax
474905: nop word ptr cs:[rax + rax]
474910: endbr64 
474914: test rdx, rdx
474917: je 0x474b20
47491d: push r15
47491f: push r14
474921: push r13
474923: mov r13, rsi
474926: push r12
474928: mov r12, rdx
47492b: push rbp
47492c: mov rbp, rdi
47492f: push rbx
474930: mov rbx, rdx
474933: sub rsp, 8
474937: jmp 0x47497e
474939: nop dword ptr [rax]
474940: mov r14, qword ptr [rbp + 0xd8]
474947: mov rdx, 0x4c1b60
47494e: mov rax, 0x4c2208
474955: mov rcx, r14
474958: sub rax, rdx
47495b: sub rcx, rdx
47495e: cmp rax, rcx
474961: jbe 0x474af0
474967: mov esi, r15d
47496a: mov rdi, rbp
47496d: call qword ptr [r14 + 0x18]
474971: cmp eax, -1
474974: je 0x474b10
47497a: sub rbx, 1
47497e: mov r14, qword ptr [rbp + 0xa0]
474985: mov rdx, r13
474988: mov rdi, qword ptr [r14 + 0x20]
47498c: mov rax, qword ptr [r14 + 0x28]
474990: sub rax, rdi
474993: test rax, rax
474996: jle 0x4749b8
474998: sar rax, 2
47499c: mov r15, rax
47499f: cmp rax, rbx
4749a2: jbe 0x4749aa
4749a4: mov rax, rbx
4749a7: mov r15, rbx
4749aa: cmp rax, 0x14
4749ae: jg 0x4749e8
4749b0: mov rdx, r13
4749b3: test rax, rax
4749b6: jne 0x474a20
4749b8: test rbx, rbx
4749bb: je 0x474a04
4749bd: mov eax, dword ptr [rbp + 0xc0]
4749c3: mov r15d, dword ptr [rdx]
4749c6: lea r13, [rdx + 4]
4749ca: test eax, eax
4749cc: jne 0x474940
4749d2: mov esi, 1
4749d7: mov rdi, rbp
4749da: call 0x41a620
4749df: jmp 0x474940
4749e4: nop dword ptr [rax]
4749e8: mov rdx, r15
4749eb: mov rsi, r13
4749ee: sub rbx, r15
4749f1: call 0x44f010
4749f6: lea rdx, [r13 + r15*4]
4749fb: mov qword ptr [r14 + 0x20], rax
4749ff: test rbx, rbx
474a02: jne 0x4749bd
474a04: add rsp, 8
474a08: mov rax, r12
474a0b: pop rbx
474a0c: pop rbp
474a0d: pop r12
474a0f: pop r13
474a11: pop r14
474a13: pop r15
474a15: ret 
474a16: nop word ptr cs:[rax + rax]
474a20: lea rcx, [rdi + 0xf]
474a24: lea rdx, [rax - 1]
474a28: sub rcx, r13
474a2b: cmp rcx, 0x1e
474a2f: jbe 0x474b28
474a35: cmp rdx, 3
474a39: jbe 0x474b28
474a3f: movdqu xmm0, xmmword ptr [r13]
474a45: mov rcx, rax
474a48: shr rcx, 2
474a4c: movups xmmword ptr [rdi], xmm0
474a4f: cmp rcx, 1
474a53: je 0x474ab0
474a55: movdqu xmm1, xmmword ptr [r13 + 0x10]
474a5b: movups xmmword ptr [rdi + 0x10], xmm1
474a5f: cmp rcx, 2
474a63: je 0x474ab0
474a65: movdqu xmm2, xmmword ptr [r13 + 0x20]
474a6b: movups xmmword ptr [rdi + 0x20], xmm2
474a6f: cmp rcx, 3
474a73: je 0x474ab0
474a75: movdqu xmm3, xmmword ptr [r13 + 0x30]
474a7b: movups xmmword ptr [rdi + 0x30], xmm3
474a7f: cmp rcx, 5
474a83: jne 0x474ab0
474a85: movdqu xmm4, xmmword ptr [r13 + 0x40]
474a8b: movups xmmword ptr [rdi + 0x40], xmm4
474a8f: shl rax, 2
474a93: sub rbx, r15
474a96: lea rdx, [r13 + rax]
474a9b: add rax, rdi
474a9e: mov qword ptr [r14 + 0x20], rax
474aa2: jmp 0x4749b8
474aa7: nop word ptr [rax + rax]
474ab0: mov rsi, rax
474ab3: and rsi, 0xfffffffffffffffc
474ab7: lea rcx, [rsi*4]
474abf: sub rdx, rsi
474ac2: lea r8, [r13 + rcx]
474ac7: add rcx, rdi
474aca: cmp rax, rsi
474acd: je 0x474a8f
474acf: mov esi, dword ptr [r8]
474ad2: mov dword ptr [rcx], esi
474ad4: test rdx, rdx
474ad7: je 0x474a8f
474ad9: mov esi, dword ptr [r8 + 4]
474add: mov dword ptr [rcx + 4], esi
474ae0: cmp rdx, 1
474ae4: je 0x474a8f
474ae6: mov edx, dword ptr [r8 + 8]
474aea: mov dword ptr [rcx + 8], edx
474aed: jmp 0x474a8f
474aef: nop 
474af0: call 0x41b240
474af5: mov esi, r15d
474af8: mov rdi, rbp
474afb: call qword ptr [r14 + 0x18]
474aff: cmp eax, -1
474b02: jne 0x47497a
474b08: nop dword ptr [rax + rax]
474b10: sub r12, rbx
474b13: jmp 0x474a04
474b18: nop dword ptr [rax + rax]
474b20: xor eax, eax
474b22: ret 
474b23: nop dword ptr [rax + rax]
474b28: lea rsi, [rax*4]
474b30: xor edx, edx
474b32: nop word ptr [rax + rax]
474b38: mov ecx, dword ptr [r13 + rdx]
474b3d: mov dword ptr [rdi + rdx], ecx
474b40: add rdx, 4
474b44: cmp rdx, rsi
474b47: jne 0x474b38
474b49: jmp 0x474a8f
474b4e: nop 
474b50: endbr64 
474b54: mov rax, qword ptr [rdi + 0xa0]
474b5b: cmp qword ptr [rax + 0x30], 0
474b60: je 0x474b68
474b62: ret 
474b63: nop dword ptr [rax + rax]
474b68: push r12
474b6a: push rbp
474b6b: push rbx
474b6c: mov rbx, rdi
474b6f: test byte ptr [rdi], 2
474b72: jne 0x474be8
474b74: mov rax, qword ptr [rax + 0xe0]
474b7b: call qword ptr [rax + 0x68]
474b7e: cmp eax, -1
474b81: jne 0x474bc1
474b83: mov rax, qword ptr [rbx + 0xa0]
474b8a: mov edx, dword ptr [rbx + 0x74]
474b8d: mov rdi, qword ptr [rax + 0x30]
474b91: lea rbp, [rax + 0xdc]
474b98: lea r12, [rax + 0xd8]
474b9f: test rdi, rdi
474ba2: je 0x474ba9
474ba4: test dl, 8
474ba7: je 0x474bd0
474ba9: movq xmm0, r12
474bae: movq xmm1, rbp
474bb3: or edx, 8
474bb6: punpcklqdq xmm0, xmm1
474bba: movups xmmword ptr [rax + 0x30], xmm0
474bbe: mov dword ptr [rbx + 0x74], edx
474bc1: pop rbx
474bc2: pop rbp
474bc3: pop r12
474bc5: ret 
474bc6: nop word ptr cs:[rax + rax]
474bd0: call 0x426a00
474bd5: mov rax, qword ptr [rbx + 0xa0]
474bdc: mov edx, dword ptr [rbx + 0x74]
474bdf: jmp 0x474ba9
474be1: nop dword ptr [rax]
474be8: mov edx, dword ptr [rdi + 0x74]
474beb: lea rbp, [rax + 0xdc]
474bf2: lea r12, [rax + 0xd8]
474bf9: jmp 0x474ba9
474bfb: nop dword ptr [rax + rax]
474c00: endbr64 
474c04: push r12
474c06: push rbp
474c07: mov rbp, rdi
474c0a: mov edi, 0x2000
474c0f: push rbx
474c10: call 0x426410
474c15: test rax, rax
474c18: je 0x474c78
474c1a: mov rdx, qword ptr [rbp + 0xa0]
474c21: mov rbx, rax
474c24: lea r12, [rax + 0x8000]
474c2b: mov eax, dword ptr [rbp + 0x74]
474c2e: mov rdi, qword ptr [rdx + 0x30]
474c32: test rdi, rdi
474c35: je 0x474c3b
474c37: test al, 8
474c39: je 0x474c60
474c3b: movq xmm0, rbx
474c40: movq xmm1, r12
474c45: and eax, 0xfffffff7
474c48: punpcklqdq xmm0, xmm1
474c4c: movups xmmword ptr [rdx + 0x30], xmm0
474c50: pop rbx
474c51: mov dword ptr [rbp + 0x74], eax
474c54: mov eax, 1
474c59: pop rbp
474c5a: pop r12
474c5c: ret 
474c5d: nop dword ptr [rax]
474c60: call 0x426a00
474c65: mov rdx, qword ptr [rbp + 0xa0]
474c6c: mov eax, dword ptr [rbp + 0x74]
474c6f: jmp 0x474c3b
474c71: nop dword ptr [rax]
474c78: pop rbx
474c79: mov eax, 0xffffffff
474c7e: pop rbp
474c7f: pop r12
474c81: ret 
474c82: nop word ptr cs:[rax + rax]
474c8d: nop dword ptr [rax]
474c90: endbr64 
474c94: mov rax, qword ptr [rdi + 0xa0]
474c9b: push rbx
474c9c: mov rbx, rdi
474c9f: mov rdx, qword ptr [rax + 0x20]
474ca3: cmp rdx, qword ptr [rax + 0x18]
474ca7: jbe 0x474cc8
474ca9: mov rax, qword ptr [rax + 0xe0]
474cb0: mov esi, 0xffffffff
474cb5: call qword ptr [rax + 0x18]
474cb8: cmp eax, -1
474cbb: je 0x474cf3
474cbd: mov rax, qword ptr [rbx + 0xa0]
474cc4: mov rdx, qword ptr [rax + 0x20]
474cc8: mov ecx, dword ptr [rbx]
474cca: test ch, 1
474ccd: jne 0x474cf8
474ccf: mov rsi, qword ptr [rax + 0x30]
474cd3: mov qword ptr [rax + 0x10], rsi
474cd7: cmp qword ptr [rax + 8], rdx
474cdb: jae 0x474ce1
474cdd: mov qword ptr [rax + 8], rdx
474ce1: and ch, 0xf7
474ce4: mov qword ptr [rax], rdx
474ce7: mov qword ptr [rax + 0x28], rdx
474ceb: mov qword ptr [rax + 0x18], rdx
474cef: xor eax, eax
474cf1: mov dword ptr [rbx], ecx
474cf3: pop rbx
474cf4: ret 
474cf5: nop dword ptr [rax]
474cf8: mov rsi, qword ptr [rax + 0x48]
474cfc: mov qword ptr [rax + 0x10], rsi
474d00: jmp 0x474ce1
474d02: nop word ptr cs:[rax + rax]
474d0d: nop dword ptr [rax]
474d10: endbr64 
474d14: push rbp
474d15: push rbx
474d16: sub rsp, 8
474d1a: mov edx, dword ptr [rdi + 0xc0]
474d20: test edx, edx
474d22: js 0x474df9
474d28: mov rbp, rdi
474d2b: je 0x474e20
474d31: test dword ptr [rbp], 0x800
474d38: jne 0x474de8
474d3e: mov rax, qword ptr [rbp + 0xa0]
474d45: mov rcx, qword ptr [rax]
474d48: mov rdx, qword ptr [rax + 8]
474d4c: cmp rcx, rdx
474d4f: jb 0x474e08
474d55: mov ecx, dword ptr [rbp]
474d58: test ch, 1
474d5b: je 0x474d8e
474d5d: and ch, 0xfe
474d60: mov rsi, qword ptr [rax + 0x10]
474d64: mov dword ptr [rbp], ecx
474d67: mov rcx, qword ptr [rax + 0x50]
474d6b: mov qword ptr [rax + 0x50], rdx
474d6f: mov rdx, qword ptr [rax + 0x40]
474d73: mov qword ptr [rax + 8], rcx
474d77: mov qword ptr [rax + 0x10], rdx
474d7b: mov qword ptr [rax + 0x40], rsi
474d7f: cmp rcx, rdx
474d82: ja 0x474e50
474d88: mov qword ptr [rax], rdx
474d8b: mov rdx, rcx
474d8e: cmp qword ptr [rbp + 0x60], 0
474d93: je 0x474e60
474d99: lea rsi, [rbp + 0xa0]
474da0: lea rdi, [rbp + 0x60]
474da4: call 0x474280
474da9: test eax, eax
474dab: jne 0x474df9
474dad: mov rbx, qword ptr [rbp + 0xd8]
474db4: mov rdx, 0x4c1b60
474dbb: mov rax, 0x4c2208
474dc2: mov rsi, rbx
474dc5: sub rax, rdx
474dc8: sub rsi, rdx
474dcb: cmp rax, rsi
474dce: jbe 0x474e90
474dd4: mov rax, qword ptr [rbx + 0x28]
474dd8: add rsp, 8
474ddc: mov rdi, rbp
474ddf: pop rbx
474de0: pop rbp
474de1: jmp rax
474de3: nop dword ptr [rax + rax]
474de8: mov rdi, rbp
474deb: call 0x474c90
474df0: cmp eax, -1
474df3: jne 0x474d3e
474df9: add rsp, 8
474dfd: mov eax, 0xffffffff
474e02: pop rbx
474e03: pop rbp
474e04: ret 
474e05: nop dword ptr [rax]
474e08: lea rdx, [rcx + 4]
474e0c: mov qword ptr [rax], rdx
474e0f: mov eax, dword ptr [rcx]
474e11: add rsp, 8
474e15: pop rbx
474e16: pop rbp
474e17: ret 
474e18: nop dword ptr [rax + rax]
474e20: mov esi, 1
474e25: call 0x41a620
474e2a: cmp eax, 1
474e2d: jne 0x474df9
474e2f: mov eax, dword ptr [rbp + 0xc0]
474e35: test eax, eax
474e37: jne 0x474d31
474e3d: mov esi, 1
474e42: mov rdi, rbp
474e45: call 0x41a620
474e4a: jmp 0x474d31
474e4f: nop 
474e50: lea rcx, [rdx + 4]
474e54: mov qword ptr [rax], rcx
474e57: mov eax, dword ptr [rdx]
474e59: jmp 0x474e11
474e5b: nop dword ptr [rax + rax]
474e60: mov rdi, qword ptr [rax + 0x40]
474e64: test rdi, rdi
474e67: je 0x474dad
474e6d: call 0x426a00
474e72: mov rax, qword ptr [rbp + 0xa0]
474e79: pxor xmm0, xmm0
474e7d: mov qword ptr [rax + 0x50], 0
474e85: movups xmmword ptr [rax + 0x40], xmm0
474e89: jmp 0x474dad
474e8e: nop 
474e90: call 0x41b240
474e95: jmp 0x474dd4
474e9a: nop word ptr [rax + rax]
474ea0: endbr64 
474ea4: push rbp
474ea5: push rbx
474ea6: sub rsp, 8
474eaa: mov edx, dword ptr [rdi + 0xc0]
474eb0: test edx, edx
474eb2: js 0x474f81
474eb8: mov rbp, rdi
474ebb: je 0x474fa0
474ec1: test dword ptr [rbp], 0x800
474ec8: jne 0x474f70
474ece: mov rax, qword ptr [rbp + 0xa0]
474ed5: mov rcx, qword ptr [rax]
474ed8: mov rdx, qword ptr [rax + 8]
474edc: cmp rcx, rdx
474edf: jb 0x474f90
474ee5: mov ecx, dword ptr [rbp]
474ee8: test ch, 1
474eeb: je 0x474f1a
474eed: and ch, 0xfe
474ef0: mov rsi, qword ptr [rax + 0x50]
474ef4: mov dword ptr [rbp], ecx
474ef7: mov rcx, qword ptr [rax + 0x40]
474efb: mov qword ptr [rax + 0x50], rdx
474eff: mov rdx, qword ptr [rax + 0x10]
474f03: mov qword ptr [rax + 8], rsi
474f07: mov qword ptr [rax + 0x40], rdx
474f0b: mov rdx, rsi
474f0e: mov qword ptr [rax + 0x10], rcx
474f12: mov qword ptr [rax], rcx
474f15: cmp rsi, rcx
474f18: ja 0x474f90
474f1a: cmp qword ptr [rbp + 0x60], 0
474f1f: je 0x474fd0
474f25: lea rsi, [rbp + 0xa0]
474f2c: lea rdi, [rbp + 0x60]
474f30: call 0x474280
474f35: test eax, eax
474f37: jne 0x474f81
474f39: mov rbx, qword ptr [rbp + 0xd8]
474f40: mov rdx, 0x4c1b60
474f47: mov rax, 0x4c2208
474f4e: mov rsi, rbx
474f51: sub rax, rdx
474f54: sub rsi, rdx
474f57: cmp rax, rsi
474f5a: jbe 0x475000
474f60: mov rax, qword ptr [rbx + 0x20]
474f64: add rsp, 8
474f68: mov rdi, rbp
474f6b: pop rbx
474f6c: pop rbp
474f6d: jmp rax
474f6f: nop 
474f70: mov rdi, rbp
474f73: call 0x474c90
474f78: cmp eax, -1
474f7b: jne 0x474ece
474f81: add rsp, 8
474f85: mov eax, 0xffffffff
474f8a: pop rbx
474f8b: pop rbp
474f8c: ret 
474f8d: nop dword ptr [rax]
474f90: mov eax, dword ptr [rcx]
474f92: add rsp, 8
474f96: pop rbx
474f97: pop rbp
474f98: ret 
474f99: nop dword ptr [rax]
474fa0: mov esi, 1
474fa5: call 0x41a620
474faa: cmp eax, 1
474fad: jne 0x474f81
474faf: mov eax, dword ptr [rbp + 0xc0]
474fb5: test eax, eax
474fb7: jne 0x474ec1
474fbd: mov esi, 1
474fc2: mov rdi, rbp
474fc5: call 0x41a620
474fca: jmp 0x474ec1
474fcf: nop 
474fd0: cmp qword ptr [rbp + 0x48], 0
474fd5: je 0x474f39
474fdb: mov rdi, qword ptr [rax + 0x40]
474fdf: call 0x426a00
474fe4: mov rax, qword ptr [rbp + 0xa0]
474feb: pxor xmm0, xmm0
474fef: mov qword ptr [rax + 0x50], 0
474ff7: movups xmmword ptr [rax + 0x40], xmm0
474ffb: jmp 0x474f39
475000: call 0x41b240
475005: jmp 0x474f60
47500a: nop word ptr [rax + rax]
475010: endbr64 
475014: push r14
475016: push r13
475018: mov r13, rdi
47501b: push r12
47501d: mov r12, rdx
475020: push rbp
475021: mov rbp, rsi
475024: push rbx
475025: mov rbx, rdx
475028: nop dword ptr [rax + rax]
475030: mov rdx, qword ptr [r13 + 0xa0]
475037: mov rsi, qword ptr [rdx]
47503a: mov rax, qword ptr [rdx + 8]
47503e: sub rax, rsi
475041: test rax, rax
475044: jle 0x47506b
475046: sar rax, 2
47504a: mov r14, rax
47504d: cmp rax, rbx
475050: jbe 0x475058
475052: mov rax, rbx
475055: mov r14, rbx
475058: cmp rax, 0x14
47505c: jg 0x4751b0
475062: test rax, rax
475065: jne 0x475210
47506b: test rbx, rbx
47506e: je 0x475143
475074: mov edx, dword ptr [r13 + 0xc0]
47507b: test edx, edx
47507d: js 0x475140
475083: je 0x475158
475089: test dword ptr [r13], 0x800
475091: jne 0x475194
475097: mov rax, qword ptr [r13 + 0xa0]
47509e: mov rcx, qword ptr [rax]
4750a1: mov rdx, qword ptr [rax + 8]
4750a5: cmp rcx, rdx
4750a8: jb 0x475150
4750ae: mov ecx, dword ptr [r13]
4750b2: test ch, 1
4750b5: je 0x4750e5
4750b7: and ch, 0xfe
4750ba: mov rsi, qword ptr [rax + 0x50]
4750be: mov dword ptr [r13], ecx
4750c2: mov rcx, qword ptr [rax + 0x40]
4750c6: mov qword ptr [rax + 0x50], rdx
4750ca: mov rdx, qword ptr [rax + 0x10]
4750ce: mov qword ptr [rax + 8], rsi
4750d2: mov qword ptr [rax + 0x40], rdx
4750d6: mov rdx, rsi
4750d9: mov qword ptr [rax + 0x10], rcx
4750dd: mov qword ptr [rax], rcx
4750e0: cmp rsi, rcx
4750e3: ja 0x475150
4750e5: cmp qword ptr [r13 + 0x60], 0
4750ea: je 0x4751e0
4750f0: lea rsi, [r13 + 0xa0]
4750f7: lea rdi, [r13 + 0x60]
4750fb: call 0x474280
475100: test eax, eax
475102: jne 0x475140
475104: mov r14, qword ptr [r13 + 0xd8]
47510b: mov rdx, 0x4c1b60
475112: mov rax, 0x4c2208
475119: mov rdi, r14
47511c: sub rax, rdx
47511f: sub rdi, rdx
475122: cmp rax, rdi
475125: jbe 0x4752e0
47512b: mov rdi, r13
47512e: call qword ptr [r14 + 0x20]
475132: cmp eax, -1
475135: jne 0x475030
47513b: nop dword ptr [rax + rax]
475140: sub r12, rbx
475143: pop rbx
475144: mov rax, r12
475147: pop rbp
475148: pop r12
47514a: pop r13
47514c: pop r14
47514e: ret 
47514f: nop 
475150: mov eax, dword ptr [rcx]
475152: jmp 0x475132
475154: nop dword ptr [rax]
475158: mov esi, 1
47515d: mov rdi, r13
475160: call 0x41a620
475165: cmp eax, 1
475168: jne 0x475140
47516a: mov eax, dword ptr [r13 + 0xc0]
475171: test eax, eax
475173: jne 0x475089
475179: mov esi, 1
47517e: mov rdi, r13
475181: call 0x41a620
475186: test dword ptr [r13], 0x800
47518e: je 0x475097
475194: mov rdi, r13
475197: call 0x474c90
47519c: cmp eax, -1
47519f: jne 0x475097
4751a5: jmp 0x475140
4751a7: nop word ptr [rax + rax]
4751b0: mov rdx, r14
4751b3: mov rdi, rbp
4751b6: sub rbx, r14
4751b9: call 0x44f010
4751be: lea rdx, [r14*4]
4751c6: mov rbp, rax
4751c9: mov rax, qword ptr [r13 + 0xa0]
4751d0: add qword ptr [rax], rdx
4751d3: jmp 0x47506b
4751d8: nop dword ptr [rax + rax]
4751e0: cmp qword ptr [r13 + 0x48], 0
4751e5: je 0x475104
4751eb: mov rdi, qword ptr [rax + 0x40]
4751ef: call 0x426a00
4751f4: mov rax, qword ptr [r13 + 0xa0]
4751fb: pxor xmm1, xmm1
4751ff: mov qword ptr [rax + 0x50], 0
475207: movups xmmword ptr [rax + 0x40], xmm1
47520b: jmp 0x475104
475210: lea rdi, [rsi + 0xf]
475214: mov ecx, eax
475216: lea r8d, [rax - 1]
47521a: sub rdi, rbp
47521d: cmp rdi, 0x1e
475221: jbe 0x4752f0
475227: cmp r8d, 3
47522b: jbe 0x4752f0
475231: movdqu xmm0, xmmword ptr [rsi]
475235: shr ecx, 2
475238: movups xmmword ptr [rbp], xmm0
47523c: cmp ecx, 1
47523f: je 0x475280
475241: movdqu xmm2, xmmword ptr [rsi + 0x10]
475246: movups xmmword ptr [rbp + 0x10], xmm2
47524a: cmp ecx, 2
47524d: je 0x475280
47524f: movdqu xmm3, xmmword ptr [rsi + 0x20]
475254: movups xmmword ptr [rbp + 0x20], xmm3
475258: cmp ecx, 3
47525b: je 0x475280
47525d: movdqu xmm4, xmmword ptr [rsi + 0x30]
475262: movups xmmword ptr [rbp + 0x30], xmm4
475266: cmp ecx, 5
475269: jne 0x475280
47526b: movdqu xmm5, xmmword ptr [rsi + 0x40]
475270: mov edi, r8d
475273: movups xmmword ptr [rbp + 0x40], xmm5
475277: jmp 0x4752be
475279: nop dword ptr [rax]
475280: mov edi, eax
475282: mov r10d, r8d
475285: and edi, 0xfffffffc
475288: mov ecx, edi
47528a: sub r10d, edi
47528d: shl rcx, 2
475291: lea r9, [rbp + rcx]
475296: add rcx, rsi
475299: cmp eax, edi
47529b: je 0x47530d
47529d: mov eax, dword ptr [rcx]
47529f: mov edi, r8d
4752a2: mov dword ptr [r9], eax
4752a5: test r10d, r10d
4752a8: je 0x4752be
4752aa: mov eax, dword ptr [rcx + 4]
4752ad: mov dword ptr [r9 + 4], eax
4752b1: cmp r10d, 1
4752b5: je 0x4752be
4752b7: mov eax, dword ptr [rcx + 8]
4752ba: mov dword ptr [r9 + 8], eax
4752be: lea rax, [rdi*4 + 4]
4752c6: sub rbx, r14
4752c9: add rsi, rax
4752cc: add rbp, rax
4752cf: mov qword ptr [rdx], rsi
4752d2: jmp 0x47506b
4752d7: nop word ptr [rax + rax]
4752e0: call 0x41b240
4752e5: jmp 0x47512b
4752ea: nop word ptr [rax + rax]
4752f0: mov edi, r8d
4752f3: xor eax, eax
4752f5: nop dword ptr [rax]
4752f8: mov ecx, dword ptr [rsi + rax*4]
4752fb: mov dword ptr [rbp + rax*4], ecx
4752ff: mov rcx, rax
475302: add rax, 1
475306: cmp rcx, rdi
475309: jne 0x4752f8
47530b: jmp 0x4752be
47530d: mov edi, r8d
475310: jmp 0x4752be
475312: nop word ptr cs:[rax + rax]
47531d: nop dword ptr [rax]
475320: endbr64 
475324: push rbx
475325: mov edx, dword ptr [rdi]
475327: mov rbx, rdi
47532a: mov rax, qword ptr [rdi + 0xa0]
475331: mov rdi, qword ptr [rax + 0x40]
475335: test dh, 1
475338: je 0x475361
47533a: and dh, 0xfe
47533d: mov rcx, qword ptr [rax + 0x50]
475341: mov dword ptr [rbx], edx
475343: mov rdx, qword ptr [rax + 8]
475347: mov qword ptr [rax + 8], rcx
47534b: mov qword ptr [rax + 0x50], rdx
47534f: mov rdx, qword ptr [rax + 0x10]
475353: mov qword ptr [rax], rdi
475356: mov qword ptr [rax + 0x40], rdx
47535a: mov qword ptr [rax + 0x10], rdi
47535e: mov rdi, rdx
475361: call 0x426a00
475366: mov rax, qword ptr [rbx + 0xa0]
47536d: pxor xmm0, xmm0
475371: mov qword ptr [rax + 0x50], 0
475379: movups xmmword ptr [rax + 0x40], xmm0
47537d: pop rbx
47537e: ret 
47537f: nop 
475380: endbr64 
475384: push rbp
475385: push rbx
475386: mov rbx, rdi
475389: sub rsp, 0x18
47538d: mov rax, qword ptr [rdi + 0xa0]
475394: mov rdx, qword ptr [rax]
475397: cmp rdx, qword ptr [rax + 0x10]
47539b: jbe 0x4753a2
47539d: cmp dword ptr [rdx - 4], esi
4753a0: je 0x4753e0
4753a2: mov rbp, qword ptr [rbx + 0xd8]
4753a9: mov rdx, 0x4c1b60
4753b0: mov rax, 0x4c2208
4753b7: mov rcx, rbp
4753ba: sub rax, rdx
4753bd: sub rcx, rdx
4753c0: cmp rax, rcx
4753c3: jbe 0x4753f0
4753c5: mov rdi, rbx
4753c8: call qword ptr [rbp + 0x30]
4753cb: cmp eax, -1
4753ce: je 0x4753d3
4753d0: and dword ptr [rbx], 0xffffffef
4753d3: add rsp, 0x18
4753d7: pop rbx
4753d8: pop rbp
4753d9: ret 
4753da: nop word ptr [rax + rax]
4753e0: sub rdx, 4
4753e4: mov qword ptr [rax], rdx
4753e7: mov eax, esi
4753e9: jmp 0x4753cb
4753eb: nop dword ptr [rax + rax]
4753f0: mov dword ptr [rsp + 0xc], esi
4753f4: call 0x41b240
4753f9: mov esi, dword ptr [rsp + 0xc]
4753fd: jmp 0x4753c5
4753ff: nop 
475400: endbr64 
475404: push rbp
475405: push rbx
475406: mov rbx, rdi
475409: sub rsp, 8
47540d: mov rax, qword ptr [rdi + 0xa0]
475414: mov rdx, qword ptr [rax]
475417: cmp rdx, qword ptr [rax + 0x10]
47541b: jbe 0x475440
47541d: lea rcx, [rdx - 4]
475421: mov qword ptr [rax], rcx
475424: mov eax, dword ptr [rdx - 4]
475427: cmp eax, -1
47542a: je 0x47542f
47542c: and dword ptr [rbx], 0xffffffef
47542f: add rsp, 8
475433: pop rbx
475434: pop rbp
475435: ret 
475436: nop word ptr cs:[rax + rax]
475440: mov rbp, qword ptr [rdi + 0xd8]
475447: mov rdx, 0x4c1b60
47544e: mov rax, 0x4c2208
475455: mov rsi, rbp
475458: sub rax, rdx
47545b: sub rsi, rdx
47545e: cmp rax, rsi
475461: jbe 0x475470
475463: mov esi, 0xffffffff
475468: mov rdi, rbx
47546b: call qword ptr [rbp + 0x30]
47546e: jmp 0x475427
475470: call 0x41b240
475475: jmp 0x475463
475477: nop word ptr [rax + rax]
475480: endbr64 
475484: movsxd rax, edx
475487: lea rcx, [rsi + rax*4]
47548b: mov rax, rcx
47548e: jmp 0x475499
475490: sub rax, 4
475494: cmp dword ptr [rax], 0xa
475497: je 0x4754a8
475499: cmp rax, rsi
47549c: ja 0x475490
47549e: lea eax, [rdx + rdi]
4754a1: ret 
4754a2: nop word ptr [rax + rax]
4754a8: sub rcx, rax
4754ab: sar rcx, 2
4754af: lea eax, [rcx - 1]
4754b2: ret 
4754b3: nop word ptr cs:[rax + rax]
4754be: nop 
4754c0: endbr64 
4754c4: push rbp
4754c5: mov rbp, rdi
4754c8: push rbx
4754c9: mov rbx, rsi
4754cc: sub rsp, 8
4754d0: mov edx, dword ptr [rsi]
4754d2: mov qword ptr [rdi + 8], rsi
4754d6: test dh, 8
4754d9: jne 0x475520
4754db: mov rcx, qword ptr [rbx + 0xa0]
4754e2: mov rax, qword ptr [rcx]
4754e5: and dh, 1
4754e8: je 0x475510
4754ea: sub rax, qword ptr [rcx + 8]
4754ee: sar rax, 2
4754f2: mov dword ptr [rbp + 0x10], eax
4754f5: mov rax, qword ptr [rbx + 0x60]
4754f9: mov qword ptr [rbp], rax
4754fd: mov qword ptr [rbx + 0x60], rbp
475501: add rsp, 8
475505: pop rbx
475506: pop rbp
475507: ret 
475508: nop dword ptr [rax + rax]
475510: sub rax, qword ptr [rcx + 0x10]
475514: sar rax, 2
475518: jmp 0x4754f2
47551a: nop word ptr [rax + rax]
475520: mov rdi, rsi
475523: call 0x474c90
475528: mov edx, dword ptr [rbx]
47552a: jmp 0x4754db
47552c: nop dword ptr [rax]
475530: endbr64 
475534: mov rax, qword ptr [rdi + 8]
475538: test rax, rax
47553b: je 0x47556e
47553d: mov rcx, qword ptr [rax + 0xa0]
475544: mov eax, dword ptr [rax]
475546: mov rdx, qword ptr [rcx]
475549: test ah, 1
47554c: jne 0x475560
47554e: mov eax, dword ptr [rdi + 0x10]
475551: sub rdx, qword ptr [rcx + 0x10]
475555: sar rdx, 2
475559: sub eax, edx
47555b: ret 
47555c: nop dword ptr [rax]
475560: mov eax, dword ptr [rdi + 0x10]
475563: sub rdx, qword ptr [rcx + 8]
475567: sar rdx, 2
47556b: sub eax, edx
47556d: ret 
47556e: mov eax, 0xffffffff
475573: ret 
475574: nop word ptr cs:[rax + rax]
47557f: nop 
475580: endbr64 
475584: cmp qword ptr [rsi + 8], rdi
475588: jne 0x475620
47558e: mov ecx, dword ptr [rdi]
475590: movsxd rdx, dword ptr [rsi + 0x10]
475594: mov rax, qword ptr [rdi + 0xa0]
47559b: mov esi, ecx
47559d: and esi, 0x100
4755a3: test edx, edx
4755a5: js 0x4755e0
4755a7: mov r8, qword ptr [rax + 0x10]
4755ab: test esi, esi
4755ad: je 0x4755d3
4755af: and ch, 0xfe
4755b2: mov rsi, qword ptr [rax + 0x50]
4755b6: mov dword ptr [rdi], ecx
4755b8: mov rcx, qword ptr [rax + 8]
4755bc: mov qword ptr [rax + 8], rsi
4755c0: mov qword ptr [rax + 0x50], rcx
4755c4: mov rcx, qword ptr [rax + 0x40]
4755c8: mov qword ptr [rax + 0x40], r8
4755cc: mov qword ptr [rax + 0x10], rcx
4755d0: mov r8, rcx
4755d3: lea rdx, [r8 + rdx*4]
4755d7: mov qword ptr [rax], rdx
4755da: xor eax, eax
4755dc: ret 
4755dd: nop dword ptr [rax]
4755e0: mov r8, qword ptr [rax + 8]
4755e4: test esi, esi
4755e6: jne 0x4755d3
4755e8: or ch, 1
4755eb: mov rsi, qword ptr [rax + 0x10]
4755ef: mov dword ptr [rdi], ecx
4755f1: mov rcx, qword ptr [rax + 0x50]
4755f5: mov rdi, qword ptr [rax + 0x40]
4755f9: mov qword ptr [rax + 0x50], r8
4755fd: mov r8, rcx
475600: mov qword ptr [rax + 8], rcx
475604: lea rdx, [r8 + rdx*4]
475608: mov qword ptr [rax + 0x10], rdi
47560c: mov qword ptr [rax + 0x40], rsi
475610: mov qword ptr [rax], rdx
475613: xor eax, eax
475615: ret 
475616: nop word ptr cs:[rax + rax]
475620: mov eax, 0xffffffff
475625: ret 
475626: nop word ptr cs:[rax + rax]
475630: endbr64 
475634: push rbx
475635: cmp qword ptr [rdi + 0x60], 0
47563a: mov rbx, rdi
47563d: je 0x475647
47563f: mov qword ptr [rdi + 0x60], 0
475647: cmp qword ptr [rbx + 0x48], 0
47564c: je 0x4756a3
47564e: mov rax, qword ptr [rbx + 0xa0]
475655: mov edx, dword ptr [rbx]
475657: mov rdi, qword ptr [rax + 0x40]
47565b: test dh, 1
47565e: je 0x475687
475660: and dh, 0xfe
475663: mov rcx, qword ptr [rax + 0x50]
475667: mov dword ptr [rbx], edx
475669: mov rdx, qword ptr [rax + 8]
47566d: mov qword ptr [rax + 8], rcx
475671: mov qword ptr [rax + 0x50], rdx
475675: mov rdx, qword ptr [rax + 0x10]
475679: mov qword ptr [rax], rdi
47567c: mov qword ptr [rax + 0x40], rdx
475680: mov qword ptr [rax + 0x10], rdi
475684: mov rdi, rdx
475687: call 0x426a00
47568c: mov rax, qword ptr [rbx + 0xa0]
475693: pxor xmm0, xmm0
475697: mov qword ptr [rax + 0x50], 0
47569f: movups xmmword ptr [rax + 0x40], xmm0
4756a3: pop rbx
4756a4: ret 
4756a5: nop word ptr cs:[rax + rax]
4756af: nop 
4756b0: endbr64 
4756b4: mov eax, dword ptr fs:[0x308]
4756bc: mov r11d, eax
4756bf: or r11d, 2
4756c3: cmp r11d, eax
4756c6: je 0x4756df
4756c8: lock cmpxchg dword ptr fs:[0x308], r11d
4756d3: jne 0x4756bc
4756d5: and r11d, 0xffffffbb
4756d9: cmp r11d, 0xa
4756dd: je 0x4756e0
4756df: ret 
4756e0: sub rsp, 8
4756e4: mov qword ptr fs:[0x630], 0xffffffffffffffff
4756f1: lock or dword ptr fs:[0x308], 0x10
4756fb: mov rdi, qword ptr fs:[0x300]
475704: call 0
475709: hlt 
47570a: nop word ptr [rax + rax]
475710: endbr64 
475714: test edi, 2
47571a: jne 0x475743
47571c: mov eax, dword ptr fs:[0x308]
475724: mov r11d, eax
475727: and r11d, 0xfffffffd
47572b: lock cmpxchg dword ptr fs:[0x308], r11d
475736: jne 0x475724
475738: mov eax, r11d
47573b: and eax, 0xc
47573e: cmp eax, 4
475741: je 0x475744
475743: ret 
475744: mov rdi, qword ptr fs:[0]
47574d: mov eax, 0xca
475752: xor r10, r10
475755: add rdi, 0x308
47575c: mov esi, 0x80
475761: syscall 
475763: mov eax, dword ptr fs:[0x308]
47576b: jmp 0x47573b
47576d: nop dword ptr [rax]
475770: endbr64 
475774: push r12
475776: push rbp
475777: mov rbp, rdi
47577a: sub rsp, 8
47577e: call 0x401030
475783: lea rdi, [rax + 1]
475787: mov r12, rax
47578a: call 0x426410
47578f: test rax, rax
475792: je 0x4757ae
475794: mov byte ptr [rax + r12], 0
475799: add rsp, 8
47579d: mov rdx, r12
4757a0: mov rsi, rbp
4757a3: mov rdi, rax
4757a6: pop rbp
4757a7: pop r12
4757a9: jmp 0x401060
4757ae: pop rdx
4757af: xor eax, eax
4757b1: pop rbp
4757b2: pop r12
4757b4: ret 
4757b5: nop word ptr cs:[rax + rax]
4757bf: nop 
4757c0: endbr64 
4757c4: movabs rdx, 0x10000000002
4757ce: movabs rax, 0x90000000002
4757d8: and rax, qword ptr [rip + 0x4d5a1]
4757df: cmp rax, rdx
4757e2: lea rdx, [rip + 0x11d7]
4757e9: lea rax, [rip + 0xed0]
4757f0: cmove rax, rdx
4757f4: ret 
4757f5: nop word ptr cs:[rax + rax]
4757ff: nop 
475800: endbr64 
475804: push r13
475806: mov r13, rsi
475809: push r12
47580b: mov r12, rdi
47580e: push rbp
47580f: mov rbp, rdx
475812: test rdi, rdi
475815: je 0x475870
475817: cmp byte ptr [r12], 0
47581c: je 0x475860
47581e: mov rdi, r12
475821: mov rsi, r13
475824: call 0x401170
475829: add r12, rax
47582c: cmp byte ptr [r12], 0
475831: je 0x475860
475833: mov rsi, r13
475836: mov rdi, r12
475839: call 0x401160
47583e: add rax, r12
475841: cmp byte ptr [rax], 0
475844: je 0x47584d
475846: mov byte ptr [rax], 0
475849: add rax, 1
47584d: mov qword ptr [rbp], rax
475851: mov rax, r12
475854: pop rbp
475855: pop r12
475857: pop r13
475859: ret 
47585a: nop word ptr [rax + rax]
475860: mov qword ptr [rbp], r12
475864: xor r12d, r12d
475867: pop rbp
475868: mov rax, r12
47586b: pop r12
47586d: pop r13
47586f: ret 
475870: mov r12, qword ptr [rdx]
475873: jmp 0x475817
475875: nop word ptr cs:[rax + rax]
47587f: nop 
475880: endbr64 
475884: movabs rdx, 0x10000000002
47588e: movabs rax, 0x90000000002
475898: and rax, qword ptr [rip + 0x4d4e1]
47589f: cmp rax, rdx
4758a2: lea rdx, [rip + 0xb47]
4758a9: lea rax, [rip + 0x810]
4758b0: cmove rax, rdx
4758b4: ret 
4758b5: nop word ptr cs:[rax + rax]
4758bf: nop 
4758c0: push r15
4758c2: push r14
4758c4: push r13
4758c6: mov r13, rdi
4758c9: push r12
4758cb: mov r12, rsi
4758ce: push rbp
4758cf: push rbx
4758d0: mov rbx, rdx
4758d3: sub rsp, 0x828
4758da: mov rax, qword ptr fs:[0x28]
4758e3: mov qword ptr [rsp + 0x818], rax
4758eb: xor eax, eax
4758ed: cmp rcx, 1
4758f1: jbe 0x475c2c
4758f7: xor esi, esi
4758f9: mov r8d, 1
4758ff: mov edx, 1
475904: mov r14, 0xffffffffffffffff
47590b: mov eax, 1
475910: jmp 0x47592f
475912: nop word ptr [rax + rax]
475918: mov r8, rax
47591b: mov rsi, rax
47591e: mov edx, 1
475923: sub r8, r14
475926: lea rax, [rsi + rdx]
47592a: cmp rcx, rax
47592d: jbe 0x47595f
47592f: lea rdi, [rbx + rdx]
475933: movzx r15d, byte ptr [rbx + rax]
475938: cmp byte ptr [rdi + r14], r15b
47593c: ja 0x475918
47593e: je 0x475ae0
475944: mov r14, rsi
475947: mov edx, 1
47594c: add rsi, 1
475950: mov r8d, 1
475956: lea rax, [rsi + rdx]
47595a: cmp rcx, rax
47595d: ja 0x47592f
47595f: xor esi, esi
475961: mov r10d, 1
475967: mov edx, 1
47596c: mov rdi, 0xffffffffffffffff
475973: mov eax, 1
475978: jmp 0x475997
47597a: nop word ptr [rax + rax]
475980: mov r10, rax
475983: mov rsi, rax
475986: mov edx, 1
47598b: sub r10, rdi
47598e: lea rax, [rdx + rsi]
475992: cmp rcx, rax
475995: jbe 0x4759c7
475997: lea r9, [rbx + rdx]
47599b: movzx r15d, byte ptr [rbx + rax]
4759a0: cmp byte ptr [r9 + rdi], r15b
4759a4: jb 0x475980
4759a6: je 0x475af8
4759ac: mov rdi, rsi
4759af: mov edx, 1
4759b4: add rsi, 1
4759b8: mov r10d, 1
4759be: lea rax, [rdx + rsi]
4759c2: cmp rcx, rax
4759c5: ja 0x475997
4759c7: lea rax, [rdi + 1]
4759cb: lea r15, [r14 + 1]
4759cf: cmp rax, r15
4759d2: jb 0x4759dd
4759d4: mov r14, rdi
4759d7: mov r8, r10
4759da: mov r15, rax
4759dd: movq xmm0, rcx
4759e2: lea rax, [rsp + 0x10]
4759e7: lea rdx, [rsp + 0x810]
4759ef: punpcklqdq xmm0, xmm0
4759f3: nop dword ptr [rax + rax]
4759f8: movaps xmmword ptr [rax], xmm0
4759fb: add rax, 0x10
4759ff: cmp rdx, rax
475a02: jne 0x4759f8
475a04: lea rbp, [rcx - 1]
475a08: lea r9, [rcx + rbx]
475a0c: mov rax, rbx
475a0f: lea rdi, [rbx + rbp]
475a13: test rcx, rcx
475a16: je 0x475a37
475a18: nop dword ptr [rax + rax]
475a20: movzx edx, byte ptr [rax]
475a23: mov rsi, rdi
475a26: sub rsi, rax
475a29: add rax, 1
475a2d: mov qword ptr [rsp + rdx*8 + 0x10], rsi
475a32: cmp r9, rax
475a35: jne 0x475a20
475a37: lea rsi, [rbx + r8]
475a3b: mov rdx, r15
475a3e: mov rdi, rbx
475a41: mov qword ptr [rsp + 8], rcx
475a46: mov qword ptr [rsp], r8
475a4a: call 0x4010e0
475a4f: mov rcx, qword ptr [rsp + 8]
475a54: mov r8, qword ptr [rsp]
475a58: sub r12, rcx
475a5b: test eax, eax
475a5d: jne 0x475b81
475a63: mov r9d, 1
475a69: xor edi, edi
475a6b: xor esi, esi
475a6d: sub rcx, r8
475a70: sub r9, r15
475a73: jmp 0x475a92
475a75: nop dword ptr [rax]
475a78: cmp rax, r8
475a7b: jae 0x475a84
475a7d: test rdi, rdi
475a80: cmovne rax, rcx
475a84: add rsi, rax
475a87: xor edi, edi
475a89: cmp rsi, r12
475a8c: ja 0x475b56
475a92: lea rdx, [r13 + rsi]
475a97: movzx eax, byte ptr [rdx + rbp]
475a9b: mov rax, qword ptr [rsp + rax*8 + 0x10]
475aa0: test rax, rax
475aa3: jne 0x475a78
475aa5: cmp rdi, r15
475aa8: mov rax, r15
475aab: cmovae rax, rdi
475aaf: cmp rax, rbp
475ab2: jb 0x475ac9
475ab4: jmp 0x475b10
475ab6: nop word ptr cs:[rax + rax]
475ac0: add rax, 1
475ac4: cmp rax, rbp
475ac7: jae 0x475b10
475ac9: movzx r11d, byte ptr [rdx + rax]
475ace: cmp byte ptr [rbx + rax], r11b
475ad2: je 0x475ac0
475ad4: add rsi, r9
475ad7: jmp 0x475a84
475ad9: nop dword ptr [rax]
475ae0: cmp r8, rdx
475ae3: je 0x475c12
475ae9: add rdx, 1
475aed: jmp 0x475926
475af2: nop word ptr [rax + rax]
475af8: cmp r10, rdx
475afb: je 0x475c1f
475b01: add rdx, 1
475b05: jmp 0x47598e
475b0a: nop word ptr [rax + rax]
475b10: mov rax, r14
475b13: mov r10, r15
475b16: cmp rdi, r15
475b19: jb 0x475b2f
475b1b: jmp 0x475b3a
475b1d: nop dword ptr [rax]
475b20: lea r11, [rax - 1]
475b24: mov r10, rax
475b27: cmp rdi, rax
475b2a: jae 0x475b3a
475b2c: mov rax, r11
475b2f: movzx r11d, byte ptr [rdx + rax]
475b34: cmp byte ptr [rbx + rax], r11b
475b38: je 0x475b20
475b3a: add rdi, 1
475b3e: cmp rdi, r10
475b41: ja 0x475c41
475b47: add rsi, r8
475b4a: mov rdi, rcx
475b4d: cmp rsi, r12
475b50: jbe 0x475a92
475b56: xor eax, eax
475b58: mov rcx, qword ptr [rsp + 0x818]
475b60: xor rcx, qword ptr fs:[0x28]
475b69: jne 0x475c49
475b6f: add rsp, 0x828
475b76: pop rbx
475b77: pop rbp
475b78: pop r12
475b7a: pop r13
475b7c: pop r14
475b7e: pop r15
475b80: ret 
475b81: sub rcx, r15
475b84: mov edi, 1
475b89: cmp rcx, r15
475b8c: cmovb rcx, r15
475b90: sub rdi, r15
475b93: lea rsi, [rcx + 1]
475b97: xor ecx, ecx
475b99: jmp 0x475ba8
475b9b: nop dword ptr [rax + rax]
475ba0: add rcx, rax
475ba3: cmp rcx, r12
475ba6: ja 0x475b56
475ba8: lea rdx, [r13 + rcx]
475bad: movzx eax, byte ptr [rdx + rbp]
475bb1: mov rax, qword ptr [rsp + rax*8 + 0x10]
475bb6: test rax, rax
475bb9: jne 0x475ba0
475bbb: mov rax, r15
475bbe: cmp r15, rbp
475bc1: jb 0x475bd1
475bc3: jmp 0x475be8
475bc5: nop dword ptr [rax]
475bc8: add rax, 1
475bcc: cmp rax, rbp
475bcf: jae 0x475be8
475bd1: movzx r8d, byte ptr [rdx + rax]
475bd6: cmp byte ptr [rbx + rax], r8b
475bda: je 0x475bc8
475bdc: add rcx, rdi
475bdf: jmp 0x475ba0
475be1: nop dword ptr [rax]
475be8: cmp r14, -1
475bec: je 0x475c41
475bee: mov rax, r14
475bf1: jmp 0x475c02
475bf3: nop dword ptr [rax + rax]
475bf8: sub rax, 1
475bfc: cmp rax, -1
475c00: je 0x475c41
475c02: movzx r10d, byte ptr [rdx + rax]
475c07: cmp byte ptr [rbx + rax], r10b
475c0b: je 0x475bf8
475c0d: add rcx, rsi
475c10: jmp 0x475ba3
475c12: add rsi, r8
475c15: mov edx, 1
475c1a: jmp 0x475926
475c1f: add rsi, r10
475c22: mov edx, 1
475c27: jmp 0x47598e
475c2c: mov r14, 0xffffffffffffffff
475c33: mov r8d, 1
475c39: xor r15d, r15d
475c3c: jmp 0x4759dd
475c41: mov rax, rdx
475c44: jmp 0x475b58
475c49: call 0x4547a0
475c4e: nop 
475c50: endbr64 
475c54: push r15
475c56: push r14
475c58: push r13
475c5a: push r12
475c5c: push rbp
475c5d: mov rbp, rdi
475c60: push rbx
475c61: sub rsp, 0x128
475c68: mov rax, qword ptr fs:[0x28]
475c71: mov qword ptr [rsp + 0x118], rax
475c79: xor eax, eax
475c7b: test rcx, rcx
475c7e: je 0x475e38
475c84: mov r15, rdx
475c87: mov rbx, rcx
475c8a: cmp rcx, 1
475c8e: je 0x475e3d
475c94: cmp rcx, rsi
475c97: ja 0x475e09
475c9d: mov r14, rsi
475ca0: sub r14, rcx
475ca3: add r14, rdi
475ca6: cmp rcx, 2
475caa: je 0x475e74
475cb0: cmp rcx, 0x100
475cb7: ja 0x475eca
475cbd: lea rdx, [rsp + 0x10]
475cc2: lea r13, [rcx - 1]
475cc6: xor eax, eax
475cc8: mov ecx, 0x20
475ccd: mov rdi, rdx
475cd0: rep stosq qword ptr [rdi], rax
475cd3: cmp r13, 3
475cd7: jbe 0x475ef3
475cdd: lea rcx, [rbx - 5]
475ce1: movzx eax, byte ptr [r15]
475ce5: mov edx, 1
475cea: and rcx, 0xfffffffffffffffe
475cee: add rcx, 3
475cf2: movzx esi, byte ptr [r15 + rdx]
475cf7: shl rax, 3
475cfb: mov rdi, rsi
475cfe: shl rsi, 3
475d02: sub rdi, rax
475d05: movzx eax, dil
475d09: mov byte ptr [rsp + rax + 0x10], dl
475d0d: movzx eax, byte ptr [r15 + rdx + 1]
475d13: mov rdi, rax
475d16: sub rdi, rsi
475d19: movzx esi, dil
475d1d: lea edi, [rdx + 1]
475d20: mov byte ptr [rsp + rsi + 0x10], dil
475d25: lea esi, [rdx + 2]
475d28: add rdx, 2
475d2c: cmp rcx, rdx
475d2f: jne 0x475cf2
475d31: movsxd rcx, esi
475d34: add rcx, 1
475d38: sub esi, ecx
475d3a: nop word ptr [rax + rax]
475d40: movzx eax, byte ptr [r15 + rdx]
475d45: movzx edx, byte ptr [r15 + rdx - 1]
475d4b: shl rdx, 3
475d4f: sub rax, rdx
475d52: lea edx, [rsi + rcx]
475d55: movzx eax, al
475d58: mov byte ptr [rsp + rax + 0x10], dl
475d5c: mov rdx, rcx
475d5f: add rcx, 1
475d63: cmp r13, rdx
475d66: ja 0x475d40
475d68: movzx edx, byte ptr [r15 + rbx - 2]
475d6e: movzx eax, byte ptr [r15 + rbx - 1]
475d74: mov rdi, r13
475d77: xor r12d, r12d
475d7a: sub rbx, 9
475d7e: shl rdx, 3
475d82: sub rax, rdx
475d85: movzx eax, al
475d88: movzx edx, byte ptr [rsp + rax + 0x10]
475d8d: mov byte ptr [rsp + rax + 0x10], r13b
475d92: sub rdi, rdx
475d95: mov qword ptr [rsp + 8], rdi
475d9a: cmp r14, rbp
475d9d: jb 0x475e09
475d9f: nop 
475da0: add rbp, r13
475da3: movzx edx, byte ptr [rbp - 1]
475da7: movzx eax, byte ptr [rbp]
475dab: shl rdx, 3
475daf: sub rax, rdx
475db2: movzx eax, al
475db5: movzx eax, byte ptr [rsp + rax + 0x10]
475dba: test rax, rax
475dbd: jne 0x475dc4
475dbf: cmp r14, rbp
475dc2: jae 0x475da0
475dc4: sub rbp, rax
475dc7: cmp r13, rax
475dca: ja 0x475d9a
475dcc: cmp r13, 0xe
475dd0: jbe 0x475ddd
475dd2: mov rax, qword ptr [rbp + r12]
475dd7: cmp qword ptr [r15 + r12], rax
475ddb: jne 0x475dff
475ddd: mov rdx, r13
475de0: mov rsi, r15
475de3: mov rdi, rbp
475de6: call 0x4010e0
475deb: test eax, eax
475ded: je 0x475e38
475def: lea rax, [r12 - 8]
475df4: cmp r12, 8
475df8: cmovb rax, rbx
475dfc: mov r12, rax
475dff: add rbp, qword ptr [rsp + 8]
475e04: cmp r14, rbp
475e07: jae 0x475da0
475e09: xor eax, eax
475e0b: mov rbx, qword ptr [rsp + 0x118]
475e13: xor rbx, qword ptr fs:[0x28]
475e1c: jne 0x475f07
475e22: add rsp, 0x128
475e29: pop rbx
475e2a: pop rbp
475e2b: pop r12
475e2d: pop r13
475e2f: pop r14
475e31: pop r15
475e33: ret 
475e34: nop dword ptr [rax]
475e38: mov rax, rbp
475e3b: jmp 0x475e0b
475e3d: mov rax, qword ptr [rsp + 0x118]
475e45: xor rax, qword ptr fs:[0x28]
475e4e: jne 0x475f07
475e54: movzx r8d, byte ptr [rdx]
475e58: add rsp, 0x128
475e5f: mov rdx, rsi
475e62: pop rbx
475e63: pop rbp
475e64: mov esi, r8d
475e67: pop r12
475e69: pop r13
475e6b: pop r14
475e6d: pop r15
475e6f: jmp 0x4010b0
475e74: movzx edi, byte ptr [rdx]
475e77: movzx eax, byte ptr [rdx + 1]
475e7b: lea rcx, [rbp + 1]
475e7f: movzx edx, byte ptr [rbp]
475e83: shl edi, 0x10
475e86: or edi, eax
475e88: movzx eax, byte ptr [rbp + 1]
475e8c: shl edx, 0x10
475e8f: or edx, eax
475e91: cmp r14, rcx
475e94: jb 0x475f02
475e96: cmp edi, edx
475e98: jne 0x475ea8
475e9a: jmp 0x475f02
475e9c: nop dword ptr [rax]
475ea0: cmp edi, edx
475ea2: je 0x475e0b
475ea8: mov rax, rcx
475eab: movzx esi, byte ptr [rcx + 1]
475eaf: shl edx, 0x10
475eb2: add rcx, 1
475eb6: or edx, esi
475eb8: cmp r14, rcx
475ebb: jae 0x475ea0
475ebd: cmp edi, edx
475ebf: jne 0x475e09
475ec5: jmp 0x475e0b
475eca: mov rax, qword ptr [rsp + 0x118]
475ed2: xor rax, qword ptr fs:[0x28]
475edb: jne 0x475f07
475edd: add rsp, 0x128
475ee4: pop rbx
475ee5: pop rbp
475ee6: pop r12
475ee8: pop r13
475eea: pop r14
475eec: pop r15
475eee: jmp 0x4758c0
475ef3: mov esi, 1
475ef8: mov edx, 1
475efd: jmp 0x475d31
475f02: mov rax, rbp
475f05: jmp 0x475ebd
475f07: call 0x4547a0
475f0c: nop dword ptr [rax]
475f10: endbr64 
475f14: push r14
475f16: push r13
475f18: mov r13d, esi
475f1b: push r12
475f1d: mov r12, rcx
475f20: push rbp
475f21: mov rbp, rdx
475f24: push rbx
475f25: mov rbx, rdi
475f28: call 0x401180
475f2d: test rax, rax
475f30: jne 0x475f50
475f32: mov qword ptr [rbp], 0
475f3a: xor eax, eax
475f3c: mov qword ptr [r12], 0
475f44: pop rbx
475f45: pop rbp
475f46: pop r12
475f48: pop r13
475f4a: pop r14
475f4c: ret 
475f4d: nop dword ptr [rax]
475f50: lea r14, [rax + 1]
475f54: mov rdi, r14
475f57: call 0x426410
475f5c: mov qword ptr [rbp], rax
475f60: test rax, rax
475f63: je 0x475fe2
475f65: mov rcx, rax
475f68: jmp 0x475f7f
475f6a: nop word ptr [rax + rax]
475f70: mov byte ptr [rcx], r8b
475f73: add rcx, 1
475f77: add rbx, 1
475f7b: test dl, dl
475f7d: je 0x475fa8
475f7f: movsx r8d, byte ptr [rbx]
475f83: mov edx, r8d
475f86: cmp r8d, r13d
475f89: jne 0x475f70
475f8b: cmp rax, rcx
475f8e: jae 0x475fc0
475f90: cmp byte ptr [rcx - 1], 0
475f94: je 0x475fc0
475f96: mov byte ptr [rcx], 0
475f99: add rbx, 1
475f9d: add rcx, 1
475fa1: test dl, dl
475fa3: jne 0x475f7f
475fa5: nop dword ptr [rax]
475fa8: test r14, r14
475fab: je 0x475fd0
475fad: pop rbx
475fae: xor eax, eax
475fb0: pop rbp
475fb1: mov qword ptr [r12], r14
475fb5: pop r12
475fb7: pop r13
475fb9: pop r14
475fbb: ret 
475fbc: nop dword ptr [rax]
475fc0: sub r14, 1
475fc4: jmp 0x475f77
475fc6: nop word ptr cs:[rax + rax]
475fd0: mov rdi, rax
475fd3: call 0x426a00
475fd8: mov qword ptr [rbp], 0
475fe0: jmp 0x475fad
475fe2: mov eax, 0xc
475fe7: jmp 0x475f44
475fec: nop dword ptr [rax]
475ff0: endbr64 
475ff4: push r14
475ff6: push r13
475ff8: mov r13, rdi
475ffb: mov rdi, rdx
475ffe: push r12
476000: mov r12d, ecx
476003: push rbp
476004: mov rbp, rsi
476007: push rbx
476008: mov rbx, rdx
47600b: call 0x401180
476010: xor r8d, r8d
476013: test rax, rax
476016: jne 0x476028
476018: pop rbx
476019: mov eax, r8d
47601c: pop rbp
47601d: pop r12
47601f: pop r13
476021: pop r14
476023: ret 
476024: nop dword ptr [rax]
476028: mov rsi, qword ptr [rbp]
47602c: lea r14, [rax + 1]
476030: mov rdi, qword ptr [r13]
476034: add rsi, r14
476037: call 0x427100
47603c: mov qword ptr [r13], rax
476040: test rax, rax
476043: je 0x4760a6
476045: add rax, qword ptr [rbp]
476049: mov rdx, rax
47604c: jmp 0x476062
47604e: nop 
476050: mov byte ptr [rdx], sil
476053: movzx eax, byte ptr [rbx]
476056: add rdx, 1
47605a: add rbx, 1
47605e: test al, al
476060: je 0x47608a
476062: movsx esi, byte ptr [rbx]
476065: mov eax, esi
476067: cmp esi, r12d
47606a: jne 0x476050
47606c: cmp qword ptr [r13], rdx
476070: jae 0x4760a0
476072: cmp byte ptr [rdx - 1], 0
476076: je 0x4760a0
476078: mov byte ptr [rdx], 0
47607b: movzx eax, byte ptr [rbx]
47607e: add rdx, 1
476082: add rbx, 1
476086: test al, al
476088: jne 0x476062
47608a: xor r8d, r8d
47608d: pop rbx
47608e: add qword ptr [rbp], r14
476092: mov eax, r8d
476095: pop rbp
476096: pop r12
476098: pop r13
47609a: pop r14
47609c: ret 
47609d: nop dword ptr [rax]
4760a0: sub r14, 1
4760a4: jmp 0x47605a
4760a6: mov r8d, 0xc
4760ac: jmp 0x476018
4760b1: nop word ptr cs:[rax + rax]
4760bb: nop dword ptr [rax + rax]
4760c0: endbr64 
4760c4: movd xmm1, esi
4760c8: mov ecx, edi
4760ca: punpcklbw xmm1, xmm1
4760ce: test rdx, rdx
4760d1: je 0x4763e0
4760d7: punpcklbw xmm1, xmm1
4760db: and ecx, 0x3f
4760de: pshufd xmm1, xmm1, 0
4760e3: cmp ecx, 0x30
4760e6: ja 0x476120
4760e8: movdqu xmm0, xmmword ptr [rdi]
4760ec: pcmpeqb xmm0, xmm1
4760f0: pmovmskb eax, xmm0
4760f4: test eax, eax
4760f6: jne 0x4763a0
4760fc: sub rdx, 0x10
476100: jbe 0x4763e0
476106: add rdi, 0x10
47610a: and ecx, 0xf
47610d: and rdi, 0xfffffffffffffff0
476111: add rdx, rcx
476114: sub rdx, 0x40
476118: jbe 0x4762d0
47611e: jmp 0x476170
476120: and ecx, 0xf
476123: and rdi, 0xfffffffffffffff0
476127: movdqa xmm0, xmmword ptr [rdi]
47612b: pcmpeqb xmm0, xmm1
47612f: pmovmskb eax, xmm0
476133: sar eax, cl
476135: test eax, eax
476137: je 0x476150
476139: bsf eax, eax
47613c: sub rdx, rax
47613f: jbe 0x4763e0
476145: add rax, rdi
476148: add rax, rcx
47614b: ret 
47614c: nop dword ptr [rax]
476150: neg rcx
476153: add rcx, 0x10
476157: sub rdx, rcx
47615a: jbe 0x4763e0
476160: add rdi, 0x10
476164: sub rdx, 0x40
476168: jbe 0x4762d0
47616e: nop 
476170: movdqa xmm0, xmmword ptr [rdi]
476174: pcmpeqb xmm0, xmm1
476178: pmovmskb eax, xmm0
47617c: test eax, eax
47617e: jne 0x476370
476184: movdqa xmm2, xmmword ptr [rdi + 0x10]
476189: pcmpeqb xmm2, xmm1
47618d: pmovmskb eax, xmm2
476191: test eax, eax
476193: jne 0x476380
476199: movdqa xmm3, xmmword ptr [rdi + 0x20]
47619e: pcmpeqb xmm3, xmm1
4761a2: pmovmskb eax, xmm3
4761a6: test eax, eax
4761a8: jne 0x476390
4761ae: movdqa xmm4, xmmword ptr [rdi + 0x30]
4761b3: pcmpeqb xmm4, xmm1
4761b7: add rdi, 0x40
4761bb: pmovmskb eax, xmm4
4761bf: test eax, eax
4761c1: jne 0x476360
4761c7: test rdi, 0x3f
4761ce: je 0x476240
4761d0: sub rdx, 0x40
4761d4: jbe 0x4762d0
4761da: movdqa xmm0, xmmword ptr [rdi]
4761de: pcmpeqb xmm0, xmm1
4761e2: pmovmskb eax, xmm0
4761e6: test eax, eax
4761e8: jne 0x476370
4761ee: movdqa xmm2, xmmword ptr [rdi + 0x10]
4761f3: pcmpeqb xmm2, xmm1
4761f7: pmovmskb eax, xmm2
4761fb: test eax, eax
4761fd: jne 0x476380
476203: movdqa xmm3, xmmword ptr [rdi + 0x20]
476208: pcmpeqb xmm3, xmm1
47620c: pmovmskb eax, xmm3
476210: test eax, eax
476212: jne 0x476390
476218: movdqa xmm3, xmmword ptr [rdi + 0x30]
47621d: pcmpeqb xmm3, xmm1
476221: pmovmskb eax, xmm3
476225: add rdi, 0x40
476229: test eax, eax
47622b: jne 0x476360
476231: mov rcx, rdi
476234: and rdi, 0xffffffffffffffc0
476238: and ecx, 0x3f
47623b: add rdx, rcx
47623e: nop 
476240: sub rdx, 0x40
476244: jbe 0x4762d0
47624a: movdqa xmm0, xmmword ptr [rdi]
47624e: movdqa xmm2, xmmword ptr [rdi + 0x10]
476253: movdqa xmm3, xmmword ptr [rdi + 0x20]
476258: movdqa xmm4, xmmword ptr [rdi + 0x30]
47625d: pcmpeqb xmm0, xmm1
476261: pcmpeqb xmm2, xmm1
476265: pcmpeqb xmm3, xmm1
476269: pcmpeqb xmm4, xmm1
47626d: pmaxub xmm3, xmm0
476271: pmaxub xmm4, xmm2
476275: pmaxub xmm4, xmm3
476279: pmovmskb eax, xmm4
47627d: add rdi, 0x40
476281: test eax, eax
476283: je 0x476240
476285: sub rdi, 0x40
476289: pmovmskb eax, xmm0
47628d: test eax, eax
47628f: jne 0x476370
476295: pmovmskb eax, xmm2
476299: test eax, eax
47629b: jne 0x476380
4762a1: movdqa xmm3, xmmword ptr [rdi + 0x20]
4762a6: pcmpeqb xmm3, xmm1
4762aa: pcmpeqb xmm1, xmmword ptr [rdi + 0x30]
4762af: pmovmskb eax, xmm3
4762b3: test eax, eax
4762b5: jne 0x476390
4762bb: pmovmskb eax, xmm1
4762bf: bsf eax, eax
4762c2: lea rax, [rdi + rax + 0x30]
4762c7: ret 
4762c8: nop dword ptr [rax + rax]
4762d0: add edx, 0x20
4762d3: jle 0x476330
4762d5: movdqa xmm0, xmmword ptr [rdi]
4762d9: pcmpeqb xmm0, xmm1
4762dd: pmovmskb eax, xmm0
4762e1: test eax, eax
4762e3: jne 0x476370
4762e9: movdqa xmm2, xmmword ptr [rdi + 0x10]
4762ee: pcmpeqb xmm2, xmm1
4762f2: pmovmskb eax, xmm2
4762f6: test eax, eax
4762f8: jne 0x476380
4762fe: movdqa xmm3, xmmword ptr [rdi + 0x20]
476303: pcmpeqb xmm3, xmm1
476307: pmovmskb eax, xmm3
47630b: test eax, eax
47630d: jne 0x4763c0
476313: sub edx, 0x10
476316: jle 0x4763e0
47631c: pcmpeqb xmm1, xmmword ptr [rdi + 0x30]
476321: pmovmskb eax, xmm1
476325: test eax, eax
476327: jne 0x4763d0
47632d: xor eax, eax
47632f: ret 
476330: add edx, 0x20
476333: movdqa xmm0, xmmword ptr [rdi]
476337: pcmpeqb xmm0, xmm1
47633b: pmovmskb eax, xmm0
47633f: test eax, eax
476341: jne 0x4763a0
476343: sub edx, 0x10
476346: jbe 0x4763e0
47634c: pcmpeqb xmm1, xmmword ptr [rdi + 0x10]
476351: pmovmskb eax, xmm1
476355: test eax, eax
476357: jne 0x4763b0
476359: xor eax, eax
47635b: ret 
47635c: nop dword ptr [rax]
476360: bsf eax, eax
476363: lea rax, [rax + rdi - 0x10]
476368: ret 
476369: nop dword ptr [rax]
476370: bsf eax, eax
476373: add rax, rdi
476376: ret 
476377: nop word ptr [rax + rax]
476380: bsf eax, eax
476383: lea rax, [rax + rdi + 0x10]
476388: ret 
476389: nop dword ptr [rax]
476390: bsf eax, eax
476393: lea rax, [rax + rdi + 0x20]
476398: ret 
476399: nop dword ptr [rax]
4763a0: bsf eax, eax
4763a3: sub rdx, rax
4763a6: jbe 0x4763e0
4763a8: add rax, rdi
4763ab: ret 
4763ac: nop dword ptr [rax]
4763b0: bsf eax, eax
4763b3: sub rdx, rax
4763b6: jbe 0x4763e0
4763b8: lea rax, [rdi + rax + 0x10]
4763bd: ret 
4763be: nop 
4763c0: bsf eax, eax
4763c3: sub rdx, rax
4763c6: jbe 0x4763e0
4763c8: lea rax, [rdi + rax + 0x20]
4763cd: ret 
4763ce: nop 
4763d0: bsf eax, eax
4763d3: sub rdx, rax
4763d6: jbe 0x4763e0
4763d8: lea rax, [rdi + rax + 0x30]
4763dd: ret 
4763de: nop 
4763e0: xor eax, eax
4763e2: ret 
4763e3: nop word ptr cs:[rax + rax]
4763ed: nop dword ptr [rax]
4763f0: endbr64 
4763f4: test rdx, rdx
4763f7: je 0x476653
4763fd: mov ecx, edi
4763ff: vmovd xmm0, esi
476403: vpbroadcastb ymm0, xmm0
476408: and ecx, 0x3f
47640b: cmp ecx, 0x20
47640e: ja 0x476450
476410: vpcmpeqb ymm1, ymm0, ymmword ptr [rdi]
476414: vpmovmskb eax, ymm1
476418: test eax, eax
47641a: jne 0x4765e0
476420: sub rdx, 0x20
476424: jbe 0x476650
47642a: add rdi, 0x20
47642e: and ecx, 0x1f
476431: and rdi, 0xffffffffffffffe0
476435: add rdx, rcx
476438: sub rdx, 0x80
47643f: jbe 0x47654b
476445: jmp 0x4764a1
476447: nop word ptr [rax + rax]
476450: and ecx, 0x1f
476453: and rdi, 0xffffffffffffffe0
476457: vpcmpeqb ymm1, ymm0, ymmword ptr [rdi]
47645b: vpmovmskb eax, ymm1
47645f: sar eax, cl
476461: test eax, eax
476463: je 0x476480
476465: tzcnt eax, eax
476469: cmp rdx, rax
47646c: jbe 0x476650
476472: add rax, rdi
476475: add rax, rcx
476478: vzeroupper 
47647b: ret 
47647c: nop dword ptr [rax]
476480: neg rcx
476483: add rcx, 0x20
476487: sub rdx, rcx
47648a: jbe 0x476650
476490: add rdi, 0x20
476494: sub rdx, 0x80
47649b: jbe 0x47654b
4764a1: vpcmpeqb ymm1, ymm0, ymmword ptr [rdi]
4764a5: vpmovmskb eax, ymm1
4764a9: test eax, eax
4764ab: jne 0x476660
4764b1: vpcmpeqb ymm1, ymm0, ymmword ptr [rdi + 0x20]
4764b6: vpmovmskb eax, ymm1
4764ba: test eax, eax
4764bc: jne 0x476670
4764c2: vpcmpeqb ymm1, ymm0, ymmword ptr [rdi + 0x40]
4764c7: vpmovmskb eax, ymm1
4764cb: test eax, eax
4764cd: jne 0x476680
4764d3: vpcmpeqb ymm1, ymm0, ymmword ptr [rdi + 0x60]
4764d8: vpmovmskb eax, ymm1
4764dc: test eax, eax
4764de: jne 0x4766ae
4764e4: add rdi, 0x80
4764eb: sub rdx, 0x80
4764f2: jbe 0x47654b
4764f4: mov rcx, rdi
4764f7: and ecx, 0x7f
4764fa: and rdi, 0xffffffffffffff80
4764fe: add rdx, rcx
476501: nop word ptr cs:[rax + rax]
47650c: nop dword ptr [rax]
476510: vpcmpeqb ymm1, ymm0, ymmword ptr [rdi]
476514: vpcmpeqb ymm2, ymm0, ymmword ptr [rdi + 0x20]
476519: vpcmpeqb ymm3, ymm0, ymmword ptr [rdi + 0x40]
47651e: vpcmpeqb ymm4, ymm0, ymmword ptr [rdi + 0x60]
476523: vpor ymm5, ymm2, ymm1
476527: vpor ymm6, ymm4, ymm3
47652b: vpor ymm5, ymm6, ymm5
47652f: vpmovmskb eax, ymm5
476533: test eax, eax
476535: jne 0x476690
47653b: add rdi, 0x80
476542: sub rdx, 0x80
476549: ja 0x476510
47654b: add edx, 0x40
47654e: jle 0x4765b0
476550: vpcmpeqb ymm1, ymm0, ymmword ptr [rdi]
476554: vpmovmskb eax, ymm1
476558: test eax, eax
47655a: jne 0x476660
476560: vpcmpeqb ymm1, ymm0, ymmword ptr [rdi + 0x20]
476565: vpmovmskb eax, ymm1
476569: test eax, eax
47656b: jne 0x476670
476571: vpcmpeqb ymm1, ymm0, ymmword ptr [rdi + 0x40]
476576: vpmovmskb eax, ymm1
47657a: test eax, eax
47657c: jne 0x476610
476582: sub edx, 0x20
476585: jle 0x476650
47658b: vpcmpeqb ymm1, ymm0, ymmword ptr [rdi + 0x60]
476590: vpmovmskb eax, ymm1
476594: test eax, eax
476596: jne 0x476630
47659c: xor eax, eax
47659e: vzeroupper 
4765a1: ret 
4765a2: nop word ptr cs:[rax + rax]
4765ad: nop dword ptr [rax]
4765b0: add edx, 0x40
4765b3: vpcmpeqb ymm1, ymm0, ymmword ptr [rdi]
4765b7: vpmovmskb eax, ymm1
4765bb: test eax, eax
4765bd: jne 0x4765e0
4765bf: sub edx, 0x20
4765c2: jle 0x476650
4765c8: vpcmpeqb ymm1, ymm0, ymmword ptr [rdi + 0x20]
4765cd: vpmovmskb eax, ymm1
4765d1: test eax, eax
4765d3: jne 0x4765f0
4765d5: xor eax, eax
4765d7: vzeroupper 
4765da: ret 
4765db: nop dword ptr [rax + rax]
4765e0: tzcnt eax, eax
4765e4: cmp rdx, rax
4765e7: jbe 0x476650
4765e9: add rax, rdi
4765ec: vzeroupper 
4765ef: ret 
4765f0: tzcnt eax, eax
4765f4: cmp rdx, rax
4765f7: jbe 0x476650
4765f9: add rax, 0x20
4765fd: add rax, rdi
476600: vzeroupper 
476603: ret 
476604: nop word ptr cs:[rax + rax]
47660f: nop 
476610: tzcnt eax, eax
476614: cmp rdx, rax
476617: jbe 0x476650
476619: add rax, 0x40
47661d: add rax, rdi
476620: vzeroupper 
476623: ret 
476624: nop word ptr cs:[rax + rax]
47662f: nop 
476630: tzcnt eax, eax
476634: cmp rdx, rax
476637: jbe 0x476650
476639: add rax, 0x60
47663d: add rax, rdi
476640: vzeroupper 
476643: ret 
476644: nop word ptr cs:[rax + rax]
47664f: nop 
476650: vzeroupper 
476653: xor eax, eax
476655: ret 
476656: nop word ptr cs:[rax + rax]
476660: tzcnt eax, eax
476664: add rax, rdi
476667: vzeroupper 
47666a: ret 
47666b: nop dword ptr [rax + rax]
476670: tzcnt eax, eax
476674: add rax, 0x20
476678: add rax, rdi
47667b: vzeroupper 
47667e: ret 
47667f: nop 
476680: tzcnt eax, eax
476684: add rax, 0x40
476688: add rax, rdi
47668b: vzeroupper 
47668e: ret 
47668f: nop 
476690: vpmovmskb eax, ymm1
476694: test eax, eax
476696: jne 0x476660
476698: vpmovmskb eax, ymm2
47669c: test eax, eax
47669e: jne 0x476670
4766a0: vpmovmskb eax, ymm3
4766a4: test eax, eax
4766a6: jne 0x476680
4766a8: vpmovmskb eax, ymm4
4766ac: test eax, eax
4766ae: tzcnt eax, eax
4766b2: add rax, 0x60
4766b6: add rax, rdi
4766b9: vzeroupper 
4766bc: ret 
4766bd: nop dword ptr [rax]
4766c0: endbr64 
4766c4: movd xmm1, esi
4766c8: mov rax, rdi
4766cb: and eax, 0xfff
4766d0: punpcklbw xmm1, xmm1
4766d4: cmp rax, 0xfc0
4766da: punpcklwd xmm1, xmm1
4766de: pshufd xmm1, xmm1, 0
4766e3: ja 0x4768f0
4766e9: movdqu xmm0, xmmword ptr [rdi]
4766ed: pxor xmm2, xmm2
4766f1: movdqa xmm3, xmm0
4766f5: pcmpeqb xmm0, xmm1
4766f9: pcmpeqb xmm3, xmm2
4766fd: pmovmskb ecx, xmm0
476701: pmovmskb edx, xmm3
476705: test rdx, rdx
476708: je 0x476730
47670a: lea rax, [rdx - 1]
47670e: xor rax, rdx
476711: and rax, rcx
476714: je 0x4768e0
47671a: bsr rax, rax
47671e: add rax, rdi
476721: ret 
476722: nop word ptr cs:[rax + rax]
47672d: nop dword ptr [rax]
476730: movdqu xmm4, xmmword ptr [rdi + 0x10]
476735: movdqa xmm5, xmm4
476739: movdqu xmm3, xmmword ptr [rdi + 0x20]
47673e: pcmpeqb xmm4, xmm1
476742: pcmpeqb xmm5, xmm2
476746: movdqu xmm0, xmmword ptr [rdi + 0x30]
47674b: pmovmskb edx, xmm5
47674f: movdqa xmm5, xmm3
476753: pcmpeqb xmm3, xmm1
476757: pcmpeqb xmm5, xmm2
47675b: pcmpeqb xmm2, xmm0
47675f: shl rdx, 0x10
476763: pmovmskb r8d, xmm3
476768: pmovmskb eax, xmm5
47676c: pmovmskb esi, xmm2
476770: shl r8, 0x20
476774: shl rax, 0x20
476778: pcmpeqb xmm0, xmm1
47677c: or rax, rdx
47677f: mov rdx, rsi
476782: pmovmskb esi, xmm4
476786: shl rdx, 0x30
47678a: shl rsi, 0x10
47678e: or rsi, r8
476791: or rsi, rcx
476794: pmovmskb ecx, xmm0
476798: shl rcx, 0x30
47679c: or rsi, rcx
47679f: or rax, rdx
4767a2: je 0x4767c0
4767a4: lea rcx, [rax - 1]
4767a8: xor rcx, rax
4767ab: and rsi, rcx
4767ae: je 0x4768e0
4767b4: bsr rsi, rsi
4767b8: lea rax, [rdi + rsi]
4767bc: ret 
4767bd: nop dword ptr [rax]
4767c0: test rsi, rsi
4767c3: mov rcx, rdi
4767c6: je 0x4768d0
4767cc: add rdi, 0x40
4767d0: pxor xmm7, xmm7
4767d4: and rdi, 0xffffffffffffffc0
4767d8: jmp 0x4767ef
4767da: nop word ptr [rax + rax]
4767e0: test rdx, rdx
4767e3: cmovne rsi, rdx
4767e7: cmovne rcx, rdi
4767eb: add rdi, 0x40
4767ef: movdqa xmm3, xmmword ptr [rdi + 0x20]
4767f4: pxor xmm6, xmm6
4767f8: movdqa xmm2, xmmword ptr [rdi + 0x30]
4767fd: movdqa xmm0, xmm3
476801: movdqa xmm4, xmmword ptr [rdi + 0x10]
476806: pminub xmm0, xmm2
47680a: movdqa xmm5, xmmword ptr [rdi]
47680e: pminub xmm0, xmm4
476812: pminub xmm0, xmm5
476816: pcmpeqb xmm0, xmm7
47681a: pmovmskb eax, xmm0
47681e: movdqa xmm0, xmm5
476822: pcmpeqb xmm0, xmm1
476826: pmovmskb r9d, xmm0
47682b: movdqa xmm0, xmm4
47682f: pcmpeqb xmm0, xmm1
476833: pmovmskb edx, xmm0
476837: movdqa xmm0, xmm3
47683b: pcmpeqb xmm0, xmm1
47683f: shl rdx, 0x10
476843: pmovmskb r10d, xmm0
476848: movdqa xmm0, xmm2
47684c: pcmpeqb xmm0, xmm1
476850: shl r10, 0x20
476854: or rdx, r10
476857: pmovmskb r8d, xmm0
47685c: or rdx, r9
47685f: shl r8, 0x30
476863: or rdx, r8
476866: test eax, eax
476868: je 0x4767e0
47686e: pcmpeqb xmm4, xmm6
476872: pcmpeqb xmm3, xmm6
476876: pcmpeqb xmm5, xmm6
47687a: pmovmskb eax, xmm4
47687e: pmovmskb r10d, xmm3
476883: pcmpeqb xmm2, xmm6
476887: pmovmskb r9d, xmm5
47688c: shl r10, 0x20
476890: shl rax, 0x10
476894: pmovmskb r8d, xmm2
476899: or rax, r10
47689c: or rax, r9
47689f: shl r8, 0x30
4768a3: or rax, r8
4768a6: lea r8, [rax - 1]
4768aa: xor r8, rax
4768ad: and rdx, r8
4768b0: cmovne rcx, rdi
4768b4: cmovne rsi, rdx
4768b8: bsr rsi, rsi
4768bc: lea rax, [rcx + rsi]
4768c0: ret 
4768c1: nop word ptr cs:[rax + rax]
4768cc: nop dword ptr [rax]
4768d0: mov esi, 1
4768d5: xor ecx, ecx
4768d7: jmp 0x4767cc
4768dc: nop dword ptr [rax]
4768e0: xor eax, eax
4768e2: ret 
4768e3: nop word ptr cs:[rax + rax]
4768ee: nop 
4768f0: mov rax, rdi
4768f3: pxor xmm0, xmm0
4768f7: and rax, 0xffffffffffffffc0
4768fb: movdqu xmm5, xmmword ptr [rax]
4768ff: movdqa xmm6, xmm5
476903: movdqu xmm4, xmmword ptr [rax + 0x10]
476908: pcmpeqb xmm5, xmm1
47690c: pcmpeqb xmm6, xmm0
476910: movdqu xmm3, xmmword ptr [rax + 0x20]
476915: pmovmskb esi, xmm6
476919: movdqa xmm6, xmm4
47691d: movdqu xmm2, xmmword ptr [rax + 0x30]
476922: pcmpeqb xmm4, xmm1
476926: pcmpeqb xmm6, xmm0
47692a: pmovmskb edx, xmm6
47692e: movdqa xmm6, xmm3
476932: pcmpeqb xmm3, xmm1
476936: pcmpeqb xmm6, xmm0
47693a: pcmpeqb xmm0, xmm2
47693e: shl rdx, 0x10
476942: pmovmskb r9d, xmm3
476947: pmovmskb r8d, xmm6
47694c: pmovmskb ecx, xmm0
476950: shl r9, 0x20
476954: shl r8, 0x20
476958: pcmpeqb xmm2, xmm1
47695c: or rdx, r8
47695f: shl rcx, 0x30
476963: pmovmskb r8d, xmm5
476968: or rdx, rsi
47696b: pmovmskb esi, xmm4
47696f: or rdx, rcx
476972: pmovmskb ecx, xmm2
476976: shl rsi, 0x10
47697a: shl rcx, 0x30
47697e: or rsi, r9
476981: or rsi, r8
476984: or rsi, rcx
476987: mov ecx, edi
476989: sub ecx, eax
47698b: shr rdx, cl
47698e: shr rsi, cl
476991: test rdx, rdx
476994: je 0x4767c0
47699a: lea rax, [rdx - 1]
47699e: xor rax, rdx
4769a1: and rsi, rax
4769a4: je 0x4768e0
4769aa: bsr rax, rsi
4769ae: add rax, rdi
4769b1: ret 
4769b2: nop word ptr cs:[rax + rax]
4769bc: nop dword ptr [rax]
4769c0: endbr64 
4769c4: movd xmm4, esi
4769c8: mov ecx, edi
4769ca: vpbroadcastb ymm4, xmm4
4769cf: vpxor ymm0, ymm0, ymm0
4769d3: and ecx, 0x3f
4769d6: cmp ecx, 0x20
4769d9: ja 0x476a30
4769db: vmovdqu ymm1, ymmword ptr [rdi]
4769df: vpcmpeqb ymm2, ymm0, ymm1
4769e3: vpcmpeqb ymm3, ymm4, ymm1
4769e7: vpmovmskb ecx, ymm2
4769eb: vpmovmskb eax, ymm3
4769ef: add rdi, 0x20
4769f3: test eax, eax
4769f5: jne 0x476a10
4769f7: test ecx, ecx
4769f9: jne 0x476b80
4769ff: and rdi, 0xffffffffffffffe0
476a03: xor edx, edx
476a05: jmp 0x476a80
476a07: nop word ptr [rax + rax]
476a10: test ecx, ecx
476a12: jne 0x476b55
476a18: mov edx, eax
476a1a: mov rsi, rdi
476a1d: and rdi, 0xffffffffffffffe0
476a21: jmp 0x476a80
476a23: nop word ptr cs:[rax + rax]
476a2e: nop 
476a30: and ecx, 0x1f
476a33: and rdi, 0xffffffffffffffe0
476a37: vmovdqa ymm1, ymmword ptr [rdi]
476a3b: vpcmpeqb ymm2, ymm0, ymm1
476a3f: vpcmpeqb ymm3, ymm4, ymm1
476a43: vpmovmskb edx, ymm2
476a47: vpmovmskb eax, ymm3
476a4b: shr edx, cl
476a4d: shr eax, cl
476a4f: add rdi, 0x20
476a53: test eax, eax
476a55: jne 0x476a70
476a57: test edx, edx
476a59: jne 0x476b80
476a5f: jmp 0x476a80
476a61: nop word ptr cs:[rax + rax]
476a6c: nop dword ptr [rax]
476a70: test edx, edx
476a72: jne 0x476b50
476a78: mov edx, eax
476a7a: lea rsi, [rdi + rcx]
476a7e: nop 
476a80: vmovdqa ymm1, ymmword ptr [rdi]
476a84: vpcmpeqb ymm2, ymm0, ymm1
476a88: add rdi, 0x20
476a8c: vpcmpeqb ymm3, ymm4, ymm1
476a90: vpmovmskb ecx, ymm2
476a94: vpmovmskb eax, ymm3
476a98: or ecx, eax
476a9a: jne 0x476af0
476a9c: vmovdqa ymm1, ymmword ptr [rdi]
476aa0: vpcmpeqb ymm2, ymm0, ymm1
476aa4: add rdi, 0x20
476aa8: vpcmpeqb ymm3, ymm4, ymm1
476aac: vpmovmskb ecx, ymm2
476ab0: vpmovmskb eax, ymm3
476ab4: or ecx, eax
476ab6: jne 0x476af0
476ab8: vmovdqa ymm1, ymmword ptr [rdi]
476abc: vpcmpeqb ymm2, ymm0, ymm1
476ac0: add rdi, 0x20
476ac4: vpcmpeqb ymm3, ymm4, ymm1
476ac8: vpmovmskb ecx, ymm2
476acc: vpmovmskb eax, ymm3
476ad0: or ecx, eax
476ad2: jne 0x476af0
476ad4: vmovdqa ymm1, ymmword ptr [rdi]
476ad8: vpcmpeqb ymm2, ymm0, ymm1
476adc: add rdi, 0x20
476ae0: vpcmpeqb ymm3, ymm4, ymm1
476ae4: vpmovmskb ecx, ymm2
476ae8: vpmovmskb eax, ymm3
476aec: or ecx, eax
476aee: je 0x476a80
476af0: test eax, eax
476af2: jne 0x476b10
476af4: test edx, edx
476af6: je 0x476b80
476afc: mov eax, edx
476afe: mov rdi, rsi
476b01: bsr eax, eax
476b04: lea rax, [rdi + rax - 0x20]
476b09: vzeroupper 
476b0c: ret 
476b0d: nop dword ptr [rax]
476b10: vpmovmskb ecx, ymm2
476b14: test ecx, ecx
476b16: jne 0x476b30
476b18: mov edx, eax
476b1a: mov rsi, rdi
476b1d: jmp 0x476a80
476b22: nop word ptr cs:[rax + rax]
476b2d: nop dword ptr [rax]
476b30: mov r8d, ecx
476b33: sub r8d, 1
476b37: xor r8d, ecx
476b3a: and eax, r8d
476b3d: test eax, eax
476b3f: je 0x476af4
476b41: bsr eax, eax
476b44: lea rax, [rdi + rax - 0x20]
476b49: vzeroupper 
476b4c: ret 
476b4d: nop dword ptr [rax]
476b50: add rdi, rcx
476b53: mov ecx, edx
476b55: mov r8d, ecx
476b58: sub r8d, 1
476b5c: xor r8d, ecx
476b5f: and eax, r8d
476b62: test eax, eax
476b64: je 0x476b80
476b66: bsr eax, eax
476b69: lea rax, [rdi + rax - 0x20]
476b6e: vzeroupper 
476b71: ret 
476b72: nop word ptr cs:[rax + rax]
476b7d: nop dword ptr [rax]
476b80: xor eax, eax
476b82: vzeroupper 
476b85: ret 
476b86: nop word ptr cs:[rax + rax]
476b90: endbr64 
476b94: movabs rdx, 0x10000000002
476b9e: movabs rax, 0x90000000002
476ba8: and rax, qword ptr [rip + 0x4c1d1]
476baf: cmp rax, rdx
476bb2: lea rdx, [rip + 0xb57]
476bb9: lea rax, [rip + 0x8b0]
476bc0: cmove rax, rdx
476bc4: ret 
476bc5: nop word ptr cs:[rax + rax]
476bcf: nop 
476bd0: endbr64 
476bd4: movabs rdx, 0x10000000002
476bde: movabs rax, 0x90000000002
476be8: and rax, qword ptr [rip + 0x4c191]
476bef: cmp rax, rdx
476bf2: lea rdx, [rip + 0x5a7]
476bf9: lea rax, [rip + 0x270]
476c00: cmove rax, rdx
476c04: ret 
476c05: nop word ptr cs:[rax + rax]
476c0f: nop 
476c10: endbr64 
476c14: shl rdx, 2
476c18: jmp 0x401060
476c1d: nop dword ptr [rax]
476c20: endbr64 
476c24: shl rdx, 2
476c28: jmp 0x401040
476c2d: nop dword ptr [rax]
476c30: endbr64 
476c34: mov rdx, qword ptr [rip + 0x4c145]
476c3b: lea r8, [rip - 0x287f2]
476c42: movabs rax, 0x90000000002
476c4c: movabs rcx, 0x10000000002
476c56: and rax, rdx
476c59: cmp rax, rcx
476c5c: jne 0x476c81
476c5e: movabs rax, 0x400000000004
476c68: lea r8, [rip - 0x2851f]
476c6f: and rdx, rax
476c72: lea rax, [rip - 0x286a9]
476c79: cmp rdx, 4
476c7d: cmovne r8, rax
476c81: mov rax, r8
476c84: ret 
476c85: nop word ptr cs:[rax + rax]
476c8f: nop 
476c90: endbr64 
476c94: push r13
476c96: lea edx, [rdi + 0x80]
476c9c: push r12
476c9e: push rbp
476c9f: push rbx
476ca0: sub rsp, 0x68
476ca4: mov rax, qword ptr fs:[0x28]
476cad: mov qword ptr [rsp + 0x58], rax
476cb2: xor eax, eax
476cb4: cmp edx, 0x17f
476cba: ja 0x476d50
476cc0: mov ebx, edi
476cc2: cmp edi, -1
476cc5: je 0x476d50
476ccb: mov eax, edi
476ccd: test edi, 0xffffff80
476cd3: je 0x476d29
476cd5: mov rax, 0xffffffffffffffa0
476cdc: mov rax, qword ptr fs:[rax]
476ce0: mov rbp, qword ptr [rax]
476ce3: mov r12, qword ptr [rbp + 0x28]
476ce7: test r12, r12
476cea: je 0x476e20
476cf0: mov rax, qword ptr [r12]
476cf4: cmp qword ptr [rax], 0
476cf8: mov rbp, qword ptr [rax + 0x30]
476cfc: je 0x476d0b
476cfe: ror rbp, 0x11
476d02: xor rbp, qword ptr fs:[0x30]
476d0b: cmp qword ptr [r12 + 8], 1
476d11: jne 0x476d60
476d13: test rbp, rbp
476d16: je 0x476d60
476d18: mov rdi, rbp
476d1b: call 0x456100
476d20: mov rdi, qword ptr [r12]
476d24: movzx esi, bl
476d27: call rbp
476d29: mov rcx, qword ptr [rsp + 0x58]
476d2e: xor rcx, qword ptr fs:[0x28]
476d37: jne 0x476e48
476d3d: add rsp, 0x68
476d41: pop rbx
476d42: pop rbp
476d43: pop r12
476d45: pop r13
476d47: ret 
476d48: nop dword ptr [rax + rax]
476d50: mov eax, 0xffffffff
476d55: jmp 0x476d29
476d57: nop word ptr [rax + rax]
476d60: lea rax, [rsp + 0x57]
476d65: mov byte ptr [rsp + 0x57], bl
476d69: lea r13, [rsp + 0x10]
476d6e: mov qword ptr [rsp + 0x10], rax
476d73: lea rax, [rsp + 0xc]
476d78: movq xmm1, r13
476d7d: movq xmm0, rax
476d82: lea rax, [rsp + 0x48]
476d87: mov qword ptr [rsp + 0x48], 0
476d90: mov qword ptr [rsp + 0x40], rax
476d95: mov rax, qword ptr [r12]
476d99: punpcklqdq xmm0, xmm1
476d9d: mov qword ptr [rsp + 0x30], 1
476da6: cmp qword ptr [rax], 0
476daa: mov rbx, qword ptr [rax + 0x28]
476dae: movaps xmmword ptr [rsp + 0x20], xmm0
476db3: mov dword ptr [rsp + 0x38], 1
476dbb: je 0x476dca
476dbd: ror rbx, 0x11
476dc1: xor rbx, qword ptr fs:[0x30]
476dca: mov rdi, rbx
476dcd: call 0x456100
476dd2: mov rax, qword ptr [rsp + 0x10]
476dd7: mov rdx, r13
476dda: xor r8d, r8d
476ddd: lea rsi, [rsp + 0x20]
476de2: push 1
476de4: mov rdi, qword ptr [r12]
476de8: push 0
476dea: lea rcx, [rax + 1]
476dee: lea r9, [rsp + 0x28]
476df3: call rbx
476df5: pop rcx
476df6: pop rsi
476df7: mov edx, eax
476df9: lea eax, [rax - 4]
476dfc: cmp eax, 1
476dff: jbe 0x476e0e
476e01: mov eax, 0xffffffff
476e06: test edx, edx
476e08: jne 0x476d29
476e0e: mov eax, dword ptr [rsp + 0xc]
476e12: jmp 0x476d29
476e17: nop word ptr [rax + rax]
476e20: lea rax, [rip + 0x46a99]
476e27: lea r12, [rip + 0x469f2]
476e2e: cmp rbp, rax
476e31: je 0x476cf0
476e37: mov rdi, rbp
476e3a: call 0x44f660
476e3f: mov r12, qword ptr [rbp + 0x28]
476e43: jmp 0x476cf0
476e48: call 0x4547a0
476e4d: nop dword ptr [rax]
476e50: endbr64 
476e54: mov edx, dword ptr [rdi]
476e56: mov rax, rdi
476e59: cmp esi, edx
476e5b: jne 0x476e6b
476e5d: jmp 0x476e6f
476e5f: nop 
476e60: mov edx, dword ptr [rax + 4]
476e63: add rax, 4
476e67: cmp edx, esi
476e69: je 0x476e6f
476e6b: test edx, edx
476e6d: jne 0x476e60
476e6f: ret 
476e70: endbr64 
476e74: movd xmm1, esi
476e78: mov ecx, edi
476e7a: test rdx, rdx
476e7d: je 0x477190
476e83: shl rdx, 2
476e87: and ecx, 0x3f
476e8a: pshufd xmm1, xmm1, 0
476e8f: cmp ecx, 0x30
476e92: ja 0x476ed0
476e94: movdqu xmm0, xmmword ptr [rdi]
476e98: pcmpeqd xmm0, xmm1
476e9c: pmovmskb eax, xmm0
476ea0: test eax, eax
476ea2: jne 0x477150
476ea8: sub rdx, 0x10
476eac: jbe 0x477190
476eb2: add rdi, 0x10
476eb6: and ecx, 0xf
476eb9: and rdi, 0xfffffffffffffff0
476ebd: add rdx, rcx
476ec0: sub rdx, 0x40
476ec4: jbe 0x477080
476eca: jmp 0x476f20
476ecc: nop dword ptr [rax]
476ed0: and ecx, 0xf
476ed3: and rdi, 0xfffffffffffffff0
476ed7: movdqa xmm0, xmmword ptr [rdi]
476edb: pcmpeqd xmm0, xmm1
476edf: pmovmskb eax, xmm0
476ee3: sar eax, cl
476ee5: test eax, eax
476ee7: je 0x476f00
476ee9: bsf eax, eax
476eec: sub rdx, rax
476eef: jbe 0x477190
476ef5: add rax, rdi
476ef8: add rax, rcx
476efb: ret 
476efc: nop dword ptr [rax]
476f00: neg rcx
476f03: add rcx, 0x10
476f07: sub rdx, rcx
476f0a: jbe 0x477190
476f10: add rdi, 0x10
476f14: sub rdx, 0x40
476f18: jbe 0x477080
476f1e: nop 
476f20: movdqa xmm0, xmmword ptr [rdi]
476f24: pcmpeqd xmm0, xmm1
476f28: pmovmskb eax, xmm0
476f2c: test eax, eax
476f2e: jne 0x477120
476f34: movdqa xmm2, xmmword ptr [rdi + 0x10]
476f39: pcmpeqd xmm2, xmm1
476f3d: pmovmskb eax, xmm2
476f41: test eax, eax
476f43: jne 0x477130
476f49: movdqa xmm3, xmmword ptr [rdi + 0x20]
476f4e: pcmpeqd xmm3, xmm1
476f52: pmovmskb eax, xmm3
476f56: test eax, eax
476f58: jne 0x477140
476f5e: movdqa xmm4, xmmword ptr [rdi + 0x30]
476f63: pcmpeqd xmm4, xmm1
476f67: add rdi, 0x40
476f6b: pmovmskb eax, xmm4
476f6f: test eax, eax
476f71: jne 0x477110
476f77: test rdi, 0x3f
476f7e: je 0x476ff0
476f80: sub rdx, 0x40
476f84: jbe 0x477080
476f8a: movdqa xmm0, xmmword ptr [rdi]
476f8e: pcmpeqd xmm0, xmm1
476f92: pmovmskb eax, xmm0
476f96: test eax, eax
476f98: jne 0x477120
476f9e: movdqa xmm2, xmmword ptr [rdi + 0x10]
476fa3: pcmpeqd xmm2, xmm1
476fa7: pmovmskb eax, xmm2
476fab: test eax, eax
476fad: jne 0x477130
476fb3: movdqa xmm3, xmmword ptr [rdi + 0x20]
476fb8: pcmpeqd xmm3, xmm1
476fbc: pmovmskb eax, xmm3
476fc0: test eax, eax
476fc2: jne 0x477140
476fc8: movdqa xmm3, xmmword ptr [rdi + 0x30]
476fcd: pcmpeqd xmm3, xmm1
476fd1: pmovmskb eax, xmm3
476fd5: add rdi, 0x40
476fd9: test eax, eax
476fdb: jne 0x477110
476fe1: mov rcx, rdi
476fe4: and rdi, 0xffffffffffffffc0
476fe8: and ecx, 0x3f
476feb: add rdx, rcx
476fee: nop 
476ff0: sub rdx, 0x40
476ff4: jbe 0x477080
476ffa: movdqa xmm0, xmmword ptr [rdi]
476ffe: movdqa xmm2, xmmword ptr [rdi + 0x10]
477003: movdqa xmm3, xmmword ptr [rdi + 0x20]
477008: movdqa xmm4, xmmword ptr [rdi + 0x30]
47700d: pcmpeqd xmm0, xmm1
477011: pcmpeqd xmm2, xmm1
477015: pcmpeqd xmm3, xmm1
477019: pcmpeqd xmm4, xmm1
47701d: pmaxub xmm3, xmm0
477021: pmaxub xmm4, xmm2
477025: pmaxub xmm4, xmm3
477029: pmovmskb eax, xmm4
47702d: add rdi, 0x40
477031: test eax, eax
477033: je 0x476ff0
477035: sub rdi, 0x40
477039: pmovmskb eax, xmm0
47703d: test eax, eax
47703f: jne 0x477120
477045: pmovmskb eax, xmm2
477049: test eax, eax
47704b: jne 0x477130
477051: movdqa xmm3, xmmword ptr [rdi + 0x20]
477056: pcmpeqd xmm3, xmm1
47705a: pcmpeqd xmm1, xmmword ptr [rdi + 0x30]
47705f: pmovmskb eax, xmm3
477063: test eax, eax
477065: jne 0x477140
47706b: pmovmskb eax, xmm1
47706f: bsf eax, eax
477072: lea rax, [rdi + rax + 0x30]
477077: ret 
477078: nop dword ptr [rax + rax]
477080: add edx, 0x20
477083: jle 0x4770e0
477085: movdqa xmm0, xmmword ptr [rdi]
477089: pcmpeqd xmm0, xmm1
47708d: pmovmskb eax, xmm0
477091: test eax, eax
477093: jne 0x477120
477099: movdqa xmm2, xmmword ptr [rdi + 0x10]
47709e: pcmpeqd xmm2, xmm1
4770a2: pmovmskb eax, xmm2
4770a6: test eax, eax
4770a8: jne 0x477130
4770ae: movdqa xmm3, xmmword ptr [rdi + 0x20]
4770b3: pcmpeqd xmm3, xmm1
4770b7: pmovmskb eax, xmm3
4770bb: test eax, eax
4770bd: jne 0x477170
4770c3: sub edx, 0x10
4770c6: jle 0x477190
4770cc: pcmpeqd xmm1, xmmword ptr [rdi + 0x30]
4770d1: pmovmskb eax, xmm1
4770d5: test eax, eax
4770d7: jne 0x477180
4770dd: xor eax, eax
4770df: ret 
4770e0: add edx, 0x20
4770e3: movdqa xmm0, xmmword ptr [rdi]
4770e7: pcmpeqd xmm0, xmm1
4770eb: pmovmskb eax, xmm0
4770ef: test eax, eax
4770f1: jne 0x477150
4770f3: sub edx, 0x10
4770f6: jbe 0x477190
4770fc: pcmpeqd xmm1, xmmword ptr [rdi + 0x10]
477101: pmovmskb eax, xmm1
477105: test eax, eax
477107: jne 0x477160
477109: xor eax, eax
47710b: ret 
47710c: nop dword ptr [rax]
477110: bsf eax, eax
477113: lea rax, [rax + rdi - 0x10]
477118: ret 
477119: nop dword ptr [rax]
477120: bsf eax, eax
477123: add rax, rdi
477126: ret 
477127: nop word ptr [rax + rax]
477130: bsf eax, eax
477133: lea rax, [rax + rdi + 0x10]
477138: ret 
477139: nop dword ptr [rax]
477140: bsf eax, eax
477143: lea rax, [rax + rdi + 0x20]
477148: ret 
477149: nop dword ptr [rax]
477150: bsf eax, eax
477153: sub rdx, rax
477156: jbe 0x477190
477158: add rax, rdi
47715b: ret 
47715c: nop dword ptr [rax]
477160: bsf eax, eax
477163: sub rdx, rax
477166: jbe 0x477190
477168: lea rax, [rdi + rax + 0x10]
47716d: ret 
47716e: nop 
477170: bsf eax, eax
477173: sub rdx, rax
477176: jbe 0x477190
477178: lea rax, [rdi + rax + 0x20]
47717d: ret 
47717e: nop 
477180: bsf eax, eax
477183: sub rdx, rax
477186: jbe 0x477190
477188: lea rax, [rdi + rax + 0x30]
47718d: ret 
47718e: nop 
477190: xor eax, eax
477192: ret 
477193: nop word ptr cs:[rax + rax]
47719d: nop dword ptr [rax]
4771a0: endbr64 
4771a4: test rdx, rdx
4771a7: je 0x477403
4771ad: mov ecx, edi
4771af: vmovd xmm0, esi
4771b3: shl rdx, 2
4771b7: vpbroadcastd ymm0, xmm0
4771bc: and ecx, 0x3f
4771bf: cmp ecx, 0x20
4771c2: ja 0x477200
4771c4: vpcmpeqd ymm1, ymm0, ymmword ptr [rdi]
4771c8: vpmovmskb eax, ymm1
4771cc: test eax, eax
4771ce: jne 0x477390
4771d4: sub rdx, 0x20
4771d8: jbe 0x477400
4771de: add rdi, 0x20
4771e2: and ecx, 0x1f
4771e5: and rdi, 0xffffffffffffffe0
4771e9: add rdx, rcx
4771ec: sub rdx, 0x80
4771f3: jbe 0x4772fb
4771f9: jmp 0x477251
4771fb: nop dword ptr [rax + rax]
477200: and ecx, 0x1f
477203: and rdi, 0xffffffffffffffe0
477207: vpcmpeqd ymm1, ymm0, ymmword ptr [rdi]
47720b: vpmovmskb eax, ymm1
47720f: sar eax, cl
477211: test eax, eax
477213: je 0x477230
477215: tzcnt eax, eax
477219: cmp rdx, rax
47721c: jbe 0x477400
477222: add rax, rdi
477225: add rax, rcx
477228: vzeroupper 
47722b: ret 
47722c: nop dword ptr [rax]
477230: neg rcx
477233: add rcx, 0x20
477237: sub rdx, rcx
47723a: jbe 0x477400
477240: add rdi, 0x20
477244: sub rdx, 0x80
47724b: jbe 0x4772fb
477251: vpcmpeqd ymm1, ymm0, ymmword ptr [rdi]
477255: vpmovmskb eax, ymm1
477259: test eax, eax
47725b: jne 0x477410
477261: vpcmpeqd ymm1, ymm0, ymmword ptr [rdi + 0x20]
477266: vpmovmskb eax, ymm1
47726a: test eax, eax
47726c: jne 0x477420
477272: vpcmpeqd ymm1, ymm0, ymmword ptr [rdi + 0x40]
477277: vpmovmskb eax, ymm1
47727b: test eax, eax
47727d: jne 0x477430
477283: vpcmpeqd ymm1, ymm0, ymmword ptr [rdi + 0x60]
477288: vpmovmskb eax, ymm1
47728c: test eax, eax
47728e: jne 0x47745e
477294: add rdi, 0x80
47729b: sub rdx, 0x80
4772a2: jbe 0x4772fb
4772a4: mov rcx, rdi
4772a7: and ecx, 0x7f
4772aa: and rdi, 0xffffffffffffff80
4772ae: add rdx, rcx
4772b1: nop word ptr cs:[rax + rax]
4772bc: nop dword ptr [rax]
4772c0: vpcmpeqd ymm1, ymm0, ymmword ptr [rdi]
4772c4: vpcmpeqd ymm2, ymm0, ymmword ptr [rdi + 0x20]
4772c9: vpcmpeqd ymm3, ymm0, ymmword ptr [rdi + 0x40]
4772ce: vpcmpeqd ymm4, ymm0, ymmword ptr [rdi + 0x60]
4772d3: vpor ymm5, ymm2, ymm1
4772d7: vpor ymm6, ymm4, ymm3
4772db: vpor ymm5, ymm6, ymm5
4772df: vpmovmskb eax, ymm5
4772e3: test eax, eax
4772e5: jne 0x477440
4772eb: add rdi, 0x80
4772f2: sub rdx, 0x80
4772f9: ja 0x4772c0
4772fb: add edx, 0x40
4772fe: jle 0x477360
477300: vpcmpeqd ymm1, ymm0, ymmword ptr [rdi]
477304: vpmovmskb eax, ymm1
477308: test eax, eax
47730a: jne 0x477410
477310: vpcmpeqd ymm1, ymm0, ymmword ptr [rdi + 0x20]
477315: vpmovmskb eax, ymm1
477319: test eax, eax
47731b: jne 0x477420
477321: vpcmpeqd ymm1, ymm0, ymmword ptr [rdi + 0x40]
477326: vpmovmskb eax, ymm1
47732a: test eax, eax
47732c: jne 0x4773c0
477332: sub edx, 0x20
477335: jle 0x477400
47733b: vpcmpeqd ymm1, ymm0, ymmword ptr [rdi + 0x60]
477340: vpmovmskb eax, ymm1
477344: test eax, eax
477346: jne 0x4773e0
47734c: xor eax, eax
47734e: vzeroupper 
477351: ret 
477352: nop word ptr cs:[rax + rax]
47735d: nop dword ptr [rax]
477360: add edx, 0x40
477363: vpcmpeqd ymm1, ymm0, ymmword ptr [rdi]
477367: vpmovmskb eax, ymm1
47736b: test eax, eax
47736d: jne 0x477390
47736f: sub edx, 0x20
477372: jle 0x477400
477378: vpcmpeqd ymm1, ymm0, ymmword ptr [rdi + 0x20]
47737d: vpmovmskb eax, ymm1
477381: test eax, eax
477383: jne 0x4773a0
477385: xor eax, eax
477387: vzeroupper 
47738a: ret 
47738b: nop dword ptr [rax + rax]
477390: tzcnt eax, eax
477394: cmp rdx, rax
477397: jbe 0x477400
477399: add rax, rdi
47739c: vzeroupper 
47739f: ret 
4773a0: tzcnt eax, eax
4773a4: cmp rdx, rax
4773a7: jbe 0x477400
4773a9: add rax, 0x20
4773ad: add rax, rdi
4773b0: vzeroupper 
4773b3: ret 
4773b4: nop word ptr cs:[rax + rax]
4773bf: nop 
4773c0: tzcnt eax, eax
4773c4: cmp rdx, rax
4773c7: jbe 0x477400
4773c9: add rax, 0x40
4773cd: add rax, rdi
4773d0: vzeroupper 
4773d3: ret 
4773d4: nop word ptr cs:[rax + rax]
4773df: nop 
4773e0: tzcnt eax, eax
4773e4: cmp rdx, rax
4773e7: jbe 0x477400
4773e9: add rax, 0x60
4773ed: add rax, rdi
4773f0: vzeroupper 
4773f3: ret 
4773f4: nop word ptr cs:[rax + rax]
4773ff: nop 
477400: vzeroupper 
477403: xor eax, eax
477405: ret 
477406: nop word ptr cs:[rax + rax]
477410: tzcnt eax, eax
477414: add rax, rdi
477417: vzeroupper 
47741a: ret 
47741b: nop dword ptr [rax + rax]
477420: tzcnt eax, eax
477424: add rax, 0x20
477428: add rax, rdi
47742b: vzeroupper 
47742e: ret 
47742f: nop 
477430: tzcnt eax, eax
477434: add rax, 0x40
477438: add rax, rdi
47743b: vzeroupper 
47743e: ret 
47743f: nop 
477440: vpmovmskb eax, ymm1
477444: test eax, eax
477446: jne 0x477410
477448: vpmovmskb eax, ymm2
47744c: test eax, eax
47744e: jne 0x477420
477450: vpmovmskb eax, ymm3
477454: test eax, eax
477456: jne 0x477430
477458: vpmovmskb eax, ymm4
47745c: test eax, eax
47745e: tzcnt eax, eax
477462: add rax, 0x60
477466: add rax, rdi
477469: vzeroupper 
47746c: ret 
47746d: nop dword ptr [rax]
477470: endbr64 
477474: cmp dword ptr [rdi], 0
477477: je 0x477690
47747d: cmp dword ptr [rdi + 4], 0
477481: je 0x4776a0
477487: cmp dword ptr [rdi + 8], 0
47748b: je 0x4776b0
477491: cmp dword ptr [rdi + 0xc], 0
477495: je 0x4776c0
47749b: cmp dword ptr [rdi + 0x10], 0
47749f: je 0x4776d0
4774a5: cmp dword ptr [rdi + 0x14], 0
4774a9: je 0x4776e0
4774af: cmp dword ptr [rdi + 0x18], 0
4774b3: je 0x4776f0
4774b9: cmp dword ptr [rdi + 0x1c], 0
4774bd: je 0x477700
4774c3: pxor xmm0, xmm0
4774c7: lea rax, [rdi + 0x20]
4774cb: lea rcx, [rdi + 0x10]
4774cf: and rax, 0xfffffffffffffff0
4774d3: pcmpeqd xmm0, xmmword ptr [rax]
4774d7: pmovmskb edx, xmm0
4774db: pxor xmm1, xmm1
4774df: test edx, edx
4774e1: lea rax, [rax + 0x10]
4774e5: jne 0x477640
4774eb: pcmpeqd xmm1, xmmword ptr [rax]
4774ef: pmovmskb edx, xmm1
4774f3: pxor xmm2, xmm2
4774f7: test edx, edx
4774f9: lea rax, [rax + 0x10]
4774fd: jne 0x477640
477503: pcmpeqd xmm2, xmmword ptr [rax]
477507: pmovmskb edx, xmm2
47750b: pxor xmm3, xmm3
47750f: test edx, edx
477511: lea rax, [rax + 0x10]
477515: jne 0x477640
47751b: pcmpeqd xmm3, xmmword ptr [rax]
47751f: pmovmskb edx, xmm3
477523: test edx, edx
477525: lea rax, [rax + 0x10]
477529: jne 0x477640
47752f: pcmpeqd xmm0, xmmword ptr [rax]
477533: pmovmskb edx, xmm0
477537: test edx, edx
477539: lea rax, [rax + 0x10]
47753d: jne 0x477640
477543: pcmpeqd xmm1, xmmword ptr [rax]
477547: pmovmskb edx, xmm1
47754b: test edx, edx
47754d: lea rax, [rax + 0x10]
477551: jne 0x477640
477557: pcmpeqd xmm2, xmmword ptr [rax]
47755b: pmovmskb edx, xmm2
47755f: test edx, edx
477561: lea rax, [rax + 0x10]
477565: jne 0x477640
47756b: pcmpeqd xmm3, xmmword ptr [rax]
47756f: pmovmskb edx, xmm3
477573: test edx, edx
477575: lea rax, [rax + 0x10]
477579: jne 0x477640
47757f: pcmpeqd xmm0, xmmword ptr [rax]
477583: pmovmskb edx, xmm0
477587: test edx, edx
477589: lea rax, [rax + 0x10]
47758d: jne 0x477640
477593: pcmpeqd xmm1, xmmword ptr [rax]
477597: pmovmskb edx, xmm1
47759b: test edx, edx
47759d: lea rax, [rax + 0x10]
4775a1: jne 0x477640
4775a7: pcmpeqd xmm2, xmmword ptr [rax]
4775ab: pmovmskb edx, xmm2
4775af: test edx, edx
4775b1: lea rax, [rax + 0x10]
4775b5: jne 0x477640
4775bb: pcmpeqd xmm3, xmmword ptr [rax]
4775bf: pmovmskb edx, xmm3
4775c3: test edx, edx
4775c5: lea rax, [rax + 0x10]
4775c9: jne 0x477640
4775cb: and rax, 0xffffffffffffffc0
4775cf: nop 
4775d0: movaps xmm0, xmmword ptr [rax]
4775d3: movaps xmm1, xmmword ptr [rax + 0x10]
4775d7: movaps xmm2, xmmword ptr [rax + 0x20]
4775db: movaps xmm6, xmmword ptr [rax + 0x30]
4775df: pminub xmm0, xmm1
4775e3: pminub xmm2, xmm6
4775e7: pminub xmm2, xmm0
4775eb: pcmpeqd xmm2, xmm3
4775ef: pmovmskb edx, xmm2
4775f3: test edx, edx
4775f5: lea rax, [rax + 0x40]
4775f9: je 0x4775d0
4775fb: pcmpeqd xmm3, xmmword ptr [rax - 0x40]
477600: pmovmskb edx, xmm3
477604: test edx, edx
477606: lea rcx, [rcx + 0x30]
47760a: jne 0x477640
47760c: pcmpeqd xmm3, xmm1
477610: pmovmskb edx, xmm3
477614: test edx, edx
477616: lea rcx, [rcx - 0x10]
47761a: jne 0x477640
47761c: pcmpeqd xmm3, xmmword ptr [rax - 0x20]
477621: pmovmskb edx, xmm3
477625: test edx, edx
477627: lea rcx, [rcx - 0x10]
47762b: jne 0x477640
47762d: pcmpeqd xmm3, xmm6
477631: pmovmskb edx, xmm3
477635: test edx, edx
477637: lea rcx, [rcx - 0x10]
47763b: jne 0x477640
47763d: jmp 0x4775d0
47763f: nop 
477640: sub rax, rcx
477643: shr rax, 2
477647: test dl, dl
477649: je 0x477660
47764b: mov cl, dl
47764d: and cl, 0xf
477650: je 0x477670
477652: ret 
477653: nop word ptr cs:[rax + rax]
47765e: nop 
477660: mov ch, dh
477662: and ch, 0xf
477665: je 0x477680
477667: add rax, 2
47766b: ret 
47766c: nop dword ptr [rax]
477670: add rax, 1
477674: ret 
477675: nop word ptr cs:[rax + rax]
477680: add rax, 3
477684: ret 
477685: nop word ptr cs:[rax + rax]
477690: xor rax, rax
477693: ret 
477694: nop word ptr cs:[rax + rax]
47769f: nop 
4776a0: mov rax, 1
4776a7: ret 
4776a8: nop dword ptr [rax + rax]
4776b0: mov rax, 2
4776b7: ret 
4776b8: nop dword ptr [rax + rax]
4776c0: mov rax, 3
4776c7: ret 
4776c8: nop dword ptr [rax + rax]
4776d0: mov rax, 4
4776d7: ret 
4776d8: nop dword ptr [rax + rax]
4776e0: mov rax, 5
4776e7: ret 
4776e8: nop dword ptr [rax + rax]
4776f0: mov rax, 6
4776f7: ret 
4776f8: nop dword ptr [rax + rax]
477700: mov rax, 7
477707: ret 
477708: nop dword ptr [rax + rax]
477710: endbr64 
477714: mov ecx, edi
477716: mov rdx, rdi
477719: vpxor xmm0, xmm0, xmm0
47771d: and ecx, 0x3f
477720: cmp ecx, 0x20
477723: ja 0x477750
477725: vpcmpeqd ymm1, ymm0, ymmword ptr [rdi]
477729: vpmovmskb eax, ymm1
47772d: test eax, eax
47772f: jne 0x477820
477735: add rdi, 0x20
477739: and ecx, 0x1f
47773c: and rdi, 0xffffffffffffffe0
477740: jmp 0x477784
477742: nop word ptr cs:[rax + rax]
47774d: nop dword ptr [rax]
477750: and ecx, 0x1f
477753: and rdi, 0xffffffffffffffe0
477757: vpcmpeqd ymm1, ymm0, ymmword ptr [rdi]
47775b: vpmovmskb eax, ymm1
47775f: sar eax, cl
477761: test eax, eax
477763: je 0x477780
477765: tzcnt eax, eax
477769: add rax, rdi
47776c: add rax, rcx
47776f: sub rax, rdx
477772: shr rax, 2
477776: vzeroupper 
477779: ret 
47777a: nop word ptr [rax + rax]
477780: add rdi, 0x20
477784: vpcmpeqd ymm1, ymm0, ymmword ptr [rdi]
477788: vpmovmskb eax, ymm1
47778c: test eax, eax
47778e: jne 0x477820
477794: vpcmpeqd ymm1, ymm0, ymmword ptr [rdi + 0x20]
477799: vpmovmskb eax, ymm1
47779d: test eax, eax
47779f: jne 0x477840
4777a5: vpcmpeqd ymm1, ymm0, ymmword ptr [rdi + 0x40]
4777aa: vpmovmskb eax, ymm1
4777ae: test eax, eax
4777b0: jne 0x477860
4777b6: vpcmpeqd ymm1, ymm0, ymmword ptr [rdi + 0x60]
4777bb: vpmovmskb eax, ymm1
4777bf: test eax, eax
4777c1: jne 0x4778ac
4777c7: add rdi, 0x80
4777ce: mov rcx, rdi
4777d1: and ecx, 0x7f
4777d4: and rdi, 0xffffffffffffff80
4777d8: nop dword ptr [rax + rax]
4777e0: vmovdqa ymm1, ymmword ptr [rdi]
4777e4: vmovdqa ymm2, ymmword ptr [rdi + 0x20]
4777e9: vmovdqa ymm3, ymmword ptr [rdi + 0x40]
4777ee: vmovdqa ymm4, ymmword ptr [rdi + 0x60]
4777f3: vpminud ymm5, ymm2, ymm1
4777f8: vpminud ymm6, ymm4, ymm3
4777fd: vpminud ymm5, ymm6, ymm5
477802: vpcmpeqd ymm5, ymm0, ymm5
477806: vpmovmskb eax, ymm5
47780a: test eax, eax
47780c: jne 0x477880
47780e: add rdi, 0x80
477815: jmp 0x4777e0
477817: nop word ptr [rax + rax]
477820: tzcnt eax, eax
477824: add rax, rdi
477827: sub rax, rdx
47782a: shr rax, 2
47782e: vzeroupper 
477831: ret 
477832: nop word ptr cs:[rax + rax]
47783d: nop dword ptr [rax]
477840: tzcnt eax, eax
477844: add rax, 0x20
477848: add rax, rdi
47784b: sub rax, rdx
47784e: shr rax, 2
477852: vzeroupper 
477855: ret 
477856: nop word ptr cs:[rax + rax]
477860: tzcnt eax, eax
477864: add rax, 0x40
477868: add rax, rdi
47786b: sub rax, rdx
47786e: shr rax, 2
477872: vzeroupper 
477875: ret 
477876: nop word ptr cs:[rax + rax]
477880: vpcmpeqd ymm1, ymm0, ymm1
477884: vpmovmskb eax, ymm1
477888: test eax, eax
47788a: jne 0x477820
47788c: vpcmpeqd ymm2, ymm0, ymm2
477890: vpmovmskb eax, ymm2
477894: test eax, eax
477896: jne 0x477840
477898: vpcmpeqd ymm3, ymm0, ymm3
47789c: vpmovmskb eax, ymm3
4778a0: test eax, eax
4778a2: jne 0x477860
4778a4: vpcmpeqd ymm4, ymm0, ymm4
4778a8: vpmovmskb eax, ymm4
4778ac: tzcnt eax, eax
4778b0: add rax, 0x60
4778b4: add rax, rdi
4778b7: sub rax, rdx
4778ba: shr rax, 2
4778be: vzeroupper 
4778c1: ret 
4778c2: nop word ptr cs:[rax + rax]
4778cc: nop dword ptr [rax]
4778d0: endbr64 
4778d4: push r12
4778d6: mov r12, rsi
4778d9: push rbp
4778da: mov ebp, edi
4778dc: sub rsp, 8
4778e0: mov rax, qword ptr [rip + 0x481b1]
4778e7: test rax, rax
4778ea: je 0x477920
4778ec: call rax
4778ee: movsxd rdx, eax
4778f1: cmp rdx, -0x1000
4778f8: jbe 0x477915
4778fa: cmp rdx, -0x26
4778fe: je 0x477920
477900: mov rax, 0xffffffffffffffc0
477907: neg edx
477909: mov dword ptr fs:[rax], edx
47790c: mov eax, 0xffffffff
477911: endbr64 
477915: add rsp, 8
477919: pop rbp
47791a: pop r12
47791c: ret 
47791d: nop dword ptr [rax]
477920: mov rsi, r12
477923: mov edi, ebp
477925: mov eax, 0xe4
47792a: syscall 
47792c: mov rdx, rax
47792f: cmp rax, -0x1000
477935: ja 0x477900
477937: add rsp, 8
47793b: pop rbp
47793c: pop r12
47793e: ret 
47793f: nop 
477940: endbr64 
477944: push r13
477946: push r12
477948: push rbp
477949: push rbx
47794a: sub rsp, 0xa8
477951: mov rax, qword ptr fs:[0x28]
47795a: mov qword ptr [rsp + 0x98], rax
477962: xor eax, eax
477964: cmp byte ptr [rsi], 0
477967: je 0x477a60
47796d: mov edx, 0x90800
477972: call 0x451950
477977: mov ebp, eax
477979: test eax, eax
47797b: js 0x477a78
477981: mov rdx, rsp
477984: mov esi, eax
477986: mov edi, 1
47798b: call 0x450c30
477990: test eax, eax
477992: js 0x477a4e
477998: mov eax, dword ptr [rsp + 0x18]
47799c: and eax, 0xf000
4779a1: cmp eax, 0x4000
4779a6: jne 0x477a40
4779ac: cmp qword ptr [rsp + 0x38], 0x8000
4779b5: mov ebx, 0x8000
4779ba: cmovae rbx, qword ptr [rsp + 0x38]
4779c0: mov eax, 0x100000
4779c5: cmp rbx, 0x100000
4779cc: cmova rbx, rax
4779d0: lea rdi, [rbx + 0x30]
4779d4: call 0x426410
4779d9: mov r12, rax
4779dc: test rax, rax
4779df: je 0x477a82
4779e5: mov dword ptr [r12], ebp
4779e9: mov dword ptr [r12 + 4], 0
4779f2: mov qword ptr [r12 + 8], rbx
4779f7: mov qword ptr [r12 + 0x10], 0
477a00: mov qword ptr [r12 + 0x18], 0
477a09: mov qword ptr [r12 + 0x20], 0
477a12: mov dword ptr [r12 + 0x28], 0
477a1b: mov rax, qword ptr [rsp + 0x98]
477a23: xor rax, qword ptr fs:[0x28]
477a2c: jne 0x477a7d
477a2e: add rsp, 0xa8
477a35: mov rax, r12
477a38: pop rbx
477a39: pop rbp
477a3a: pop r12
477a3c: pop r13
477a3e: ret 
477a3f: nop 
477a40: mov rax, 0xffffffffffffffc0
477a47: mov dword ptr fs:[rax], 0x14
477a4e: mov edi, ebp
477a50: xor r12d, r12d
477a53: call 0x451730
477a58: jmp 0x477a1b
477a5a: nop word ptr [rax + rax]
477a60: mov rax, 0xffffffffffffffc0
477a67: xor r12d, r12d
477a6a: mov dword ptr fs:[rax], 2
477a71: jmp 0x477a1b
477a73: nop dword ptr [rax + rax]
477a78: xor r12d, r12d
477a7b: jmp 0x477a1b
477a7d: call 0x4547a0
477a82: mov edi, 0x2030
477a87: mov ebx, 0x2000
477a8c: call 0x426410
477a91: mov r12, rax
477a94: test rax, rax
477a97: jne 0x4779e5
477a9d: endbr64 
477aa1: mov rbx, 0xffffffffffffffc0
477aa8: mov edi, ebp
477aaa: mov r13d, dword ptr fs:[rbx]
477aae: call 0x451730
477ab3: mov dword ptr fs:[rbx], r13d
477ab7: jmp 0x477a1b
477abc: nop dword ptr [rax]
477ac0: endbr64 
477ac4: push r13
477ac6: push r12
477ac8: push rbp
477ac9: push rbx
477aca: sub rsp, 0xa8
477ad1: mov rax, qword ptr fs:[0x28]
477ada: mov qword ptr [rsp + 0x98], rax
477ae2: xor eax, eax
477ae4: cmp byte ptr [rdi], 0
477ae7: je 0x477be0
477aed: mov esi, 0x90800
477af2: call 0x4518a0
477af7: mov ebp, eax
477af9: test eax, eax
477afb: js 0x477bf8
477b01: mov rdx, rsp
477b04: mov esi, eax
477b06: mov edi, 1
477b0b: call 0x450c30
477b10: test eax, eax
477b12: js 0x477bce
477b18: mov eax, dword ptr [rsp + 0x18]
477b1c: and eax, 0xf000
477b21: cmp eax, 0x4000
477b26: jne 0x477bc0
477b2c: cmp qword ptr [rsp + 0x38], 0x8000
477b35: mov ebx, 0x8000
477b3a: cmovae rbx, qword ptr [rsp + 0x38]
477b40: mov eax, 0x100000
477b45: cmp rbx, 0x100000
477b4c: cmova rbx, rax
477b50: lea rdi, [rbx + 0x30]
477b54: call 0x426410
477b59: mov r12, rax
477b5c: test rax, rax
477b5f: je 0x477c02
477b65: mov dword ptr [r12], ebp
477b69: mov dword ptr [r12 + 4], 0
477b72: mov qword ptr [r12 + 8], rbx
477b77: mov qword ptr [r12 + 0x10], 0
477b80: mov qword ptr [r12 + 0x18], 0
477b89: mov qword ptr [r12 + 0x20], 0
477b92: mov dword ptr [r12 + 0x28], 0
477b9b: mov rax, qword ptr [rsp + 0x98]
477ba3: xor rax, qword ptr fs:[0x28]
477bac: jne 0x477bfd
477bae: add rsp, 0xa8
477bb5: mov rax, r12
477bb8: pop rbx
477bb9: pop rbp
477bba: pop r12
477bbc: pop r13
477bbe: ret 
477bbf: nop 
477bc0: mov rax, 0xffffffffffffffc0
477bc7: mov dword ptr fs:[rax], 0x14
477bce: mov edi, ebp
477bd0: xor r12d, r12d
477bd3: call 0x451730
477bd8: jmp 0x477b9b
477bda: nop word ptr [rax + rax]
477be0: mov rax, 0xffffffffffffffc0
477be7: xor r12d, r12d
477bea: mov dword ptr fs:[rax], 2
477bf1: jmp 0x477b9b
477bf3: nop dword ptr [rax + rax]
477bf8: xor r12d, r12d
477bfb: jmp 0x477b9b
477bfd: call 0x4547a0
477c02: mov edi, 0x2030
477c07: mov ebx, 0x2000
477c0c: call 0x426410
477c11: mov r12, rax
477c14: test rax, rax
477c17: jne 0x477b65
477c1d: endbr64 
477c21: mov rbx, 0xffffffffffffffc0
477c28: mov edi, ebp
477c2a: mov r13d, dword ptr fs:[rbx]
477c2e: call 0x451730
477c33: mov dword ptr fs:[rbx], r13d
477c37: jmp 0x477b9b
477c3c: nop dword ptr [rax]
477c40: endbr64 
477c44: push r13
477c46: mov r13d, esi
477c49: push r12
477c4b: mov r12, rcx
477c4e: push rbp
477c4f: mov ebp, edi
477c51: push rbx
477c52: sub rsp, 8
477c56: test sil, sil
477c59: je 0x477cf0
477c5f: mov edi, 0x8030
477c64: mov ebx, 0x8000
477c69: test r12, r12
477c6c: je 0x477c96
477c6e: cmp qword ptr [r12 + 0x38], 0x8000
477c77: mov ebx, 0x8000
477c7c: cmovae rbx, qword ptr [r12 + 0x38]
477c82: mov eax, 0x100000
477c87: cmp rbx, 0x100000
477c8e: cmova rbx, rax
477c92: lea rdi, [rbx + 0x30]
477c96: call 0x426410
477c9b: mov r12, rax
477c9e: test rax, rax
477ca1: je 0x477d0e
477ca3: mov dword ptr [r12], ebp
477ca7: mov dword ptr [r12 + 4], 0
477cb0: mov qword ptr [r12 + 8], rbx
477cb5: mov qword ptr [r12 + 0x10], 0
477cbe: mov qword ptr [r12 + 0x18], 0
477cc7: mov qword ptr [r12 + 0x20], 0
477cd0: mov dword ptr [r12 + 0x28], 0
477cd9: add rsp, 8
477cdd: mov rax, r12
477ce0: pop rbx
477ce1: pop rbp
477ce2: pop r12
477ce4: pop r13
477ce6: ret 
477ce7: nop word ptr [rax + rax]
477cf0: xor eax, eax
477cf2: mov edx, 1
477cf7: mov esi, 2
477cfc: call 0x451760
477d01: test eax, eax
477d03: jns 0x477c5f
477d09: xor r12d, r12d
477d0c: jmp 0x477cd9
477d0e: mov edi, 0x2030
477d13: mov ebx, 0x2000
477d18: call 0x426410
477d1d: mov r12, rax
477d20: test rax, rax
477d23: jne 0x477ca3
477d29: endbr64 
477d2d: test r13b, r13b
477d30: je 0x477d09
477d32: mov rbx, 0xffffffffffffffc0
477d39: mov edi, ebp
477d3b: mov r13d, dword ptr fs:[rbx]
477d3f: call 0x451730
477d44: mov dword ptr fs:[rbx], r13d
477d48: jmp 0x477cd9
477d4a: nop word ptr [rax + rax]
477d50: endbr64 
477d54: test rdi, rdi
477d57: je 0x477d69
477d59: push rbp
477d5a: mov ebp, dword ptr [rdi]
477d5c: call 0x426a00
477d61: mov edi, ebp
477d63: pop rbp
477d64: jmp 0x451730
477d69: mov rax, 0xffffffffffffffc0
477d70: mov dword ptr fs:[rax], 0x16
477d77: mov eax, 0xffffffff
477d7c: ret 
477d7d: nop dword ptr [rax]
477d80: endbr64 
477d84: push rbp
477d85: push rbx
477d86: mov rbx, rdi
477d89: sub rsp, 8
477d8d: mov eax, dword ptr fs:[0x18]
477d95: lea rbp, [rdi + 4]
477d99: test eax, eax
477d9b: jne 0x477de0
477d9d: mov edx, 1
477da2: cmpxchg dword ptr [rdi + 4], edx
477da6: mov edi, dword ptr [rbx]
477da8: xor edx, edx
477daa: xor esi, esi
477dac: call 0x450f00
477db1: pxor xmm0, xmm0
477db5: mov qword ptr [rbx + 0x20], 0
477dbd: mov dword ptr [rbx + 0x28], 0
477dc4: movaps xmmword ptr [rbx + 0x10], xmm0
477dc8: mov eax, dword ptr fs:[0x18]
477dd0: test eax, eax
477dd2: jne 0x477e00
477dd4: sub dword ptr [rbx + 4], 1
477dd8: add rsp, 8
477ddc: pop rbx
477ddd: pop rbp
477dde: ret 
477ddf: nop 
477de0: xor eax, eax
477de2: mov edx, 1
477de7: lock cmpxchg dword ptr [rbp], edx
477dec: je 0x477da6
477dee: mov rdi, rbp
477df1: call 0x421250
477df6: jmp 0x477da6
477df8: nop dword ptr [rax + rax]
477e00: xor eax, eax
477e02: xchg dword ptr [rbx + 4], eax
477e05: cmp eax, 1
477e08: jle 0x477dd8
477e0a: xor r10d, r10d
477e0d: mov edx, 1
477e12: mov esi, 0x81
477e17: mov rdi, rbp
477e1a: mov eax, 0xca
477e1f: syscall 
477e21: jmp 0x477dd8
477e23: nop word ptr cs:[rax + rax]
477e2d: nop dword ptr [rax]
477e30: endbr64 
477e34: push r14
477e36: mov r14, rdi
477e39: push r13
477e3b: push r12
477e3d: push rbp
477e3e: mov rbp, 0xffffffffffffffc0
477e45: push rbx
477e46: mov r13d, dword ptr fs:[rbp]
477e4b: mov eax, dword ptr fs:[0x18]
477e53: lea r12, [rdi + 4]
477e57: test eax, eax
477e59: jne 0x477f2d
477e5f: mov edx, 1
477e64: cmpxchg dword ptr [rdi + 4], edx
477e68: mov rdx, qword ptr [r14 + 0x18]
477e6c: mov rax, qword ptr [r14 + 0x10]
477e70: lea rbx, [r14 + 0x30]
477e74: jmp 0x477e9d
477e76: nop word ptr cs:[rax + rax]
477e80: add r8, r14
477e83: movzx ecx, word ptr [r8 + 0x10]
477e88: add rdx, rcx
477e8b: mov rcx, qword ptr [r8 + 8]
477e8f: cmp qword ptr [r8], 0
477e93: mov qword ptr [r14 + 0x18], rdx
477e97: mov qword ptr [r14 + 0x20], rcx
477e9b: jne 0x477ee0
477e9d: lea r8, [rdx + 0x30]
477ea1: cmp rdx, rax
477ea4: jb 0x477e80
477ea6: mov rdx, qword ptr [r14 + 8]
477eaa: mov edi, dword ptr [r14]
477ead: mov rsi, rbx
477eb0: call 0x487e20
477eb5: test rax, rax
477eb8: jle 0x477ed0
477eba: mov qword ptr [r14 + 0x10], rax
477ebe: xor edx, edx
477ec0: mov r8d, 0x30
477ec6: jmp 0x477e80
477ec8: nop dword ptr [rax + rax]
477ed0: jne 0x477efd
477ed2: mov dword ptr fs:[rbp], r13d
477ed7: xor r8d, r8d
477eda: nop word ptr [rax + rax]
477ee0: mov eax, dword ptr fs:[0x18]
477ee8: test eax, eax
477eea: jne 0x477f09
477eec: sub dword ptr [r14 + 4], 1
477ef1: pop rbx
477ef2: mov rax, r8
477ef5: pop rbp
477ef6: pop r12
477ef8: pop r13
477efa: pop r14
477efc: ret 
477efd: xor r8d, r8d
477f00: cmp dword ptr fs:[rbp], 2
477f05: jne 0x477ee0
477f07: jmp 0x477ed2
477f09: xor eax, eax
477f0b: xchg dword ptr [r14 + 4], eax
477f0f: cmp eax, 1
477f12: jle 0x477ef1
477f14: xor r10d, r10d
477f17: mov edx, 1
477f1c: mov esi, 0x81
477f21: mov rdi, r12
477f24: mov eax, 0xca
477f29: syscall 
477f2b: jmp 0x477ef1
477f2d: xor eax, eax
477f2f: mov edx, 1
477f34: lock cmpxchg dword ptr [r12], edx
477f3a: je 0x477e68
477f40: mov rdi, r12
477f43: call 0x421250
477f48: jmp 0x477e68
477f4d: nop dword ptr [rax]
477f50: endbr64 
477f54: push r12
477f56: mov esi, edi
477f58: push rbp
477f59: mov ebp, edi
477f5b: mov edi, 1
477f60: sub rsp, 0xa8
477f67: mov rax, qword ptr fs:[0x28]
477f70: mov qword ptr [rsp + 0x98], rax
477f78: xor eax, eax
477f7a: mov r12, rsp
477f7d: mov rdx, r12
477f80: call 0x450c30
477f85: test eax, eax
477f87: js 0x477fee
477f89: mov eax, dword ptr [rsp + 0x18]
477f8d: and eax, 0xf000
477f92: cmp eax, 0x4000
477f97: jne 0x477fe0
477f99: mov esi, 3
477f9e: mov edi, ebp
477fa0: xor eax, eax
477fa2: call 0x451760
477fa7: mov edx, eax
477fa9: cmp eax, -1
477fac: je 0x477fee
477fae: and eax, 3
477fb1: cmp eax, 1
477fb4: je 0x477ff8
477fb6: mov rcx, r12
477fb9: xor esi, esi
477fbb: mov edi, ebp
477fbd: call 0x477c40
477fc2: mov rcx, qword ptr [rsp + 0x98]
477fca: xor rcx, qword ptr fs:[0x28]
477fd3: jne 0x47800a
477fd5: add rsp, 0xa8
477fdc: pop rbp
477fdd: pop r12
477fdf: ret 
477fe0: mov rax, 0xffffffffffffffc0
477fe7: mov dword ptr fs:[rax], 0x14
477fee: xor eax, eax
477ff0: jmp 0x477fc2
477ff2: nop word ptr [rax + rax]
477ff8: mov rax, 0xffffffffffffffc0
477fff: mov dword ptr fs:[rax], 0x16
478006: xor eax, eax
478008: jmp 0x477fc2
47800a: call 0x4547a0
47800f: nop 
478010: endbr64 
478014: mov eax, 0x3f
478019: syscall 
47801b: cmp rax, -0xfff
478021: jae 0x478024
478023: ret 
478024: mov rcx, 0xffffffffffffffc0
47802b: neg eax
47802d: mov dword ptr fs:[rcx], eax
478030: or rax, 0xffffffffffffffff
478034: ret 
478035: nop word ptr cs:[rax + rax]
47803f: nop 
478040: endbr64 
478044: mov eax, 0x66
478049: syscall 
47804b: ret 
47804c: nop dword ptr [rax]
478050: endbr64 
478054: mov eax, 0x6b
478059: syscall 
47805b: ret 
47805c: nop dword ptr [rax]
478060: endbr64 
478064: mov eax, 0x68
478069: syscall 
47806b: ret 
47806c: nop dword ptr [rax]
478070: endbr64 
478074: mov eax, 0x6c
478079: syscall 
47807b: ret 
47807c: nop dword ptr [rax]
478080: endbr64 
478084: mov r8d, edi
478087: mov rdi, rsi
47808a: mov rsi, rdx
47808d: cmp r8d, 1
478091: ja 0x4780c0
478093: mov eax, 6
478098: syscall 
47809a: cmp rax, -0x1000
4780a0: ja 0x4780a8
4780a2: ret 
4780a3: nop dword ptr [rax + rax]
4780a8: mov rdx, 0xffffffffffffffc0
4780af: neg eax
4780b1: mov dword ptr fs:[rdx], eax
4780b4: mov eax, 0xffffffff
4780b9: ret 
4780ba: nop word ptr [rax + rax]
4780c0: mov rax, 0xffffffffffffffc0
4780c7: mov dword ptr fs:[rax], 0x16
4780ce: mov eax, 0xffffffff
4780d3: ret 
4780d4: nop word ptr cs:[rax + rax]
4780de: nop 
4780e0: endbr64 
4780e4: mov r9d, edi
4780e7: mov r10d, r8d
4780ea: mov edi, esi
4780ec: mov rsi, rdx
4780ef: mov rdx, rcx
4780f2: cmp r9d, 1
4780f6: ja 0x478128
4780f8: mov eax, 0x106
4780fd: syscall 
4780ff: cmp rax, -0x1000
478105: ja 0x478110
478107: ret 
478108: nop dword ptr [rax + rax]
478110: mov rdx, 0xffffffffffffffc0
478117: neg eax
478119: mov dword ptr fs:[rdx], eax
47811c: mov eax, 0xffffffff
478121: ret 
478122: nop word ptr [rax + rax]
478128: mov rax, 0xffffffffffffffc0
47812f: mov dword ptr fs:[rax], 0x16
478136: mov eax, 0xffffffff
47813b: ret 
47813c: nop dword ptr [rax]
478140: endbr64 
478144: sub rsp, 0x58
478148: mov rax, qword ptr fs:[0x28]
478151: mov qword ptr [rsp + 0x48], rax
478156: xor eax, eax
478158: mov rsi, rsp
47815b: call 0x478190
478160: test eax, eax
478162: sete al
478165: mov rdx, qword ptr [rsp + 0x48]
47816a: xor rdx, qword ptr fs:[0x28]
478173: jne 0x47817d
478175: movzx eax, al
478178: add rsp, 0x58
47817c: ret 
47817d: call 0x4547a0
478182: nop word ptr cs:[rax + rax]
47818c: nop dword ptr [rax]
478190: endbr64 
478194: sub rsp, 0x38
478198: mov r8, rsi
47819b: mov esi, 0x5401
4781a0: mov rax, qword ptr fs:[0x28]
4781a9: mov qword ptr [rsp + 0x28], rax
4781ae: xor eax, eax
4781b0: mov rdx, rsp
4781b3: mov eax, 0x10
4781b8: syscall 
4781ba: cmp rax, -0x1000
4781c0: ja 0x478240
4781c2: mov r9d, eax
4781c5: test eax, eax
4781c7: jne 0x47821f
4781c9: movzx eax, byte ptr [rsp + 0x10]
4781ce: movzx edx, word ptr [rsp + 0x21]
4781d3: mov qword ptr [r8 + 0x24], 0
4781db: movdqa xmm0, xmmword ptr [rsp]
4781e0: movdqu xmm1, xmmword ptr [rsp + 0x11]
4781e6: mov byte ptr [r8 + 0x30], 0
4781eb: mov byte ptr [r8 + 0x10], al
4781ef: mov eax, dword ptr [rsp + 8]
4781f3: mov word ptr [r8 + 0x21], dx
4781f8: movzx edx, byte ptr [rsp + 0x23]
4781fd: and eax, 0x100f
478202: mov dword ptr [r8 + 0x2c], 0
47820a: mov dword ptr [r8 + 0x34], eax
47820e: mov dword ptr [r8 + 0x38], eax
478212: mov byte ptr [r8 + 0x23], dl
478216: movups xmmword ptr [r8], xmm0
47821a: movups xmmword ptr [r8 + 0x11], xmm1
47821f: mov rax, qword ptr [rsp + 0x28]
478224: xor rax, qword ptr fs:[0x28]
47822d: jne 0x478254
47822f: mov eax, r9d
478232: add rsp, 0x38
478236: ret 
478237: nop word ptr [rax + rax]
478240: mov rdx, 0xffffffffffffffc0
478247: neg eax
478249: mov r9d, 0xffffffff
47824f: mov dword ptr fs:[rdx], eax
478252: jmp 0x47821f
478254: call 0x4547a0
478259: nop dword ptr [rax]
478260: endbr64 
478264: mov eax, 0xc
478269: syscall 
47826b: cmp rax, -0x1000
478271: ja 0x478288
478273: mov qword ptr [rip + 0x4acbe], rax
47827a: cmp rdi, rax
47827d: ja 0x4782a8
47827f: xor eax, eax
478281: ret 
478282: nop word ptr [rax + rax]
478288: mov rdx, 0xffffffffffffffc0
47828f: neg eax
478291: mov dword ptr fs:[rdx], eax
478294: xor eax, eax
478296: mov qword ptr [rip + 0x4ac97], 0xffffffffffffffff
4782a1: ret 
4782a2: nop word ptr [rax + rax]
4782a8: mov rax, 0xffffffffffffffc0
4782af: mov dword ptr fs:[rax], 0xc
4782b6: mov eax, 0xffffffff
4782bb: ret 
4782bc: nop dword ptr [rax]
4782c0: push r13
4782c2: push r12
4782c4: push rbp
4782c5: mov rbp, rsi
4782c8: push rbx
4782c9: mov rbx, rdi
4782cc: mov rdi, rsi
4782cf: sub rsp, 8
4782d3: call 0x401180
4782d8: cmp byte ptr [rbx], 0x7b
4782db: mov r12, rax
4782de: je 0x478318
4782e0: mov rdx, rax
4782e3: mov rsi, rbp
4782e6: mov rdi, rbx
4782e9: call 0x4010d0
4782ee: test eax, eax
4782f0: jne 0x478303
4782f2: movzx edx, byte ptr [rbx + r12]
4782f7: mov eax, edx
4782f9: and eax, 0xffffffdf
4782fc: sub eax, 0x41
4782ff: cmp al, 0x19
478301: ja 0x478350
478303: xor r12d, r12d
478306: add rsp, 8
47830a: mov rax, r12
47830d: pop rbx
47830e: pop rbp
47830f: pop r12
478311: pop r13
478313: ret 
478314: nop dword ptr [rax]
478318: lea rdi, [rbx + 1]
47831c: mov rdx, rax
47831f: mov rsi, rbp
478322: mov r13, rax
478325: call 0x4010d0
47832a: xor r12d, r12d
47832d: test eax, eax
47832f: jne 0x478306
478331: cmp byte ptr [rbx + r13 + 1], 0x7d
478337: jne 0x478306
478339: add rsp, 8
47833d: lea r12, [r13 + 2]
478341: pop rbx
478342: mov rax, r12
478345: pop rbp
478346: pop r12
478348: pop r13
47834a: ret 
47834b: nop dword ptr [rax + rax]
478350: lea eax, [rdx - 0x30]
478353: cmp al, 9
478355: jbe 0x478303
478357: cmp dl, 0x5f
47835a: jne 0x478306
47835c: jmp 0x478303
47835e: nop 
478360: test rsi, rsi
478363: je 0x4784c8
478369: push rbp
47836a: add rsi, 0x19
47836e: mov rax, rsi
478371: and rsi, 0xfffffffffffff000
478378: and rax, 0xfffffffffffffff0
47837c: mov rdx, rsp
47837f: mov rbp, rsp
478382: sub rdx, rsi
478385: cmp rsp, rdx
478388: je 0x47839f
47838a: sub rsp, 0x1000
478391: or qword ptr [rsp + 0xff8], 0
47839a: cmp rsp, rdx
47839d: jne 0x47838a
47839f: and eax, 0xfff
4783a4: sub rsp, rax
4783a7: test rax, rax
4783aa: je 0x4783b2
4783ac: or qword ptr [rsp + rax - 8], 0
4783b2: lea r8, [rsp + 0xf]
4783b7: movzx edx, byte ptr [rdi]
4783ba: and r8, 0xfffffffffffffff0
4783be: mov rax, r8
4783c1: test dl, dl
4783c3: jne 0x4783e0
4783c5: jmp 0x47841e
4783c7: nop word ptr [rax + rax]
4783d0: add rdi, 1
4783d4: mov byte ptr [rax], dl
4783d6: mov edx, ecx
4783d8: add rax, 1
4783dc: test dl, dl
4783de: je 0x478410
4783e0: movzx ecx, byte ptr [rdi + 1]
4783e4: cmp dl, 0x2f
4783e7: jne 0x4783d0
4783e9: cmp cl, 0x2e
4783ec: je 0x4784d0
4783f2: add rdi, 1
4783f6: cmp r8, rax
4783f9: jae 0x4783d4
4783fb: cmp byte ptr [rax - 1], 0x2f
4783ff: jne 0x4783d4
478401: mov edx, ecx
478403: test dl, dl
478405: jne 0x4783e0
478407: nop word ptr [rax + rax]
478410: cmp rax, r8
478413: je 0x47841e
478415: cmp byte ptr [rax - 1], 0x2f
478419: mov rdx, rax
47841c: je 0x478425
47841e: mov byte ptr [rax], 0x2f
478421: lea rdx, [rax + 1]
478425: mov rax, rdx
478428: sub rax, r8
47842b: cmp rax, 0x15
47842f: jbe 0x478510
478435: movabs rcx, 0x756e696c2d34365f
47843f: xor rcx, qword ptr [r8 + 8]
478443: movabs rdx, 0x3638782f62696c2f
47844d: xor rdx, qword ptr [r8]
478450: or rcx, rdx
478453: jne 0x478463
478455: cmp dword ptr [r8 + 0x10], 0x6e672d78
47845d: je 0x478565
478463: cmp rax, 0x19
478467: jbe 0x47849d
478469: movabs rcx, 0x2d34365f3638782f
478473: xor rcx, qword ptr [r8 + 8]
478477: movabs rdx, 0x62696c2f7273752f
478481: xor rdx, qword ptr [r8]
478484: or rcx, rdx
478487: jne 0x47849d
478489: movabs rdx, 0x6e672d78756e696c
478493: cmp qword ptr [r8 + 0x10], rdx
478497: je 0x478574
47849d: cmp dword ptr [r8], 0x62696c2f
4784a4: je 0x478558
4784aa: cmp rax, 8
4784ae: jbe 0x4784bf
4784b0: movabs rax, 0x62696c2f7273752f
4784ba: cmp qword ptr [r8], rax
4784bd: je 0x4784f8
4784bf: leave 
4784c0: xor eax, eax
4784c2: ret 
4784c3: nop dword ptr [rax + rax]
4784c8: xor eax, eax
4784ca: ret 
4784cb: nop dword ptr [rax + rax]
4784d0: movzx esi, byte ptr [rdi + 2]
4784d4: cmp sil, 0x2e
4784d8: je 0x478520
4784da: cmp sil, 0x2f
4784de: je 0x4784e9
4784e0: test sil, sil
4784e3: jne 0x4783f2
4784e9: add rdi, 2
4784ed: mov edx, esi
4784ef: jmp 0x4783dc
4784f4: nop dword ptr [rax]
4784f8: cmp byte ptr [r8 + 8], 0x2f
4784fd: jne 0x4784bf
4784ff: leave 
478500: mov eax, 1
478505: ret 
478506: nop word ptr cs:[rax + rax]
478510: cmp rax, 4
478514: jbe 0x4784aa
478516: jmp 0x47849d
478518: nop dword ptr [rax + rax]
478520: movzx esi, byte ptr [rdi + 3]
478524: cmp sil, 0x2f
478528: je 0x478541
47852a: test sil, sil
47852d: jne 0x4783f2
478533: jmp 0x478541
478535: nop dword ptr [rax]
478538: sub rax, 1
47853c: cmp byte ptr [rax], 0x2f
47853f: je 0x478546
478541: cmp rax, r8
478544: ja 0x478538
478546: add rdi, 3
47854a: mov edx, esi
47854c: jmp 0x4783dc
478551: nop dword ptr [rax]
478558: cmp byte ptr [r8 + 4], 0x2f
47855d: jne 0x4784aa
478563: jmp 0x4784ff
478565: cmp word ptr [r8 + 0x14], 0x2f75
47856c: jne 0x478463
478572: jmp 0x4784ff
478574: cmp word ptr [r8 + 0x18], 0x2f75
47857b: jne 0x47849d
478581: jmp 0x4784ff
478586: nop word ptr cs:[rax + rax]
478590: push rbp
478591: mov rbp, rsp
478594: push r15
478596: mov r15, rsi
478599: push r14
47859b: push r13
47859d: mov r13, rdi
4785a0: push r12
4785a2: push rbx
4785a3: sub rsp, 0x18
4785a7: mov r12, qword ptr [rsi + 0x20]
4785ab: mov r9, qword ptr [rsi + 8]
4785af: lea rax, [r9 + r12]
4785b3: cmp rax, qword ptr [rcx]
4785b6: ja 0x4786d0
4785bc: test byte ptr [rdi + 0x321], 7
4785c3: jne 0x478732
4785c9: cmp qword ptr [rsi + 0x30], 8
4785ce: jne 0x478732
4785d4: lea rbx, [rcx + r9 + 8]
4785d9: mov rax, rbx
4785dc: cmp r12, 0xc
4785e0: jbe 0x478732
4785e6: xor r14d, r14d
4785e9: mov r15d, 0xc
4785ef: mov dword ptr [rbp - 0x38], 0
4785f6: xor edi, edi
4785f8: sub r15, rax
4785fb: jmp 0x478624
4785fd: nop dword ptr [rax]
478600: mov esi, dword ptr [rbx + 4]
478603: add rax, 0x13
478607: and rax, 0xfffffffffffffff8
47860b: lea rax, [rsi + rax + 7]
478610: and rax, 0xfffffffffffffff8
478614: add rbx, rax
478617: lea rax, [rbx + r15]
47861b: cmp r12, rax
47861e: jbe 0x4787e0
478624: mov eax, dword ptr [rbx]
478626: cmp eax, 4
478629: jne 0x478600
47862b: cmp dword ptr [rbx + 8], 5
47862f: jne 0x478600
478631: cmp dword ptr [rbx + 0xc], 0x554e47
478638: jne 0x478600
47863a: movzx edx, byte ptr [r13 + 0x321]
478642: test dl, 7
478645: jne 0x478725
47864b: and edx, 0xfffffff8
47864e: or edx, 1
478651: mov byte ptr [r13 + 0x321], dl
478658: mov esi, dword ptr [rbx + 4]
47865b: cmp esi, 7
47865e: jbe 0x478725
478664: test sil, 7
478668: jne 0x478725
47866e: lea rcx, [rbx + 0x10]
478672: lea r9, [rcx + rsi]
478676: jmp 0x4786c2
478678: nop dword ptr [rax + rax]
478680: lea r8, [rcx + 8]
478684: mov edx, r10d
478687: lea r11, [r8 + rdx]
47868b: cmp r9, r11
47868e: jb 0x478725
478694: cmp edi, 0xc0000002
47869a: je 0x478810
4786a0: ja 0x478725
4786a6: add rdx, 7
4786aa: and rdx, 0xfffffffffffffff8
4786ae: lea rcx, [r8 + rdx]
4786b2: mov rdx, r9
4786b5: sub rdx, rcx
4786b8: cmp rdx, 7
4786bc: jle 0x478603
4786c2: mov edx, edi
4786c4: mov edi, dword ptr [rcx]
4786c6: mov r10d, dword ptr [rcx + 4]
4786ca: cmp edi, edx
4786cc: jae 0x478680
4786ce: jmp 0x478725
4786d0: mov r8d, edx
4786d3: cmp r12, 0xffff
4786da: jbe 0x478748
4786dc: mov rdi, r12
4786df: mov dword ptr [rbp - 0x3c], edx
4786e2: mov qword ptr [rbp - 0x38], r9
4786e6: call 0x426410
4786eb: mov r9, qword ptr [rbp - 0x38]
4786ef: mov r8d, dword ptr [rbp - 0x3c]
4786f3: mov rdx, r12
4786f6: mov rsi, rax
4786f9: mov r14, rax
4786fc: mov rcx, r9
4786ff: mov edi, r8d
478702: call 0x487e70
478707: cmp rax, r12
47870a: jne 0x478825
478710: test byte ptr [r13 + 0x321], 7
478718: jne 0x478725
47871a: cmp qword ptr [r15 + 0x30], 8
47871f: je 0x47883c
478725: test r14, r14
478728: je 0x478732
47872a: mov rdi, r14
47872d: call 0x426a00
478732: xor eax, eax
478734: lea rsp, [rbp - 0x28]
478738: pop rbx
478739: pop r12
47873b: pop r13
47873d: pop r14
47873f: pop r15
478741: pop rbp
478742: ret 
478743: nop dword ptr [rax + rax]
478748: lea rax, [r12 + 0x17]
47874d: mov rdi, rsp
478750: mov rdx, rax
478753: and rax, 0xfffffffffffff000
478759: sub rdi, rax
47875c: and rdx, 0xfffffffffffffff0
478760: mov rax, rdi
478763: cmp rsp, rax
478766: je 0x47877d
478768: sub rsp, 0x1000
47876f: or qword ptr [rsp + 0xff8], 0
478778: cmp rsp, rax
47877b: jne 0x478768
47877d: and edx, 0xfff
478783: sub rsp, rdx
478786: test rdx, rdx
478789: je 0x478791
47878b: or qword ptr [rsp + rdx - 8], 0
478791: lea rbx, [rsp + 0xf]
478796: mov rcx, r9
478799: mov rdx, r12
47879c: mov edi, r8d
47879f: and rbx, 0xfffffffffffffff0
4787a3: mov rsi, rbx
4787a6: call 0x487e70
4787ab: cmp rax, r12
4787ae: jne 0x478832
4787b4: test byte ptr [r13 + 0x321], 7
4787bc: jne 0x478732
4787c2: cmp qword ptr [r15 + 0x30], 8
4787c7: jne 0x478732
4787cd: mov rax, rbx
4787d0: cmp r12, 0xc
4787d4: ja 0x4785e6
4787da: jmp 0x478732
4787df: nop 
4787e0: mov esi, dword ptr [rbp - 0x38]
4787e3: mov eax, esi
4787e5: and eax, 2
4787e8: and esi, 1
4787eb: je 0x4787f5
4787ed: or byte ptr [r13 + 0x321], 2
4787f5: test eax, eax
4787f7: je 0x478725
4787fd: or byte ptr [r13 + 0x321], 4
478805: jmp 0x478725
47880a: nop word ptr [rax + rax]
478810: cmp r10d, 4
478814: jne 0x478725
47881a: mov ecx, dword ptr [rcx + 8]
47881d: mov dword ptr [rbp - 0x38], ecx
478820: jmp 0x478603
478825: test r14, r14
478828: je 0x478832
47882a: mov rdi, r14
47882d: call 0x426a00
478832: mov eax, 0xffffffff
478837: jmp 0x478734
47883c: mov rax, r14
47883f: mov rbx, r14
478842: jmp 0x4785e9
478847: nop word ptr [rax + rax]
478850: push r15
478852: mov r15, rcx
478855: push r14
478857: mov r14, r9
47885a: push r13
47885c: mov r13, rdx
47885f: push r12
478861: mov r12d, edi
478864: push rbp
478865: mov rbp, r8
478868: push rbx
478869: sub rsp, 8
47886d: mov rbx, qword ptr [rsp + 0x40]
478872: cmp esi, -1
478875: je 0x47887e
478877: mov edi, esi
478879: call 0x451730
47887e: test rbp, rbp
478881: je 0x478895
478883: mov rdi, qword ptr [rbp + 0x348]
47888a: cmp rdi, -1
47888e: je 0x478895
478890: call 0x426a00
478895: mov rdi, rbp
478898: call 0x426a00
47889d: mov rdi, r15
4788a0: call 0x426a00
4788a5: test rbx, rbx
4788a8: je 0x4788b7
4788aa: mov dword ptr [rbx + 0x18], 0
4788b1: call 0x4547f0
4788b6: nop 
4788b7: mov rcx, r14
4788ba: xor edx, edx
4788bc: mov rsi, r13
4788bf: mov edi, r12d
4788c2: call 0x485060
4788c7: nop word ptr [rax + rax]
4788d0: push r13
4788d2: push r12
4788d4: push rbp
4788d5: mov rbp, rsi
4788d8: push rbx
4788d9: mov rbx, rdi
4788dc: sub rsp, 8
4788e0: test rdi, rdi
4788e3: jne 0x4788fc
4788e5: jmp 0x478972
4788ea: nop word ptr [rax + rax]
4788f0: mov rax, qword ptr [rbx + 8]
4788f4: test rax, rax
4788f7: je 0x478920
4788f9: mov rbx, rax
4788fc: mov rsi, qword ptr [rbx]
4788ff: mov rdi, rbp
478902: call 0x401130
478907: test eax, eax
478909: jne 0x4788f0
47890b: add rsp, 8
47890f: pop rbx
478910: pop rbp
478911: pop r12
478913: pop r13
478915: ret 
478916: nop word ptr cs:[rax + rax]
478920: mov rdi, rbp
478923: call 0x401180
478928: lea rdi, [rax + 0x19]
47892c: lea r13, [rax + 1]
478930: call 0x426410
478935: mov r12, rax
478938: test rax, rax
47893b: je 0x478988
47893d: lea rdi, [r12 + 0x18]
478942: mov rdx, r13
478945: mov rsi, rbp
478948: call 0x401060
47894d: mov qword ptr [r12 + 8], 0
478956: mov qword ptr [r12], rax
47895a: mov dword ptr [r12 + 0x10], 0
478963: mov qword ptr [rbx + 8], r12
478967: add rsp, 8
47896b: pop rbx
47896c: pop rbp
47896d: pop r12
47896f: pop r13
478971: ret 
478972: mov rdi, rsi
478975: call 0x401180
47897a: lea rdi, [rax + 0x19]
47897e: call 0x426410
478983: test rax, rax
478986: jne 0x47899e
478988: lea rcx, [rip + 0x318d1]
47898f: xor edx, edx
478991: mov rsi, rbp
478994: mov edi, 0xc
478999: call 0x485060
47899e: lea rcx, [rip + 0x3216b]
4789a5: mov edx, 0x1af
4789aa: lea rsi, [rip + 0x318cb]
4789b1: lea rdi, [rip + 0x318ce]
4789b8: call 0x4032a0
4789bd: nop dword ptr [rax]
4789c0: cmp rsi, -1
4789c4: je 0x478a80
4789ca: push r13
4789cc: mov r13d, 2
4789d2: push r12
4789d4: mov r12, rsi
4789d7: push rbp
4789d8: push rbx
4789d9: mov rbx, rdi
4789dc: sub rsp, 8
4789e0: mov rsi, qword ptr [rsi]
4789e3: jmp 0x478a00
4789e5: nop dword ptr [rax]
4789e8: mov rsi, qword ptr [r12]
4789ec: add dword ptr [rcx + 8], 1
4789f0: cmp rdx, 2
4789f4: cmovb rdx, r13
4789f8: add qword ptr [rcx], rdx
4789fb: test rsi, rsi
4789fe: je 0x478a62
478a00: add r12, 8
478a04: cmp byte ptr [rbx], 0
478a07: mov rcx, qword ptr [rbx + 8]
478a0b: mov rdx, qword ptr [rsi + 0x20]
478a0f: jne 0x4789e8
478a11: mov eax, dword ptr [rbx + 4]
478a14: lea edi, [rax + 1]
478a17: shl rax, 4
478a1b: mov dword ptr [rbx + 4], edi
478a1e: mov rdi, qword ptr [rbx + 0x10]
478a22: lea rbp, [rcx + rax]
478a26: mov qword ptr [rbp + 0x10], rdi
478a2a: cmp rdx, 1
478a2e: ja 0x478a70
478a30: test rdx, rdx
478a33: lea rdx, [rdi + 1]
478a37: setne al
478a3a: mov qword ptr [rbx + 0x10], rdx
478a3e: add eax, 0x2e
478a41: mov byte ptr [rdi], al
478a43: mov rax, qword ptr [rbx + 0x10]
478a47: lea rdx, [rax + 1]
478a4b: mov qword ptr [rbx + 0x10], rdx
478a4f: mov byte ptr [rax], 0
478a52: mov rsi, qword ptr [r12]
478a56: mov dword ptr [rbp + 0x18], 0
478a5d: test rsi, rsi
478a60: jne 0x478a00
478a62: add rsp, 8
478a66: pop rbx
478a67: pop rbp
478a68: pop r12
478a6a: pop r13
478a6c: ret 
478a6d: nop dword ptr [rax]
478a70: mov rsi, qword ptr [rsi + 0x18]
478a74: sub rdx, 1
478a78: call 0x401150
478a7d: jmp 0x478a47
478a7f: nop 
478a80: ret 
478a81: nop word ptr cs:[rax + rax]
478a8c: nop dword ptr [rax]
478a90: push rbp
478a91: xor eax, eax
478a93: mov rbp, rsp
478a96: push r15
478a98: push r14
478a9a: mov r14, rsi
478a9d: mov esi, 0x80000
478aa2: push r13
478aa4: mov r13, rdi
478aa7: push r12
478aa9: push rbx
478aaa: mov rbx, rdx
478aad: sub rsp, 0x28
478ab1: call 0x4518a0
478ab6: mov r15d, eax
478ab9: cmp eax, -1
478abc: je 0x478c1c
478ac2: mov rax, 0xffffffffffffffc0
478ac9: xor esi, esi
478acb: mov r12d, 0x340
478ad1: mov dword ptr fs:[rax], 0
478ad8: lea rax, [r14 + 8]
478adc: mov qword ptr [r14], 0
478ae3: mov qword ptr [rbp - 0x38], rax
478ae7: mov rdx, r12
478aea: mov edi, r15d
478aed: sub rdx, rsi
478af0: add rsi, qword ptr [rbp - 0x38]
478af4: call 0x4519f0
478af9: test rax, rax
478afc: jle 0x478fdc
478b02: add rax, qword ptr [r14]
478b05: mov qword ptr [r14], rax
478b08: mov rsi, rax
478b0b: cmp rax, 0x3f
478b0f: jbe 0x478ae7
478b11: cmp rsi, 0x3f
478b15: jle 0x478e20
478b1b: movabs rax, 0x10102464c457f
478b25: cmp qword ptr [r14 + 8], rax
478b29: jne 0x478e58
478b2f: movzx eax, byte ptr [r14 + 0x10]
478b34: test al, al
478b36: jne 0x478e78
478b3c: mov edi, dword ptr [rip + 0x31f27]
478b42: cmp dword ptr [r14 + 0x11], edi
478b46: je 0x478c30
478b4c: cmp dword ptr [r14 + 8], 0x464c457f
478b54: jne 0x47903b
478b5a: cmp byte ptr [r14 + 0xc], 2
478b5f: jne 0x478be0
478b61: cmp word ptr [r14 + 0x1a], 0x3e
478b67: jne 0x478fc8
478b6d: xor edi, edi
478b6f: cmp byte ptr [r14 + 0xd], 1
478b74: lea r9, [rip + 0x319c5]
478b7b: jne 0x478e3e
478b81: cmp byte ptr [r14 + 0xe], 1
478b86: lea r9, [rip + 0x3197b]
478b8d: jne 0x478e3e
478b93: movzx edx, byte ptr [r14 + 0xf]
478b98: cmp dl, 3
478b9b: setne al
478b9e: test dl, dl
478ba0: je 0x478bb1
478ba2: lea r9, [rip + 0x31710]
478ba9: test al, al
478bab: jne 0x478e3e
478bb1: movzx edx, byte ptr [r14 + 0x10]
478bb6: test dl, dl
478bb8: je 0x478ff8
478bbe: cmp dl, 3
478bc1: ja 0x478bcb
478bc3: test al, al
478bc5: je 0x478ff8
478bcb: xor edi, edi
478bcd: lea r9, [rip + 0x316fd]
478bd4: jmp 0x478e3e
478bd9: nop dword ptr [rax]
478be0: mov byte ptr [rbx], 1
478be3: xor r10d, r10d
478be6: nop word ptr cs:[rax + rax]
478bf0: mov edi, r15d
478bf3: mov qword ptr [rbp - 0x38], r10
478bf7: mov r15d, 0xffffffff
478bfd: call 0x451730
478c02: mov rax, 0xffffffffffffffc0
478c09: mov dword ptr fs:[rax], 2
478c10: mov r10, qword ptr [rbp - 0x38]
478c14: mov rdi, r10
478c17: call 0x426a00
478c1c: lea rsp, [rbp - 0x28]
478c20: mov eax, r15d
478c23: pop rbx
478c24: pop r12
478c26: pop r13
478c28: pop r14
478c2a: pop r15
478c2c: pop rbp
478c2d: ret 
478c2e: nop 
478c30: movzx edi, word ptr [rip + 0x31e36]
478c37: cmp word ptr [r14 + 0x15], di
478c3c: jne 0x478b4c
478c42: movzx edi, byte ptr [rip + 0x31e26]
478c49: cmp byte ptr [r14 + 0x17], dil
478c4d: jne 0x478b4c
478c53: xor edi, edi
478c55: cmp dword ptr [r14 + 0x1c], 1
478c5a: jne 0x478fb7
478c60: cmp word ptr [r14 + 0x1a], 0x3e
478c66: jne 0x478fc8
478c6c: movzx eax, word ptr [r14 + 0x18]
478c71: sub eax, 2
478c74: cmp ax, 1
478c78: ja 0x478fd0
478c7e: cmp word ptr [r14 + 0x3e], 0x38
478c84: jne 0x478fe4
478c8a: movzx ecx, word ptr [r14 + 0x40]
478c8f: mov r10, qword ptr [r14 + 0x28]
478c93: lea rbx, [rcx*8]
478c9b: sub rbx, rcx
478c9e: shl rbx, 3
478ca2: lea rdx, [rbx + r10]
478ca6: mov rax, rbx
478ca9: cmp rdx, rsi
478cac: ja 0x478ee0
478cb2: mov rdi, qword ptr [rbp - 0x38]
478cb6: lea r9, [rdi + r10]
478cba: add rax, r9
478cbd: cmp r9, rax
478cc0: jae 0x478ff0
478cc6: mov rbx, r9
478cc9: xor r10d, r10d
478ccc: jmp 0x478cec
478cce: nop 
478cd0: lea rax, [rcx*8]
478cd8: add rbx, 0x38
478cdc: sub rax, rcx
478cdf: lea rax, [r9 + rax*8]
478ce3: cmp rbx, rax
478ce6: jae 0x478c14
478cec: cmp dword ptr [rbx], 4
478cef: jne 0x478cd0
478cf1: mov rdx, qword ptr [rbx + 0x20]
478cf5: cmp rdx, 0x1f
478cf9: jbe 0x478cd0
478cfb: mov rax, qword ptr [rbx + 0x30]
478cff: sub rax, 4
478d03: test rax, -5
478d09: jne 0x478cd0
478d0b: mov rcx, qword ptr [rbx + 8]
478d0f: lea rax, [rdx + rcx]
478d13: cmp rax, qword ptr [r14]
478d16: jbe 0x478f70
478d1c: cmp rdx, 0xffff
478d23: ja 0x478f80
478d29: lea rax, [rdx + 0x17]
478d2d: mov rdi, rsp
478d30: mov rsi, rax
478d33: and rax, 0xfffffffffffff000
478d39: sub rdi, rax
478d3c: and rsi, 0xfffffffffffffff0
478d40: mov rax, rdi
478d43: cmp rsp, rax
478d46: je 0x478d5d
478d48: sub rsp, 0x1000
478d4f: or qword ptr [rsp + 0xff8], 0
478d58: cmp rsp, rax
478d5b: jne 0x478d48
478d5d: and esi, 0xfff
478d63: sub rsp, rsi
478d66: test rsi, rsi
478d69: je 0x478d71
478d6b: or qword ptr [rsp + rsi - 8], 0
478d71: lea r12, [rsp + 0xf]
478d76: and r12, 0xfffffffffffffff0
478d7a: mov rsi, r12
478d7d: mov edi, r15d
478d80: mov qword ptr [rbp - 0x50], r10
478d84: mov qword ptr [rbp - 0x48], r9
478d88: mov qword ptr [rbp - 0x40], rdx
478d8c: call 0x487e70
478d91: mov rdx, qword ptr [rbp - 0x40]
478d95: mov r9, qword ptr [rbp - 0x48]
478d99: mov r10, qword ptr [rbp - 0x50]
478d9d: cmp rax, rdx
478da0: jne 0x479049
478da6: lea rdi, [rip + 0x31da3]
478dad: nop dword ptr [rax]
478db0: mov rax, qword ptr [r12]
478db4: mov rcx, qword ptr [r12 + 8]
478db9: xor rax, qword ptr [rdi]
478dbc: xor rcx, qword ptr [rip + 0x31d95]
478dc3: or rcx, rax
478dc6: jne 0x478e90
478dcc: test rdx, rdx
478dcf: je 0x478ed0
478dd5: mov eax, dword ptr [r12 + 0x10]
478dda: test eax, eax
478ddc: jne 0x478bf0
478de2: movzx eax, byte ptr [r12 + 0x14]
478de8: movzx ecx, byte ptr [r12 + 0x18]
478dee: mov edx, dword ptr [rip + 0x4aa74]
478df4: shl eax, 8
478df7: add eax, ecx
478df9: movzx ecx, byte ptr [r12 + 0x1c]
478dff: shl eax, 8
478e02: add eax, ecx
478e04: cmp eax, edx
478e06: jbe 0x478c14
478e0c: test edx, edx
478e0e: je 0x478c14
478e14: jmp 0x478bf0
478e19: nop dword ptr [rax]
478e20: mov rax, 0xffffffffffffffc0
478e27: lea r9, [rip + 0x31466]
478e2e: mov edi, dword ptr fs:[rax]
478e31: lea rax, [rip + 0x3146b]
478e38: test edi, edi
478e3a: cmovne r9, rax
478e3e: push 0
478e40: xor r8d, r8d
478e43: xor ecx, ecx
478e45: mov rdx, r13
478e48: push 0
478e4a: mov esi, r15d
478e4d: call 0x478850
478e52: nop word ptr [rax + rax]
478e58: movabs rax, 0x3010102464c457f
478e62: cmp qword ptr [r14 + 8], rax
478e66: je 0x478b2f
478e6c: jmp 0x478b4c
478e71: nop dword ptr [rax]
478e78: cmp byte ptr [r14 + 0xf], 3
478e7d: jne 0x478b4c
478e83: cmp al, 3
478e85: jbe 0x478b3c
478e8b: jmp 0x478b4c
478e90: mov rcx, qword ptr [rbx + 0x30]
478e94: mov eax, dword ptr [r12]
478e98: mov r11d, dword ptr [r12 + 4]
478e9d: mov rsi, rcx
478ea0: lea rax, [rcx + rax + 0xb]
478ea5: neg rsi
478ea8: lea rcx, [rcx + r11 - 1]
478ead: and rax, rsi
478eb0: add rax, rcx
478eb3: and rsi, rax
478eb6: lea rax, [rdx - 0x20]
478eba: cmp rsi, rax
478ebd: ja 0x478ed0
478ebf: sub rdx, rsi
478ec2: add r12, rsi
478ec5: jmp 0x478db0
478eca: nop word ptr [rax + rax]
478ed0: movzx ecx, word ptr [r14 + 0x40]
478ed5: jmp 0x478cd0
478eda: nop word ptr [rax + rax]
478ee0: lea rax, [rbx + 0x17]
478ee4: mov rdi, rsp
478ee7: mov rdx, rax
478eea: and rax, 0xfffffffffffff000
478ef0: sub rdi, rax
478ef3: and rdx, 0xfffffffffffffff0
478ef7: mov rax, rdi
478efa: cmp rsp, rax
478efd: je 0x478f14
478eff: sub rsp, 0x1000
478f06: or qword ptr [rsp + 0xff8], 0
478f0f: cmp rsp, rax
478f12: jne 0x478eff
478f14: and edx, 0xfff
478f1a: sub rsp, rdx
478f1d: test rdx, rdx
478f20: je 0x478f28
478f22: or qword ptr [rsp + rdx - 8], 0
478f28: lea r9, [rsp + 0xf]
478f2d: mov rcx, r10
478f30: mov rdx, rbx
478f33: mov edi, r15d
478f36: and r9, 0xfffffffffffffff0
478f3a: mov rsi, r9
478f3d: mov qword ptr [rbp - 0x40], r9
478f41: call 0x487e70
478f46: mov r9, qword ptr [rbp - 0x40]
478f4a: cmp rax, rbx
478f4d: jne 0x479051
478f53: movzx ecx, word ptr [r14 + 0x40]
478f58: lea rax, [rcx*8]
478f60: sub rax, rcx
478f63: shl rax, 3
478f67: jmp 0x478cba
478f6c: nop dword ptr [rax]
478f70: mov rax, qword ptr [rbp - 0x38]
478f74: lea r12, [rax + rcx]
478f78: jmp 0x478da6
478f7d: nop dword ptr [rax]
478f80: mov rsi, rdx
478f83: mov rdi, r10
478f86: mov qword ptr [rbp - 0x50], rcx
478f8a: mov qword ptr [rbp - 0x48], r9
478f8e: mov qword ptr [rbp - 0x40], rdx
478f92: call 0x427100
478f97: mov r12, rax
478f9a: test rax, rax
478f9d: je 0x479051
478fa3: mov rcx, qword ptr [rbp - 0x50]
478fa7: mov r9, qword ptr [rbp - 0x48]
478fab: mov r10, rax
478fae: mov rdx, qword ptr [rbp - 0x40]
478fb2: jmp 0x478d7a
478fb7: lea r9, [rip + 0x3151a]
478fbe: jmp 0x478e3e
478fc3: nop dword ptr [rax + rax]
478fc8: xor r10d, r10d
478fcb: jmp 0x478bf0
478fd0: lea r9, [rip + 0x314d9]
478fd7: jmp 0x478e3e
478fdc: mov rsi, qword ptr [r14]
478fdf: jmp 0x478b11
478fe4: lea r9, [rip + 0x31585]
478feb: jmp 0x478e3e
478ff0: xor r10d, r10d
478ff3: jmp 0x478c14
478ff8: mov edi, dword ptr [rip + 0x31a6b]
478ffe: cmp dword ptr [r14 + 0x11], edi
479002: je 0x479012
479004: xor edi, edi
479006: lea r9, [rip + 0x312e1]
47900d: jmp 0x478e3e
479012: movzx edi, word ptr [rip + 0x31a54]
479019: cmp word ptr [r14 + 0x15], di
47901e: jne 0x479004
479020: movzx edi, byte ptr [rip + 0x31a48]
479027: cmp byte ptr [r14 + 0x17], dil
47902b: jne 0x479004
47902d: xor edi, edi
47902f: lea r9, [rip + 0x312e6]
479036: jmp 0x478e3e
47903b: xor edi, edi
47903d: lea r9, [rip + 0x312c5]
479044: jmp 0x478e3e
479049: mov rdi, r10
47904c: call 0x426a00
479051: mov rax, 0xffffffffffffffc0
479058: lea r9, [rip + 0x31244]
47905f: mov edi, dword ptr fs:[rax]
479062: jmp 0x478e3e
479067: nop word ptr [rax + rax]
479070: push rbp
479071: mov rbp, rsp
479074: push r15
479076: push r14
479078: push r13
47907a: push r12
47907c: push rbx
47907d: sub rsp, 0x108
479084: mov rax, qword ptr [rcx]
479087: mov qword ptr [rbp - 0xd8], rdi
47908e: mov qword ptr [rbp - 0x120], rcx
479095: mov qword ptr [rbp - 0x108], r8
47909c: mov qword ptr [rbp - 0xe0], r9
4790a3: mov qword ptr [rbp - 0xe8], rax
4790aa: test rax, rax
4790ad: je 0x4792c3
4790b3: mov rax, qword ptr [rip + 0x46e06]
4790ba: add rax, qword ptr [rip + 0x49e7f]
4790c1: mov r14, rsi
4790c4: lea rax, [rsi + rax + 0x17]
4790c9: mov rsi, rsp
4790cc: mov rcx, rax
4790cf: and rax, 0xfffffffffffff000
4790d5: sub rsi, rax
4790d8: and rcx, 0xfffffffffffffff0
4790dc: mov rax, rsi
4790df: cmp rsp, rax
4790e2: je 0x4790f9
4790e4: sub rsp, 0x1000
4790eb: or qword ptr [rsp + 0xff8], 0
4790f4: cmp rsp, rax
4790f7: jne 0x4790e4
4790f9: and ecx, 0xfff
4790ff: sub rsp, rcx
479102: test rcx, rcx
479105: jne 0x479633
47910b: and edx, 0x4000000
479111: lea rax, [rsp + 0xf]
479116: mov dword ptr [rbp - 0xf0], 0
479120: mov dword ptr [rbp - 0xec], edx
479126: and rax, 0xfffffffffffffff0
47912a: mov qword ptr [rbp - 0x118], 0
479135: mov r15, rax
479138: mov qword ptr [rbp - 0xd0], r14
47913f: nop 
479140: mov rax, qword ptr [rbp - 0xe8]
479147: mov rbx, qword ptr [rax]
47914a: mov eax, dword ptr [rip + 0x4a670]
479150: and eax, 1
479153: mov r13d, eax
479156: jne 0x4794c0
47915c: mov rdx, qword ptr [rbx + 0x20]
479160: mov rsi, qword ptr [rbx + 0x18]
479164: mov rdi, r15
479167: xor r12d, r12d
47916a: xor r13d, r13d
47916d: call 0x401150
479172: mov r14, rax
479175: lea rax, [rbp - 0xc0]
47917c: mov qword ptr [rbp - 0xf8], rax
479183: mov rax, qword ptr [rbp - 0xd0]
47918a: not rax
47918d: mov qword ptr [rbp - 0x100], rax
479194: mov rax, r14
479197: mov r14, rbx
47919a: mov rbx, r12
47919d: mov r12, rax
4791a0: mov rax, qword ptr [rip + 0x46d21]
4791a7: cmp rax, rbx
4791aa: jbe 0x479344
4791b0: cmp dword ptr [r14 + rbx*4 + 0x28], 1
4791b6: lea rcx, [rbx + 1]
4791ba: je 0x479338
4791c0: mov rax, rbx
4791c3: mov rdi, r12
4791c6: shl rax, 4
4791ca: add rax, qword ptr [rip + 0x46cff]
4791d1: mov rdx, qword ptr [rax + 8]
4791d5: mov rsi, qword ptr [rax]
4791d8: call 0x401150
4791dd: mov rdx, qword ptr [rbp - 0xd0]
4791e4: mov rsi, qword ptr [rbp - 0xd8]
4791eb: mov rdi, rax
4791ee: call 0x401150
4791f3: sub rax, r15
4791f6: mov qword ptr [rbp - 0xc8], rax
4791fd: test byte ptr [rip + 0x4a5bc], 1
479204: jne 0x479438
47920a: mov rdx, qword ptr [rbp + 0x20]
47920e: mov rsi, qword ptr [rbp - 0xe0]
479215: mov rdi, r15
479218: call 0x478a90
47921d: mov r8d, eax
479220: mov eax, dword ptr [r14 + rbx*4 + 0x28]
479225: test eax, eax
479227: jne 0x4793e0
47922d: cmp r8d, -1
479231: je 0x479400
479237: mov dword ptr [r14 + rbx*4 + 0x28], 2
479240: mov r13d, 1
479246: mov eax, dword ptr [rbp - 0xec]
47924c: test eax, eax
47924e: je 0x479270
479250: mov esi, dword ptr [rip + 0x4684a]
479256: test esi, esi
479258: jne 0x4792e0
47925e: add rbx, 1
479262: cmp r8d, -1
479266: je 0x4791a0
47926c: nop dword ptr [rax]
479270: mov rdi, qword ptr [rbp - 0xc8]
479277: mov dword ptr [rbp - 0xd0], r8d
47927e: call 0x426410
479283: mov rcx, qword ptr [rbp - 0x108]
47928a: mov r8d, dword ptr [rbp - 0xd0]
479291: test rax, rax
479294: mov qword ptr [rcx], rax
479297: je 0x4792bb
479299: mov rdx, qword ptr [rbp - 0xc8]
4792a0: mov rsi, r15
4792a3: mov rdi, rax
4792a6: mov dword ptr [rbp - 0xd0], r8d
4792ad: call 0x401060
4792b2: mov r8d, dword ptr [rbp - 0xd0]
4792b9: jmp 0x4792c9
4792bb: mov edi, r8d
4792be: call 0x451730
4792c3: mov r8d, 0xffffffff
4792c9: lea rsp, [rbp - 0x28]
4792cd: mov eax, r8d
4792d0: pop rbx
4792d1: pop r12
4792d3: pop r13
4792d5: pop r14
4792d7: pop r15
4792d9: pop rbp
4792da: ret 
4792db: nop dword ptr [rax + rax]
4792e0: mov rdx, qword ptr [rbp - 0xf8]
4792e7: mov esi, r8d
4792ea: mov edi, 1
4792ef: mov dword ptr [rbp - 0x110], r8d
4792f6: call 0x450c30
4792fb: mov r8d, dword ptr [rbp - 0x110]
479302: test eax, eax
479304: jne 0x479313
479306: test byte ptr [rbp - 0xa7], 8
47930d: jne 0x47925e
479313: mov edi, r8d
479316: call 0x451730
47931b: mov rax, 0xffffffffffffffc0
479322: lea rcx, [rbx + 1]
479326: mov dword ptr fs:[rax], 2
47932d: mov rax, qword ptr [rip + 0x46b94]
479334: nop dword ptr [rax]
479338: mov rbx, rcx
47933b: cmp rax, rcx
47933e: ja 0x4791b0
479344: test r13d, r13d
479347: je 0x479361
479349: mov rax, 0xffffffffffffffc0
479350: mov eax, dword ptr fs:[rax]
479353: cmp eax, 0xd
479356: je 0x479361
479358: cmp eax, 2
47935b: jne 0x4792c3
479361: add qword ptr [rbp - 0xe8], 8
479369: mov rax, qword ptr [rbp - 0xe8]
479370: or dword ptr [rbp - 0xf0], r13d
479377: cmp qword ptr [rax], 0
47937b: jne 0x479140
479381: mov ecx, dword ptr [rbp - 0xf0]
479387: test ecx, ecx
479389: jne 0x4792c3
47938f: mov rax, qword ptr [rbp - 0x120]
479396: mov edx, dword ptr [rax + 8]
479399: test edx, edx
47939b: jne 0x4796fa
4793a1: mov rcx, qword ptr [rbp - 0x120]
4793a8: lea rax, [rip + 0x46b31]
4793af: cmp rcx, rax
4793b2: je 0x4792c3
4793b8: lea rax, [rip + 0x46af1]
4793bf: cmp rcx, rax
4793c2: je 0x4792c3
4793c8: mov qword ptr [rcx], 0xffffffffffffffff
4793cf: mov r8d, 0xffffffff
4793d5: jmp 0x4792c9
4793da: nop word ptr [rax + rax]
4793e0: cmp eax, 1
4793e3: setne al
4793e6: movzx eax, al
4793e9: or r13d, eax
4793ec: cmp r8d, -1
4793f0: jne 0x479246
4793f6: add rbx, 1
4793fa: jmp 0x4791a0
4793ff: nop 
479400: cmp qword ptr [rbp + 0x10], 0
479405: je 0x479450
479407: mov rax, qword ptr [rbp + 0x10]
47940b: lea rcx, [rip + 0x47d6e]
479412: mov rax, qword ptr [rax + 0x30]
479416: lea rax, [rax + rax*8]
47941a: shl rax, 4
47941e: mov rax, qword ptr [rcx + rax]
479422: test byte ptr [rax + 0x31d], 8
479429: je 0x479450
47942b: mov r13d, 1
479431: jmp 0x4793f6
479433: nop dword ptr [rax + rax]
479438: mov rsi, r15
47943b: lea rdi, [rip + 0x30f27]
479442: xor eax, eax
479444: call 0x480f60
479449: jmp 0x47920a
47944e: nop 
479450: mov rax, qword ptr [rbp - 0xc8]
479457: mov rcx, qword ptr [rbp - 0x100]
47945e: mov rsi, r15
479461: mov edi, 1
479466: mov rdx, qword ptr [rbp - 0xf8]
47946d: add rax, r15
479470: mov byte ptr [rax + rcx], 0
479474: call 0x450bd0
479479: mov r8d, eax
47947c: mov eax, 1
479481: test r8d, r8d
479484: jne 0x4794af
479486: mov edx, dword ptr [rbp - 0xa8]
47948c: xor eax, eax
47948e: and edx, 0xf000
479494: cmp edx, 0x4000
47949a: sete al
47949d: add eax, 1
4794a0: cmp edx, 0x4000
4794a6: mov edx, 1
4794ab: cmove r13d, edx
4794af: mov dword ptr [r14 + rbx*4 + 0x28], eax
4794b4: jmp 0x4793f6
4794b9: nop dword ptr [rax]
4794c0: mov rax, qword ptr [rbx + 8]
4794c4: mov qword ptr [rbp - 0xf8], rax
4794cb: cmp rax, qword ptr [rbp - 0x118]
4794d2: je 0x47915c
4794d8: mov rax, qword ptr [rbx + 0x10]
4794dc: mov rcx, rsp
4794df: mov qword ptr [rbp - 0x110], rsp
4794e6: mov qword ptr [rbp - 0x100], rax
4794ed: mov rax, qword ptr [rip + 0x469cc]
4794f4: add rax, qword ptr [rip + 0x49a45]
4794fb: add rax, 0xf
4794ff: mov rdx, rax
479502: and rax, 0xfffffffffffff000
479508: sub rcx, rax
47950b: and rdx, 0xfffffffffffffff0
47950f: mov rax, rcx
479512: cmp rsp, rax
479515: je 0x47952c
479517: sub rsp, 0x1000
47951e: or qword ptr [rsp + 0xff8], 0
479527: cmp rsp, rax
47952a: jne 0x479517
47952c: and edx, 0xfff
479532: sub rsp, rdx
479535: test rdx, rdx
479538: je 0x479540
47953a: or qword ptr [rsp + rdx - 8], 0
479540: xor eax, eax
479542: lea rdi, [rip + 0x30df5]
479549: mov r12, rsp
47954c: call 0x480f60
479551: mov r14, qword ptr [rbp - 0xe8]
479558: mov rax, qword ptr [r14]
47955b: test rax, rax
47955e: je 0x47965f
479564: mov qword ptr [rbp - 0x128], r15
47956b: mov qword ptr [rbp - 0x118], rbx
479572: mov ebx, r13d
479575: nop dword ptr [rax]
479578: mov rcx, qword ptr [rbp - 0xf8]
47957f: cmp rcx, qword ptr [rax + 8]
479583: jne 0x479651
479589: mov rdx, qword ptr [rax + 0x20]
47958d: mov rsi, qword ptr [rax + 0x18]
479591: mov rdi, r12
479594: call 0x401150
479599: mov rdx, qword ptr [rip + 0x46928]
4795a0: mov r13, rax
4795a3: test rdx, rdx
4795a6: je 0x479640
4795ac: lea rax, [r12 + 1]
4795b1: xor r15d, r15d
4795b4: mov qword ptr [rbp - 0xc8], rax
4795bb: jmp 0x479601
4795bd: nop dword ptr [rax]
4795c0: cmp rax, qword ptr [rbp - 0xc8]
4795c7: je 0x4796d0
4795cd: mov byte ptr [rax - 1], 0
4795d1: test ebx, ebx
4795d3: lea rax, [rip + 0x368cc]
4795da: lea rdi, [rip + 0x30d4a]
4795e1: mov rsi, r12
4795e4: cmovne rdi, rax
4795e8: xor eax, eax
4795ea: xor ebx, ebx
4795ec: call 0x481010
4795f1: mov rdx, qword ptr [rip + 0x468d0]
4795f8: add r15, 1
4795fc: cmp r15, rdx
4795ff: jae 0x479640
479601: mov rax, qword ptr [r14]
479604: cmp dword ptr [rax + r15*4 + 0x28], 1
47960a: je 0x4795f8
47960c: mov rax, r15
47960f: mov rdi, r13
479612: shl rax, 4
479616: add rax, qword ptr [rip + 0x468b3]
47961d: mov rdx, qword ptr [rax + 8]
479621: mov rsi, qword ptr [rax]
479624: call 0x401150
479629: cmp r12, rax
47962c: jne 0x4795c0
47962e: mov byte ptr [rax], 0
479631: jmp 0x4795d1
479633: or qword ptr [rsp + rcx - 8], 0
479639: jmp 0x47910b
47963e: nop 
479640: mov rax, qword ptr [r14 + 8]
479644: add r14, 8
479648: test rax, rax
47964b: jne 0x479578
479651: mov rbx, qword ptr [rbp - 0x118]
479658: mov r15, qword ptr [rbp - 0x128]
47965f: cmp qword ptr [rbp - 0x100], 0
479667: je 0x4796e3
479669: mov rax, qword ptr [rbp - 0x100]
479670: cmp byte ptr [rax], 0
479673: jne 0x479694
479675: mov rax, qword ptr [rip + 0x463ec]
47967c: mov rcx, qword ptr [rax]
47967f: lea rax, [rip + 0x30ca9]
479686: test rcx, rcx
479689: cmovne rax, rcx
47968d: mov qword ptr [rbp - 0x100], rax
479694: mov rdx, qword ptr [rbp - 0x100]
47969b: mov rsi, qword ptr [rbp - 0xf8]
4796a2: lea rdi, [rip + 0x30ca3]
4796a9: xor eax, eax
4796ab: call 0x481010
4796b0: mov rax, qword ptr [rbp - 0xf8]
4796b7: mov rsp, qword ptr [rbp - 0x110]
4796be: mov qword ptr [rbp - 0x118], rax
4796c5: jmp 0x47915c
4796ca: nop word ptr [rax + rax]
4796d0: cmp byte ptr [r12], 0x2f
4796d5: jne 0x4795cd
4796db: mov byte ptr [rax], 0
4796de: jmp 0x4795d1
4796e3: mov rsi, qword ptr [rbp - 0xf8]
4796ea: lea rdi, [rip + 0x30c70]
4796f1: xor eax, eax
4796f3: call 0x481010
4796f8: jmp 0x4796b0
4796fa: mov rdi, qword ptr [rax]
4796fd: call 0x426a00
479702: jmp 0x4793a1
479707: nop word ptr [rax + rax]
479710: push rbp
479711: xor eax, eax
479713: mov rbp, rsp
479716: push r15
479718: push r14
47971a: mov r14, rsi
47971d: mov esi, 0x80000
479722: push r13
479724: mov r13, rdi
479727: push r12
479729: push rbx
47972a: mov rbx, rdx
47972d: sub rsp, 0x28
479731: call 0x4518a0
479736: mov r15d, eax
479739: cmp eax, -1
47973c: je 0x47989c
479742: mov rax, 0xffffffffffffffc0
479749: xor esi, esi
47974b: mov r12d, 0x340
479751: mov dword ptr fs:[rax], 0
479758: lea rax, [r14 + 8]
47975c: mov qword ptr [r14], 0
479763: mov qword ptr [rbp - 0x38], rax
479767: mov rdx, r12
47976a: mov edi, r15d
47976d: sub rdx, rsi
479770: add rsi, qword ptr [rbp - 0x38]
479774: call 0x4519f0
479779: test rax, rax
47977c: jle 0x479cec
479782: add rax, qword ptr [r14]
479785: mov qword ptr [r14], rax
479788: mov rsi, rax
47978b: cmp rax, 0x3f
47978f: jbe 0x479767
479791: cmp rsi, 0x3f
479795: jle 0x479aa0
47979b: movabs rax, 0x10102464c457f
4797a5: cmp qword ptr [r14 + 8], rax
4797a9: jne 0x479b50
4797af: movzx eax, byte ptr [r14 + 0x10]
4797b4: test al, al
4797b6: jne 0x479b70
4797bc: mov edi, dword ptr [rip + 0x312a7]
4797c2: cmp dword ptr [r14 + 0x11], edi
4797c6: je 0x4798b0
4797cc: cmp dword ptr [r14 + 8], 0x464c457f
4797d4: jne 0x479d4d
4797da: cmp byte ptr [r14 + 0xc], 2
4797df: jne 0x479860
4797e1: cmp word ptr [r14 + 0x1a], 0x3e
4797e7: jne 0x479cd0
4797ed: xor r12d, r12d
4797f0: cmp byte ptr [r14 + 0xd], 1
4797f5: lea rbx, [rip + 0x30d44]
4797fc: jne 0x479ac0
479802: cmp byte ptr [r14 + 0xe], 1
479807: lea rbx, [rip + 0x30cfa]
47980e: jne 0x479ac0
479814: movzx edx, byte ptr [r14 + 0xf]
479819: cmp dl, 3
47981c: setne al
47981f: test dl, dl
479821: je 0x479832
479823: lea rbx, [rip + 0x30a8f]
47982a: test al, al
47982c: jne 0x479ac0
479832: movzx edx, byte ptr [r14 + 0x10]
479837: test dl, dl
479839: je 0x479d08
47983f: cmp dl, 3
479842: ja 0x47984c
479844: test al, al
479846: je 0x479d08
47984c: xor r12d, r12d
47984f: lea rbx, [rip + 0x30a7b]
479856: jmp 0x479ac0
47985b: nop dword ptr [rax + rax]
479860: mov byte ptr [rbx], 1
479863: xor r10d, r10d
479866: nop word ptr cs:[rax + rax]
479870: mov edi, r15d
479873: mov qword ptr [rbp - 0x38], r10
479877: mov r15d, 0xffffffff
47987d: call 0x451730
479882: mov rax, 0xffffffffffffffc0
479889: mov dword ptr fs:[rax], 2
479890: mov r10, qword ptr [rbp - 0x38]
479894: mov rdi, r10
479897: call 0x426a00
47989c: lea rsp, [rbp - 0x28]
4798a0: mov eax, r15d
4798a3: pop rbx
4798a4: pop r12
4798a6: pop r13
4798a8: pop r14
4798aa: pop r15
4798ac: pop rbp
4798ad: ret 
4798ae: nop 
4798b0: movzx edi, word ptr [rip + 0x311b6]
4798b7: cmp word ptr [r14 + 0x15], di
4798bc: jne 0x4797cc
4798c2: movzx edi, byte ptr [rip + 0x311a6]
4798c9: cmp byte ptr [r14 + 0x17], dil
4798cd: jne 0x4797cc
4798d3: xor r12d, r12d
4798d6: cmp dword ptr [r14 + 0x1c], 1
4798db: jne 0x479cbf
4798e1: cmp word ptr [r14 + 0x1a], 0x3e
4798e7: jne 0x479cd0
4798ed: movzx eax, word ptr [r14 + 0x18]
4798f2: sub eax, 2
4798f5: cmp ax, 1
4798f9: ja 0x479ce0
4798ff: cmp word ptr [r14 + 0x3e], 0x38
479905: jne 0x479cf4
47990b: movzx ecx, word ptr [r14 + 0x40]
479910: mov r10, qword ptr [r14 + 0x28]
479914: lea rbx, [rcx*8]
47991c: sub rbx, rcx
47991f: shl rbx, 3
479923: lea rdx, [rbx + r10]
479927: mov rax, rbx
47992a: cmp rdx, rsi
47992d: ja 0x479be8
479933: mov rdi, qword ptr [rbp - 0x38]
479937: lea r9, [rdi + r10]
47993b: add rax, r9
47993e: cmp r9, rax
479941: jae 0x479d00
479947: mov rbx, r9
47994a: xor r10d, r10d
47994d: jmp 0x47996c
47994f: nop 
479950: lea rax, [rcx*8]
479958: add rbx, 0x38
47995c: sub rax, rcx
47995f: lea rax, [r9 + rax*8]
479963: cmp rbx, rax
479966: jae 0x479894
47996c: cmp dword ptr [rbx], 4
47996f: jne 0x479950
479971: mov rdx, qword ptr [rbx + 0x20]
479975: cmp rdx, 0x1f
479979: jbe 0x479950
47997b: mov rax, qword ptr [rbx + 0x30]
47997f: sub rax, 4
479983: test rax, -5
479989: jne 0x479950
47998b: mov rcx, qword ptr [rbx + 8]
47998f: lea rax, [rdx + rcx]
479993: cmp rax, qword ptr [r14]
479996: jbe 0x479c78
47999c: cmp rdx, 0xffff
4799a3: ja 0x479c88
4799a9: lea rax, [rdx + 0x17]
4799ad: mov rdi, rsp
4799b0: mov rsi, rax
4799b3: and rax, 0xfffffffffffff000
4799b9: sub rdi, rax
4799bc: and rsi, 0xfffffffffffffff0
4799c0: mov rax, rdi
4799c3: cmp rsp, rax
4799c6: je 0x4799dd
4799c8: sub rsp, 0x1000
4799cf: or qword ptr [rsp + 0xff8], 0
4799d8: cmp rsp, rax
4799db: jne 0x4799c8
4799dd: and esi, 0xfff
4799e3: sub rsp, rsi
4799e6: test rsi, rsi
4799e9: je 0x4799f1
4799eb: or qword ptr [rsp + rsi - 8], 0
4799f1: lea r12, [rsp + 0xf]
4799f6: and r12, 0xfffffffffffffff0
4799fa: mov rsi, r12
4799fd: mov edi, r15d
479a00: mov qword ptr [rbp - 0x50], r10
479a04: mov qword ptr [rbp - 0x48], r9
479a08: mov qword ptr [rbp - 0x40], rdx
479a0c: call 0x487e70
479a11: mov rdx, qword ptr [rbp - 0x40]
479a15: mov r9, qword ptr [rbp - 0x48]
479a19: mov r10, qword ptr [rbp - 0x50]
479a1d: cmp rax, rdx
479a20: jne 0x479d5c
479a26: lea rdi, [rip + 0x31123]
479a2d: nop dword ptr [rax]
479a30: mov rax, qword ptr [r12]
479a34: mov rcx, qword ptr [r12 + 8]
479a39: xor rax, qword ptr [rdi]
479a3c: xor rcx, qword ptr [rip + 0x31115]
479a43: or rcx, rax
479a46: jne 0x479b98
479a4c: test rdx, rdx
479a4f: je 0x479bd8
479a55: mov eax, dword ptr [r12 + 0x10]
479a5a: test eax, eax
479a5c: jne 0x479870
479a62: movzx eax, byte ptr [r12 + 0x14]
479a68: movzx ecx, byte ptr [r12 + 0x18]
479a6e: mov edx, dword ptr [rip + 0x49df4]
479a74: shl eax, 8
479a77: add eax, ecx
479a79: movzx ecx, byte ptr [r12 + 0x1c]
479a7f: shl eax, 8
479a82: add eax, ecx
479a84: cmp eax, edx
479a86: jbe 0x479894
479a8c: test edx, edx
479a8e: je 0x479894
479a94: jmp 0x479870
479a99: nop dword ptr [rax]
479aa0: mov rax, 0xffffffffffffffc0
479aa7: lea rbx, [rip + 0x307e6]
479aae: mov r12d, dword ptr fs:[rax]
479ab2: lea rax, [rip + 0x307ea]
479ab9: test r12d, r12d
479abc: cmovne rbx, rax
479ac0: mov rdi, r13
479ac3: call 0x401180
479ac8: mov rdi, rsp
479acb: lea r8, [rax + 1]
479acf: add rax, 0x18
479ad3: mov rdx, rax
479ad6: and rax, 0xfffffffffffff000
479adc: sub rdi, rax
479adf: and rdx, 0xfffffffffffffff0
479ae3: mov rax, rdi
479ae6: cmp rsp, rax
479ae9: je 0x479b00
479aeb: sub rsp, 0x1000
479af2: or qword ptr [rsp + 0xff8], 0
479afb: cmp rsp, rax
479afe: jne 0x479aeb
479b00: and edx, 0xfff
479b06: sub rsp, rdx
479b09: test rdx, rdx
479b0c: jne 0x479b88
479b0e: lea rdi, [rsp + 0xf]
479b13: mov rdx, r8
479b16: mov rsi, r13
479b19: and rdi, 0xfffffffffffffff0
479b1d: call 0x401060
479b22: mov rdi, r13
479b25: mov r14, rax
479b28: call 0x426a00
479b2d: push 0
479b2f: mov r9, rbx
479b32: xor r8d, r8d
479b35: push 0
479b37: xor ecx, ecx
479b39: mov rdx, r14
479b3c: mov esi, r15d
479b3f: mov edi, r12d
479b42: call 0x478850
479b47: nop word ptr [rax + rax]
479b50: movabs rax, 0x3010102464c457f
479b5a: cmp qword ptr [r14 + 8], rax
479b5e: je 0x4797af
479b64: jmp 0x4797cc
479b69: nop dword ptr [rax]
479b70: cmp byte ptr [r14 + 0xf], 3
479b75: jne 0x4797cc
479b7b: cmp al, 3
479b7d: jbe 0x4797bc
479b83: jmp 0x4797cc
479b88: or qword ptr [rsp + rdx - 8], 0
479b8e: jmp 0x479b0e
479b93: nop dword ptr [rax + rax]
479b98: mov rcx, qword ptr [rbx + 0x30]
479b9c: mov eax, dword ptr [r12]
479ba0: mov r11d, dword ptr [r12 + 4]
479ba5: mov rsi, rcx
479ba8: lea rax, [rcx + rax + 0xb]
479bad: neg rsi
479bb0: lea rcx, [rcx + r11 - 1]
479bb5: and rax, rsi
479bb8: add rax, rcx
479bbb: and rsi, rax
479bbe: lea rax, [rdx - 0x20]
479bc2: cmp rsi, rax
479bc5: ja 0x479bd8
479bc7: sub rdx, rsi
479bca: add r12, rsi
479bcd: jmp 0x479a30
479bd2: nop word ptr [rax + rax]
479bd8: movzx ecx, word ptr [r14 + 0x40]
479bdd: jmp 0x479950
479be2: nop word ptr [rax + rax]
479be8: lea rax, [rbx + 0x17]
479bec: mov rdi, rsp
479bef: mov rdx, rax
479bf2: and rax, 0xfffffffffffff000
479bf8: sub rdi, rax
479bfb: and rdx, 0xfffffffffffffff0
479bff: mov rax, rdi
479c02: cmp rsp, rax
479c05: je 0x479c1c
479c07: sub rsp, 0x1000
479c0e: or qword ptr [rsp + 0xff8], 0
479c17: cmp rsp, rax
479c1a: jne 0x479c07
479c1c: and edx, 0xfff
479c22: sub rsp, rdx
479c25: test rdx, rdx
479c28: je 0x479c30
479c2a: or qword ptr [rsp + rdx - 8], 0
479c30: lea r9, [rsp + 0xf]
479c35: mov rcx, r10
479c38: mov rdx, rbx
479c3b: mov edi, r15d
479c3e: and r9, 0xfffffffffffffff0
479c42: mov rsi, r9
479c45: mov qword ptr [rbp - 0x40], r9
479c49: call 0x487e70
479c4e: mov r9, qword ptr [rbp - 0x40]
479c52: cmp rax, rbx
479c55: jne 0x479d64
479c5b: movzx ecx, word ptr [r14 + 0x40]
479c60: lea rax, [rcx*8]
479c68: sub rax, rcx
479c6b: shl rax, 3
479c6f: jmp 0x47993b
479c74: nop dword ptr [rax]
479c78: mov rax, qword ptr [rbp - 0x38]
479c7c: lea r12, [rax + rcx]
479c80: jmp 0x479a26
479c85: nop dword ptr [rax]
479c88: mov rsi, rdx
479c8b: mov rdi, r10
479c8e: mov qword ptr [rbp - 0x50], rcx
479c92: mov qword ptr [rbp - 0x48], r9
479c96: mov qword ptr [rbp - 0x40], rdx
479c9a: call 0x427100
479c9f: mov r12, rax
479ca2: test rax, rax
479ca5: je 0x479d64
479cab: mov rcx, qword ptr [rbp - 0x50]
479caf: mov r9, qword ptr [rbp - 0x48]
479cb3: mov r10, rax
479cb6: mov rdx, qword ptr [rbp - 0x40]
479cba: jmp 0x4799fa
479cbf: lea rbx, [rip + 0x30812]
479cc6: jmp 0x479ac0
479ccb: nop dword ptr [rax + rax]
479cd0: xor r10d, r10d
479cd3: jmp 0x479870
479cd8: nop dword ptr [rax + rax]
479ce0: lea rbx, [rip + 0x307c9]
479ce7: jmp 0x479ac0
479cec: mov rsi, qword ptr [r14]
479cef: jmp 0x479791
479cf4: lea rbx, [rip + 0x30875]
479cfb: jmp 0x479ac0
479d00: xor r10d, r10d
479d03: jmp 0x479894
479d08: mov edi, dword ptr [rip + 0x30d5b]
479d0e: cmp dword ptr [r14 + 0x11], edi
479d12: je 0x479d23
479d14: xor r12d, r12d
479d17: lea rbx, [rip + 0x305d0]
479d1e: jmp 0x479ac0
479d23: movzx edi, word ptr [rip + 0x30d43]
479d2a: cmp word ptr [r14 + 0x15], di
479d2f: jne 0x479d14
479d31: movzx edi, byte ptr [rip + 0x30d37]
479d38: xor r12d, r12d
479d3b: lea rbx, [rip + 0x305da]
479d42: cmp byte ptr [r14 + 0x17], dil
479d46: jne 0x479d14
479d48: jmp 0x479ac0
479d4d: xor r12d, r12d
479d50: lea rbx, [rip + 0x305b2]
479d57: jmp 0x479ac0
479d5c: mov rdi, r10
479d5f: call 0x426a00
479d64: mov rax, 0xffffffffffffffc0
479d6b: lea rbx, [rip + 0x30531]
479d72: mov r12d, dword ptr fs:[rax]
479d76: jmp 0x479ac0
479d7b: nop dword ptr [rax + rax]
479d80: push rbp
479d81: mov rbp, rsp
479d84: push r15
479d86: push r14
479d88: mov r14, r8
479d8b: push r13
479d8d: mov r13d, r9d
479d90: push r12
479d92: push rbx
479d93: sub rsp, 0x118
479d9a: mov dword ptr [rbp - 0xdc], esi
479da0: mov rsi, qword ptr [rbp + 0x20]
479da4: mov qword ptr [rbp - 0x108], rdi
479dab: xor edi, edi
479dad: mov qword ptr [rbp - 0xe8], rdx
479db4: mov qword ptr [rbp - 0x110], rcx
479dbb: call 0x454800
479dc0: mov qword ptr [rbp - 0xf0], rax
479dc7: mov eax, dword ptr [rbp + 0x10]
479dca: and eax, 0x20000000
479dcf: mov dword ptr [rbp - 0x118], eax
479dd5: je 0x47a3d0
479ddb: cmp qword ptr [rbp + 0x20], 0
479de0: jne 0x47ae2f
479de6: pxor xmm0, xmm0
479dea: movaps xmmword ptr [rbp - 0xd0], xmm0
479df1: mov eax, dword ptr [rbp + 0x10]
479df4: and eax, 4
479df7: mov dword ptr [rbp - 0xe0], eax
479dfd: jne 0x47a992
479e03: test byte ptr [rip + 0x499b6], 0x40
479e0a: jne 0x47a9b1
479e10: mov rax, qword ptr [rbp - 0xf0]
479e17: mov eax, dword ptr [rax + 0x18]
479e1a: test eax, eax
479e1c: je 0x47a4a0
479e22: cmp eax, 1
479e25: jne 0x47ae5a
479e2b: mov byte ptr [rbp - 0x111], 0
479e32: mov r9, qword ptr [rbp + 0x20]
479e36: mov r8d, dword ptr [rbp + 0x10]
479e3a: mov rcx, r14
479e3d: mov edx, r13d
479e40: mov rsi, qword ptr [rbp - 0x108]
479e47: mov rdi, qword ptr [rbp - 0x110]
479e4e: call 0x47e050
479e53: mov r12, rax
479e56: test rax, rax
479e59: je 0x47a9cf
479e5f: mov rdi, qword ptr [rbp - 0xe8]
479e66: mov rax, qword ptr [rdi + 0x20]
479e6a: mov rcx, qword ptr [rdi + 0x28]
479e6e: mov qword ptr [r12 + 0x2b0], rax
479e76: movzx eax, word ptr [rdi + 0x18]
479e7a: lea r14, [rdi + rcx + 8]
479e7f: mov word ptr [rbp - 0x128], ax
479e86: movzx eax, word ptr [rdi + 0x40]
479e8a: lea rbx, [rax*8]
479e92: mov word ptr [r12 + 0x2b8], ax
479e9b: sub rbx, rax
479e9e: shl rbx, 3
479ea2: lea rax, [rbx + rcx]
479ea6: cmp rax, qword ptr [rdi]
479ea9: ja 0x479f90
479eaf: movzx eax, word ptr [r12 + 0x2b8]
479eb8: mov rdi, rsp
479ebb: mov qword ptr [rbp - 0x120], rsp
479ec2: lea rdx, [rax + rax*2]
479ec6: shl rdx, 4
479eca: mov rcx, rdx
479ecd: and rcx, 0xfffffffffffff000
479ed4: sub rdi, rcx
479ed7: mov rcx, rdi
479eda: cmp rsp, rcx
479edd: je 0x479ef4
479edf: sub rsp, 0x1000
479ee6: or qword ptr [rsp + 0xff8], 0
479eef: cmp rsp, rcx
479ef2: jne 0x479edf
479ef4: and edx, 0xfff
479efa: sub rsp, rdx
479efd: test rdx, rdx
479f00: jne 0x47a504
479f06: lea rdx, [rsp + 7]
479f0b: mov rdi, rdx
479f0e: and rdx, 0xfffffffffffffff8
479f12: mov qword ptr [rbp - 0xd8], rdx
479f19: lea rdx, [rax*8]
479f21: shr rdi, 3
479f25: sub rdx, rax
479f28: mov qword ptr [rbp - 0x130], rdi
479f2f: lea rdx, [r14 + rdx*8]
479f33: cmp r14, rdx
479f36: jae 0x47ab02
479f3c: mov byte ptr [rbp - 0xf8], 0
479f43: mov rbx, r14
479f46: xor r15d, r15d
479f49: lea r13, [rip + 0x30af0]
479f50: mov qword ptr [rbp - 0x100], 7
479f5b: nop dword ptr [rax + rax]
479f60: mov edx, dword ptr [rbx]
479f62: cmp edx, 7
479f65: ja 0x47a380
479f6b: test edx, edx
479f6d: je 0x47a09d
479f73: cmp edx, 7
479f76: ja 0x47a09d
479f7c: movsxd rdx, dword ptr [r13 + rdx*4]
479f81: add rdx, r13
479f84: notrack jmp rdx
479f87: nop word ptr [rax + rax]
479f90: lea rax, [rbx + 0x17]
479f94: mov rdi, rsp
479f97: mov rdx, rax
479f9a: and rax, 0xfffffffffffff000
479fa0: sub rdi, rax
479fa3: and rdx, 0xfffffffffffffff0
479fa7: mov rax, rdi
479faa: cmp rsp, rax
479fad: je 0x47a5fb
479fb3: sub rsp, 0x1000
479fba: or qword ptr [rsp + 0xff8], 0
479fc3: jmp 0x479faa
479fc5: mov rdx, qword ptr [rip + 0x4714c]
479fcc: mov rsi, qword ptr [rbx + 0x30]
479fd0: lea r11, [rdx - 1]
479fd4: test rsi, r11
479fd7: jne 0x47a668
479fdd: mov rcx, qword ptr [rbx + 0x10]
479fe1: mov rdi, qword ptr [rbx + 8]
479fe5: sub rsi, 1
479fe9: mov r8, rcx
479fec: sub r8, rdi
479fef: test r8, rsi
479ff2: jne 0x47a6d8
479ff8: lea r9, [r15 + r15*2]
479ffc: neg rdx
479fff: movdqu xmm2, xmmword ptr [rbx + 0x20]
47a004: lea r10, [r15 + 1]
47a008: mov rsi, qword ptr [rbp - 0xd8]
47a00f: shl r9, 4
47a013: movq xmm0, rcx
47a018: punpcklqdq xmm0, xmm0
47a01c: lea r8, [rsi + r9]
47a020: mov rsi, rcx
47a023: paddq xmm0, xmm2
47a027: and rsi, rdx
47a02a: mov qword ptr [r8], rsi
47a02d: mov rsi, qword ptr [rbx + 0x20]
47a031: add rsi, rcx
47a034: add rsi, r11
47a037: and rsi, rdx
47a03a: and rdx, rdi
47a03d: mov qword ptr [r8 + 8], rsi
47a041: mov rsi, qword ptr [rbp - 0xd8]
47a048: movups xmmword ptr [rsi + r9 + 0x10], xmm0
47a04e: mov qword ptr [r8 + 0x20], rdx
47a052: cmp r10, 1
47a056: jbe 0x47a074
47a058: movzx ecx, byte ptr [rbp - 0xf8]
47a05f: mov rdi, qword ptr [r8]
47a062: mov edx, 1
47a067: cmp qword ptr [r8 - 0x28], rdi
47a06b: cmovne ecx, edx
47a06e: mov byte ptr [rbp - 0xf8], cl
47a074: mov ecx, dword ptr [rbx + 4]
47a077: mov edx, 0x73516240
47a07c: lea rsi, [r15 + r15*2]
47a080: mov rdi, qword ptr [rbp - 0xd8]
47a087: shl rsi, 4
47a08b: mov r15, r10
47a08e: and ecx, 7
47a091: shl ecx, 2
47a094: sar edx, cl
47a096: and edx, 0xf
47a099: mov dword ptr [rdi + rsi + 0x28], edx
47a09d: lea rdx, [rax*8]
47a0a5: add rbx, 0x38
47a0a9: sub rdx, rax
47a0ac: lea rdx, [r14 + rdx*8]
47a0b0: cmp rbx, rdx
47a0b3: jb 0x479f60
47a0b9: test r15, r15
47a0bc: je 0x47ab02
47a0c2: movzx edi, word ptr [rbp - 0x128]
47a0c9: mov dword ptr [rbp - 0x134], edi
47a0cf: cmp di, 3
47a0d3: jne 0x47ab40
47a0d9: mov rcx, qword ptr [rbp - 0x130]
47a0e0: mov rdi, qword ptr [rbp - 0xd8]
47a0e7: lea rax, [r15 + r15*2 - 3]
47a0ec: shl rax, 4
47a0f0: mov r8d, dword ptr [rbp - 0xdc]
47a0f7: mov rbx, qword ptr [rcx*8]
47a0ff: mov rax, qword ptr [rdi + rax + 0x18]
47a104: mov r13d, dword ptr [rcx*8 + 0x28]
47a10c: mov rdi, qword ptr [rip + 0x4701d]
47a113: sub rax, rbx
47a116: mov r9, qword ptr [rcx*8 + 0x20]
47a11e: mov ecx, 0x802
47a123: mov rsi, rax
47a126: and rdi, rbx
47a129: mov edx, r13d
47a12c: mov qword ptr [rbp - 0x128], rax
47a133: call 0x451bc0
47a138: mov qword ptr [r12 + 0x350], rax
47a140: cmp rax, -1
47a144: je 0x47a27a
47a14a: mov rcx, qword ptr [rbp - 0x128]
47a151: lea rdx, [rax + rcx]
47a155: sub rax, rbx
47a158: cmp byte ptr [rbp - 0xf8], 0
47a15f: mov qword ptr [r12 + 0x358], rdx
47a167: mov qword ptr [r12], rax
47a16b: jne 0x47a4c0
47a171: or byte ptr [r12 + 0x31d], 0x40
47a17a: mov rbx, qword ptr [rbp - 0xd8]
47a181: test r13b, 4
47a185: je 0x47a197
47a187: mov rax, qword ptr [rbx + 8]
47a18b: add rax, qword ptr [r12]
47a18f: mov qword ptr [r12 + 0x360], rax
47a197: cmp qword ptr [r12 + 0x2a8], 0
47a1a0: je 0x47a5a7
47a1a6: mov rax, qword ptr [rbx + 0x18]
47a1aa: mov rdx, qword ptr [rbx + 0x10]
47a1ae: cmp rax, rdx
47a1b1: jbe 0x47a21e
47a1b3: mov rcx, qword ptr [r12]
47a1b7: mov rsi, qword ptr [rip + 0x46f5a]
47a1be: lea r8, [rdx + rcx]
47a1c2: add rcx, rax
47a1c5: mov rax, rsi
47a1c8: neg rax
47a1cb: lea r10, [r8 + rsi - 1]
47a1d0: and r10, rax
47a1d3: cmp rcx, r10
47a1d6: cmovbe r10, rcx
47a1da: cmp r8, r10
47a1dd: jae 0x47a215
47a1df: test r13b, 2
47a1e3: je 0x47ace0
47a1e9: mov rdx, r10
47a1ec: xor esi, esi
47a1ee: mov rdi, r8
47a1f1: mov qword ptr [rbp - 0x130], rcx
47a1f8: sub rdx, r8
47a1fb: mov qword ptr [rbp - 0xf8], r10
47a202: call 0x401110
47a207: mov r10, qword ptr [rbp - 0xf8]
47a20e: mov rcx, qword ptr [rbp - 0x130]
47a215: cmp rcx, r10
47a218: ja 0x47a9fa
47a21e: add rbx, 0x30
47a222: lea rax, [r15 + r15*2]
47a226: shl rax, 4
47a22a: add rax, qword ptr [rbp - 0xd8]
47a231: cmp rbx, rax
47a234: jae 0x47a50f
47a23a: mov rsi, qword ptr [rbx + 8]
47a23e: mov rax, qword ptr [rbx]
47a241: mov r13d, dword ptr [rbx + 0x28]
47a245: cmp rsi, rax
47a248: jbe 0x47a181
47a24e: sub rsi, rax
47a251: mov r9, qword ptr [rbx + 0x20]
47a255: add rax, qword ptr [r12]
47a259: mov ecx, 0x812
47a25e: mov r8d, dword ptr [rbp - 0xdc]
47a265: mov rdi, rax
47a268: mov edx, r13d
47a26b: call 0x451bc0
47a270: cmp rax, -1
47a274: jne 0x47a181
47a27a: lea r9, [rip + 0x3051f]
47a281: jmp 0x47a66f
47a286: mov rdx, qword ptr [rbx + 0x28]
47a28a: test rdx, rdx
47a28d: je 0x47a09d
47a293: mov qword ptr [r12 + 0x438], rdx
47a29b: mov rdx, qword ptr [rbx + 0x30]
47a29f: mov qword ptr [r12 + 0x440], rdx
47a2a7: mov rsi, qword ptr [rbx + 0x10]
47a2ab: lea rcx, [rdx - 1]
47a2af: and rcx, rsi
47a2b2: test rdx, rdx
47a2b5: cmovne rdx, rcx
47a2b9: mov qword ptr [r12 + 0x448], rdx
47a2c1: mov rdx, qword ptr [rbx + 0x20]
47a2c5: mov qword ptr [r12 + 0x428], rsi
47a2cd: mov qword ptr [r12 + 0x430], rdx
47a2d5: movzx edx, byte ptr [r12 + 0x31c]
47a2de: and edx, 3
47a2e1: cmp dl, 1
47a2e4: je 0x47a09d
47a2ea: cmp qword ptr [rip + 0x4942e], 0
47a2f2: jne 0x47a09d
47a2f8: lea rcx, [rip + 0x307f1]
47a2ff: mov edx, 0x46e
47a304: lea rsi, [rip + 0x2ff71]
47a30b: lea rdi, [rip + 0x304e6]
47a312: call 0x4032a0
47a317: mov rdx, qword ptr [rbx + 0x10]
47a31b: mov qword ptr [r12 + 0x2a8], rdx
47a323: jmp 0x47a09d
47a328: mov rcx, qword ptr [rbp - 0xe8]
47a32f: mov edx, dword ptr [rbp - 0xdc]
47a335: mov rsi, rbx
47a338: mov rdi, r12
47a33b: call 0x478590
47a340: test eax, eax
47a342: jne 0x47ae4e
47a348: movzx eax, word ptr [r12 + 0x2b8]
47a351: jmp 0x47a09d
47a356: cmp qword ptr [rbx + 0x20], 0
47a35b: je 0x47a09d
47a361: mov rdx, qword ptr [rbx + 0x10]
47a365: mov qword ptr [r12 + 0x10], rdx
47a36a: mov rdx, qword ptr [rbx + 0x28]
47a36e: shr rdx, 4
47a372: mov word ptr [r12 + 0x2ba], dx
47a37b: jmp 0x47a09d
47a380: cmp edx, 0x6474e551
47a386: je 0x47a3c0
47a388: cmp edx, 0x6474e552
47a38e: jne 0x47a09d
47a394: movdqu xmm0, xmmword ptr [rbx + 0x10]
47a399: movdqu xmm1, xmmword ptr [rbx + 0x20]
47a39e: movzx eax, word ptr [r12 + 0x2b8]
47a3a7: shufpd xmm0, xmm1, 2
47a3ac: movups xmmword ptr [r12 + 0x468], xmm0
47a3b5: jmp 0x47a09d
47a3ba: nop word ptr [rax + rax]
47a3c0: mov edi, dword ptr [rbx + 4]
47a3c3: mov qword ptr [rbp - 0x100], rdi
47a3ca: jmp 0x47a09d
47a3cf: nop 
47a3d0: mov esi, dword ptr [rbp - 0xdc]
47a3d6: lea rdx, [rbp - 0xc0]
47a3dd: mov edi, 1
47a3e2: call 0x450c30
47a3e7: test eax, eax
47a3e9: js 0x47a6aa
47a3ef: mov rdi, qword ptr [rbp + 0x20]
47a3f3: lea rsi, [rip + 0x46d86]
47a3fa: movdqa xmm3, xmmword ptr [rbp - 0xc0]
47a402: mov rax, qword ptr [rbp - 0xc0]
47a409: mov rcx, qword ptr [rbp - 0xb8]
47a410: lea rdx, [rdi + rdi*8]
47a414: movaps xmmword ptr [rbp - 0xd0], xmm3
47a41b: shl rdx, 4
47a41f: mov r12, qword ptr [rsi + rdx]
47a423: test r12, r12
47a426: jne 0x47a43e
47a428: jmp 0x479df1
47a42d: nop dword ptr [rax]
47a430: mov r12, qword ptr [r12 + 0x18]
47a435: test r12, r12
47a438: je 0x479df1
47a43e: test byte ptr [r12 + 0x31d], 0x20
47a447: jne 0x47a430
47a449: cmp rax, qword ptr [r12 + 0x3a8]
47a451: jne 0x47a430
47a453: cmp rcx, qword ptr [r12 + 0x3b0]
47a45b: jne 0x47a430
47a45d: mov edi, dword ptr [rbp - 0xdc]
47a463: call 0x451730
47a468: mov rdi, qword ptr [rbp - 0x110]
47a46f: call 0x426a00
47a474: mov rdi, qword ptr [r12 + 0x38]
47a479: mov rsi, qword ptr [rbp - 0x108]
47a480: call 0x4788d0
47a485: lea rsp, [rbp - 0x28]
47a489: mov rax, r12
47a48c: pop rbx
47a48d: pop r12
47a48f: pop r13
47a491: pop r14
47a493: pop r15
47a495: pop rbp
47a496: ret 
47a497: nop word ptr [rax + rax]
47a4a0: mov rbx, qword ptr [rbp - 0xf0]
47a4a7: mov dword ptr [rbx + 0x18], 1
47a4ae: call 0x4547f0
47a4b3: nop 
47a4b4: mov byte ptr [rbp - 0x111], 1
47a4bb: jmp 0x479e32
47a4c0: mov rcx, qword ptr [rbp - 0x130]
47a4c7: lea rdx, [r15 + r15*2]
47a4cb: shl rdx, 4
47a4cf: mov rdi, qword ptr [rcx*8 + 8]
47a4d7: mov rcx, qword ptr [rbp - 0xd8]
47a4de: mov rsi, qword ptr [rcx + rdx - 0x30]
47a4e3: xor edx, edx
47a4e5: sub rsi, rdi
47a4e8: add rdi, rax
47a4eb: call 0x451ca0
47a4f0: test eax, eax
47a4f2: jns 0x47a171
47a4f8: lea r9, [rip + 0x30279]
47a4ff: jmp 0x47a66f
47a504: or qword ptr [rsp + rdx - 8], 0
47a50a: jmp 0x479f06
47a50f: mov rax, qword ptr [r12 + 0x10]
47a514: mov rsp, qword ptr [rbp - 0x120]
47a51b: test rax, rax
47a51e: je 0x47aae8
47a524: mov r10, qword ptr [r12]
47a528: add rax, r10
47a52b: mov qword ptr [r12 + 0x10], rax
47a530: je 0x47aaf5
47a536: mov rdx, qword ptr [rax]
47a539: lea rcx, [r12 + 0x40]
47a53e: test rdx, rdx
47a541: je 0x47a711
47a547: mov edi, 0x6fffffff
47a54c: mov ebx, 0x6ffffdff
47a551: mov r13d, 0x6ffffeff
47a557: mov r15d, 0x6ffffe35
47a55d: mov r11d, 0x32
47a563: mov r9d, 0x70000022
47a569: jmp 0x47a59b
47a56b: nop dword ptr [rax + rax]
47a570: mov rsi, rdi
47a573: sub rsi, rdx
47a576: cmp rsi, 0xf
47a57a: ja 0x47a640
47a580: mov rsi, r9
47a583: sub rsi, rdx
47a586: mov qword ptr [rcx + rsi*8], rax
47a58a: mov rdx, qword ptr [rax + 0x10]
47a58e: add rax, 0x10
47a592: test rdx, rdx
47a595: je 0x47a711
47a59b: cmp rdx, 0x22
47a59f: ja 0x47a570
47a5a1: mov qword ptr [rcx + rdx*8], rax
47a5a5: jmp 0x47a58a
47a5a7: mov rdi, qword ptr [rbp - 0xe8]
47a5ae: mov rdx, qword ptr [rbx + 0x20]
47a5b2: mov rax, qword ptr [rdi + 0x28]
47a5b6: cmp rdx, rax
47a5b9: ja 0x47a1a6
47a5bf: movzx edi, word ptr [rdi + 0x40]
47a5c3: mov rcx, qword ptr [rbx + 8]
47a5c7: mov r8, qword ptr [rbx]
47a5ca: lea rsi, [rdi*8]
47a5d2: add rcx, rdx
47a5d5: sub rsi, rdi
47a5d8: sub rcx, r8
47a5db: lea rsi, [rax + rsi*8]
47a5df: cmp rcx, rsi
47a5e2: jb 0x47a1a6
47a5e8: add rax, r8
47a5eb: sub rax, rdx
47a5ee: mov qword ptr [r12 + 0x2a8], rax
47a5f6: jmp 0x47a1a6
47a5fb: and edx, 0xfff
47a601: sub rsp, rdx
47a604: test rdx, rdx
47a607: jne 0x47aa2f
47a60d: lea r14, [rsp + 0xf]
47a612: mov edi, dword ptr [rbp - 0xdc]
47a618: mov rdx, rbx
47a61b: and r14, 0xfffffffffffffff0
47a61f: mov rsi, r14
47a622: call 0x487e70
47a627: cmp rax, rbx
47a62a: je 0x479eaf
47a630: lea r9, [rip + 0x2fc6c]
47a637: jmp 0x47a9d6
47a63c: nop dword ptr [rax]
47a640: lea esi, [rdx + rdx]
47a643: mov r8d, esi
47a646: sar r8d, 1
47a649: cmp esi, -8
47a64c: jbe 0x47a6e1
47a652: mov edx, r11d
47a655: sub edx, r8d
47a658: mov qword ptr [rcx + rdx*8], rax
47a65c: jmp 0x47a58a
47a661: nop dword ptr [rax]
47a668: lea r9, [rip + 0x300d9]
47a66f: mov rsp, qword ptr [rbp - 0x120]
47a676: cmp byte ptr [rbp - 0x111], 0
47a67d: je 0x47a6c8
47a67f: push qword ptr [rbp + 0x20]
47a682: mov rcx, qword ptr [rbp - 0x110]
47a689: mov r8, r12
47a68c: mov rdx, qword ptr [rbp - 0x108]
47a693: push qword ptr [rbp - 0xf0]
47a699: mov esi, dword ptr [rbp - 0xdc]
47a69f: mov edi, dword ptr [rbp - 0xe0]
47a6a5: call 0x478850
47a6aa: mov rax, 0xffffffffffffffc0
47a6b1: lea r9, [rip + 0x2fce0]
47a6b8: xor r12d, r12d
47a6bb: mov eax, dword ptr fs:[rax]
47a6be: mov dword ptr [rbp - 0xe0], eax
47a6c4: nop dword ptr [rax]
47a6c8: mov qword ptr [rbp - 0xf0], 0
47a6d3: jmp 0x47a67f
47a6d5: nop dword ptr [rax]
47a6d8: lea r9, [rip + 0x30009]
47a6df: jmp 0x47a66f
47a6e1: mov rsi, rbx
47a6e4: sub rsi, rdx
47a6e7: cmp rsi, 0xb
47a6eb: jbe 0x47a9eb
47a6f1: mov rsi, r13
47a6f4: sub rsi, rdx
47a6f7: cmp rsi, 0xa
47a6fb: ja 0x47a58a
47a701: mov esi, 0x6fffff41
47a706: sub rsi, rdx
47a709: mov rdx, rsi
47a70c: jmp 0x47a5a1
47a711: test r10, r10
47a714: je 0x47a78f
47a716: mov rax, qword ptr [r12 + 0x60]
47a71b: test rax, rax
47a71e: je 0x47a724
47a720: add qword ptr [rax + 8], r10
47a724: mov rax, qword ptr [r12 + 0x58]
47a729: test rax, rax
47a72c: je 0x47a732
47a72e: add qword ptr [rax + 8], r10
47a732: mov rax, qword ptr [r12 + 0x68]
47a737: test rax, rax
47a73a: je 0x47a740
47a73c: add qword ptr [rax + 8], r10
47a740: mov rax, qword ptr [r12 + 0x70]
47a745: test rax, rax
47a748: je 0x47a74e
47a74a: add qword ptr [rax + 8], r10
47a74e: mov rax, qword ptr [r12 + 0x78]
47a753: test rax, rax
47a756: je 0x47a75c
47a758: add qword ptr [rax + 8], r10
47a75c: mov rax, qword ptr [r12 + 0xf8]
47a764: test rax, rax
47a767: je 0x47a76d
47a769: add qword ptr [rax + 8], r10
47a76d: mov rax, qword ptr [r12 + 0x1d0]
47a775: test rax, rax
47a778: je 0x47a77e
47a77a: add qword ptr [rax + 8], r10
47a77e: mov rax, qword ptr [r12 + 0x2a0]
47a786: test rax, rax
47a789: je 0x47a78f
47a78b: add qword ptr [rax + 8], r10
47a78f: mov rax, qword ptr [r12 + 0xe0]
47a797: test rax, rax
47a79a: je 0x47a7a7
47a79c: cmp qword ptr [rax + 8], 7
47a7a1: jne 0x47ae04
47a7a7: cmp qword ptr [r12 + 0x78], 0
47a7ad: je 0x47a7c2
47a7af: mov rax, qword ptr [r12 + 0x88]
47a7b7: cmp qword ptr [rax + 8], 0x18
47a7bc: jne 0x47ae79
47a7c2: mov rax, qword ptr [r12 + 0x130]
47a7ca: test rax, rax
47a7cd: je 0x47a7fe
47a7cf: mov rdx, qword ptr [rax + 8]
47a7d3: mov dword ptr [r12 + 0x3e8], edx
47a7db: test dl, 2
47a7de: je 0x47a7e8
47a7e0: mov qword ptr [r12 + 0xc0], rax
47a7e8: test dl, 4
47a7eb: je 0x47a7f5
47a7ed: mov qword ptr [r12 + 0xf0], rax
47a7f5: and edx, 8
47a7f8: jne 0x47aa48
47a7fe: mov rax, qword ptr [r12 + 0x178]
47a806: test rax, rax
47a809: je 0x47abcd
47a80f: mov rdx, qword ptr [rax + 8]
47a813: mov dword ptr [r12 + 0x3e4], edx
47a81b: mov eax, edx
47a81d: test dl, 8
47a820: jne 0x47aa3a
47a826: test byte ptr [rip + 0x48f93], 0x40
47a82d: jne 0x47ad6c
47a833: test al, 1
47a835: jne 0x47aa55
47a83b: cmp qword ptr [r12 + 0x128], 0
47a844: je 0x47a852
47a846: mov qword ptr [r12 + 0xb8], 0
47a852: test al, 0x40
47a854: je 0x47a861
47a856: mov ecx, dword ptr [rbp + 0x10]
47a859: test ecx, ecx
47a85b: js 0x47adad
47a861: test eax, 0x8000000
47a866: je 0x47a876
47a868: mov edx, dword ptr [rbp - 0x118]
47a86e: test edx, edx
47a870: je 0x47adad
47a876: mov rax, qword ptr [r12 + 0x2a8]
47a87e: test rax, rax
47a881: je 0x47abda
47a887: add rax, qword ptr [r12]
47a88b: mov qword ptr [r12 + 0x2a8], rax
47a893: mov eax, dword ptr [rip + 0x4686f]
47a899: not eax
47a89b: and rax, qword ptr [rbp - 0x100]
47a8a2: test al, 1
47a8a4: jne 0x47acb1
47a8aa: mov rax, qword ptr [r12 + 0x428]
47a8b2: test rax, rax
47a8b5: je 0x47a8c3
47a8b7: add rax, qword ptr [r12]
47a8bb: mov qword ptr [r12 + 0x428], rax
47a8c3: mov edi, dword ptr [rbp - 0xdc]
47a8c9: call 0x451730
47a8ce: test eax, eax
47a8d0: jne 0x47aca5
47a8d6: cmp dword ptr [rbp - 0x134], 2
47a8dd: je 0x47ab0e
47a8e3: mov rax, qword ptr [r12 + 0x2b0]
47a8eb: mov r8, qword ptr [r12]
47a8ef: add rax, r8
47a8f2: mov qword ptr [r12 + 0x2b0], rax
47a8fa: test byte ptr [rip + 0x48ebf], 0x40
47a901: jne 0x47ac29
47a907: mov rdi, r12
47a90a: call 0x47ded0
47a90f: test byte ptr [rbp + 0x10], 8
47a913: jne 0x47a924
47a915: cmp qword ptr [r12 + 0xc0], 0
47a91e: jne 0x47aa80
47a924: test byte ptr [r12 + 0x3e4], 0x20
47a92d: je 0x47a936
47a92f: mov qword ptr [rip + 0x48f22], r12
47a936: movdqa xmm4, xmmword ptr [rbp - 0xd0]
47a93e: cmp qword ptr [rip + 0x48e8a], 0
47a946: movups xmmword ptr [r12 + 0x3a8], xmm4
47a94f: jne 0x47ac78
47a955: cmp qword ptr [r12 + 0x438], 0
47a95e: je 0x47a981
47a960: movzx eax, byte ptr [r12 + 0x31c]
47a969: and eax, 3
47a96c: cmp al, 1
47a96e: jne 0x47aa6a
47a974: call 0x481e80
47a979: mov qword ptr [r12 + 0x458], rax
47a981: mov rsi, qword ptr [rbp + 0x20]
47a985: mov rdi, r12
47a988: call 0x47df90
47a98d: jmp 0x47a485
47a992: mov rdi, qword ptr [rbp - 0x110]
47a999: xor r12d, r12d
47a99c: call 0x426a00
47a9a1: mov edi, dword ptr [rbp - 0xdc]
47a9a7: call 0x451730
47a9ac: jmp 0x47a485
47a9b1: mov rdx, qword ptr [rbp + 0x20]
47a9b5: mov rsi, qword ptr [rbp - 0x108]
47a9bc: lea rdi, [rip + 0x2fe0d]
47a9c3: xor eax, eax
47a9c5: call 0x480f60
47a9ca: jmp 0x479e10
47a9cf: lea r9, [rip + 0x2fbfa]
47a9d6: mov rax, 0xffffffffffffffc0
47a9dd: mov eax, dword ptr fs:[rax]
47a9e0: mov dword ptr [rbp - 0xe0], eax
47a9e6: jmp 0x47a676
47a9eb: mov rsi, r15
47a9ee: sub rsi, rdx
47a9f1: mov qword ptr [rcx + rsi*8], rax
47a9f5: jmp 0x47a58a
47a9fa: sub rcx, r10
47a9fd: xor r9d, r9d
47aa00: mov r8d, 0xffffffff
47aa06: mov edx, r13d
47aa09: mov rsi, rcx
47aa0c: mov rdi, r10
47aa0f: mov ecx, 0x32
47aa14: call 0x451bc0
47aa19: cmp rax, -1
47aa1d: jne 0x47a21e
47aa23: lea r9, [rip + 0x2f9a4]
47aa2a: jmp 0x47a66f
47aa2f: or qword ptr [rsp + rdx - 8], 0
47aa35: jmp 0x47a60d
47aa3a: mov byte ptr [r12 + 0x320], 1
47aa43: jmp 0x47a826
47aa48: mov qword ptr [r12 + 0x100], rax
47aa50: jmp 0x47a7fe
47aa55: mov rdx, qword ptr [r12 + 0x178]
47aa5d: mov qword ptr [r12 + 0x100], rdx
47aa65: jmp 0x47a83b
47aa6a: cmp qword ptr [rip + 0x48cae], 0
47aa72: jne 0x47a974
47aa78: jmp 0x47a981
47aa7d: nop dword ptr [rax]
47aa80: mov rsi, qword ptr [r12 + 0x390]
47aa88: lea rax, [r12 + 0x2c0]
47aa90: cmp qword ptr [rsi], rax
47aa93: je 0x47a924
47aa99: mov rax, qword ptr [r12 + 0x2d0]
47aaa1: lea rdi, [rsi + 8]
47aaa5: mov qword ptr [rax], r12
47aaa8: mov rax, qword ptr [r12 + 0x388]
47aab0: mov dword ptr [r12 + 0x2d8], 1
47aabc: lea rdx, [rax*8 - 8]
47aac4: call 0x401040
47aac9: mov rax, qword ptr [r12 + 0x390]
47aad1: lea rdx, [r12 + 0x2d0]
47aad9: mov qword ptr [rax], rdx
47aadc: jmp 0x47a924
47aae1: nop dword ptr [rax]
47aae8: cmp dword ptr [rbp - 0x134], 3
47aaef: je 0x47ada1
47aaf5: mov eax, dword ptr [r12 + 0x3e4]
47aafd: jmp 0x47a852
47ab02: lea r9, [rip + 0x2fbb7]
47ab09: jmp 0x47a66f
47ab0e: test byte ptr [r12 + 0x31c], 3
47ab17: je 0x47a8e3
47ab1d: lea rcx, [rip + 0x2ffcc]
47ab24: mov edx, 0x51f
47ab29: lea rsi, [rip + 0x2f74c]
47ab30: lea rdi, [rip + 0x2fcf9]
47ab37: call 0x4032a0
47ab3c: nop dword ptr [rax]
47ab40: mov esi, dword ptr [rbp - 0x118]
47ab46: test esi, esi
47ab48: je 0x47ad95
47ab4e: mov rbx, qword ptr [rbp - 0xd8]
47ab55: lea rax, [r15 + r15*2 - 3]
47ab5a: mov rdx, qword ptr [r12]
47ab5e: shl rax, 4
47ab62: mov rcx, qword ptr [rbx + rax + 0x18]
47ab67: mov rax, qword ptr [rbp - 0x130]
47ab6e: mov rax, qword ptr [rax*8]
47ab76: mov rdi, rcx
47ab79: sub rdi, rax
47ab7c: add rax, rdx
47ab7f: add rdx, rcx
47ab82: movq xmm0, rax
47ab87: movzx eax, byte ptr [rbp - 0xf8]
47ab8e: movq xmm5, rdx
47ab93: mov qword ptr [rbp - 0x128], rdi
47ab9a: punpcklqdq xmm0, xmm5
47ab9e: movups xmmword ptr [r12 + 0x350], xmm0
47aba7: xor eax, 1
47abaa: and eax, 1
47abad: shl eax, 6
47abb0: mov edx, eax
47abb2: movzx eax, byte ptr [r12 + 0x31d]
47abbb: and eax, 0xffffffbf
47abbe: or eax, edx
47abc0: mov byte ptr [r12 + 0x31d], al
47abc8: jmp 0x47a222
47abcd: mov eax, dword ptr [r12 + 0x3e4]
47abd5: jmp 0x47a83b
47abda: mov rax, qword ptr [rbp - 0xe8]
47abe1: movzx eax, word ptr [rax + 0x40]
47abe5: lea r13, [rax*8]
47abed: sub r13, rax
47abf0: shl r13, 3
47abf4: mov rdi, r13
47abf7: call 0x426410
47abfc: mov rdi, rax
47abff: test rax, rax
47ac02: je 0x47ae23
47ac08: mov rdx, r13
47ac0b: mov rsi, r14
47ac0e: call 0x401060
47ac13: or byte ptr [r12 + 0x31c], 0x80
47ac1c: mov qword ptr [r12 + 0x2a8], rax
47ac24: jmp 0x47a893
47ac29: sub rsp, 8
47ac2d: mov rdx, qword ptr [r12 + 0x10]
47ac32: movzx ecx, word ptr [r12 + 0x2b8]
47ac3b: mov r9d, 0x10
47ac41: mov esi, 0x10
47ac46: lea rdi, [rip + 0x2fc13]
47ac4d: push rcx
47ac4e: mov ecx, 0x10
47ac53: push 0x10
47ac55: push qword ptr [r12 + 0x2a8]
47ac5d: push 0x10
47ac5f: push rax
47ac60: xor eax, eax
47ac62: push 0x10
47ac64: push qword ptr [rbp - 0x128]
47ac6a: call 0x480f60
47ac6f: add rsp, 0x40
47ac73: jmp 0x47a907
47ac78: mov rax, qword ptr [r12 + 0xb0]
47ac80: test rax, rax
47ac83: je 0x47a955
47ac89: mov rdx, qword ptr [r12 + 0x68]
47ac8e: mov rdi, qword ptr [r12 + 0x38]
47ac93: mov rsi, qword ptr [rax + 8]
47ac97: add rsi, qword ptr [rdx + 8]
47ac9b: call 0x4788d0
47aca0: jmp 0x47a955
47aca5: lea r9, [rip + 0x2f6cf]
47acac: jmp 0x47a9d6
47acb1: or dword ptr [rip + 0x45238], 7
47acb8: mov rdi, qword ptr [rbp + 0x18]
47acbc: call qword ptr [rip + 0x46476]
47acc2: mov dword ptr [rbp - 0xe0], eax
47acc8: test eax, eax
47acca: je 0x47a8aa
47acd0: lea r9, [rip + 0x2f9a9]
47acd7: jmp 0x47a676
47acdc: nop dword ptr [rax]
47ace0: and rax, r8
47ace3: mov edx, r13d
47ace6: mov qword ptr [rbp - 0x140], r10
47aced: or edx, 2
47acf0: mov rdi, rax
47acf3: mov qword ptr [rbp - 0x130], rcx
47acfa: mov qword ptr [rbp - 0xf8], r8
47ad01: call 0x451ca0
47ad06: mov r8, qword ptr [rbp - 0xf8]
47ad0d: mov rcx, qword ptr [rbp - 0x130]
47ad14: test eax, eax
47ad16: mov r10, qword ptr [rbp - 0x140]
47ad1d: js 0x47a4f8
47ad23: mov rdx, r10
47ad26: mov rdi, r8
47ad29: xor esi, esi
47ad2b: mov qword ptr [rbp - 0x130], rcx
47ad32: sub rdx, r8
47ad35: mov qword ptr [rbp - 0xf8], r10
47ad3c: call 0x401110
47ad41: mov rsi, qword ptr [rip + 0x463d0]
47ad48: mov edx, r13d
47ad4b: mov rdi, rsi
47ad4e: neg rdi
47ad51: and rdi, rax
47ad54: call 0x451ca0
47ad59: mov r10, qword ptr [rbp - 0xf8]
47ad60: mov rcx, qword ptr [rbp - 0x130]
47ad67: jmp 0x47a215
47ad6c: mov esi, edx
47ad6e: and esi, 0xf7fff716
47ad74: je 0x47a833
47ad7a: xor eax, eax
47ad7c: lea rdi, [rip + 0x1eab5]
47ad83: call 0x480f60
47ad88: mov eax, dword ptr [r12 + 0x3e4]
47ad90: jmp 0x47a833
47ad95: lea r9, [rip + 0x2f984]
47ad9c: jmp 0x47a66f
47ada1: lea r9, [rip + 0x2f8b0]
47ada8: jmp 0x47a676
47adad: mov rdi, qword ptr [r12 + 0x350]
47adb5: mov rsi, qword ptr [r12 + 0x358]
47adbd: sub rsi, rdi
47adc0: call 0x451c70
47adc5: mov rdi, qword ptr [r12 + 0x38]
47adca: mov eax, dword ptr [rdi + 0x10]
47adcd: test eax, eax
47adcf: je 0x47aeaa
47add5: cmp byte ptr [r12 + 0x31c], 0
47adde: js 0x47ae98
47ade4: test byte ptr [r12 + 0x3e7], 8
47aded: lea r9, [rip + 0x2f82c]
47adf4: lea rax, [rip + 0x2f7fd]
47adfb: cmove r9, rax
47adff: jmp 0x47a676
47ae04: lea rcx, [rip + 0x1ea85]
47ae0b: mov edx, 0x7b
47ae10: lea rsi, [rip + 0x1e8de]
47ae17: lea rdi, [rip + 0x1e9ba]
47ae1e: call 0x4032a0
47ae23: lea r9, [rip + 0x2f776]
47ae2a: jmp 0x47a9d6
47ae2f: lea rcx, [rip + 0x2fcba]
47ae36: mov edx, 0x375
47ae3b: lea rsi, [rip + 0x2f43a]
47ae42: lea rdi, [rip + 0x2f5a0]
47ae49: call 0x4032a0
47ae4e: lea r9, [rip + 0x2f55d]
47ae55: jmp 0x47a66f
47ae5a: lea rcx, [rip + 0x2fc8f]
47ae61: mov edx, 0x3e2
47ae66: lea rsi, [rip + 0x2f40f]
47ae6d: lea rdi, [rip + 0x2f588]
47ae74: call 0x4032a0
47ae79: lea rcx, [rip + 0x1ea10]
47ae80: mov edx, 0x83
47ae85: lea rsi, [rip + 0x1e869]
47ae8c: lea rdi, [rip + 0x1e96d]
47ae93: call 0x4032a0
47ae98: mov rdi, qword ptr [r12 + 0x2a8]
47aea0: call 0x426a00
47aea5: jmp 0x47ade4
47aeaa: call 0x426a00
47aeaf: jmp 0x47add5
47aeb4: nop word ptr cs:[rax + rax]
47aebf: nop 
47aec0: endbr64 
47aec4: push r14
47aec6: mov esi, 0x24
47aecb: push r13
47aecd: push r12
47aecf: xor r12d, r12d
47aed2: push rbp
47aed3: push rbx
47aed4: call 0x401190
47aed9: test rax, rax
47aedc: jne 0x47aef0
47aede: pop rbx
47aedf: mov rax, r12
47aee2: pop rbp
47aee3: pop r12
47aee5: pop r13
47aee7: pop r14
47aee9: ret 
47aeea: nop word ptr [rax + rax]
47aef0: lea rbx, [rip + 0x2f51a]
47aef7: lea r13, [rip + 0x2f51a]
47aefe: lea r14, [rip + 0x2f51c]
47af05: nop dword ptr [rax]
47af08: lea rbp, [rax + 1]
47af0c: mov rsi, rbx
47af0f: mov rdi, rbp
47af12: call 0x4782c0
47af17: test rax, rax
47af1a: jne 0x47af40
47af1c: mov rsi, r13
47af1f: mov rdi, rbp
47af22: call 0x4782c0
47af27: test rax, rax
47af2a: jne 0x47af40
47af2c: mov rsi, r14
47af2f: mov rdi, rbp
47af32: call 0x4782c0
47af37: test rax, rax
47af3a: je 0x47af47
47af3c: nop dword ptr [rax]
47af40: add r12, 1
47af44: add rbp, rax
47af47: mov esi, 0x24
47af4c: mov rdi, rbp
47af4f: call 0x401190
47af54: test rax, rax
47af57: jne 0x47af08
47af59: pop rbx
47af5a: mov rax, r12
47af5d: pop rbp
47af5e: pop r12
47af60: pop r13
47af62: pop r14
47af64: ret 
47af65: nop word ptr cs:[rax + rax]
47af70: endbr64 
47af74: push r15
47af76: mov r15, rdx
47af79: push r14
47af7b: lea r14, [rip + 0x2f4a2]
47af82: push r13
47af84: mov r13, rsi
47af87: push r12
47af89: mov r12, rdx
47af8c: lea rdx, [rsi + 1]
47af90: push rbp
47af91: xor ebp, ebp
47af93: push rbx
47af94: mov rbx, rdi
47af97: sub rsp, 0x18
47af9b: movzx eax, byte ptr [rsi]
47af9e: mov qword ptr [rsp + 8], rdx
47afa3: jmp 0x47afb8
47afa5: nop dword ptr [rax]
47afa8: mov byte ptr [r15], al
47afab: add r15, 1
47afaf: movzx eax, byte ptr [r13]
47afb4: test al, al
47afb6: je 0x47b020
47afb8: add r13, 1
47afbc: cmp al, 0x24
47afbe: jne 0x47afa8
47afc0: lea rsi, [rip + 0x2f44a]
47afc7: mov rdi, r13
47afca: call 0x4782c0
47afcf: mov rcx, rax
47afd2: test rax, rax
47afd5: je 0x47b040
47afd7: mov eax, dword ptr [rip + 0x44ac3]
47afdd: test eax, eax
47afdf: jne 0x47b0bd
47afe5: mov rsi, qword ptr [rbx + 0x348]
47afec: xor ebp, ebp
47afee: lea rax, [rsi - 1]
47aff2: cmp rax, -3
47aff6: ja 0x47b0b3
47affc: mov rdi, r15
47afff: mov qword ptr [rsp], rcx
47b003: call 0x401090
47b008: mov rcx, qword ptr [rsp]
47b00c: mov r15, rax
47b00f: add r13, rcx
47b012: movzx eax, byte ptr [r13]
47b017: test al, al
47b019: jne 0x47afb8
47b01b: nop dword ptr [rax + rax]
47b020: test bpl, bpl
47b023: jne 0x47b09d
47b025: mov byte ptr [r15], 0
47b029: add rsp, 0x18
47b02d: mov rax, r12
47b030: pop rbx
47b031: pop rbp
47b032: pop r12
47b034: pop r13
47b036: pop r14
47b038: pop r15
47b03a: ret 
47b03b: nop dword ptr [rax + rax]
47b040: lea rsi, [rip + 0x2f3d1]
47b047: mov rdi, r13
47b04a: call 0x4782c0
47b04f: mov rcx, rax
47b052: test rax, rax
47b055: jne 0x47b080
47b057: lea rsi, [rip + 0x2f3c3]
47b05e: mov rdi, r13
47b061: call 0x4782c0
47b066: mov rcx, rax
47b069: test rax, rax
47b06c: je 0x47b090
47b06e: mov rax, r14
47b071: lea rsi, [rip + 0x2f3ad]
47b078: jmp 0x47aff2
47b07d: nop dword ptr [rax]
47b080: mov rsi, qword ptr [rip + 0x48761]
47b087: lea rax, [rsi - 1]
47b08b: jmp 0x47aff2
47b090: mov byte ptr [r15], 0x24
47b094: add r15, 1
47b098: jmp 0x47afaf
47b09d: mov rsi, r15
47b0a0: mov rdi, r12
47b0a3: sub rsi, r12
47b0a6: call 0x478360
47b0ab: test al, al
47b0ad: jne 0x47b025
47b0b3: mov byte ptr [r12], 0
47b0b8: jmp 0x47b029
47b0bd: cmp r13, qword ptr [rsp + 8]
47b0c2: jne 0x47b0b3
47b0c4: movzx eax, byte ptr [r13 + rcx]
47b0ca: test al, al
47b0cc: je 0x47b0d2
47b0ce: cmp al, 0x2f
47b0d0: jne 0x47b0b3
47b0d2: mov rsi, qword ptr [rbx + 0x348]
47b0d9: test byte ptr [rbx + 0x31c], 3
47b0e0: sete bpl
47b0e4: lea rax, [rsi - 1]
47b0e8: jmp 0x47aff2
47b0ed: nop dword ptr [rax]
47b0f0: push r15
47b0f2: push r14
47b0f4: push r13
47b0f6: push r12
47b0f8: mov r12, rdi
47b0fb: push rbp
47b0fc: mov rbp, rsi
47b0ff: mov esi, 0x24
47b104: push rbx
47b105: mov rdi, rbp
47b108: sub rsp, 8
47b10c: call 0x401190
47b111: test rax, rax
47b114: jne 0x47b130
47b116: add rsp, 8
47b11a: mov rdi, rbp
47b11d: pop rbx
47b11e: pop rbp
47b11f: pop r12
47b121: pop r13
47b123: pop r14
47b125: pop r15
47b127: jmp 0x429020
47b12c: nop dword ptr [rax]
47b130: xor ebx, ebx
47b132: lea r13, [rip + 0x2f2d8]
47b139: lea r14, [rip + 0x2f2d8]
47b140: lea r15, [rax + 1]
47b144: mov rsi, r13
47b147: mov rdi, r15
47b14a: call 0x4782c0
47b14f: test rax, rax
47b152: jne 0x47b180
47b154: mov rsi, r14
47b157: mov rdi, r15
47b15a: call 0x4782c0
47b15f: test rax, rax
47b162: jne 0x47b180
47b164: lea rsi, [rip + 0x2f2b6]
47b16b: mov rdi, r15
47b16e: call 0x4782c0
47b173: test rax, rax
47b176: je 0x47b187
47b178: nop dword ptr [rax + rax]
47b180: add rbx, 1
47b184: add r15, rax
47b187: mov esi, 0x24
47b18c: mov rdi, r15
47b18f: call 0x401190
47b194: test rax, rax
47b197: jne 0x47b140
47b199: test rbx, rbx
47b19c: je 0x47b116
47b1a2: mov rdi, rbp
47b1a5: call 0x401180
47b1aa: mov rdi, qword ptr [r12 + 0x348]
47b1b2: mov r13, rax
47b1b5: test rdi, rdi
47b1b8: je 0x47b220
47b1ba: cmp rdi, -1
47b1be: je 0x47b248
47b1c4: call 0x401180
47b1c9: cmp qword ptr [rip + 0x485e7], 0x14
47b1d1: mov ecx, 0x14
47b1d6: cmovae rcx, qword ptr [rip + 0x485da]
47b1de: cmp rcx, rax
47b1e1: mov rdx, rcx
47b1e4: cmovb rdx, rax
47b1e8: sub rdx, 4
47b1ec: imul rbx, rdx
47b1f0: lea rdi, [r13 + rbx + 1]
47b1f5: call 0x426410
47b1fa: mov rdx, rax
47b1fd: test rax, rax
47b200: je 0x47b24f
47b202: add rsp, 8
47b206: mov rsi, rbp
47b209: mov rdi, r12
47b20c: pop rbx
47b20d: pop rbp
47b20e: pop r12
47b210: pop r13
47b212: pop r14
47b214: pop r15
47b216: jmp 0x47af70
47b21b: nop dword ptr [rax + rax]
47b220: mov rax, qword ptr [r12 + 8]
47b225: cmp byte ptr [rax], 0
47b228: jne 0x47b25d
47b22a: call 0x482630
47b22f: mov qword ptr [r12 + 0x348], rax
47b237: mov rdi, rax
47b23a: lea rax, [rax - 1]
47b23e: cmp rax, -3
47b242: jbe 0x47b1c4
47b248: xor eax, eax
47b24a: jmp 0x47b1c9
47b24f: pop rdx
47b250: xor eax, eax
47b252: pop rbx
47b253: pop rbp
47b254: pop r12
47b256: pop r13
47b258: pop r14
47b25a: pop r15
47b25c: ret 
47b25d: lea rcx, [rip + 0x2f8cc]
47b264: mov edx, 0x18b
47b269: lea rsi, [rip + 0x2f00c]
47b270: lea rdi, [rip + 0x2f651]
47b277: call 0x4032a0
47b27c: nop dword ptr [rax]
47b280: push r15
47b282: push r14
47b284: push r13
47b286: push r12
47b288: mov r12, rsi
47b28b: push rbp
47b28c: push rbx
47b28d: xor ebx, ebx
47b28f: sub rsp, 0x58
47b293: lea rax, [rsp + 0x48]
47b298: mov qword ptr [rsp + 0x48], rdi
47b29d: mov qword ptr [rsp + 8], rdx
47b2a2: mov qword ptr [rsp + 0x40], rcx
47b2a7: mov qword ptr [rsp + 0x18], r8
47b2ac: mov qword ptr [rsp + 0x20], r9
47b2b1: mov qword ptr [rsp + 0x10], rax
47b2b6: nop word ptr cs:[rax + rax]
47b2c0: mov rsi, qword ptr [rsp + 8]
47b2c5: mov rdi, qword ptr [rsp + 0x10]
47b2ca: call 0x487be0
47b2cf: mov r15, rax
47b2d2: test rax, rax
47b2d5: je 0x47b550
47b2db: cmp byte ptr [r15], 0
47b2df: je 0x47b3a8
47b2e5: mov rdi, qword ptr [rsp + 0x20]
47b2ea: mov rsi, r15
47b2ed: call 0x47b0f0
47b2f2: mov r15, rax
47b2f5: test rax, rax
47b2f8: je 0x47b2c0
47b2fa: mov rdi, rax
47b2fd: call 0x401180
47b302: mov r13, rax
47b305: test rax, rax
47b308: jne 0x47b323
47b30a: jmp 0x47b520
47b30f: nop 
47b310: cmp byte ptr [r15 + r13 - 1], 0x2f
47b316: lea rax, [r13 - 1]
47b31a: jne 0x47b530
47b320: mov r13, rax
47b323: cmp r13, 1
47b327: jne 0x47b310
47b329: cmp byte ptr [r15], 0x2f
47b32d: jne 0x47b530
47b333: mov qword ptr [rsp], r15
47b337: mov rbp, qword ptr [rip + 0x48522]
47b33e: test rbp, rbp
47b341: je 0x47b3c0
47b343: mov r14, rbp
47b346: jmp 0x47b358
47b348: nop dword ptr [rax + rax]
47b350: mov r14, qword ptr [r14]
47b353: test r14, r14
47b356: je 0x47b3c0
47b358: cmp qword ptr [r14 + 0x20], r13
47b35c: jne 0x47b350
47b35e: mov rsi, qword ptr [r14 + 0x18]
47b362: mov rdx, r13
47b365: mov rdi, r15
47b368: call 0x4010e0
47b36d: test eax, eax
47b36f: jne 0x47b350
47b371: xor eax, eax
47b373: test rbx, rbx
47b376: je 0x47b38f
47b378: nop dword ptr [rax + rax]
47b380: cmp qword ptr [r12 + rax*8], r14
47b384: je 0x47b397
47b386: add rax, 1
47b38a: cmp rbx, rax
47b38d: jne 0x47b380
47b38f: mov qword ptr [r12 + rbx*8], r14
47b393: add rbx, 1
47b397: mov rdi, qword ptr [rsp]
47b39b: call 0x426a00
47b3a0: jmp 0x47b2c0
47b3a5: nop dword ptr [rax]
47b3a8: mov rbp, qword ptr [rip + 0x484b1]
47b3af: mov qword ptr [rsp], 0
47b3b7: xor r13d, r13d
47b3ba: test rbp, rbp
47b3bd: jne 0x47b343
47b3bf: nop 
47b3c0: cmp qword ptr [rsp + 0x18], 0
47b3c6: je 0x47b542
47b3cc: mov rdi, qword ptr [rsp + 0x18]
47b3d1: call 0x401180
47b3d6: add rax, 1
47b3da: mov qword ptr [rsp + 0x28], rax
47b3df: mov r14, qword ptr [rip + 0x44ae2]
47b3e6: lea rsi, [r14*4 + 0x28]
47b3ee: lea rax, [rsi + 1]
47b3f2: mov qword ptr [rsp + 0x30], rsi
47b3f7: lea rdi, [rax + r13]
47b3fb: add rdi, qword ptr [rsp + 0x28]
47b400: mov qword ptr [rsp + 0x38], rax
47b405: call 0x426410
47b40a: mov rsi, qword ptr [rsp + 0x30]
47b40f: test rax, rax
47b412: je 0x47b57b
47b418: lea rdi, [rax + rsi]
47b41c: mov rdx, r13
47b41f: mov rsi, r15
47b422: mov qword ptr [rsp + 0x30], rax
47b427: mov qword ptr [rax + 0x18], rdi
47b42b: call 0x401150
47b430: mov rcx, qword ptr [rsp + 0x30]
47b435: cmp qword ptr [rip + 0x47b04], r13
47b43c: mov byte ptr [rax], 0
47b43f: mov qword ptr [rcx + 0x20], r13
47b443: jae 0x47b44c
47b445: mov qword ptr [rip + 0x47af4], r13
47b44c: xor r8d, r8d
47b44f: cmp byte ptr [r15], 0x2f
47b453: setne r8b
47b457: add r8d, r8d
47b45a: test r14, r14
47b45d: je 0x47b4c4
47b45f: lea rax, [r14 - 1]
47b463: cmp rax, 2
47b467: jbe 0x47b574
47b46d: mov rdi, r14
47b470: movd xmm1, r8d
47b475: xor eax, eax
47b477: shr rdi, 2
47b47b: pshufd xmm0, xmm1, 0
47b480: mov rdx, rax
47b483: add rax, 1
47b487: shl rdx, 4
47b48b: movups xmmword ptr [rcx + rdx + 0x28], xmm0
47b490: cmp rax, rdi
47b493: jne 0x47b480
47b495: mov rax, r14
47b498: and rax, 0xfffffffffffffffc
47b49c: test r14b, 3
47b4a0: je 0x47b4c4
47b4a2: lea rsi, [rcx + rax*4]
47b4a6: lea rdi, [rax + 1]
47b4aa: mov dword ptr [rsi + 0x28], r8d
47b4ae: cmp r14, rdi
47b4b1: jbe 0x47b4c4
47b4b3: add rax, 2
47b4b7: mov dword ptr [rsi + 0x2c], r8d
47b4bb: cmp r14, rax
47b4be: jbe 0x47b4c4
47b4c0: mov dword ptr [rsi + 0x30], r8d
47b4c4: mov rax, qword ptr [rsp + 0x40]
47b4c9: cmp qword ptr [rsp + 0x18], 0
47b4cf: mov qword ptr [rcx + 8], rax
47b4d3: je 0x47b56a
47b4d9: mov r14, qword ptr [rsp + 0x38]
47b4de: mov rdx, qword ptr [rsp + 0x28]
47b4e3: mov qword ptr [rsp + 0x30], rcx
47b4e8: mov rsi, qword ptr [rsp + 0x18]
47b4ed: add r14, r13
47b4f0: lea rdi, [rcx + r14]
47b4f4: call 0x401060
47b4f9: mov rcx, qword ptr [rsp + 0x30]
47b4fe: mov qword ptr [rcx + 0x10], rax
47b502: mov qword ptr [rip + 0x48357], rcx
47b509: mov qword ptr [rcx], rbp
47b50c: mov qword ptr [r12 + rbx*8], rcx
47b510: add rbx, 1
47b514: jmp 0x47b397
47b519: nop dword ptr [rax]
47b520: mov rdi, r15
47b523: call 0x426a00
47b528: jmp 0x47b2c0
47b52d: nop dword ptr [rax]
47b530: mov byte ptr [r15 + r13], 0x2f
47b535: add r13, 1
47b539: mov qword ptr [rsp], r15
47b53d: jmp 0x47b337
47b542: mov qword ptr [rsp + 0x28], 0
47b54b: jmp 0x47b3df
47b550: mov qword ptr [r12 + rbx*8], 0
47b558: add rsp, 0x58
47b55c: mov rax, r12
47b55f: pop rbx
47b560: pop rbp
47b561: pop r12
47b563: pop r13
47b565: pop r14
47b567: pop r15
47b569: ret 
47b56a: mov qword ptr [rcx + 0x10], 0
47b572: jmp 0x47b502
47b574: xor eax, eax
47b576: jmp 0x47b4a2
47b57b: lea rcx, [rip + 0x2f36e]
47b582: xor edx, edx
47b584: xor esi, esi
47b586: mov edi, 0xc
47b58b: call 0x485060
47b590: push r15
47b592: movsxd rdx, edx
47b595: push r14
47b597: push r13
47b599: push r12
47b59b: push rbp
47b59c: mov rbp, rsi
47b59f: push rbx
47b5a0: sub rsp, 8
47b5a4: mov rax, qword ptr [rdi + rdx*8 + 0x40]
47b5a9: test rax, rax
47b5ac: je 0x47b6a8
47b5b2: mov r9, qword ptr [rax + 8]
47b5b6: mov rdx, qword ptr [rdi + 0x68]
47b5ba: mov rbx, rdi
47b5bd: mov r12, rcx
47b5c0: mov rax, qword ptr [rip + 0x482a9]
47b5c7: mov r13, qword ptr [rdi + 8]
47b5cb: add r9, qword ptr [rdx + 8]
47b5cf: test rax, rax
47b5d2: jne 0x47b6c0
47b5d8: cmp byte ptr [r9], 0
47b5dc: jne 0x47b600
47b5de: mov qword ptr [rbp], 0xffffffffffffffff
47b5e6: add rsp, 8
47b5ea: xor eax, eax
47b5ec: pop rbx
47b5ed: pop rbp
47b5ee: pop r12
47b5f0: pop r13
47b5f2: pop r14
47b5f4: pop r15
47b5f6: ret 
47b5f7: nop word ptr [rax + rax]
47b600: mov rdi, r9
47b603: call 0x429020
47b608: mov r14, rax
47b60b: test rax, rax
47b60e: je 0x47b78a
47b614: movzx eax, byte ptr [rax]
47b617: test al, al
47b619: je 0x47b750
47b61f: mov rdx, r14
47b622: xor ecx, ecx
47b624: nop dword ptr [rax]
47b628: cmp al, 0x3a
47b62a: sete al
47b62d: add rdx, 1
47b631: movzx eax, al
47b634: add rcx, rax
47b637: movzx eax, byte ptr [rdx]
47b63a: test al, al
47b63c: jne 0x47b628
47b63e: lea rdi, [rcx*8 + 0x10]
47b646: call 0x426410
47b64b: mov r15, rax
47b64e: test rax, rax
47b651: je 0x47b76d
47b657: mov r9, rbx
47b65a: mov r8, r13
47b65d: mov rcx, r12
47b660: mov rsi, rax
47b663: lea rdx, [rip + 0x3498f]
47b66a: mov rdi, r14
47b66d: call 0x47b280
47b672: mov rdi, r14
47b675: call 0x426a00
47b67a: cmp qword ptr [r15], 0
47b67e: je 0x47b760
47b684: mov qword ptr [rbp], r15
47b688: mov eax, 1
47b68d: mov dword ptr [rbp + 8], 1
47b694: add rsp, 8
47b698: pop rbx
47b699: pop rbp
47b69a: pop r12
47b69c: pop r13
47b69e: pop r14
47b6a0: pop r15
47b6a2: ret 
47b6a3: nop dword ptr [rax + rax]
47b6a8: mov qword ptr [rsi], 0xffffffffffffffff
47b6af: add rsp, 8
47b6b3: pop rbx
47b6b4: pop rbp
47b6b5: pop r12
47b6b7: pop r13
47b6b9: pop r14
47b6bb: pop r15
47b6bd: ret 
47b6be: nop 
47b6c0: mov edx, dword ptr [rip + 0x443da]
47b6c6: test edx, edx
47b6c8: jne 0x47b5d8
47b6ce: movzx r8d, byte ptr [r13]
47b6d3: movzx edx, byte ptr [rax]
47b6d6: nop word ptr cs:[rax + rax]
47b6e0: mov esi, r8d
47b6e3: mov rdi, r13
47b6e6: cmp r8b, dl
47b6e9: je 0x47b705
47b6eb: jmp 0x47b740
47b6ed: nop dword ptr [rax]
47b6f0: movzx edx, byte ptr [rax + 1]
47b6f4: movzx esi, byte ptr [rdi + 1]
47b6f8: add rax, 1
47b6fc: add rdi, 1
47b700: cmp dl, sil
47b703: jne 0x47b740
47b705: test sil, sil
47b708: jne 0x47b6f0
47b70a: test dl, dl
47b70c: je 0x47b5de
47b712: cmp dl, 0x3a
47b715: je 0x47b5de
47b71b: nop dword ptr [rax + rax]
47b720: movzx ecx, byte ptr [rax]
47b723: test cl, cl
47b725: je 0x47b5d8
47b72b: add rax, 1
47b72f: movzx edx, byte ptr [rax]
47b732: cmp cl, 0x3a
47b735: jne 0x47b720
47b737: test dl, dl
47b739: jne 0x47b6e0
47b73b: jmp 0x47b5d8
47b740: test sil, sil
47b743: jne 0x47b720
47b745: jmp 0x47b70a
47b747: nop word ptr [rax + rax]
47b750: mov edi, 0x10
47b755: jmp 0x47b646
47b75a: nop word ptr [rax + rax]
47b760: mov rdi, r15
47b763: call 0x426a00
47b768: jmp 0x47b5de
47b76d: mov rdi, r14
47b770: call 0x426a00
47b775: lea rcx, [rip + 0x2f174]
47b77c: xor edx, edx
47b77e: xor esi, esi
47b780: mov edi, 0xc
47b785: call 0x485060
47b78a: lea rcx, [rip + 0x2f187]
47b791: jmp 0x47b77c
47b793: nop word ptr cs:[rax + rax]
47b79e: nop 
47b7a0: endbr64 
47b7a4: push rbp
47b7a5: lea rcx, [rip + 0x44714]
47b7ac: lea rdx, [rip + 0x44715]
47b7b3: mov rbp, rsp
47b7b6: push r15
47b7b8: push r14
47b7ba: push r13
47b7bc: push r12
47b7be: push rbx
47b7bf: sub rsp, 0x28
47b7c3: mov qword ptr [rbp - 0x50], rdi
47b7c7: mov rsi, qword ptr [rip + 0x47fea]
47b7ce: mov rdi, qword ptr [rip + 0x48013]
47b7d5: call 0x47fff0
47b7da: mov edi, 0x28
47b7df: mov qword ptr [rip + 0x446ea], rax
47b7e6: call 0x426410
47b7eb: mov qword ptr [rip + 0x446be], rax
47b7f2: test rax, rax
47b7f5: je 0x47babb
47b7fb: movabs rcx, 0xcccccccccccccccd
47b805: mov r14, rax
47b808: mov rax, qword ptr [rip + 0x446b9]
47b80f: lea r13, [rax*4]
47b817: mov qword ptr [rbp - 0x38], rax
47b81b: lea rdx, [r13 + 0x4f]
47b81f: mov rax, rdx
47b822: mul rcx
47b825: shr rdx, 5
47b829: lea rbx, [rdx + rdx*4]
47b82d: mov rdi, rbx
47b830: shl rdi, 5
47b834: call 0x426410
47b839: mov qword ptr [r14], rax
47b83c: mov r15, rax
47b83f: test rax, rax
47b842: je 0x47baa6
47b848: mov qword ptr [rip + 0x48011], rax
47b84f: lea rax, [rip + 0x2ebe4]
47b856: add r14, 8
47b85a: lea r12, [rip + 0x2f21f]
47b861: mov qword ptr [r15 + 8], rax
47b865: lea rax, [rip + 0x2f234]
47b86c: mov qword ptr [r15 + 0x18], rax
47b870: lea rax, [rbx*8]
47b878: lea rbx, [rip + 0x2f238]
47b87f: mov qword ptr [rbp - 0x40], rax
47b883: neg rax
47b886: cmp qword ptr [rbp - 0x38], 0
47b88b: mov dword ptr [rip + 0x44623], 0
47b895: mov qword ptr [r15 + 0x10], 0
47b89d: mov qword ptr [r15 + 0x20], 0x16
47b8a5: mov qword ptr [rbp - 0x48], rax
47b8a9: je 0x47b8b9
47b8ab: lea rdi, [r15 + 0x28]
47b8af: mov rdx, r13
47b8b2: xor esi, esi
47b8b4: call 0x401110
47b8b9: lea rax, [rip + 0x2f1d8]
47b8c0: cmp rax, r12
47b8c3: je 0x47b920
47b8c5: mov rax, qword ptr [rbp - 0x48]
47b8c9: add r15, qword ptr [rbp - 0x40]
47b8cd: add r14, 8
47b8d1: add r12, 8
47b8d5: mov qword ptr [r14 - 8], r15
47b8d9: mov qword ptr [r15 + rax], r15
47b8dd: lea rax, [rip + 0x2eb56]
47b8e4: mov qword ptr [r15 + 8], rax
47b8e8: mov rax, qword ptr [r12]
47b8ec: cmp byte ptr [rbx], 0x2f
47b8ef: mov qword ptr [r15 + 0x10], 0
47b8f7: mov qword ptr [r15 + 0x20], rax
47b8fb: lea rax, [rbx + rax + 1]
47b900: mov qword ptr [r15 + 0x18], rbx
47b904: jne 0x47ba87
47b90a: cmp qword ptr [rbp - 0x38], 0
47b90f: mov rbx, rax
47b912: jne 0x47b8ab
47b914: lea rax, [rip + 0x2f17d]
47b91b: cmp rax, r12
47b91e: jne 0x47b8c5
47b920: cmp qword ptr [rbp - 0x50], 0
47b925: mov qword ptr [r15], 0
47b92c: mov qword ptr [rip + 0x47609], 0x1a
47b937: mov qword ptr [r14], 0
47b93e: je 0x47b949
47b940: mov rax, qword ptr [rbp - 0x50]
47b944: cmp byte ptr [rax], 0
47b947: jne 0x47b963
47b949: mov qword ptr [rip + 0x4458c], 0xffffffffffffffff
47b954: lea rsp, [rbp - 0x28]
47b958: pop rbx
47b959: pop r12
47b95b: pop r13
47b95d: pop r14
47b95f: pop r15
47b961: pop rbp
47b962: ret 
47b963: mov rdi, rax
47b966: call 0x401180
47b96b: mov rcx, rsp
47b96e: lea r8, [rax + 1]
47b972: add rax, 0x18
47b976: mov rdx, rax
47b979: and rax, 0xfffffffffffff000
47b97f: sub rcx, rax
47b982: and rdx, 0xfffffffffffffff0
47b986: mov rax, rcx
47b989: cmp rsp, rax
47b98c: je 0x47b9a0
47b98e: sub rsp, 0x1000
47b995: or qword ptr [rsp + 0xff8], 0
47b99e: jmp 0x47b989
47b9a0: and edx, 0xfff
47b9a6: sub rsp, rdx
47b9a9: test rdx, rdx
47b9ac: jne 0x47ba63
47b9b2: mov rsi, qword ptr [rbp - 0x50]
47b9b6: lea rdi, [rsp + 0xf]
47b9bb: mov rdx, r8
47b9be: and rdi, 0xfffffffffffffff0
47b9c2: call 0x401060
47b9c7: mov r12, rax
47b9ca: movzx eax, byte ptr [rax]
47b9cd: test al, al
47b9cf: je 0x47ba80
47b9d5: mov rdx, r12
47b9d8: mov esi, 1
47b9dd: nop dword ptr [rax]
47b9e0: sub eax, 0x3a
47b9e3: lea rcx, [rsi + 1]
47b9e7: cmp al, 1
47b9e9: ja 0x47b9f5
47b9eb: lea rax, [rsi + 2]
47b9ef: mov rsi, rcx
47b9f2: mov rcx, rax
47b9f5: movzx eax, byte ptr [rdx + 1]
47b9f9: add rdx, 1
47b9fd: test al, al
47b9ff: jne 0x47b9e0
47ba01: lea rdi, [rcx*8]
47ba09: call 0x426410
47ba0e: mov qword ptr [rip + 0x444cb], rax
47ba15: mov rsi, rax
47ba18: test rax, rax
47ba1b: je 0x47baa6
47ba21: xor r9d, r9d
47ba24: xor r8d, r8d
47ba27: lea rcx, [rip + 0x1dd4a]
47ba2e: mov rdi, r12
47ba31: lea rdx, [rip + 0x2ea2e]
47ba38: call 0x47b280
47ba3d: mov rdi, qword ptr [rip + 0x4449c]
47ba44: cmp qword ptr [rdi], 0
47ba48: je 0x47ba6e
47ba4a: mov dword ptr [rip + 0x44494], 0
47ba54: lea rsp, [rbp - 0x28]
47ba58: pop rbx
47ba59: pop r12
47ba5b: pop r13
47ba5d: pop r14
47ba5f: pop r15
47ba61: pop rbp
47ba62: ret 
47ba63: or qword ptr [rsp + rdx - 8], 0
47ba69: jmp 0x47b9b2
47ba6e: call 0x426a00
47ba73: mov qword ptr [rip + 0x44462], 0xffffffffffffffff
47ba7e: jmp 0x47ba4a
47ba80: mov edi, 0x10
47ba85: jmp 0x47ba09
47ba87: lea rcx, [rip + 0x2ef8a]
47ba8e: mov edx, 0x2e2
47ba93: lea rsi, [rip + 0x2e7e2]
47ba9a: lea rdi, [rip + 0x2e9ac]
47baa1: call 0x4032a0
47baa6: lea rcx, [rip + 0x2ee43]
47baad: xor edx, edx
47baaf: xor esi, esi
47bab1: mov edi, 0xc
47bab6: call 0x485060
47babb: lea rcx, [rip + 0x2ee7e]
47bac2: jmp 0x47baad
47bac4: nop word ptr cs:[rax + rax]
47bacf: nop 
47bad0: endbr64 
47bad4: push r15
47bad6: push r14
47bad8: push r13
47bada: push r12
47badc: push rbp
47badd: push rbx
47bade: sub rsp, 0x3b8
47bae5: mov dword ptr [rsp + 0xc], edx
47bae9: mov dword ptr [rsp + 0x10], ecx
47baed: test r9, r9
47baf0: js 0x47c36a
47baf6: cmp r9, qword ptr [rip + 0x4562b]
47bafd: mov rbp, r9
47bb00: jae 0x47c3c9
47bb06: lea rax, [r9 + r9*8]
47bb0a: mov r12, rdi
47bb0d: mov r13, rsi
47bb10: mov ebx, r8d
47bb13: lea r14, [rip + 0x45666]
47bb1a: shl rax, 4
47bb1e: mov r15, qword ptr [r14 + rax]
47bb22: test r15, r15
47bb25: jne 0x47bb39
47bb27: jmp 0x47bbb8
47bb2c: nop dword ptr [rax]
47bb30: mov r15, qword ptr [r15 + 0x18]
47bb34: test r15, r15
47bb37: je 0x47bbb8
47bb39: movzx eax, byte ptr [r15 + 0x31d]
47bb41: mov edx, eax
47bb43: shr al, 5
47bb46: shr dl, 1
47bb48: or eax, edx
47bb4a: test al, 1
47bb4c: jne 0x47bb30
47bb4e: mov rsi, r15
47bb51: mov rdi, r13
47bb54: call 0x481160
47bb59: test eax, eax
47bb5b: jne 0x47bb9f
47bb5d: test byte ptr [r15 + 0x31d], 1
47bb65: jne 0x47bb30
47bb67: mov rax, qword ptr [r15 + 0xb0]
47bb6e: test rax, rax
47bb71: je 0x47bb30
47bb73: mov rdx, qword ptr [r15 + 0x68]
47bb77: mov rsi, qword ptr [rax + 8]
47bb7b: mov rdi, r13
47bb7e: add rsi, qword ptr [rdx + 8]
47bb82: call 0x401130
47bb87: test eax, eax
47bb89: jne 0x47bb30
47bb8b: mov rdi, qword ptr [r15 + 0x38]
47bb8f: mov rsi, r13
47bb92: call 0x4788d0
47bb97: or byte ptr [r15 + 0x31d], 1
47bb9f: add rsp, 0x3b8
47bba6: mov rax, r15
47bba9: pop rbx
47bbaa: pop rbp
47bbab: pop r12
47bbad: pop r13
47bbaf: pop r14
47bbb1: pop r15
47bbb3: ret 
47bbb4: nop dword ptr [rax]
47bbb8: mov eax, ebx
47bbba: mov r15d, dword ptr [rip + 0x47bff]
47bbc1: and eax, 0x10000000
47bbc6: mov dword ptr [rsp + 0x14], eax
47bbca: test r15b, 0x40
47bbce: jne 0x47bf91
47bbd4: mov esi, 0x2f
47bbd9: mov rdi, r13
47bbdc: mov byte ptr [rsp + 0x4f], 0
47bbe1: call 0x401190
47bbe6: test rax, rax
47bbe9: je 0x47bd20
47bbef: test r12, r12
47bbf2: je 0x47bc78
47bbf8: mov rdi, r12
47bbfb: mov rsi, r13
47bbfe: call 0x47b0f0
47bc03: mov qword ptr [rsp + 0x50], rax
47bc08: mov rdi, rax
47bc0b: test rax, rax
47bc0e: je 0x47bc8d
47bc10: lea r15, [rsp + 0x60]
47bc15: lea rdx, [rsp + 0x4f]
47bc1a: mov rsi, r15
47bc1d: call 0x479710
47bc22: mov esi, eax
47bc24: cmp eax, -1
47bc27: je 0x47c255
47bc2d: mov eax, dword ptr [rsp + 0x14]
47bc31: test eax, eax
47bc33: mov eax, 0
47bc38: cmovne r12, rax
47bc3c: mov rax, qword ptr [rip + 0x43e2d]
47bc43: mov rdx, r15
47bc46: mov r8, r12
47bc49: mov rdi, r13
47bc4c: sub rsp, 8
47bc50: mov qword ptr [rsp + 0x60], rax
47bc55: push rbp
47bc56: lea rax, [rsp + 0x68]
47bc5b: push rax
47bc5c: push rbx
47bc5d: mov r9d, dword ptr [rsp + 0x2c]
47bc62: mov rcx, qword ptr [rsp + 0x70]
47bc67: call 0x479d80
47bc6c: add rsp, 0x20
47bc70: mov r15, rax
47bc73: jmp 0x47bb9f
47bc78: mov rdi, r13
47bc7b: call 0x429020
47bc80: mov qword ptr [rsp + 0x50], rax
47bc85: mov rdi, rax
47bc88: test rax, rax
47bc8b: jne 0x47bc10
47bc8d: mov edx, dword ptr [rsp + 0x14]
47bc91: mov eax, 0
47bc96: test edx, edx
47bc98: cmovne r12, rax
47bc9c: mov ecx, dword ptr [rsp + 0x10]
47bca0: test ecx, ecx
47bca2: je 0x47bee8
47bca8: test byte ptr [rip + 0x47b12], 8
47bcaf: jne 0x47bee8
47bcb5: mov rdi, r13
47bcb8: call 0x429020
47bcbd: mov r14, rax
47bcc0: test rax, rax
47bcc3: je 0x47c389
47bcc9: mov edx, dword ptr [rsp + 0xc]
47bccd: mov r9, rbp
47bcd0: mov r8d, ebx
47bcd3: mov rcx, r12
47bcd6: mov rsi, r13
47bcd9: mov rdi, rax
47bcdc: call 0x47e050
47bce1: mov r15, rax
47bce4: test rax, rax
47bce7: je 0x47c389
47bced: lea rax, [rip + 0x2ee6c]
47bcf4: mov rsi, rbp
47bcf7: mov rdi, r15
47bcfa: or word ptr [r15 + 0x31c], 0x204
47bd04: mov qword ptr [r15 + 0x310], rax
47bd0b: mov dword ptr [r15 + 0x2f4], 1
47bd16: call 0x47df90
47bd1b: jmp 0x47bb9f
47bd20: mov rdi, r13
47bd23: call 0x401180
47bd28: add rax, 1
47bd2c: and r15d, 1
47bd30: mov qword ptr [rsp + 0x18], rax
47bd35: jne 0x47c021
47bd3b: test r12, r12
47bd3e: je 0x47c2d6
47bd44: cmp qword ptr [r12 + 0x128], 0
47bd4d: je 0x47be2c
47bd53: cmp qword ptr [rip + 0x44185], -1
47bd5b: je 0x47bd9e
47bd5d: sub rsp, 8
47bd61: lea rcx, [rip + 0x44178]
47bd68: mov edx, ebx
47bd6a: mov rdi, r13
47bd6d: lea rax, [rsp + 0x57]
47bd72: push rax
47bd73: push 2
47bd75: push r12
47bd77: mov rsi, qword ptr [rsp + 0x38]
47bd7c: lea r9, [rsp + 0x80]
47bd84: lea r8, [rsp + 0x70]
47bd89: call 0x479070
47bd8e: add rsp, 0x20
47bd92: mov esi, eax
47bd94: cmp eax, -1
47bd97: jne 0x47bdfd
47bd99: test r12, r12
47bd9c: je 0x47bdf4
47bd9e: mov rax, qword ptr [r12 + 0x3b8]
47bda6: lea r15, [r12 + 0x3b8]
47bdae: cmp rax, -1
47bdb2: je 0x47bf0f
47bdb8: test rax, rax
47bdbb: je 0x47c231
47bdc1: sub rsp, 8
47bdc5: mov rcx, r15
47bdc8: lea rax, [rsp + 0x57]
47bdcd: push rax
47bdce: push 4
47bdd0: push r12
47bdd2: lea r9, [rsp + 0x80]
47bdda: lea r8, [rsp + 0x70]
47bddf: mov rsi, qword ptr [rsp + 0x38]
47bde4: mov edx, ebx
47bde6: mov rdi, r13
47bde9: call 0x479070
47bdee: add rsp, 0x20
47bdf2: mov esi, eax
47bdf4: cmp esi, -1
47bdf7: je 0x47bf0f
47bdfd: test byte ptr [rip + 0x479bc], 1
47be04: jne 0x47c264
47be0a: mov edi, dword ptr [rsp + 0x14]
47be0e: mov eax, 0
47be13: test edi, edi
47be15: cmovne r12, rax
47be19: cmp esi, -1
47be1c: je 0x47bc9c
47be22: lea r15, [rsp + 0x60]
47be27: jmp 0x47bc3c
47be2c: mov rax, qword ptr [rip + 0x4534d]
47be33: xor ecx, ecx
47be35: mov qword ptr [rsp + 0x38], rbp
47be3a: mov qword ptr [rsp + 0x28], r12
47be3f: mov ebp, ecx
47be41: mov qword ptr [rsp + 0x20], rax
47be46: lea rax, [rsp + 0x60]
47be4b: mov r15, rax
47be4e: jmp 0x47bea2
47be50: sub rsp, 8
47be54: mov r9, r15
47be57: mov rcx, r11
47be5a: mov edx, ebx
47be5c: lea rax, [rsp + 0x57]
47be61: mov rdi, r13
47be64: push rax
47be65: push 4
47be67: push qword ptr [rsp + 0x40]
47be6b: mov rsi, qword ptr [rsp + 0x38]
47be70: lea r8, [rsp + 0x70]
47be75: call 0x479070
47be7a: add rsp, 0x20
47be7e: cmp eax, -1
47be81: jne 0x47c220
47be87: cmp r12, qword ptr [rsp + 0x20]
47be8c: sete al
47be8f: or ebp, eax
47be91: mov r12, qword ptr [r12 + 0x2e0]
47be99: test r12, r12
47be9c: je 0x47c144
47bea2: mov rax, qword ptr [r12 + 0x328]
47beaa: lea r11, [r12 + 0x328]
47beb2: cmp rax, -1
47beb6: je 0x47be91
47beb8: test rax, rax
47bebb: jne 0x47be50
47bebd: mov rsi, r11
47bec0: mov edx, 0xf
47bec5: mov rdi, r12
47bec8: mov qword ptr [rsp + 0x30], r11
47becd: lea rcx, [rip + 0x2e5b1]
47bed4: call 0x47b590
47bed9: mov r11, qword ptr [rsp + 0x30]
47bede: test al, al
47bee0: jne 0x47be50
47bee6: jmp 0x47be91
47bee8: cmp byte ptr [rsp + 0x4f], 0
47beed: je 0x47c2e7
47bef3: lea rcx, [rip + 0x2e599]
47befa: xor edx, edx
47befc: mov rsi, r13
47beff: xor edi, edi
47bf01: call 0x485060
47bf06: test r12, r12
47bf09: jne 0x47bd9e
47bf0f: mov qword ptr [rsp + 0x50], 0
47bf18: test ebx, 0x4000000
47bf1e: jne 0x47c33c
47bf24: mov r8d, dword ptr [rip + 0x478dd]
47bf2b: test r8d, r8d
47bf2e: jne 0x47c0dd
47bf34: mov rdi, r13
47bf37: call 0x483c20
47bf3c: mov rdi, rax
47bf3f: test rax, rax
47bf42: je 0x47c0dd
47bf48: test r12, r12
47bf4b: je 0x47c03a
47bf51: test byte ptr [r12 + 0x3e5], 8
47bf5a: jne 0x47c04e
47bf60: lea r15, [rsp + 0x60]
47bf65: lea rdx, [rsp + 0x4f]
47bf6a: mov qword ptr [rsp + 0x20], rdi
47bf6f: mov rsi, r15
47bf72: call 0x478a90
47bf77: mov rdi, qword ptr [rsp + 0x20]
47bf7c: cmp eax, -1
47bf7f: mov esi, eax
47bf81: je 0x47c0d8
47bf87: mov qword ptr [rsp + 0x50], rdi
47bf8c: jmp 0x47bdfd
47bf91: test r12, r12
47bf94: je 0x47c2a0
47bf9a: mov rcx, qword ptr [r12 + 8]
47bf9f: mov r8, qword ptr [r12 + 0x30]
47bfa4: cmp byte ptr [rcx], 0
47bfa7: jne 0x47bfc1
47bfa9: mov rax, qword ptr [rip + 0x43ab8]
47bfb0: mov rcx, qword ptr [rax]
47bfb3: lea rax, [rip + 0x2e375]
47bfba: test rcx, rcx
47bfbd: cmove rcx, rax
47bfc1: mov r10d, dword ptr [rsp + 0x14]
47bfc6: lea rax, [rip + 0x2e9bb]
47bfcd: mov rsi, r13
47bfd0: mov rdx, rbp
47bfd3: lea rdi, [rip + 0x2e986]
47bfda: test r10d, r10d
47bfdd: cmovne rdi, rax
47bfe1: xor eax, eax
47bfe3: call 0x480f60
47bfe8: mov esi, 0x2f
47bfed: mov rdi, r13
47bff0: mov byte ptr [rsp + 0x4f], 0
47bff5: call 0x401190
47bffa: test rax, rax
47bffd: jne 0x47bbf8
47c003: mov rdi, r13
47c006: call 0x401180
47c00b: add rax, 1
47c00f: mov qword ptr [rsp + 0x18], rax
47c014: test byte ptr [rip + 0x477a5], 1
47c01b: je 0x47bd44
47c021: mov rdx, rbp
47c024: mov rsi, r13
47c027: lea rdi, [rip + 0x2e992]
47c02e: xor eax, eax
47c030: call 0x480f60
47c035: jmp 0x47bd3b
47c03a: mov rax, qword ptr [rip + 0x4513f]
47c041: test byte ptr [rax + 0x3e5], 8
47c048: je 0x47bf60
47c04e: movabs rdx, 0x756e696c2d34365f
47c058: xor rdx, qword ptr [rdi + 8]
47c05c: movabs rax, 0x3638782f62696c2f
47c066: xor rax, qword ptr [rdi]
47c069: or rdx, rax
47c06c: jne 0x47c07b
47c06e: cmp dword ptr [rdi + 0x10], 0x6e672d78
47c075: je 0x47c3a7
47c07b: movabs rdx, 0x2d34365f3638782f
47c085: xor rdx, qword ptr [rdi + 8]
47c089: movabs rax, 0x62696c2f7273752f
47c093: xor rax, qword ptr [rdi]
47c096: or rdx, rax
47c099: jne 0x47c0af
47c09b: movabs rax, 0x6e672d78756e696c
47c0a5: cmp qword ptr [rdi + 0x10], rax
47c0a9: je 0x47c3b8
47c0af: cmp dword ptr [rdi], 0x62696c2f
47c0b5: je 0x47c35b
47c0bb: movabs rax, 0x62696c2f7273752f
47c0c5: cmp qword ptr [rdi], rax
47c0c8: jne 0x47bf60
47c0ce: cmp byte ptr [rdi + 8], 0x2f
47c0d2: jne 0x47bf60
47c0d8: call 0x426a00
47c0dd: mov rax, r12
47c0e0: test r12, r12
47c0e3: je 0x47c27f
47c0e9: test byte ptr [rax + 0x3e5], 8
47c0f0: jne 0x47c351
47c0f6: cmp qword ptr [rip + 0x43db2], -1
47c0fe: mov esi, 0xffffffff
47c103: je 0x47bdfd
47c109: sub rsp, 8
47c10d: lea rcx, [rip + 0x43d9c]
47c114: mov rdi, r13
47c117: lea rdx, [rsp + 0x57]
47c11c: push rdx
47c11d: mov edx, ebx
47c11f: push 0x40
47c121: push rax
47c122: mov rsi, qword ptr [rsp + 0x38]
47c127: lea r9, [rsp + 0x80]
47c12f: lea r8, [rsp + 0x70]
47c134: call 0x479070
47c139: add rsp, 0x20
47c13d: mov esi, eax
47c13f: jmp 0x47bdfd
47c144: mov eax, ebp
47c146: mov r12, qword ptr [rsp + 0x28]
47c14b: mov rbp, qword ptr [rsp + 0x38]
47c150: test al, al
47c152: jne 0x47c302
47c158: cmp qword ptr [rsp + 0x20], 0
47c15e: je 0x47c1de
47c160: mov rcx, qword ptr [rsp + 0x20]
47c165: movzx eax, byte ptr [rcx + 0x31c]
47c16c: mov byte ptr [rsp + 0x28], al
47c170: and eax, 3
47c173: cmp al, 2
47c175: je 0x47c1de
47c177: mov rax, qword ptr [rcx + 0x328]
47c17e: lea r15, [rcx + 0x328]
47c185: cmp rax, -1
47c189: je 0x47c1de
47c18b: test rax, rax
47c18e: je 0x47c318
47c194: mov rax, qword ptr [rsp + 0x20]
47c199: test r12, r12
47c19c: mov edx, ebx
47c19e: mov rdi, r13
47c1a1: cmovne rax, r12
47c1a5: sub rsp, 8
47c1a9: mov rcx, rax
47c1ac: lea rax, [rsp + 0x57]
47c1b1: push rax
47c1b2: push 4
47c1b4: push rcx
47c1b5: mov rsi, qword ptr [rsp + 0x38]
47c1ba: mov rcx, r15
47c1bd: lea r9, [rsp + 0x80]
47c1c5: lea r8, [rsp + 0x70]
47c1ca: call 0x479070
47c1cf: add rsp, 0x20
47c1d3: mov esi, eax
47c1d5: cmp eax, -1
47c1d8: jne 0x47bdfd
47c1de: cmp qword ptr [rip + 0x43cfa], -1
47c1e6: je 0x47bf06
47c1ec: test r12, r12
47c1ef: jne 0x47bd5d
47c1f5: sub rsp, 8
47c1f9: lea rcx, [rip + 0x43ce0]
47c200: lea rax, [rsp + 0x57]
47c205: push rax
47c206: push 2
47c208: push qword ptr [rip + 0x44f72]
47c20e: lea r9, [rsp + 0x80]
47c216: lea r8, [rsp + 0x70]
47c21b: jmp 0x47bddf
47c220: mov r12, qword ptr [rsp + 0x28]
47c225: mov rbp, qword ptr [rsp + 0x38]
47c22a: mov esi, eax
47c22c: jmp 0x47bdfd
47c231: lea rcx, [rip + 0x2e253]
47c238: mov edx, 0x1d
47c23d: mov rsi, r15
47c240: mov rdi, r12
47c243: call 0x47b590
47c248: test al, al
47c24a: jne 0x47bdc1
47c250: jmp 0x47bf0f
47c255: mov rdi, qword ptr [rsp + 0x50]
47c25a: call 0x426a00
47c25f: jmp 0x47bc8d
47c264: lea rdi, [rip + 0x190ef]
47c26b: xor eax, eax
47c26d: mov dword ptr [rsp + 0x18], esi
47c271: call 0x480f60
47c276: mov esi, dword ptr [rsp + 0x18]
47c27a: jmp 0x47be0a
47c27f: lea rax, [rbp + rbp*8]
47c284: shl rax, 4
47c288: mov rax, qword ptr [r14 + rax]
47c28c: test rax, rax
47c28f: je 0x47c0f6
47c295: jmp 0x47c0e9
47c29a: nop word ptr [rax + rax]
47c2a0: mov esi, 0x2f
47c2a5: mov rdi, r13
47c2a8: mov byte ptr [rsp + 0x4f], 0
47c2ad: call 0x401190
47c2b2: test rax, rax
47c2b5: jne 0x47bc78
47c2bb: mov rdi, r13
47c2be: call 0x401180
47c2c3: add rax, 1
47c2c7: and r15d, 1
47c2cb: mov qword ptr [rsp + 0x18], rax
47c2d0: jne 0x47c021
47c2d6: mov rax, qword ptr [rip + 0x44ea3]
47c2dd: mov qword ptr [rsp + 0x20], rax
47c2e2: jmp 0x47c158
47c2e7: mov rax, 0xffffffffffffffc0
47c2ee: lea rcx, [rip + 0x2e6f3]
47c2f5: xor edx, edx
47c2f7: mov rsi, r13
47c2fa: mov edi, dword ptr fs:[rax]
47c2fd: call 0x485060
47c302: cmp qword ptr [rip + 0x43bd6], -1
47c30a: je 0x47bd9e
47c310: jmp 0x47bd5d
47c315: nop dword ptr [rax]
47c318: mov rdi, rcx
47c31b: mov edx, 0xf
47c320: mov rsi, r15
47c323: lea rcx, [rip + 0x2e15b]
47c32a: call 0x47b590
47c32f: test al, al
47c331: jne 0x47c194
47c337: jmp 0x47c1de
47c33c: mov r9d, dword ptr [rip + 0x4375d]
47c343: test r9d, r9d
47c346: jne 0x47c0dd
47c34c: jmp 0x47bf24
47c351: mov esi, 0xffffffff
47c356: jmp 0x47bdfd
47c35b: cmp byte ptr [rdi + 4], 0x2f
47c35f: jne 0x47c0bb
47c365: jmp 0x47c0d8
47c36a: lea rcx, [rip + 0x2e697]
47c371: mov edx, 0x78f
47c376: lea rsi, [rip + 0x2deff]
47c37d: lea rdi, [rip + 0x2e0e5]
47c384: call 0x4032a0
47c389: mov rdi, r14
47c38c: call 0x426a00
47c391: xor edx, edx
47c393: mov rsi, r13
47c396: mov edi, 0xc
47c39b: lea rcx, [rip + 0x2e22e]
47c3a2: call 0x485060
47c3a7: cmp word ptr [rdi + 0x14], 0x2f75
47c3ad: jne 0x47c07b
47c3b3: jmp 0x47c0d8
47c3b8: cmp word ptr [rdi + 0x18], 0x2f75
47c3be: jne 0x47c0af
47c3c4: jmp 0x47c0d8
47c3c9: lea rcx, [rip + 0x2e638]
47c3d0: mov edx, 0x790
47c3d5: lea rsi, [rip + 0x2dea0]
47c3dc: lea rdi, [rip + 0x2e090]
47c3e3: call 0x4032a0
47c3e8: nop dword ptr [rax + rax]
47c3f0: endbr64 
47c3f4: push r15
47c3f6: push r14
47c3f8: push r13
47c3fa: mov r13d, edx
47c3fd: push r12
47c3ff: mov r12, rdi
47c402: push rbp
47c403: mov rbp, rsi
47c406: push rbx
47c407: sub rsp, 0x28
47c40b: test dl, dl
47c40d: jne 0x47c4d8
47c413: mov eax, dword ptr [rsi + 8]
47c416: add rax, 1
47c41a: shl rax, 4
47c41e: add rax, rbp
47c421: mov byte ptr [rsp], r13b
47c425: mov r14, rsp
47c428: cmp qword ptr [r12 + 0x128], 0
47c431: mov dword ptr [rsp + 4], 0
47c439: mov qword ptr [rsp + 8], rbp
47c43e: mov qword ptr [rsp + 0x10], rax
47c443: je 0x47c508
47c449: mov rsi, qword ptr [rip + 0x43a90]
47c450: mov rdi, r14
47c453: call 0x4789c0
47c458: mov rsi, qword ptr [r12 + 0x3b8]
47c460: cmp rsi, -1
47c464: je 0x47c473
47c466: test rsi, rsi
47c469: je 0x47c4a8
47c46b: mov rdi, r14
47c46e: call 0x4789c0
47c473: test byte ptr [r12 + 0x3e5], 8
47c47c: je 0x47c4f0
47c47e: test r13b, r13b
47c481: je 0x47c492
47c483: mov eax, dword ptr [rbp + 8]
47c486: add rax, 1
47c48a: shl rax, 4
47c48e: add qword ptr [rbp], rax
47c492: add rsp, 0x28
47c496: pop rbx
47c497: pop rbp
47c498: pop r12
47c49a: pop r13
47c49c: pop r14
47c49e: pop r15
47c4a0: ret 
47c4a1: nop dword ptr [rax]
47c4a8: lea rsi, [r12 + 0x3b8]
47c4b0: lea rcx, [rip + 0x2dfd4]
47c4b7: mov edx, 0x1d
47c4bc: mov rdi, r12
47c4bf: call 0x47b590
47c4c4: test al, al
47c4c6: je 0x47c473
47c4c8: mov rsi, qword ptr [r12 + 0x3b8]
47c4d0: jmp 0x47c46b
47c4d2: nop word ptr [rax + rax]
47c4d8: mov dword ptr [rsi + 8], 0
47c4df: mov eax, 0x10
47c4e4: mov qword ptr [rsi], 0
47c4eb: jmp 0x47c41e
47c4f0: mov rsi, qword ptr [rip + 0x439b9]
47c4f7: mov rdi, r14
47c4fa: call 0x4789c0
47c4ff: jmp 0x47c47e
47c504: nop dword ptr [rax]
47c508: mov rbx, r12
47c50b: mov r14, rsp
47c50e: lea r15, [rip + 0x2df70]
47c515: jmp 0x47c534
47c517: nop word ptr [rax + rax]
47c520: mov rdi, r14
47c523: call 0x4789c0
47c528: mov rbx, qword ptr [rbx + 0x2e0]
47c52f: test rbx, rbx
47c532: je 0x47c570
47c534: mov rsi, qword ptr [rbx + 0x328]
47c53b: cmp rsi, -1
47c53f: je 0x47c528
47c541: test rsi, rsi
47c544: jne 0x47c520
47c546: lea rsi, [rbx + 0x328]
47c54d: mov rcx, r15
47c550: mov edx, 0xf
47c555: mov rdi, rbx
47c558: call 0x47b590
47c55d: test al, al
47c55f: je 0x47c528
47c561: mov rsi, qword ptr [rbx + 0x328]
47c568: jmp 0x47c520
47c56a: nop word ptr [rax + rax]
47c570: cmp qword ptr [r12 + 0x30], 0
47c576: jne 0x47c449
47c57c: mov rbx, qword ptr [rip + 0x44bfd]
47c583: test rbx, rbx
47c586: je 0x47c449
47c58c: movzx eax, byte ptr [rbx + 0x31c]
47c593: and eax, 3
47c596: cmp al, 2
47c598: je 0x47c449
47c59e: cmp r12, rbx
47c5a1: je 0x47c449
47c5a7: mov rsi, qword ptr [rbx + 0x328]
47c5ae: cmp rsi, -1
47c5b2: je 0x47c449
47c5b8: test rsi, rsi
47c5bb: je 0x47c5ca
47c5bd: mov rdi, r14
47c5c0: call 0x4789c0
47c5c5: jmp 0x47c449
47c5ca: lea rsi, [rbx + 0x328]
47c5d1: lea rcx, [rip + 0x2dead]
47c5d8: mov edx, 0xf
47c5dd: mov rdi, rbx
47c5e0: call 0x47b590
47c5e5: test al, al
47c5e7: je 0x47c449
47c5ed: mov rsi, qword ptr [rbx + 0x328]
47c5f4: jmp 0x47c5bd
47c5f6: nop word ptr cs:[rax + rax]
47c600: push r14
47c602: mov r10, rdi
47c605: push r13
47c607: mov r13, rdx
47c60a: movzx edx, word ptr [r9 + 6]
47c60f: push r12
47c611: push rbp
47c612: mov ebp, ecx
47c614: movzx ecx, byte ptr [r9 + 4]
47c619: push rbx
47c61a: mov rbx, r9
47c61d: mov r12, qword ptr [rsp + 0x40]
47c622: and ecx, 0xf
47c625: cmp qword ptr [r9 + 8], 0
47c62a: je 0x47c738
47c630: mov eax, 0x467
47c635: sar eax, cl
47c637: not eax
47c639: and eax, 1
47c63c: test dx, dx
47c63f: sete dl
47c642: movzx edx, dl
47c645: and r8d, edx
47c648: or eax, r8d
47c64b: jne 0x47c710
47c651: cmp rbx, rsi
47c654: je 0x47c66d
47c656: mov edi, dword ptr [rbx]
47c658: mov rsi, r10
47c65b: add rdi, qword ptr [rsp + 0x38]
47c660: call 0x401130
47c665: test eax, eax
47c667: jne 0x47c710
47c66d: mov rax, qword ptr [r12 + 0x340]
47c675: test r13, r13
47c678: je 0x47c6c8
47c67a: test rax, rax
47c67d: je 0x47c750
47c683: mov edx, dword ptr [rsp + 0x30]
47c687: movzx r14d, word ptr [rax + rdx*2]
47c68c: mov rax, r14
47c68f: and eax, 0x7fff
47c694: lea rdx, [rax + rax*2]
47c698: mov rax, qword ptr [r12 + 0x2e8]
47c6a0: lea rax, [rax + rdx*8]
47c6a4: mov ebp, dword ptr [rax + 8]
47c6a7: cmp ebp, dword ptr [r13 + 8]
47c6ab: je 0x47c720
47c6ad: or ebp, dword ptr [r13 + 0xc]
47c6b1: jne 0x47c710
47c6b3: test r14w, r14w
47c6b7: js 0x47c710
47c6b9: mov rax, rbx
47c6bc: pop rbx
47c6bd: pop rbp
47c6be: pop r12
47c6c0: pop r13
47c6c2: pop r14
47c6c4: ret 
47c6c5: nop dword ptr [rax]
47c6c8: test rax, rax
47c6cb: je 0x47c6b9
47c6cd: mov edx, dword ptr [rsp + 0x30]
47c6d1: movzx edx, word ptr [rax + rdx*2]
47c6d5: xor eax, eax
47c6d7: mov ecx, edx
47c6d9: and ecx, 0x7fff
47c6df: and ebp, 2
47c6e2: sete al
47c6e5: add eax, 2
47c6e8: cmp ecx, eax
47c6ea: jl 0x47c6b9
47c6ec: test dx, dx
47c6ef: js 0x47c710
47c6f1: mov rax, qword ptr [rsp + 0x50]
47c6f6: mov rsi, qword ptr [rsp + 0x50]
47c6fb: mov eax, dword ptr [rax]
47c6fd: lea edx, [rax + 1]
47c700: mov dword ptr [rsi], edx
47c702: test eax, eax
47c704: jne 0x47c710
47c706: mov rax, qword ptr [rsp + 0x48]
47c70b: mov qword ptr [rax], rbx
47c70e: nop 
47c710: xor eax, eax
47c712: pop rbx
47c713: pop rbp
47c714: pop r12
47c716: pop r13
47c718: pop r14
47c71a: ret 
47c71b: nop dword ptr [rax + rax]
47c720: mov rsi, qword ptr [r13]
47c724: mov rdi, qword ptr [rax]
47c727: call 0x401130
47c72c: test eax, eax
47c72e: je 0x47c6b9
47c730: jmp 0x47c6ad
47c735: nop dword ptr [rax]
47c738: cmp cl, 6
47c73b: je 0x47c630
47c741: cmp dx, -0xf
47c745: je 0x47c630
47c74b: xor eax, eax
47c74d: jmp 0x47c712
47c74f: nop 
47c750: mov rdi, qword ptr [r13 + 0x10]
47c754: test rdi, rdi
47c757: je 0x47c6b9
47c75d: mov rsi, r12
47c760: call 0x481160
47c765: test eax, eax
47c767: je 0x47c6b9
47c76d: lea rcx, [rip + 0x2e6ac]
47c774: mov edx, 0x6f
47c779: lea rsi, [rip + 0x2e3e4]
47c780: lea rdi, [rip + 0x2e439]
47c787: call 0x4032a0
47c78c: nop dword ptr [rax]
47c790: push r15
47c792: push r14
47c794: mov r14, rsi
47c797: push r13
47c799: push r12
47c79b: push rbp
47c79c: push rbx
47c79d: sub rsp, 0x88
47c7a4: mov r12d, dword ptr [r9 + 8]
47c7a8: mov qword ptr [rsp + 0x10], rdi
47c7ad: mov rbp, qword ptr [rsp + 0xc0]
47c7b5: mov qword ptr [rsp + 0x48], rdx
47c7ba: mov r15, qword ptr [rsp + 0xd8]
47c7c2: mov qword ptr [rsp + 0x40], rcx
47c7c7: mov qword ptr [rsp + 0x38], r8
47c7cc: shr rsi, 6
47c7d0: mov r11, r12
47c7d3: mov qword ptr [rsp + 0x18], r14
47c7d8: mov r12, r15
47c7db: mov eax, dword ptr [rsp + 0xe0]
47c7e2: mov r13, qword ptr [r9]
47c7e5: mov qword ptr [rsp + 0x20], rsi
47c7ea: and eax, 2
47c7ed: mov dword ptr [rsp + 0x54], eax
47c7f1: mov r15d, eax
47c7f4: jmp 0x47c889
47c7f9: nop dword ptr [rax]
47c800: mov esi, dword ptr [rbx + 0x2f4]
47c806: test esi, esi
47c808: je 0x47c87c
47c80a: mov rax, qword ptr [rbx + 0x70]
47c80e: mov dword ptr [rsp + 0x74], 0
47c816: mov qword ptr [rsp + 0x78], 0
47c81f: mov rax, qword ptr [rax + 8]
47c823: mov qword ptr [rsp + 8], rax
47c828: mov rax, qword ptr [rbx + 0x68]
47c82c: mov rax, qword ptr [rax + 8]
47c830: mov qword ptr [rsp], rax
47c834: mov rax, qword ptr [rbx + 0x300]
47c83b: test rax, rax
47c83e: je 0x47c910
47c844: mov rdi, qword ptr [rsp + 0x18]
47c849: mov ecx, dword ptr [rbx + 0x2fc]
47c84f: mov edx, dword ptr [rsp + 0x20]
47c853: and edx, dword ptr [rbx + 0x2f8]
47c859: mov rax, qword ptr [rax + rdx*8]
47c85d: mov rdx, rdi
47c860: shr rdx, cl
47c863: mov rcx, rdx
47c866: mov rdx, rax
47c869: shr rdx, cl
47c86c: mov ecx, edi
47c86e: shr rax, cl
47c871: and rax, rdx
47c874: test al, 1
47c876: jne 0x47ca78
47c87c: add rbp, 1
47c880: cmp r11, rbp
47c883: jbe 0x47cb60
47c889: mov rax, qword ptr [r13 + rbp*8]
47c88e: mov rbx, qword ptr [rax + 0x28]
47c892: cmp rbx, r12
47c895: je 0x47c87c
47c897: test r15d, r15d
47c89a: je 0x47c8a5
47c89c: test byte ptr [rbx + 0x31c], 3
47c8a3: je 0x47c87c
47c8a5: test byte ptr [rbx + 0x31d], 0x20
47c8ac: jne 0x47c87c
47c8ae: test byte ptr [rip + 0x46f0b], 8
47c8b5: je 0x47c800
47c8bb: mov rdx, qword ptr [rbx + 8]
47c8bf: mov rcx, qword ptr [rbx + 0x30]
47c8c3: cmp byte ptr [rdx], 0
47c8c6: je 0x47c8f0
47c8c8: mov rsi, qword ptr [rsp + 0x10]
47c8cd: lea rdi, [rip + 0x2e33c]
47c8d4: xor eax, eax
47c8d6: mov qword ptr [rsp], r11
47c8da: call 0x480f60
47c8df: mov r11, qword ptr [rsp]
47c8e3: jmp 0x47c800
47c8e8: nop dword ptr [rax + rax]
47c8f0: mov rax, qword ptr [rip + 0x43171]
47c8f7: mov rdx, qword ptr [rax]
47c8fa: lea rax, [rip + 0x2da2e]
47c901: test rdx, rdx
47c904: cmove rdx, rax
47c908: jmp 0x47c8c8
47c90a: nop word ptr [rax + rax]
47c910: mov rax, qword ptr [rsp + 0x48]
47c915: mov edi, 0xffffffff
47c91a: mov rax, qword ptr [rax]
47c91d: cmp rax, rdi
47c920: je 0x47cfe0
47c926: xor edx, edx
47c928: div rsi
47c92b: shl rdx, 2
47c92f: mov rax, qword ptr [rbx + 0x310]
47c936: mov eax, dword ptr [rax + rdx]
47c939: test eax, eax
47c93b: je 0x47c87c
47c941: lea rsi, [rsp + 0x74]
47c946: mov dword ptr [rsp + 0x58], r15d
47c94b: mov r14d, dword ptr [rsp + 0xd0]
47c953: mov qword ptr [rsp + 0x28], rsi
47c958: lea rsi, [rsp + 0x78]
47c95d: mov r15d, dword ptr [rsp + 0xe0]
47c965: mov qword ptr [rsp + 0x60], r13
47c96a: mov r13, qword ptr [rsp + 0xc8]
47c972: mov qword ptr [rsp + 0xd8], r12
47c97a: mov r12, qword ptr [rsp + 0x40]
47c97f: mov qword ptr [rsp + 0x30], rsi
47c984: mov qword ptr [rsp + 0xc0], rbp
47c98c: mov qword ptr [rsp + 0x68], r11
47c991: jmp 0x47c9aa
47c993: nop dword ptr [rax + rax]
47c998: mov rax, qword ptr [rbx + 0x308]
47c99f: mov eax, dword ptr [rax + rbp*4]
47c9a2: test eax, eax
47c9a4: je 0x47ce08
47c9aa: sub rsp, 8
47c9ae: mov ebp, eax
47c9b0: mov r8d, r15d
47c9b3: mov ecx, r14d
47c9b6: push qword ptr [rsp + 0x30]
47c9ba: lea rdx, [rbp + rbp*2]
47c9bf: mov rsi, r12
47c9c2: push qword ptr [rsp + 0x40]
47c9c6: push rbx
47c9c7: push qword ptr [rsp + 0x20]
47c9cb: push rax
47c9cc: mov rax, qword ptr [rsp + 0x38]
47c9d1: mov rdi, qword ptr [rsp + 0x40]
47c9d6: lea r9, [rax + rdx*8]
47c9da: mov rdx, r13
47c9dd: call 0x47c600
47c9e2: add rsp, 0x30
47c9e6: test rax, rax
47c9e9: je 0x47c998
47c9eb: mov r15d, dword ptr [rsp + 0x58]
47c9f0: mov r13, qword ptr [rsp + 0x60]
47c9f5: mov r8, rax
47c9f8: mov rbp, qword ptr [rsp + 0xc0]
47ca00: mov r12, qword ptr [rsp + 0xd8]
47ca08: mov r11, qword ptr [rsp + 0x68]
47ca0d: nop dword ptr [rax]
47ca10: cmp qword ptr [rsp + 0xe8], 0
47ca19: je 0x47cb78
47ca1f: movzx eax, byte ptr [r8 + 5]
47ca24: and eax, 3
47ca27: sub eax, 1
47ca2a: cmp eax, 1
47ca2d: jbe 0x47c87c
47ca33: movzx eax, byte ptr [r8 + 4]
47ca38: shr al, 4
47ca3b: cmp al, 2
47ca3d: je 0x47cc80
47ca43: cmp al, 0xa
47ca45: je 0x47ccb8
47ca4b: cmp al, 1
47ca4d: jne 0x47c87c
47ca53: mov rax, qword ptr [rsp + 0x38]
47ca58: movq xmm0, r8
47ca5d: movq xmm1, rbx
47ca62: punpcklqdq xmm0, xmm1
47ca66: movaps xmmword ptr [rax], xmm0
47ca69: mov eax, 1
47ca6e: jmp 0x47cb62
47ca73: nop dword ptr [rax + rax]
47ca78: mov rax, rdi
47ca7b: xor edx, edx
47ca7d: div rsi
47ca80: mov rax, qword ptr [rbx + 0x308]
47ca87: mov eax, dword ptr [rax + rdx*4]
47ca8a: test eax, eax
47ca8c: je 0x47c87c
47ca92: mov rdx, qword ptr [rbx + 0x310]
47ca99: mov dword ptr [rsp + 0x30], r15d
47ca9e: mov qword ptr [rsp + 0x58], r13
47caa3: mov r15d, dword ptr [rsp + 0xd0]
47caab: lea r14, [rdx + rax*4]
47caaf: lea rax, [rsp + 0x74]
47cab4: mov qword ptr [rsp + 0x60], r11
47cab9: mov r13, qword ptr [rsp + 0xc8]
47cac1: mov qword ptr [rsp + 0xc0], rbp
47cac9: mov rbp, rdi
47cacc: mov qword ptr [rsp + 0xd8], r12
47cad4: mov r12, qword ptr [rsp + 0x40]
47cad9: mov qword ptr [rsp + 0x28], rax
47cade: jmp 0x47caed
47cae0: add r14, 4
47cae4: and edx, 1
47cae7: jne 0x47d090
47caed: mov eax, dword ptr [r14]
47caf0: mov rdx, rax
47caf3: xor rax, rbp
47caf6: shr rax, 1
47caf9: jne 0x47cae0
47cafb: sub rsp, 8
47caff: mov rax, r14
47cb02: sub rax, qword ptr [rbx + 0x310]
47cb09: mov rsi, r12
47cb0c: push qword ptr [rsp + 0x30]
47cb10: sar rax, 2
47cb14: mov edx, eax
47cb16: lea rdx, [rdx + rdx*2]
47cb1a: lea rcx, [rsp + 0x88]
47cb22: push rcx
47cb23: mov ecx, r15d
47cb26: push rbx
47cb27: push qword ptr [rsp + 0x20]
47cb2b: push rax
47cb2c: mov rax, qword ptr [rsp + 0x38]
47cb31: mov r8d, dword ptr [rsp + 0x110]
47cb39: mov rdi, qword ptr [rsp + 0x40]
47cb3e: lea r9, [rax + rdx*8]
47cb42: mov rdx, r13
47cb45: call 0x47c600
47cb4a: add rsp, 0x30
47cb4e: test rax, rax
47cb51: jne 0x47d2b7
47cb57: mov edx, dword ptr [r14]
47cb5a: jmp 0x47cae0
47cb5c: nop dword ptr [rax]
47cb60: xor eax, eax
47cb62: add rsp, 0x88
47cb69: pop rbx
47cb6a: pop rbp
47cb6b: pop r12
47cb6d: pop r13
47cb6f: pop r14
47cb71: pop r15
47cb73: ret 
47cb74: nop dword ptr [rax]
47cb78: test byte ptr [rbx + 0x31c], 3
47cb7f: jne 0x47ca1f
47cb85: cmp dword ptr [rsp + 0xe0], 4
47cb8d: jne 0x47ca1f
47cb93: mov rdx, qword ptr [rbx + 0x78]
47cb97: test rdx, rdx
47cb9a: je 0x47ca1f
47cba0: mov rax, qword ptr [rbx + 0x80]
47cba7: test rax, rax
47cbaa: je 0x47ca1f
47cbb0: mov rax, qword ptr [rax + 8]
47cbb4: test rax, rax
47cbb7: je 0x47ca1f
47cbbd: movabs rsi, 0xaaaaaaaaaaaaaaab
47cbc7: mov r9, qword ptr [rdx + 8]
47cbcb: mul rsi
47cbce: mov rax, rdx
47cbd1: shr rax, 4
47cbd5: test eax, eax
47cbd7: je 0x47ca1f
47cbdd: sub eax, 1
47cbe0: mov qword ptr [rsp + 0x28], rbx
47cbe5: mov rbx, r9
47cbe8: lea rax, [rax + rax*2]
47cbec: mov qword ptr [rsp + 0xc0], rbp
47cbf4: lea r14, [r9 + rax*8 + 0x18]
47cbf9: mov qword ptr [rsp + 0x30], r8
47cbfe: mov rbp, r14
47cc01: mov r14, r11
47cc04: jmp 0x47cc1d
47cc06: nop word ptr cs:[rax + rax]
47cc10: add rbx, 0x18
47cc14: cmp rbx, rbp
47cc17: je 0x47d2f3
47cc1d: mov rcx, qword ptr [rbx + 8]
47cc21: mov esi, ecx
47cc23: cmp ecx, 0x24
47cc26: ja 0x47cc10
47cc28: movabs rax, 0x1000070080
47cc32: shr rax, cl
47cc35: not rax
47cc38: and eax, 1
47cc3b: cmp rsi, 5
47cc3f: jne 0x47cc10
47cc41: test al, al
47cc43: je 0x47cc10
47cc45: mov rsi, qword ptr [rsp + 8]
47cc4a: shr rcx, 0x20
47cc4e: lea rax, [rcx + rcx*2]
47cc52: mov edi, dword ptr [rsi + rax*8]
47cc55: mov rsi, qword ptr [rsp + 0x10]
47cc5a: add rdi, qword ptr [rsp]
47cc5e: call 0x401130
47cc63: test eax, eax
47cc65: jne 0x47cc10
47cc67: mov rbp, qword ptr [rsp + 0xc0]
47cc6f: mov r11, r14
47cc72: jmp 0x47c87c
47cc77: nop word ptr [rax + rax]
47cc80: mov ecx, dword ptr [rip + 0x46ba6]
47cc86: test ecx, ecx
47cc88: je 0x47ca53
47cc8e: mov rax, qword ptr [rsp + 0x38]
47cc93: cmp qword ptr [rax], 0
47cc97: jne 0x47c87c
47cc9d: movq xmm0, r8
47cca2: movq xmm5, rbx
47cca7: punpcklqdq xmm0, xmm5
47ccab: movaps xmmword ptr [rax], xmm0
47ccae: jmp 0x47c87c
47ccb3: nop dword ptr [rax + rax]
47ccb8: mov rax, qword ptr [rbx + 0x30]
47ccbc: cmp qword ptr [rip + 0x43244], 0
47ccc4: mov r14, qword ptr [rsp + 0x18]
47ccc9: mov qword ptr [rsp + 0x18], rax
47ccce: je 0x47ccf3
47ccd0: lea rax, [rax + rax*8]
47ccd4: lea rdi, [rip + 0x444a5]
47ccdb: mov qword ptr [rsp + 8], r8
47cce0: shl rax, 4
47cce4: lea rdi, [rdi + rax + 0x20]
47cce9: call 0
47ccee: mov r8, qword ptr [rsp + 8]
47ccf3: mov rax, qword ptr [rsp + 0x18]
47ccf8: lea rbp, [rax + rax*8]
47ccfc: lea rax, [rip + 0x4447d]
47cd03: shl rbp, 4
47cd07: add rbp, rax
47cd0a: mov rax, qword ptr [rbp + 0x48]
47cd0e: mov r9, qword ptr [rbp + 0x50]
47cd12: mov qword ptr [rsp + 8], rax
47cd17: test rax, rax
47cd1a: je 0x47d204
47cd20: mov rax, r14
47cd23: xor edx, edx
47cd25: lea rcx, [r9 - 2]
47cd29: mov qword ptr [rsp + 0x28], r8
47cd2e: div r9
47cd31: mov qword ptr [rsp + 0x20], rbx
47cd36: mov rax, r14
47cd39: mov r13, rdx
47cd3c: xor edx, edx
47cd3e: div rcx
47cd41: mov qword ptr [rsp + 0x30], r13
47cd46: mov r12, r13
47cd49: mov r13, r14
47cd4c: lea r15, [rdx + 1]
47cd50: mov rdx, r15
47cd53: mov rbx, r15
47cd56: mov r15, r9
47cd59: shl rdx, 5
47cd5d: mov r14, rdx
47cd60: mov rbp, r12
47cd63: shl rbp, 5
47cd67: add rbp, qword ptr [rsp + 8]
47cd6c: jmp 0x47cd88
47cd6e: nop 
47cd70: test rdi, rdi
47cd73: je 0x47ce48
47cd79: add r12, rbx
47cd7c: add rbp, r14
47cd7f: cmp r15, r12
47cd82: jbe 0x47cfd0
47cd88: mov eax, dword ptr [rbp]
47cd8b: mov rdi, qword ptr [rbp + 8]
47cd8f: cmp r13, rax
47cd92: jne 0x47cd70
47cd94: mov rsi, qword ptr [rsp + 0x10]
47cd99: call 0x401130
47cd9e: test eax, eax
47cda0: jne 0x47cd79
47cda2: mov edx, dword ptr [rsp + 0x54]
47cda6: mov rbx, qword ptr [rsp + 0x20]
47cdab: mov r8, qword ptr [rsp + 0x28]
47cdb0: test edx, edx
47cdb2: jne 0x47cdbc
47cdb4: mov r8, qword ptr [rbp + 0x10]
47cdb8: mov rbx, qword ptr [rbp + 0x18]
47cdbc: mov rax, qword ptr [rsp + 0x38]
47cdc1: movq xmm0, r8
47cdc6: movq xmm4, rbx
47cdcb: cmp qword ptr [rip + 0x4319d], 0
47cdd3: punpcklqdq xmm0, xmm4
47cdd7: movaps xmmword ptr [rax], xmm0
47cdda: je 0x47ca69
47cde0: mov rax, qword ptr [rsp + 0x18]
47cde5: lea rdi, [rip + 0x44394]
47cdec: lea rax, [rax + rax*8]
47cdf0: shl rax, 4
47cdf4: lea rdi, [rdi + rax + 0x20]
47cdf9: call 0
47cdfe: jmp 0x47ca69
47ce03: nop dword ptr [rax + rax]
47ce08: mov r15d, dword ptr [rsp + 0x58]
47ce0d: mov r13, qword ptr [rsp + 0x60]
47ce12: mov rbp, qword ptr [rsp + 0xc0]
47ce1a: mov r12, qword ptr [rsp + 0xd8]
47ce22: mov r11, qword ptr [rsp + 0x68]
47ce27: cmp dword ptr [rsp + 0x74], 1
47ce2c: jne 0x47c87c
47ce32: mov r8, qword ptr [rsp + 0x78]
47ce37: test r8, r8
47ce3a: jne 0x47ca10
47ce40: jmp 0x47c87c
47ce45: nop dword ptr [rax]
47ce48: mov rax, qword ptr [rsp + 0x18]
47ce4d: mov r9, r15
47ce50: mov r14, r13
47ce53: mov r15, rbx
47ce56: lea rdi, [rip + 0x44323]
47ce5d: lea rdx, [r9 + r9*2]
47ce61: mov r8, qword ptr [rsp + 0x28]
47ce66: mov rbx, qword ptr [rsp + 0x20]
47ce6b: lea rax, [rax + rax*8]
47ce6f: mov r13, qword ptr [rsp + 0x30]
47ce74: shl rax, 4
47ce78: mov rax, qword ptr [rdi + rax + 0x58]
47ce7d: shl rax, 2
47ce81: cmp rdx, rax
47ce84: jbe 0x47d0b4
47ce8a: mov eax, dword ptr [rsp + 0x54]
47ce8e: mov rcx, r15
47ce91: mov edx, dword ptr [r8]
47ce94: mov rsi, qword ptr [rsp + 8]
47ce99: add rdx, qword ptr [rsp]
47ce9d: shl rcx, 5
47cea1: test eax, eax
47cea3: je 0x47cf3f
47cea9: mov rax, r13
47ceac: shl rax, 5
47ceb0: add rax, rsi
47ceb3: jmp 0x47cec7
47ceb5: nop dword ptr [rax]
47ceb8: add r13, r15
47cebb: add rax, rcx
47cebe: cmp r9, r13
47cec1: jbe 0x47cfd8
47cec7: cmp qword ptr [rax + 8], 0
47cecc: jne 0x47ceb8
47cece: mov rsi, qword ptr [rsp + 0xe8]
47ced6: movq xmm0, rdx
47cedb: mov dword ptr [rax], r14d
47cede: movhps xmm0, qword ptr [rsp + 0x40]
47cee3: mov qword ptr [rax + 0x18], rsi
47cee7: movups xmmword ptr [rax + 8], xmm0
47ceeb: mov rax, qword ptr [rsp + 0x18]
47cef0: lea rsi, [rip + 0x44289]
47cef7: lea rax, [rax + rax*8]
47cefb: shl rax, 4
47ceff: add qword ptr [rsi + rax + 0x58], 1
47cf05: cmp qword ptr [rip + 0x43063], 0
47cf0d: je 0x47cf21
47cf0f: lea rdi, [rsi + rax + 0x20]
47cf14: mov qword ptr [rsp], r8
47cf18: call 0
47cf1d: mov r8, qword ptr [rsp]
47cf21: mov rax, qword ptr [rsp + 0x38]
47cf26: movq xmm0, r8
47cf2b: movq xmm2, rbx
47cf30: punpcklqdq xmm0, xmm2
47cf34: movaps xmmword ptr [rax], xmm0
47cf37: jmp 0x47ca69
47cf3c: sub r13, r9
47cf3f: mov rax, r13
47cf42: shl rax, 5
47cf46: add rax, rsi
47cf49: jmp 0x47cf5b
47cf4b: nop dword ptr [rax + rax]
47cf50: add r13, r15
47cf53: add rax, rcx
47cf56: cmp r9, r13
47cf59: jbe 0x47cf3c
47cf5b: cmp qword ptr [rax + 8], 0
47cf60: jne 0x47cf50
47cf62: movq xmm0, rdx
47cf67: movq xmm3, r8
47cf6c: mov dword ptr [rax], r14d
47cf6f: punpcklqdq xmm0, xmm3
47cf73: mov qword ptr [rax + 0x18], rbx
47cf77: movups xmmword ptr [rax + 8], xmm0
47cf7b: movzx eax, byte ptr [rbx + 0x31c]
47cf82: and eax, 3
47cf85: cmp al, 2
47cf87: jne 0x47ceeb
47cf8d: cmp byte ptr [rbx + 0x31f], 0
47cf94: jne 0x47ceeb
47cf9a: test byte ptr [rsp + 0xd0], 8
47cfa2: je 0x47d2de
47cfa8: cmp byte ptr [rbx + 0x320], 0
47cfaf: jne 0x47ceeb
47cfb5: test byte ptr [rip + 0x46804], 4
47cfbc: jne 0x47d32d
47cfc2: mov byte ptr [rbx + 0x320], 1
47cfc9: jmp 0x47ceeb
47cfce: nop 
47cfd0: sub r12, r15
47cfd3: jmp 0x47cd60
47cfd8: sub r13, r9
47cfdb: jmp 0x47cea9
47cfe0: mov rax, qword ptr [rsp + 0x10]
47cfe5: xor edx, edx
47cfe7: movzx ecx, byte ptr [rax]
47cfea: test rcx, rcx
47cfed: je 0x47d083
47cff3: movzx eax, byte ptr [rax + 1]
47cff7: test al, al
47cff9: je 0x47d077
47cffb: shl rcx, 4
47cfff: add rcx, rax
47d002: mov rax, qword ptr [rsp + 0x10]
47d007: movzx eax, byte ptr [rax + 2]
47d00b: test al, al
47d00d: je 0x47d077
47d00f: shl rcx, 4
47d013: add rcx, rax
47d016: mov rax, qword ptr [rsp + 0x10]
47d01b: movzx eax, byte ptr [rax + 3]
47d01f: test al, al
47d021: je 0x47d077
47d023: shl rcx, 4
47d027: add rcx, rax
47d02a: mov rax, qword ptr [rsp + 0x10]
47d02f: movzx eax, byte ptr [rax + 4]
47d033: test al, al
47d035: je 0x47d077
47d037: shl rcx, 4
47d03b: add rcx, rax
47d03e: mov rax, qword ptr [rsp + 0x10]
47d043: lea rdx, [rax + 5]
47d047: movzx eax, byte ptr [rax + 5]
47d04b: test al, al
47d04d: je 0x47d071
47d04f: shl rcx, 4
47d053: add rdx, 1
47d057: add rax, rcx
47d05a: mov rcx, rax
47d05d: shr rcx, 0x18
47d061: and ecx, 0xf0
47d067: xor rcx, rax
47d06a: movzx eax, byte ptr [rdx]
47d06d: test al, al
47d06f: jne 0x47d04f
47d071: and ecx, 0xfffffff
47d077: mov rax, rcx
47d07a: xor edx, edx
47d07c: div rsi
47d07f: shl rdx, 2
47d083: mov rax, qword ptr [rsp + 0x48]
47d088: mov qword ptr [rax], rcx
47d08b: jmp 0x47c92f
47d090: mov r15d, dword ptr [rsp + 0x30]
47d095: mov r13, qword ptr [rsp + 0x58]
47d09a: mov rbp, qword ptr [rsp + 0xc0]
47d0a2: mov r12, qword ptr [rsp + 0xd8]
47d0aa: mov r11, qword ptr [rsp + 0x60]
47d0af: jmp 0x47ce27
47d0b4: lea rdi, [r9 + 1]
47d0b8: mov qword ptr [rsp + 0x20], r8
47d0bd: mov qword ptr [rsp + 0x10], r9
47d0c2: call 0x4811d0
47d0c7: mov edi, 0x20
47d0cc: mov rsi, rax
47d0cf: mov rbp, rax
47d0d2: call 0x427d10
47d0d7: mov r11, rax
47d0da: test rax, rax
47d0dd: je 0x47d350
47d0e3: mov r9, qword ptr [rsp + 0x10]
47d0e8: mov rax, qword ptr [rsp + 8]
47d0ed: lea r15, [rbp - 2]
47d0f1: mov r8, qword ptr [rsp + 0x20]
47d0f6: mov r13, r9
47d0f9: mov rsi, rax
47d0fc: shl r13, 5
47d100: add r13, rax
47d103: test r9, r9
47d106: jne 0x47d119
47d108: jmp 0x47d195
47d10d: nop dword ptr [rax]
47d110: add rsi, 0x20
47d114: cmp r13, rsi
47d117: je 0x47d195
47d119: mov rdi, qword ptr [rsi + 8]
47d11d: test rdi, rdi
47d120: je 0x47d110
47d122: mov r12d, dword ptr [rsi]
47d125: mov rax, qword ptr [rsi + 0x10]
47d129: xor edx, edx
47d12b: mov r10, qword ptr [rsi + 0x18]
47d12f: mov qword ptr [rsp + 0x10], rax
47d134: mov rax, r12
47d137: mov r9, r12
47d13a: div rbp
47d13d: mov rax, r12
47d140: mov rcx, rdx
47d143: xor edx, edx
47d145: div r15
47d148: add rdx, 1
47d14c: mov r12, rdx
47d14f: shl r12, 5
47d153: mov rax, rcx
47d156: shl rax, 5
47d15a: add rax, r11
47d15d: jmp 0x47d16b
47d15f: nop 
47d160: add rcx, rdx
47d163: add rax, r12
47d166: cmp rbp, rcx
47d169: jbe 0x47d190
47d16b: cmp qword ptr [rax + 8], 0
47d170: jne 0x47d160
47d172: movq xmm0, rdi
47d177: mov dword ptr [rax], r9d
47d17a: movhps xmm0, qword ptr [rsp + 0x10]
47d17f: mov qword ptr [rax + 0x18], r10
47d183: movups xmmword ptr [rax + 8], xmm0
47d187: jmp 0x47d110
47d189: nop dword ptr [rax]
47d190: sub rcx, rbp
47d193: jmp 0x47d153
47d195: mov rax, qword ptr [rsp + 0x18]
47d19a: mov rdi, qword ptr [rsp + 8]
47d19f: mov qword ptr [rsp + 0x20], r11
47d1a4: mov qword ptr [rsp + 0x10], r8
47d1a9: lea r12, [rax + rax*8]
47d1ad: lea rax, [rip + 0x43fcc]
47d1b4: shl r12, 4
47d1b8: add r12, rax
47d1bb: call qword ptr [r12 + 0x60]
47d1c0: xor edx, edx
47d1c2: mov r11, qword ptr [rsp + 0x20]
47d1c7: mov r9, rbp
47d1ca: mov rax, 0x426a00
47d1d1: mov r8, qword ptr [rsp + 0x10]
47d1d6: mov qword ptr [r12 + 0x50], rbp
47d1db: mov qword ptr [r12 + 0x48], r11
47d1e0: mov qword ptr [r12 + 0x60], rax
47d1e5: mov rax, r14
47d1e8: div rbp
47d1eb: mov qword ptr [rsp + 8], r11
47d1f0: mov rax, r14
47d1f3: mov r13, rdx
47d1f6: xor edx, edx
47d1f8: div r15
47d1fb: lea r15, [rdx + 1]
47d1ff: jmp 0x47ce8a
47d204: mov esi, 0x1f
47d209: mov edi, 0x20
47d20e: mov qword ptr [rsp + 0x10], r8
47d213: call 0x427d10
47d218: mov qword ptr [rsp + 8], rax
47d21d: test rax, rax
47d220: je 0x47d350
47d226: mov qword ptr [rbp + 0x48], rax
47d22a: mov r13, r14
47d22d: mov r15, r14
47d230: mov r8, qword ptr [rsp + 0x10]
47d235: mov rax, 0x426a00
47d23c: mov qword ptr [rbp + 0x50], 0x1f
47d244: movabs rdx, 0x842108421084211
47d24e: mov r9d, 0x1f
47d254: mov qword ptr [rbp + 0x60], rax
47d258: mov rax, r14
47d25b: mul rdx
47d25e: sub r13, rdx
47d261: shr r13, 1
47d264: add r13, rdx
47d267: movabs rdx, 0x469ee58469ee5847
47d271: shr r13, 4
47d275: mov rax, r13
47d278: shl rax, 5
47d27c: sub rax, r13
47d27f: mov r13, r14
47d282: sub r13, rax
47d285: mov rax, r14
47d288: imul rdx
47d28b: mov rax, rdx
47d28e: mov rdx, r14
47d291: sar rdx, 0x3f
47d295: sar rax, 3
47d299: sub rax, rdx
47d29c: lea rdx, [rax*8]
47d2a4: sub rdx, rax
47d2a7: lea rax, [rax + rdx*4]
47d2ab: sub r15, rax
47d2ae: add r15, 1
47d2b2: jmp 0x47ce8a
47d2b7: mov r15d, dword ptr [rsp + 0x30]
47d2bc: mov r13, qword ptr [rsp + 0x58]
47d2c1: mov r8, rax
47d2c4: mov rbp, qword ptr [rsp + 0xc0]
47d2cc: mov r12, qword ptr [rsp + 0xd8]
47d2d4: mov r11, qword ptr [rsp + 0x60]
47d2d9: jmp 0x47ca10
47d2de: test byte ptr [rip + 0x464db], 4
47d2e5: jne 0x47d30d
47d2e7: mov byte ptr [rbx + 0x31f], 1
47d2ee: jmp 0x47ceeb
47d2f3: mov rbx, qword ptr [rsp + 0x28]
47d2f8: mov r8, qword ptr [rsp + 0x30]
47d2fd: mov r11, r14
47d300: mov rbp, qword ptr [rsp + 0xc0]
47d308: jmp 0x47ca1f
47d30d: mov rdx, qword ptr [rbx + 0x30]
47d311: mov rsi, qword ptr [rbx + 8]
47d315: xor eax, eax
47d317: mov qword ptr [rsp], r8
47d31b: lea rdi, [rip + 0x2d916]
47d322: call 0x480f60
47d327: mov r8, qword ptr [rsp]
47d32b: jmp 0x47d2e7
47d32d: mov rdx, qword ptr [rbx + 0x30]
47d331: mov rsi, qword ptr [rbx + 8]
47d335: xor eax, eax
47d337: mov qword ptr [rsp], r8
47d33b: lea rdi, [rip + 0x2d8f6]
47d342: call 0x480f60
47d347: mov r8, qword ptr [rsp]
47d34b: jmp 0x47cfc2
47d350: cmp qword ptr [rip + 0x42c18], 0
47d358: je 0x47d374
47d35a: imul rax, qword ptr [rsp + 0x18], 0x90
47d363: lea rdi, [rip + 0x43e16]
47d36a: lea rdi, [rdi + rax + 0x20]
47d36f: call 0
47d374: mov edi, 2
47d379: lea rsi, [rip + 0x1c388]
47d380: xor eax, eax
47d382: call 0x4810c0
47d387: mov edi, 0x7f
47d38c: call 0x4505c0
47d391: nop word ptr cs:[rax + rax]
47d39c: nop dword ptr [rax]
47d3a0: endbr64 
47d3a4: push r15
47d3a6: push r14
47d3a8: push r13
47d3aa: mov r13, rdi
47d3ad: push r12
47d3af: mov r12, rdx
47d3b2: push rbp
47d3b3: push rbx
47d3b4: sub rsp, 0x88
47d3bb: movzx edx, byte ptr [rdi]
47d3be: mov qword ptr [rsp + 8], rsi
47d3c3: mov qword ptr [rsp + 0x18], rcx
47d3c8: mov qword ptr [rsp], r8
47d3cc: mov dword ptr [rsp + 0x10], r9d
47d3d1: test dl, dl
47d3d3: je 0x47d5f0
47d3d9: mov rcx, rdi
47d3dc: mov eax, 0x1505
47d3e1: nop dword ptr [rax]
47d3e8: mov rsi, rax
47d3eb: movzx edx, dl
47d3ee: add rcx, 1
47d3f2: shl rsi, 5
47d3f6: add rax, rsi
47d3f9: add rax, rdx
47d3fc: movzx edx, byte ptr [rcx]
47d3ff: test dl, dl
47d401: jne 0x47d3e8
47d403: mov ebx, eax
47d405: mov eax, 0xffffffff
47d40a: pxor xmm0, xmm0
47d40e: cmp qword ptr [rsp], 0
47d413: mov qword ptr [rsp + 0x48], rax
47d418: movaps xmmword ptr [rsp + 0x50], xmm0
47d41d: je 0x47d42d
47d41f: test byte ptr [rsp + 0xc0], 2
47d427: jne 0x47de98
47d42d: mov rax, qword ptr [rsp + 0x18]
47d432: mov rcx, qword ptr [r12]
47d436: cmp qword ptr [rsp + 0xc8], 0
47d43f: mov r9, qword ptr [rax]
47d442: jne 0x47d630
47d448: test r9, r9
47d44b: je 0x47d600
47d451: mov qword ptr [rsp + 0x20], 0
47d45a: mov rbp, rax
47d45d: mov rax, qword ptr [rsp + 0x20]
47d462: lea r15, [rsp + 0x50]
47d467: lea r14, [rsp + 0x48]
47d46c: jmp 0x47d483
47d46e: nop 
47d470: mov r9, qword ptr [rbp + 8]
47d474: add rbp, 8
47d478: mov rcx, qword ptr [r12]
47d47c: xor eax, eax
47d47e: test r9, r9
47d481: je 0x47d4bd
47d483: push qword ptr [rsp + 8]
47d487: mov edi, dword ptr [rsp + 0x18]
47d48b: mov r8, r15
47d48e: mov rdx, r14
47d491: mov rsi, rbx
47d494: push rdi
47d495: push qword ptr [rsp + 0xd8]
47d49c: mov edi, dword ptr [rsp + 0xd8]
47d4a3: push rdi
47d4a4: mov rdi, r13
47d4a7: push qword ptr [rsp + 0x20]
47d4ab: push rax
47d4ac: call 0x47c790
47d4b1: add rsp, 0x30
47d4b5: test eax, eax
47d4b7: je 0x47d470
47d4b9: mov rcx, qword ptr [r12]
47d4bd: cmp qword ptr [rsp + 0x50], 0
47d4c3: je 0x47d600
47d4c9: test rcx, rcx
47d4cc: je 0x47d4d9
47d4ce: movzx eax, byte ptr [rcx + 5]
47d4d2: and eax, 3
47d4d5: cmp al, 3
47d4d7: je 0x47d538
47d4d9: mov r14, qword ptr [rsp + 0x58]
47d4de: xor ebp, ebp
47d4e0: movzx eax, byte ptr [r14 + 0x31c]
47d4e8: and eax, 3
47d4eb: cmp al, 2
47d4ed: je 0x47d722
47d4f3: mov ecx, dword ptr [r14 + 0x3dc]
47d4fa: test ecx, ecx
47d4fc: je 0x47d712
47d502: mov eax, dword ptr [rip + 0x462b8]
47d508: test eax, 0x804
47d50d: jne 0x47d669
47d513: mov rax, qword ptr [rsp + 0x50]
47d518: mov qword ptr [r12], rax
47d51c: add rsp, 0x88
47d523: mov rax, r14
47d526: pop rbx
47d527: pop rbp
47d528: pop r12
47d52a: pop r13
47d52c: pop r14
47d52e: pop r15
47d530: ret 
47d531: nop dword ptr [rax]
47d538: cmp dword ptr [rsp + 0x10], 1
47d53d: je 0x47d7f9
47d543: mov rax, qword ptr [rsp + 0x18]
47d548: pxor xmm0, xmm0
47d54c: movaps xmmword ptr [rsp + 0x60], xmm0
47d551: mov r9, qword ptr [rax]
47d554: test r9, r9
47d557: je 0x47d823
47d55d: cmp dword ptr [rsp + 0x10], 4
47d562: lea r8, [rsp + 0x60]
47d567: mov rdx, qword ptr [rsp + 0x20]
47d56c: mov r15, rax
47d56f: sete byte ptr [rsp + 0x28]
47d574: mov rbp, r8
47d577: jmp 0x47d5d7
47d579: nop dword ptr [rax]
47d580: cmp byte ptr [rsp + 0x28], 0
47d585: mov eax, 4
47d58a: je 0x47d5e2
47d58c: push 0
47d58e: mov r8, rbp
47d591: mov rsi, rbx
47d594: mov rdi, r13
47d597: push rax
47d598: push qword ptr [rsp + 0xd8]
47d59f: mov eax, dword ptr [rsp + 0xd8]
47d5a6: push rax
47d5a7: push qword ptr [rsp + 0x20]
47d5ab: push rdx
47d5ac: mov rdx, r14
47d5af: call 0x47c790
47d5b4: add rsp, 0x30
47d5b8: test eax, eax
47d5ba: jne 0x47d7ca
47d5c0: mov r9, qword ptr [r15 + 8]
47d5c4: add r15, 8
47d5c8: test r9, r9
47d5cb: je 0x47d7ca
47d5d1: mov rcx, qword ptr [r12]
47d5d5: xor edx, edx
47d5d7: movzx eax, byte ptr [rcx + 4]
47d5db: and eax, 0xf
47d5de: cmp al, 1
47d5e0: je 0x47d580
47d5e2: mov eax, 1
47d5e7: jmp 0x47d58c
47d5e9: nop dword ptr [rax]
47d5f0: mov ebx, 0x1505
47d5f5: jmp 0x47d405
47d5fa: nop word ptr [rax + rax]
47d600: test rcx, rcx
47d603: je 0x47d610
47d605: movzx eax, byte ptr [rcx + 4]
47d609: shr al, 4
47d60c: cmp al, 2
47d60e: je 0x47d61d
47d610: test byte ptr [rip + 0x461aa], 1
47d617: je 0x47dd58
47d61d: mov qword ptr [r12], 0
47d625: xor r14d, r14d
47d628: jmp 0x47d51c
47d62d: nop dword ptr [rax]
47d630: mov rax, qword ptr [r9]
47d633: mov rdi, qword ptr [rax]
47d636: cmp qword ptr [rsp + 0xc8], rdi
47d63e: je 0x47d842
47d644: mov rsi, qword ptr [rsp + 0xc8]
47d64c: xor edx, edx
47d64e: nop 
47d650: add rdx, 1
47d654: cmp qword ptr [rax + rdx*8], rsi
47d658: jne 0x47d650
47d65a: mov qword ptr [rsp + 0x20], rdx
47d65f: mov rbp, qword ptr [rsp + 0x18]
47d664: jmp 0x47d45d
47d669: test al, 4
47d66b: je 0x47d513
47d671: mov rcx, qword ptr [r14 + 8]
47d675: test ebp, ebp
47d677: mov r8, qword ptr [r14 + 0x30]
47d67b: lea r9, [rip + 0x2d4f9]
47d682: lea rax, [rip + 0x2d4fc]
47d689: cmove r9, rax
47d68d: cmp byte ptr [rcx], 0
47d690: jne 0x47d6aa
47d692: mov rax, qword ptr [rip + 0x423cf]
47d699: mov rcx, qword ptr [rax]
47d69c: lea rax, [rip + 0x2cc8c]
47d6a3: test rcx, rcx
47d6a6: cmove rcx, rax
47d6aa: mov rax, qword ptr [rsp + 8]
47d6af: mov rsi, qword ptr [rax + 8]
47d6b3: mov rdx, qword ptr [rax + 0x30]
47d6b7: cmp byte ptr [rsi], 0
47d6ba: jne 0x47d6d4
47d6bc: mov rax, qword ptr [rip + 0x423a5]
47d6c3: mov rsi, qword ptr [rax]
47d6c6: lea rax, [rip + 0x2cc62]
47d6cd: test rsi, rsi
47d6d0: cmove rsi, rax
47d6d4: sub rsp, 8
47d6d8: lea rdi, [rip + 0x2d689]
47d6df: xor eax, eax
47d6e1: push r13
47d6e3: call 0x480f60
47d6e8: pop rax
47d6e9: pop rdx
47d6ea: mov rax, qword ptr [rsp]
47d6ee: test rax, rax
47d6f1: je 0x47d82a
47d6f7: mov rsi, qword ptr [rax]
47d6fa: lea rdi, [rip + 0x2d4b8]
47d701: xor eax, eax
47d703: call 0x481010
47d708: mov r14, qword ptr [rsp + 0x58]
47d70d: jmp 0x47d513
47d712: mov dword ptr [r14 + 0x3dc], 1
47d71d: jmp 0x47d502
47d722: test byte ptr [rsp + 0xc0], 1
47d72a: je 0x47d4f3
47d730: cmp qword ptr [rsp + 8], r14
47d735: je 0x47d4f3
47d73b: cmp byte ptr [r14 + 0x31f], 0
47d743: jne 0x47d4f3
47d749: mov eax, dword ptr [rsp + 0xc0]
47d750: and eax, 8
47d753: mov dword ptr [rsp + 0x20], eax
47d757: je 0x47d767
47d759: cmp byte ptr [r14 + 0x320], 0
47d761: jne 0x47d4f3
47d767: mov rax, qword ptr [rsp + 8]
47d76c: mov rbx, qword ptr [rax + 0x3d0]
47d773: mov r8, rbx
47d776: mov qword ptr [rsp + 0x28], rbx
47d77b: mov rax, qword ptr [rax + 0x3c8]
47d782: mov rbx, rax
47d785: mov qword ptr [rsp + 0x28], rax
47d78a: test rbx, rbx
47d78d: je 0x47d855
47d793: mov rax, qword ptr [rbx]
47d796: xor edx, edx
47d798: test rax, rax
47d79b: jne 0x47d7bb
47d79d: jmp 0x47d855
47d7a2: nop word ptr [rax + rax]
47d7a8: lea eax, [rdx + 1]
47d7ab: mov rdx, rax
47d7ae: mov rax, qword ptr [rbx + rax*8]
47d7b2: test rax, rax
47d7b5: je 0x47d855
47d7bb: cmp rax, r14
47d7be: jne 0x47d7a8
47d7c0: mov r14, qword ptr [rsp + 0x58]
47d7c5: jmp 0x47d4f3
47d7ca: cmp qword ptr [rsp + 0x60], 0
47d7d0: je 0x47d823
47d7d2: mov rbx, qword ptr [rsp + 8]
47d7d7: cmp qword ptr [rsp + 0x68], rbx
47d7dc: je 0x47d823
47d7de: mov rax, qword ptr [r12]
47d7e2: mov qword ptr [rsp + 0x58], rbx
47d7e7: mov r14, rbx
47d7ea: mov qword ptr [rsp + 0x50], rax
47d7ef: mov ebp, 1
47d7f4: jmp 0x47d4e0
47d7f9: mov rax, qword ptr [rsp + 8]
47d7fe: cmp qword ptr [rsp + 0x58], rax
47d803: je 0x47d814
47d805: movq xmm0, rcx
47d80a: movhps xmm0, qword ptr [rsp + 8]
47d80f: movaps xmmword ptr [rsp + 0x50], xmm0
47d814: mov r14, qword ptr [rsp + 8]
47d819: mov ebp, 1
47d81e: jmp 0x47d4f3
47d823: mov r14, qword ptr [rsp + 0x58]
47d828: jmp 0x47d7ef
47d82a: lea rdi, [rip + 0x17b29]
47d831: xor eax, eax
47d833: call 0x481010
47d838: mov r14, qword ptr [rsp + 0x58]
47d83d: jmp 0x47d513
47d842: mov qword ptr [rsp + 0x20], 0
47d84b: mov rbp, qword ptr [rsp + 0x18]
47d850: jmp 0x47d45d
47d855: test r8, r8
47d858: je 0x47d884
47d85a: mov r9d, dword ptr [r8]
47d85d: test r9d, r9d
47d860: je 0x47d887
47d862: lea edx, [r9 - 1]
47d866: lea rax, [r8 + 8]
47d86a: lea rdx, [r8 + rdx*8 + 0x10]
47d86f: jmp 0x47d87a
47d871: add rax, 8
47d875: cmp rdx, rax
47d878: je 0x47d887
47d87a: cmp qword ptr [rax], r14
47d87d: jne 0x47d871
47d87f: jmp 0x47d7c0
47d884: xor r9d, r9d
47d887: mov rax, qword ptr [r14 + 0x478]
47d88e: mov qword ptr [rsp + 0x28], rax
47d893: mov eax, dword ptr [rsp + 0xc0]
47d89a: and eax, 4
47d89d: mov r15d, eax
47d8a0: jne 0x47db0d
47d8a6: cmp qword ptr [rip + 0x4265a], 0
47d8ae: je 0x47d8c6
47d8b0: lea rdi, [rip + 0x43829]
47d8b7: mov dword ptr [rsp + 0x34], r9d
47d8bc: call 0
47d8c1: mov r9d, dword ptr [rsp + 0x34]
47d8c6: mov rax, qword ptr [rsp + 8]
47d8cb: lea rdx, [rip + 0x438ae]
47d8d2: mov r8, qword ptr [rax + 0x30]
47d8d6: lea rax, [r8 + r8*8]
47d8da: shl rax, 4
47d8de: mov rax, qword ptr [rdx + rax]
47d8e2: cmp rax, r14
47d8e5: je 0x47d959
47d8e7: test rax, rax
47d8ea: jne 0x47d8f5
47d8ec: jmp 0x47d8fe
47d8ee: nop 
47d8f0: cmp rax, r14
47d8f3: je 0x47d959
47d8f5: mov rax, qword ptr [rax + 0x18]
47d8f9: test rax, rax
47d8fc: jne 0x47d8f0
47d8fe: cmp qword ptr [rip + 0x4266a], 0
47d906: je 0x47dabe
47d90c: lea rdi, [rip + 0x437cd]
47d913: call 0
47d918: test r15d, r15d
47d91b: jne 0x47dc44
47d921: push qword ptr [rsp + 0xc8]
47d928: mov rdi, r13
47d92b: mov rdx, r12
47d92e: mov eax, dword ptr [rsp + 0xc8]
47d935: push rax
47d936: mov r9d, dword ptr [rsp + 0x20]
47d93b: mov r8, qword ptr [rsp + 0x10]
47d940: mov rcx, qword ptr [rsp + 0x28]
47d945: mov rsi, qword ptr [rsp + 0x18]
47d94a: call 0x47d3a0
47d94f: pop rsi
47d950: pop rdi
47d951: mov r14, rax
47d954: jmp 0x47d51c
47d959: test rax, rax
47d95c: je 0x47d8fe
47d95e: mov rax, qword ptr [rsp + 0x28]
47d963: cmp rax, qword ptr [r14 + 0x478]
47d96a: jne 0x47dab0
47d970: cmp byte ptr [r14 + 0x31f], 0
47d978: jne 0x47da93
47d97e: mov r10d, dword ptr [rsp + 0x20]
47d983: test r10d, r10d
47d986: je 0x47d996
47d988: cmp byte ptr [r14 + 0x320], 0
47d990: jne 0x47da93
47d996: mov rax, qword ptr [rsp + 8]
47d99b: movzx eax, byte ptr [rax + 0x31c]
47d9a2: mov byte ptr [rsp + 0x10], al
47d9a6: and eax, 3
47d9a9: cmp al, 2
47d9ab: je 0x47da01
47d9ad: test byte ptr [rip + 0x45e0c], 4
47d9b4: jne 0x47de3b
47d9ba: cmp dword ptr [rsp + 0x20], 0
47d9bf: jne 0x47daf5
47d9c5: cmp qword ptr [rip + 0x425a3], 0
47d9cd: mov byte ptr [r14 + 0x31f], 1
47d9d5: je 0x47daa1
47d9db: lea rdi, [rip + 0x436fe]
47d9e2: call 0
47d9e7: test r15d, r15d
47d9ea: je 0x47d7c0
47d9f0: mov dword ptr fs:[0x1c], 1
47d9fc: jmp 0x47d7c0
47da01: mov rax, qword ptr [rsp + 8]
47da06: mov eax, dword ptr [rax + 0x3d8]
47da0c: cmp eax, r9d
47da0f: jbe 0x47dc55
47da15: mov rbx, qword ptr [rsp + 8]
47da1a: mov edx, r9d
47da1d: mov rax, qword ptr [rbx + 0x3d0]
47da24: mov qword ptr [rax + rdx*8 + 8], r14
47da29: mov rax, qword ptr [rbx + 0x3d0]
47da30: add r9d, 1
47da34: mov dword ptr [rax], r9d
47da37: test byte ptr [rip + 0x45d82], 0x40
47da3e: je 0x47da93
47da40: mov rax, qword ptr [rsp + 8]
47da45: mov rcx, qword ptr [rax + 8]
47da49: mov r8, qword ptr [rax + 0x30]
47da4d: cmp byte ptr [rcx], 0
47da50: jne 0x47da65
47da52: mov rax, qword ptr [rip + 0x4200f]
47da59: mov rcx, qword ptr [rax]
47da5c: test rcx, rcx
47da5f: je 0x47de79
47da65: mov rsi, qword ptr [r14 + 8]
47da69: mov rdx, qword ptr [r14 + 0x30]
47da6d: cmp byte ptr [rsi], 0
47da70: jne 0x47da85
47da72: mov rax, qword ptr [rip + 0x41fef]
47da79: mov rsi, qword ptr [rax]
47da7c: test rsi, rsi
47da7f: je 0x47dcc6
47da85: lea rdi, [rip + 0x2d29c]
47da8c: xor eax, eax
47da8e: call 0x480f60
47da93: cmp qword ptr [rip + 0x424d5], 0
47da9b: jne 0x47d9db
47daa1: test r15d, r15d
47daa4: jne 0x47d9f0
47daaa: jmp 0x47d7c0
47daaf: nop 
47dab0: cmp qword ptr [rip + 0x424b8], 0
47dab8: jne 0x47dbc8
47dabe: test r15d, r15d
47dac1: je 0x47d921
47dac7: or ebx, 0xffffffff
47daca: mov dword ptr fs:[0x1c], 1
47dad6: add ebx, 1
47dad9: jne 0x47d7c0
47dadf: mov rax, qword ptr [rsp + 8]
47dae4: mov rax, qword ptr [rax + 0x390]
47daeb: mov qword ptr [rsp + 0x18], rax
47daf0: jmp 0x47d921
47daf5: cmp qword ptr [rip + 0x42473], 0
47dafd: mov byte ptr [r14 + 0x320], 1
47db05: jne 0x47d9db
47db0b: jmp 0x47daa1
47db0d: xor eax, eax
47db0f: xchg dword ptr fs:[0x1c], eax
47db17: cmp eax, 2
47db1a: jne 0x47db3d
47db1c: mov rdi, qword ptr fs:[0x10]
47db25: xor r10d, r10d
47db28: add rdi, 0x1c
47db2c: mov edx, 1
47db31: mov esi, 0x81
47db36: mov eax, 0xca
47db3b: syscall 
47db3d: cmp qword ptr [rip + 0x423c3], 0
47db45: je 0x47db67
47db47: lea rdi, [rip + 0x43592]
47db4e: mov qword ptr [rsp + 0x38], r8
47db53: mov dword ptr [rsp + 0x34], r9d
47db58: call 0
47db5d: mov r8, qword ptr [rsp + 0x38]
47db62: mov r9d, dword ptr [rsp + 0x34]
47db67: mov rdi, qword ptr [rsp + 8]
47db6c: mov rax, r14
47db6f: mov rcx, qword ptr [rdi + 0x3c8]
47db76: mov r14, rax
47db79: test rcx, rcx
47db7c: je 0x47dbf0
47db7e: cmp rcx, rbx
47db81: je 0x47dbf0
47db83: mov rdx, qword ptr [rcx]
47db86: test rdx, rdx
47db89: je 0x47dbf0
47db8b: xor esi, esi
47db8d: jmp 0x47db9e
47db8f: lea edx, [rsi + 1]
47db92: mov rsi, rdx
47db95: mov rdx, qword ptr [rcx + rdx*8]
47db99: test rdx, rdx
47db9c: je 0x47dbf0
47db9e: cmp rdx, rax
47dba1: jne 0x47db8f
47dba3: mov rax, qword ptr [rdx + 0x478]
47dbaa: xor ebx, ebx
47dbac: cmp qword ptr [rsp + 0x28], rax
47dbb1: setne bl
47dbb4: neg ebx
47dbb6: cmp qword ptr [rip + 0x423b2], 0
47dbbe: jne 0x47dbcd
47dbc0: jmp 0x47daca
47dbc5: nop dword ptr [rax]
47dbc8: mov ebx, 0xffffffff
47dbcd: lea rdi, [rip + 0x4350c]
47dbd4: call 0
47dbd9: test r15d, r15d
47dbdc: jne 0x47daca
47dbe2: cmp ebx, -1
47dbe5: jne 0x47d7c0
47dbeb: jmp 0x47d921
47dbf0: mov rbx, qword ptr [rsp + 8]
47dbf5: mov rcx, qword ptr [rbx + 0x3d0]
47dbfc: test rcx, rcx
47dbff: je 0x47d8c6
47dc05: mov edx, dword ptr [rcx]
47dc07: cmp r8, rcx
47dc0a: je 0x47de02
47dc10: test edx, edx
47dc12: je 0x47de33
47dc18: lea edi, [rdx - 1]
47dc1b: lea rsi, [rcx + 8]
47dc1f: lea rcx, [rcx + rdi*8 + 0x10]
47dc24: jmp 0x47dc33
47dc26: add rsi, 8
47dc2a: cmp rsi, rcx
47dc2d: je 0x47de2b
47dc33: cmp qword ptr [rsi], rax
47dc36: jne 0x47dc26
47dc38: mov rax, qword ptr [rax + 0x478]
47dc3f: jmp 0x47dbaa
47dc44: mov dword ptr fs:[0x1c], 1
47dc50: jmp 0x47dadf
47dc55: mov ebx, 0xa
47dc5a: test eax, eax
47dc5c: je 0x47dc61
47dc5e: lea ebx, [rax + rax]
47dc61: mov eax, ebx
47dc63: mov dword ptr [rsp + 0x10], r9d
47dc68: lea rdi, [rax*8 + 8]
47dc70: call 0x426410
47dc75: mov r9d, dword ptr [rsp + 0x10]
47dc7a: test rax, rax
47dc7d: mov rcx, rax
47dc80: je 0x47dd1b
47dc86: mov r8d, r9d
47dc89: test r9d, r9d
47dc8c: jne 0x47dcd2
47dc8e: add r9d, 1
47dc92: mov qword ptr [rcx + r8*8 + 8], r14
47dc97: mov dword ptr [rcx], r9d
47dc9a: mov rax, qword ptr [rsp + 8]
47dc9f: mov rdi, qword ptr [rax + 0x3d0]
47dca6: mov dword ptr [rax + 0x3d8], ebx
47dcac: mov qword ptr [rax + 0x3d0], rcx
47dcb3: test rdi, rdi
47dcb6: je 0x47da37
47dcbc: call 0x482790
47dcc1: jmp 0x47da37
47dcc6: lea rsi, [rip + 0x2c662]
47dccd: jmp 0x47da85
47dcd2: mov qword ptr [rsp + 0x20], rax
47dcd7: lea rdi, [rax + 8]
47dcdb: mov rax, qword ptr [rsp + 8]
47dce0: lea rdx, [r8*8]
47dce8: mov dword ptr [rsp + 0x28], r9d
47dced: mov rax, qword ptr [rax + 0x3d0]
47dcf4: mov qword ptr [rsp + 0x18], r8
47dcf9: lea rsi, [rax + 8]
47dcfd: mov qword ptr [rsp + 0x10], rax
47dd02: call 0x401060
47dd07: mov r9d, dword ptr [rsp + 0x28]
47dd0c: mov rcx, qword ptr [rsp + 0x20]
47dd11: mov r8, qword ptr [rsp + 0x18]
47dd16: jmp 0x47dc8e
47dd1b: test byte ptr [rip + 0x45a9e], 4
47dd22: je 0x47d9ba
47dd28: cmp dword ptr [rsp + 0x20], 0
47dd2d: je 0x47dd3d
47dd2f: cmp byte ptr [r14 + 0x320], 0
47dd37: jne 0x47daf5
47dd3d: mov rdx, qword ptr [r14 + 0x30]
47dd41: mov rsi, qword ptr [r14 + 8]
47dd45: lea rdi, [rip + 0x2d054]
47dd4c: xor eax, eax
47dd4e: call 0x480f60
47dd53: jmp 0x47d9ba
47dd58: mov rax, qword ptr [rsp + 8]
47dd5d: test rax, rax
47dd60: je 0x47ddbd
47dd62: lea r8, [rip + 0x2dcac]
47dd69: cmp qword ptr [rsp], 0
47dd6e: mov rsi, qword ptr [rax + 8]
47dd72: mov r9, r8
47dd75: je 0x47dd8e
47dd77: mov rax, qword ptr [rsp]
47dd7b: lea r8, [rip + 0x2cdee]
47dd82: mov r9, qword ptr [rax]
47dd85: test r9, r9
47dd88: je 0x47deb7
47dd8e: cmp byte ptr [rsi], 0
47dd91: je 0x47dde1
47dd93: lea rbp, [rsp + 0x60]
47dd98: lea rdx, [rip + 0x2cded]
47dd9f: mov rcx, r13
47dda2: xor eax, eax
47dda4: mov rdi, rbp
47dda7: call 0x4836d0
47ddac: lea rdx, [rip + 0x2cdf2]
47ddb3: mov rsi, rbp
47ddb6: xor edi, edi
47ddb8: call 0x485010
47ddbd: lea r8, [rip + 0x2dc51]
47ddc4: cmp qword ptr [rsp], 0
47ddc9: mov r9, r8
47ddcc: je 0x47dde1
47ddce: mov rax, qword ptr [rsp]
47ddd2: lea r8, [rip + 0x2cd97]
47ddd9: mov r9, qword ptr [rax]
47dddc: test r9, r9
47dddf: je 0x47ddf9
47dde1: mov rax, qword ptr [rip + 0x41c80]
47dde8: mov rsi, qword ptr [rax]
47ddeb: test rsi, rsi
47ddee: jne 0x47dd93
47ddf0: lea rsi, [rip + 0x2c538]
47ddf7: jmp 0x47dd93
47ddf9: lea r9, [rip + 0x2dc15]
47de00: jmp 0x47dde1
47de02: cmp r9d, edx
47de05: jae 0x47d8c6
47de0b: mov ecx, r9d
47de0e: lea rsi, [r8 + rcx*8]
47de12: xor ecx, ecx
47de14: cmp qword ptr [rsi + rcx*8 + 8], rax
47de19: je 0x47dc38
47de1f: add rcx, 1
47de23: lea edi, [r9 + rcx]
47de27: cmp edx, edi
47de29: ja 0x47de14
47de2b: mov r9d, edx
47de2e: jmp 0x47d8c6
47de33: xor r9d, r9d
47de36: jmp 0x47d8c6
47de3b: cmp dword ptr [rsp + 0x20], 0
47de40: je 0x47de50
47de42: cmp byte ptr [r14 + 0x320], 0
47de4a: jne 0x47daf5
47de50: mov rax, qword ptr [rsp + 8]
47de55: mov rdx, qword ptr [r14 + 0x30]
47de59: mov rsi, qword ptr [r14 + 8]
47de5d: mov rcx, qword ptr [rax + 8]
47de61: cmp byte ptr [rcx], 0
47de64: jne 0x47de85
47de66: lea rdi, [rip + 0x2ce3b]
47de6d: xor eax, eax
47de6f: call 0x480f60
47de74: jmp 0x47d9ba
47de79: lea rcx, [rip + 0x2c4af]
47de80: jmp 0x47da65
47de85: lea rdi, [rip + 0x2ce5c]
47de8c: xor eax, eax
47de8e: call 0x480f60
47de93: jmp 0x47d9ba
47de98: lea rcx, [rip + 0x2cf91]
47de9f: mov edx, 0x353
47dea4: lea rsi, [rip + 0x2ccb9]
47deab: lea rdi, [rip + 0x2cdbe]
47deb2: call 0x4032a0
47deb7: lea r9, [rip + 0x2db57]
47debe: jmp 0x47dd8e
47dec3: nop word ptr cs:[rax + rax]
47dece: nop 
47ded0: endbr64 
47ded4: mov rax, qword ptr [rdi + 0x2a0]
47dedb: test rax, rax
47dede: je 0x47df38
47dee0: mov rcx, qword ptr [rax + 8]
47dee4: mov edx, dword ptr [rcx]
47dee6: mov dword ptr [rdi + 0x2f4], edx
47deec: mov eax, dword ptr [rcx + 8]
47deef: mov esi, dword ptr [rcx + 4]
47def2: lea r8d, [rax - 1]
47def6: test r8d, eax
47def9: jne 0x47df64
47defb: mov dword ptr [rdi + 0x2f8], r8d
47df02: add eax, eax
47df04: lea r8, [rcx + 0x10]
47df08: sub rdx, rsi
47df0b: mov ecx, dword ptr [rcx + 0xc]
47df0e: lea rax, [r8 + rax*4]
47df12: mov qword ptr [rdi + 0x300], r8
47df19: mov qword ptr [rdi + 0x308], rax
47df20: lea rax, [rax + rdx*4]
47df24: mov dword ptr [rdi + 0x2fc], ecx
47df2a: mov qword ptr [rdi + 0x310], rax
47df31: ret 
47df32: nop word ptr [rax + rax]
47df38: mov rax, qword ptr [rdi + 0x60]
47df3c: test rax, rax
47df3f: je 0x47df63
47df41: mov rax, qword ptr [rax + 8]
47df45: mov edx, dword ptr [rax]
47df47: add rax, 8
47df4b: mov qword ptr [rdi + 0x310], rax
47df52: lea rax, [rax + rdx*4]
47df56: mov dword ptr [rdi + 0x2f4], edx
47df5c: mov qword ptr [rdi + 0x308], rax
47df63: ret 
47df64: push rax
47df65: lea rcx, [rip + 0x2cea4]
47df6c: mov edx, 0x3cc
47df71: lea rsi, [rip + 0x2cbec]
47df78: lea rdi, [rip + 0x2ce61]
47df7f: call 0x4032a0
47df84: nop word ptr cs:[rax + rax]
47df8e: nop 
47df90: endbr64 
47df94: push rbp
47df95: mov rbp, rdi
47df98: push rbx
47df99: mov rbx, rsi
47df9c: sub rsp, 8
47dfa0: cmp qword ptr [rip + 0x41f60], 0
47dfa8: je 0x47dfb6
47dfaa: lea rdi, [rip + 0x430ef]
47dfb1: call 0
47dfb6: lea rdx, [rbx + rbx*8]
47dfba: lea rcx, [rip + 0x431bf]
47dfc1: shl rdx, 4
47dfc5: add rdx, rcx
47dfc8: mov rax, qword ptr [rdx]
47dfcb: test rax, rax
47dfce: je 0x47e040
47dfd0: mov rdx, rax
47dfd3: mov rax, qword ptr [rax + 0x18]
47dfd7: test rax, rax
47dfda: jne 0x47dfd0
47dfdc: mov qword ptr [rbp + 0x20], rdx
47dfe0: mov qword ptr [rdx + 0x18], rbp
47dfe4: lea rax, [rbx + rbx*8]
47dfe8: shl rax, 4
47dfec: add dword ptr [rcx + rax + 8], 1
47dff1: mov rax, qword ptr [rip + 0x43128]
47dff8: mov qword ptr [rbp + 0x478], rax
47dfff: add rax, 1
47e003: cmp qword ptr [rip + 0x41f65], 0
47e00b: mov qword ptr [rip + 0x4310e], rax
47e012: je 0x47e030
47e014: add rsp, 8
47e018: lea rdi, [rip + 0x43081]
47e01f: pop rbx
47e020: pop rbp
47e021: jmp 0
47e026: nop word ptr cs:[rax + rax]
47e030: add rsp, 8
47e034: pop rbx
47e035: pop rbp
47e036: ret 
47e037: nop word ptr [rax + rax]
47e040: mov qword ptr [rdx], rbp
47e043: jmp 0x47dfe4
47e045: nop word ptr cs:[rax + rax]
47e050: endbr64 
47e054: push r15
47e056: push r14
47e058: mov r14, r9
47e05b: push r13
47e05d: mov r13d, edx
47e060: push r12
47e062: push rbp
47e063: mov rbp, rsi
47e066: push rbx
47e067: mov rbx, rcx
47e06a: sub rsp, 0x28
47e06e: mov qword ptr [rsp + 8], rdi
47e073: mov rdi, rsi
47e076: mov dword ptr [rsp + 0x18], r8d
47e07b: call 0x401180
47e080: mov esi, 1
47e085: lea rdx, [rax + 1]
47e089: lea rdi, [rax + 0x4a1]
47e090: mov r15, rax
47e093: mov qword ptr [rsp + 0x10], rdx
47e098: call 0x427d10
47e09d: mov r12, rax
47e0a0: test rax, rax
47e0a3: je 0x47e2be
47e0a9: mov qword ptr [r12 + 0x28], rax
47e0ae: mov rdx, qword ptr [rsp + 0x10]
47e0b3: lea rax, [rax + 0x480]
47e0ba: mov rsi, rbp
47e0bd: mov qword ptr [r12 + 0x2d0], rax
47e0c5: lea rdi, [r12 + 0x4a0]
47e0cd: lea rax, [r12 + 0x488]
47e0d5: mov qword ptr [r12 + 0x38], rax
47e0da: call 0x401060
47e0df: mov rdx, qword ptr [rsp + 8]
47e0e4: mov dword ptr [r12 + 0x498], 1
47e0f0: mov qword ptr [r12 + 0x488], rax
47e0f8: add rax, r15
47e0fb: movzx ecx, byte ptr [rdx]
47e0fe: test cl, cl
47e100: cmovne rax, rdx
47e104: and r13d, 3
47e108: mov qword ptr [r12 + 8], rax
47e10d: movzx eax, byte ptr [r12 + 0x31c]
47e116: and eax, 0xfffffffc
47e119: or r13d, eax
47e11c: mov byte ptr [r12 + 0x31c], r13b
47e124: test byte ptr [rip + 0x45696], 1
47e12b: je 0x47e2d0
47e131: lea rax, [r14 + r14*8]
47e135: lea rdx, [rip + 0x43044]
47e13c: mov qword ptr [r12 + 0x2e0], rbx
47e144: shl rax, 4
47e148: lea rsi, [r12 + 0x368]
47e150: mov qword ptr [r12 + 0x30], r14
47e155: mov rax, qword ptr [rdx + rax]
47e159: mov qword ptr [r12 + 0x390], rsi
47e161: mov qword ptr [r12 + 0x388], 4
47e16d: test rax, rax
47e170: je 0x47e310
47e176: lea rdx, [rax + 0x2c0]
47e17d: mov qword ptr [r12 + 0x368], rdx
47e185: test rbx, rbx
47e188: je 0x47e2e8
47e18e: mov edx, 1
47e193: nop dword ptr [rax + rax]
47e198: mov rax, rbx
47e19b: mov rbx, qword ptr [rbx + 0x2e0]
47e1a2: test rbx, rbx
47e1a5: jne 0x47e198
47e1a7: test edx, edx
47e1a9: jne 0x47e328
47e1af: add rax, 0x2c0
47e1b5: mov qword ptr [rsi], rax
47e1b8: lea rax, [r12 + 0x2c0]
47e1c0: test cl, cl
47e1c2: mov byte ptr [rsp + 0x10], cl
47e1c6: mov qword ptr [r12 + 0x398], rax
47e1ce: je 0x47e2be
47e1d4: mov rdi, qword ptr [rsp + 8]
47e1d9: xor ebp, ebp
47e1db: call 0x401180
47e1e0: movzx ecx, byte ptr [rsp + 0x10]
47e1e5: mov r13, rax
47e1e8: lea rax, [rax + 1]
47e1ec: mov qword ptr [rsp + 0x18], rax
47e1f1: mov r14, rax
47e1f4: cmp cl, 0x2f
47e1f7: jne 0x47e211
47e1f9: jmp 0x47e348
47e1fe: nop 
47e200: mov rax, 0xffffffffffffffc0
47e207: cmp dword ptr fs:[rax], 0x22
47e20b: jne 0x47e368
47e211: mov rbx, r14
47e214: sub r14, -0x80
47e218: mov rdi, rbp
47e21b: mov r15, rbp
47e21e: mov rsi, r14
47e221: call 0x427100
47e226: mov rbp, rax
47e229: test rax, rax
47e22c: je 0x47e360
47e232: lea rsi, [rbx + 0x7f]
47e236: mov rdi, rax
47e239: sub rsi, r13
47e23c: call 0x450fc0
47e241: test rax, rax
47e244: je 0x47e200
47e246: mov rdi, rbp
47e249: mov edx, dword ptr [rdi]
47e24b: add rdi, 4
47e24f: lea eax, [rdx - 0x1010101]
47e255: not edx
47e257: and eax, edx
47e259: and eax, 0x80808080
47e25e: je 0x47e249
47e260: mov edx, eax
47e262: shr edx, 0x10
47e265: test eax, 0x8080
47e26a: cmove eax, edx
47e26d: lea rdx, [rdi + 2]
47e271: cmove rdi, rdx
47e275: mov ecx, eax
47e277: add cl, al
47e279: sbb rdi, 3
47e27d: cmp byte ptr [rdi - 1], 0x2f
47e281: je 0x47e28a
47e283: mov byte ptr [rdi], 0x2f
47e286: add rdi, 1
47e28a: mov rdx, qword ptr [rsp + 0x18]
47e28f: mov rsi, qword ptr [rsp + 8]
47e294: call 0x401150
47e299: nop dword ptr [rax]
47e2a0: mov rdx, rax
47e2a3: sub rax, 1
47e2a7: cmp byte ptr [rax], 0x2f
47e2aa: jne 0x47e2a0
47e2ac: cmp rbp, rax
47e2af: cmove rax, rdx
47e2b3: mov byte ptr [rax], 0
47e2b6: mov qword ptr [r12 + 0x348], rbp
47e2be: add rsp, 0x28
47e2c2: mov rax, r12
47e2c5: pop rbx
47e2c6: pop rbp
47e2c7: pop r12
47e2c9: pop r13
47e2cb: pop r14
47e2cd: pop r15
47e2cf: ret 
47e2d0: mov dword ptr [r12 + 0x3dc], 1
47e2dc: jmp 0x47e131
47e2e1: nop dword ptr [rax]
47e2e8: mov rax, r12
47e2eb: add rax, 0x2c0
47e2f1: cmp rax, rdx
47e2f4: je 0x47e1b8
47e2fa: test byte ptr [rsp + 0x18], 8
47e2ff: je 0x47e338
47e301: mov qword ptr [r12 + 0x370], rdx
47e309: jmp 0x47e1b5
47e30e: nop 
47e310: xor edx, edx
47e312: test rbx, rbx
47e315: jne 0x47e198
47e31b: mov rax, r12
47e31e: jmp 0x47e1af
47e323: nop dword ptr [rax + rax]
47e328: mov rdx, qword ptr [r12 + 0x368]
47e330: jmp 0x47e2eb
47e332: nop word ptr [rax + rax]
47e338: lea rsi, [r12 + 0x370]
47e340: jmp 0x47e1b5
47e345: nop dword ptr [rax]
47e348: mov rdi, rax
47e34b: call 0x426410
47e350: mov rbp, rax
47e353: test rax, rax
47e356: je 0x47e37c
47e358: mov rdi, rax
47e35b: jmp 0x47e28a
47e360: mov rbp, r15
47e363: nop dword ptr [rax + rax]
47e368: mov rdi, rbp
47e36b: mov rbp, 0xffffffffffffffff
47e372: call 0x426a00
47e377: jmp 0x47e2b6
47e37c: or rbp, 0xffffffffffffffff
47e380: jmp 0x47e2b6
47e385: nop word ptr cs:[rax + rax]
47e38f: nop 
47e390: endbr64 
47e394: cmp qword ptr [rdi + 0x450], -1
47e39c: je 0x47e440
47e3a2: mov rsi, qword ptr [rdi + 0x440]
47e3a9: cmp rsi, qword ptr [rip + 0x44f58]
47e3b0: ja 0x47e440
47e3b6: mov rdx, qword ptr [rip + 0x44f43]
47e3bd: mov rax, qword ptr [rip + 0x41d2c]
47e3c4: sub rax, rdx
47e3c7: cmp rax, 0x8ff
47e3cd: jbe 0x47e440
47e3cf: mov rcx, qword ptr [rdi + 0x448]
47e3d6: mov r8, qword ptr [rdi + 0x438]
47e3dd: sub rax, 0x900
47e3e3: add r8, rcx
47e3e6: cmp rax, r8
47e3e9: jb 0x47e440
47e3eb: add rdx, rax
47e3ee: sub rax, r8
47e3f1: sub rdx, rcx
47e3f4: mov rcx, rdx
47e3f7: xor edx, edx
47e3f9: div rsi
47e3fc: imul rax, rsi
47e400: sub rcx, rax
47e403: mov rax, qword ptr [rdi + 0x28]
47e407: mov qword ptr [rip + 0x44ef2], rcx
47e40e: mov qword ptr [rdi + 0x450], rcx
47e415: test byte ptr [rax + 0x31c], 4
47e41c: je 0x47e430
47e41e: sub rsp, 8
47e422: call qword ptr [rip + 0x42d18]
47e428: xor eax, eax
47e42a: add rsp, 8
47e42e: ret 
47e42f: nop 
47e430: or byte ptr [rdi + 0x31d], 4
47e437: xor eax, eax
47e439: ret 
47e43a: nop word ptr [rax + rax]
47e440: endbr64 
47e444: mov eax, 0xffffffff
47e449: ret 
47e44a: nop word ptr [rax + rax]
47e450: endbr64 
47e454: cmp qword ptr [rdi + 0x450], -1
47e45c: je 0x47e4e8
47e462: mov rsi, qword ptr [rdi + 0x440]
47e469: cmp rsi, qword ptr [rip + 0x44e98]
47e470: ja 0x47e4e8
47e472: mov rdx, qword ptr [rip + 0x44e87]
47e479: mov rax, qword ptr [rip + 0x41c70]
47e480: sub rax, rdx
47e483: cmp rax, 0x8ff
47e489: jbe 0x47e4e8
47e48b: mov rcx, qword ptr [rdi + 0x448]
47e492: mov r8, qword ptr [rdi + 0x438]
47e499: sub rax, 0x900
47e49f: add r8, rcx
47e4a2: cmp rax, r8
47e4a5: jb 0x47e4e8
47e4a7: add rdx, rax
47e4aa: sub rax, r8
47e4ad: sub rdx, rcx
47e4b0: mov rcx, rdx
47e4b3: xor edx, edx
47e4b5: div rsi
47e4b8: imul rax, rsi
47e4bc: sub rcx, rax
47e4bf: mov rax, qword ptr [rdi + 0x28]
47e4c3: mov qword ptr [rip + 0x44e36], rcx
47e4ca: mov qword ptr [rdi + 0x450], rcx
47e4d1: test byte ptr [rax + 0x31c], 4
47e4d8: je 0x47e4e0
47e4da: jmp qword ptr [rip + 0x42c60]
47e4e0: or byte ptr [rdi + 0x31d], 4
47e4e7: ret 
47e4e8: push rax
47e4e9: mov rsi, qword ptr [rdi + 8]
47e4ed: lea rcx, [rip + 0x2c954]
47e4f4: xor edx, edx
47e4f6: xor edi, edi
47e4f8: call 0x485060
47e4fd: nop dword ptr [rax]
47e500: endbr64 
47e504: push r12
47e506: mov rdx, qword ptr [rdi + 0x430]
47e50d: mov r12, qword ptr [rdi + 0x438]
47e514: mov rsi, qword ptr [rdi + 0x428]
47e51b: mov rax, qword ptr fs:[0x10]
47e524: sub rax, qword ptr [rdi + 0x450]
47e52b: sub r12, rdx
47e52e: mov rdi, rax
47e531: call 0x401150
47e536: mov rdx, r12
47e539: xor esi, esi
47e53b: pop r12
47e53d: mov rdi, rax
47e540: jmp 0x401110
47e545: nop word ptr cs:[rax + rax]
47e550: endbr64 
47e554: mov rsi, qword ptr [rip + 0x42bbd]
47e55b: push rbx
47e55c: mov rbx, rdi
47e55f: mov rax, qword ptr [rdi + 0x468]
47e566: add rax, qword ptr [rdi]
47e569: neg rsi
47e56c: mov rdi, rax
47e56f: add rax, qword ptr [rbx + 0x470]
47e576: and rdi, rsi
47e579: and rax, rsi
47e57c: cmp rdi, rax
47e57f: jne 0x47e588
47e581: pop rbx
47e582: ret 
47e583: nop dword ptr [rax + rax]
47e588: sub rax, rdi
47e58b: mov edx, 1
47e590: mov rsi, rax
47e593: call 0x451ca0
47e598: test eax, eax
47e59a: jns 0x47e581
47e59c: mov rax, 0xffffffffffffffc0
47e5a3: mov rsi, qword ptr [rbx + 8]
47e5a7: lea rcx, [rip + 0x2ccb2]
47e5ae: xor edx, edx
47e5b0: mov edi, dword ptr fs:[rax]
47e5b3: call 0x485060
47e5b8: nop dword ptr [rax + rax]
47e5c0: endbr64 
47e5c4: push r12
47e5c6: movsxd rdx, edx
47e5c9: push rbp
47e5ca: lea rax, [rdx + rdx*8]
47e5ce: mov rbp, rdi
47e5d1: push rbx
47e5d2: lea rdx, [rdx + rax*2]
47e5d6: lea rax, [rip + 0x2cc23]
47e5dd: mov ebx, esi
47e5df: lea rsi, [rax + rdx*2]
47e5e3: sub rsp, 0x30
47e5e7: mov r12, rsp
47e5ea: mov rdi, r12
47e5ed: call 0x401090
47e5f2: lea rcx, [rip + 0x2aaa7]
47e5f9: cmp ebx, 0xff
47e5ff: ja 0x47e62d
47e601: mov edx, ebx
47e603: and ebx, 0xf
47e606: mov byte ptr [rax + 2], 0
47e60a: mov rsi, qword ptr [rbp + 8]
47e60e: shr edx, 4
47e611: xor edi, edi
47e613: and edx, 0xf
47e616: movzx edx, byte ptr [rcx + rdx]
47e61a: mov byte ptr [rax], dl
47e61c: movzx edx, byte ptr [rcx + rbx]
47e620: mov rcx, r12
47e623: mov byte ptr [rax + 1], dl
47e626: xor edx, edx
47e628: call 0x485060
47e62d: mov edx, ebx
47e62f: add rax, 6
47e633: shr edx, 0x1c
47e636: movzx edx, byte ptr [rcx + rdx]
47e63a: mov byte ptr [rax - 6], dl
47e63d: mov edx, ebx
47e63f: shr edx, 0x18
47e642: and edx, 0xf
47e645: movzx edx, byte ptr [rcx + rdx]
47e649: mov byte ptr [rax - 5], dl
47e64c: mov edx, ebx
47e64e: shr edx, 0x14
47e651: and edx, 0xf
47e654: movzx edx, byte ptr [rcx + rdx]
47e658: mov byte ptr [rax - 4], dl
47e65b: mov edx, ebx
47e65d: shr edx, 0x10
47e660: and edx, 0xf
47e663: movzx edx, byte ptr [rcx + rdx]
47e667: mov byte ptr [rax - 3], dl
47e66a: mov edx, ebx
47e66c: shr edx, 0xc
47e66f: and edx, 0xf
47e672: movzx edx, byte ptr [rcx + rdx]
47e676: mov byte ptr [rax - 2], dl
47e679: mov edx, ebx
47e67b: shr edx, 8
47e67e: and edx, 0xf
47e681: movzx edx, byte ptr [rcx + rdx]
47e685: mov byte ptr [rax - 1], dl
47e688: jmp 0x47e601
47e68d: nop dword ptr [rax]
47e690: endbr64 
47e694: push rbp
47e695: mov rbp, rsp
47e698: push r15
47e69a: push r14
47e69c: push r13
47e69e: push r12
47e6a0: push rbx
47e6a1: sub rsp, 0xd8
47e6a8: mov qword ptr [rbp - 0xb8], rsi
47e6af: mov dword ptr [rbp - 0xc8], ecx
47e6b5: test byte ptr [rdi + 0x31c], 4
47e6bc: jne 0x47e978
47e6c2: mov eax, dword ptr [rip + 0x450f8]
47e6c8: mov r15, rdi
47e6cb: mov r12d, edx
47e6ce: and eax, 0x20
47e6d1: test ecx, ecx
47e6d3: je 0x47e990
47e6d9: mov r13d, r12d
47e6dc: and r13d, 1
47e6e0: test eax, eax
47e6e2: jne 0x47fc7a
47e6e8: mov rax, qword ptr [r15 + 0xf0]
47e6ef: mov qword ptr [rbp - 0xe8], rax
47e6f6: test rax, rax
47e6f9: jne 0x47fb0e
47e6ff: mov rax, qword ptr [r15 + 0x68]
47e703: cmp qword ptr [r15 + 0xf8], 0
47e70b: mov rax, qword ptr [rax + 8]
47e70f: mov qword ptr [rbp - 0xc0], rax
47e716: je 0x47f388
47e71c: test r13d, r13d
47e71f: je 0x47e778
47e721: mov rax, qword ptr [r15 + 0x58]
47e725: mov rax, qword ptr [rax + 8]
47e729: mov rdx, qword ptr [rax + 8]
47e72d: test rdx, rdx
47e730: jne 0x47f420
47e736: mov r9d, dword ptr [rbp - 0xc8]
47e73d: mov qword ptr [rax + 8], r15
47e741: test r9d, r9d
47e744: jne 0x47fe88
47e74a: cmp qword ptr [rip + 0x4464e], 0
47e752: jne 0x47f440
47e758: lea rbx, [rip + 0x4c61]
47e75f: mov qword ptr [rax + 0x10], rbx
47e763: mov rax, qword ptr [r15 + 0x290]
47e76a: test rax, rax
47e76d: jne 0x47f3a1
47e773: nop dword ptr [rax + rax]
47e778: mov rax, qword ptr [r15 + 0x78]
47e77c: pxor xmm0, xmm0
47e780: movaps xmmword ptr [rbp - 0x70], xmm0
47e784: movaps xmmword ptr [rbp - 0x60], xmm0
47e788: movaps xmmword ptr [rbp - 0x50], xmm0
47e78c: movaps xmmword ptr [rbp - 0x40], xmm0
47e790: test rax, rax
47e793: je 0x47f470
47e799: mov rcx, qword ptr [rax + 8]
47e79d: mov rax, qword ptr [r15 + 0x80]
47e7a4: mov rdx, qword ptr [rax + 8]
47e7a8: movq xmm0, rcx
47e7ad: mov rax, qword ptr [r15 + 0x188]
47e7b4: movq xmm1, rdx
47e7b9: lea rdi, [rcx + rdx]
47e7bd: punpcklqdq xmm0, xmm1
47e7c1: movaps xmmword ptr [rbp - 0x70], xmm0
47e7c5: test rax, rax
47e7c8: je 0x47e7d2
47e7ca: mov rax, qword ptr [rax + 8]
47e7ce: mov qword ptr [rbp - 0x60], rax
47e7d2: cmp qword ptr [r15 + 0xe0], 0
47e7da: je 0x47e827
47e7dc: mov rax, qword ptr [r15 + 0xf8]
47e7e3: mov rsi, qword ptr [r15 + 0x50]
47e7e7: mov rax, qword ptr [rax + 8]
47e7eb: mov rsi, qword ptr [rsi + 8]
47e7ef: lea r8, [rax + rsi]
47e7f3: cmp r8, rdi
47e7f6: jne 0x47e803
47e7f8: sub rdx, rsi
47e7fb: mov qword ptr [rbp - 0x68], rdx
47e7ff: lea rdi, [rdx + rcx]
47e803: test r13d, r13d
47e806: jne 0x47e811
47e808: cmp rax, rdi
47e80b: je 0x47f462
47e811: movq xmm0, rax
47e816: movq xmm2, rsi
47e81b: mov dword ptr [rbp - 0x38], r13d
47e81f: punpcklqdq xmm0, xmm2
47e823: movaps xmmword ptr [rbp - 0x50], xmm0
47e827: lea rax, [rbp - 0x70]
47e82b: and r12d, 0x2000000
47e832: mov r11, r15
47e835: mov qword ptr [rbp - 0xb0], rax
47e83c: lea rax, [rbp - 0x30]
47e840: mov dword ptr [rbp - 0xc4], r12d
47e847: mov qword ptr [rbp - 0xe0], rax
47e84e: mov rdi, qword ptr [rbp - 0xb0]
47e855: mov r15, qword ptr [r11]
47e858: mov rax, qword ptr [rdi]
47e85b: mov rsi, qword ptr [rdi + 8]
47e85f: mov r8d, dword ptr [rdi + 0x18]
47e863: add rsi, rax
47e866: mov qword ptr [rbp - 0x88], rsi
47e86d: test r8d, r8d
47e870: je 0x47e9e0
47e876: xor r12d, r12d
47e879: xor ebx, ebx
47e87b: mov rdi, rsi
47e87e: cmp rax, rsi
47e881: jb 0x47e8bc
47e883: jmp 0x47e925
47e888: nop dword ptr [rax + rax]
47e890: mov rdx, qword ptr [rax]
47e893: add rdx, r15
47e896: cmp rcx, 7
47e89a: jne 0x47e9b8
47e8a0: mov rcx, qword ptr [r11 + 0x3f0]
47e8a7: test rcx, rcx
47e8aa: jne 0x47f280
47e8b0: add qword ptr [rdx], r15
47e8b3: add rax, 0x18
47e8b7: cmp rdi, rax
47e8ba: jbe 0x47e8e0
47e8bc: mov rsi, qword ptr [rax + 8]
47e8c0: mov ecx, esi
47e8c2: cmp esi, 0x25
47e8c5: jne 0x47e890
47e8c7: mov r12, rax
47e8ca: test rbx, rbx
47e8cd: jne 0x47e8b3
47e8cf: mov rbx, rax
47e8d2: add rax, 0x18
47e8d6: cmp rdi, rax
47e8d9: ja 0x47e8bc
47e8db: nop dword ptr [rax + rax]
47e8e0: test rbx, rbx
47e8e3: je 0x47e925
47e8e5: cmp rbx, r12
47e8e8: ja 0x47e925
47e8ea: mov esi, dword ptr [rbp - 0xc4]
47e8f0: mov r13, r11
47e8f3: test esi, esi
47e8f5: jne 0x47f2bb
47e8fb: nop dword ptr [rax + rax]
47e900: cmp dword ptr [rbx + 8], 0x25
47e904: jne 0x47e919
47e906: mov r14, qword ptr [rbx]
47e909: mov rax, qword ptr [rbx + 0x10]
47e90d: add rax, qword ptr [r13]
47e911: call rax
47e913: add r14, r15
47e916: mov qword ptr [r14], rax
47e919: add rbx, 0x18
47e91d: cmp rbx, r12
47e920: jbe 0x47e900
47e922: mov r11, r13
47e925: add qword ptr [rbp - 0xb0], 0x20
47e92d: mov rax, qword ptr [rbp - 0xb0]
47e934: cmp rax, qword ptr [rbp - 0xe0]
47e93b: jne 0x47e84e
47e941: mov eax, dword ptr [rbp - 0xc8]
47e947: mov r15, r11
47e94a: test eax, eax
47e94c: jne 0x47fce9
47e952: or byte ptr [r15 + 0x31c], 4
47e95a: cmp qword ptr [rbp - 0xe8], 0
47e962: jne 0x47fcbc
47e968: mov rax, qword ptr [r15 + 0x470]
47e96f: test rax, rax
47e972: jne 0x47f3c0
47e978: lea rsp, [rbp - 0x28]
47e97c: pop rbx
47e97d: pop r12
47e97f: pop r13
47e981: pop r14
47e983: pop r15
47e985: pop rbp
47e986: ret 
47e987: nop word ptr [rax + rax]
47e990: cmp qword ptr [rdi + 0x100], 0
47e998: je 0x47e6d9
47e99e: xor r13d, r13d
47e9a1: test eax, eax
47e9a3: je 0x47e6e8
47e9a9: lea rdx, [rip + 0x2d065]
47e9b0: jmp 0x47fc8f
47e9b5: nop dword ptr [rax]
47e9b8: cmp rcx, 0x24
47e9bc: jne 0x47fcaf
47e9c2: mov rsi, qword ptr [r11 + 0x298]
47e9c9: mov rcx, qword ptr [r11]
47e9cc: mov qword ptr [rdx + 8], rax
47e9d0: add rcx, qword ptr [rsi + 8]
47e9d4: mov qword ptr [rdx], rcx
47e9d7: jmp 0x47e8b3
47e9dc: nop dword ptr [rax]
47e9e0: mov rdx, qword ptr [r11 + 0x70]
47e9e4: cmp r11, 0
47e9eb: mov rbx, qword ptr [rdx + 8]
47e9ef: mov rdx, qword ptr [rdi + 0x10]
47e9f3: lea rdx, [rdx + rdx*2]
47e9f7: mov qword ptr [rbp - 0x98], rbx
47e9fe: lea rbx, [rax + rdx*8]
47ea02: je 0x47ea1b
47ea04: test r15, r15
47ea07: jne 0x47ef50
47ea0d: cmp qword ptr [r11 + 0x240], 0
47ea15: je 0x47ef50
47ea1b: mov r10, qword ptr [r11 + 0x1d0]
47ea22: test r10, r10
47ea25: je 0x47ef9c
47ea2b: mov rax, qword ptr [r10 + 8]
47ea2f: mov qword ptr [rbp - 0xa0], rax
47ea36: cmp qword ptr [rbp - 0x88], rbx
47ea3d: jbe 0x47e925
47ea43: mov qword ptr [rbp - 0xd8], 0
47ea4e: mov qword ptr [rbp - 0xd0], 0
47ea59: mov qword ptr [rbp - 0xa8], r15
47ea60: mov r15, r11
47ea63: nop dword ptr [rax + rax]
47ea68: mov r13, qword ptr [rbx + 8]
47ea6c: mov r12d, r13d
47ea6f: cmp r13d, 0x25
47ea73: je 0x47f200
47ea79: mov rdi, qword ptr [rbp - 0xa0]
47ea80: mov rax, r13
47ea83: mov rcx, qword ptr [rbp - 0x98]
47ea8a: shr rax, 0x20
47ea8e: movzx esi, word ptr [rdi + rax*2]
47ea92: lea rax, [rax + rax*2]
47ea96: mov rdi, qword ptr [rbp - 0xa8]
47ea9d: lea r14, [rcx + rax*8]
47eaa1: add rdi, qword ptr [rbx]
47eaa4: mov qword ptr [rbp - 0x90], rdi
47eaab: mov rdi, qword ptr [r15 + 0x2e8]
47eab2: mov qword ptr [rbp - 0x78], r14
47eab6: cmp r12, 8
47eaba: je 0x47f228
47eac0: cmp r12, 0x26
47eac4: je 0x47f228
47eaca: test r12, r12
47eacd: je 0x47ec00
47ead3: movzx edx, byte ptr [r14 + 4]
47ead8: mov eax, edx
47eada: shr al, 4
47eadd: je 0x47f120
47eae3: movzx eax, byte ptr [r14 + 5]
47eae8: and eax, 3
47eaeb: sub eax, 1
47eaee: cmp eax, 1
47eaf1: jbe 0x47f120
47eaf7: cmp r14, qword ptr [r15 + 0x408]
47eafe: je 0x47f480
47eb04: cmp r12, 7
47eb08: je 0x47f240
47eb0e: cmp r12, 0x10
47eb12: je 0x47f240
47eb18: lea rax, [r12 - 0x11]
47eb1d: cmp rax, 1
47eb21: setbe r9b
47eb25: cmp r12, 0x24
47eb29: sete al
47eb2c: or r9d, eax
47eb2f: movzx r9d, r9b
47eb33: cmp r12, 5
47eb37: je 0x47f250
47eb3d: mov eax, r9d
47eb40: or eax, 4
47eb43: cmp r12, 6
47eb47: cmove r9d, eax
47eb4b: and esi, 0x7fff
47eb51: mov dword ptr [r15 + 0x410], r9d
47eb58: lea rax, [rsi + rsi*2]
47eb5c: mov qword ptr [r15 + 0x408], r14
47eb63: lea r8, [rdi + rax*8]
47eb67: test r8, r8
47eb6a: je 0x47eb7b
47eb6c: mov ecx, dword ptr [r8 + 8]
47eb70: mov eax, 0
47eb75: test ecx, ecx
47eb77: cmove r8, rax
47eb7b: mov edi, dword ptr [r14]
47eb7e: push 0
47eb80: lea rdx, [rbp - 0x78]
47eb84: mov rsi, r15
47eb87: mov rcx, qword ptr [rbp - 0xb8]
47eb8e: add rdi, qword ptr [rbp - 0xc0]
47eb95: push 9
47eb97: call 0x47d3a0
47eb9c: mov rcx, qword ptr [rbp - 0x78]
47eba0: mov qword ptr [r15 + 0x418], rax
47eba7: mov r11, rax
47ebaa: mov qword ptr [r15 + 0x420], rcx
47ebb1: pop rax
47ebb2: pop rdx
47ebb3: xor r10d, r10d
47ebb6: test rcx, rcx
47ebb9: jne 0x47f260
47ebbf: cmp r12, 0x25
47ebc3: ja 0x47f1f0
47ebc9: lea rsi, [rip + 0x2c4f0]
47ebd0: movsxd rax, dword ptr [rsi + r12*4]
47ebd4: add rax, rsi
47ebd7: notrack jmp rax
47ebda: nop word ptr [rax + rax]
47ebe0: mov rax, qword ptr [rbp - 0x78]
47ebe4: mov r10, qword ptr [rax + 0x10]
47ebe8: mov rax, qword ptr [rbp - 0x90]
47ebef: add r10, qword ptr [rbx + 0x10]
47ebf3: mov qword ptr [rax], r10
47ebf6: nop word ptr cs:[rax + rax]
47ec00: add rbx, 0x18
47ec04: cmp qword ptr [rbp - 0x88], rbx
47ec0b: ja 0x47ea68
47ec11: mov rbx, qword ptr [rbp - 0xd0]
47ec18: mov r11, r15
47ec1b: mov r15, qword ptr [rbp - 0xa8]
47ec22: test rbx, rbx
47ec25: je 0x47e925
47ec2b: mov r13, qword ptr [rbp - 0xd8]
47ec32: cmp rbx, r13
47ec35: ja 0x47e925
47ec3b: mov qword ptr [rbp - 0x88], r15
47ec42: mov r15, r11
47ec45: jmp 0x47ec5d
47ec47: nop word ptr [rax + rax]
47ec50: add rbx, 0x18
47ec54: cmp rbx, r13
47ec57: ja 0x47ed67
47ec5d: mov rax, qword ptr [rbx + 8]
47ec61: cmp eax, 0x25
47ec64: jne 0x47ec50
47ec66: mov rdi, qword ptr [rbp - 0xa0]
47ec6d: shr rax, 0x20
47ec71: mov r14, qword ptr [rbp - 0x88]
47ec78: add r14, qword ptr [rbx]
47ec7b: mov rsi, qword ptr [r15 + 0x2e8]
47ec82: movzx ecx, word ptr [rdi + rax*2]
47ec86: mov rdi, qword ptr [rbp - 0x98]
47ec8d: lea rax, [rax + rax*2]
47ec91: lea r12, [rdi + rax*8]
47ec95: mov qword ptr [rbp - 0x78], r12
47ec99: movzx edx, byte ptr [r12 + 4]
47ec9f: mov eax, edx
47eca1: shr al, 4
47eca4: je 0x47f2d0
47ecaa: movzx eax, byte ptr [r12 + 5]
47ecb0: and eax, 3
47ecb3: sub eax, 1
47ecb6: cmp eax, 1
47ecb9: jbe 0x47f2d0
47ecbf: cmp r12, qword ptr [r15 + 0x408]
47ecc6: je 0x47fe07
47eccc: and ecx, 0x7fff
47ecd2: mov qword ptr [r15 + 0x408], r12
47ecd9: mov dword ptr [r15 + 0x410], 0
47ece4: lea rax, [rcx + rcx*2]
47ece8: lea r8, [rsi + rax*8]
47ecec: test r8, r8
47ecef: je 0x47ed01
47ecf1: mov r9d, dword ptr [r8 + 8]
47ecf5: mov eax, 0
47ecfa: test r9d, r9d
47ecfd: cmove r8, rax
47ed01: mov edi, dword ptr [r12]
47ed05: push 0
47ed07: lea rdx, [rbp - 0x78]
47ed0b: xor r9d, r9d
47ed0e: push 9
47ed10: mov rcx, qword ptr [rbp - 0xb8]
47ed17: mov rsi, r15
47ed1a: add rdi, qword ptr [rbp - 0xc0]
47ed21: call 0x47d3a0
47ed26: mov rcx, qword ptr [rbp - 0x78]
47ed2a: mov qword ptr [r15 + 0x418], rax
47ed31: mov qword ptr [r15 + 0x420], rcx
47ed38: pop rdi
47ed39: pop r8
47ed3b: test rcx, rcx
47ed3e: jne 0x47fa18
47ed44: mov ecx, dword ptr [rbp - 0xc4]
47ed4a: mov rax, qword ptr [rbx + 0x10]
47ed4e: add rax, qword ptr [r15]
47ed51: test ecx, ecx
47ed53: jne 0x47ed57
47ed55: call rax
47ed57: add rbx, 0x18
47ed5b: mov qword ptr [r14], rax
47ed5e: cmp rbx, r13
47ed61: jbe 0x47ec5d
47ed67: mov r11, r15
47ed6a: jmp 0x47e925
47ed6f: nop 
47ed70: mov rax, qword ptr [rbp - 0x78]
47ed74: mov r10, qword ptr [rax + 0x10]
47ed78: mov rax, qword ptr [rbp - 0x90]
47ed7f: add r10, qword ptr [rbx + 0x10]
47ed83: lea rsi, [rip + 0x2c146]
47ed8a: mov dword ptr [rax], r10d
47ed8d: mov eax, 0xffffffff
47ed92: cmp r10, rax
47ed95: jbe 0x47ec00
47ed9b: mov rax, qword ptr [r15 + 0x68]
47ed9f: mov ecx, dword ptr [r14]
47eda2: mov edi, 2
47eda7: add rcx, qword ptr [rax + 8]
47edab: mov rax, qword ptr [rip + 0x40cb6]
47edb2: mov rdx, qword ptr [rax]
47edb5: lea rax, [rip + 0x2c2b2]
47edbc: test rdx, rdx
47edbf: cmove rdx, rax
47edc3: xor eax, eax
47edc5: call 0x4810c0
47edca: jmp 0x47ec00
47edcf: nop 
47edd0: test r11, r11
47edd3: je 0x47ec00
47edd9: mov rax, qword ptr [r11 + 0x458]
47ede0: mov rsi, qword ptr [rbp - 0x90]
47ede7: mov qword ptr [rsi], rax
47edea: jmp 0x47ec00
47edef: nop 
47edf0: mov rax, qword ptr [rbp - 0x78]
47edf4: test rax, rax
47edf7: je 0x47ec00
47edfd: mov rdx, qword ptr [r11 + 0x450]
47ee04: lea rcx, [rdx + 1]
47ee08: cmp rcx, 1
47ee0c: jbe 0x47fe54
47ee12: mov rax, qword ptr [rax + 8]
47ee16: mov rsi, qword ptr [rbp - 0x90]
47ee1d: sub rax, rdx
47ee20: add rax, qword ptr [rbx + 0x10]
47ee24: mov qword ptr [rsi], rax
47ee27: jmp 0x47ec00
47ee2c: nop dword ptr [rax]
47ee30: mov rdx, qword ptr [rbp - 0x78]
47ee34: test rdx, rdx
47ee37: je 0x47ec00
47ee3d: mov rdi, qword ptr [rbp - 0x90]
47ee44: mov rax, qword ptr [rbx + 0x10]
47ee48: add rax, qword ptr [rdx + 8]
47ee4c: mov qword ptr [rdi], rax
47ee4f: jmp 0x47ec00
47ee54: nop dword ptr [rax]
47ee58: mov rax, qword ptr [rbp - 0x78]
47ee5c: test rax, rax
47ee5f: je 0x47fa28
47ee65: mov rdx, qword ptr [r11 + 0x450]
47ee6c: lea rcx, [rdx + 1]
47ee70: cmp rcx, 1
47ee74: jbe 0x47fe2e
47ee7a: mov rax, qword ptr [rax + 8]
47ee7e: mov rsi, qword ptr [rbp - 0x90]
47ee85: sub rax, rdx
47ee88: add rax, qword ptr [rbx + 0x10]
47ee8c: mov qword ptr [rsi + 8], rax
47ee90: lea rax, [rip + 0x5699]
47ee97: mov qword ptr [rsi], rax
47ee9a: jmp 0x47ec00
47ee9f: nop 
47eea0: mov rax, qword ptr [rbx + 0x10]
47eea4: mov rdi, qword ptr [rbp - 0x90]
47eeab: sub rax, rdi
47eeae: add r10, rax
47eeb1: movsxd rax, r10d
47eeb4: mov dword ptr [rdi], r10d
47eeb7: cmp r10, rax
47eeba: je 0x47ec00
47eec0: lea rsi, [rip + 0x2c049]
47eec7: jmp 0x47ed9b
47eecc: nop dword ptr [rax]
47eed0: mov r11d, dword ptr [rbp - 0xc4]
47eed7: mov rax, qword ptr [rbx + 0x10]
47eedb: add rax, qword ptr [r15]
47eede: test r11d, r11d
47eee1: jne 0x47eee5
47eee3: call rax
47eee5: mov rdi, qword ptr [rbp - 0x90]
47eeec: mov qword ptr [rdi], rax
47eeef: jmp 0x47ec00
47eef4: nop dword ptr [rax]
47eef8: mov r12, qword ptr [rbp - 0x78]
47eefc: test r12, r12
47eeff: je 0x47ec00
47ef05: mov rdx, qword ptr [r12 + 0x10]
47ef0a: mov rdi, qword ptr [rbp - 0x90]
47ef11: mov rsi, r10
47ef14: cmp qword ptr [r14 + 0x10], rdx
47ef18: cmovbe rdx, qword ptr [r14 + 0x10]
47ef1d: call 0x401060
47ef22: mov rax, qword ptr [r14 + 0x10]
47ef26: cmp qword ptr [r12 + 0x10], rax
47ef2b: ja 0x47ef43
47ef2d: jae 0x47ec00
47ef33: mov r12d, dword ptr [rip + 0x44906]
47ef3a: test r12d, r12d
47ef3d: je 0x47ec00
47ef43: lea rsi, [rip + 0x2c006]
47ef4a: jmp 0x47ed9b
47ef4f: nop 
47ef50: cmp rax, rbx
47ef53: jae 0x47ea1b
47ef59: nop dword ptr [rax]
47ef60: mov rcx, qword ptr [rax]
47ef63: mov edx, dword ptr [rax + 8]
47ef66: add rcx, r15
47ef69: cmp rdx, 0x26
47ef6d: je 0x47ef79
47ef6f: cmp rdx, 8
47ef73: jne 0x47ff9d
47ef79: mov rdx, qword ptr [rax + 0x10]
47ef7d: add rax, 0x18
47ef81: add rdx, r15
47ef84: mov qword ptr [rcx], rdx
47ef87: cmp rbx, rax
47ef8a: ja 0x47ef60
47ef8c: mov r10, qword ptr [r11 + 0x1d0]
47ef93: test r10, r10
47ef96: jne 0x47ea2b
47ef9c: mov qword ptr [rbp - 0xd0], 0
47efa7: cmp qword ptr [rbp - 0x88], rbx
47efae: jbe 0x47e925
47efb4: mov qword ptr [rbp - 0xa0], r15
47efbb: mov qword ptr [rbp - 0xa8], r10
47efc2: nop word ptr [rax + rax]
47efc8: mov r13, qword ptr [rbx + 8]
47efcc: mov r12d, r13d
47efcf: cmp r13d, 0x25
47efd3: je 0x47f800
47efd9: mov rax, qword ptr [rbp - 0xa0]
47efe0: add rax, qword ptr [rbx]
47efe3: mov qword ptr [rbp - 0x90], rax
47efea: mov rax, r13
47efed: mov rdi, qword ptr [rbp - 0x98]
47eff4: shr rax, 0x20
47eff8: lea rax, [rax + rax*2]
47effc: lea r14, [rdi + rax*8]
47f000: mov qword ptr [rbp - 0x78], r14
47f004: cmp r12, 8
47f008: je 0x47f900
47f00e: cmp r12, 0x26
47f012: je 0x47f900
47f018: test r12, r12
47f01b: je 0x47f4d0
47f021: movzx edx, byte ptr [r14 + 4]
47f026: mov eax, edx
47f028: shr al, 4
47f02b: je 0x47f828
47f031: movzx eax, byte ptr [r14 + 5]
47f036: and eax, 3
47f039: sub eax, 1
47f03c: cmp eax, 1
47f03f: jbe 0x47f828
47f045: cmp r14, qword ptr [r11 + 0x408]
47f04c: je 0x47faaa
47f052: cmp r12, 7
47f056: je 0x47f920
47f05c: cmp r12, 0x10
47f060: je 0x47f920
47f066: lea rax, [r12 - 0x11]
47f06b: cmp rax, 1
47f06f: setbe r9b
47f073: cmp r12, 0x24
47f077: sete al
47f07a: or r9d, eax
47f07d: movzx r9d, r9b
47f081: cmp r12, 5
47f085: je 0x47f930
47f08b: mov eax, r9d
47f08e: or eax, 4
47f091: cmp r12, 6
47f095: cmove r9d, eax
47f099: mov dword ptr [r11 + 0x410], r9d
47f0a0: mov edi, dword ptr [r14]
47f0a3: mov rsi, r11
47f0a6: xor r8d, r8d
47f0a9: mov qword ptr [r11 + 0x408], r14
47f0b0: mov rcx, qword ptr [rbp - 0xb8]
47f0b7: lea rdx, [rbp - 0x78]
47f0bb: push 0
47f0bd: add rdi, qword ptr [rbp - 0xc0]
47f0c4: push 9
47f0c6: mov qword ptr [rbp - 0xd8], r11
47f0cd: call 0x47d3a0
47f0d2: mov r11, qword ptr [rbp - 0xd8]
47f0d9: mov rcx, qword ptr [rbp - 0x78]
47f0dd: mov r10, rax
47f0e0: mov qword ptr [r11 + 0x420], rcx
47f0e7: mov qword ptr [r11 + 0x418], rax
47f0ee: pop rax
47f0ef: pop rdx
47f0f0: xor r15d, r15d
47f0f3: test rcx, rcx
47f0f6: jne 0x47f940
47f0fc: cmp r12, 0x25
47f100: ja 0x47fd87
47f106: lea rdi, [rip + 0x2c04b]
47f10d: movsxd rax, dword ptr [rdi + r12*4]
47f111: add rax, rdi
47f114: notrack jmp rax
47f117: nop word ptr [rax + rax]
47f120: mov rcx, r14
47f123: mov r11, r15
47f126: movzx esi, word ptr [rcx + 6]
47f12a: cmp si, -0xf
47f12e: je 0x47f272
47f134: mov r10, qword ptr [r11]
47f137: and edx, 0xf
47f13a: add r10, qword ptr [rcx + 8]
47f13e: cmp dl, 0xa
47f141: jne 0x47ebbf
47f147: test si, si
47f14a: je 0x47ebbf
47f150: mov eax, dword ptr [rbp - 0xc4]
47f156: test eax, eax
47f158: jne 0x47ebbf
47f15e: cmp r15, r11
47f161: je 0x47f1d0
47f163: movzx eax, byte ptr [r11 + 0x31c]
47f16b: test al, 3
47f16d: je 0x47f1d0
47f16f: test al, 4
47f171: jne 0x47f1d0
47f173: mov rax, qword ptr [r15 + 0x68]
47f177: lea rdi, [rip + 0x2bef0]
47f17e: mov rdx, qword ptr [rip + 0x408e3]
47f185: lea rsi, [rip + 0x2be6c]
47f18c: mov r8, qword ptr [r11 + 8]
47f190: mov rcx, qword ptr [r15 + 8]
47f194: mov qword ptr [rbp - 0xf8], r10
47f19b: mov rdx, qword ptr [rdx]
47f19e: mov r9d, dword ptr [r14]
47f1a1: mov qword ptr [rbp - 0xf0], r11
47f1a8: test rdx, rdx
47f1ab: cmove rdx, rdi
47f1af: add r9, qword ptr [rax + 8]
47f1b3: mov edi, 2
47f1b8: xor eax, eax
47f1ba: call 0x4810c0
47f1bf: mov r10, qword ptr [rbp - 0xf8]
47f1c6: mov r11, qword ptr [rbp - 0xf0]
47f1cd: nop dword ptr [rax]
47f1d0: mov qword ptr [rbp - 0xf0], r11
47f1d7: call r10
47f1da: mov r11, qword ptr [rbp - 0xf0]
47f1e1: mov r10, rax
47f1e4: cmp r12, 0x25
47f1e8: jbe 0x47ebc9
47f1ee: nop 
47f1f0: xor edx, edx
47f1f2: mov esi, r13d
47f1f5: mov rdi, r15
47f1f8: call 0x47e5c0
47f1fd: nop dword ptr [rax]
47f200: cmp qword ptr [rbp - 0xd0], 0
47f208: mov qword ptr [rbp - 0xd8], rbx
47f20f: jne 0x47ec00
47f215: mov qword ptr [rbp - 0xd0], rbx
47f21c: jmp 0x47ec00
47f221: nop dword ptr [rax]
47f228: mov rsi, qword ptr [rbp - 0x90]
47f22f: mov rax, qword ptr [rbx + 0x10]
47f233: add rax, qword ptr [r15]
47f236: mov qword ptr [rsi], rax
47f239: jmp 0x47ec00
47f23e: nop 
47f240: mov r9d, 1
47f246: cmp r12, 5
47f24a: jne 0x47eb3d
47f250: or r9d, 2
47f254: jmp 0x47eb4b
47f259: nop dword ptr [rax]
47f260: movzx esi, word ptr [rcx + 6]
47f264: movzx edx, byte ptr [rcx + 4]
47f268: cmp si, -0xf
47f26c: jne 0x47f134
47f272: xor r10d, r10d
47f275: jmp 0x47f137
47f27a: nop word ptr [rax + rax]
47f280: mov rsi, rdx
47f283: sub rsi, qword ptr [r11 + 0x3f8]
47f28a: lea rcx, [rcx + rsi*2]
47f28e: mov qword ptr [rdx], rcx
47f291: jmp 0x47e8b3
47f296: nop word ptr cs:[rax + rax]
47f2a0: mov rdx, qword ptr [rbx]
47f2a3: mov rax, qword ptr [r11]
47f2a6: add rbx, 0x18
47f2aa: add rax, qword ptr [rbx - 8]
47f2ae: mov qword ptr [rdx + r15], rax
47f2b2: cmp r12, rbx
47f2b5: jb 0x47e925
47f2bb: cmp dword ptr [rbx + 8], 0x25
47f2bf: je 0x47f2a0
47f2c1: add rbx, 0x18
47f2c5: cmp r12, rbx
47f2c8: jae 0x47f2bb
47f2ca: jmp 0x47e925
47f2cf: nop 
47f2d0: mov rax, r15
47f2d3: mov rcx, r12
47f2d6: movzx esi, word ptr [rcx + 6]
47f2da: mov r10, qword ptr [rcx + 8]
47f2de: and edx, 0xf
47f2e1: cmp si, -0xf
47f2e5: je 0x47fd70
47f2eb: cmp dl, 0xa
47f2ee: jne 0x47ed44
47f2f4: mov rdx, qword ptr [rax]
47f2f7: test si, si
47f2fa: je 0x47ed44
47f300: add r10, rdx
47f303: mov esi, dword ptr [rbp - 0xc4]
47f309: test esi, esi
47f30b: jne 0x47fddd
47f311: cmp r15, rax
47f314: je 0x47f374
47f316: movzx edx, byte ptr [rax + 0x31c]
47f31d: test dl, 3
47f320: je 0x47f374
47f322: and edx, 4
47f325: jne 0x47f374
47f327: mov rsi, qword ptr [r15 + 0x68]
47f32b: lea rdi, [rip + 0x2bd3c]
47f332: mov rdx, qword ptr [rip + 0x4072f]
47f339: mov qword ptr [rbp - 0x90], r10
47f340: mov r8, qword ptr [rax + 8]
47f344: mov rcx, qword ptr [r15 + 8]
47f348: mov rdx, qword ptr [rdx]
47f34b: mov r9d, dword ptr [r12]
47f34f: test rdx, rdx
47f352: cmove rdx, rdi
47f356: add r9, qword ptr [rsi + 8]
47f35a: mov edi, 2
47f35f: xor eax, eax
47f361: lea rsi, [rip + 0x2bc90]
47f368: call 0x4810c0
47f36d: mov r10, qword ptr [rbp - 0x90]
47f374: call r10
47f377: mov rax, qword ptr [rbx + 0x10]
47f37b: add rax, qword ptr [r15]
47f37e: jmp 0x47ed55
47f383: nop dword ptr [rax + rax]
47f388: mov rax, qword ptr [r15 + 0x290]
47f38f: test rax, rax
47f392: je 0x47e778
47f398: test r13d, r13d
47f39b: je 0x47e778
47f3a1: mov rdx, qword ptr [rax + 8]
47f3a5: mov rax, qword ptr [r15]
47f3a8: lea rbx, [rip + 0x51b1]
47f3af: mov qword ptr [rdx + rax], rbx
47f3b3: jmp 0x47e778
47f3b8: nop dword ptr [rax + rax]
47f3c0: mov rsi, qword ptr [rip + 0x41d51]
47f3c7: mov rdx, qword ptr [r15 + 0x468]
47f3ce: add rdx, qword ptr [r15]
47f3d1: neg rsi
47f3d4: mov rdi, rdx
47f3d7: add rax, rdx
47f3da: and rdi, rsi
47f3dd: and rax, rsi
47f3e0: cmp rdi, rax
47f3e3: je 0x47e978
47f3e9: sub rax, rdi
47f3ec: mov edx, 1
47f3f1: mov rsi, rax
47f3f4: call 0x451ca0
47f3f9: test eax, eax
47f3fb: jns 0x47e978
47f401: mov rax, 0xffffffffffffffc0
47f408: mov rsi, qword ptr [r15 + 8]
47f40c: lea rcx, [rip + 0x2be4d]
47f413: xor edx, edx
47f415: mov edi, dword ptr fs:[rax]
47f418: call 0x485060
47f41d: nop dword ptr [rax]
47f420: add rdx, qword ptr [r15]
47f423: mov qword ptr [r15 + 0x3f0], rdx
47f42a: lea rdx, [rax + 0x18]
47f42e: mov qword ptr [r15 + 0x3f8], rdx
47f435: jmp 0x47e736
47f43a: nop word ptr [rax + rax]
47f440: test byte ptr [rip + 0x4393b], 0x40
47f447: lea rdx, [rip + 0x3ff2]
47f44e: lea rcx, [rip + 0x40bb]
47f455: cmovne rdx, rcx
47f459: mov qword ptr [rax + 0x10], rdx
47f45d: jmp 0x47e763
47f462: add rdx, rsi
47f465: mov qword ptr [rbp - 0x68], rdx
47f469: jmp 0x47e827
47f46e: nop 
47f470: xor edi, edi
47f472: xor edx, edx
47f474: xor ecx, ecx
47f476: jmp 0x47e7d2
47f47b: nop dword ptr [rax + rax]
47f480: cmp r12, 0x24
47f484: jbe 0x47fa46
47f48a: mov ecx, dword ptr [r15 + 0x410]
47f491: xor r8d, r8d
47f494: cmp r8d, ecx
47f497: jne 0x47eb04
47f49d: mov rcx, qword ptr [r15 + 0x420]
47f4a4: mov r11, qword ptr [r15 + 0x418]
47f4ab: mov qword ptr [rbp - 0x78], rcx
47f4af: jmp 0x47ebb3
47f4b4: mov rax, qword ptr [rbp - 0x78]
47f4b8: mov r15, qword ptr [rax + 0x10]
47f4bc: mov rax, qword ptr [rbp - 0x90]
47f4c3: add r15, qword ptr [rbx + 0x10]
47f4c7: mov qword ptr [rax], r15
47f4ca: nop word ptr [rax + rax]
47f4d0: add rbx, 0x18
47f4d4: cmp qword ptr [rbp - 0x88], rbx
47f4db: ja 0x47efc8
47f4e1: mov r10, qword ptr [rbp - 0xa8]
47f4e8: mov r15, qword ptr [rbp - 0xa0]
47f4ef: test r10, r10
47f4f2: je 0x47e925
47f4f8: mov r13, qword ptr [rbp - 0xd0]
47f4ff: cmp r10, r13
47f502: ja 0x47e925
47f508: mov qword ptr [rbp - 0x88], r15
47f50f: mov rbx, r10
47f512: mov r15, r11
47f515: jmp 0x47f52d
47f517: nop word ptr [rax + rax]
47f520: add rbx, 0x18
47f524: cmp rbx, r13
47f527: ja 0x47ed67
47f52d: mov rax, qword ptr [rbx + 8]
47f531: cmp eax, 0x25
47f534: jne 0x47f520
47f536: shr rax, 0x20
47f53a: mov rsi, qword ptr [rbp - 0x98]
47f541: mov r14, qword ptr [rbp - 0x88]
47f548: lea rax, [rax + rax*2]
47f54c: add r14, qword ptr [rbx]
47f54f: lea r12, [rsi + rax*8]
47f553: mov qword ptr [rbp - 0x78], r12
47f557: movzx edx, byte ptr [r12 + 4]
47f55d: mov eax, edx
47f55f: shr al, 4
47f562: je 0x47f960
47f568: movzx eax, byte ptr [r12 + 5]
47f56e: and eax, 3
47f571: sub eax, 1
47f574: cmp eax, 1
47f577: jbe 0x47f960
47f57d: cmp r12, qword ptr [r15 + 0x408]
47f584: je 0x47fed7
47f58a: mov edi, dword ptr [r12]
47f58e: mov rsi, r15
47f591: lea rdx, [rbp - 0x78]
47f595: xor r9d, r9d
47f598: mov dword ptr [r15 + 0x410], 0
47f5a3: mov rcx, qword ptr [rbp - 0xb8]
47f5aa: xor r8d, r8d
47f5ad: mov qword ptr [r15 + 0x408], r12
47f5b4: add rdi, qword ptr [rbp - 0xc0]
47f5bb: push 0
47f5bd: push 9
47f5bf: call 0x47d3a0
47f5c4: mov rcx, qword ptr [rbp - 0x78]
47f5c8: mov qword ptr [r15 + 0x418], rax
47f5cf: mov qword ptr [r15 + 0x420], rcx
47f5d6: pop rsi
47f5d7: pop rdi
47f5d8: test rcx, rcx
47f5db: jne 0x47fd7e
47f5e1: mov edx, dword ptr [rbp - 0xc4]
47f5e7: mov rax, qword ptr [rbx + 0x10]
47f5eb: add rax, qword ptr [r15]
47f5ee: test edx, edx
47f5f0: jne 0x47f5f4
47f5f2: call rax
47f5f4: mov qword ptr [r14], rax
47f5f7: jmp 0x47f520
47f5fc: mov rax, qword ptr [rbp - 0x78]
47f600: mov r15, qword ptr [rax + 0x10]
47f604: mov rax, qword ptr [rbp - 0x90]
47f60b: add r15, qword ptr [rbx + 0x10]
47f60f: lea rsi, [rip + 0x2b8ba]
47f616: mov dword ptr [rax], r15d
47f619: mov eax, 0xffffffff
47f61e: cmp r15, rax
47f621: jbe 0x47f4d0
47f627: mov rax, qword ptr [r11 + 0x68]
47f62b: mov ecx, dword ptr [r14]
47f62e: mov edi, 2
47f633: mov qword ptr [rbp - 0x90], r11
47f63a: add rcx, qword ptr [rax + 8]
47f63e: mov rax, qword ptr [rip + 0x40423]
47f645: mov rdx, qword ptr [rax]
47f648: lea rax, [rip + 0x2ba1f]
47f64f: test rdx, rdx
47f652: cmove rdx, rax
47f656: xor eax, eax
47f658: call 0x4810c0
47f65d: mov r11, qword ptr [rbp - 0x90]
47f664: jmp 0x47f4d0
47f669: test r10, r10
47f66c: je 0x47f4d0
47f672: mov rax, qword ptr [r10 + 0x458]
47f679: mov rdi, qword ptr [rbp - 0x90]
47f680: mov qword ptr [rdi], rax
47f683: jmp 0x47f4d0
47f688: mov rax, qword ptr [rbp - 0x78]
47f68c: test rax, rax
47f68f: je 0x47f4d0
47f695: mov rdx, qword ptr [r10 + 0x450]
47f69c: lea rcx, [rdx + 1]
47f6a0: cmp rcx, 1
47f6a4: jbe 0x47ff4d
47f6aa: mov rax, qword ptr [rax + 8]
47f6ae: mov rdi, qword ptr [rbp - 0x90]
47f6b5: sub rax, rdx
47f6b8: add rax, qword ptr [rbx + 0x10]
47f6bc: mov qword ptr [rdi], rax
47f6bf: jmp 0x47f4d0
47f6c4: mov rdx, qword ptr [rbp - 0x78]
47f6c8: test rdx, rdx
47f6cb: je 0x47f4d0
47f6d1: mov rsi, qword ptr [rbp - 0x90]
47f6d8: mov rax, qword ptr [rbx + 0x10]
47f6dc: add rax, qword ptr [rdx + 8]
47f6e0: mov qword ptr [rsi], rax
47f6e3: jmp 0x47f4d0
47f6e8: mov rax, qword ptr [rbx + 0x10]
47f6ec: mov rsi, qword ptr [rbp - 0x90]
47f6f3: sub rax, rsi
47f6f6: add r15, rax
47f6f9: movsxd rax, r15d
47f6fc: mov dword ptr [rsi], r15d
47f6ff: cmp r15, rax
47f702: je 0x47f4d0
47f708: lea rsi, [rip + 0x2b801]
47f70f: jmp 0x47f627
47f714: mov r9d, dword ptr [rbp - 0xc4]
47f71b: mov rax, qword ptr [rbx + 0x10]
47f71f: add rax, qword ptr [r11]
47f722: test r9d, r9d
47f725: jne 0x47f737
47f727: mov qword ptr [rbp - 0xd8], r11
47f72e: call rax
47f730: mov r11, qword ptr [rbp - 0xd8]
47f737: mov rsi, qword ptr [rbp - 0x90]
47f73e: mov qword ptr [rsi], rax
47f741: jmp 0x47f4d0
47f746: mov r12, qword ptr [rbp - 0x78]
47f74a: test r12, r12
47f74d: je 0x47f4d0
47f753: mov rax, qword ptr [r12 + 0x10]
47f758: cmp qword ptr [r14 + 0x10], rax
47f75c: mov rsi, r15
47f75f: mov qword ptr [rbp - 0xd8], r11
47f766: cmovbe rax, qword ptr [r14 + 0x10]
47f76b: mov rdi, qword ptr [rbp - 0x90]
47f772: mov rdx, rax
47f775: call 0x401060
47f77a: mov rax, qword ptr [r14 + 0x10]
47f77e: cmp qword ptr [r12 + 0x10], rax
47f783: mov r11, qword ptr [rbp - 0xd8]
47f78a: ja 0x47f7a2
47f78c: jae 0x47f4d0
47f792: mov r10d, dword ptr [rip + 0x440a7]
47f799: test r10d, r10d
47f79c: je 0x47f4d0
47f7a2: lea rsi, [rip + 0x2b7a7]
47f7a9: jmp 0x47f627
47f7ae: nop 
47f7b0: mov rax, qword ptr [rbp - 0x78]
47f7b4: test rax, rax
47f7b7: je 0x47fde9
47f7bd: mov rdx, qword ptr [r10 + 0x450]
47f7c4: lea rcx, [rdx + 1]
47f7c8: cmp rcx, 1
47f7cc: jbe 0x47ff19
47f7d2: mov rax, qword ptr [rax + 8]
47f7d6: mov rsi, qword ptr [rbp - 0x90]
47f7dd: sub rax, rdx
47f7e0: add rax, qword ptr [rbx + 0x10]
47f7e4: mov qword ptr [rsi + 8], rax
47f7e8: lea rax, [rip + 0x4d41]
47f7ef: mov qword ptr [rsi], rax
47f7f2: jmp 0x47f4d0
47f7f7: nop word ptr [rax + rax]
47f800: cmp qword ptr [rbp - 0xa8], 0
47f808: mov qword ptr [rbp - 0xd0], rbx
47f80f: jne 0x47f4d0
47f815: mov qword ptr [rbp - 0xa8], rbx
47f81c: jmp 0x47f4d0
47f821: nop dword ptr [rax]
47f828: mov rcx, r14
47f82b: mov r10, r11
47f82e: movzx esi, word ptr [rcx + 6]
47f832: cmp si, -0xf
47f836: je 0x47f952
47f83c: mov r15, qword ptr [r10]
47f83f: and edx, 0xf
47f842: add r15, qword ptr [rcx + 8]
47f846: cmp dl, 0xa
47f849: jne 0x47f0fc
47f84f: mov eax, dword ptr [rbp - 0xc4]
47f855: test eax, eax
47f857: jne 0x47f0fc
47f85d: test si, si
47f860: je 0x47f0fc
47f866: cmp r11, r10
47f869: je 0x47f8d5
47f86b: movzx eax, byte ptr [r10 + 0x31c]
47f873: test al, 3
47f875: je 0x47f8d5
47f877: test al, 4
47f879: jne 0x47f8d5
47f87b: mov rax, qword ptr [r11 + 0x68]
47f87f: lea rdi, [rip + 0x2b7e8]
47f886: mov rdx, qword ptr [rip + 0x401db]
47f88d: lea rsi, [rip + 0x2b764]
47f894: mov rcx, qword ptr [r11 + 8]
47f898: mov r8, qword ptr [r10 + 8]
47f89c: mov qword ptr [rbp - 0xf0], r11
47f8a3: mov rdx, qword ptr [rdx]
47f8a6: mov r9d, dword ptr [r14]
47f8a9: mov qword ptr [rbp - 0xd8], r10
47f8b0: test rdx, rdx
47f8b3: cmove rdx, rdi
47f8b7: add r9, qword ptr [rax + 8]
47f8bb: mov edi, 2
47f8c0: xor eax, eax
47f8c2: call 0x4810c0
47f8c7: mov r11, qword ptr [rbp - 0xf0]
47f8ce: mov r10, qword ptr [rbp - 0xd8]
47f8d5: mov qword ptr [rbp - 0xf0], r11
47f8dc: mov qword ptr [rbp - 0xd8], r10
47f8e3: call r15
47f8e6: mov r11, qword ptr [rbp - 0xf0]
47f8ed: mov r10, qword ptr [rbp - 0xd8]
47f8f4: mov r15, rax
47f8f7: jmp 0x47f0fc
47f8fc: nop dword ptr [rax]
47f900: mov rdi, qword ptr [rbp - 0x90]
47f907: mov rax, qword ptr [rbx + 0x10]
47f90b: add rax, qword ptr [r11]
47f90e: mov qword ptr [rdi], rax
47f911: jmp 0x47f4d0
47f916: nop word ptr cs:[rax + rax]
47f920: mov r9d, 1
47f926: cmp r12, 5
47f92a: jne 0x47f08b
47f930: or r9d, 2
47f934: jmp 0x47f099
47f939: nop dword ptr [rax]
47f940: movzx esi, word ptr [rcx + 6]
47f944: movzx edx, byte ptr [rcx + 4]
47f948: cmp si, -0xf
47f94c: jne 0x47f83c
47f952: xor r15d, r15d
47f955: jmp 0x47f83f
47f95a: nop word ptr [rax + rax]
47f960: mov rax, r15
47f963: mov rcx, r12
47f966: movzx esi, word ptr [rcx + 6]
47f96a: mov r10, qword ptr [rcx + 8]
47f96e: and edx, 0xf
47f971: cmp si, -0xf
47f975: je 0x47fe7a
47f97b: cmp dl, 0xa
47f97e: jne 0x47f5e1
47f984: mov rdx, qword ptr [rax]
47f987: test si, si
47f98a: je 0x47f5e1
47f990: add r10, rdx
47f993: mov ecx, dword ptr [rbp - 0xc4]
47f999: test ecx, ecx
47f99b: jne 0x47ff91
47f9a1: cmp r15, rax
47f9a4: je 0x47fa04
47f9a6: movzx edx, byte ptr [rax + 0x31c]
47f9ad: test dl, 3
47f9b0: je 0x47fa04
47f9b2: and edx, 4
47f9b5: jne 0x47fa04
47f9b7: mov rsi, qword ptr [r15 + 0x68]
47f9bb: lea rdi, [rip + 0x2b6ac]
47f9c2: mov rdx, qword ptr [rip + 0x4009f]
47f9c9: mov qword ptr [rbp - 0x90], r10
47f9d0: mov r8, qword ptr [rax + 8]
47f9d4: mov rcx, qword ptr [r15 + 8]
47f9d8: mov rdx, qword ptr [rdx]
47f9db: mov r9d, dword ptr [r12]
47f9df: test rdx, rdx
47f9e2: cmove rdx, rdi
47f9e6: add r9, qword ptr [rsi + 8]
47f9ea: mov edi, 2
47f9ef: xor eax, eax
47f9f1: lea rsi, [rip + 0x2b600]
47f9f8: call 0x4810c0
47f9fd: mov r10, qword ptr [rbp - 0x90]
47fa04: call r10
47fa07: mov rax, qword ptr [rbx + 0x10]
47fa0b: add rax, qword ptr [r15]
47fa0e: jmp 0x47f5f2
47fa13: nop dword ptr [rax + rax]
47fa18: movzx edx, byte ptr [rcx + 4]
47fa1c: jmp 0x47f2d6
47fa21: nop dword ptr [rax]
47fa28: mov rax, qword ptr [rbx + 0x10]
47fa2c: mov rdi, qword ptr [rbp - 0x90]
47fa33: mov qword ptr [rdi + 8], rax
47fa37: lea rax, [rip + 0x4b02]
47fa3e: mov qword ptr [rdi], rax
47fa41: jmp 0x47ec00
47fa46: movabs rax, 0x1000070080
47fa50: mov ecx, r13d
47fa53: xor r8d, r8d
47fa56: shr rax, cl
47fa59: mov ecx, dword ptr [r15 + 0x410]
47fa60: not rax
47fa63: and eax, 1
47fa66: cmp al, 1
47fa68: mov edx, eax
47fa6a: setb r8b
47fa6e: shl edx, 0x1f
47fa71: shl eax, 0x1f
47fa74: sar edx, 0x1f
47fa77: sar eax, 0x1f
47fa7a: add edx, 5
47fa7d: add eax, 3
47fa80: cmp r12, 5
47fa84: je 0x47fa9d
47fa86: cmp r12, 6
47fa8a: jne 0x47f494
47fa90: cmp edx, ecx
47fa92: jne 0x47eb18
47fa98: jmp 0x47f49d
47fa9d: cmp eax, ecx
47fa9f: jne 0x47eb18
47faa5: jmp 0x47f49d
47faaa: cmp r12, 0x24
47faae: ja 0x47fdb5
47fab4: movabs rax, 0x1000070080
47fabe: mov ecx, r13d
47fac1: xor esi, esi
47fac3: shr rax, cl
47fac6: mov ecx, dword ptr [r11 + 0x410]
47facd: not rax
47fad0: and eax, 1
47fad3: cmp al, 1
47fad5: mov edx, eax
47fad7: setb sil
47fadb: shl edx, 0x1f
47fade: shl eax, 0x1f
47fae1: sar edx, 0x1f
47fae4: sar eax, 0x1f
47fae7: add edx, 5
47faea: add eax, 3
47faed: cmp r12, 5
47faf1: je 0x47feca
47faf7: cmp r12, 6
47fafb: jne 0x47fdbe
47fb01: cmp edx, ecx
47fb03: jne 0x47f066
47fb09: jmp 0x47fdc6
47fb0e: movzx edx, word ptr [r15 + 0x2b8]
47fb16: mov rcx, qword ptr [r15 + 0x2a8]
47fb1d: lea rax, [rdx*8]
47fb25: sub rax, rdx
47fb28: lea rax, [rcx + rax*8]
47fb2c: cmp rcx, rax
47fb2f: jae 0x47ff81
47fb35: xor eax, eax
47fb37: mov dword ptr [rbp - 0x88], r13d
47fb3e: mov rbx, rcx
47fb41: mov r13, r15
47fb44: mov dword ptr [rbp - 0x90], r12d
47fb4b: mov r12, rax
47fb4e: movabs r14, 0x2ffffffff
47fb58: jmp 0x47fb7c
47fb5a: nop word ptr [rax + rax]
47fb60: lea rax, [rdx*8]
47fb68: add rbx, 0x38
47fb6c: sub rax, rdx
47fb6f: lea rax, [rcx + rax*8]
47fb73: cmp rbx, rax
47fb76: jae 0x47fc5d
47fb7c: mov rax, qword ptr [rbx]
47fb7f: and rax, r14
47fb82: cmp rax, 1
47fb86: jne 0x47fb60
47fb88: mov rax, rsp
47fb8b: cmp rsp, rax
47fb8e: je 0x47fba5
47fb90: sub rsp, 0x1000
47fb97: or qword ptr [rsp + 0xff8], 0
47fba0: cmp rsp, rax
47fba3: jne 0x47fb90
47fba5: sub rsp, 0x30
47fba9: or qword ptr [rsp + 0x28], 0
47fbaf: mov rax, qword ptr [rip + 0x41562]
47fbb6: mov rcx, qword ptr [rbx + 0x10]
47fbba: mov rdx, rax
47fbbd: neg rdx
47fbc0: lea rax, [rcx + rax - 1]
47fbc5: add rax, qword ptr [rbx + 0x28]
47fbc9: mov rdi, rcx
47fbcc: mov rsi, rax
47fbcf: and rdi, rdx
47fbd2: lea r9, [rsp + 0xf]
47fbd7: and rsi, rdx
47fbda: and r9, 0xfffffffffffffff0
47fbde: sub rsi, rdi
47fbe1: add rdi, qword ptr [r13]
47fbe5: mov dword ptr [r9 + 0x10], 0
47fbed: mov eax, dword ptr [rbx + 4]
47fbf0: mov r15, r9
47fbf3: mov qword ptr [r9 + 8], rsi
47fbf7: mov qword ptr [r9], rdi
47fbfa: test al, 4
47fbfc: je 0x47fc54
47fbfe: mov dword ptr [r9 + 0x10], 1
47fc06: mov edx, 3
47fc0b: mov ecx, 1
47fc10: test al, 2
47fc12: je 0x47fc1a
47fc14: mov dword ptr [r15 + 0x10], edx
47fc18: mov ecx, edx
47fc1a: test al, 1
47fc1c: je 0x47fc2c
47fc1e: mov eax, ecx
47fc20: or ecx, 6
47fc23: or eax, 4
47fc26: mov edx, ecx
47fc28: mov dword ptr [r15 + 0x10], eax
47fc2c: call 0x451ca0
47fc31: test eax, eax
47fc33: js 0x47ffc8
47fc39: mov qword ptr [r15 + 0x18], r12
47fc3d: mov rcx, qword ptr [r13 + 0x2a8]
47fc44: mov r12, r15
47fc47: movzx edx, word ptr [r13 + 0x2b8]
47fc4f: jmp 0x47fb60
47fc54: mov edx, 2
47fc59: xor ecx, ecx
47fc5b: jmp 0x47fc10
47fc5d: mov qword ptr [rbp - 0xe8], r12
47fc64: mov r15, r13
47fc67: mov r12d, dword ptr [rbp - 0x90]
47fc6e: mov r13d, dword ptr [rbp - 0x88]
47fc75: jmp 0x47e6ff
47fc7a: test r13d, r13d
47fc7d: lea rdx, [rip + 0x2b3e2]
47fc84: lea rax, [rip + 0x2bd8a]
47fc8b: cmove rdx, rax
47fc8f: mov rsi, qword ptr [r15 + 8]
47fc93: cmp byte ptr [rsi], 0
47fc96: je 0x47fd98
47fc9c: lea rdi, [rip + 0x2b3e2]
47fca3: xor eax, eax
47fca5: call 0x480f60
47fcaa: jmp 0x47e6e8
47fcaf: mov edx, 1
47fcb4: mov rdi, r11
47fcb7: call 0x47e5c0
47fcbc: mov rbx, qword ptr [rbp - 0xe8]
47fcc3: mov edx, dword ptr [rbx + 0x10]
47fcc6: mov rsi, qword ptr [rbx + 8]
47fcca: mov rdi, qword ptr [rbx]
47fccd: call 0x451ca0
47fcd2: test eax, eax
47fcd4: js 0x47ffe7
47fcda: mov rbx, qword ptr [rbx + 0x18]
47fcde: test rbx, rbx
47fce1: je 0x47e968
47fce7: jmp 0x47fcc3
47fce9: mov rax, qword ptr [r11 + 0x50]
47fced: test rax, rax
47fcf0: je 0x47e952
47fcf6: mov rdx, qword ptr [r11 + 0xe0]
47fcfd: xor ecx, ecx
47fcff: mov rax, qword ptr [rax + 8]
47fd03: mov edi, 0x20
47fd08: cmp qword ptr [rdx + 8], 7
47fd0d: sete cl
47fd10: xor edx, edx
47fd12: lea rcx, [rcx*8 + 0x10]
47fd1a: div rcx
47fd1d: mov rsi, rax
47fd20: call 0x427d10
47fd25: mov qword ptr [r15 + 0x338], rax
47fd2c: test rax, rax
47fd2f: jne 0x47e952
47fd35: mov rax, qword ptr [rip + 0x3fd2c]
47fd3c: mov rcx, qword ptr [r15 + 8]
47fd40: mov rdx, qword ptr [rax]
47fd43: test rdx, rdx
47fd46: je 0x47ffbc
47fd4c: mov edi, 2
47fd51: lea rsi, [rip + 0x2b2d8]
47fd58: xor eax, eax
47fd5a: call 0x4810c0
47fd5f: mov edi, 0x7f
47fd64: call 0x4505c0
47fd69: nop dword ptr [rax]
47fd70: cmp dl, 0xa
47fd73: jne 0x47ed44
47fd79: jmp 0x47f303
47fd7e: movzx edx, byte ptr [rcx + 4]
47fd82: jmp 0x47f966
47fd87: xor edx, edx
47fd89: mov esi, r13d
47fd8c: mov rdi, r11
47fd8f: call 0x47e5c0
47fd94: nop dword ptr [rax]
47fd98: mov rax, qword ptr [rip + 0x3fcc9]
47fd9f: mov rsi, qword ptr [rax]
47fda2: lea rax, [rip + 0x2a586]
47fda9: test rsi, rsi
47fdac: cmove rsi, rax
47fdb0: jmp 0x47fc9c
47fdb5: mov ecx, dword ptr [r11 + 0x410]
47fdbc: xor esi, esi
47fdbe: cmp esi, ecx
47fdc0: jne 0x47f052
47fdc6: mov rcx, qword ptr [r11 + 0x420]
47fdcd: mov r10, qword ptr [r11 + 0x418]
47fdd4: mov qword ptr [rbp - 0x78], rcx
47fdd8: jmp 0x47f0f0
47fddd: mov rax, qword ptr [rbx + 0x10]
47fde1: add rax, qword ptr [r15]
47fde4: jmp 0x47ed57
47fde9: mov rax, qword ptr [rbx + 0x10]
47fded: mov rsi, qword ptr [rbp - 0x90]
47fdf4: mov qword ptr [rsi + 8], rax
47fdf8: lea rax, [rip + 0x4741]
47fdff: mov qword ptr [rsi], rax
47fe02: jmp 0x47f4d0
47fe07: mov r10d, dword ptr [r15 + 0x410]
47fe0e: test r10d, r10d
47fe11: jne 0x47eccc
47fe17: mov rcx, qword ptr [r15 + 0x420]
47fe1e: mov rax, qword ptr [r15 + 0x418]
47fe25: mov qword ptr [rbp - 0x78], rcx
47fe29: jmp 0x47ed3b
47fe2e: mov rdi, r11
47fe31: mov qword ptr [rbp - 0xf0], r11
47fe38: call 0x47e450
47fe3d: mov r11, qword ptr [rbp - 0xf0]
47fe44: mov rax, qword ptr [rbp - 0x78]
47fe48: mov rdx, qword ptr [r11 + 0x450]
47fe4f: jmp 0x47ee7a
47fe54: mov rdi, r11
47fe57: mov qword ptr [rbp - 0xf0], r11
47fe5e: call 0x47e450
47fe63: mov r11, qword ptr [rbp - 0xf0]
47fe6a: mov rax, qword ptr [rbp - 0x78]
47fe6e: mov rdx, qword ptr [r11 + 0x450]
47fe75: jmp 0x47ee12
47fe7a: cmp dl, 0xa
47fe7d: jne 0x47f5e1
47fe83: jmp 0x47f993
47fe88: mov edx, dword ptr [rip + 0x42ef2]
47fe8e: test dl, 4
47fe91: je 0x47fefe
47fe93: lea rbx, [rip + 0x2a26]
47fe9a: mov qword ptr [rax + 0x10], rbx
47fe9e: mov rdi, qword ptr [rip + 0x4392b]
47fea5: test rdi, rdi
47fea8: je 0x47e763
47feae: mov rsi, r15
47feb1: call 0x481160
47feb6: test eax, eax
47feb8: je 0x47e763
47febe: mov qword ptr [rip + 0x4398b], r15
47fec5: jmp 0x47e763
47feca: cmp eax, ecx
47fecc: jne 0x47f066
47fed2: jmp 0x47fdc6
47fed7: mov r8d, dword ptr [r15 + 0x410]
47fede: test r8d, r8d
47fee1: jne 0x47f58a
47fee7: mov rcx, qword ptr [r15 + 0x420]
47feee: mov rax, qword ptr [r15 + 0x418]
47fef5: mov qword ptr [rbp - 0x78], rcx
47fef9: jmp 0x47f5d8
47fefe: and edx, 1
47ff01: lea rcx, [rip + 0x32b8]
47ff08: lea rdx, [rip + 0x2e31]
47ff0f: cmove rdx, rcx
47ff13: mov qword ptr [rax + 0x10], rdx
47ff17: jmp 0x47fe9e
47ff19: mov rdi, r10
47ff1c: mov qword ptr [rbp - 0xf0], r11
47ff23: mov qword ptr [rbp - 0xd8], r10
47ff2a: call 0x47e450
47ff2f: mov r10, qword ptr [rbp - 0xd8]
47ff36: mov rax, qword ptr [rbp - 0x78]
47ff3a: mov r11, qword ptr [rbp - 0xf0]
47ff41: mov rdx, qword ptr [r10 + 0x450]
47ff48: jmp 0x47f7d2
47ff4d: mov rdi, r10
47ff50: mov qword ptr [rbp - 0xf0], r11
47ff57: mov qword ptr [rbp - 0xd8], r10
47ff5e: call 0x47e450
47ff63: mov r10, qword ptr [rbp - 0xd8]
47ff6a: mov rax, qword ptr [rbp - 0x78]
47ff6e: mov r11, qword ptr [rbp - 0xf0]
47ff75: mov rdx, qword ptr [r10 + 0x450]
47ff7c: jmp 0x47f6aa
47ff81: mov qword ptr [rbp - 0xe8], 0
47ff8c: jmp 0x47e6ff
47ff91: mov rax, qword ptr [rbx + 0x10]
47ff95: add rax, qword ptr [r15]
47ff98: jmp 0x47f5f4
47ff9d: lea rcx, [rip + 0x2b2fc]
47ffa4: mov edx, 0x21d
47ffa9: lea rsi, [rip + 0x2aff0]
47ffb0: lea rdi, [rip + 0x2b009]
47ffb7: call 0x4032a0
47ffbc: lea rdx, [rip + 0x2b0ab]
47ffc3: jmp 0x47fd4c
47ffc8: mov r15, r13
47ffcb: lea rcx, [rip + 0x2aea6]
47ffd2: mov rax, 0xffffffffffffffc0
47ffd9: mov rsi, qword ptr [r15 + 8]
47ffdd: xor edx, edx
47ffdf: mov edi, dword ptr fs:[rax]
47ffe2: call 0x485060
47ffe7: lea rcx, [rip + 0x2aeba]
47ffee: jmp 0x47ffd2
47fff0: endbr64 
47fff4: push rbp
47fff5: mov rbp, rsp
47fff8: push r15
47fffa: mov r15, rdi
47fffd: push r14
47ffff: lea rax, [rbp - 0x38]
480003: push r13
480005: push r12
480007: push rbx
480008: sub rsp, 0x88
48000f: mov qword ptr [rbp - 0x60], rdi
480013: mov edi, 0xb
480018: mov qword ptr [rbp - 0x68], rsi
48001c: mov rsi, rax
48001f: mov qword ptr [rbp - 0x58], rdx
480023: xor edx, edx
480025: mov qword ptr [rbp - 0x80], rax
480029: mov qword ptr [rbp - 0x70], rcx
48002d: call 0x454ed0
480032: mov rbx, qword ptr [rbp - 0x38]
480036: mov rax, qword ptr [rip + 0x42ccb]
48003d: xor edx, edx
48003f: test r15, r15
480042: mov qword ptr [rbp - 0x50], rax
480046: setne dl
480049: and rax, rbx
48004c: mov qword ptr [rbp - 0x78], rbx
480050: mov r8, rax
480053: je 0x4808c8
480059: xor ecx, ecx
48005b: mov esi, 1
480060: bt r8, rcx
480064: lea r12, [rdx + 1]
480068: jae 0x480074
48006a: lea rax, [rdx + 2]
48006e: mov rdx, r12
480071: mov r12, rax
480074: add rcx, 1
480078: mov rax, rsi
48007b: shl rax, cl
48007e: neg rax
480081: test rax, r8
480084: jne 0x480060
480086: mov rax, qword ptr [rip + 0x43773]
48008d: test rax, rax
480090: je 0x480793
480096: movzx r15d, word ptr [rax + 0x2b8]
48009e: mov rsi, qword ptr [rax + 0x2a8]
4800a5: test r15, r15
4800a8: je 0x480697
4800ae: mov qword ptr [rbp - 0x48], r8
4800b2: xor ebx, ebx
4800b4: mov r8, rax
4800b7: jmp 0x4800d1
4800b9: nop dword ptr [rax]
4800c0: add rbx, 1
4800c4: add rsi, 0x38
4800c8: cmp r15, rbx
4800cb: je 0x480693
4800d1: cmp dword ptr [rsi], 4
4800d4: jne 0x4800c0
4800d6: mov r14, qword ptr [rsi + 0x30]
4800da: cmp r14, 3
4800de: jbe 0x480688
4800e4: lea rax, [r14 - 4]
4800e8: test rax, -5
4800ee: jne 0x4800c0
4800f0: mov rdi, qword ptr [rsi + 0x28]
4800f4: mov rdx, qword ptr [r8]
4800f7: add rdx, qword ptr [rsi + 0x10]
4800fb: cmp rdi, 0xc
4800ff: jbe 0x4800c0
480101: mov rcx, r14
480104: mov r9d, 0xc
48010a: lea r11, [r14 + 0xb]
48010e: neg rcx
480111: lea r10, [r14 - 1]
480115: sub r9, rdx
480118: jmp 0x48013b
48011a: nop word ptr [rax + rax]
480120: add rax, r11
480123: add r13, r10
480126: and rax, rcx
480129: add rax, r13
48012c: and rax, rcx
48012f: add rdx, rax
480132: lea rax, [rdx + r9]
480136: cmp rax, rdi
480139: jae 0x4800c0
48013b: cmp dword ptr [rdx + 8], 2
48013f: mov eax, dword ptr [rdx]
480141: mov r13d, dword ptr [rdx + 4]
480145: jne 0x480120
480147: cmp eax, 4
48014a: jne 0x480120
48014c: cmp dword ptr [rdx + 0xc], 0x554e47
480153: jne 0x480120
480155: cmp r13d, 0xa
480159: jbe 0x480120
48015b: lea rax, [r14 + 0xf]
48015f: mov rbx, rsp
480162: mov r8, qword ptr [rbp - 0x48]
480166: and rax, rcx
480169: add rax, rdx
48016c: mov ecx, dword ptr [rax]
48016e: lea r15, [rax + 8]
480172: add r12, rcx
480175: mov rcx, r12
480178: shl rcx, 4
48017c: add rcx, 0x10
480180: mov rsi, rcx
480183: and rsi, 0xfffffffffffff000
48018a: sub rbx, rsi
48018d: mov rsi, rbx
480190: cmp rsp, rsi
480193: je 0x4801aa
480195: sub rsp, 0x1000
48019c: or qword ptr [rsp + 0xff8], 0
4801a5: cmp rsp, rsi
4801a8: jne 0x480195
4801aa: and ecx, 0xfff
4801b0: sub rsp, rcx
4801b3: test rcx, rcx
4801b6: je 0x4801be
4801b8: or qword ptr [rsp + rcx - 8], 0
4801be: mov eax, dword ptr [rax + 4]
4801c1: mov rsi, qword ptr [rbp - 0x80]
4801c5: mov edi, 0xb
4801ca: mov qword ptr [rbp - 0x88], r8
4801d1: lea r14, [rsp + 0xf]
4801d6: mov dword ptr [rbp - 0x48], eax
4801d9: mov rcx, rax
4801dc: mov rax, qword ptr [rbp - 0x50]
4801e0: and r14, 0xfffffffffffffff0
4801e4: shl rcx, 0x34
4801e8: mov rbx, r14
4801eb: or rax, rcx
4801ee: or rcx, qword ptr [rbp - 0x78]
4801f2: mov qword ptr [rip + 0x42b0f], rax
4801f9: mov qword ptr [rbp - 0x38], rcx
4801fd: call 0x4548d0
480202: lea rax, [r15 + r13 - 8]
480207: xor r13d, r13d
48020a: mov r8, qword ptr [rbp - 0x88]
480211: cmp r15, rax
480214: jae 0x4808ed
48021a: mov qword ptr [rbp - 0x78], r14
48021e: mov qword ptr [rbp - 0x80], r8
480222: mov qword ptr [rbp - 0x50], r12
480226: mov r12, r13
480229: mov r13, r15
48022c: mov r15, rax
48022f: nop 
480230: lea rbx, [r13 + 1]
480234: mov rdi, rbx
480237: call 0x401180
48023c: movzx ecx, byte ptr [r13]
480241: mov r9, r12
480244: mov edx, 1
480249: shl r9, 4
48024d: lea r10, [r12 + 1]
480252: lea rdi, [r14 + r9]
480256: shl edx, cl
480258: test dword ptr [rbp - 0x48], edx
48025b: je 0x4808d1
480261: mov qword ptr [rdi], rbx
480264: lea rcx, [r12 + 2]
480269: mov r12, r10
48026c: mov qword ptr [rdi + 8], rax
480270: lea rdi, [r14 + r9 + 0x10]
480275: lea r13, [rbx + rax + 1]
48027a: cmp r13, r15
48027d: jb 0x480230
48027f: mov r8, qword ptr [rbp - 0x80]
480283: mov r13, r12
480286: mov rbx, qword ptr [rbp - 0x78]
48028a: mov rax, rdi
48028d: mov r12, qword ptr [rbp - 0x50]
480291: test r8, r8
480294: jne 0x4806ff
48029a: mov rsi, qword ptr [rbp - 0x60]
48029e: test rsi, rsi
4802a1: je 0x4802bc
4802a3: mov qword ptr [rax], rsi
4802a6: mov rsi, qword ptr [rbp - 0x68]
4802aa: mov qword ptr [rax + 8], rsi
4802ae: mov rax, rcx
4802b1: add rcx, 1
4802b5: shl rax, 4
4802b9: add rax, rbx
4802bc: lea rsi, [rip + 0x2aff7]
4802c3: mov qword ptr [rax + 8], 3
4802cb: mov qword ptr [rax], rsi
4802ce: cmp r12, rcx
4802d1: jne 0x4808fa
4802d7: mov rax, qword ptr [rbx + 8]
4802db: mov qword ptr [rbp - 0x48], rax
4802df: cmp r12, 1
4802e3: je 0x48080e
4802e9: mov rcx, rax
4802ec: mov rax, r12
4802ef: shl rax, 4
4802f3: lea rdx, [rbx + rax - 0x10]
4802f8: mov qword ptr [rbp - 0x98], rax
4802ff: mov rax, qword ptr [rdx + 8]
480303: mov qword ptr [rbp - 0x50], rax
480307: lea rax, [rax + rcx + 2]
48030c: cmp r12, 2
480310: jbe 0x480843
480316: lea rsi, [r12 - 3]
48031b: lea rcx, [rax + rax]
48031f: cmp rsi, 3
480323: jbe 0x4808de
480329: mov rdi, rsi
48032c: movdqa xmm2, xmmword ptr [rip + 0x2afec]
480334: mov rax, rbx
480337: pxor xmm1, xmm1
48033b: shr rdi, 1
48033e: shl rdi, 5
480342: add rdi, rbx
480345: nop dword ptr [rax]
480348: movdqu xmm0, xmmword ptr [rax + 0x18]
48034d: movdqu xmm3, xmmword ptr [rax + 0x28]
480352: add rax, 0x20
480356: punpcklqdq xmm0, xmm3
48035a: paddq xmm0, xmm2
48035e: paddq xmm1, xmm0
480362: cmp rdi, rax
480365: jne 0x480348
480367: movdqa xmm0, xmm1
48036b: and rsi, 0xfffffffffffffffe
48036f: psrldq xmm0, 8
480374: lea rdi, [rsi + 2]
480378: add rsi, 1
48037c: paddq xmm1, xmm0
480380: movq rax, xmm1
480385: add rcx, rax
480388: shl rsi, 4
48038c: mov rax, qword ptr [rbx + rsi + 8]
480391: lea rsi, [rdi + 1]
480395: lea rax, [rcx + rax + 1]
48039a: cmp rsi, r12
48039d: jae 0x4808b4
4803a3: mov rcx, rdi
4803a6: shl rcx, 4
4803aa: mov rcx, qword ptr [rbx + rcx + 8]
4803af: lea rax, [rax + rcx + 1]
4803b4: lea rcx, [rdi + 2]
4803b8: cmp r12, rcx
4803bb: jbe 0x4803e2
4803bd: shl rsi, 4
4803c1: add rdi, 3
4803c5: mov rsi, qword ptr [rbx + rsi + 8]
4803ca: lea rax, [rax + rsi + 1]
4803cf: cmp r12, rdi
4803d2: jbe 0x4803e2
4803d4: shl rcx, 4
4803d8: mov rcx, qword ptr [rbx + rcx + 8]
4803dd: lea rax, [rax + rcx + 1]
4803e2: cmp r12, 0x3f
4803e6: ja 0x48082e
4803ec: mov ecx, 0x43
4803f1: lea rdi, [rax + 0x80]
4803f8: mov esi, r12d
4803fb: sub ecx, r12d
4803fe: shr rdi, cl
480401: test rdi, rdi
480404: jne 0x48082e
48040a: lea ecx, [rsi - 3]
48040d: shl rax, cl
480410: mov r8d, 1
480416: mov ecx, esi
480418: mov qword ptr [rbp - 0x68], rdx
48041c: mov edi, r8d
48041f: mov dword ptr [rbp - 0x60], esi
480422: shl edi, cl
480424: mov rcx, qword ptr [rbp - 0x58]
480428: mov dword ptr [rbp - 0x8c], edi
48042e: movsxd rdi, edi
480431: mov qword ptr [rcx], rdi
480434: mov r13, rdi
480437: shl r13, 4
48043b: mov qword ptr [rbp - 0x88], rdi
480442: lea rdi, [r13 + rax]
480447: call 0x426410
48044c: mov esi, dword ptr [rbp - 0x60]
48044f: mov rdx, qword ptr [rbp - 0x68]
480453: mov r8d, 1
480459: test rax, rax
48045c: mov r14, rax
48045f: je 0x48082e
480465: lea eax, [rsi - 1]
480468: lea rdi, [r14 + r13]
48046c: mov ecx, eax
48046e: mov dword ptr [rbp - 0x78], eax
480471: mov eax, 1
480476: shl r8d, cl
480479: mov ecx, esi
48047b: mov qword ptr [r14], rdi
48047e: shl rax, cl
480481: mov qword ptr [r14 + 0x10], rdi
480485: mov dword ptr [rbp - 0x68], r8d
480489: mov qword ptr [rbp - 0x80], rax
48048d: cmp r12, 2
480491: je 0x48084b
480497: mov rax, qword ptr [rdx]
48049a: lea rsi, [r12 - 2]
48049f: movsxd r15, dword ptr [rbp - 0x68]
4804a3: mov qword ptr [rbp - 0xa8], r14
4804aa: mov qword ptr [rbp - 0x60], rsi
4804ae: mov r13d, 1
4804b4: mov qword ptr [rbp - 0x58], rax
4804b8: mov rax, qword ptr [rbx]
4804bb: mov qword ptr [rbp - 0xa0], r12
4804c2: mov r12, r15
4804c5: mov r15, rax
4804c8: nop dword ptr [rax + rax]
4804d0: mov rdx, qword ptr [rbp - 0x50]
4804d4: mov rsi, qword ptr [rbp - 0x58]
4804d8: sub r12, 2
4804dc: call 0x401150
4804e1: mov r14, qword ptr [rbp - 0x60]
4804e5: mov rdi, rax
4804e8: mov byte ptr [rax], 0x2f
4804eb: add rdi, 1
4804ef: jmp 0x4804fe
4804f1: nop dword ptr [rax]
4804f8: sub r14, 1
4804fc: je 0x48052f
4804fe: mov eax, r13d
480501: mov ecx, r14d
480504: shl eax, cl
480506: cdqe 
480508: test rax, r12
48050b: je 0x4804f8
48050d: mov rax, r14
480510: shl rax, 4
480514: mov rdx, qword ptr [rbx + rax + 8]
480519: mov rsi, qword ptr [rbx + rax]
48051d: call 0x401150
480522: mov byte ptr [rax], 0x2f
480525: lea rdi, [rax + 1]
480529: sub r14, 1
48052d: jne 0x4804fe
48052f: mov rdx, qword ptr [rbp - 0x48]
480533: mov rsi, r15
480536: call 0x401150
48053b: mov byte ptr [rax], 0x2f
48053e: lea rdi, [rax + 1]
480542: test r12, r12
480545: jne 0x4804d0
480547: mov r12, qword ptr [rbp - 0xa0]
48054e: mov r14, qword ptr [rbp - 0xa8]
480555: mov rcx, qword ptr [rbp - 0x80]
480559: xor eax, eax
48055b: nop dword ptr [rax + rax]
480560: mov rdx, rax
480563: add rax, 1
480567: shl rdx, 4
48056b: mov qword ptr [r14 + rdx + 8], 0
480574: cmp rax, rcx
480577: jb 0x480560
480579: mov r10, qword ptr [rbp - 0x88]
480580: test r10, r10
480583: je 0x4805e2
480585: add rbx, qword ptr [rbp - 0x98]
48058c: mov edi, 1
480591: mov rcx, r12
480594: nop dword ptr [rax]
480598: sub rcx, 1
48059c: mov esi, edi
48059e: mov rdx, r14
4805a1: mov rax, r10
4805a4: shl esi, cl
4805a6: movsxd rsi, esi
4805a9: sub rax, 1
4805ad: add rdx, 0x10
4805b1: test rsi, rax
4805b4: je 0x4805d4
4805b6: mov r9, qword ptr [rdx - 8]
4805ba: mov r8, qword ptr [rbx - 8]
4805be: sub rax, 1
4805c2: add rdx, 0x10
4805c6: lea r8, [r9 + r8 + 1]
4805cb: mov qword ptr [rdx - 0x18], r8
4805cf: test rsi, rax
4805d2: jne 0x4805b6
4805d4: test rax, rax
4805d7: jne 0x4805a9
4805d9: sub rbx, 0x10
4805dd: test rcx, rcx
4805e0: jne 0x480598
4805e2: mov r8d, dword ptr [rbp - 0x8c]
4805e9: movzx ecx, byte ptr [rbp - 0x78]
4805ed: mov eax, 1
4805f2: lea rsi, [r14 + 0x20]
4805f6: sub r8d, 2
4805fa: shl rax, cl
4805fd: movsxd r8, r8d
480600: mov rcx, rax
480603: cmp r8, rax
480606: je 0x48063c
480608: mov rax, rsi
48060b: mov rdx, r8
48060e: nop 
480610: sub rdx, 1
480614: test dl, 1
480617: je 0x4807e8
48061d: mov rdi, qword ptr [rax - 0x18]
480621: add rdi, qword ptr [rax - 0x20]
480625: add rax, 0x10
480629: mov qword ptr [rax - 0x10], rdi
48062d: cmp rdx, rcx
480630: jne 0x480610
480632: sub r8, rcx
480635: shl r8, 4
480639: add rsi, r8
48063c: mov edx, dword ptr [rbp - 0x68]
48063f: mov rdi, qword ptr [rbp - 0x50]
480643: neg edx
480645: add rdi, 1
480649: movsxd rdx, edx
48064c: shl rdx, 4
480650: mov rax, qword ptr [rsi + rdx]
480654: add rsi, 0x10
480658: add rax, rdi
48065b: mov qword ptr [rsi - 0x10], rax
48065f: sub rcx, 1
480663: jne 0x480650
480665: mov rax, qword ptr [r14 + 8]
480669: mov rbx, qword ptr [rbp - 0x70]
48066d: mov qword ptr [rbx], rax
480670: lea rsp, [rbp - 0x28]
480674: mov rax, r14
480677: pop rbx
480678: pop r12
48067a: pop r13
48067c: pop r14
48067e: pop r15
480680: pop rbp
480681: ret 
480682: nop word ptr [rax + rax]
480688: mov r14d, 4
48068e: jmp 0x4800f0
480693: mov r8, qword ptr [rbp - 0x48]
480697: mov rax, r12
48069a: mov rbx, rsp
48069d: shl rax, 4
4806a1: add rax, 0x10
4806a5: mov rdx, rax
4806a8: and rdx, 0xfffffffffffff000
4806af: sub rbx, rdx
4806b2: mov rdx, rbx
4806b5: cmp rsp, rdx
4806b8: je 0x4806cf
4806ba: sub rsp, 0x1000
4806c1: or qword ptr [rsp + 0xff8], 0
4806ca: cmp rsp, rdx
4806cd: jne 0x4806ba
4806cf: and eax, 0xfff
4806d4: sub rsp, rax
4806d7: test rax, rax
4806da: je 0x4806e2
4806dc: or qword ptr [rsp + rax - 8], 0
4806e2: lea rax, [rsp + 0xf]
4806e7: mov ecx, 1
4806ec: xor r13d, r13d
4806ef: and rax, 0xfffffffffffffff0
4806f3: mov rbx, rax
4806f6: test r8, r8
4806f9: je 0x48029a
4806ff: lea r14, [r13 + 1]
480703: mov qword ptr [rbp - 0x78], r12
480707: mov rdx, rbx
48070a: xor r15d, r15d
48070d: mov rax, r14
480710: mov rbx, r13
480713: mov r14, r8
480716: mov r8, rax
480719: nop dword ptr [rax]
480720: mov r13, rbx
480723: shl r13, 4
480727: bt r14, r15
48072b: lea r12, [rdx + r13]
48072f: jae 0x4807d8
480735: movsxd rax, r15d
480738: mov qword ptr [rbp - 0x50], r8
48073c: lea rdi, [rax + rax*8]
480740: lea rax, [rip + 0x18f69]
480747: mov qword ptr [rbp - 0x48], rdx
48074b: add rdi, rax
48074e: mov qword ptr [r12], rdi
480752: call 0x401180
480757: mov ecx, r15d
48075a: mov esi, 1
48075f: mov rdi, r14
480762: shl rsi, cl
480765: mov rdx, qword ptr [rbp - 0x48]
480769: add r15, 1
48076d: mov qword ptr [r12 + 8], rax
480772: xor rdi, rsi
480775: cmp r14, rsi
480778: mov r8, qword ptr [rbp - 0x50]
48077c: lea rcx, [rbx + 2]
480780: lea rax, [rdx + r13 + 0x10]
480785: je 0x480802
480787: mov rbx, r8
48078a: mov r14, rdi
48078d: add r8, 1
480791: jmp 0x480720
480793: mov rax, r12
480796: mov rbx, rsp
480799: shl rax, 4
48079d: add rax, 0x10
4807a1: mov rdx, rax
4807a4: and rdx, 0xfffffffffffff000
4807ab: sub rbx, rdx
4807ae: mov rdx, rbx
4807b1: cmp rsp, rdx
4807b4: je 0x4806cf
4807ba: sub rsp, 0x1000
4807c1: or qword ptr [rsp + 0xff8], 0
4807ca: cmp rsp, rdx
4807cd: jne 0x4807ba
4807cf: jmp 0x4806cf
4807d4: nop dword ptr [rax]
4807d8: add r15, 1
4807dc: jmp 0x480720
4807e1: nop dword ptr [rax]
4807e8: mov rdi, qword ptr [rax - 0x10]
4807ec: add rax, 0x10
4807f0: mov qword ptr [rax - 0x10], rdi
4807f4: cmp rdx, rcx
4807f7: jne 0x480610
4807fd: jmp 0x480632
480802: mov r12, qword ptr [rbp - 0x78]
480806: mov rbx, rdx
480809: jmp 0x48029a
48080e: mov rcx, qword ptr [rbp - 0x58]
480812: lea rdi, [rax + 0x21]
480816: lea r12, [rax + 1]
48081a: mov qword ptr [rcx], 2
480821: call 0x426410
480826: mov r14, rax
480829: test rax, rax
48082c: jne 0x480873
48082e: lea rcx, [rip + 0x2aa9e]
480835: xor edx, edx
480837: xor esi, esi
480839: mov edi, 0xc
48083e: call 0x485060
480843: mov esi, r12d
480846: jmp 0x480410
48084b: mov rdx, qword ptr [rbx + 0x18]
48084f: mov rsi, qword ptr [rbx + 0x10]
480853: call 0x401150
480858: mov rdx, qword ptr [rbp - 0x48]
48085c: mov rsi, qword ptr [rbx]
48085f: mov byte ptr [rax], 0x2f
480862: lea rdi, [rax + 1]
480866: call 0x401150
48086b: mov byte ptr [rax], 0x2f
48086e: jmp 0x480555
480873: lea rdi, [rax + 0x20]
480877: mov rsi, qword ptr [rbx]
48087a: mov rdx, qword ptr [rbp - 0x48]
48087e: mov qword ptr [rax + 8], r12
480882: mov qword ptr [rax], rdi
480885: mov qword ptr [rax + 0x10], rdi
480889: mov qword ptr [rax + 0x18], 0
480891: call 0x401150
480896: mov rbx, qword ptr [rbp - 0x70]
48089a: mov byte ptr [rax], 0x2f
48089d: mov rax, qword ptr [rbp - 0x58]
4808a1: mov qword ptr [rax], 2
4808a8: mov rax, qword ptr [r14 + 8]
4808ac: mov qword ptr [rbx], rax
4808af: jmp 0x480670
4808b4: cmp r12, 3
4808b8: jne 0x4803e2
4808be: mov esi, 3
4808c3: jmp 0x48040a
4808c8: lea r12, [rdx + 1]
4808cc: jmp 0x480086
4808d1: sub qword ptr [rbp - 0x50], 1
4808d6: mov rcx, r10
4808d9: jmp 0x480275
4808de: mov esi, 1
4808e3: mov edi, 2
4808e8: jmp 0x480388
4808ed: mov rax, r14
4808f0: mov ecx, 1
4808f5: jmp 0x4806f6
4808fa: lea rcx, [rip + 0x2a9ff]
480901: mov edx, 0xcc
480906: lea rsi, [rip + 0x2a9b1]
48090d: lea rdi, [rip + 0x2a9b6]
480914: call 0x4032a0
480919: nop dword ptr [rax]
480920: push rbp
480921: mov rbp, rsp
480924: push r15
480926: push r14
480928: push r13
48092a: push r12
48092c: push rbx
48092d: sub rsp, 0x438
480934: movzx eax, byte ptr [rdx]
480937: mov dword ptr [rbp - 0x460], edi
48093d: test al, al
48093f: je 0x480eb7
480945: mov r14d, esi
480948: mov r12, rdx
48094b: mov r15, rcx
48094e: xor r8d, r8d
480951: xor ebx, ebx
480953: lea r13, [rbp - 0x43c]
48095a: nop word ptr [rax + rax]
480960: cmp r14d, 1
480964: je 0x480a35
48096a: test al, al
48096c: je 0x480a78
480972: cmp al, 0x25
480974: je 0x480a78
48097a: test r14d, r14d
48097d: mov rdx, r12
480980: sete cl
480983: jmp 0x480998
480985: nop dword ptr [rax]
480988: movzx eax, byte ptr [rdx + 1]
48098c: add rdx, 1
480990: test al, al
480992: je 0x4809a0
480994: cmp al, 0x25
480996: je 0x4809a0
480998: cmp al, 0xa
48099a: jne 0x480988
48099c: test cl, cl
48099e: jne 0x480988
4809a0: cmp ebx, 0x3f
4809a3: jg 0x480e98
4809a9: mov rsi, rdx
4809ac: movsxd rcx, ebx
4809af: sub rsi, r12
4809b2: shl rcx, 4
4809b6: mov qword ptr [rbp + rcx - 0x428], rsi
4809be: test rsi, rsi
4809c1: je 0x4809ce
4809c3: mov qword ptr [rbp + rcx - 0x430], r12
4809cb: add ebx, 1
4809ce: cmp al, 0x25
4809d0: je 0x480aa0
4809d6: cmp al, 0xa
4809d8: je 0x480a10
4809da: mov r12, rdx
4809dd: movzx eax, byte ptr [r12]
4809e2: test al, al
4809e4: jne 0x480960
4809ea: movsxd rdx, ebx
4809ed: mov edi, dword ptr [rbp - 0x460]
4809f3: lea rsi, [rbp - 0x430]
4809fa: mov eax, 0x14
4809ff: syscall 
480a01: lea rsp, [rbp - 0x28]
480a05: pop rbx
480a06: pop r12
480a08: pop r13
480a0a: pop r14
480a0c: pop r15
480a0e: pop rbp
480a0f: ret 
480a10: cmp r12, rdx
480a13: je 0x480dd2
480a19: lea eax, [rbx - 1]
480a1c: cdqe 
480a1e: shl rax, 4
480a22: add qword ptr [rbp + rax - 0x428], 1
480a2b: cmp byte ptr [rdx + 1], 0
480a2f: lea r12, [rdx + 1]
480a33: je 0x4809ea
480a35: test r8d, r8d
480a38: je 0x480d6b
480a3e: cmp ebx, 0x3f
480a41: jg 0x480e55
480a47: movsxd rax, ebx
480a4a: mov r14d, 0xffffffff
480a50: add ebx, 1
480a53: shl rax, 4
480a57: mov qword ptr [rbp + rax - 0x428], 0xc
480a63: mov qword ptr [rbp + rax - 0x430], r13
480a6b: movzx eax, byte ptr [r12]
480a70: test al, al
480a72: jne 0x480972
480a78: cmp ebx, 0x3f
480a7b: jg 0x480e98
480a81: movsxd rdx, ebx
480a84: shl rdx, 4
480a88: mov qword ptr [rbp + rdx - 0x428], 0
480a94: mov rdx, r12
480a97: cmp al, 0x25
480a99: jne 0x4809d6
480a9f: nop 
480aa0: movzx eax, byte ptr [rdx + 1]
480aa4: cmp al, 0x30
480aa6: je 0x480ce0
480aac: lea rcx, [rdx + 1]
480ab0: mov r12d, 0x20
480ab6: mov r10d, 0xffffffff
480abc: cmp al, 0x2a
480abe: je 0x480c86
480ac4: mov edx, 0xffffffff
480ac9: cmp al, 0x2e
480acb: je 0x480cb6
480ad1: cmp al, 0x6c
480ad3: je 0x480ad9
480ad5: cmp al, 0x5a
480ad7: jne 0x480b1a
480ad9: movzx eax, byte ptr [rcx + 1]
480add: lea r11, [rcx + 1]
480ae1: cmp al, 0x73
480ae3: je 0x480cf6
480ae9: jg 0x480b35
480aeb: cmp al, 0x25
480aed: jne 0x480cc0
480af3: movsxd rax, ebx
480af6: shl rax, 4
480afa: mov qword ptr [rbp + rax - 0x430], r11
480b02: mov qword ptr [rbp + rax - 0x428], 1
480b0e: add ebx, 1
480b11: lea r12, [r11 + 1]
480b15: jmp 0x4809dd
480b1a: cmp al, 0x73
480b1c: je 0x480cf3
480b22: jg 0x480c4a
480b28: cmp al, 0x25
480b2a: jne 0x480cc0
480b30: mov r11, rcx
480b33: jmp 0x480af3
480b35: cmp al, 0x75
480b37: jne 0x480c25
480b3d: mov eax, dword ptr [r15]
480b40: cmp eax, 0x2f
480b43: ja 0x480c39
480b49: mov edx, eax
480b4b: add eax, 8
480b4e: add rdx, qword ptr [r15 + 0x10]
480b52: mov dword ptr [r15], eax
480b55: mov rdi, qword ptr [rdx]
480b58: mov rax, rsp
480b5b: cmp rsp, rax
480b5e: je 0x480b75
480b60: sub rsp, 0x1000
480b67: or qword ptr [rsp + 0xff8], 0
480b70: cmp rsp, rax
480b73: jne 0x480b60
480b75: mov dword ptr [rbp - 0x45c], r10d
480b7c: mov dword ptr [rbp - 0x458], r8d
480b83: sub rsp, 0x20
480b87: or qword ptr [rsp + 0x18], 0
480b8d: mov eax, 0xa
480b92: mov edx, 0x10
480b97: lea rsi, [rsp + 0xf]
480b9c: mov qword ptr [rbp - 0x450], r11
480ba3: and rsi, 0xfffffffffffffff0
480ba7: add rsi, 0x18
480bab: cmp byte ptr [r11], 0x78
480baf: cmovne edx, eax
480bb2: xor ecx, ecx
480bb4: mov qword ptr [rbp - 0x448], rsi
480bbb: call 0x467040
480bc0: mov rsi, qword ptr [rbp - 0x448]
480bc7: movsxd r10, dword ptr [rbp - 0x45c]
480bce: mov r11, qword ptr [rbp - 0x450]
480bd5: mov r8d, dword ptr [rbp - 0x458]
480bdc: mov rdx, rsi
480bdf: sub rdx, rax
480be2: cmp r10d, -1
480be6: jne 0x480c1e
480be8: movsxd rcx, ebx
480beb: add ebx, 1
480bee: shl rcx, 4
480bf2: mov qword ptr [rbp + rcx - 0x430], rax
480bfa: mov qword ptr [rbp + rcx - 0x428], rdx
480c02: jmp 0x480b11
480c07: nop word ptr [rax + rax]
480c10: mov byte ptr [rax - 1], r12b
480c14: sub rax, 1
480c18: mov rdx, rsi
480c1b: sub rdx, rax
480c1e: cmp rdx, r10
480c21: jl 0x480c10
480c23: jmp 0x480be8
480c25: cmp al, 0x78
480c27: jne 0x480cc0
480c2d: mov eax, dword ptr [r15]
480c30: cmp eax, 0x2f
480c33: jbe 0x480b49
480c39: mov rdx, qword ptr [r15 + 8]
480c3d: lea rax, [rdx + 8]
480c41: mov qword ptr [r15 + 8], rax
480c45: jmp 0x480b55
480c4a: cmp al, 0x75
480c4c: jne 0x480c6c
480c4e: mov eax, dword ptr [r15]
480c51: cmp eax, 0x2f
480c54: ja 0x480c78
480c56: mov edx, eax
480c58: add eax, 8
480c5b: add rdx, qword ptr [r15 + 0x10]
480c5f: mov dword ptr [r15], eax
480c62: mov edi, dword ptr [rdx]
480c64: mov r11, rcx
480c67: jmp 0x480b58
480c6c: cmp al, 0x78
480c6e: jne 0x480cc0
480c70: mov eax, dword ptr [r15]
480c73: cmp eax, 0x2f
480c76: jbe 0x480c56
480c78: mov rdx, qword ptr [r15 + 8]
480c7c: lea rax, [rdx + 8]
480c80: mov qword ptr [r15 + 8], rax
480c84: jmp 0x480c62
480c86: mov eax, dword ptr [r15]
480c89: cmp eax, 0x2f
480c8c: ja 0x480df5
480c92: mov edx, eax
480c94: add eax, 8
480c97: add rdx, qword ptr [r15 + 0x10]
480c9b: mov dword ptr [r15], eax
480c9e: movzx eax, byte ptr [rcx + 1]
480ca2: mov r10d, dword ptr [rdx]
480ca5: add rcx, 1
480ca9: mov edx, 0xffffffff
480cae: cmp al, 0x2e
480cb0: jne 0x480ad1
480cb6: cmp byte ptr [rcx + 1], 0x2a
480cba: je 0x480e17
480cc0: lea rcx, [rip + 0x2a759]
480cc7: mov edx, 0xd8
480ccc: lea rsi, [rip + 0x2a65d]
480cd3: lea rdi, [rip + 0x2a66f]
480cda: call 0x4032a0
480cdf: nop 
480ce0: movzx eax, byte ptr [rdx + 2]
480ce4: lea rcx, [rdx + 2]
480ce8: mov r12d, 0x30
480cee: jmp 0x480ab6
480cf3: mov r11, rcx
480cf6: mov eax, dword ptr [r15]
480cf9: cmp eax, 0x2f
480cfc: ja 0x480e06
480d02: mov ecx, eax
480d04: add eax, 8
480d07: add rcx, qword ptr [r15 + 0x10]
480d0b: mov dword ptr [r15], eax
480d0e: mov rdi, qword ptr [rcx]
480d11: movsxd r12, ebx
480d14: mov qword ptr [rbp - 0x458], r11
480d1b: shl r12, 4
480d1f: mov dword ptr [rbp - 0x450], edx
480d25: mov dword ptr [rbp - 0x448], r8d
480d2c: mov qword ptr [rbp + r12 - 0x430], rdi
480d34: call 0x401180
480d39: movsxd rdx, dword ptr [rbp - 0x450]
480d40: mov r8d, dword ptr [rbp - 0x448]
480d47: mov r11, qword ptr [rbp - 0x458]
480d4e: cmp edx, -1
480d51: je 0x480e3a
480d57: cmp rdx, rax
480d5a: cmova rdx, rax
480d5e: mov qword ptr [rbp + r12 - 0x428], rdx
480d66: jmp 0x480b0e
480d6b: call 0x487e60
480d70: test eax, eax
480d72: js 0x480e74
480d78: xor ecx, ecx
480d7a: movsxd rdi, eax
480d7d: mov edx, 0xa
480d82: mov dword ptr [rbp - 0x448], eax
480d88: lea rsi, [rbp - 0x432]
480d8f: call 0x467040
480d94: mov r8d, dword ptr [rbp - 0x448]
480d9b: cmp rax, r13
480d9e: jbe 0x480dc1
480da0: sub rax, r13
480da3: mov esi, 0x20
480da8: mov rdi, r13
480dab: mov dword ptr [rbp - 0x448], r8d
480db2: mov rdx, rax
480db5: call 0x401110
480dba: mov r8d, dword ptr [rbp - 0x448]
480dc1: mov eax, 0x93a
480dc6: mov word ptr [rbp - 0x432], ax
480dcd: jmp 0x480a3e
480dd2: movsxd rax, ebx
480dd5: add ebx, 1
480dd8: shl rax, 4
480ddc: mov qword ptr [rbp + rax - 0x430], rdx
480de4: mov qword ptr [rbp + rax - 0x428], 1
480df0: jmp 0x480a2b
480df5: mov rdx, qword ptr [r15 + 8]
480df9: lea rax, [rdx + 8]
480dfd: mov qword ptr [r15 + 8], rax
480e01: jmp 0x480c9e
480e06: mov rcx, qword ptr [r15 + 8]
480e0a: lea rax, [rcx + 8]
480e0e: mov qword ptr [r15 + 8], rax
480e12: jmp 0x480d0e
480e17: mov eax, dword ptr [r15]
480e1a: cmp eax, 0x2f
480e1d: ja 0x480e47
480e1f: mov edx, eax
480e21: add eax, 8
480e24: add rdx, qword ptr [r15 + 0x10]
480e28: mov dword ptr [r15], eax
480e2b: movzx eax, byte ptr [rcx + 2]
480e2f: mov edx, dword ptr [rdx]
480e31: add rcx, 2
480e35: jmp 0x480ad1
480e3a: mov qword ptr [rbp + r12 - 0x428], rax
480e42: jmp 0x480b0e
480e47: mov rdx, qword ptr [r15 + 8]
480e4b: lea rax, [rdx + 8]
480e4f: mov qword ptr [r15 + 8], rax
480e53: jmp 0x480e2b
480e55: lea rcx, [rip + 0x2a5c4]
480e5c: mov edx, 0x6b
480e61: lea rsi, [rip + 0x2a4c8]
480e68: lea rdi, [rip + 0x2a4cb]
480e6f: call 0x4032a0
480e74: lea rcx, [rip + 0x2a5a5]
480e7b: mov edx, 0x62
480e80: lea rsi, [rip + 0x2a4a9]
480e87: lea rdi, [rip + 0x2a4da]
480e8e: call 0x4032a0
480e93: nop dword ptr [rax + rax]
480e98: lea rcx, [rip + 0x2a581]
480e9f: mov edx, 0x78
480ea4: lea rsi, [rip + 0x2a485]
480eab: lea rdi, [rip + 0x2a488]
480eb2: call 0x4032a0
480eb7: xor edx, edx
480eb9: jmp 0x4809ed
480ebe: nop 
480ec0: endbr64 
480ec4: push r13
480ec6: xor eax, eax
480ec8: mov r13d, edx
480ecb: push r12
480ecd: mov r12, 0xffffffffffffffff
480ed4: push rbp
480ed5: push rbx
480ed6: mov rbx, rsi
480ed9: mov esi, 0x80000
480ede: sub rsp, 0x98
480ee5: call 0x4518a0
480eea: test eax, eax
480eec: jns 0x480f00
480eee: add rsp, 0x98
480ef5: mov rax, r12
480ef8: pop rbx
480ef9: pop rbp
480efa: pop r12
480efc: pop r13
480efe: ret 
480eff: nop 
480f00: mov rdx, rsp
480f03: mov esi, eax
480f05: mov edi, 1
480f0a: mov ebp, eax
480f0c: call 0x450c30
480f11: test eax, eax
480f13: js 0x480f22
480f15: mov rsi, qword ptr [rsp + 0x30]
480f1a: mov qword ptr [rbx], rsi
480f1d: test rsi, rsi
480f20: jne 0x480f38
480f22: mov r12, 0xffffffffffffffff
480f29: mov edi, ebp
480f2b: call 0x451730
480f30: jmp 0x480eee
480f32: nop word ptr [rax + rax]
480f38: xor r9d, r9d
480f3b: mov r8d, ebp
480f3e: mov ecx, 2
480f43: mov edx, r13d
480f46: xor edi, edi
480f48: call 0x451bc0
480f4d: mov r12, rax
480f50: jmp 0x480f29
480f52: nop word ptr cs:[rax + rax]
480f5d: nop dword ptr [rax]
480f60: endbr64 
480f64: sub rsp, 0xd8
480f6b: mov r10, rdi
480f6e: mov qword ptr [rsp + 0x28], rsi
480f73: mov qword ptr [rsp + 0x30], rdx
480f78: mov qword ptr [rsp + 0x38], rcx
480f7d: mov qword ptr [rsp + 0x40], r8
480f82: mov qword ptr [rsp + 0x48], r9
480f87: test al, al
480f89: je 0x480fc2
480f8b: movaps xmmword ptr [rsp + 0x50], xmm0
480f90: movaps xmmword ptr [rsp + 0x60], xmm1
480f95: movaps xmmword ptr [rsp + 0x70], xmm2
480f9a: movaps xmmword ptr [rsp + 0x80], xmm3
480fa2: movaps xmmword ptr [rsp + 0x90], xmm4
480faa: movaps xmmword ptr [rsp + 0xa0], xmm5
480fb2: movaps xmmword ptr [rsp + 0xb0], xmm6
480fba: movaps xmmword ptr [rsp + 0xc0], xmm7
480fc2: lea rax, [rsp + 0xe0]
480fca: lea rcx, [rsp + 8]
480fcf: mov rdx, r10
480fd2: mov esi, 1
480fd7: mov edi, dword ptr [rip + 0x40137]
480fdd: mov qword ptr [rsp + 0x10], rax
480fe2: lea rax, [rsp + 0x20]
480fe7: mov dword ptr [rsp + 8], 8
480fef: mov dword ptr [rsp + 0xc], 0x30
480ff7: mov qword ptr [rsp + 0x18], rax
480ffc: call 0x480920
481001: add rsp, 0xd8
481008: ret 
481009: nop dword ptr [rax]
481010: endbr64 
481014: sub rsp, 0xd8
48101b: mov r10, rdi
48101e: mov qword ptr [rsp + 0x28], rsi
481023: mov qword ptr [rsp + 0x30], rdx
481028: mov qword ptr [rsp + 0x38], rcx
48102d: mov qword ptr [rsp + 0x40], r8
481032: mov qword ptr [rsp + 0x48], r9
481037: test al, al
481039: je 0x481072
48103b: movaps xmmword ptr [rsp + 0x50], xmm0
481040: movaps xmmword ptr [rsp + 0x60], xmm1
481045: movaps xmmword ptr [rsp + 0x70], xmm2
48104a: movaps xmmword ptr [rsp + 0x80], xmm3
481052: movaps xmmword ptr [rsp + 0x90], xmm4
48105a: movaps xmmword ptr [rsp + 0xa0], xmm5
481062: movaps xmmword ptr [rsp + 0xb0], xmm6
48106a: movaps xmmword ptr [rsp + 0xc0], xmm7
481072: lea rax, [rsp + 0xe0]
48107a: lea rcx, [rsp + 8]
48107f: mov rdx, r10
481082: mov esi, 0xffffffff
481087: mov edi, dword ptr [rip + 0x40087]
48108d: mov qword ptr [rsp + 0x10], rax
481092: lea rax, [rsp + 0x20]
481097: mov dword ptr [rsp + 8], 8
48109f: mov dword ptr [rsp + 0xc], 0x30
4810a7: mov qword ptr [rsp + 0x18], rax
4810ac: call 0x480920
4810b1: add rsp, 0xd8
4810b8: ret 
4810b9: nop dword ptr [rax]
4810c0: endbr64 
4810c4: sub rsp, 0xd8
4810cb: mov r10, rsi
4810ce: mov qword ptr [rsp + 0x30], rdx
4810d3: mov qword ptr [rsp + 0x38], rcx
4810d8: mov qword ptr [rsp + 0x40], r8
4810dd: mov qword ptr [rsp + 0x48], r9
4810e2: test al, al
4810e4: je 0x48111d
4810e6: movaps xmmword ptr [rsp + 0x50], xmm0
4810eb: movaps xmmword ptr [rsp + 0x60], xmm1
4810f0: movaps xmmword ptr [rsp + 0x70], xmm2
4810f5: movaps xmmword ptr [rsp + 0x80], xmm3
4810fd: movaps xmmword ptr [rsp + 0x90], xmm4
481105: movaps xmmword ptr [rsp + 0xa0], xmm5
48110d: movaps xmmword ptr [rsp + 0xb0], xmm6
481115: movaps xmmword ptr [rsp + 0xc0], xmm7
48111d: lea rax, [rsp + 0xe0]
481125: lea rcx, [rsp + 8]
48112a: mov rdx, r10
48112d: xor esi, esi
48112f: mov qword ptr [rsp + 0x10], rax
481134: lea rax, [rsp + 0x20]
481139: mov dword ptr [rsp + 8], 0x10
481141: mov dword ptr [rsp + 0xc], 0x30
481149: mov qword ptr [rsp + 0x18], rax
48114e: call 0x480920
481153: add rsp, 0xd8
48115a: ret 
48115b: nop dword ptr [rax + rax]
481160: endbr64 
481164: push rbp
481165: mov rbp, rdi
481168: push rbx
481169: mov rbx, rsi
48116c: sub rsp, 8
481170: mov rsi, qword ptr [rsi + 8]
481174: call 0x401130
481179: mov r8d, eax
48117c: mov eax, 1
481181: test r8d, r8d
481184: je 0x4811b5
481186: mov rbx, qword ptr [rbx + 0x38]
48118a: test rbx, rbx
48118d: jne 0x4811a1
48118f: jmp 0x4811c0
481191: nop dword ptr [rax]
481198: mov rbx, qword ptr [rbx + 8]
48119c: test rbx, rbx
48119f: je 0x4811c0
4811a1: mov rsi, qword ptr [rbx]
4811a4: mov rdi, rbp
4811a7: call 0x401130
4811ac: test eax, eax
4811ae: jne 0x481198
4811b0: mov eax, 1
4811b5: add rsp, 8
4811b9: pop rbx
4811ba: pop rbp
4811bb: ret 
4811bc: nop dword ptr [rax]
4811c0: add rsp, 8
4811c4: xor eax, eax
4811c6: pop rbx
4811c7: pop rbp
4811c8: ret 
4811c9: nop dword ptr [rax]
4811d0: endbr64 
4811d4: lea rcx, [rip + 0x2a23d]
4811db: lea rdx, [rcx - 0x78]
4811df: jmp 0x48120d
4811e1: nop dword ptr [rax]
4811e8: mov rax, rcx
4811eb: sub rax, rdx
4811ee: mov rsi, rax
4811f1: shr rax, 0x3f
4811f5: sar rsi, 2
4811f9: add rax, rsi
4811fc: sar rax, 1
4811ff: lea rax, [rdx + rax*4]
481203: mov esi, dword ptr [rax]
481205: cmp rsi, rdi
481208: jb 0x481218
48120a: mov rcx, rax
48120d: cmp rcx, rdx
481210: jne 0x4811e8
481212: mov eax, dword ptr [rcx]
481214: ret 
481215: nop dword ptr [rax]
481218: lea rdx, [rax + 4]
48121c: jmp 0x48120d
48121e: nop 
481220: endbr64 
481224: jmp 0x481234
481226: nop word ptr cs:[rax + rax]
481230: add rdi, 1
481234: movzx eax, byte ptr [rdi]
481237: cmp al, 0x20
481239: je 0x481230
48123b: cmp al, 9
48123d: je 0x481230
48123f: cmp al, 0x2d
481241: je 0x481310
481247: mov ecx, 1
48124c: cmp al, 0x2b
48124e: je 0x4812e8
481254: lea edx, [rax - 0x30]
481257: cmp dl, 9
48125a: ja 0x4812fc
481260: mov r11d, 0x39
481266: mov r10d, 0xa
48126c: cmp al, 0x30
48126e: jne 0x48132c
481274: movzx eax, byte ptr [rdi + 1]
481278: and eax, 0xffffffdf
48127b: cmp al, 0x58
48127d: jne 0x481320
481283: add rdi, 2
481287: xor r8d, r8d
48128a: movabs r9, 0xffffffffffffffe
481294: jmp 0x4812b9
481296: nop word ptr cs:[rax + rax]
4812a0: cmp al, 0x39
4812a2: jg 0x4812c0
4812a4: sub eax, 0x30
4812a7: cdqe 
4812a9: cmp r8, r9
4812ac: ja 0x4812d6
4812ae: shl r8, 4
4812b2: add rdi, 1
4812b6: add r8, rax
4812b9: movsx eax, byte ptr [rdi]
4812bc: cmp al, 0x2f
4812be: jg 0x4812a0
4812c0: lea edx, [rax - 0x61]
4812c3: cmp dl, 5
4812c6: ja 0x481388
4812cc: sub eax, 0x57
4812cf: cdqe 
4812d1: cmp r8, r9
4812d4: jbe 0x4812ae
4812d6: mov r8, 0xffffffffffffffff
4812dd: test rsi, rsi
4812e0: jne 0x481304
4812e2: jmp 0x481307
4812e4: nop dword ptr [rax]
4812e8: movzx eax, byte ptr [rdi + 1]
4812ec: add rdi, 1
4812f0: lea edx, [rax - 0x30]
4812f3: cmp dl, 9
4812f6: jbe 0x481260
4812fc: xor r8d, r8d
4812ff: test rsi, rsi
481302: je 0x481307
481304: mov qword ptr [rsi], rdi
481307: mov rax, r8
48130a: ret 
48130b: nop dword ptr [rax + rax]
481310: movzx eax, byte ptr [rdi + 1]
481314: xor ecx, ecx
481316: add rdi, 1
48131a: jmp 0x481254
48131f: nop 
481320: mov r11d, 0x37
481326: mov r10d, 8
48132c: xor r8d, r8d
48132f: jmp 0x481362
481331: nop dword ptr [rax]
481338: cmp r11d, eax
48133b: jb 0x481369
48133d: sub eax, 0x30
481340: xor edx, edx
481342: movsxd r9, eax
481345: mov rax, r9
481348: not rax
48134b: div r10
48134e: cmp rax, r8
481351: jbe 0x4812d6
481357: imul r8, r10
48135b: add rdi, 1
48135f: add r8, r9
481362: movsx eax, byte ptr [rdi]
481365: cmp al, 0x2f
481367: jg 0x481338
481369: test rsi, rsi
48136c: je 0x481371
48136e: mov qword ptr [rsi], rdi
481371: mov rax, r8
481374: neg rax
481377: test cl, cl
481379: cmove r8, rax
48137d: mov rax, r8
481380: ret 
481381: nop dword ptr [rax]
481388: lea edx, [rax - 0x41]
48138b: cmp dl, 5
48138e: ja 0x481369
481390: sub eax, 0x37
481393: jmp 0x4812a7
481398: nop dword ptr [rax + rax]
4813a0: endbr64 
4813a4: push rbp
4813a5: mov rbp, rsp
4813a8: push r15
4813aa: push r14
4813ac: push r13
4813ae: push r12
4813b0: push rbx
4813b1: sub rsp, 0x2a8
4813b8: mov rbx, qword ptr [rip + 0x42491]
4813bf: movzx ecx, word ptr [rbx + 0x2b8]
4813c6: mov rax, qword ptr [rbx + 0x2a8]
4813cd: lea rdx, [rcx*8]
4813d5: sub rdx, rcx
4813d8: lea rdi, [rax + rdx*8]
4813dc: cmp rdi, rax
4813df: jbe 0x481a80
4813e5: mov r11, qword ptr [rip + 0x3fd2c]
4813ec: xor esi, esi
4813ee: mov rcx, 0xffffffffffffffff
4813f5: movabs r9, 0x1ffffffff
4813ff: movabs r8, 0x100000001
481409: mov r10, r11
48140c: sub r11, 1
481410: neg r10
481413: nop dword ptr [rax + rax]
481418: mov rdx, qword ptr [rax]
48141b: and rdx, r9
48141e: cmp rdx, r8
481421: jne 0x481445
481423: mov rdx, qword ptr [rax + 0x10]
481427: mov r12, rdx
48142a: and r12, r10
48142d: cmp rcx, r12
481430: cmova rcx, r12
481434: add rdx, qword ptr [rax + 0x28]
481438: add rdx, r11
48143b: and rdx, r10
48143e: cmp rsi, rdx
481441: cmovb rsi, rdx
481445: add rax, 0x38
481449: cmp rdi, rax
48144c: ja 0x481418
48144e: mov qword ptr [rbp - 0x2a8], rsi
481455: movq xmm0, rcx
48145a: mov dword ptr [rip + 0x41b20], 0
481464: mov rax, qword ptr [rbx]
481467: mov dword ptr [rip + 0x41ad7], 5
481471: lea r12, [rax + rsi + 3]
481476: add rcx, rax
481479: and r12, 0xfffffffffffffffc
48147d: and rcx, 0xfffffffffffffffc
481481: mov rbx, r12
481484: mov qword ptr [rip + 0x41acd], rcx
48148b: sub rbx, rcx
48148e: movabs rcx, 0x28f5c28f5c28f5c3
481498: lea rdx, [rbx + rbx*2]
48149c: mov qword ptr [rip + 0x41aad], rbx
4814a3: shr rdx, 2
4814a7: mov rax, rdx
4814aa: mul rcx
4814ad: shr rdx, 2
4814b1: cmp edx, 0x31
4814b4: ja 0x481870
4814ba: mov dword ptr [rip + 0x41aa0], 0x32
4814c4: mov qword ptr [rbp - 0x2b8], 0x320
4814cf: mov qword ptr [rbp - 0x2b0], 0x3ec8
4814da: mov rax, rbx
4814dd: movhps xmm0, qword ptr [rbp - 0x2a8]
4814e4: mov dword ptr [rbp - 0x2a0], 0x6e6f6d67
4814ee: shr rax, 2
4814f2: movaps xmmword ptr [rbp - 0x280], xmm0
4814f9: mov dword ptr [rbp - 0x29c], 0x1ffff
481503: mov qword ptr [rbp - 0x298], 0
48150e: mov dword ptr [rbp - 0x290], 0
481518: mov dword ptr [rbp - 0x270], eax
48151e: call 0x4880b0
481523: mov r13, qword ptr [rip + 0x42286]
48152a: xor edx, edx
48152c: mov dword ptr [rbp - 0x260], 0
481536: mov dword ptr [rbp - 0x26c], eax
48153c: movabs rax, 0x73646e6f636573
481546: mov rdi, r13
481549: mov word ptr [rbp - 0x25c], dx
481550: mov qword ptr [rbp - 0x268], rax
481557: mov byte ptr [rbp - 0x25a], 0
48155e: mov byte ptr [rbp - 0x259], 0x73
481565: call 0x401180
48156a: mov r15, qword ptr [rip + 0x4225f]
481571: mov r14, rax
481574: mov rdi, r15
481577: call 0x401180
48157c: mov rsi, rsp
48157f: lea rax, [r14 + rax + 0x21]
481584: mov rdx, rax
481587: and rax, 0xfffffffffffff000
48158d: sub rsi, rax
481590: and rdx, 0xfffffffffffffff0
481594: mov rax, rsi
481597: cmp rsp, rax
48159a: je 0x4815b1
48159c: sub rsp, 0x1000
4815a3: or qword ptr [rsp + 0xff8], 0
4815ac: cmp rsp, rax
4815af: jne 0x48159c
4815b1: and edx, 0xfff
4815b7: sub rsp, rdx
4815ba: test rdx, rdx
4815bd: jne 0x481918
4815c3: lea r14, [rsp + 0xf]
4815c8: mov rsi, r13
4815cb: and r14, 0xfffffffffffffff0
4815cf: mov rdi, r14
4815d2: call 0x401090
4815d7: mov rsi, r15
4815da: mov byte ptr [rax], 0x2f
4815dd: lea rdi, [rax + 1]
4815e1: call 0x401090
4815e6: mov edx, 0x1b6
4815eb: mov rdi, r14
4815ee: movabs rsi, 0x656c69666f72702e
4815f8: mov qword ptr [rax], rsi
4815fb: mov esi, 0x20042
481600: mov byte ptr [rax + 8], 0
481604: xor eax, eax
481606: call 0x4518a0
48160b: mov r15d, eax
48160e: cmp eax, -1
481611: je 0x4818a8
481617: lea rdx, [rbp - 0x250]
48161e: mov esi, eax
481620: mov edi, 1
481625: call 0x450c30
48162a: test eax, eax
48162c: js 0x4818f8
481632: mov eax, dword ptr [rbp - 0x238]
481638: and eax, 0xf000
48163d: cmp eax, 0x8000
481642: jne 0x4818f8
481648: mov r13, qword ptr [rbp - 0x2b0]
48164f: mov rax, rbx
481652: shr rax, 1
481655: mov qword ptr [rbp - 0x2a8], rax
48165c: add r13, rax
48165f: mov rax, qword ptr [rbp - 0x220]
481666: test rax, rax
481669: je 0x481998
48166f: cmp rax, r13
481672: jne 0x48195f
481678: xor r9d, r9d
48167b: xor edi, edi
48167d: mov r8d, r15d
481680: mov ecx, 1
481685: mov edx, 3
48168a: mov rsi, r13
48168d: call 0x451bc0
481692: cmp rax, -1
481696: mov qword ptr [rbp - 0x2b0], rax
48169d: je 0x481b2c
4816a3: mov edi, r15d
4816a6: call 0x451730
4816ab: mov r9, qword ptr [rbp - 0x2b0]
4816b2: mov rax, qword ptr [rbp - 0x2a8]
4816b9: cmp qword ptr [rbp - 0x220], 0
4816c1: lea r8, [r9 + rax + 0x44]
4816c6: lea r15, [r9 + 0x40]
4816ca: lea rax, [r8 + 4]
4816ce: mov qword ptr [rip + 0x418a3], r8
4816d5: mov qword ptr [rip + 0x418ac], rax
4816dc: jne 0x481928
4816e2: mov eax, dword ptr [rbp - 0x290]
4816e8: movdqa xmm1, xmmword ptr [rbp - 0x2a0]
4816f0: mov dword ptr [r9 + 0x14], 0
4816f8: movdqa xmm2, xmmword ptr [rbp - 0x280]
481700: movdqa xmm3, xmmword ptr [rbp - 0x270]
481708: mov dword ptr [r9 + 0x10], eax
48170c: mov rax, qword ptr [rbp - 0x260]
481713: movups xmmword ptr [r9], xmm1
481717: mov qword ptr [r9 + 0x38], rax
48171b: movups xmmword ptr [r9 + 0x18], xmm2
481720: movups xmmword ptr [r9 + 0x28], xmm3
481725: mov dword ptr [r8 - 4], 1
48172d: mov rdi, qword ptr [rbp - 0x2b8]
481734: mov esi, 1
481739: add rdi, qword ptr [rbp - 0x2a8]
481740: mov qword ptr [rbp - 0x2c0], r9
481747: mov qword ptr [rbp - 0x2b0], r8
48174e: call 0x427d10
481753: mov r8, qword ptr [rbp - 0x2b0]
48175a: mov r9, qword ptr [rbp - 0x2c0]
481761: test rax, rax
481764: mov qword ptr [rip + 0x41805], rax
48176b: je 0x481b94
481771: mov rsi, qword ptr [rbp - 0x2a8]
481778: mov edx, dword ptr [rip + 0x417e6]
48177e: mov dword ptr [rip + 0x417d8], 0
481788: mov ecx, dword ptr [r8]
48178b: lea r9, [rax + rsi]
48178f: mov qword ptr [rip + 0x417d2], r9
481796: cmp ecx, edx
481798: jae 0x48179d
48179a: mov edx, dword ptr [r8]
48179d: mov dword ptr [rip + 0x417dd], edx
4817a3: test rdx, rdx
4817a6: je 0x4817f4
4817a8: lea rdx, [rdx + rdx*4]
4817ac: lea rcx, [r8 + rdx*4 - 0x10]
4817b1: sub r8, 0x10
4817b5: nop dword ptr [rax]
4817b8: mov esi, dword ptr [rip + 0x417a2]
4817be: mov rdi, qword ptr [rcx + 8]
4817c2: lea edx, [rsi + 1]
4817c5: shr rdi, 2
4817c9: mov dword ptr [rip + 0x41791], edx
4817cf: mov edx, esi
4817d1: lea rdi, [rax + rdi*2]
4817d5: shl rdx, 4
4817d9: movzx r10d, word ptr [rdi]
4817dd: add rdx, r9
4817e0: mov qword ptr [rdx], rcx
4817e3: sub rcx, 0x14
4817e7: mov word ptr [rdx + 8], r10w
4817ec: mov word ptr [rdi], si
4817ef: cmp rcx, r8
4817f2: jne 0x4817b8
4817f4: mov r8, qword ptr [rip + 0x4175d]
4817fb: mov ecx, 0x10000
481800: sub r12, r8
481803: cmp r12, qword ptr [rbp - 0x2a8]
48180a: jbe 0x481841
48180c: mov rax, r12
48180f: xor edx, edx
481811: mov ecx, 1
481816: div qword ptr [rbp - 0x2a8]
48181d: mov rsi, rax
481820: cmp rax, 0xffff
481826: ja 0x481841
481828: cmp rax, 0xff
48182e: jbe 0x481b3f
481834: mov eax, 0x10000
481839: xor edx, edx
48183b: div rsi
48183e: mov rcx, rax
481841: mov rsi, qword ptr [rbp - 0x2a8]
481848: mov rdi, r15
48184b: mov rdx, r8
48184e: call 0x487f00
481853: mov dword ptr [rip + 0x41727], 1
48185d: lea rsp, [rbp - 0x28]
481861: pop rbx
481862: pop r12
481864: pop r13
481866: pop r14
481868: pop r15
48186a: pop rbp
48186b: ret 
48186c: nop dword ptr [rax]
481870: cmp edx, 0x100000
481876: jbe 0x481bbc
48187c: mov dword ptr [rip + 0x416de], 0x100000
481886: mov qword ptr [rbp - 0x2b8], 0x1000000
481891: mov qword ptr [rbp - 0x2b0], 0x14000048
48189c: jmp 0x4814da
4818a1: nop dword ptr [rax]
4818a8: mov rax, 0xffffffffffffffc0
4818af: lea r12, [rip + 0x29b7d]
4818b6: mov r13d, dword ptr fs:[rax]
4818ba: lea rsi, [rbp - 0x1c0]
4818c1: mov edi, r13d
4818c4: mov edx, 0x190
4818c9: call 0x429060
4818ce: mov rdx, r14
4818d1: mov rsi, r12
4818d4: mov edi, 2
4818d9: mov rcx, rax
4818dc: xor eax, eax
4818de: call 0x4810c0
4818e3: lea rsp, [rbp - 0x28]
4818e7: pop rbx
4818e8: pop r12
4818ea: pop r13
4818ec: pop r14
4818ee: pop r15
4818f0: pop rbp
4818f1: ret 
4818f2: nop word ptr [rax + rax]
4818f8: mov rax, 0xffffffffffffffc0
4818ff: lea r12, [rip + 0x29b47]
481906: mov edi, r15d
481909: mov r13d, dword ptr fs:[rax]
48190d: call 0x451730
481912: jmp 0x4818ba
481914: nop dword ptr [rax]
481918: or qword ptr [rsp + rdx - 8], 0
48191e: jmp 0x4815c3
481923: nop dword ptr [rax + rax]
481928: mov rax, qword ptr [r9]
48192b: mov rdx, qword ptr [r9 + 8]
48192f: xor rax, qword ptr [rbp - 0x2a0]
481936: xor rdx, qword ptr [rbp - 0x298]
48193d: or rdx, rax
481940: jne 0x481952
481942: mov eax, dword ptr [rbp - 0x290]
481948: cmp dword ptr [r9 + 0x10], eax
48194c: je 0x481aa5
481952: mov rsi, r13
481955: mov rdi, r9
481958: call 0x451c70
48195d: jmp 0x481967
48195f: mov edi, r15d
481962: call 0x451730
481967: mov rcx, qword ptr [rip + 0x41e62]
48196e: mov rdx, r14
481971: mov edi, 2
481976: xor eax, eax
481978: lea rsi, [rip + 0x29b21]
48197f: call 0x4810c0
481984: lea rsp, [rbp - 0x28]
481988: pop rbx
481989: pop r12
48198b: pop r13
48198d: pop r14
48198f: pop r15
481991: pop rbp
481992: ret 
481993: nop dword ptr [rax + rax]
481998: mov rdx, qword ptr [rip + 0x3f779]
48199f: mov rsi, rsp
4819a2: mov qword ptr [rbp - 0x2c0], rsp
4819a9: lea rax, [rdx + 0xf]
4819ad: mov rcx, rax
4819b0: and rax, 0xfffffffffffff000
4819b6: sub rsi, rax
4819b9: and rcx, 0xfffffffffffffff0
4819bd: mov rax, rsi
4819c0: cmp rsp, rax
4819c3: je 0x4819da
4819c5: sub rsp, 0x1000
4819cc: or qword ptr [rsp + 0xff8], 0
4819d5: cmp rsp, rax
4819d8: jne 0x4819c5
4819da: and ecx, 0xfff
4819e0: sub rsp, rcx
4819e3: test rcx, rcx
4819e6: je 0x4819ee
4819e8: or qword ptr [rsp + rcx - 8], 0
4819ee: xor esi, esi
4819f0: mov rdi, rsp
4819f3: mov qword ptr [rbp - 0x2c8], rdx
4819fa: mov qword ptr [rbp - 0x2b0], rsp
481a01: call 0x401110
481a06: mov rdx, qword ptr [rbp - 0x2c8]
481a0d: mov edi, r15d
481a10: neg rdx
481a13: mov rsi, rdx
481a16: xor edx, edx
481a18: and rsi, r13
481a1b: call 0x450f00
481a20: cmp rax, -1
481a24: jne 0x481a41
481a26: jmp 0x481b12
481a2b: nop dword ptr [rax + rax]
481a30: mov rax, 0xffffffffffffffc0
481a37: cmp dword ptr fs:[rax], 4
481a3b: jne 0x481b19
481a41: mov rax, qword ptr [rip + 0x3f6d0]
481a48: mov rsi, qword ptr [rbp - 0x2b0]
481a4f: mov edi, r15d
481a52: lea rdx, [rax - 1]
481a56: and rdx, r13
481a59: call 0x451a20
481a5e: cmp rax, -1
481a62: je 0x481a30
481a64: test rax, rax
481a67: js 0x481b12
481a6d: mov rsp, qword ptr [rbp - 0x2c0]
481a74: jmp 0x481678
481a79: nop dword ptr [rax]
481a80: mov rax, 0xffffffffffffffff
481a87: mov rcx, 0xffffffffffffffff
481a8e: xor esi, esi
481a90: mov qword ptr [rbp - 0x2a8], 0
481a9b: movq xmm0, rax
481aa0: jmp 0x48145a
481aa5: mov eax, dword ptr [r9 + 0x14]
481aa9: test eax, eax
481aab: jne 0x481952
481ab1: mov rax, qword ptr [r9 + 0x18]
481ab5: mov rdx, qword ptr [r9 + 0x20]
481ab9: xor rax, qword ptr [rbp - 0x280]
481ac0: xor rdx, qword ptr [rbp - 0x278]
481ac7: or rdx, rax
481aca: jne 0x481952
481ad0: mov rax, qword ptr [r9 + 0x28]
481ad4: mov rdx, qword ptr [r9 + 0x30]
481ad8: xor rax, qword ptr [rbp - 0x270]
481adf: xor rdx, qword ptr [rbp - 0x268]
481ae6: or rdx, rax
481ae9: jne 0x481952
481aef: mov rax, qword ptr [rbp - 0x260]
481af6: cmp qword ptr [r9 + 0x38], rax
481afa: jne 0x481952
481b00: mov eax, dword ptr [r8 - 4]
481b04: cmp eax, 1
481b07: je 0x48172d
481b0d: jmp 0x481952
481b12: mov rax, 0xffffffffffffffc0
481b19: lea r12, [rip + 0x29947]
481b20: mov rsp, qword ptr [rbp - 0x2c0]
481b27: jmp 0x481906
481b2c: mov rax, 0xffffffffffffffc0
481b33: lea r12, [rip + 0x29949]
481b3a: jmp 0x481906
481b3f: movabs rax, 0xffffffffffffff
481b49: cmp r12, rax
481b4c: jbe 0x481b6f
481b4e: mov rax, r12
481b51: shr rbx, 9
481b55: xor edx, edx
481b57: div rbx
481b5a: xor edx, edx
481b5c: mov r12, rax
481b5f: mov eax, 0x1000000
481b64: div r12
481b67: mov rcx, rax
481b6a: jmp 0x481841
481b6f: shl r12, 8
481b73: xor edx, edx
481b75: mov rax, r12
481b78: div qword ptr [rbp - 0x2a8]
481b7f: xor edx, edx
481b81: mov rcx, rax
481b84: mov eax, 0x1000000
481b89: div rcx
481b8c: mov rcx, rax
481b8f: jmp 0x481841
481b94: mov rdi, r9
481b97: mov rsi, r13
481b9a: call 0x451c70
481b9f: mov edi, 2
481ba4: lea rsi, [rip + 0x2992d]
481bab: xor eax, eax
481bad: call 0x4810c0
481bb2: mov edi, 0x7f
481bb7: call 0x4505c0
481bbc: mov dword ptr [rip + 0x413a2], edx
481bc2: mov edx, edx
481bc4: imul r13, rdx, 0x140
481bcb: shl rdx, 4
481bcf: mov qword ptr [rbp - 0x2b8], rdx
481bd6: lea rax, [r13 + 0x48]
481bda: mov qword ptr [rbp - 0x2b0], rax
481be1: jmp 0x4814da
481be6: nop word ptr cs:[rax + rax]
481bf0: endbr64 
481bf4: mov ecx, dword ptr [rip + 0x4138a]
481bfa: test ecx, ecx
481bfc: je 0x481e30
481c02: mov rdx, qword ptr [rip + 0x4134f]
481c09: mov rax, qword ptr [rip + 0x41340]
481c10: mov ecx, 0
481c15: sub rdi, rdx
481c18: cmp rax, rdi
481c1b: cmovbe rdi, rcx
481c1f: sub rsi, rdx
481c22: cmp rax, rsi
481c25: jbe 0x481e30
481c2b: mov ecx, dword ptr [rip + 0x41317]
481c31: mov rax, rsi
481c34: push rbp
481c35: push rbx
481c36: shr rax, cl
481c39: mov rcx, qword ptr [rip + 0x41330]
481c40: lea rdx, [rcx + rax*2]
481c44: movzx eax, word ptr [rdx]
481c47: test rax, rax
481c4a: je 0x481c87
481c4c: mov r9, qword ptr [rip + 0x41315]
481c53: shl rax, 4
481c57: lea rdx, [r9 + rax]
481c5b: mov r8, qword ptr [rdx]
481c5e: mov rax, qword ptr [r8]
481c61: cmp rax, rdi
481c64: je 0x481df0
481c6a: movzx eax, word ptr [rdx + 8]
481c6e: test ax, ax
481c71: jne 0x481e14
481c77: mov rax, qword ptr [r8]
481c7a: cmp rax, rdi
481c7d: je 0x481df0
481c83: add rdx, 8
481c87: mov r10, qword ptr [rip + 0x412ea]
481c8e: mov eax, dword ptr [rip + 0x412ec]
481c94: mov r11d, 1
481c9a: mov r8d, dword ptr [r10]
481c9d: cmp r8d, eax
481ca0: jne 0x481d39
481ca6: jmp 0x481d45
481cab: nop dword ptr [rax + rax]
481cb0: mov rbx, qword ptr [rip + 0x412d1]
481cb7: lea rax, [rax + rax*4]
481cbb: mov r8d, r11d
481cbe: mov r9, qword ptr [rbx + rax*4 + 8]
481cc3: shr r9, 2
481cc7: cmp dword ptr fs:[0x18], 0
481cd0: je 0x481cd3
481cd3: xadd dword ptr [rip + 0x41285], r8d
481cdb: mov ebp, dword ptr [rip + 0x4129f]
481ce1: mov dword ptr [rsp - 0x14], r8d
481ce6: lea r9, [rcx + r9*2]
481cea: mov r8d, dword ptr [rsp - 0x14]
481cef: lea rbp, [rbp + rbp*4]
481cf4: lea eax, [r8 + 1]
481cf8: lea rbx, [rbx + rbp*4]
481cfc: mov r8, rax
481cff: shl rax, 4
481d03: add rax, qword ptr [rip + 0x4125e]
481d0a: mov qword ptr [rax], rbx
481d0d: movzx ebx, word ptr [r9]
481d11: mov word ptr [rax + 8], bx
481d15: mov word ptr [r9], r8w
481d19: cmp dword ptr fs:[0x18], 0
481d22: je 0x481d25
481d25: inc dword ptr [rip + 0x41255]
481d2b: mov eax, dword ptr [rip + 0x4124f]
481d31: mov r8d, dword ptr [r10]
481d34: cmp r8d, eax
481d37: je 0x481d45
481d39: cmp dword ptr [rip + 0x41225], eax
481d3f: ja 0x481cb0
481d45: movzx eax, word ptr [rdx]
481d48: test ax, ax
481d4b: jne 0x481e38
481d51: mov eax, 1
481d56: mov ecx, eax
481d58: cmp dword ptr fs:[0x18], 0
481d61: je 0x481d64
481d64: xadd dword ptr [r10], ecx
481d68: mov dword ptr [rsp - 0x10], ecx
481d6c: mov ecx, dword ptr [rsp - 0x10]
481d70: cmp dword ptr [rip + 0x411ee], ecx
481d76: jbe 0x481e00
481d7c: cmp dword ptr fs:[0x18], 0
481d85: je 0x481d88
481d88: xadd dword ptr [rip + 0x411d1], eax
481d8f: mov dword ptr [rsp - 0xc], eax
481d93: mov eax, dword ptr [rsp - 0xc]
481d97: lea rcx, [rcx + rcx*4]
481d9b: movq xmm0, rdi
481da0: movq xmm1, rsi
481da5: add eax, 1
481da8: punpcklqdq xmm0, xmm1
481dac: mov word ptr [rdx], ax
481daf: movzx eax, word ptr [rdx]
481db2: mov rdx, qword ptr [rip + 0x411cf]
481db9: shl rax, 4
481dbd: add rax, qword ptr [rip + 0x411a4]
481dc4: lea rdx, [rdx + rcx*4]
481dc8: mov qword ptr [rax], rdx
481dcb: mov dword ptr [rdx + 0x10], 0
481dd2: movups xmmword ptr [rdx], xmm0
481dd5: xor edx, edx
481dd7: mov word ptr [rax + 8], dx
481ddb: cmp dword ptr fs:[0x18], 0
481de4: je 0x481de7
481de7: inc dword ptr [rip + 0x41193]
481ded: mov r8, qword ptr [rax]
481df0: cmp dword ptr fs:[0x18], 0
481df9: je 0x481dfc
481dfc: inc dword ptr [r8 + 0x10]
481e00: pop rbx
481e01: pop rbp
481e02: ret 
481e03: nop dword ptr [rax + rax]
481e08: mov r10, qword ptr [r8]
481e0b: cmp r10, rdi
481e0e: je 0x481c77
481e14: shl rax, 4
481e18: lea rdx, [r9 + rax]
481e1c: movzx eax, word ptr [rdx + 8]
481e20: mov r8, qword ptr [rdx]
481e23: test ax, ax
481e26: jne 0x481e08
481e28: jmp 0x481c77
481e2d: nop dword ptr [rax]
481e30: ret 
481e31: nop dword ptr [rax]
481e38: movzx eax, word ptr [rdx]
481e3b: mov r9, qword ptr [rip + 0x41126]
481e42: shl rax, 4
481e46: lea rdx, [r9 + rax]
481e4a: jmp 0x481c5b
481e4f: nop 
481e50: push rax
481e51: pop rax
481e52: mov edi, 2
481e57: lea rsi, [rip + 0x296aa]
481e5e: xor eax, eax
481e60: sub rsp, 8
481e64: call 0x4810c0
481e69: mov edi, 0x7f
481e6e: call 0x4505c0
481e73: nop word ptr cs:[rax + rax]
481e7e: nop 
481e80: endbr64 
481e84: cmp byte ptr [rip + 0x4189d], 0
481e8b: mov r8, qword ptr [rip + 0x4147e]
481e92: jne 0x481ea0
481e94: lea rax, [r8 + 1]
481e98: mov qword ptr [rip + 0x41471], rax
481e9f: ret 
481ea0: sub rsp, 8
481ea4: mov rax, qword ptr [rip + 0x4188d]
481eab: add rax, 1
481eaf: cmp rax, r8
481eb2: ja 0x481f38
481eb8: mov rcx, qword ptr [rip + 0x41861]
481ebf: xor esi, esi
481ec1: lea r9, [r8 + 1]
481ec5: mov rdi, qword ptr [rcx]
481ec8: nop dword ptr [rax + rax]
481ed0: mov rdx, rax
481ed3: sub rdx, rsi
481ed6: cmp rdx, rdi
481ed9: jae 0x481f10
481edb: shl rdx, 4
481edf: cmp qword ptr [rdx + rcx + 0x18], 0
481ee5: je 0x481f28
481ee7: add rax, 1
481eeb: cmp r9, rax
481eee: jae 0x481ed0
481ef0: lea rcx, [rip + 0x297f9]
481ef7: mov edx, 0x49
481efc: lea rsi, [rip + 0x29777]
481f03: lea rdi, [rip + 0x29636]
481f0a: call 0x4032a0
481f0f: nop 
481f10: mov rcx, qword ptr [rcx + 8]
481f14: add rsi, rdi
481f17: test rcx, rcx
481f1a: je 0x481f28
481f1c: mov rdi, qword ptr [rcx]
481f1f: jmp 0x481ed0
481f21: nop dword ptr [rax]
481f28: cmp rax, r8
481f2b: ja 0x481f38
481f2d: add rsp, 8
481f31: ret 
481f32: nop word ptr [rax + rax]
481f38: add r8, 1
481f3c: cmp r8, rax
481f3f: jne 0x481f55
481f41: endbr64 
481f45: mov byte ptr [rip + 0x417dc], 0
481f4c: mov qword ptr [rip + 0x413bd], rax
481f53: jmp 0x481f2d
481f55: lea rcx, [rip + 0x29794]
481f5c: mov edx, 0x57
481f61: lea rsi, [rip + 0x29712]
481f68: lea rdi, [rip + 0x295f9]
481f6f: call 0x4032a0
481f74: nop word ptr cs:[rax + rax]
481f7f: nop 
481f80: endbr64 
481f84: cmp byte ptr [rip + 0x4179d], 0
481f8b: jne 0x481fa0
481f8d: mov r8, qword ptr [rip + 0x4137c]
481f94: mov rax, r8
481f97: ret 
481f98: nop dword ptr [rax + rax]
481fa0: mov rcx, qword ptr [rip + 0x41779]
481fa7: xor r8d, r8d
481faa: test rcx, rcx
481fad: je 0x481f94
481faf: nop 
481fb0: mov rsi, qword ptr [rcx]
481fb3: xor eax, eax
481fb5: test rsi, rsi
481fb8: je 0x481fda
481fba: nop word ptr [rax + rax]
481fc0: mov rdx, rax
481fc3: shl rdx, 4
481fc7: cmp qword ptr [rcx + rdx + 0x18], 1
481fcd: sbb r8, -1
481fd1: add rax, 1
481fd5: cmp rax, rsi
481fd8: jne 0x481fc0
481fda: mov rcx, qword ptr [rcx + 8]
481fde: test rcx, rcx
481fe1: jne 0x481fb0
481fe3: jmp 0x481f94
481fe5: nop word ptr cs:[rax + rax]
481ff3: cli 
481ff4: mov rax, qword ptr [rip + 0x3e0f5]
481ffb: mov qword ptr [rdi], rax
481ffe: mov rax, qword ptr [rip + 0x41303]
482005: mov qword ptr [rsi], rax
482008: ret 
482009: nop dword ptr [rax]
482010: endbr64 
482014: push r12
482016: mov r12, qword ptr [rip + 0x412eb]
48201d: push rbp
48201e: push rbx
48201f: mov rbx, qword ptr [rip + 0x3e0ca]
482026: lea rdi, [rbx + r12 + 8]
48202b: call 0x426410
482030: test rax, rax
482033: je 0x4820d0
482039: mov rbp, rax
48203c: xor edx, edx
48203e: lea rax, [rax + r12 - 1]
482043: mov esi, 0x10
482048: div r12
48204b: imul rax, r12
48204f: lea r12, [rbx + rax - 0x900]
482057: xor eax, eax
482059: lea rdi, [r12 + 8]
48205e: mov rcx, r12
482061: mov qword ptr [r12], 0
482069: mov qword ptr [r12 + 0x8f8], 0
482075: and rdi, 0xfffffffffffffff8
482079: sub rcx, rdi
48207c: add ecx, 0x900
482082: shr ecx, 3
482085: rep stosq qword ptr [rdi], rax
482088: mov qword ptr [r12 + 0x900], rbp
482090: mov rdi, qword ptr [rip + 0x41279]
482097: lea rbx, [rdi + 0xe]
48209b: add rdi, 0x10
48209f: call 0x427d10
4820a4: test rax, rax
4820a7: je 0x4820bd
4820a9: mov qword ptr [rax], rbx
4820ac: add rax, 0x10
4820b0: mov qword ptr [r12 + 8], rax
4820b5: mov rax, r12
4820b8: pop rbx
4820b9: pop rbp
4820ba: pop r12
4820bc: ret 
4820bd: mov rdi, rbp
4820c0: xor r12d, r12d
4820c3: call 0x426a00
4820c8: mov rax, r12
4820cb: pop rbx
4820cc: pop rbp
4820cd: pop r12
4820cf: ret 
4820d0: xor r12d, r12d
4820d3: pop rbx
4820d4: pop rbp
4820d5: mov rax, r12
4820d8: pop r12
4820da: ret 
4820db: nop dword ptr [rax + rax]
4820e0: endbr64 
4820e4: push r15
4820e6: push r14
4820e8: push r13
4820ea: push r12
4820ec: push rbp
4820ed: push rbx
4820ee: sub rsp, 0x18
4820f2: mov qword ptr [rsp + 8], rdi
4820f7: test rdi, rdi
4820fa: je 0x482214
482100: mov rax, qword ptr [rdi + 8]
482104: mov rsi, qword ptr [rip + 0x41205]
48210b: mov qword ptr [rsp], rax
48210f: cmp qword ptr [rax - 0x10], rsi
482113: jb 0x482268
482119: mov r15, qword ptr [rip + 0x41600]
482120: xor r12d, r12d
482123: xor ebp, ebp
482125: nop dword ptr [rax]
482128: xor ebx, ebx
48212a: test rbp, rbp
48212d: sete bl
482130: cmp rbx, qword ptr [r15]
482133: jb 0x4821ff
482139: jmp 0x482230
48213e: nop 
482140: mov rdx, rbx
482143: shl rdx, 4
482147: mov rax, qword ptr [r15 + rdx + 0x18]
48214c: test rax, rax
48214f: je 0x4821f6
482155: mov rdx, qword ptr [r15 + rdx + 0x10]
48215a: cmp rdx, qword ptr [rip + 0x415cf]
482161: ja 0x4822ed
482167: mov r8, qword ptr [rax + 0x458]
48216e: cmp r12, rdx
482171: mov rsi, qword ptr [rax + 0x450]
482178: cmovb r12, rdx
48217c: movdqa xmm0, xmmword ptr [rip + 0x13ecc]
482184: mov rdx, r8
482187: lea r9, [rsi + 1]
48218b: shl rdx, 4
48218f: add rdx, qword ptr [rsp]
482193: movups xmmword ptr [rdx], xmm0
482196: cmp r9, 1
48219a: jbe 0x4821ef
48219c: cmp r8, rdi
48219f: jne 0x482381
4821a5: mov r14, qword ptr [rax + 0x438]
4821ac: mov r13, qword ptr [rax + 0x430]
4821b3: cmp r14, r13
4821b6: jb 0x482343
4821bc: cmp rsi, r14
4821bf: jb 0x482362
4821c5: mov rdi, qword ptr [rsp + 8]
4821ca: sub rdi, rsi
4821cd: mov rsi, qword ptr [rax + 0x428]
4821d4: mov qword ptr [rdx], rdi
4821d7: mov rdx, r13
4821da: call 0x401150
4821df: mov rdx, r14
4821e2: xor esi, esi
4821e4: mov rdi, rax
4821e7: sub rdx, r13
4821ea: call 0x401110
4821ef: mov rsi, qword ptr [rip + 0x4111a]
4821f6: add rbx, 1
4821fa: cmp qword ptr [r15], rbx
4821fd: jbe 0x482230
4821ff: lea rdi, [rbp + rbx]
482204: cmp rdi, rsi
482207: jbe 0x482140
48220d: mov rax, qword ptr [rsp]
482211: mov qword ptr [rax], r12
482214: mov rax, qword ptr [rsp + 8]
482219: add rsp, 0x18
48221d: pop rbx
48221e: pop rbp
48221f: pop r12
482221: pop r13
482223: pop r14
482225: pop r15
482227: ret 
482228: nop dword ptr [rax + rax]
482230: add rbp, rbx
482233: cmp rbp, rsi
482236: jae 0x48220d
482238: mov r15, qword ptr [r15 + 8]
48223c: test r15, r15
48223f: jne 0x482128
482245: lea rcx, [rip + 0x29484]
48224c: mov edx, 0x205
482251: lea rsi, [rip + 0x29422]
482258: lea rdi, [rip + 0x2942b]
48225f: call 0x4032a0
482264: nop dword ptr [rax]
482268: mov rax, qword ptr [rip + 0x410a1]
48226f: lea rdx, [rip + 0x410ba]
482276: lea rbx, [rax + 0xe]
48227a: mov rcx, qword ptr [rsp]
48227e: mov rbp, qword ptr [rcx - 0x10]
482282: cmp rcx, rdx
482285: je 0x48230c
48228b: add rax, 0x10
48228f: mov rdi, rcx
482292: shl rax, 4
482296: sub rdi, 0x10
48229a: mov rsi, rax
48229d: call 0x427100
4822a2: mov r12, rax
4822a5: test rax, rax
4822a8: je 0x4823a0
4822ae: lea r14, [rbp + 2]
4822b2: shl r14, 4
4822b6: mov qword ptr [r12], rbx
4822ba: sub rbx, rbp
4822bd: xor esi, esi
4822bf: lea rdi, [r12 + r14]
4822c3: mov rdx, rbx
4822c6: shl rdx, 4
4822ca: call 0x401110
4822cf: mov rcx, qword ptr [rsp + 8]
4822d4: lea rax, [r12 + 0x10]
4822d9: mov rsi, qword ptr [rip + 0x41030]
4822e0: mov qword ptr [rsp], rax
4822e4: mov qword ptr [rcx + 8], rax
4822e8: jmp 0x482119
4822ed: lea rcx, [rip + 0x293dc]
4822f4: mov edx, 0x1e1
4822f9: lea rsi, [rip + 0x2937a]
482300: lea rdi, [rip + 0x29289]
482307: call 0x4032a0
48230c: add rax, 0x10
482310: shl rax, 4
482314: mov rdi, rax
482317: call 0x426410
48231c: mov r12, rax
48231f: test rax, rax
482322: je 0x4823a0
482324: lea r14, [rbp + 2]
482328: lea rsi, [rip + 0x40ff1]
48232f: mov rdi, rax
482332: shl r14, 4
482336: mov rdx, r14
482339: call 0x401060
48233e: jmp 0x4822b6
482343: lea rcx, [rip + 0x29386]
48234a: mov edx, 0x1ec
48234f: lea rsi, [rip + 0x29324]
482356: lea rdi, [rip + 0x2928b]
48235d: call 0x4032a0
482362: lea rcx, [rip + 0x29367]
482369: mov edx, 0x1ee
48236e: lea rsi, [rip + 0x29305]
482375: lea rdi, [rip + 0x292a4]
48237c: call 0x4032a0
482381: lea rcx, [rip + 0x29348]
482388: mov edx, 0x1eb
48238d: lea rsi, [rip + 0x292e6]
482394: lea rdi, [rip + 0x2922d]
48239b: call 0x4032a0
4823a0: call 0x481e50
4823a5: nop word ptr cs:[rax + rax]
4823b0: endbr64 
4823b4: push rbp
4823b5: push rbx
4823b6: sub rsp, 8
4823ba: test rdi, rdi
4823bd: je 0x482400
4823bf: mov rbp, rdi
4823c2: mov rdi, qword ptr [rip + 0x40f47]
4823c9: mov esi, 0x10
4823ce: lea rbx, [rdi + 0xe]
4823d2: add rdi, 0x10
4823d6: call 0x427d10
4823db: test rax, rax
4823de: je 0x482416
4823e0: mov qword ptr [rax], rbx
4823e3: add rax, 0x10
4823e7: mov qword ptr [rbp + 8], rax
4823eb: add rsp, 8
4823ef: mov rdi, rbp
4823f2: pop rbx
4823f3: pop rbp
4823f4: jmp 0x4820e0
4823f9: nop dword ptr [rax]
482400: call 0x482010
482405: add rsp, 8
482409: mov rbp, rax
48240c: pop rbx
48240d: mov rdi, rbp
482410: pop rbp
482411: jmp 0x4820e0
482416: xor ebp, ebp
482418: jmp 0x4823eb
48241a: nop word ptr [rax + rax]
482420: endbr64 
482424: push r13
482426: mov r13d, esi
482429: push r12
48242b: mov r12, rdi
48242e: push rbp
48242f: push rbx
482430: sub rsp, 8
482434: mov rbp, qword ptr [rdi + 8]
482438: cmp qword ptr [rbp - 0x10], 0
48243d: je 0x482463
48243f: xor ebx, ebx
482441: nop dword ptr [rax]
482448: add rbx, 1
48244c: mov rax, rbx
48244f: shl rax, 4
482453: mov rdi, qword ptr [rbp + rax + 8]
482458: call 0x426a00
48245d: cmp rbx, qword ptr [rbp - 0x10]
482461: jb 0x482448
482463: lea rax, [rip + 0x40ec6]
48246a: cmp rbp, rax
48246d: je 0x482478
48246f: lea rdi, [rbp - 0x10]
482473: call 0x426a00
482478: test r13b, r13b
48247b: jne 0x482490
48247d: add rsp, 8
482481: pop rbx
482482: pop rbp
482483: pop r12
482485: pop r13
482487: ret 
482488: nop dword ptr [rax + rax]
482490: mov rdi, qword ptr [r12 + 0x900]
482498: add rsp, 8
48249c: pop rbx
48249d: pop rbp
48249e: pop r12
4824a0: pop r13
4824a2: jmp 0x426a00
4824a7: nop word ptr [rax + rax]
4824b0: endbr64 
4824b4: mov rax, qword ptr [rdi + 0x458]
4824bb: test rax, rax
4824be: je 0x48252a
4824c0: mov rdx, qword ptr fs:[8]
4824c9: mov r8, qword ptr [rdx]
4824cc: cmp r8, qword ptr [rip + 0x4125d]
4824d3: jne 0x4824f0
4824d5: shl rax, 4
4824d9: mov rax, qword ptr [rdx + rax]
4824dd: mov edx, 0
4824e2: cmp rax, -1
4824e6: cmove rax, rdx
4824ea: ret 
4824eb: nop dword ptr [rax + rax]
4824f0: cmp rax, qword ptr [rdx - 0x10]
4824f4: jae 0x48252a
4824f6: mov rsi, qword ptr [rip + 0x41223]
4824fd: mov rcx, rax
482500: mov rdi, qword ptr [rsi]
482503: cmp rax, rdi
482506: jb 0x48251f
482508: nop dword ptr [rax + rax]
482510: mov rsi, qword ptr [rsi + 8]
482514: sub rcx, rdi
482517: mov rdi, qword ptr [rsi]
48251a: cmp rdi, rcx
48251d: jbe 0x482510
48251f: shl rcx, 4
482523: cmp r8, qword ptr [rcx + rsi + 0x10]
482528: jae 0x4824d5
48252a: xor eax, eax
48252c: ret 
48252d: nop dword ptr [rax]
482530: endbr64 
482534: push r13
482536: mov r13d, esi
482539: push r12
48253b: mov r12, rdi
48253e: push rbp
48253f: push rbx
482540: sub rsp, 8
482544: mov rbp, qword ptr [rdi + 0x458]
48254b: mov rbx, qword ptr [rip + 0x411ce]
482552: jmp 0x482567
482554: nop dword ptr [rax]
482558: sub rbp, rax
48255b: mov rax, qword ptr [rbx + 8]
48255f: test rax, rax
482562: je 0x4825a0
482564: mov rbx, rax
482567: mov rax, qword ptr [rbx]
48256a: cmp rax, rbp
48256d: jbe 0x482558
48256f: test r13b, r13b
482572: je 0x48258e
482574: mov rax, qword ptr [rip + 0x411b5]
48257b: shl rbp, 4
48257f: add rbx, rbp
482582: add rax, 1
482586: mov qword ptr [rbx + 0x18], r12
48258a: mov qword ptr [rbx + 0x10], rax
48258e: add rsp, 8
482592: pop rbx
482593: pop rbp
482594: pop r12
482596: pop r13
482598: ret 
482599: nop dword ptr [rax]
4825a0: test rbp, rbp
4825a3: jne 0x4825e6
4825a5: mov edi, 0x3f0
4825aa: call 0x426410
4825af: mov qword ptr [rbx + 8], rax
4825b3: mov rdx, rax
4825b6: test rax, rax
4825b9: je 0x482605
4825bb: lea rsi, [rax + 0x10]
4825bf: mov qword ptr [rax], 0x3e
4825c6: mov ecx, 0x7c
4825cb: mov rbx, rdx
4825ce: mov qword ptr [rax + 8], 0
4825d6: mov rdi, rsi
4825d9: mov rax, rbp
4825dc: rep stosq qword ptr [rdi], rax
4825df: test r13b, r13b
4825e2: je 0x48258e
4825e4: jmp 0x482574
4825e6: lea rcx, [rip + 0x290c3]
4825ed: mov edx, 0x392
4825f2: lea rsi, [rip + 0x29081]
4825f9: lea rdi, [rip + 0x29098]
482600: call 0x4032a0
482605: lea rcx, [rip + 0x2904c]
48260c: lea rsi, [rip + 0x2908e]
482613: mov edi, 0xc
482618: add qword ptr [rip + 0x41110], 1
482620: call 0x485060
482625: nop word ptr cs:[rax + rax]
48262f: nop 
482630: endbr64 
482634: push r13
482636: push r12
482638: push rbp
482639: push rbx
48263a: sub rsp, 0x1000
482641: or qword ptr [rsp], 0
482646: sub rsp, 8
48264a: mov edx, 0x1000
48264f: lea rdi, [rip + 0x290ad]
482656: mov eax, 0x59
48265b: mov rbp, rsp
48265e: mov rsi, rbp
482661: syscall 
482663: cmp eax, 0xfffff000
482668: ja 0x4826c8
48266a: test eax, eax
48266c: jle 0x4826c8
48266e: movzx edx, byte ptr [rsp]
482672: cmp dl, 0x5b
482675: je 0x4826c8
482677: cmp dl, 0x2f
48267a: jne 0x482766
482680: mov ecx, eax
482682: cdqe 
482684: add rax, rbp
482687: jmp 0x4826a2
482689: nop dword ptr [rax]
482690: sub rax, 1
482694: lea ebx, [rcx - 1]
482697: cmp byte ptr [rax], 0x2f
48269a: je 0x482740
4826a0: mov ecx, ebx
4826a2: cmp ecx, 1
4826a5: jne 0x482690
4826a7: mov edi, 2
4826ac: call 0x426410
4826b1: mov r12, rax
4826b4: test rax, rax
4826b7: je 0x482728
4826b9: mov eax, 0x2f
4826be: mov word ptr [r12], ax
4826c3: jmp 0x48272f
4826c5: nop dword ptr [rax]
4826c8: mov rbp, qword ptr [rip + 0x41151]
4826cf: test rbp, rbp
4826d2: je 0x482728
4826d4: mov rdi, rbp
4826d7: call 0x401180
4826dc: lea rdi, [rax + 1]
4826e0: mov r13, rax
4826e3: call 0x426410
4826e8: mov r12, rax
4826eb: test rax, rax
4826ee: je 0x482728
4826f0: mov rdx, r13
4826f3: mov rsi, rbp
4826f6: mov rdi, rax
4826f9: call 0x401150
4826fe: lea rdx, [r12 + 1]
482703: cmp rax, rdx
482706: ja 0x482719
482708: jmp 0x48271f
48270a: nop word ptr [rax + rax]
482710: sub rax, 1
482714: cmp rax, rdx
482717: je 0x48271f
482719: cmp byte ptr [rax - 1], 0x2f
48271d: je 0x482710
48271f: mov byte ptr [rax], 0
482722: jmp 0x48272f
482724: nop dword ptr [rax]
482728: mov r12, 0xffffffffffffffff
48272f: add rsp, 0x1008
482736: mov rax, r12
482739: pop rbx
48273a: pop rbp
48273b: pop r12
48273d: pop r13
48273f: ret 
482740: add ecx, 1
482743: movsxd rdi, ecx
482746: call 0x426410
48274b: mov r12, rax
48274e: test rax, rax
482751: je 0x482728
482753: movsxd rdx, ebx
482756: mov rsi, rbp
482759: mov rdi, r12
48275c: call 0x401150
482761: mov byte ptr [rax], 0
482764: jmp 0x48272f
482766: lea rcx, [rip + 0x28fe3]
48276d: mov edx, 0x2f
482772: lea rsi, [rip + 0x28faf]
482779: lea rdi, [rip + 0x28f92]
482780: call 0x4032a0
482785: nop word ptr cs:[rax + rax]
48278f: nop 
482790: endbr64 
482794: push r12
482796: push rbp
482797: mov rbp, rdi
48279a: sub rsp, 8
48279e: mov r12d, dword ptr fs:[0x18]
4827a7: test r12d, r12d
4827aa: jne 0x4827c0
4827ac: call 0x426a00
4827b1: add rsp, 8
4827b5: mov eax, r12d
4827b8: pop rbp
4827b9: pop r12
4827bb: ret 
4827bc: nop dword ptr [rax]
4827c0: mov r12, qword ptr [rip + 0x41051]
4827c7: test r12, r12
4827ca: je 0x482828
4827cc: mov rax, qword ptr [r12]
4827d0: cmp rax, 0x31
4827d4: ja 0x4827f0
4827d6: lea rdx, [rax + 1]
4827da: mov qword ptr [r12], rdx
4827de: mov qword ptr [r12 + rax*8 + 8], rdi
4827e3: xor r12d, r12d
4827e6: jmp 0x4827b1
4827e8: nop dword ptr [rax + rax]
4827f0: call qword ptr [rip + 0x40fd2]
4827f6: mov rax, qword ptr [r12]
4827fa: test rax, rax
4827fd: je 0x48281b
4827ff: nop 
482800: sub rax, 1
482804: mov qword ptr [r12], rax
482808: mov rdi, qword ptr [r12 + rax*8 + 8]
48280d: call 0x426a00
482812: mov rax, qword ptr [r12]
482816: test rax, rax
482819: jne 0x482800
48281b: mov r12d, 1
482821: jmp 0x4827b1
482823: nop dword ptr [rax + rax]
482828: mov edi, 0x198
48282d: call 0x426410
482832: mov qword ptr [rip + 0x40fdf], rax
482839: test rax, rax
48283c: je 0x482851
48283e: mov qword ptr [rax + 8], rbp
482842: xor r12d, r12d
482845: mov qword ptr [rax], 1
48284c: jmp 0x4827b1
482851: call qword ptr [rip + 0x40f71]
482857: mov rdi, rbp
48285a: mov r12d, 1
482860: call 0x426a00
482865: jmp 0x4827b1
48286a: nop word ptr [rax + rax]
482870: endbr64 
482874: mov rsi, qword ptr [rip + 0x3e89d]
48287b: mov edx, dword ptr [rip + 0x3d66f]
482881: push rbx
482882: mov rbx, rdi
482885: mov rdi, rsi
482888: neg rdi
48288b: and rdi, qword ptr [rbx]
48288e: call 0x451ca0
482893: test eax, eax
482895: jne 0x4828b0
482897: mov qword ptr [rbx], 0
48289e: pop rbx
48289f: or dword ptr [rip + 0x3e862], 1
4828a6: ret 
4828a7: nop word ptr [rax + rax]
4828b0: endbr64 
4828b4: mov rax, 0xffffffffffffffc0
4828bb: pop rbx
4828bc: mov eax, dword ptr fs:[rax]
4828bf: ret 
4828c0: endbr64 
4828c4: sub rsp, 0x20
4828c8: mov qword ptr [rsp], rbx
4828cc: mov qword ptr [rsp + 8], rax
4828d1: mov rbx, rsp
4828d4: and rsp, 0xffffffffffffffc0
4828d8: sub rsp, 0x380
4828df: mov qword ptr [rbx + 0x18], rsp
4828e3: mov qword ptr [rsp], rdx
4828e7: mov qword ptr [rsp + 8], r8
4828ec: mov qword ptr [rsp + 0x10], r9
4828f1: mov qword ptr [rsp + 0x18], rcx
4828f6: mov qword ptr [rsp + 0x20], rsi
4828fb: mov qword ptr [rsp + 0x28], rdi
482900: mov qword ptr [rsp + 0x30], rbp
482905: lea rax, [rbx + 0x30]
482909: mov qword ptr [rsp + 0x38], rax
48290e: movaps xmmword ptr [rsp + 0x40], xmm0
482913: movaps xmmword ptr [rsp + 0x50], xmm1
482918: movaps xmmword ptr [rsp + 0x60], xmm2
48291d: movaps xmmword ptr [rsp + 0x70], xmm3
482922: movaps xmmword ptr [rsp + 0x80], xmm4
48292e: nop 
48292f: add byte ptr [rax], al
482931: add byte ptr [rdi], cl
482933: sub dword ptr [rsp + 0xa0], esi
48293a: movaps xmmword ptr [rsp + 0xb0], xmm7
482942: bndmov xmmword ptr [rsp + 0x2c0], bnd0
48294b: bndmov xmmword ptr [rsp + 0x2d0], bnd1
482954: bndmov xmmword ptr [rsp + 0x2e0], bnd2
482961: and al, 0xf0
482963: add al, byte ptr [rax]
482968: std 
482969: jg 0x4829b0
48296c: and al, 3
482970: std 
482972: jg 0x4829c0
482974: and al, 4
482978: std 
482979: jg 0x4829d0
48297c: and al, 5
482980: std 
482983: pop rsp
482984: and al, 6
482988: std 
482989: jg 0x4829f0
48298c: and al, 7
482990: std 
482991: jg 0x482a00
482994: and al, 8
482998: std 
482999: jg 0x482a10
48299c: and al, 9
4829a0: std 
4829a1: jg 0x482a20
4829a5: or al, ch
4829a7: stc 
4829a8: jg 0x48292e
4829aa: and al, 0
4829ac: add eax, dword ptr [rax]
4829ae: add ch, al
4829b0: stc 
4829b1: jg 0x48293f
4829b3: and al, 0x10
4829b5: add eax, dword ptr [rax]
4829b7: add ch, al
4829b9: stc 
4829ba: jg 0x482950
4829bc: and al, 0x20
4829be: add eax, dword ptr [rax]
4829c0: add ch, al
4829c2: stc 
4829c3: jg 0x482961
4829c5: and al, 0x30
4829c7: add eax, dword ptr [rax]
4829c9: add ch, al
4829cb: stc 
4829cc: jg 0x482972
4829ce: and al, 0x40
4829d0: add eax, dword ptr [rax]
4829d2: add ch, al
4829d4: stc 
4829d5: jg 0x482983
4829d7: and al, 0x50
4829d9: add eax, dword ptr [rax]
4829db: add ch, al
4829dd: stc 
4829de: jg 0x482994
4829e0: and al, 0x60
4829e2: add eax, dword ptr [rax]
4829e4: add ch, al
4829e6: stc 
4829e7: jg 0x4829a5
4829e9: and al, 0x70
4829eb: add eax, dword ptr [rax]
4829ed: add byte ptr [rax - 0x77], cl
4829f0: loope 0x482a3a
4829f2: mov edx, dword ptr [rbx + 0x30]
4829f5: mov rsi, qword ptr [rbx + 0x28]
4829f9: mov rdi, qword ptr [rbx + 0x20]
482a00: adc al, ch
482a02: jp 0x482a5c
482a04: add byte ptr [rax], al
482a06: mov r11, rax
482a09: mov rax, qword ptr [rbx + 8]
482a0d: mov rdx, qword ptr [rsp]
482a11: mov r8, qword ptr [rsp + 8]
482a16: mov r9, qword ptr [rsp + 0x10]
482a1b: movaps xmm0, xmmword ptr [rsp + 0x40]
482a20: movaps xmm1, xmmword ptr [rsp + 0x50]
482a20: movaps xmm1, xmmword ptr [rsp + 0x50]
482a25: movaps xmm2, xmmword ptr [rsp + 0x60]
482a25: movaps xmm2, xmmword ptr [rsp + 0x60]
482a2a: movaps xmm3, xmmword ptr [rsp + 0x70]
482a2a: movaps xmm3, xmmword ptr [rsp + 0x70]
482a2f: movaps xmm4, xmmword ptr [rsp + 0x80]
482a2f: movaps xmm4, xmmword ptr [rsp + 0x80]
482a3a: and al, 0x90
482a3c: add byte ptr [rax], al
482a3e: add byte ptr [rdi], cl
482a40: sub byte ptr [rsp + 0xa0], dh
482a47: movaps xmm7, xmmword ptr [rsp + 0xb0]
482a4f: vpcmpeqq xmm8, xmm0, xmmword ptr [rsp + 0x300]
482a59: vpmovmskb esi, xmm8
482a5e: cmp esi, 0xffff
482a64: je 0x482a71
482a66: vmovdqa xmmword ptr [rsp + 0xc0], xmm0
482a6f: jmp 0x482a7f
482a73: std 
482a76: and al, 3
482a79: vmovdqa xmmword ptr [rsp + 0x40], xmm0
482a7f: vpcmpeqq xmm8, xmm1, xmmword ptr [rsp + 0x310]
482a89: vpmovmskb esi, xmm8
482a8e: cmp esi, 0xffff
482a94: je 0x482aa1
482a96: vmovdqa xmmword ptr [rsp + 0x100], xmm1
482a9f: jmp 0x482aaf
482aa3: std 
482aa6: and al, 4
482aa9: vmovdqa xmmword ptr [rsp + 0x50], xmm1
482aaf: vpcmpeqq xmm8, xmm2, xmmword ptr [rsp + 0x320]
482ab9: vpmovmskb esi, xmm8
482abe: cmp esi, 0xffff
482ac4: je 0x482ad1
482ac6: vmovdqa xmmword ptr [rsp + 0x140], xmm2
482acf: jmp 0x482adf
482ad3: std 
482ad6: push rsp
482ad7: and al, 5
482ad9: vmovdqa xmmword ptr [rsp + 0x60], xmm2
482adf: vpcmpeqq xmm8, xmm3, xmmword ptr [rsp + 0x330]
482ae9: vpmovmskb esi, xmm8
482aee: cmp esi, 0xffff
482af4: je 0x482b01
482af6: vmovdqa xmmword ptr [rsp + 0x180], xmm3
482aff: jmp 0x482b0f
482b03: std 
482b06: pop rsp
482b07: and al, 6
482b09: vmovdqa xmmword ptr [rsp + 0x70], xmm3
482b0f: vpcmpeqq xmm8, xmm4, xmmword ptr [rsp + 0x340]
482b19: vpmovmskb esi, xmm8
482b1e: cmp esi, 0xffff
482b24: je 0x482b31
482b26: vmovdqa xmmword ptr [rsp + 0x1c0], xmm4
482b2f: jmp 0x482b42
482b33: std 
482b36: and al, 7
482b39: vmovdqa xmmword ptr [rsp + 0x80], xmm4
482b42: vpcmpeqq xmm8, xmm5, xmmword ptr [rsp + 0x350]
482b4c: vpmovmskb esi, xmm8
482b51: cmp esi, 0xffff
482b57: je 0x482b64
482b59: vmovdqa xmmword ptr [rsp + 0x200], xmm5
482b62: jmp 0x482b75
482b66: std 
482b6a: and al, 8
482b6c: vmovdqa xmmword ptr [rsp + 0x90], xmm5
482b75: vpcmpeqq xmm8, xmm6, xmmword ptr [rsp + 0x360]
482b7f: vpmovmskb esi, xmm8
482b84: cmp esi, 0xffff
482b8a: je 0x482b97
482b92: add al, byte ptr [rax]
482b94: add bl, ch
482b99: std 
482b9c: je 0x482bc2
482b9e: or ebp, eax
482ba0: stc 
482ba1: jg 0x482b57
482ba3: and al, 0xa0
482ba5: add byte ptr [rax], al
482ba8: vpcmpeqq xmm8, xmm7, xmmword ptr [rsp + 0x370]
482bb2: vpmovmskb esi, xmm8
482bb7: cmp esi, 0xffff
482bbd: je 0x482bca
482bc2: mov esp, 0x28024
482bc7: add bl, ch
482bcc: std 
482bcf: jl 0x482bf5
482bd1: or al, ch
482bd3: stc 
482bd4: jg 0x482b92
482bd6: and al, 0xb0
482bd8: add byte ptr [rax], al
482bdb: bndmov bnd0, xmmword ptr [rsp + 0x2c0]
482be4: bndmov bnd1, xmmword ptr [rsp + 0x2d0]
482bf7: bndldx bnd3, [rsp + 0x2f0]
482bff: mov r10, qword ptr [rbx + 0x10]
482c03: test r10, r10
482c06: bnd jns 0x482c27
482c09: mov rcx, qword ptr [rsp + 0x18]
482c0e: mov rsi, qword ptr [rsp + 0x20]
482c13: mov rdi, qword ptr [rsp + 0x28]
482c19: mov esp, ebx
482c1b: mov rbx, qword ptr [rsp]
482c1f: add rsp, 0x30
482c23: bnd jmp r11
482c27: lea rsi, [rbx + 0x38]
482c2b: add r10, 8
482c2f: and r10, 0xfffffffffffffff0
482c33: mov rcx, r10
482c36: sub rsp, r10
482c39: mov rdi, rsp
482c3c: shr rcx, 3
482c40: rep movsq qword ptr [rdi], qword ptr [rsi]
482c43: mov rcx, qword ptr [rdi + 0x18]
482c47: mov rsi, qword ptr [rdi + 0x20]
482c4b: mov rdi, qword ptr [rdi + 0x28]
482c4f: bnd call r11
482c53: mov rsp, qword ptr [rbx + 0x18]
482c57: sub rsp, 0x110
482c5e: mov rcx, rsp
482c61: mov qword ptr [rcx], rax
482c64: mov qword ptr [rcx + 8], rdx
482c68: movaps xmmword ptr [rcx + 0x10], xmm0
482c6c: movaps xmmword ptr [rcx + 0x20], xmm1
482c72: std 
482c73: jg 0x482bf7
482c76: push rax
482c77: add byte ptr [rax], al
482c79: add byte ptr [rdx - 0xf], ah
482c7c: std 
482c7d: jg 0x482c09
482c80: nop 
482c81: add byte ptr [rax], al
482c83: add ch, al
482c85: stc 
482c86: jg 0x482c09
482c88: lock add byte ptr [rax], al
482c8b: add ch, al
482c8d: stc 
482c8e: jg 0x482c19
482c90: add byte ptr [rcx], al
482c92: add byte ptr [rax], al
482c94: bndmov xmmword ptr [rcx + 0xd0], bnd0
482c9c: bndmov xmmword ptr [rcx + 0xe0], bnd1
482ca4: fstp xword ptr [rcx + 0x30]
482ca7: fstp xword ptr [rcx + 0x40]
482caa: mov rdx, qword ptr [rbx + 0x18]
482cae: mov rsi, qword ptr [rbx + 0x28]
482cb2: mov rdi, qword ptr [rbx + 0x20]
482cb6: call 0x4884e0
482cbb: mov rax, qword ptr [rsp]
482cbf: mov rdx, qword ptr [rsp + 8]
482cc4: movaps xmm0, xmmword ptr [rsp + 0x10]
482cc9: movaps xmm1, xmmword ptr [rsp + 0x20]
482cce: vpcmpeqq xmm2, xmm0, xmmword ptr [rsp + 0xf0]
482cd8: vpmovmskb esi, xmm2
482cdc: cmp esi, 0xffff
482ce2: jne 0x482cef
482ce6: std 
482ce9: test byte ptr [rax + rdx*2], ah
482cec: add byte ptr [rax], al
482cf2: sub dword ptr [rsp + 0x100], edx
482cf9: vpmovmskb esi, xmm2
482cfd: cmp esi, 0xffff
482d03: jne 0x482d10
482d07: std 
482d0a: mov word ptr [rax + rdx*4], fs
482d0d: add byte ptr [rax], al
482d10: bndmov bnd0, xmmword ptr [rsp + 0xd0]
482d19: bndmov bnd1, xmmword ptr [rsp + 0xe0]
482d22: fld xword ptr [rsp + 0x40]
482d26: fld xword ptr [rsp + 0x30]
482d2a: mov rsp, rbx
482d2d: mov rbx, qword ptr [rsp]
482d31: add rsp, 0x30
482d35: bnd ret 
482d37: nop word ptr [rax + rax]
482d40: endbr64 
482d44: sub rsp, 0x20
482d48: mov qword ptr [rsp], rbx
482d4c: mov qword ptr [rsp + 8], rax
482d51: mov rbx, rsp
482d54: and rsp, 0xffffffffffffffe0
482d58: sub rsp, 0x380
482d5f: mov qword ptr [rbx + 0x18], rsp
482d63: mov qword ptr [rsp], rdx
482d67: mov qword ptr [rsp + 8], r8
482d6c: mov qword ptr [rsp + 0x10], r9
482d71: mov qword ptr [rsp + 0x18], rcx
482d76: mov qword ptr [rsp + 0x20], rsi
482d7b: mov qword ptr [rsp + 0x28], rdi
482d80: mov qword ptr [rsp + 0x30], rbp
482d85: lea rax, [rbx + 0x30]
482d89: mov qword ptr [rsp + 0x38], rax
482d8e: movaps xmmword ptr [rsp + 0x40], xmm0
482d93: movaps xmmword ptr [rsp + 0x50], xmm1
482d98: movaps xmmword ptr [rsp + 0x60], xmm2
482d9d: movaps xmmword ptr [rsp + 0x70], xmm3
482da2: movaps xmmword ptr [rsp + 0x80], xmm4
482daa: movaps xmmword ptr [rsp + 0x90], xmm5
482db2: movaps xmmword ptr [rsp + 0xa0], xmm6
482dba: movaps xmmword ptr [rsp + 0xb0], xmm7
482dc2: bndmov xmmword ptr [rsp + 0x2c0], bnd0
482dcb: bndmov xmmword ptr [rsp + 0x2d0], bnd1
482dd4: bndmov xmmword ptr [rsp + 0x2e0], bnd2
482ddd: bndmov xmmword ptr [rsp + 0x2f0], bnd3
482de6: vmovdqa ymmword ptr [rsp + 0xc0], ymm0
482def: vmovdqa ymmword ptr [rsp + 0x100], ymm1
482df8: vmovdqa ymmword ptr [rsp + 0x140], ymm2
482e01: vmovdqa ymmword ptr [rsp + 0x180], ymm3
482e0a: vmovdqa ymmword ptr [rsp + 0x1c0], ymm4
482e13: vmovdqa ymmword ptr [rsp + 0x200], ymm5
482e1c: vmovdqa ymmword ptr [rsp + 0x240], ymm6
482e25: vmovdqa ymmword ptr [rsp + 0x280], ymm7
482e2e: vmovdqa xmmword ptr [rsp + 0x300], xmm0
482e37: vmovdqa xmmword ptr [rsp + 0x310], xmm1
482e40: vmovdqa xmmword ptr [rsp + 0x320], xmm2
482e49: vmovdqa xmmword ptr [rsp + 0x330], xmm3
482e52: vmovdqa xmmword ptr [rsp + 0x340], xmm4
482e5b: vmovdqa xmmword ptr [rsp + 0x350], xmm5
482e64: vmovdqa xmmword ptr [rsp + 0x360], xmm6
482e6d: vmovdqa xmmword ptr [rsp + 0x370], xmm7
482e76: mov rcx, rsp
482e79: mov rdx, qword ptr [rbx + 0x30]
482e7d: mov rsi, qword ptr [rbx + 0x28]
482e81: mov rdi, qword ptr [rbx + 0x20]
482e85: lea r8, [rbx + 0x10]
482e89: call 0x488280
482e8e: mov r11, rax
482e91: mov rax, qword ptr [rbx + 8]
482e95: mov rdx, qword ptr [rsp]
482e99: mov r8, qword ptr [rsp + 8]
482e9e: mov r9, qword ptr [rsp + 0x10]
482ea3: movaps xmm0, xmmword ptr [rsp + 0x40]
482ea8: movaps xmm1, xmmword ptr [rsp + 0x50]
482ead: movaps xmm2, xmmword ptr [rsp + 0x60]
482eb2: movaps xmm3, xmmword ptr [rsp + 0x70]
482eb7: movaps xmm4, xmmword ptr [rsp + 0x80]
482ebf: movaps xmm5, xmmword ptr [rsp + 0x90]
482ec7: movaps xmm6, xmmword ptr [rsp + 0xa0]
482ecf: movaps xmm7, xmmword ptr [rsp + 0xb0]
482ed7: vpcmpeqq xmm8, xmm0, xmmword ptr [rsp + 0x300]
482ee1: vpmovmskb esi, xmm8
482ee6: cmp esi, 0xffff
482eec: je 0x482ef9
482eee: vmovdqa xmmword ptr [rsp + 0xc0], xmm0
482ef7: jmp 0x482f08
482ef9: vmovdqa ymm0, ymmword ptr [rsp + 0xc0]
482f02: vmovdqa xmmword ptr [rsp + 0x40], xmm0
482f08: vpcmpeqq xmm8, xmm1, xmmword ptr [rsp + 0x310]
482f12: vpmovmskb esi, xmm8
482f17: cmp esi, 0xffff
482f1d: je 0x482f2a
482f1f: vmovdqa xmmword ptr [rsp + 0x100], xmm1
482f28: jmp 0x482f39
482f2a: vmovdqa ymm1, ymmword ptr [rsp + 0x100]
482f33: vmovdqa xmmword ptr [rsp + 0x50], xmm1
482f39: vpcmpeqq xmm8, xmm2, xmmword ptr [rsp + 0x320]
482f43: vpmovmskb esi, xmm8
482f48: cmp esi, 0xffff
482f4e: je 0x482f5b
482f50: vmovdqa xmmword ptr [rsp + 0x140], xmm2
482f59: jmp 0x482f6a
482f5b: vmovdqa ymm2, ymmword ptr [rsp + 0x140]
482f64: vmovdqa xmmword ptr [rsp + 0x60], xmm2
482f6a: vpcmpeqq xmm8, xmm3, xmmword ptr [rsp + 0x330]
482f74: vpmovmskb esi, xmm8
482f79: cmp esi, 0xffff
482f7f: je 0x482f8c
482f81: vmovdqa xmmword ptr [rsp + 0x180], xmm3
482f8a: jmp 0x482f9b
482f8c: vmovdqa ymm3, ymmword ptr [rsp + 0x180]
482f95: vmovdqa xmmword ptr [rsp + 0x70], xmm3
482f9b: vpcmpeqq xmm8, xmm4, xmmword ptr [rsp + 0x340]
482fa5: vpmovmskb esi, xmm8
482faa: cmp esi, 0xffff
482fb0: je 0x482fbd
482fb2: vmovdqa xmmword ptr [rsp + 0x1c0], xmm4
482fbb: jmp 0x482fcf
482fbd: vmovdqa ymm4, ymmword ptr [rsp + 0x1c0]
482fc6: vmovdqa xmmword ptr [rsp + 0x80], xmm4
482fcf: vpcmpeqq xmm8, xmm5, xmmword ptr [rsp + 0x350]
482fd9: vpmovmskb esi, xmm8
482fde: cmp esi, 0xffff
482fe4: je 0x482ff1
482fe6: vmovdqa xmmword ptr [rsp + 0x200], xmm5
482fef: jmp 0x483003
482ff1: vmovdqa ymm5, ymmword ptr [rsp + 0x200]
482ffa: vmovdqa xmmword ptr [rsp + 0x90], xmm5
483003: vpcmpeqq xmm8, xmm6, xmmword ptr [rsp + 0x360]
48300d: vpmovmskb esi, xmm8
483012: cmp esi, 0xffff
483018: je 0x483025
48301a: vmovdqa xmmword ptr [rsp + 0x240], xmm6
483023: jmp 0x483037
483025: vmovdqa ymm6, ymmword ptr [rsp + 0x240]
48302e: vmovdqa xmmword ptr [rsp + 0xa0], xmm6
483037: vpcmpeqq xmm8, xmm7, xmmword ptr [rsp + 0x370]
483041: vpmovmskb esi, xmm8
483046: cmp esi, 0xffff
48304c: je 0x483059
48304e: vmovdqa xmmword ptr [rsp + 0x280], xmm7
483057: jmp 0x48306b
483059: vmovdqa ymm7, ymmword ptr [rsp + 0x280]
483062: vmovdqa xmmword ptr [rsp + 0xb0], xmm7
48306b: bndmov bnd0, xmmword ptr [rsp + 0x2c0]
483074: bndmov bnd1, xmmword ptr [rsp + 0x2d0]
48307d: bndmov bnd2, xmmword ptr [rsp + 0x2e0]
483086: bndmov bnd3, xmmword ptr [rsp + 0x2f0]
48308f: mov r10, qword ptr [rbx + 0x10]
483093: test r10, r10
483096: bnd jns 0x4830b7
483099: mov rcx, qword ptr [rsp + 0x18]
48309e: mov rsi, qword ptr [rsp + 0x20]
4830a3: mov rdi, qword ptr [rsp + 0x28]
4830a8: mov rsp, rbx
4830ab: mov rbx, qword ptr [rsp]
4830af: add rsp, 0x30
4830b3: bnd jmp r11
4830b7: lea rsi, [rbx + 0x38]
4830bb: add r10, 8
4830bf: and r10, 0xfffffffffffffff0
4830c3: mov rcx, r10
4830c6: sub rsp, r10
4830c9: mov rdi, rsp
4830cc: shr rcx, 3
4830d0: rep movsq qword ptr [rdi], qword ptr [rsi]
4830d3: mov rcx, qword ptr [rdi + 0x18]
4830d7: mov rsi, qword ptr [rdi + 0x20]
4830db: mov rdi, qword ptr [rdi + 0x28]
4830df: bnd call r11
4830e3: mov rsp, qword ptr [rbx + 0x18]
4830e7: sub rsp, 0x110
4830ee: mov rcx, rsp
4830f1: mov qword ptr [rcx], rax
4830f4: mov qword ptr [rcx + 8], rdx
4830f8: movaps xmmword ptr [rcx + 0x10], xmm0
4830fc: movaps xmmword ptr [rcx + 0x20], xmm1
483100: vmovdqa ymmword ptr [rcx + 0x50], ymm0
483105: vmovdqa ymmword ptr [rcx + 0x90], ymm1
48310d: vmovdqa xmmword ptr [rcx + 0xf0], xmm0
483115: vmovdqa xmmword ptr [rcx + 0x100], xmm1
48311d: bndmov xmmword ptr [rcx + 0xd0], bnd0
483125: bndmov xmmword ptr [rcx + 0xe0], bnd1
48312d: fstp xword ptr [rcx + 0x30]
483130: fstp xword ptr [rcx + 0x40]
483133: mov rdx, qword ptr [rbx + 0x18]
483137: mov rsi, qword ptr [rbx + 0x28]
48313b: mov rdi, qword ptr [rbx + 0x20]
48313f: call 0x4884e0
483144: mov rax, qword ptr [rsp]
483148: mov rdx, qword ptr [rsp + 8]
48314d: movaps xmm0, xmmword ptr [rsp + 0x10]
483152: movaps xmm1, xmmword ptr [rsp + 0x20]
483157: vpcmpeqq xmm2, xmm0, xmmword ptr [rsp + 0xf0]
483161: vpmovmskb esi, xmm2
483165: cmp esi, 0xffff
48316b: jne 0x483173
48316d: vmovdqa ymm0, ymmword ptr [rsp + 0x50]
483173: vpcmpeqq xmm2, xmm1, xmmword ptr [rsp + 0x100]
48317d: vpmovmskb esi, xmm2
483181: cmp esi, 0xffff
483187: jne 0x483192
483189: vmovdqa ymm1, ymmword ptr [rsp + 0x90]
483192: bndmov bnd0, xmmword ptr [rsp + 0xd0]
48319b: bndmov bnd1, xmmword ptr [rsp + 0xe0]
4831a4: fld xword ptr [rsp + 0x40]
4831a8: fld xword ptr [rsp + 0x30]
4831ac: mov rsp, rbx
4831af: mov rbx, qword ptr [rsp]
4831b3: add rsp, 0x30
4831b7: bnd ret 
4831b9: nop dword ptr [rax]
4831c0: endbr64 
4831c4: sub rsp, 0x20
4831c8: mov qword ptr [rsp], rbx
4831cc: mov qword ptr [rsp + 8], rax
4831d1: mov rbx, rsp
4831d4: and rsp, 0xfffffffffffffff0
4831d8: sub rsp, 0x380
4831df: mov qword ptr [rbx + 0x18], rsp
4831e3: mov qword ptr [rsp], rdx
4831e7: mov qword ptr [rsp + 8], r8
4831ec: mov qword ptr [rsp + 0x10], r9
4831f1: mov qword ptr [rsp + 0x18], rcx
4831f6: mov qword ptr [rsp + 0x20], rsi
4831fb: mov qword ptr [rsp + 0x28], rdi
483200: mov qword ptr [rsp + 0x30], rbp
483205: lea rax, [rbx + 0x30]
483209: mov qword ptr [rsp + 0x38], rax
48320e: movaps xmmword ptr [rsp + 0x40], xmm0
483213: movaps xmmword ptr [rsp + 0x50], xmm1
483218: movaps xmmword ptr [rsp + 0x60], xmm2
48321d: movaps xmmword ptr [rsp + 0x70], xmm3
483222: movaps xmmword ptr [rsp + 0x80], xmm4
48322a: movaps xmmword ptr [rsp + 0x90], xmm5
483232: movaps xmmword ptr [rsp + 0xa0], xmm6
48323a: movaps xmmword ptr [rsp + 0xb0], xmm7
483242: bndmov xmmword ptr [rsp + 0x2c0], bnd0
48324b: bndmov xmmword ptr [rsp + 0x2d0], bnd1
483254: bndmov xmmword ptr [rsp + 0x2e0], bnd2
48325d: bndmov xmmword ptr [rsp + 0x2f0], bnd3
483266: mov rcx, rsp
483269: mov rdx, qword ptr [rbx + 0x30]
48326d: mov rsi, qword ptr [rbx + 0x28]
483271: mov rdi, qword ptr [rbx + 0x20]
483275: lea r8, [rbx + 0x10]
483279: call 0x488280
48327e: mov r11, rax
483281: mov rax, qword ptr [rbx + 8]
483285: mov rdx, qword ptr [rsp]
483289: mov r8, qword ptr [rsp + 8]
48328e: mov r9, qword ptr [rsp + 0x10]
483293: movaps xmm0, xmmword ptr [rsp + 0x40]
483298: movaps xmm1, xmmword ptr [rsp + 0x50]
48329d: movaps xmm2, xmmword ptr [rsp + 0x60]
4832a2: movaps xmm3, xmmword ptr [rsp + 0x70]
4832a7: movaps xmm4, xmmword ptr [rsp + 0x80]
4832af: movaps xmm5, xmmword ptr [rsp + 0x90]
4832b7: movaps xmm6, xmmword ptr [rsp + 0xa0]
4832bf: movaps xmm7, xmmword ptr [rsp + 0xb0]
4832c7: bndmov bnd0, xmmword ptr [rsp + 0x2c0]
4832d0: bndmov bnd1, xmmword ptr [rsp + 0x2d0]
4832d9: bndmov bnd2, xmmword ptr [rsp + 0x2e0]
4832e2: bndmov bnd3, xmmword ptr [rsp + 0x2f0]
4832eb: mov r10, qword ptr [rbx + 0x10]
4832ef: test r10, r10
4832f2: bnd jns 0x483313
4832f5: mov rcx, qword ptr [rsp + 0x18]
4832fa: mov rsi, qword ptr [rsp + 0x20]
4832ff: mov rdi, qword ptr [rsp + 0x28]
483304: mov rsp, rbx
483307: mov rbx, qword ptr [rsp]
48330b: add rsp, 0x30
48330f: bnd jmp r11
483313: lea rsi, [rbx + 0x38]
483317: add r10, 8
48331b: and r10, 0xfffffffffffffff0
48331f: mov rcx, r10
483322: sub rsp, r10
483325: mov rdi, rsp
483328: shr rcx, 3
48332c: rep movsq qword ptr [rdi], qword ptr [rsi]
48332f: mov rcx, qword ptr [rdi + 0x18]
483333: mov rsi, qword ptr [rdi + 0x20]
483337: mov rdi, qword ptr [rdi + 0x28]
48333b: bnd call r11
48333f: mov rsp, qword ptr [rbx + 0x18]
483343: sub rsp, 0xf0
48334a: mov rcx, rsp
48334d: mov qword ptr [rcx], rax
483350: mov qword ptr [rcx + 8], rdx
483354: movaps xmmword ptr [rcx + 0x10], xmm0
483358: movaps xmmword ptr [rcx + 0x20], xmm1
48335c: bndmov xmmword ptr [rcx + 0xd0], bnd0
483364: bndmov xmmword ptr [rcx + 0xe0], bnd1
48336c: fstp xword ptr [rcx + 0x30]
48336f: fstp xword ptr [rcx + 0x40]
483372: mov rdx, qword ptr [rbx + 0x18]
483376: mov rsi, qword ptr [rbx + 0x28]
48337a: mov rdi, qword ptr [rbx + 0x20]
48337e: call 0x4884e0
483383: mov rax, qword ptr [rsp]
483387: mov rdx, qword ptr [rsp + 8]
48338c: movaps xmm0, xmmword ptr [rsp + 0x10]
483391: movaps xmm1, xmmword ptr [rsp + 0x20]
483396: bndmov bnd0, xmmword ptr [rsp + 0xd0]
48339f: bndmov bnd1, xmmword ptr [rsp + 0xe0]
4833a8: fld xword ptr [rsp + 0x40]
4833ac: fld xword ptr [rsp + 0x30]
4833b0: mov rsp, rbx
4833b3: mov rbx, qword ptr [rsp]
4833b7: add rsp, 0x30
4833bb: bnd ret 
4833bd: nop dword ptr [rax]
4833c0: endbr64 
4833c4: push rbx
4833c5: mov rbx, rsp
4833c8: and rsp, 0xfffffffffffffff0
4833cc: sub rsp, 0x240
4833d3: mov qword ptr [rsp], rax
4833d7: mov qword ptr [rsp + 8], rcx
4833dc: mov qword ptr [rsp + 0x10], rdx
4833e1: mov qword ptr [rsp + 0x18], rsi
4833e6: mov qword ptr [rsp + 0x20], rdi
4833eb: mov qword ptr [rsp + 0x28], r8
4833f0: mov qword ptr [rsp + 0x30], r9
4833f5: fxsave [rsp + 0x40]
4833fa: mov rsi, qword ptr [rbx + 0x10]
4833fe: mov rdi, qword ptr [rbx + 8]
483402: call 0x4880c0
483407: mov r11, rax
48340a: fxrstor [rsp + 0x40]
48340f: mov r9, qword ptr [rsp + 0x30]
483414: mov r8, qword ptr [rsp + 0x28]
483419: mov rdi, qword ptr [rsp + 0x20]
48341e: mov rsi, qword ptr [rsp + 0x18]
483423: mov rdx, qword ptr [rsp + 0x10]
483428: mov rcx, qword ptr [rsp + 8]
48342d: mov rax, qword ptr [rsp]
483431: mov rsp, rbx
483434: mov rbx, qword ptr [rsp]
483438: add rsp, 0x18
48343c: bnd jmp r11
483440: endbr64 
483444: push rbx
483445: mov rbx, rsp
483448: and rsp, 0xffffffffffffffc0
48344c: sub rsp, qword ptr [rip + 0x3f94d]
483453: mov qword ptr [rsp], rax
483457: mov qword ptr [rsp + 8], rcx
48345c: mov qword ptr [rsp + 0x10], rdx
483461: mov qword ptr [rsp + 0x18], rsi
483466: mov qword ptr [rsp + 0x20], rdi
48346b: mov qword ptr [rsp + 0x28], r8
483470: mov qword ptr [rsp + 0x30], r9
483475: mov eax, 0xee
48347a: xor edx, edx
48347c: mov qword ptr [rsp + 0x240], rdx
483484: mov qword ptr [rsp + 0x248], rdx
48348c: mov qword ptr [rsp + 0x250], rdx
483494: mov qword ptr [rsp + 0x258], rdx
48349c: mov qword ptr [rsp + 0x260], rdx
4834a4: mov qword ptr [rsp + 0x268], rdx
4834ac: mov qword ptr [rsp + 0x270], rdx
4834b4: mov qword ptr [rsp + 0x278], rdx
4834bc: xsave ptr [rsp + 0x40]
4834c1: mov rsi, qword ptr [rbx + 0x10]
4834c5: mov rdi, qword ptr [rbx + 8]
4834c9: call 0x4880c0
4834ce: mov r11, rax
4834d1: mov eax, 0xee
4834d6: xor edx, edx
4834d8: xrstor ptr [rsp + 0x40]
4834dd: mov r9, qword ptr [rsp + 0x30]
4834e2: mov r8, qword ptr [rsp + 0x28]
4834e7: mov rdi, qword ptr [rsp + 0x20]
4834ec: mov rsi, qword ptr [rsp + 0x18]
4834f1: mov rdx, qword ptr [rsp + 0x10]
4834f6: mov rcx, qword ptr [rsp + 8]
4834fb: mov rax, qword ptr [rsp]
4834ff: mov rsp, rbx
483502: mov rbx, qword ptr [rsp]
483506: add rsp, 0x18
48350a: bnd jmp r11
48350e: nop 
483510: endbr64 
483514: push rbx
483515: mov rbx, rsp
483518: and rsp, 0xffffffffffffffc0
48351c: sub rsp, qword ptr [rip + 0x3f87d]
483523: mov qword ptr [rsp], rax
483527: mov qword ptr [rsp + 8], rcx
48352c: mov qword ptr [rsp + 0x10], rdx
483531: mov qword ptr [rsp + 0x18], rsi
483536: mov qword ptr [rsp + 0x20], rdi
48353b: mov qword ptr [rsp + 0x28], r8
483540: mov qword ptr [rsp + 0x30], r9
483545: mov eax, 0xee
48354a: xor edx, edx
48354c: mov qword ptr [rsp + 0x250], rdx
483554: mov qword ptr [rsp + 0x258], rdx
48355c: mov qword ptr [rsp + 0x260], rdx
483564: mov qword ptr [rsp + 0x268], rdx
48356c: mov qword ptr [rsp + 0x270], rdx
483574: mov qword ptr [rsp + 0x278], rdx
48357e: and al, 0x40
483581: mov rsi, qword ptr [rbx + 0x10]
483585: mov rdi, qword ptr [rbx + 8]
483589: call 0x4880c0
48358e: mov r11, rax
483591: mov eax, 0xee
483596: xor edx, edx
483598: xrstor ptr [rsp + 0x40]
48359d: mov r9, qword ptr [rsp + 0x30]
4835a2: mov r8, qword ptr [rsp + 0x28]
4835a7: mov rdi, qword ptr [rsp + 0x20]
4835ac: mov rsi, qword ptr [rsp + 0x18]
4835b1: mov rdx, qword ptr [rsp + 0x10]
4835b6: mov rcx, qword ptr [rsp + 8]
4835bb: mov rax, qword ptr [rsp]
4835bf: mov rsp, rbx
4835c2: mov rbx, qword ptr [rsp]
4835c6: add rsp, 0x18
4835ca: bnd jmp r11
4835ce: nop 
4835d0: push rax
4835d1: pop rax
4835d2: mov edi, 2
4835d7: lea rsi, [rip + 0x28182]
4835de: xor eax, eax
4835e0: sub rsp, 8
4835e4: call 0x4810c0
4835e9: mov edi, 0x7f
4835ee: call 0x4505c0
4835f3: nop word ptr cs:[rax + rax]
4835fe: nop 
483600: endbr64 
483604: push r15
483606: push r14
483608: mov r14d, 1
48360e: push r13
483610: mov r13, rdx
483613: push r12
483615: mov r12, rdi
483618: push rbp
483619: lea rbp, [rip + 0x283f5]
483620: push rbx
483621: sub rsp, 8
483625: test rsi, rsi
483628: je 0x483639
48362a: mov rdi, rsi
48362d: mov rbp, rsi
483630: call 0x401180
483635: lea r14, [rax + 1]
483639: mov rdi, r13
48363c: call 0x401180
483641: lea r15, [rax + 1]
483645: lea rdi, [r15 + r14]
483649: call 0x426410
48364e: mov rbx, rax
483651: test rax, rax
483654: je 0x483699
483656: mov rdx, r15
483659: mov rsi, r13
48365c: mov rdi, rax
48365f: call 0x401150
483664: mov rdx, r14
483667: mov rsi, rbp
48366a: mov rdi, rax
48366d: call 0x401060
483672: movq xmm1, rbx
483677: mov qword ptr [r12 + 0x10], rbx
48367c: movq xmm0, rax
483681: punpcklqdq xmm0, xmm1
483685: movups xmmword ptr [r12], xmm0
48368a: add rsp, 8
48368e: pop rbx
48368f: pop rbp
483690: pop r12
483692: pop r13
483694: pop r14
483696: pop r15
483698: ret 
483699: lea rax, [rip + 0x28138]
4836a0: lea rcx, [rip + 0x2836e]
4836a7: mov qword ptr [r12 + 0x10], 0
4836b0: movq xmm0, rcx
4836b5: movq xmm2, rax
4836ba: punpcklqdq xmm0, xmm2
4836be: movups xmmword ptr [r12], xmm0
4836c3: jmp 0x48368a
4836c5: nop word ptr cs:[rax + rax]
4836d0: endbr64 
4836d4: push r15
4836d6: push r14
4836d8: mov r14, rdx
4836db: push r13
4836dd: push r12
4836df: push rbp
4836e0: push rbx
4836e1: sub rsp, 0x68
4836e5: mov qword ptr [rsp], rdi
4836e9: mov qword ptr [rsp + 0x48], rcx
4836ee: mov qword ptr [rsp + 0x50], r8
4836f3: mov qword ptr [rsp + 0x58], r9
4836f8: test rsi, rsi
4836fb: je 0x483ae8
483701: mov rdi, rsi
483704: mov r12, rsi
483707: call 0x401180
48370c: mov rbx, rax
48370f: lea rax, [rax + 1]
483713: mov qword ptr [rsp + 8], rax
483718: add rbx, 2
48371c: lea rax, [rsp + 0xa0]
483724: mov dword ptr [rsp + 0x18], 0x18
48372c: mov qword ptr [rsp + 0x20], rax
483731: lea rax, [rsp + 0x30]
483736: mov qword ptr [rsp + 0x28], rax
48373b: movzx eax, byte ptr [r14]
48373f: test al, al
483741: je 0x4837d1
483747: mov r15, qword ptr [rsp + 0x28]
48374c: mov rbp, r14
48374f: jmp 0x483765
483751: nop dword ptr [rax]
483758: add rbx, 1
48375c: mov rbp, rcx
48375f: mov eax, edx
483761: test al, al
483763: je 0x4837c8
483765: movzx edx, byte ptr [rbp + 1]
483769: lea rcx, [rbp + 1]
48376d: cmp al, 0x25
48376f: jne 0x483758
483771: cmp dl, 0x78
483774: je 0x4838fa
48377a: jg 0x4838d8
483780: cmp dl, 0x6c
483783: je 0x4838f0
483789: cmp dl, 0x73
48378c: jne 0x4838dd
483792: mov eax, dword ptr [rsp + 0x18]
483796: cmp eax, 0x2f
483799: ja 0x483ac0
48379f: mov edx, eax
4837a1: add eax, 8
4837a4: mov dword ptr [rsp + 0x18], eax
4837a8: add rdx, r15
4837ab: mov rdi, qword ptr [rdx]
4837ae: add rbp, 2
4837b2: call 0x401180
4837b7: add rbx, rax
4837ba: movzx eax, byte ptr [rbp]
4837be: test al, al
4837c0: jne 0x483765
4837c2: nop word ptr [rax + rax]
4837c8: test rbx, rbx
4837cb: js 0x483a80
4837d1: mov rdi, rbx
4837d4: call 0x426410
4837d9: mov rbp, rax
4837dc: test rax, rax
4837df: je 0x483a80
4837e5: movq xmm0, rax
4837ea: mov rax, qword ptr [rsp]
4837ee: mov dword ptr [rsp + 0x18], 0x18
4837f6: add rbx, rbp
4837f9: punpcklqdq xmm0, xmm0
4837fd: movups xmmword ptr [rax + 8], xmm0
483801: lea rax, [rsp + 0xa0]
483809: mov qword ptr [rsp + 0x20], rax
48380e: lea rax, [rsp + 0x30]
483813: mov qword ptr [rsp + 0x28], rax
483818: movzx eax, byte ptr [r14]
48381c: test al, al
48381e: jne 0x483848
483820: jmp 0x483890
483822: nop word ptr [rax + rax]
483828: cmp rbx, rbp
48382b: je 0x483b0a
483831: mov byte ptr [rbp], al
483834: mov r13, r14
483837: add rbp, 1
48383b: movzx eax, byte ptr [r13 + 1]
483840: lea r14, [r13 + 1]
483844: test al, al
483846: je 0x483890
483848: cmp al, 0x25
48384a: jne 0x483828
48384c: movzx eax, byte ptr [r14 + 1]
483851: lea r13, [r14 + 1]
483855: cmp al, 0x73
483857: je 0x4839f8
48385d: jg 0x483910
483863: cmp al, 0x25
483865: jne 0x483970
48386b: cmp rbx, rbp
48386e: je 0x483b0a
483874: movzx eax, byte ptr [r13 + 1]
483879: mov byte ptr [rbp], 0x25
48387d: lea r14, [r13 + 1]
483881: add rbp, 1
483885: test al, al
483887: jne 0x483848
483889: nop dword ptr [rax]
483890: cmp rbx, rbp
483893: je 0x483b0a
483899: lea rdi, [rbp + 1]
48389d: mov rax, qword ptr [rsp + 8]
4838a2: mov byte ptr [rbp], 0
4838a6: sub rbx, rdi
4838a9: cmp rbx, rax
4838ac: jne 0x483b0a
4838b2: mov rsi, r12
4838b5: mov rdx, rax
4838b8: call 0x401060
4838bd: mov rsi, qword ptr [rsp]
4838c1: mov qword ptr [rsi], rax
4838c4: add rsp, 0x68
4838c8: pop rbx
4838c9: pop rbp
4838ca: pop r12
4838cc: pop r13
4838ce: pop r14
4838d0: pop r15
4838d2: ret 
4838d3: nop dword ptr [rax + rax]
4838d8: cmp dl, 0x7a
4838db: je 0x4838f0
4838dd: movzx eax, byte ptr [rbp + 2]
4838e1: add rbx, 1
4838e5: add rbp, 2
4838e9: jmp 0x483761
4838ee: nop 
4838f0: cmp byte ptr [rbp + 2], 0x78
4838f4: je 0x483ad3
4838fa: movzx eax, byte ptr [rbp + 2]
4838fe: add rbx, 8
483902: add rbp, 2
483906: jmp 0x483761
48390b: nop dword ptr [rax + rax]
483910: cmp al, 0x78
483912: jne 0x4839d0
483918: mov eax, dword ptr [rsp + 0x18]
48391c: cmp eax, 0x2f
48391f: ja 0x483a40
483925: mov edx, eax
483927: add eax, 8
48392a: add rdx, qword ptr [rsp + 0x28]
48392f: mov dword ptr [rsp + 0x18], eax
483933: mov edi, dword ptr [rdx]
483935: lea r15, [rbp + 8]
483939: xor ecx, ecx
48393b: mov edx, 0x10
483940: mov rsi, r15
483943: call 0x467040
483948: cmp rax, rbp
48394b: je 0x483b02
483951: sub rax, rbp
483954: mov rdi, rbp
483957: mov esi, 0x30
48395c: mov rbp, r15
48395f: mov rdx, rax
483962: call 0x401110
483967: jmp 0x48383b
48396c: nop dword ptr [rax]
483970: cmp al, 0x6c
483972: jne 0x4839d4
483974: cmp byte ptr [r14 + 2], 0x78
483979: jne 0x4839d4
48397b: mov eax, dword ptr [rsp + 0x18]
48397f: cmp eax, 0x2f
483982: ja 0x483a58
483988: mov edi, eax
48398a: add eax, 8
48398d: add rdi, qword ptr [rsp + 0x28]
483992: mov dword ptr [rsp + 0x18], eax
483996: lea r15, [rbp + 0x10]
48399a: mov rdi, qword ptr [rdi]
48399d: xor ecx, ecx
48399f: mov edx, 0x10
4839a4: mov rsi, r15
4839a7: call 0x467040
4839ac: cmp rax, rbp
4839af: je 0x4839c4
4839b1: sub rax, rbp
4839b4: mov esi, 0x30
4839b9: mov rdi, rbp
4839bc: mov rdx, rax
4839bf: call 0x401110
4839c4: lea r13, [r14 + 2]
4839c8: mov rbp, r15
4839cb: jmp 0x48383b
4839d0: cmp al, 0x7a
4839d2: je 0x483974
4839d4: mov edi, 2
4839d9: lea rsi, [rip + 0x27dc0]
4839e0: xor eax, eax
4839e2: call 0x4810c0
4839e7: mov edi, 0x7f
4839ec: call 0x4505c0
4839f1: nop dword ptr [rax]
4839f8: mov eax, dword ptr [rsp + 0x18]
4839fc: cmp eax, 0x2f
4839ff: ja 0x483a70
483a01: mov edx, eax
483a03: add eax, 8
483a06: add rdx, qword ptr [rsp + 0x28]
483a0b: mov dword ptr [rsp + 0x18], eax
483a0f: mov r15, qword ptr [rdx]
483a12: mov rdi, r15
483a15: call 0x401180
483a1a: mov rdx, rax
483a1d: mov rax, rbx
483a20: sub rax, rbp
483a23: cmp rax, rdx
483a26: jb 0x483b0a
483a2c: mov rdi, rbp
483a2f: mov rsi, r15
483a32: call 0x401150
483a37: mov rbp, rax
483a3a: jmp 0x48383b
483a3f: nop 
483a40: mov rdx, qword ptr [rsp + 0x20]
483a45: lea rax, [rdx + 8]
483a49: mov qword ptr [rsp + 0x20], rax
483a4e: jmp 0x483933
483a53: nop dword ptr [rax + rax]
483a58: mov rdi, qword ptr [rsp + 0x20]
483a5d: lea rax, [rdi + 8]
483a61: mov qword ptr [rsp + 0x20], rax
483a66: jmp 0x483996
483a6b: nop dword ptr [rax + rax]
483a70: mov rdx, qword ptr [rsp + 0x20]
483a75: lea rax, [rdx + 8]
483a79: mov qword ptr [rsp + 0x20], rax
483a7e: jmp 0x483a0f
483a80: lea rax, [rip + 0x27d51]
483a87: lea rsi, [rip + 0x27f87]
483a8e: movq xmm1, rax
483a93: movq xmm0, rsi
483a98: mov rax, qword ptr [rsp]
483a9c: punpcklqdq xmm0, xmm1
483aa0: mov qword ptr [rax + 0x10], 0
483aa8: movups xmmword ptr [rax], xmm0
483aab: add rsp, 0x68
483aaf: pop rbx
483ab0: pop rbp
483ab1: pop r12
483ab3: pop r13
483ab5: pop r14
483ab7: pop r15
483ab9: ret 
483aba: nop word ptr [rax + rax]
483ac0: mov rdx, qword ptr [rsp + 0x20]
483ac5: lea rax, [rdx + 8]
483ac9: mov qword ptr [rsp + 0x20], rax
483ace: jmp 0x4837ab
483ad3: movzx eax, byte ptr [rbp + 3]
483ad7: add rbx, 0x10
483adb: add rbp, 3
483adf: jmp 0x483761
483ae4: nop dword ptr [rax]
483ae8: mov qword ptr [rsp + 8], 1
483af1: mov ebx, 2
483af6: lea r12, [rip + 0x27f18]
483afd: jmp 0x48371c
483b02: mov rbp, r15
483b05: jmp 0x48383b
483b0a: call 0x4835d0
483b0f: nop 
483b10: endbr64 
483b14: push rbx
483b15: mov rbx, rdi
483b18: mov rdi, qword ptr [rdi + 0x10]
483b1c: call 0x426a00
483b21: pxor xmm0, xmm0
483b25: mov qword ptr [rbx + 0x10], 0
483b2d: movups xmmword ptr [rbx], xmm0
483b30: pop rbx
483b31: ret 
483b32: nop word ptr cs:[rax + rax]
483b3c: nop dword ptr [rax]
483b40: endbr64 
483b44: movsx eax, byte ptr [rdi]
483b47: movsx edx, byte ptr [rsi]
483b4a: test al, al
483b4c: je 0x483b80
483b4e: lea r8d, [rax - 0x30]
483b52: lea ecx, [rdx - 0x30]
483b55: cmp r8b, 9
483b59: jbe 0x483b90
483b5b: cmp cl, 9
483b5e: jbe 0x483c09
483b64: cmp al, dl
483b66: jne 0x483c0f
483b6c: movsx eax, byte ptr [rdi + 1]
483b70: movsx edx, byte ptr [rsi + 1]
483b74: add rdi, 1
483b78: add rsi, 1
483b7c: test al, al
483b7e: jne 0x483b4e
483b80: movsx eax, dl
483b83: neg eax
483b85: ret 
483b86: nop word ptr cs:[rax + rax]
483b90: cmp cl, 9
483b93: ja 0x483c12
483b95: lea ecx, [rax - 0x30]
483b98: movsx eax, byte ptr [rdi + 1]
483b9c: lea r10, [rdi + 1]
483ba0: lea r8d, [rdx - 0x30]
483ba4: lea r9, [rsi + 1]
483ba8: mov rdi, r10
483bab: lea edx, [rax - 0x30]
483bae: cmp dl, 9
483bb1: ja 0x483bce
483bb3: nop dword ptr [rax + rax]
483bb8: lea edx, [rcx + rcx*4]
483bbb: add rdi, 1
483bbf: lea ecx, [rax + rdx*2 - 0x30]
483bc3: movsx eax, byte ptr [rdi]
483bc6: lea edx, [rax - 0x30]
483bc9: cmp dl, 9
483bcc: jbe 0x483bb8
483bce: movsx edx, byte ptr [rsi + 1]
483bd2: lea esi, [rdx - 0x30]
483bd5: cmp sil, 9
483bd9: mov rsi, r9
483bdc: ja 0x483bfa
483bde: nop 
483be0: add rsi, 1
483be4: lea r8d, [r8 + r8*4]
483be8: lea r8d, [rdx + r8*2 - 0x30]
483bed: movsx edx, byte ptr [rsi]
483bf0: lea r9d, [rdx - 0x30]
483bf4: cmp r9b, 9
483bf8: jbe 0x483be0
483bfa: cmp ecx, r8d
483bfd: je 0x483b4a
483c03: mov eax, ecx
483c05: sub eax, r8d
483c08: ret 
483c09: mov eax, 0xffffffff
483c0e: ret 
483c0f: sub eax, edx
483c11: ret 
483c12: mov eax, 1
483c17: ret 
483c18: nop dword ptr [rax + rax]
483c20: endbr64 
483c24: push rbp
483c25: mov rbp, rsp
483c28: push r15
483c2a: push r14
483c2c: push r13
483c2e: push r12
483c30: push rbx
483c31: mov rbx, rdi
483c34: sub rsp, 0x48
483c38: test byte ptr [rip + 0x3fb81], 1
483c3f: jne 0x484318
483c45: mov r8, qword ptr [rip + 0x3f354]
483c4c: test r8, r8
483c4f: je 0x4840f0
483c55: cmp r8, -1
483c59: je 0x483d5f
483c5f: mov r12, qword ptr [rip + 0x3f32a]
483c66: mov rax, qword ptr [rip + 0x3f32b]
483c6d: lea r13, [r8 + r12]
483c71: mov qword ptr [rbp - 0x48], rax
483c75: cmp rax, -1
483c79: je 0x484048
483c7f: mov r12, qword ptr [rip + 0x3fb62]
483c86: sub r13d, eax
483c89: test r12, r12
483c8c: je 0x48447b
483c92: lea rsi, [rip + 0x159f9]
483c99: mov rdi, r12
483c9c: call 0x401130
483ca1: movabs rdx, 0x4000000000000
483cab: mov qword ptr [rbp - 0x60], rdx
483caf: test eax, eax
483cb1: je 0x483cdd
483cb3: lea rsi, [rip + 0x159e1]
483cba: mov rdi, r12
483cbd: call 0x401130
483cc2: mov rdx, 0xffffffffffffffff
483cc9: test eax, eax
483ccb: movabs rax, 0x8000000000000
483cd5: cmovne rax, rdx
483cd9: mov qword ptr [rbp - 0x60], rax
483cdd: lea rsi, [rbp - 0x38]
483ce1: xor edx, edx
483ce3: mov edi, 0xb
483ce8: call 0x454ed0
483ced: mov rax, qword ptr [rbp - 0x38]
483cf1: mov qword ptr [rbp - 0x70], rax
483cf5: mov rax, qword ptr [rip + 0x3f00c]
483cfc: mov qword ptr [rbp - 0x68], rax
483d00: mov rax, qword ptr [rip + 0x3f291]
483d07: mov qword ptr [rbp - 0x58], rax
483d0b: mov eax, dword ptr [rax + 0x14]
483d0e: mov r12d, eax
483d11: mov dword ptr [rbp - 0x50], eax
483d14: sub r12d, 1
483d18: js 0x483d5f
483d1a: xor r15d, r15d
483d1d: nop dword ptr [rax]
483d20: lea r11d, [r15 + r12]
483d24: sar r11d, 1
483d27: movsxd rax, r11d
483d2a: lea rdx, [rax + rax*2]
483d2e: mov rax, qword ptr [rbp - 0x58]
483d32: lea r14, [rdx*8]
483d3a: mov esi, dword ptr [rax + r14 + 0x34]
483d3f: cmp r13d, esi
483d42: jbe 0x483d5f
483d44: add rsi, qword ptr [rbp - 0x48]
483d48: mov rdi, rbx
483d4b: call 0x483b40
483d50: test eax, eax
483d52: je 0x483d80
483d54: js 0x483d70
483d56: lea r12d, [r11 - 1]
483d5a: cmp r15d, r12d
483d5d: jle 0x483d20
483d5f: lea rsp, [rbp - 0x28]
483d63: xor eax, eax
483d65: pop rbx
483d66: pop r12
483d68: pop r13
483d6a: pop r14
483d6c: pop r15
483d6e: pop rbp
483d6f: ret 
483d70: lea r15d, [r11 + 1]
483d74: cmp r15d, r12d
483d77: jle 0x483d20
483d79: jmp 0x483d5f
483d7b: nop dword ptr [rax + rax]
483d80: mov rax, qword ptr [rbp - 0x58]
483d84: lea rcx, [rax + r14 + 0x1c]
483d89: mov r14d, r11d
483d8c: jmp 0x483dba
483d8e: nop 
483d90: mov esi, dword ptr [rcx]
483d92: mov qword ptr [rbp - 0x50], rcx
483d96: lea r15d, [r14 - 1]
483d9a: cmp r13d, esi
483d9d: jbe 0x483dbf
483d9f: add rsi, qword ptr [rbp - 0x48]
483da3: mov rdi, rbx
483da6: call 0x483b40
483dab: mov rcx, qword ptr [rbp - 0x50]
483daf: sub rcx, 0x18
483db3: test eax, eax
483db5: jne 0x483dbf
483db7: mov r14d, r15d
483dba: test r14d, r14d
483dbd: jne 0x483d90
483dbf: movabs rcx, 0x800f000000000000
483dc9: mov rax, qword ptr [rbp - 0x68]
483dcd: and rax, qword ptr [rbp - 0x70]
483dd1: or rax, rcx
483dd4: cmp dword ptr [rip + 0x3d332], 0x303
483dde: not rax
483de1: mov qword ptr [rbp - 0x68], rax
483de5: mov eax, dword ptr [rip + 0x3fa7d]
483deb: mov dword ptr [rbp - 0x70], eax
483dee: je 0x484280
483df4: mov rdx, qword ptr [rbp - 0x58]
483df8: test eax, eax
483dfa: movsxd rax, r14d
483dfd: mov r15d, 0
483e03: lea rax, [rax + rax*2]
483e07: lea rcx, [rdx + rax*8 + 0x30]
483e0c: jne 0x483ef1
483e12: jmp 0x483e61
483e14: nop dword ptr [rax]
483e18: mov eax, dword ptr [rcx + 8]
483e1b: cmp r13d, eax
483e1e: jbe 0x483e50
483e20: test r15, r15
483e23: jne 0x483e50
483e25: mov rsi, qword ptr [rcx + 0x10]
483e29: test qword ptr [rbp - 0x68], rsi
483e2d: jne 0x483e50
483e2f: movabs rdx, 0xf000000000000
483e39: and rsi, rdx
483e3c: je 0x483e44
483e3e: cmp qword ptr [rbp - 0x60], rsi
483e42: jne 0x483e50
483e44: mov rdx, qword ptr [rbp - 0x48]
483e48: lea r15, [rdx + rax]
483e4c: nop dword ptr [rax]
483e50: add r14d, 1
483e54: add rcx, 0x18
483e58: cmp r14d, r12d
483e5b: jg 0x483fb0
483e61: cmp r11d, r14d
483e64: jge 0x483e8e
483e66: mov esi, dword ptr [rcx + 4]
483e69: mov qword ptr [rbp - 0x50], rcx
483e6d: cmp r13d, esi
483e70: jbe 0x483fb0
483e76: add rsi, qword ptr [rbp - 0x48]
483e7a: mov rdi, rbx
483e7d: call 0x483b40
483e82: mov rcx, qword ptr [rbp - 0x50]
483e86: test eax, eax
483e88: jne 0x483fb0
483e8e: cmp dword ptr [rcx], 0x303
483e94: jne 0x483e50
483e96: jmp 0x483e18
483e98: nop dword ptr [rax + rax]
483ea0: mov eax, dword ptr [rcx + 8]
483ea3: cmp r13d, eax
483ea6: jbe 0x483ee0
483ea8: test r15, r15
483eab: jne 0x483ee0
483ead: mov rsi, qword ptr [rcx + 0x10]
483eb1: test qword ptr [rbp - 0x68], rsi
483eb5: jne 0x483ee0
483eb7: mov edx, dword ptr [rbp - 0x70]
483eba: cmp edx, dword ptr [rcx + 0xc]
483ebd: jb 0x483ee0
483ebf: movabs rdx, 0xf000000000000
483ec9: and rsi, rdx
483ecc: je 0x483ed4
483ece: cmp qword ptr [rbp - 0x60], rsi
483ed2: jne 0x483ee0
483ed4: mov rdx, qword ptr [rbp - 0x48]
483ed8: lea r15, [rdx + rax]
483edc: nop dword ptr [rax]
483ee0: add r14d, 1
483ee4: add rcx, 0x18
483ee8: cmp r14d, r12d
483eeb: jg 0x483fb0
483ef1: cmp r11d, r14d
483ef4: jge 0x483f1e
483ef6: mov esi, dword ptr [rcx + 4]
483ef9: mov qword ptr [rbp - 0x50], rcx
483efd: cmp r13d, esi
483f00: jbe 0x483fb0
483f06: add rsi, qword ptr [rbp - 0x48]
483f0a: mov rdi, rbx
483f0d: call 0x483b40
483f12: mov rcx, qword ptr [rbp - 0x50]
483f16: test eax, eax
483f18: jne 0x483fb0
483f1e: cmp dword ptr [rcx], 0x303
483f24: jne 0x483ee0
483f26: jmp 0x483ea0
483f2b: nop dword ptr [rax + rax]
483f30: add r14d, 1
483f34: add r15, 0x18
483f38: cmp r14d, r12d
483f3b: jg 0x483d5f
483f41: cmp r14d, r11d
483f44: jle 0x483f67
483f46: mov esi, dword ptr [r15 + 4]
483f4a: cmp esi, r13d
483f4d: jae 0x483d5f
483f53: add rsi, qword ptr [rbp - 0x48]
483f57: mov rdi, rbx
483f5a: call 0x483b40
483f5f: test eax, eax
483f61: jne 0x483d5f
483f67: cmp dword ptr [r15], 0x303
483f6e: jne 0x483f30
483f70: mov eax, dword ptr [r15 + 8]
483f74: cmp eax, r13d
483f77: jae 0x483f30
483f79: mov rsi, qword ptr [r15 + 0x10]
483f7d: test qword ptr [rbp - 0x68], rsi
483f81: jne 0x483f30
483f83: mov edx, dword ptr [rbp - 0x70]
483f86: cmp edx, dword ptr [r15 + 0xc]
483f8a: jb 0x483f30
483f8c: movabs rdx, 0xf000000000000
483f96: and rsi, rdx
483f99: je 0x483fa1
483f9b: cmp rsi, qword ptr [rbp - 0x60]
483f9f: jne 0x483f30
483fa1: mov r15, qword ptr [rbp - 0x48]
483fa5: add r15, rax
483fa8: nop dword ptr [rax + rax]
483fb0: test byte ptr [rip + 0x3f809], 1
483fb7: jne 0x484455
483fbd: test r15, r15
483fc0: je 0x483d5f
483fc6: mov rdi, r15
483fc9: mov rbx, rsp
483fcc: call 0x401180
483fd1: lea rdx, [rax + 0x18]
483fd5: mov rcx, rdx
483fd8: and rdx, 0xfffffffffffff000
483fdf: sub rbx, rdx
483fe2: and rcx, 0xfffffffffffffff0
483fe6: mov rdx, rbx
483fe9: cmp rsp, rdx
483fec: je 0x484003
483fee: sub rsp, 0x1000
483ff5: or qword ptr [rsp + 0xff8], 0
483ffe: cmp rsp, rdx
484001: jne 0x483fee
484003: and ecx, 0xfff
484009: sub rsp, rcx
48400c: test rcx, rcx
48400f: jne 0x4840e0
484015: lea rdi, [rsp + 0xf]
48401a: mov rsi, r15
48401d: lea rdx, [rax + 1]
484021: and rdi, 0xfffffffffffffff0
484025: call 0x401060
48402a: mov rdi, rax
48402d: call 0x429020
484032: lea rsp, [rbp - 0x28]
484036: pop rbx
484037: pop r12
484039: pop r13
48403b: pop r14
48403d: pop r15
48403f: pop rbp
484040: ret 
484041: nop dword ptr [rax]
484048: mov eax, dword ptr [r8 + 0xc]
48404c: mov r13, rax
48404f: lea rax, [rax + rax*2]
484053: lea rax, [rax*4 + 0x10]
48405b: lea rdx, [r8 + rax]
48405f: sub r12d, eax
484062: mov qword ptr [rbp - 0x48], rdx
484066: sub r13d, 1
48406a: js 0x483d5f
484070: xor r14d, r14d
484073: nop dword ptr [rax + rax]
484078: lea r11d, [r14 + r13]
48407c: mov qword ptr [rbp - 0x50], r8
484080: sar r11d, 1
484083: movsxd rax, r11d
484086: lea r15, [rax + rax*2]
48408a: shl r15, 2
48408e: mov esi, dword ptr [r8 + r15 + 0x14]
484093: cmp r12d, esi
484096: jbe 0x483d5f
48409c: add rsi, qword ptr [rbp - 0x48]
4840a0: mov rdi, rbx
4840a3: call 0x483b40
4840a8: mov r8, qword ptr [rbp - 0x50]
4840ac: test eax, eax
4840ae: je 0x4841b8
4840b4: js 0x4840c8
4840b6: lea r13d, [r11 - 1]
4840ba: cmp r14d, r13d
4840bd: jle 0x484078
4840bf: jmp 0x483d5f
4840c4: nop dword ptr [rax]
4840c8: lea r14d, [r11 + 1]
4840cc: cmp r14d, r13d
4840cf: jle 0x484078
4840d1: jmp 0x483d5f
4840d6: nop word ptr cs:[rax + rax]
4840e0: or qword ptr [rsp + rcx - 8], 0
4840e6: jmp 0x484015
4840eb: nop dword ptr [rax + rax]
4840f0: mov edx, 1
4840f5: lea rsi, [rip + 0x3ee94]
4840fc: lea rdi, [rip + 0x276e3]
484103: call 0x480ec0
484108: mov r8, rax
48410b: cmp rax, -1
48410f: je 0x4841a4
484115: mov r12, qword ptr [rip + 0x3ee74]
48411c: cmp r12, 0x30
484120: jbe 0x484180
484122: movabs rdx, 0x686361632e6f732e
48412c: xor rdx, qword ptr [rax + 8]
484130: movabs rax, 0x646c2d6362696c67
48413a: xor rax, qword ptr [r8]
48413d: or rdx, rax
484140: jne 0x484186
484142: cmp dword ptr [r8 + 0x10], 0x312e3165
48414a: jne 0x484186
48414c: movzx eax, byte ptr [r8 + 0x1c]
484151: test al, al
484153: je 0x484468
484159: and eax, 3
48415c: cmp al, 2
48415e: je 0x484468
484164: mov rsi, r12
484167: mov rdi, r8
48416a: call 0x451c70
48416f: mov qword ptr [rip + 0x3ee1e], 0xffffffffffffffff
48417a: jmp 0x4841a4
48417c: nop dword ptr [rax]
484180: cmp r12, 0x10
484184: jbe 0x484199
484186: movabs rax, 0x2e312d6f732e646c
484190: cmp qword ptr [r8], rax
484193: je 0x4843b3
484199: mov rsi, r12
48419c: mov rdi, r8
48419f: call 0x451c70
4841a4: mov qword ptr [rip + 0x3edf1], 0xffffffffffffffff
4841af: jmp 0x483d5f
4841b4: nop dword ptr [rax]
4841b8: lea r15, [r8 + r15 + 8]
4841bd: mov r14d, r11d
4841c0: jmp 0x4841f7
4841c2: nop word ptr [rax + rax]
4841c8: mov esi, dword ptr [r15]
4841cb: lea eax, [r14 - 1]
4841cf: mov dword ptr [rbp - 0x58], eax
4841d2: cmp r12d, esi
4841d5: jbe 0x4841fc
4841d7: add rsi, qword ptr [rbp - 0x48]
4841db: mov rdi, rbx
4841de: mov qword ptr [rbp - 0x50], r8
4841e2: sub r15, 0xc
4841e6: call 0x483b40
4841eb: mov r8, qword ptr [rbp - 0x50]
4841ef: test eax, eax
4841f1: jne 0x4841fc
4841f3: mov r14d, dword ptr [rbp - 0x58]
4841f7: test r14d, r14d
4841fa: jne 0x4841c8
4841fc: cmp dword ptr [rip + 0x3cf0a], 0x303
484206: movsxd rax, r14d
484209: lea rax, [rax + rax*2]
48420d: je 0x484332
484213: lea rcx, [r8 + rax*4 + 0x10]
484218: xor r15d, r15d
48421b: jmp 0x484231
48421d: nop dword ptr [rax]
484220: add r14d, 1
484224: add rcx, 0xc
484228: cmp r14d, r13d
48422b: jg 0x483fb0
484231: cmp r11d, r14d
484234: jge 0x48425e
484236: mov esi, dword ptr [rcx + 4]
484239: mov qword ptr [rbp - 0x50], rcx
48423d: cmp r12d, esi
484240: jbe 0x483fb0
484246: add rsi, qword ptr [rbp - 0x48]
48424a: mov rdi, rbx
48424d: call 0x483b40
484252: mov rcx, qword ptr [rbp - 0x50]
484256: test eax, eax
484258: jne 0x483fb0
48425e: cmp dword ptr [rcx], 0x303
484264: jne 0x484220
484266: mov eax, dword ptr [rcx + 8]
484269: cmp eax, r12d
48426c: jae 0x484220
48426e: add rax, qword ptr [rbp - 0x48]
484272: test r15, r15
484275: cmove r15, rax
484279: jmp 0x484220
48427b: nop dword ptr [rax + rax]
484280: mov rdx, qword ptr [rbp - 0x58]
484284: movsxd rax, r14d
484287: lea rax, [rax + rax*2]
48428b: lea r15, [rdx + rax*8 + 0x30]
484290: mov eax, dword ptr [rbp - 0x70]
484293: test eax, eax
484295: jne 0x483f41
48429b: jmp 0x4842b1
48429d: nop dword ptr [rax]
4842a0: add r14d, 1
4842a4: add r15, 0x18
4842a8: cmp r14d, r12d
4842ab: jg 0x483d5f
4842b1: cmp r14d, r11d
4842b4: jle 0x4842d7
4842b6: mov esi, dword ptr [r15 + 4]
4842ba: cmp esi, r13d
4842bd: jae 0x483d5f
4842c3: add rsi, qword ptr [rbp - 0x48]
4842c7: mov rdi, rbx
4842ca: call 0x483b40
4842cf: test eax, eax
4842d1: jne 0x483d5f
4842d7: cmp dword ptr [r15], 0x303
4842de: jne 0x4842a0
4842e0: mov eax, dword ptr [r15 + 8]
4842e4: cmp eax, r13d
4842e7: jae 0x4842a0
4842e9: mov rsi, qword ptr [r15 + 0x10]
4842ed: test qword ptr [rbp - 0x68], rsi
4842f1: jne 0x4842a0
4842f3: movabs rdx, 0xf000000000000
4842fd: and rsi, rdx
484300: je 0x483fa1
484306: cmp rsi, qword ptr [rbp - 0x60]
48430a: je 0x483fa1
484310: jmp 0x4842a0
484312: nop word ptr [rax + rax]
484318: lea rsi, [rip + 0x274c7]
48431f: lea rdi, [rip + 0x274d1]
484326: xor eax, eax
484328: call 0x480f60
48432d: jmp 0x483c45
484332: lea r15, [r8 + rax*4 + 0x10]
484337: jmp 0x484351
484339: nop dword ptr [rax]
484340: add r14d, 1
484344: add r15, 0xc
484348: cmp r14d, r13d
48434b: jg 0x483d5f
484351: cmp r14d, r11d
484354: jle 0x484377
484356: mov esi, dword ptr [r15 + 4]
48435a: cmp esi, r12d
48435d: jae 0x483d5f
484363: add rsi, qword ptr [rbp - 0x48]
484367: mov rdi, rbx
48436a: call 0x483b40
48436f: test eax, eax
484371: jne 0x483d5f
484377: cmp dword ptr [r15], 0x303
48437e: jne 0x484340
484380: mov eax, dword ptr [r15 + 8]
484384: cmp eax, r12d
484387: jae 0x484340
484389: mov r15d, eax
48438c: add r15, qword ptr [rbp - 0x48]
484390: test byte ptr [rip + 0x3f429], 1
484397: je 0x483fc6
48439d: mov rsi, r15
4843a0: lea rdi, [rip + 0x25fc2]
4843a7: xor eax, eax
4843a9: call 0x480f60
4843ae: jmp 0x483fc6
4843b3: cmp word ptr [r8 + 8], 0x2e37
4843ba: jne 0x484199
4843c0: cmp byte ptr [r8 + 0xa], 0x30
4843c5: jne 0x484199
4843cb: lea rdx, [r12 - 0x10]
4843d0: mov ecx, dword ptr [r8 + 0xc]
4843d4: movabs rsi, 0xaaaaaaaaaaaaaaab
4843de: mov rax, rdx
4843e1: mul rsi
4843e4: shr rdx, 3
4843e8: cmp rdx, rcx
4843eb: jb 0x484199
4843f1: lea rax, [rcx + rcx*2]
4843f5: mov qword ptr [rip + 0x3eba4], r8
4843fc: lea rax, [rax*4 + 0x17]
484404: and rax, 0xfffffffffffffff8
484408: lea rdx, [r8 + rax]
48440c: add rax, 0x30
484410: mov qword ptr [rip + 0x3eb81], rdx
484417: cmp r12, rax
48441a: jb 0x484445
48441c: movabs rcx, 0x686361632e6f732e
484426: xor rcx, qword ptr [rdx + 8]
48442a: movabs rax, 0x646c2d6362696c67
484434: xor rax, qword ptr [rdx]
484437: or rcx, rax
48443a: jne 0x484445
48443c: cmp dword ptr [rdx + 0x10], 0x312e3165
484443: je 0x484488
484445: mov qword ptr [rip + 0x3eb48], 0xffffffffffffffff
484450: jmp 0x483c66
484455: test r15, r15
484458: jne 0x48439d
48445e: jmp 0x483d5f
484463: nop dword ptr [rax + rax]
484468: mov qword ptr [rip + 0x3eb29], r8
48446f: mov qword ptr [rip + 0x3eb2a], r8
484476: jmp 0x483c66
48447b: mov qword ptr [rbp - 0x60], 0xffffffffffffffff
484483: jmp 0x483cdd
484488: movzx eax, byte ptr [rdx + 0x1c]
48448c: test al, al
48448e: je 0x483c66
484494: and eax, 3
484497: cmp al, 2
484499: je 0x483c66
48449f: mov rdi, r8
4844a2: mov rsi, r12
4844a5: mov qword ptr [rip + 0x3eaf0], 0xffffffffffffffff
4844b0: mov qword ptr [rip + 0x3eadd], 0xffffffffffffffff
4844bb: call 0x451c70
4844c0: mov r8, qword ptr [rip + 0x3ead9]
4844c7: test r8, r8
4844ca: jne 0x483c55
4844d0: lea rcx, [rip + 0x27379]
4844d7: mov edx, 0x105
4844dc: lea rsi, [rip + 0x27347]
4844e3: lea rdi, [rip + 0x2734b]
4844ea: call 0x4032a0
4844ef: nop 
4844f0: endbr64 
4844f4: mov rdi, qword ptr [rip + 0x3eaa5]
4844fb: lea rax, [rdi - 1]
4844ff: cmp rax, -3
484503: jbe 0x484510
484505: ret 
484506: nop word ptr cs:[rax + rax]
484510: sub rsp, 8
484514: mov rsi, qword ptr [rip + 0x3ea75]
48451b: call 0x451c70
484520: mov qword ptr [rip + 0x3ea75], 0
48452b: add rsp, 8
48452f: ret 
484530: endbr64 
484534: mov rax, qword ptr [rax + 8]
484538: ret 
484539: nop dword ptr [rax]
484540: endbr64 
484544: mov rax, qword ptr [rax + 8]
484548: sub rax, qword ptr fs:[0]
484551: ret 
484552: nop word ptr cs:[rax + rax]
48455d: nop dword ptr [rax]
484560: endbr64 
484564: sub rsp, 0x50
484568: mov qword ptr [rsp], rax
48456c: mov qword ptr [rsp + 8], rdi
484571: mov rdi, rax
484574: mov qword ptr [rsp + 0x10], rsi
484579: mov rsi, qword ptr [rsp + 0x50]
48457e: mov qword ptr [rsp + 0x18], r8
484583: mov qword ptr [rsp + 0x20], r9
484588: mov qword ptr [rsp + 0x28], r10
48458d: mov qword ptr [rsp + 0x30], r11
484592: mov qword ptr [rsp + 0x38], rdx
484597: mov qword ptr [rsp + 0x40], rcx
48459c: call 0x48ad00
4845a1: mov rax, qword ptr [rsp]
4845a5: mov rdi, qword ptr [rsp + 8]
4845aa: mov rsi, qword ptr [rsp + 0x10]
4845af: mov r8, qword ptr [rsp + 0x18]
4845b4: mov r9, qword ptr [rsp + 0x20]
4845b9: mov r10, qword ptr [rsp + 0x28]
4845be: mov r11, qword ptr [rsp + 0x30]
4845c3: mov rdx, qword ptr [rsp + 0x38]
4845c8: mov rcx, qword ptr [rsp + 0x40]
4845cd: add rsp, 0x58
4845d1: jmp qword ptr [rax]
4845d3: nop word ptr cs:[rax + rax]
4845de: nop 
4845e0: endbr64 
4845e4: sub rsp, 0x48
4845e8: mov qword ptr [rsp], rax
4845ec: mov qword ptr [rsp + 8], rdi
4845f1: mov rdi, rax
4845f4: mov qword ptr [rsp + 0x10], rsi
4845f9: lea rsi, [rip + 0x19]
484600: mov qword ptr [rsp + 0x18], r8
484605: mov qword ptr [rsp + 0x20], r9
48460a: mov qword ptr [rsp + 0x28], r10
48460f: mov qword ptr [rsp + 0x30], r11
484614: mov qword ptr [rsp + 0x38], rdx
484619: mov qword ptr [rsp + 0x40], rcx
48461e: call 0x48aea0
484623: mov rax, qword ptr [rsp]
484627: mov rdi, qword ptr [rsp + 8]
48462c: mov rsi, qword ptr [rsp + 0x10]
484631: mov r8, qword ptr [rsp + 0x18]
484636: mov r9, qword ptr [rsp + 0x20]
48463b: mov r10, qword ptr [rsp + 0x28]
484640: mov r11, qword ptr [rsp + 0x30]
484645: mov rdx, qword ptr [rsp + 0x38]
48464a: mov rcx, qword ptr [rsp + 0x40]
48464f: add rsp, 0x48
484653: jmp qword ptr [rax]
484655: nop word ptr cs:[rax + rax]
48465f: nop 
484660: endbr64 
484664: push rbx
484665: mov rdx, qword ptr [rdi + 0x10]
484669: mov rbx, rdi
48466c: mov rcx, 0xfffffffffffffffe
484673: mov esi, dword ptr [rdi + 8]
484676: mov r9, qword ptr [rip + 0x3f223]
48467d: mov r8d, dword ptr [rip + 0x3f214]
484684: mov rdi, qword ptr [rdi]
484687: sub rsp, 8
48468b: push qword ptr [rip + 0x3e647]
484691: call 0x4888a0
484696: mov qword ptr [rbx + 0x18], rax
48469a: pop rax
48469b: pop rdx
48469c: pop rbx
48469d: ret 
48469e: nop 
4846a0: endbr64 
4846a4: push rbx
4846a5: lea rdx, [rdi + 0x18]
4846a9: mov rbx, rdi
4846ac: xor r9d, r9d
4846af: sub rsp, 0x20
4846b3: mov rsi, qword ptr [rdi]
4846b6: mov rax, qword ptr fs:[0x28]
4846bf: mov qword ptr [rsp + 0x18], rax
4846c4: xor eax, eax
4846c6: lea rax, [rip + 0x27199]
4846cd: mov qword ptr [rsp + 0x10], 0
4846d6: mov qword ptr [rsp], rax
4846da: mov rcx, qword ptr [rsi + 0x390]
4846e1: movabs rax, 0x10963cf85
4846eb: mov qword ptr [rsp + 8], rax
4846f0: mov qword ptr [rdi + 0x18], 0
4846f8: mov rdi, qword ptr [rdi + 8]
4846fc: push 0
4846fe: push 0
484700: lea r8, [rsp + 0x10]
484705: call 0x47d3a0
48470a: mov qword ptr [rbx + 0x10], rax
48470e: pop rax
48470f: pop rdx
484710: mov rax, qword ptr [rsp + 0x18]
484715: xor rax, qword ptr fs:[0x28]
48471e: jne 0x484726
484720: add rsp, 0x20
484724: pop rbx
484725: ret 
484726: call 0x4547a0
48472b: nop dword ptr [rax + rax]
484730: endbr64 
484734: push rbx
484735: lea rdx, [rdi + 0x18]
484739: mov rsi, qword ptr [rdi]
48473c: mov rbx, rdi
48473f: mov qword ptr [rdi + 0x18], 0
484747: mov rdi, qword ptr [rdi + 8]
48474b: xor r9d, r9d
48474e: xor r8d, r8d
484751: push 0
484753: lea rcx, [rsi + 0x398]
48475a: push 2
48475c: call 0x47d3a0
484761: mov qword ptr [rbx + 0x10], rax
484765: pop rax
484766: pop rdx
484767: pop rbx
484768: ret 
484769: nop dword ptr [rax]
484770: endbr64 
484774: push rbx
484775: lea rdx, [rdi + 0x18]
484779: mov rsi, qword ptr [rdi]
48477c: mov rbx, rdi
48477f: mov qword ptr [rdi + 0x18], 0
484787: mov rdi, qword ptr [rdi + 8]
48478b: lea r8, [rbx + 0x20]
48478f: xor r9d, r9d
484792: push 0
484794: lea rcx, [rsi + 0x398]
48479b: push 0
48479d: call 0x47d3a0
4847a2: mov qword ptr [rbx + 0x10], rax
4847a6: pop rax
4847a7: pop rdx
4847a8: pop rbx
4847a9: ret 
4847aa: nop word ptr [rax + rax]
4847b0: endbr64 
4847b4: jmp 0x48a8f0
4847b9: nop dword ptr [rax]
4847c0: endbr64 
4847c4: sub rsp, 0x38
4847c8: mov r8, rdi
4847cb: lea rcx, [rip - 0x22]
4847d2: mov rax, qword ptr fs:[0x28]
4847db: mov qword ptr [rsp + 0x28], rax
4847e0: xor eax, eax
4847e2: lea rdx, [rsp + 0x17]
4847e7: lea rsi, [rsp + 0x20]
4847ec: mov qword ptr [rsp + 0x20], 0
4847f5: lea rdi, [rsp + 0x18]
4847fa: call 0x4851e0
4847ff: test eax, eax
484801: jne 0x484828
484803: cmp qword ptr [rsp + 0x20], 0
484809: jne 0x484820
48480b: mov rcx, qword ptr [rsp + 0x28]
484810: xor rcx, qword ptr fs:[0x28]
484819: jne 0x484843
48481b: add rsp, 0x38
48481f: ret 
484820: mov eax, 1
484825: nop dword ptr [rax]
484828: cmp byte ptr [rsp + 0x17], 0
48482d: je 0x48480b
48482f: mov rdi, qword ptr [rsp + 0x20]
484834: mov dword ptr [rsp + 0xc], eax
484838: call 0x426a00
48483d: mov eax, dword ptr [rsp + 0xc]
484841: jmp 0x48480b
484843: call 0x4547a0
484848: nop dword ptr [rax + rax]
484850: endbr64 
484854: sub rsp, 0x58
484858: movq xmm0, rdi
48485d: movq xmm1, rsi
484862: punpcklqdq xmm0, xmm1
484866: lea rdx, [rsp + 0xf]
48486b: lea rsi, [rsp + 0x18]
484870: mov rax, qword ptr fs:[0x28]
484879: mov qword ptr [rsp + 0x48], rax
48487e: xor eax, eax
484880: lea rdi, [rsp + 0x10]
484885: lea r8, [rsp + 0x20]
48488a: mov qword ptr [rsp + 0x18], 0
484893: lea rcx, [rip - 0x16a]
48489a: movaps xmmword ptr [rsp + 0x20], xmm0
48489f: call 0x4851e0
4848a4: test eax, eax
4848a6: jne 0x4848f0
4848a8: cmp qword ptr [rsp + 0x18], 0
4848ae: jne 0x4848f0
4848b0: mov rax, qword ptr [rsp + 0x38]
4848b5: test rax, rax
4848b8: je 0x4848d7
4848ba: cmp word ptr [rax + 6], -0xf
4848bf: je 0x484910
4848c1: mov rcx, qword ptr [rsp + 0x30]
4848c6: xor edx, edx
4848c8: test rcx, rcx
4848cb: je 0x4848d0
4848cd: mov rdx, qword ptr [rcx]
4848d0: add rdx, qword ptr [rax + 8]
4848d4: mov rax, rdx
4848d7: mov rcx, qword ptr [rsp + 0x48]
4848dc: xor rcx, qword ptr fs:[0x28]
4848e5: jne 0x484914
4848e7: add rsp, 0x58
4848eb: ret 
4848ec: nop dword ptr [rax]
4848f0: cmp byte ptr [rsp + 0xf], 0
4848f5: jne 0x484900
4848f7: xor eax, eax
4848f9: jmp 0x4848d7
4848fb: nop dword ptr [rax + rax]
484900: mov rdi, qword ptr [rsp + 0x18]
484905: call 0x426a00
48490a: xor eax, eax
48490c: jmp 0x4848d7
48490e: nop 
484910: xor edx, edx
484912: jmp 0x4848d0
484914: call 0x4547a0
484919: nop dword ptr [rax]
484920: endbr64 
484924: sub rsp, 0x68
484928: movq xmm1, rsi
48492d: movq xmm0, rdi
484932: movzx esi, byte ptr [rdx]
484935: mov rax, qword ptr fs:[0x28]
48493e: mov qword ptr [rsp + 0x58], rax
484943: xor eax, eax
484945: punpcklqdq xmm0, xmm1
484949: mov qword ptr [rsp + 0x40], rdx
48494e: mov dword ptr [rsp + 0x4c], 1
484956: movaps xmmword ptr [rsp + 0x20], xmm0
48495b: test rsi, rsi
48495e: je 0x4849e8
484964: movzx ecx, byte ptr [rdx + 1]
484968: test cl, cl
48496a: je 0x484a70
484970: movzx eax, cl
484973: movzx ecx, byte ptr [rdx + 2]
484977: shl rsi, 4
48497b: add rax, rsi
48497e: test cl, cl
484980: je 0x4849e8
484982: shl rax, 4
484986: add rax, rcx
484989: movzx ecx, byte ptr [rdx + 3]
48498d: test cl, cl
48498f: je 0x4849e8
484991: shl rax, 4
484995: add rax, rcx
484998: movzx ecx, byte ptr [rdx + 4]
48499c: test cl, cl
48499e: je 0x4849e8
4849a0: shl rax, 4
4849a4: add rax, rcx
4849a7: lea rcx, [rdx + 5]
4849ab: movzx edx, byte ptr [rdx + 5]
4849af: test dl, dl
4849b1: je 0x4849e8
4849b3: nop dword ptr [rax + rax]
4849b8: movzx edx, dl
4849bb: shl rax, 4
4849bf: add rcx, 1
4849c3: add rax, rdx
4849c6: mov rdx, rax
4849c9: shr rdx, 0x18
4849cd: and edx, 0xf0
4849d3: xor rax, rdx
4849d6: movzx edx, byte ptr [rcx]
4849d9: test dl, dl
4849db: jne 0x4849b8
4849dd: and eax, 0xfffffff
4849e2: nop word ptr [rax + rax]
4849e8: lea rdx, [rsp + 0xf]
4849ed: lea rsi, [rsp + 0x18]
4849f2: mov dword ptr [rsp + 0x48], eax
4849f6: lea rdi, [rsp + 0x10]
4849fb: lea r8, [rsp + 0x20]
484a00: mov qword ptr [rsp + 0x50], 0
484a09: mov qword ptr [rsp + 0x18], 0
484a12: lea rcx, [rip - 0x2a9]
484a19: call 0x4851e0
484a1e: test eax, eax
484a20: jne 0x484a80
484a22: cmp qword ptr [rsp + 0x18], 0
484a28: jne 0x484a80
484a2a: mov rax, qword ptr [rsp + 0x38]
484a2f: test rax, rax
484a32: je 0x484a51
484a34: cmp word ptr [rax + 6], -0xf
484a39: je 0x484aa0
484a3b: mov rcx, qword ptr [rsp + 0x30]
484a40: xor edx, edx
484a42: test rcx, rcx
484a45: je 0x484a4a
484a47: mov rdx, qword ptr [rcx]
484a4a: add rdx, qword ptr [rax + 8]
484a4e: mov rax, rdx
484a51: mov rcx, qword ptr [rsp + 0x58]
484a56: xor rcx, qword ptr fs:[0x28]
484a5f: jne 0x484aa4
484a61: add rsp, 0x68
484a65: ret 
484a66: nop word ptr cs:[rax + rax]
484a70: movzx eax, sil
484a74: jmp 0x4849e8
484a79: nop dword ptr [rax]
484a80: cmp byte ptr [rsp + 0xf], 0
484a85: jne 0x484a90
484a87: xor eax, eax
484a89: jmp 0x484a51
484a8b: nop dword ptr [rax + rax]
484a90: mov rdi, qword ptr [rsp + 0x18]
484a95: call 0x426a00
484a9a: xor eax, eax
484a9c: jmp 0x484a51
484a9e: nop 
484aa0: xor edx, edx
484aa2: jmp 0x484a4a
484aa4: call 0x4547a0
484aa9: nop dword ptr [rax]
484ab0: endbr64 
484ab4: push r14
484ab6: lea rcx, [rip - 0x45d]
484abd: push r13
484abf: push r12
484ac1: push rbp
484ac2: push rbx
484ac3: sub rsp, 0x70
484ac7: mov rax, qword ptr fs:[0x28]
484ad0: mov qword ptr [rsp + 0x68], rax
484ad5: xor eax, eax
484ad7: lea r12, [rsp + 0x10]
484adc: mov rax, qword ptr [rsp + 0x98]
484ae4: lea rbx, [rsp + 0x40]
484ae9: lea rbp, [rsp + 0x18]
484aee: mov qword ptr [rsp + 0x20], rdi
484af3: lea r8, [rsp + 0x20]
484af8: mov rdx, r12
484afb: mov dword ptr [rsp + 0x28], esi
484aff: mov rdi, rbp
484b02: mov rsi, rbx
484b05: mov qword ptr [rsp + 0x30], rax
484b0a: mov qword ptr [rsp + 0x40], 0
484b13: call 0x4851e0
484b18: test eax, eax
484b1a: jne 0x484c78
484b20: cmp qword ptr [rsp + 0x40], 0
484b26: jne 0x484c78
484b2c: mov r13, qword ptr [rsp + 0x38]
484b31: lea r14, [rsp + 0xf]
484b36: mov r8, rbx
484b39: mov rsi, rbp
484b3c: lea rax, [rip + 0x26d40]
484b43: lea rcx, [rip - 0x4aa]
484b4a: mov rdx, r14
484b4d: mov rdi, r12
484b50: mov qword ptr [rsp + 0x40], r13
484b55: mov qword ptr [rsp + 0x48], rax
484b5a: mov qword ptr [rsp + 0x18], 0
484b63: call 0x4851e0
484b68: test eax, eax
484b6a: je 0x484c28
484b70: cmp byte ptr [rsp + 0xf], 0
484b75: jne 0x484cc0
484b7b: lea rax, [rip + 0x26cf2]
484b82: mov r8, rbx
484b85: mov rdx, r14
484b88: mov rsi, rbp
484b8b: lea rcx, [rip - 0x4f2]
484b92: mov rdi, r12
484b95: mov qword ptr [rsp + 0x40], r13
484b9a: mov qword ptr [rsp + 0x48], rax
484b9f: mov qword ptr [rsp + 0x18], 0
484ba8: call 0x4851e0
484bad: test eax, eax
484baf: jne 0x484c88
484bb5: cmp qword ptr [rsp + 0x18], 0
484bbb: jne 0x484c88
484bc1: mov rdx, qword ptr [rsp + 0x58]
484bc6: test rdx, rdx
484bc9: je 0x484bf5
484bcb: cmp word ptr [rdx + 6], -0xf
484bd0: je 0x484cd0
484bd6: mov rcx, qword ptr [rsp + 0x50]
484bdb: xor eax, eax
484bdd: test rcx, rcx
484be0: je 0x484be5
484be2: mov rax, qword ptr [rcx]
484be5: add rax, qword ptr [rdx + 8]
484be9: je 0x484bf5
484beb: lea rbx, [rip + 0x3ce8e]
484bf2: mov qword ptr [rax], rbx
484bf5: mov rdi, qword ptr [rsp + 0x38]
484bfa: call 0x487890
484bff: mov rax, qword ptr [rsp + 0x38]
484c04: mov rbx, qword ptr [rsp + 0x68]
484c09: xor rbx, qword ptr fs:[0x28]
484c12: jne 0x484ce7
484c18: add rsp, 0x70
484c1c: pop rbx
484c1d: pop rbp
484c1e: pop r12
484c20: pop r13
484c22: pop r14
484c24: ret 
484c25: nop dword ptr [rax]
484c28: cmp qword ptr [rsp + 0x18], 0
484c2e: jne 0x484b70
484c34: mov rdx, qword ptr [rsp + 0x58]
484c39: test rdx, rdx
484c3c: je 0x484b7b
484c42: cmp word ptr [rdx + 6], -0xf
484c47: je 0x484ce0
484c4d: mov rcx, qword ptr [rsp + 0x50]
484c52: xor eax, eax
484c54: test rcx, rcx
484c57: je 0x484c5c
484c59: mov rax, qword ptr [rcx]
484c5c: add rax, qword ptr [rdx + 8]
484c60: je 0x484b7b
484c66: lea rcx, [rip + 0x3ce13]
484c6d: mov qword ptr [rax], rcx
484c70: jmp 0x484b7b
484c75: nop dword ptr [rax]
484c78: cmp byte ptr [rsp + 0x10], 0
484c7d: jne 0x484ca8
484c7f: xor eax, eax
484c81: jmp 0x484c04
484c83: nop dword ptr [rax + rax]
484c88: cmp byte ptr [rsp + 0xf], 0
484c8d: je 0x484bf5
484c93: mov rdi, qword ptr [rsp + 0x18]
484c98: call 0x426a00
484c9d: jmp 0x484bf5
484ca2: nop word ptr [rax + rax]
484ca8: mov rdi, qword ptr [rsp + 0x40]
484cad: call 0x426a00
484cb2: xor eax, eax
484cb4: jmp 0x484c04
484cb9: nop dword ptr [rax]
484cc0: mov rdi, qword ptr [rsp + 0x18]
484cc5: call 0x426a00
484cca: jmp 0x484b7b
484ccf: nop 
484cd0: xor eax, eax
484cd2: jmp 0x484be5
484cd7: nop word ptr [rax + rax]
484ce0: xor eax, eax
484ce2: jmp 0x484c5c
484ce7: call 0x4547a0
484cec: nop dword ptr [rax]
484cf0: endbr64 
484cf4: sub rsp, 0x58
484cf8: movq xmm0, rdi
484cfd: movq xmm1, rsi
484d02: punpcklqdq xmm0, xmm1
484d06: lea rdx, [rsp + 0xf]
484d0b: lea rsi, [rsp + 0x18]
484d10: mov rax, qword ptr fs:[0x28]
484d19: mov qword ptr [rsp + 0x48], rax
484d1e: xor eax, eax
484d20: lea rdi, [rsp + 0x10]
484d25: lea r8, [rsp + 0x20]
484d2a: mov qword ptr [rsp + 0x18], 0
484d33: lea rcx, [rip - 0x69a]
484d3a: movaps xmmword ptr [rsp + 0x20], xmm0
484d3f: call 0x4851e0
484d44: test eax, eax
484d46: jne 0x484d90
484d48: cmp qword ptr [rsp + 0x18], 0
484d4e: jne 0x484d90
484d50: mov rax, qword ptr [rsp + 0x38]
484d55: test rax, rax
484d58: je 0x484d77
484d5a: cmp word ptr [rax + 6], -0xf
484d5f: je 0x484db0
484d61: mov rcx, qword ptr [rsp + 0x30]
484d66: xor edx, edx
484d68: test rcx, rcx
484d6b: je 0x484d70
484d6d: mov rdx, qword ptr [rcx]
484d70: add rdx, qword ptr [rax + 8]
484d74: mov rax, rdx
484d77: mov rcx, qword ptr [rsp + 0x48]
484d7c: xor rcx, qword ptr fs:[0x28]
484d85: jne 0x484db4
484d87: add rsp, 0x58
484d8b: ret 
484d8c: nop dword ptr [rax]
484d90: cmp byte ptr [rsp + 0xf], 0
484d95: jne 0x484da0
484d97: xor eax, eax
484d99: jmp 0x484d77
484d9b: nop dword ptr [rax + rax]
484da0: mov rdi, qword ptr [rsp + 0x18]
484da5: call 0x426a00
484daa: xor eax, eax
484dac: jmp 0x484d77
484dae: nop 
484db0: xor edx, edx
484db2: jmp 0x484d70
484db4: call 0x4547a0
484db9: nop dword ptr [rax]
484dc0: endbr64 
484dc4: push r14
484dc6: lea rcx, [rip - 0x72d]
484dcd: push r13
484dcf: push r12
484dd1: push rbp
484dd2: push rbx
484dd3: mov rbx, rdi
484dd6: sub rsp, 0x50
484dda: lea rbp, [rsp + 0x20]
484ddf: lea r12, [rsp + 0xf]
484de4: lea r13, [rsp + 0x18]
484de9: lea r14, [rsp + 0x10]
484dee: mov r8, rbp
484df1: mov rdx, r12
484df4: mov rax, qword ptr fs:[0x28]
484dfd: mov qword ptr [rsp + 0x48], rax
484e02: xor eax, eax
484e04: mov rsi, r13
484e07: mov qword ptr [rsp + 0x20], rdi
484e0c: lea rax, [rip + 0x26a70]
484e13: mov rdi, r14
484e16: mov qword ptr [rsp + 0x28], rax
484e1b: mov qword ptr [rsp + 0x18], 0
484e24: call 0x4851e0
484e29: test eax, eax
484e2b: jne 0x484f18
484e31: cmp qword ptr [rsp + 0x18], 0
484e37: jne 0x484f18
484e3d: mov rdx, qword ptr [rsp + 0x38]
484e42: test rdx, rdx
484e45: je 0x484e71
484e47: cmp word ptr [rdx + 6], -0xf
484e4c: je 0x484f38
484e52: mov rcx, qword ptr [rsp + 0x30]
484e57: xor eax, eax
484e59: test rcx, rcx
484e5c: je 0x484e61
484e5e: mov rax, qword ptr [rcx]
484e61: add rax, qword ptr [rdx + 8]
484e65: je 0x484e71
484e67: lea rsi, [rip + 0x3cc12]
484e6e: mov qword ptr [rax], rsi
484e71: lea rax, [rip + 0x269fc]
484e78: mov r8, rbp
484e7b: mov rdx, r12
484e7e: mov rsi, r13
484e81: lea rcx, [rip - 0x7e8]
484e88: mov rdi, r14
484e8b: mov qword ptr [rsp + 0x20], rbx
484e90: mov qword ptr [rsp + 0x28], rax
484e95: mov qword ptr [rsp + 0x18], 0
484e9e: call 0x4851e0
484ea3: test eax, eax
484ea5: jne 0x484f00
484ea7: cmp qword ptr [rsp + 0x18], 0
484ead: jne 0x484f00
484eaf: mov rdx, qword ptr [rsp + 0x38]
484eb4: test rdx, rdx
484eb7: je 0x484ee3
484eb9: cmp word ptr [rdx + 6], -0xf
484ebe: je 0x484f40
484ec4: mov rcx, qword ptr [rsp + 0x30]
484ec9: xor eax, eax
484ecb: test rcx, rcx
484ece: je 0x484ed3
484ed0: mov rax, qword ptr [rcx]
484ed3: add rax, qword ptr [rdx + 8]
484ed7: je 0x484ee3
484ed9: lea rbx, [rip + 0x3cba0]
484ee0: mov qword ptr [rax], rbx
484ee3: mov rax, qword ptr [rsp + 0x48]
484ee8: xor rax, qword ptr fs:[0x28]
484ef1: jne 0x484f44
484ef3: add rsp, 0x50
484ef7: pop rbx
484ef8: pop rbp
484ef9: pop r12
484efb: pop r13
484efd: pop r14
484eff: ret 
484f00: cmp byte ptr [rsp + 0xf], 0
484f05: je 0x484ee3
484f07: mov rdi, qword ptr [rsp + 0x18]
484f0c: call 0x426a00
484f11: jmp 0x484ee3
484f13: nop dword ptr [rax + rax]
484f18: cmp byte ptr [rsp + 0xf], 0
484f1d: je 0x484e71
484f23: mov rdi, qword ptr [rsp + 0x18]
484f28: call 0x426a00
484f2d: jmp 0x484e71
484f32: nop word ptr [rax + rax]
484f38: xor eax, eax
484f3a: jmp 0x484e61
484f3f: nop 
484f40: xor eax, eax
484f42: jmp 0x484ed3
484f44: call 0x4547a0
484f49: nop dword ptr [rax]
484f50: push r12
484f52: mov r8, rsi
484f55: mov r12, rdx
484f58: push rbx
484f59: mov rbx, rcx
484f5c: sub rsp, 0x428
484f63: mov rax, qword ptr fs:[0x28]
484f6c: mov qword ptr [rsp + 0x418], rax
484f74: xor eax, eax
484f76: lea rax, [rip + 0x26a98]
484f7d: mov rcx, rax
484f80: test edi, edi
484f82: jne 0x484feb
484f84: cmp byte ptr [r8], 0
484f88: lea rdx, [rip + 0x26a86]
484f8f: lea r9, [rip + 0x10337]
484f96: mov edi, 2
484f9b: cmove r9, rdx
484f9f: test r12, r12
484fa2: lea rdx, [rip + 0x26917]
484fa9: cmove r12, rdx
484fad: mov rdx, qword ptr [rip + 0x3aab4]
484fb4: lea rsi, [rip + 0x260b3]
484fbb: mov rdx, qword ptr [rdx]
484fbe: test rdx, rdx
484fc1: cmove rdx, rsi
484fc5: sub rsp, 8
484fc9: lea rsi, [rip + 0x268c1]
484fd0: push rax
484fd1: xor eax, eax
484fd3: push rcx
484fd4: mov rcx, r12
484fd7: push rbx
484fd8: call 0x4810c0
484fdd: add rsp, 0x20
484fe1: mov edi, 0x7f
484fe6: call 0x4505c0
484feb: mov qword ptr [rsp + 8], rsi
484ff0: mov edx, 0x400
484ff5: lea rsi, [rsp + 0x10]
484ffa: call 0x429060
484fff: mov r8, qword ptr [rsp + 8]
485004: lea rcx, [rip + 0x102c2]
48500b: jmp 0x484f84
485010: endbr64 
485014: push rax
485015: pop rax
485016: sub rsp, 8
48501a: mov rax, 0xfffffffffffffff8
485021: mov rax, qword ptr fs:[rax]
485025: test rax, rax
485028: je 0x485050
48502a: mov rdx, qword ptr [rax]
48502d: movdqu xmm0, xmmword ptr [rsi]
485031: movups xmmword ptr [rdx], xmm0
485034: mov rcx, qword ptr [rsi + 0x10]
485038: mov esi, 1
48503d: mov qword ptr [rdx + 0x10], rcx
485041: mov rdx, qword ptr [rax + 8]
485045: mov dword ptr [rdx], edi
485047: lea rdi, [rax + 0x10]
48504b: call 0x485250
485050: mov rcx, qword ptr [rsi + 8]
485054: mov rsi, qword ptr [rsi]
485057: call 0x484f50
48505c: nop dword ptr [rax]
485060: endbr64 
485064: push rbp
485065: mov r8, rdx
485068: mov rdx, rcx
48506b: mov ebp, edi
48506d: push rbx
48506e: sub rsp, 8
485072: mov rax, 0xfffffffffffffff8
485079: test rcx, rcx
48507c: mov rbx, qword ptr fs:[rax]
485080: lea rax, [rip + 0x2681e]
485087: cmove rdx, rax
48508b: test rbx, rbx
48508e: je 0x4850ac
485090: mov rdi, qword ptr [rbx]
485093: call 0x483600
485098: mov rax, qword ptr [rbx + 8]
48509c: lea rdi, [rbx + 0x10]
4850a0: mov esi, 1
4850a5: mov dword ptr [rax], ebp
4850a7: call 0x485250
4850ac: mov rcx, rdx
4850af: mov rdx, r8
4850b2: call 0x484f50
4850b7: nop word ptr [rax + rax]
4850c0: endbr64 
4850c4: push r12
4850c6: sub rsp, 0x110
4850cd: mov r12, 0xfffffffffffffff8
4850d4: mov qword ptr [rsp], rdi
4850d8: mov qword ptr [rsp + 0x10], rsi
4850dd: mov qword ptr [rsp + 0x18], rdx
4850e2: mov rax, qword ptr fs:[0x28]
4850eb: mov qword ptr [rsp + 0x108], rax
4850f3: xor eax, eax
4850f5: mov rax, qword ptr fs:[r12]
4850fa: mov qword ptr [rsp + 8], rax
4850ff: test rdi, rdi
485102: je 0x485190
485108: lea rax, [rsp + 0x2c]
48510d: mov qword ptr [rsp + 0x30], rdi
485112: xor esi, esi
485114: lea rdi, [rsp + 0x40]
485119: mov qword ptr [rsp + 0x38], rax
48511e: lea rax, [rsp + 0x30]
485123: mov qword ptr fs:[r12], rax
485128: call 0x465050
48512d: endbr64 
485131: mov r12d, eax
485134: test eax, eax
485136: jne 0x4851b8
48513c: mov rcx, qword ptr [rsp + 0x10]
485141: mov rdi, qword ptr [rsp + 0x18]
485146: call rcx
485148: mov rax, 0xfffffffffffffff8
48514f: mov rcx, qword ptr [rsp + 8]
485154: pxor xmm0, xmm0
485158: mov qword ptr fs:[rax], rcx
48515c: mov rax, qword ptr [rsp]
485160: mov qword ptr [rax + 0x10], 0
485168: movups xmmword ptr [rax], xmm0
48516b: mov rax, qword ptr [rsp + 0x108]
485173: xor rax, qword ptr fs:[0x28]
48517c: jne 0x4851cf
48517e: add rsp, 0x110
485185: mov eax, r12d
485188: pop r12
48518a: ret 
48518b: nop dword ptr [rax + rax]
485190: mov qword ptr fs:[r12], 0
485199: mov rax, qword ptr [rsp + 0x10]
48519e: mov rdi, qword ptr [rsp + 0x18]
4851a3: call rax
4851a5: mov rax, qword ptr [rsp + 8]
4851aa: mov qword ptr fs:[r12], rax
4851af: xor r12d, r12d
4851b2: jmp 0x48516b
4851b4: nop dword ptr [rax]
4851b8: mov rax, 0xfffffffffffffff8
4851bf: mov rcx, qword ptr [rsp + 8]
4851c4: mov qword ptr fs:[rax], rcx
4851c8: mov r12d, dword ptr [rsp + 0x2c]
4851cd: jmp 0x48516b
4851cf: call 0x4547a0
4851d4: nop word ptr cs:[rax + rax]
4851df: nop 
4851e0: endbr64 
4851e4: push r12
4851e6: mov r12, rdi
4851e9: push rbp
4851ea: mov rbp, rsi
4851ed: mov rsi, rcx
4851f0: push rbx
4851f1: mov rbx, rdx
4851f4: mov rdx, r8
4851f7: sub rsp, 0x20
4851fb: mov rax, qword ptr fs:[0x28]
485204: mov qword ptr [rsp + 0x18], rax
485209: xor eax, eax
48520b: mov rdi, rsp
48520e: call 0x4850c0
485213: mov rdx, qword ptr [rsp]
485217: mov qword ptr [r12], rdx
48521b: mov rdx, qword ptr [rsp + 8]
485220: cmp qword ptr [rsp + 0x10], rdx
485225: mov qword ptr [rbp], rdx
485229: sete byte ptr [rbx]
48522c: mov rbx, qword ptr [rsp + 0x18]
485231: xor rbx, qword ptr fs:[0x28]
48523a: jne 0x485245
48523c: add rsp, 0x20
485240: pop rbx
485241: pop rbp
485242: pop r12
485244: ret 
485245: call 0x4547a0
48524a: nop word ptr [rax + rax]
485250: endbr64 
485254: mov r8, qword ptr [rdi + 0x30]
485258: mov r9, qword ptr [rdi + 8]
48525c: mov rdx, qword ptr [rdi + 0x38]
485260: ror r8, 0x11
485264: xor r8, qword ptr fs:[0x30]
48526d: ror r9, 0x11
485271: xor r9, qword ptr fs:[0x30]
48527a: ror rdx, 0x11
48527e: xor rdx, qword ptr fs:[0x30]
485287: xor eax, eax
485289: rdsspq rax
48528e: sub rax, qword ptr [rdi + 0x58]
485292: je 0x4852b5
485294: neg rax
485297: shr rax, 3
48529b: add rax, 1
48529f: mov ebx, 0xff
4852a4: cmp rax, rbx
4852a7: cmovb rbx, rax
4852b5: nop 
4852b6: mov rbx, qword ptr [rdi]
4852b9: mov r12, qword ptr [rdi + 0x10]
4852bd: mov r13, qword ptr [rdi + 0x18]
4852c1: mov r14, qword ptr [rdi + 0x20]
4852c5: mov r15, qword ptr [rdi + 0x28]
4852c9: mov eax, esi
4852cb: mov rsp, r8
4852ce: mov rbp, r9
4852d1: nop 
4852d2: jmp rdx
4852d4: nop word ptr cs:[rax + rax]
4852de: nop 
4852e0: endbr64 
4852e4: sub rdx, 1
4852e8: jns 0x4852fa
4852ea: jmp 0x485318
4852ec: nop dword ptr [rax]
4852f0: sub rdx, 1
4852f4: cmp rdx, -1
4852f8: je 0x485318
4852fa: mov rax, qword ptr [rdi + rdx*8]
4852fe: mov rcx, qword ptr [rsi + rdx*8]
485302: cmp rax, rcx
485305: je 0x4852f0
485307: cmp rcx, rax
48530a: sbb eax, eax
48530c: and eax, 2
48530f: sub eax, 1
485312: ret 
485313: nop dword ptr [rax + rax]
485318: xor eax, eax
48531a: ret 
48531b: nop dword ptr [rax + rax]
485320: endbr64 
485324: push r15
485326: mov r15, rsi
485329: mov rsi, rdx
48532c: push r14
48532e: push r13
485330: push r12
485332: mov r12, rcx
485335: push rbp
485336: push rbx
485337: sub rsp, 0x68
48533b: mov qword ptr [rsp + 0x10], rdi
485340: mov qword ptr [rsp + 8], r8
485345: cmp r9, 1
485349: je 0x4857c0
48534f: mov r13, r9
485352: cmp r9, 2
485356: je 0x4856c0
48535c: test r9, r9
48535f: je 0x4856b8
485365: mov qword ptr [rsp + 0x40], 0
48536e: mov rax, rcx
485371: sub rax, r9
485374: lea r14, [rdx + rax*8]
485378: lea rax, [r9*8]
485380: lea rsi, [rax - 8]
485384: lea rdx, [rax - 0x10]
485388: mov qword ptr [rsp + 0x50], rax
48538d: mov rbx, qword ptr [r8 + rax - 8]
485392: mov rbp, qword ptr [r8 + rax - 0x10]
485397: lea rax, [r14 + rsi]
48539b: mov qword ptr [rsp + 0x58], rsi
4853a0: mov rcx, qword ptr [rax]
4853a3: mov qword ptr [rsp + 0x48], rdx
4853a8: mov qword ptr [rsp + 0x18], rax
4853ad: cmp rbx, rcx
4853b0: jbe 0x48592a
4853b6: add r12, r15
4853b9: sub r12, r13
4853bc: sub r12, 1
4853c0: js 0x48562a
4853c6: lea rax, [r13 - 1]
4853ca: mov qword ptr [rsp + 0x28], rax
4853cf: cmp r15, r12
4853d2: jg 0x4854bb
4853d8: test r15, r15
4853db: mov eax, 0
4853e0: mov rsi, qword ptr [rsp + 0x50]
4853e5: cmovns rax, r15
4853e9: lea r10, [r14 + rsi]
4853ed: mov r14, r13
4853f0: mov qword ptr [rsp + 0x30], rax
4853f5: mov rax, 0xfffffffffffffff8
4853fc: mov r13, r10
4853ff: sub rax, rsi
485402: mov qword ptr [rsp + 0x38], rax
485407: mov rax, r12
48540a: mov r12, rbp
48540d: mov rbp, rax
485410: mov rax, qword ptr [rsp + 0x38]
485415: mov r15, 0xffffffffffffffff
48541c: lea rdi, [rax + r13]
485420: mov rax, qword ptr [r13 - 8]
485424: mov qword ptr [rsp + 0x18], rax
485429: cmp rbx, rcx
48542c: jne 0x485668
485432: mov rsi, qword ptr [rsp + 8]
485437: mov rcx, r15
48543a: mov rdx, r14
48543d: mov qword ptr [rsp + 0x20], rdi
485442: call 0x487070
485447: cmp qword ptr [rsp + 0x18], rax
48544c: mov rdi, qword ptr [rsp + 0x20]
485451: je 0x485640
485457: mov rdx, qword ptr [rsp + 8]
48545c: mov rcx, r14
48545f: mov rsi, rdi
485462: mov qword ptr [rsp + 0x18], rdi
485467: sub r15, 1
48546b: sub r13, 8
48546f: call 0x48b810
485474: mov rax, qword ptr [rsp + 0x10]
485479: mov rdi, qword ptr [rsp + 0x18]
48547e: mov qword ptr [rax + rbp*8], r15
485482: sub rbp, 1
485486: mov rcx, qword ptr [r13 - 8]
48548a: cmp rbp, qword ptr [rsp + 0x30]
48548f: jge 0x485410
485495: mov rax, rbp
485498: mov rbp, r12
48549b: mov r13, r14
48549e: mov r14, rdi
4854a1: mov r12, rax
4854a4: mov rax, qword ptr [rsp + 0x58]
4854a9: add rax, rdi
4854ac: mov qword ptr [rsp + 0x18], rax
4854b1: cmp r12, -1
4854b5: je 0x48562a
4854bb: lea rsi, [r13 - 2]
4854bf: mov eax, 8
4854c4: lea rdx, [r13*8]
4854cc: cmp rsi, -1
4854d0: cmovge rax, qword ptr [rsp + 0x50]
4854d6: mov qword ptr [rsp + 0x58], rax
4854db: mov eax, 1
4854e0: sub rax, r13
4854e3: shl rax, 3
4854e7: cmp rsi, -1
4854eb: mov esi, 0
4854f0: cmovl rax, rsi
4854f4: lea rsi, [rax + rdx]
4854f8: lea rax, [rdx + rax - 8]
4854fd: add rsi, r14
485500: add rax, r14
485503: mov qword ptr [rsp + 0x38], rsi
485508: mov qword ptr [rsp + 0x50], rax
48550d: jmp 0x485560
48550f: nop 
485510: mov rsi, qword ptr [rsp + 8]
485515: mov rcx, r15
485518: mov rdx, r13
48551b: mov rdi, r14
48551e: call 0x487070
485523: cmp rax, qword ptr [rsp + 0x20]
485528: je 0x485541
48552a: mov rdx, qword ptr [rsp + 8]
48552f: mov rcx, r13
485532: mov rsi, r14
485535: mov rdi, r14
485538: sub r15, 1
48553c: call 0x48b810
485541: mov rax, qword ptr [rsp + 0x10]
485546: mov qword ptr [rax + r12*8], r15
48554a: mov rax, qword ptr [rsp + 0x18]
48554f: sub r12, 1
485553: mov rcx, qword ptr [rax]
485556: cmp r12, -1
48555a: je 0x48562a
485560: mov rax, qword ptr [rsp + 0x18]
485565: cmp qword ptr [rsp + 0x28], 0
48556b: mov rax, qword ptr [rax]
48556e: mov qword ptr [rsp + 0x20], rax
485573: js 0x485593
485575: mov rdx, qword ptr [rsp + 0x58]
48557a: mov rsi, qword ptr [rsp + 0x50]
48557f: mov qword ptr [rsp + 0x30], rcx
485584: mov rdi, qword ptr [rsp + 0x38]
485589: call 0x401040
48558e: mov rcx, qword ptr [rsp + 0x30]
485593: mov qword ptr [r14], 0
48559a: mov r15, 0xffffffffffffffff
4855a1: cmp rbx, rcx
4855a4: je 0x485510
4855aa: mov rax, qword ptr [rsp + 0x18]
4855af: mov rdx, rcx
4855b2: mov rax, qword ptr [rax]
4855b5: mov qword ptr [rsp + 0x30], rax
4855ba: div rbx
4855bd: mov r15, rax
4855c0: mov rcx, rdx
4855c3: mov rax, rbp
4855c6: mul r15
4855c9: mov rsi, rdx
4855cc: mov rdx, qword ptr [rsp + 0x48]
4855d1: jmp 0x4855e2
4855d3: nop dword ptr [rax + rax]
4855d8: cmp rax, rbp
4855db: sbb rsi, 0
4855df: sub rax, rbp
4855e2: cmp rcx, rsi
4855e5: jb 0x4855f7
4855e7: jne 0x485510
4855ed: cmp qword ptr [r14 + rdx], rax
4855f1: jae 0x485510
4855f7: sub r15, 1
4855fb: add rcx, rbx
4855fe: jae 0x4855d8
485600: jmp 0x485510
485605: nop dword ptr [rax]
485608: cmp r11, -1
48560c: jne 0x485850
485612: nop word ptr [rax + rax]
485618: movq xmm0, rdi
48561d: movq xmm1, rcx
485622: punpcklqdq xmm0, xmm1
485626: movups xmmword ptr [r10], xmm0
48562a: mov rax, qword ptr [rsp + 0x40]
48562f: add rsp, 0x68
485633: pop rbx
485634: pop rbp
485635: pop r12
485637: pop r13
485639: pop r14
48563b: pop r15
48563d: ret 
48563e: nop 
485640: mov rax, qword ptr [rsp + 0x10]
485645: sub r13, 8
485649: mov qword ptr [rax + rbp*8], r15
48564d: sub rbp, 1
485651: mov rcx, qword ptr [r13 - 8]
485655: cmp rbp, qword ptr [rsp + 0x30]
48565a: jge 0x485410
485660: jmp 0x485495
485665: nop dword ptr [rax]
485668: mov rdx, rcx
48566b: mov rax, qword ptr [r13 - 0x10]
48566f: div rbx
485672: mov r15, rax
485675: mov rcx, rdx
485678: mov rax, r12
48567b: mul r15
48567e: mov rsi, rdx
485681: jmp 0x485692
485683: nop dword ptr [rax + rax]
485688: cmp rax, r12
48568b: sbb rsi, 0
48568f: sub rax, r12
485692: cmp rsi, rcx
485695: ja 0x4856a7
485697: jne 0x485432
48569d: cmp qword ptr [r13 - 0x18], rax
4856a1: jae 0x485432
4856a7: sub r15, 1
4856ab: add rcx, rbx
4856ae: jae 0x485688
4856b0: jmp 0x485432
4856b5: nop dword ptr [rax]
4856b8: ud2 
4856ba: nop word ptr [rax + rax]
4856c0: lea r10, [rdx + rcx*8 - 0x10]
4856c5: mov rax, r8
4856c8: mov r8, qword ptr [r8 + 8]
4856cc: mov qword ptr [rsp + 0x40], 0
4856d5: mov rcx, qword ptr [r10 + 8]
4856d9: mov r9, qword ptr [rax]
4856dc: mov rdi, qword ptr [r10]
4856df: cmp r8, rcx
4856e2: jbe 0x48590b
4856e8: lea r11, [r15 + r12 - 3]
4856ed: test r11, r11
4856f0: js 0x485618
4856f6: cmp r15, r11
4856f9: jg 0x485850
4856ff: test r15, r15
485702: mov eax, 0
485707: mov rbx, r9
48570a: mov rbp, qword ptr [rsp + 0x10]
48570f: cmovs r15, rax
485713: neg rbx
485716: jmp 0x48574b
485718: nop dword ptr [rax + rax]
485720: add rdi, r8
485723: mov rcx, rdi
485726: jae 0x4857a0
485728: mov qword ptr [rbp + r11*8], 0xffffffffffffffff
485731: sub rcx, r9
485734: mov rdi, rsi
485737: add rdi, r9
48573a: adc rcx, 0
48573e: sub r11, 1
485742: cmp r11, r15
485745: jl 0x485608
48574b: sub r10, 8
48574f: mov rsi, qword ptr [r10]
485752: cmp r8, rcx
485755: je 0x485720
485757: mov rax, rdi
48575a: mov rdx, rcx
48575d: div r8
485760: mov rdi, rax
485763: mov rcx, rdx
485766: mov rax, r9
485769: mul rdi
48576c: nop dword ptr [rax]
485770: cmp rdx, rcx
485773: ja 0x48577c
485775: jne 0x48578c
485777: cmp rax, rsi
48577a: jbe 0x48578c
48577c: sub rdi, 1
485780: sub rax, r9
485783: sbb rdx, 0
485787: add rcx, r8
48578a: jae 0x485770
48578c: mov qword ptr [rbp + r11*8], rdi
485791: mov rdi, rsi
485794: sub rdi, rax
485797: sbb rcx, rdx
48579a: jmp 0x48573e
48579c: nop dword ptr [rax]
4857a0: xor eax, eax
4857a2: test r9, r9
4857a5: mov rdx, r9
4857a8: mov rdi, 0xffffffffffffffff
4857af: setne al
4857b2: sub rdx, rax
4857b5: mov rax, rbx
4857b8: jmp 0x485770
4857ba: nop word ptr [rax + rax]
4857c0: mov rdi, qword ptr [r8]
4857c3: mov rdx, qword ptr [rdx + rcx*8 - 8]
4857c8: mov qword ptr [rsp + 0x40], 0
4857d1: cmp rdi, rdx
4857d4: jbe 0x4858fa
4857da: mov r9, qword ptr [rsp + 0x10]
4857df: lea r8, [r15*8]
4857e7: mov rcx, r12
4857ea: add r9, r8
4857ed: sub rcx, 2
4857f1: js 0x485815
4857f3: shl rcx, 3
4857f7: nop word ptr [rax + rax]
485800: mov rax, qword ptr [rsi + rcx]
485804: div rdi
485807: mov qword ptr [r9 + rcx], rax
48580b: sub rcx, 8
48580f: cmp rcx, -8
485813: jne 0x485800
485815: test r15, r15
485818: jle 0x485843
48581a: lea rcx, [r9 - 8]
48581e: sub r9, r8
485821: xor r8d, r8d
485824: sub r9, 8
485828: nop dword ptr [rax + rax]
485830: mov rax, r8
485833: sub rcx, 8
485837: div rdi
48583a: mov qword ptr [rcx + 8], rax
48583e: cmp rcx, r9
485841: jne 0x485830
485843: mov qword ptr [rsi], rdx
485846: jmp 0x48562a
48584b: nop dword ptr [rax + rax]
485850: mov rbp, r9
485853: mov rsi, qword ptr [rsp + 0x10]
485858: xor ebx, ebx
48585a: neg rbp
48585d: jmp 0x48588b
48585f: nop 
485860: add rdi, r8
485863: mov rcx, rdi
485866: jae 0x4858e0
485868: mov qword ptr [rsi + r11*8], 0xffffffffffffffff
485870: sub rcx, r9
485873: mov rdi, rbx
485876: add rdi, r9
485879: adc rcx, 0
48587d: sub r11, 1
485881: cmp r11, -1
485885: je 0x485618
48588b: mov qword ptr [r10], rbx
48588e: cmp r8, rcx
485891: je 0x485860
485893: mov rax, rdi
485896: mov rdx, rcx
485899: div r8
48589c: mov rdi, rax
48589f: mov rcx, rdx
4858a2: mov rax, r9
4858a5: mul rdi
4858a8: nop dword ptr [rax + rax]
4858b0: cmp rdx, rcx
4858b3: ja 0x4858bc
4858b5: jne 0x4858cc
4858b7: test rax, rax
4858ba: je 0x4858cc
4858bc: sub rdi, 1
4858c0: sub rax, r9
4858c3: sbb rdx, 0
4858c7: add rcx, r8
4858ca: jae 0x4858b0
4858cc: mov qword ptr [rsi + r11*8], rdi
4858d0: mov rdi, rbx
4858d3: sub rdi, rax
4858d6: sbb rcx, rdx
4858d9: jmp 0x48587d
4858db: nop dword ptr [rax + rax]
4858e0: xor eax, eax
4858e2: test r9, r9
4858e5: mov rdx, r9
4858e8: mov rdi, 0xffffffffffffffff
4858ef: setne al
4858f2: sub rdx, rax
4858f5: mov rax, rbp
4858f8: jmp 0x4858b0
4858fa: mov qword ptr [rsp + 0x40], 1
485903: sub rdx, rdi
485906: jmp 0x4857da
48590b: jb 0x485916
48590d: cmp r9, rdi
485910: ja 0x4856e8
485916: mov qword ptr [rsp + 0x40], 1
48591f: sub rdi, r9
485922: sbb rcx, r8
485925: jmp 0x4856e8
48592a: jb 0x48594d
48592c: mov rsi, r8
48592f: lea rdx, [r9 - 1]
485933: mov rdi, r14
485936: mov qword ptr [rsp + 0x20], rcx
48593b: call 0x4852e0
485940: mov rcx, qword ptr [rsp + 0x20]
485945: test eax, eax
485947: js 0x4853b6
48594d: mov rdx, qword ptr [rsp + 8]
485952: mov rcx, r13
485955: mov rsi, r14
485958: mov rdi, r14
48595b: call 0x486fc0
485960: mov rax, qword ptr [rsp + 0x18]
485965: mov qword ptr [rsp + 0x40], 1
48596e: mov rcx, qword ptr [rax]
485971: jmp 0x4853b6
485976: nop word ptr cs:[rax + rax]
485980: endbr64 
485984: lea rdi, [rdi + rdx*8 - 8]
485989: lea rsi, [rsi + rdx*8 - 8]
48598e: mov eax, edx
485990: and eax, 3
485993: jne 0x4859b3
485995: mov r10, qword ptr [rsi]
485998: mov r11, qword ptr [rsi - 8]
48599c: xor eax, eax
48599e: shld rax, r10, cl
4859a2: mov r8, qword ptr [rsi - 0x10]
4859a6: lea rdi, [rdi + 0x18]
4859aa: sub rdx, 4
4859ae: jmp 0x485a62
4859b3: cmp eax, 2
4859b6: jae 0x4859e0
4859b8: mov r9, qword ptr [rsi]
4859bb: xor eax, eax
4859bd: shld rax, r9, cl
4859c1: sub rdx, 2
4859c5: jb 0x4859d9
4859c7: mov r10, qword ptr [rsi - 8]
4859cb: mov r11, qword ptr [rsi - 0x10]
4859cf: lea rsi, [rsi - 8]
4859d3: lea rdi, [rdi + 0x10]
4859d7: jmp 0x485a56
4859d9: shl r9, cl
4859dc: mov qword ptr [rdi], r9
4859df: ret 
4859e0: jne 0x485a20
4859e2: mov r8, qword ptr [rsi]
4859e5: mov r9, qword ptr [rsi - 8]
4859e9: xor eax, eax
4859eb: shld rax, r8, cl
4859ef: sub rdx, 3
4859f3: jb 0x485a03
4859f5: mov r10, qword ptr [rsi - 0x10]
4859f9: lea rsi, [rsi - 0x10]
4859fd: lea rdi, [rdi + 8]
485a01: jmp 0x485a4a
485a03: shld r8, r9, cl
485a07: mov qword ptr [rdi], r8
485a0a: shl r9, cl
485a0d: mov qword ptr [rdi - 8], r9
485a11: ret 
485a12: nop word ptr cs:[rax + rax]
485a1d: nop dword ptr [rax]
485a20: mov r11, qword ptr [rsi]
485a23: mov r8, qword ptr [rsi - 8]
485a27: xor eax, eax
485a29: shld rax, r11, cl
485a2d: mov r9, qword ptr [rsi - 0x10]
485a31: lea rsi, [rsi - 0x18]
485a35: sub rdx, 4
485a39: jb 0x485a7c
485a3b: nop dword ptr [rax + rax]
485a40: shld r11, r8, cl
485a44: mov r10, qword ptr [rsi]
485a47: mov qword ptr [rdi], r11
485a4a: shld r8, r9, cl
485a4e: mov r11, qword ptr [rsi - 8]
485a52: mov qword ptr [rdi - 8], r8
485a56: shld r9, r10, cl
485a5a: mov r8, qword ptr [rsi - 0x10]
485a5e: mov qword ptr [rdi - 0x10], r9
485a62: shld r10, r11, cl
485a66: mov r9, qword ptr [rsi - 0x18]
485a6a: mov qword ptr [rdi - 0x18], r10
485a6e: add rsi, -0x20
485a72: lea rdi, [rdi - 0x20]
485a76: sub rdx, 4
485a7a: jae 0x485a40
485a7c: shld r11, r8, cl
485a80: mov qword ptr [rdi], r11
485a83: shld r8, r9, cl
485a87: mov qword ptr [rdi - 8], r8
485a8b: shl r9, cl
485a8e: mov qword ptr [rdi - 0x10], r9
485a92: ret 
485a93: nop word ptr cs:[rax + rax]
485a9d: nop dword ptr [rax]
485aa0: endbr64 
485aa4: mov eax, edx
485aa6: and eax, 3
485aa9: jne 0x485acd
485aab: mov r10, qword ptr [rsi]
485aae: mov r11, qword ptr [rsi + 8]
485ab2: xor eax, eax
485ab4: shrd rax, r10, cl
485ab8: mov r8, qword ptr [rsi + 0x10]
485abc: lea rsi, [rsi + 8]
485ac0: lea rdi, [rdi - 0x18]
485ac4: sub rdx, 4
485ac8: jmp 0x485b72
485acd: cmp eax, 2
485ad0: jae 0x485afa
485ad2: mov r9, qword ptr [rsi]
485ad5: xor eax, eax
485ad7: shrd rax, r9, cl
485adb: sub rdx, 2
485adf: jb 0x485af3
485ae1: mov r10, qword ptr [rsi + 8]
485ae5: mov r11, qword ptr [rsi + 0x10]
485ae9: lea rsi, [rsi + 0x10]
485aed: lea rdi, [rdi - 0x10]
485af1: jmp 0x485b66
485af3: shr r9, cl
485af6: mov qword ptr [rdi], r9
485af9: ret 
485afa: jne 0x485b30
485afc: mov r8, qword ptr [rsi]
485aff: mov r9, qword ptr [rsi + 8]
485b03: xor eax, eax
485b05: shrd rax, r8, cl
485b09: sub rdx, 3
485b0d: jb 0x485b1d
485b0f: mov r10, qword ptr [rsi + 0x10]
485b13: lea rsi, [rsi + 0x18]
485b17: lea rdi, [rdi - 8]
485b1b: jmp 0x485b5b
485b1d: shrd r8, r9, cl
485b21: mov qword ptr [rdi], r8
485b24: shr r9, cl
485b27: mov qword ptr [rdi + 8], r9
485b2b: ret 
485b2c: nop dword ptr [rax]
485b30: mov r11, qword ptr [rsi]
485b33: mov r8, qword ptr [rsi + 8]
485b37: xor eax, eax
485b39: shrd rax, r11, cl
485b3d: mov r9, qword ptr [rsi + 0x10]
485b41: lea rsi, [rsi + 0x20]
485b45: sub rdx, 4
485b49: jb 0x485b8c
485b4b: nop dword ptr [rax + rax]
485b50: shrd r11, r8, cl
485b54: mov r10, qword ptr [rsi - 8]
485b58: mov qword ptr [rdi], r11
485b5b: shrd r8, r9, cl
485b5f: mov r11, qword ptr [rsi]
485b62: mov qword ptr [rdi + 8], r8
485b66: shrd r9, r10, cl
485b6a: mov r8, qword ptr [rsi + 8]
485b6e: mov qword ptr [rdi + 0x10], r9
485b72: shrd r10, r11, cl
485b76: mov r9, qword ptr [rsi + 0x10]
485b7a: mov qword ptr [rdi + 0x18], r10
485b7e: add rsi, 0x20
485b82: lea rdi, [rdi + 0x20]
485b86: sub rdx, 4
485b8a: jae 0x485b50
485b8c: shrd r11, r8, cl
485b90: mov qword ptr [rdi], r11
485b93: shrd r8, r9, cl
485b97: mov qword ptr [rdi + 8], r8
485b9b: shr r9, cl
485b9e: mov qword ptr [rdi + 0x10], r9
485ba2: ret 
485ba3: nop word ptr cs:[rax + rax]
485bad: nop dword ptr [rax]
485bb0: endbr64 
485bb4: push rbp
485bb5: mov rbp, rsp
485bb8: push r15
485bba: mov r15, rsi
485bbd: push r14
485bbf: push r13
485bc1: mov r13, rdx
485bc4: push r12
485bc6: push rbx
485bc7: mov rbx, r8
485bca: sub rsp, 0x58
485bce: mov qword ptr [rbp - 0x58], rdi
485bd2: mov qword ptr [rbp - 0x50], rcx
485bd6: mov rax, qword ptr fs:[0x28]
485bdf: mov qword ptr [rbp - 0x38], rax
485be3: xor eax, eax
485be5: cmp r8, 0x1f
485be9: jg 0x485c50
485beb: test r8, r8
485bee: jne 0x485c18
485bf0: mov rbx, qword ptr [rbp - 0x38]
485bf4: xor rbx, qword ptr fs:[0x28]
485bfd: jne 0x48603f
485c03: lea rsp, [rbp - 0x28]
485c07: pop rbx
485c08: pop r12
485c0a: pop r13
485c0c: pop r14
485c0e: pop r15
485c10: pop rbp
485c11: ret 
485c12: nop word ptr [rax + rax]
485c18: mov rcx, qword ptr [rcx]
485c1b: cmp rcx, 1
485c1f: ja 0x485e08
485c25: je 0x485f4b
485c2b: test rdx, rdx
485c2e: jle 0x485c3f
485c30: lea rdx, [rdx*8]
485c38: xor esi, esi
485c3a: call 0x401110
485c3f: xor eax, eax
485c41: jmp 0x485e0d
485c46: nop word ptr cs:[rax + rax]
485c50: mov rdx, r8
485c53: mov rdi, rsp
485c56: shl rdx, 4
485c5a: lea rax, [rdx + 0x17]
485c5e: add rdx, 0x10
485c62: mov rcx, rax
485c65: and rcx, 0xfffffffffffff000
485c6c: sub rdi, rcx
485c6f: mov rcx, rdi
485c72: cmp rsp, rcx
485c75: je 0x485c8c
485c77: sub rsp, 0x1000
485c7e: or qword ptr [rsp + 0xff8], 0
485c87: cmp rsp, rcx
485c8a: jne 0x485c77
485c8c: and edx, 0xfff
485c92: sub rsp, rdx
485c95: test rdx, rdx
485c98: jne 0x485fb7
485c9e: lea rdx, [rsp + 0xf]
485ca3: mov r12, qword ptr [rbp - 0x58]
485ca7: mov rcx, rbx
485caa: mov rsi, r15
485cad: and rdx, 0xfffffffffffffff0
485cb1: mov r14, r13
485cb4: mov qword ptr [rbp - 0x68], rax
485cb8: mov qword ptr [rbp - 0x60], rdx
485cbc: mov r8, rdx
485cbf: mov rdx, qword ptr [rbp - 0x50]
485cc3: mov rdi, r12
485cc6: sub r14, rbx
485cc9: call 0x4862e0
485cce: lea rax, [rbx*8]
485cd6: mov qword ptr [rbp - 0x48], rax
485cda: add r12, rax
485cdd: lea r9, [r15 + rax]
485ce1: cmp rbx, r14
485ce4: jg 0x485deb
485cea: mov rax, qword ptr [rbp - 0x68]
485cee: mov rdi, rsp
485cf1: mov rdx, rax
485cf4: and rax, 0xfffffffffffff000
485cfa: sub rdi, rax
485cfd: and rdx, 0xfffffffffffffff0
485d01: mov rax, rdi
485d04: cmp rsp, rax
485d07: je 0x485d1e
485d09: sub rsp, 0x1000
485d10: or qword ptr [rsp + 0xff8], 0
485d19: cmp rsp, rax
485d1c: jne 0x485d09
485d1e: and edx, 0xfff
485d24: sub rsp, rdx
485d27: test rdx, rdx
485d2a: je 0x485d32
485d2c: or qword ptr [rsp + rdx - 8], 0
485d32: mov rax, qword ptr [rbp - 0x48]
485d36: lea r15, [rsp + 0xf]
485d3b: mov qword ptr [rbp - 0x78], r13
485d3f: mov r13, rbx
485d42: and r15, 0xfffffffffffffff0
485d46: mov rbx, r12
485d49: mov r12, r9
485d4c: add rax, r15
485d4f: mov qword ptr [rbp - 0x68], rax
485d53: add rax, 8
485d57: mov qword ptr [rbp - 0x70], rax
485d5b: nop dword ptr [rax + rax]
485d60: mov r8, qword ptr [rbp - 0x60]
485d64: mov rdx, qword ptr [rbp - 0x50]
485d68: mov rcx, r13
485d6b: mov rsi, r12
485d6e: mov rdi, r15
485d71: call 0x4862e0
485d76: mov rdi, rbx
485d79: mov rcx, r13
485d7c: mov rdx, r15
485d7f: mov rsi, rbx
485d82: call 0x48b810
485d87: mov rcx, qword ptr [rbp - 0x68]
485d8b: add rbx, qword ptr [rbp - 0x48]
485d8f: xor edx, edx
485d91: lea rdi, [rbx + 8]
485d95: add rax, qword ptr [rcx]
485d98: setb dl
485d9b: mov qword ptr [rbx], rax
485d9e: test rdx, rdx
485da1: je 0x485ff0
485da7: mov rsi, qword ptr [rbp - 0x70]
485dab: lea rdx, [r13 - 1]
485daf: nop 
485db0: mov rax, qword ptr [rsi]
485db3: add rdi, 8
485db7: add rsi, 8
485dbb: add rax, 1
485dbf: mov qword ptr [rdi - 8], rax
485dc3: test rax, rax
485dc6: jne 0x486028
485dcc: sub rdx, 1
485dd0: jne 0x485db0
485dd2: sub r14, r13
485dd5: add r12, qword ptr [rbp - 0x48]
485dd9: cmp r13, r14
485ddc: jle 0x485d60
485dde: mov r9, r12
485de1: mov r12, rbx
485de4: mov rbx, r13
485de7: mov r13, qword ptr [rbp - 0x78]
485deb: test r14, r14
485dee: jne 0x485ea8
485df4: mov rax, qword ptr [rbp - 0x58]
485df8: add rbx, r13
485dfb: mov rax, qword ptr [rax + rbx*8 - 8]
485e00: jmp 0x485bf0
485e05: nop dword ptr [rax]
485e08: call 0x486050
485e0d: mov rsi, qword ptr [rbp - 0x58]
485e11: lea r14, [r13*8]
485e19: mov qword ptr [rsi + r13*8], rax
485e1d: lea rdi, [rsi + 8]
485e21: cmp rbx, 1
485e25: jle 0x485bf0
485e2b: mov r12, qword ptr [rbp - 0x50]
485e2f: lea rbx, [rsi + rbx*8]
485e33: mov rax, r14
485e36: mov qword ptr [rbp - 0x48], rbx
485e3a: mov rbx, rdi
485e3d: add r12, 8
485e41: mov r14, r12
485e44: mov r12, rax
485e47: jmp 0x485e6d
485e49: nop dword ptr [rax]
485e50: mov eax, 0
485e55: je 0x485e90
485e57: mov qword ptr [rbx + r12], rax
485e5b: add r14, 8
485e5f: add rbx, 8
485e63: cmp rbx, qword ptr [rbp - 0x48]
485e67: je 0x485bf0
485e6d: mov rcx, qword ptr [r14]
485e70: cmp rcx, 1
485e74: jbe 0x485e50
485e76: mov rdx, r13
485e79: mov rsi, r15
485e7c: mov rdi, rbx
485e7f: call 0x48b8c0
485e84: jmp 0x485e57
485e86: nop word ptr cs:[rax + rax]
485e90: mov rcx, r13
485e93: mov rdx, r15
485e96: mov rsi, rbx
485e99: mov rdi, rbx
485e9c: call 0x48b810
485ea1: jmp 0x485e57
485ea3: nop dword ptr [rax + rax]
485ea8: mov r15, qword ptr [rbp - 0x60]
485eac: mov rsi, qword ptr [rbp - 0x50]
485eb0: mov r8, r14
485eb3: mov rcx, r9
485eb6: mov rdx, rbx
485eb9: mov rdi, r15
485ebc: call 0x485bb0
485ec1: mov rdx, r15
485ec4: mov rsi, r12
485ec7: mov rdi, r12
485eca: mov rcx, rbx
485ecd: call 0x48b810
485ed2: mov rdx, qword ptr [rbp - 0x48]
485ed6: mov r8, rax
485ed9: mov rax, r15
485edc: add rax, rdx
485edf: lea r10, [r12 + rdx]
485ee3: add r8, qword ptr [rax]
485ee6: lea rsi, [rax + 8]
485eea: lea rdi, [r10 + 8]
485eee: setb al
485ef1: mov qword ptr [r10], r8
485ef4: movzx eax, al
485ef7: test rax, rax
485efa: jne 0x485f40
485efc: cmp rdi, rsi
485eff: je 0x485df4
485f05: cmp r14, 1
485f09: jle 0x485df4
485f0f: lea rdx, [r14*8 - 8]
485f17: call 0x401060
485f1c: jmp 0x485df4
485f21: nop dword ptr [rax]
485f28: mov rax, qword ptr [rsi]
485f2b: add rdi, 8
485f2f: add rsi, 8
485f33: add rax, 1
485f37: mov qword ptr [rdi - 8], rax
485f3b: test rax, rax
485f3e: jne 0x485efc
485f40: sub r14, 1
485f44: jne 0x485f28
485f46: jmp 0x485df4
485f4b: test rdx, rdx
485f4e: jle 0x485c3f
485f54: lea rax, [rdi + 0xf]
485f58: mov rcx, rdi
485f5b: sub rax, rsi
485f5e: cmp rax, 0x1e
485f62: jbe 0x485fc2
485f64: lea rax, [rdx - 1]
485f68: cmp rax, 3
485f6c: jbe 0x485fc2
485f6e: shr rdx, 1
485f71: xor eax, eax
485f73: shl rdx, 4
485f77: nop word ptr [rax + rax]
485f80: movdqu xmm0, xmmword ptr [r15 + rax]
485f86: movups xmmword ptr [rcx + rax], xmm0
485f8a: add rax, 0x10
485f8e: cmp rdx, rax
485f91: jne 0x485f80
485f93: mov rax, r13
485f96: and rax, 0xfffffffffffffffe
485f9a: test r13b, 1
485f9e: je 0x485c3f
485fa4: mov rdx, qword ptr [r15 + rax*8]
485fa8: mov rdi, qword ptr [rbp - 0x58]
485fac: mov qword ptr [rdi + rax*8], rdx
485fb0: xor eax, eax
485fb2: jmp 0x485e0d
485fb7: or qword ptr [rsp + rdx - 8], 0
485fbd: jmp 0x485c9e
485fc2: mov rcx, qword ptr [rbp - 0x58]
485fc6: xor eax, eax
485fc8: nop dword ptr [rax + rax]
485fd0: mov rdx, qword ptr [r15 + rax*8]
485fd4: mov qword ptr [rcx + rax*8], rdx
485fd8: add rax, 1
485fdc: cmp r13, rax
485fdf: jne 0x485fd0
485fe1: xor eax, eax
485fe3: jmp 0x485e0d
485fe8: nop dword ptr [rax + rax]
485ff0: mov rax, qword ptr [rbp - 0x70]
485ff4: lea rdx, [r13 - 1]
485ff8: mov rsi, rax
485ffb: cmp rax, rdi
485ffe: je 0x485dd2
486004: test rdx, rdx
486007: lea r8, [rdx*8]
48600f: mov eax, 8
486014: cmovle r8, rax
486018: mov rdx, r8
48601b: call 0x401060
486020: jmp 0x485dd2
486025: nop dword ptr [rax]
486028: cmp rsi, rdi
48602b: je 0x485dd2
486031: sub rdx, 1
486035: test rdx, rdx
486038: jg 0x486004
48603a: jmp 0x485dd2
48603f: call 0x4547a0
486044: nop word ptr cs:[rax + rax]
48604e: nop 
486050: endbr64 
486054: push rbx
486055: xor r10, r10
486058: mov rax, qword ptr [rsi]
48605b: mov rbx, rdx
48605e: mul rcx
486061: mov r11, rbx
486064: add rax, r10
486067: adc rdx, 0
48606b: and ebx, 3
48606e: je 0x4860a2
486070: cmp ebx, 2
486073: je 0x4860ce
486075: jg 0x4860b9
486077: dec r11
48607a: jne 0x486084
48607c: mov qword ptr [rdi], rax
48607f: jmp 0x486164
486084: lea rsi, [rsi + r11*8 + 8]
486089: lea rdi, [rdi + r11*8 - 8]
48608e: neg r11
486091: xor r10, r10
486094: xor ebx, ebx
486096: mov r9, rax
486099: mov rax, qword ptr [rsi + r11*8]
48609d: mov r8, rdx
4860a0: jmp 0x486104
4860a2: lea rsi, [rsi + r11*8]
4860a6: lea rdi, [rdi + r11*8 - 0x10]
4860ab: neg r11
4860ae: xor r10, r10
4860b1: mov r8, rax
4860b4: mov rbx, rdx
4860b7: jmp 0x486112
4860b9: lea rsi, [rsi + r11*8 - 8]
4860be: lea rdi, [rdi + r11*8 - 0x18]
4860c3: neg r11
4860c6: mov rbx, rax
4860c9: mov r10, rdx
4860cc: jmp 0x486125
4860ce: lea rsi, [rsi + r11*8 - 0x10]
4860d3: lea rdi, [rdi + r11*8 - 0x20]
4860d8: neg r11
4860db: xor r8, r8
4860de: xor ebx, ebx
4860e0: mov r10, rax
4860e3: mov rax, qword ptr [rsi + r11*8 + 0x18]
4860e8: mov r9, rdx
4860eb: jmp 0x486149
4860ed: nop dword ptr [rax]
4860f0: mov qword ptr [rdi + r11*8], r10
4860f4: add r9, rax
4860f7: mov rax, qword ptr [rsi + r11*8]
4860fb: adc r8, rdx
4860fe: mov r10d, 0
486104: mul rcx
486107: mov qword ptr [rdi + r11*8 + 8], r9
48610c: add r8, rax
48610f: adc rbx, rdx
486112: mov rax, qword ptr [rsi + r11*8 + 8]
486117: mul rcx
48611a: mov qword ptr [rdi + r11*8 + 0x10], r8
48611f: add rbx, rax
486122: adc r10, rdx
486125: mov rax, qword ptr [rsi + r11*8 + 0x10]
48612a: mul rcx
48612d: mov qword ptr [rdi + r11*8 + 0x18], rbx
486132: mov r8d, 0
486138: mov rbx, r8
48613b: add r10, rax
48613e: mov rax, qword ptr [rsi + r11*8 + 0x18]
486143: mov r9, r8
486146: adc r9, rdx
486149: mul rcx
48614c: add r11, 4
486150: js 0x4860f0
486152: mov qword ptr [rdi + r11*8], r10
486156: add r9, rax
486159: adc rdx, r8
48615c: mov qword ptr [rdi + r11*8 + 8], r9
486161: add rdx, r8
486164: mov rax, rdx
486167: pop rbx
486168: ret 
486169: nop dword ptr [rax]
486170: endbr64 
486174: push r15
486176: mov r15, rsi
486179: push r14
48617b: push r13
48617d: push r12
48617f: mov r12, rcx
486182: push rbp
486183: mov rbp, rdx
486186: push rbx
486187: mov rbx, rdi
48618a: sub rsp, 8
48618e: mov rcx, qword ptr [rdx]
486191: cmp rcx, 1
486195: ja 0x486248
48619b: je 0x486258
4861a1: test r12, r12
4861a4: jle 0x4861b5
4861a6: lea rdx, [r12*8]
4861ae: xor esi, esi
4861b0: call 0x401110
4861b5: xor eax, eax
4861b7: lea r13, [r12*8]
4861bf: lea r14, [rbx + r13]
4861c3: add rbx, 8
4861c7: mov qword ptr [r14], rax
4861ca: cmp r12, 1
4861ce: jle 0x486218
4861d0: add rbp, 8
4861d4: jmp 0x4861f8
4861d6: nop word ptr cs:[rax + rax]
4861e0: mov eax, 0
4861e5: je 0x486230
4861e7: mov qword ptr [rbx + r13], rax
4861eb: add rbx, 8
4861ef: add rbp, 8
4861f3: cmp r14, rbx
4861f6: je 0x486218
4861f8: mov rcx, qword ptr [rbp]
4861fc: cmp rcx, 1
486200: jbe 0x4861e0
486202: mov rdx, r12
486205: mov rsi, r15
486208: mov rdi, rbx
48620b: call 0x48b8c0
486210: jmp 0x4861e7
486212: nop word ptr [rax + rax]
486218: add rsp, 8
48621c: pop rbx
48621d: pop rbp
48621e: pop r12
486220: pop r13
486222: pop r14
486224: pop r15
486226: ret 
486227: nop word ptr [rax + rax]
486230: mov rcx, r12
486233: mov rdx, r15
486236: mov rsi, rbx
486239: mov rdi, rbx
48623c: call 0x48b810
486241: jmp 0x4861e7
486243: nop dword ptr [rax + rax]
486248: mov rdx, r12
48624b: call 0x486050
486250: jmp 0x4861b7
486255: nop dword ptr [rax]
486258: test r12, r12
48625b: jle 0x4861b5
486261: lea rax, [rdi + 0xf]
486265: sub rax, rsi
486268: cmp rax, 0x1e
48626c: jbe 0x4862b9
48626e: lea rax, [r12 - 1]
486273: cmp rax, 3
486277: jbe 0x4862b9
486279: mov rdx, r12
48627c: xor eax, eax
48627e: shr rdx, 1
486281: shl rdx, 4
486285: nop dword ptr [rax]
486288: movdqu xmm0, xmmword ptr [r15 + rax]
48628e: movups xmmword ptr [rbx + rax], xmm0
486292: add rax, 0x10
486296: cmp rax, rdx
486299: jne 0x486288
48629b: mov rax, r12
48629e: and rax, 0xfffffffffffffffe
4862a2: test r12b, 1
4862a6: je 0x4861b5
4862ac: mov rdx, qword ptr [r15 + rax*8]
4862b0: mov qword ptr [rbx + rax*8], rdx
4862b4: jmp 0x4861b5
4862b9: xor eax, eax
4862bb: nop dword ptr [rax + rax]
4862c0: mov rdx, qword ptr [r15 + rax*8]
4862c4: mov qword ptr [rbx + rax*8], rdx
4862c8: add rax, 1
4862cc: cmp r12, rax
4862cf: jne 0x4862c0
4862d1: jmp 0x4861b5
4862d6: nop word ptr cs:[rax + rax]
4862e0: endbr64 
4862e4: push r15
4862e6: mov rax, rcx
4862e9: mov r15, rdx
4862ec: push r14
4862ee: push r13
4862f0: mov r13, rcx
4862f3: push r12
4862f5: push rbp
4862f6: mov rbp, r8
4862f9: push rbx
4862fa: mov rbx, rdi
4862fd: sub rsp, 0x48
486301: and eax, 1
486304: mov qword ptr [rsp], rsi
486308: mov qword ptr [rsp + 0x28], rax
48630d: je 0x486378
48630f: lea r12, [rcx - 1]
486313: cmp r12, 0x1f
486317: jle 0x486698
48631d: mov rcx, r12
486320: call 0x4862e0
486325: mov r14, qword ptr [rsp]
486329: mov rcx, qword ptr [r15 + r12*8]
48632d: lea rbp, [rbx + r12*8]
486331: mov rdx, r12
486334: mov rdi, rbp
486337: mov rsi, r14
48633a: call 0x48b8c0
48633f: mov rdx, r13
486342: mov rsi, r15
486345: mov rdi, rbp
486348: mov r8, rax
48634b: mov rax, r12
48634e: add r13, r12
486351: shl rax, 4
486355: mov qword ptr [rbx + rax], r8
486359: mov rcx, qword ptr [r14 + r12*8]
48635d: call 0x48b8c0
486362: mov qword ptr [rbx + r13*8], rax
486366: add rsp, 0x48
48636a: pop rbx
48636b: pop rbp
48636c: pop r12
48636e: pop r13
486370: pop r14
486372: pop r15
486374: ret 
486375: nop dword ptr [rax]
486378: mov r12, rcx
48637b: mov r10, rsi
48637e: sar r12, 1
486381: lea rax, [r12*8]
486389: lea rdx, [rdx + rax]
48638d: mov qword ptr [rsp + 8], rax
486392: add r10, rax
486395: lea rax, [rcx*8]
48639d: mov qword ptr [rsp + 0x10], rdx
4863a2: lea r14, [rdi + rax]
4863a6: mov qword ptr [rsp + 0x18], rax
4863ab: cmp r12, 0x1f
4863af: jle 0x486678
4863b5: mov rsi, r10
4863b8: mov rcx, r12
4863bb: mov rdi, r14
4863be: mov qword ptr [rsp + 0x20], r10
4863c3: call 0x4862e0
4863c8: mov r10, qword ptr [rsp + 0x20]
4863cd: mov rsi, qword ptr [rsp]
4863d1: mov rdi, r10
4863d4: mov rdx, r12
4863d7: mov qword ptr [rsp + 0x20], r10
4863dc: call 0x4852e0
4863e1: mov r10, qword ptr [rsp + 0x20]
4863e6: mov rcx, r12
4863e9: test eax, eax
4863eb: js 0x4867d0
4863f1: mov rdx, qword ptr [rsp]
4863f5: mov rsi, r10
4863f8: mov rdi, rbx
4863fb: call 0x486fc0
486400: mov dword ptr [rsp + 0x20], 1
486408: mov dword ptr [rsp + 0x30], 0
486410: mov rdi, qword ptr [rsp + 0x10]
486415: mov rdx, r12
486418: mov rsi, r15
48641b: call 0x4852e0
486420: mov rcx, qword ptr [rsp + 8]
486425: lea r10, [rbx + rcx]
486429: mov rcx, r12
48642c: test eax, eax
48642e: js 0x4867a8
486434: mov rsi, qword ptr [rsp + 0x10]
486439: mov rdi, r10
48643c: mov rdx, r15
48643f: mov qword ptr [rsp + 0x10], r10
486444: call 0x486fc0
486449: mov r10, qword ptr [rsp + 0x10]
48644e: cmp r12, 0x1f
486452: jg 0x486778
486458: mov rdx, r10
48645b: mov rcx, r12
48645e: mov rsi, rbx
486461: mov rdi, rbp
486464: mov qword ptr [rsp + 0x10], r10
486469: call 0x486170
48646e: test r12, r12
486471: mov r10, qword ptr [rsp + 0x10]
486476: jle 0x4864f0
486478: mov rsi, qword ptr [rsp + 0x18]
48647d: mov rdi, qword ptr [rsp + 8]
486482: lea rax, [rsi + 0x10]
486486: cmp rdi, rax
486489: lea rax, [rdi + 0x10]
48648d: setge dl
486490: cmp rax, rsi
486493: setle al
486496: or dl, al
486498: je 0x486830
48649e: cmp r12, 4
4864a2: jle 0x486830
4864a8: test r12, r12
4864ab: mov ecx, 1
4864b0: cmovg rcx, r12
4864b4: xor eax, eax
4864b6: mov rdx, rcx
4864b9: shr rdx, 1
4864bc: shl rdx, 4
4864c0: movdqu xmm0, xmmword ptr [r14 + rax]
4864c6: movups xmmword ptr [r10 + rax], xmm0
4864cb: add rax, 0x10
4864cf: cmp rax, rdx
4864d2: jne 0x4864c0
4864d4: mov rax, rcx
4864d7: and rax, 0xfffffffffffffffe
4864db: and ecx, 1
4864de: je 0x4864f0
4864e0: lea rdx, [r13 + rax]
4864e5: add rax, r12
4864e8: mov rdx, qword ptr [rbx + rdx*8]
4864ec: mov qword ptr [rbx + rax*8], rdx
4864f0: lea rax, [r12 + r13]
4864f4: mov rcx, r12
4864f7: mov rsi, r14
4864fa: mov rdi, r14
4864fd: lea r11, [rbx + rax*8]
486501: mov qword ptr [rsp + 0x38], r10
486506: mov rdx, r11
486509: mov qword ptr [rsp + 0x30], r11
48650e: call 0x48b810
486513: mov r11, qword ptr [rsp + 0x30]
486518: mov r10, qword ptr [rsp + 0x38]
48651d: mov qword ptr [rsp + 0x10], rax
486522: mov eax, dword ptr [rsp + 0x20]
486526: test eax, eax
486528: je 0x486740
48652e: mov rsi, r10
486531: mov rdi, r10
486534: mov rcx, r13
486537: mov rdx, rbp
48653a: mov qword ptr [rsp + 0x30], r11
48653f: mov qword ptr [rsp + 0x20], r10
486544: call 0x486fc0
486549: mov rsi, qword ptr [rsp + 0x10]
48654e: mov r10, qword ptr [rsp + 0x20]
486553: mov r11, qword ptr [rsp + 0x30]
486558: sub rsi, rax
48655b: mov qword ptr [rsp + 0x10], rsi
486560: cmp r12, 0x1f
486564: jg 0x4866a8
48656a: mov rsi, qword ptr [rsp]
48656e: mov rdx, r15
486571: mov rcx, r12
486574: mov rdi, rbp
486577: mov qword ptr [rsp + 0x18], r11
48657c: mov qword ptr [rsp + 0x20], r10
486581: call 0x486170
486586: mov r10, qword ptr [rsp + 0x20]
48658b: mov rcx, r13
48658e: mov rdx, rbp
486591: mov rsi, r10
486594: mov rdi, r10
486597: mov qword ptr [rsp], r10
48659b: call 0x48b810
4865a0: mov r15, qword ptr [rsp + 0x10]
4865a5: mov r10, qword ptr [rsp]
4865a9: mov r11, qword ptr [rsp + 0x18]
4865ae: add r15, rax
4865b1: jne 0x4867f8
4865b7: test r12, r12
4865ba: jle 0x486618
4865bc: lea rax, [rbx + 0xf]
4865c0: sub rax, rbp
4865c3: cmp rax, 0x1e
4865c7: jbe 0x486810
4865cd: cmp r12, 4
4865d1: jle 0x486810
4865d7: test r12, r12
4865da: mov ecx, 1
4865df: cmovg rcx, r12
4865e3: xor eax, eax
4865e5: mov rdx, rcx
4865e8: shr rdx, 1
4865eb: shl rdx, 4
4865ef: nop 
4865f0: movdqu xmm1, xmmword ptr [rbp + rax]
4865f6: movups xmmword ptr [rbx + rax], xmm1
4865fa: add rax, 0x10
4865fe: cmp rax, rdx
486601: jne 0x4865f0
486603: mov rax, rcx
486606: and rax, 0xfffffffffffffffe
48660a: and ecx, 1
48660d: je 0x486618
48660f: mov rdx, qword ptr [rbp + rax*8]
486614: mov qword ptr [rbx + rax*8], rdx
486618: mov rdx, qword ptr [rsp + 8]
48661d: mov rcx, r12
486620: mov rsi, r10
486623: mov rdi, r10
486626: add rdx, rbp
486629: call 0x48b810
48662e: test rax, rax
486631: je 0x486366
486637: mov rax, qword ptr [r14]
48663a: add rax, 1
48663e: mov qword ptr [r14], rax
486641: jae 0x486366
486647: sub r13, 1
48664b: xor eax, eax
48664d: jmp 0x48666b
48664f: nop 
486650: mov rdi, qword ptr [r14 + rax*8 + 8]
486655: lea rdx, [rdi + 1]
486659: mov qword ptr [r14 + rax*8 + 8], rdx
48665e: add rax, 1
486662: test rdx, rdx
486665: jne 0x486366
48666b: cmp r13, rax
48666e: jne 0x486650
486670: jmp 0x486366
486675: nop dword ptr [rax]
486678: mov rsi, r10
48667b: mov rcx, r12
48667e: mov rdi, r14
486681: mov qword ptr [rsp + 0x20], r10
486686: call 0x486170
48668b: mov r10, qword ptr [rsp + 0x20]
486690: jmp 0x4863cd
486695: nop dword ptr [rax]
486698: mov rcx, r12
48669b: call 0x486170
4866a0: jmp 0x486325
4866a5: nop dword ptr [rax]
4866a8: mov r8, qword ptr [rsp + 0x18]
4866ad: mov rsi, qword ptr [rsp]
4866b1: mov rdx, r15
4866b4: mov rcx, r12
4866b7: mov rdi, rbp
4866ba: mov qword ptr [rsp + 0x20], r11
4866bf: add r8, rbp
4866c2: mov qword ptr [rsp + 0x30], r10
4866c7: call 0x4862e0
4866cc: mov r10, qword ptr [rsp + 0x30]
4866d1: mov rcx, r13
4866d4: mov rdx, rbp
4866d7: mov rsi, r10
4866da: mov rdi, r10
4866dd: mov qword ptr [rsp], r10
4866e1: call 0x48b810
4866e6: mov r15, qword ptr [rsp + 0x10]
4866eb: mov r10, qword ptr [rsp]
4866ef: mov r11, qword ptr [rsp + 0x20]
4866f4: add r15, rax
4866f7: je 0x4865bc
4866fd: add r15, qword ptr [r11]
486700: mov qword ptr [r11], r15
486703: jae 0x4865bc
486709: lea rcx, [r12 - 1]
48670e: xor eax, eax
486710: jmp 0x486733
486712: nop word ptr [rax + rax]
486718: mov rdi, qword ptr [r11 + rax*8 + 8]
48671d: lea rdx, [rdi + 1]
486721: mov qword ptr [r11 + rax*8 + 8], rdx
486726: add rax, 1
48672a: test rdx, rdx
48672d: jne 0x4865b7
486733: cmp rcx, rax
486736: jne 0x486718
486738: jmp 0x4865b7
48673d: nop dword ptr [rax]
486740: mov rsi, r10
486743: mov rdi, r10
486746: mov rcx, r13
486749: mov rdx, rbp
48674c: mov qword ptr [rsp + 0x30], r11
486751: mov qword ptr [rsp + 0x20], r10
486756: call 0x48b810
48675b: add rax, qword ptr [rsp + 0x10]
486760: mov r11, qword ptr [rsp + 0x30]
486765: mov qword ptr [rsp + 0x10], rax
48676a: mov r10, qword ptr [rsp + 0x20]
48676f: jmp 0x486560
486774: nop dword ptr [rax]
486778: mov rax, qword ptr [rsp + 0x18]
48677d: mov rdx, r10
486780: mov rcx, r12
486783: mov rsi, rbx
486786: mov rdi, rbp
486789: mov qword ptr [rsp + 0x10], r10
48678e: lea r8, [rbp + rax]
486793: call 0x4862e0
486798: mov r10, qword ptr [rsp + 0x10]
48679d: jmp 0x486478
4867a2: nop word ptr [rax + rax]
4867a8: mov rdx, qword ptr [rsp + 0x10]
4867ad: mov rdi, r10
4867b0: mov rsi, r15
4867b3: mov qword ptr [rsp + 0x10], r10
4867b8: call 0x486fc0
4867bd: mov eax, dword ptr [rsp + 0x30]
4867c1: mov r10, qword ptr [rsp + 0x10]
4867c6: mov dword ptr [rsp + 0x20], eax
4867ca: jmp 0x48644e
4867cf: nop 
4867d0: mov rsi, qword ptr [rsp]
4867d4: mov rdx, r10
4867d7: mov rdi, rbx
4867da: call 0x486fc0
4867df: mov dword ptr [rsp + 0x20], 0
4867e7: mov dword ptr [rsp + 0x30], 1
4867ef: jmp 0x486410
4867f4: nop dword ptr [rax]
4867f8: add r15, qword ptr [r11]
4867fb: mov qword ptr [r11], r15
4867fe: jae 0x4865b7
486804: jmp 0x486709
486809: nop dword ptr [rax]
486810: mov rax, qword ptr [rsp + 0x28]
486815: nop dword ptr [rax]
486818: mov rdx, qword ptr [rbp + rax*8]
48681d: mov qword ptr [rbx + rax*8], rdx
486821: add rax, 1
486825: cmp r12, rax
486828: jg 0x486818
48682a: jmp 0x486618
48682f: nop 
486830: xor eax, eax
486832: nop word ptr [rax + rax]
486838: mov rdx, qword ptr [r14 + rax*8]
48683c: mov qword ptr [r10 + rax*8], rdx
486840: add rax, 1
486844: cmp rax, r12
486847: jl 0x486838
486849: jmp 0x4864f0
48684e: nop 
486850: endbr64 
486854: push r15
486856: push r14
486858: mov r14, rdx
48685b: push r13
48685d: mov r13, rsi
486860: push r12
486862: push rbp
486863: push rbx
486864: mov rbx, rdi
486867: sub rsp, 8
48686b: mov rcx, qword ptr [rsi]
48686e: cmp rcx, 1
486872: ja 0x486918
486878: je 0x486928
48687e: test rdx, rdx
486881: jle 0x486892
486883: lea rdx, [rdx*8]
48688b: xor esi, esi
48688d: call 0x401110
486892: xor eax, eax
486894: mov qword ptr [rbx + r14*8], rax
486898: lea r15, [r14*8]
4868a0: add rbx, 8
4868a4: cmp r14, 1
4868a8: jle 0x4868f0
4868aa: lea rbp, [r13 + 8]
4868ae: lea r12, [r13 + r15]
4868b3: jmp 0x4868d0
4868b5: nop dword ptr [rax]
4868b8: mov eax, 0
4868bd: je 0x486900
4868bf: add rbp, 8
4868c3: mov qword ptr [rbx + r15], rax
4868c7: add rbx, 8
4868cb: cmp rbp, r12
4868ce: je 0x4868f0
4868d0: mov rcx, qword ptr [rbp]
4868d4: cmp rcx, 1
4868d8: jbe 0x4868b8
4868da: mov rdx, r14
4868dd: mov rsi, r13
4868e0: mov rdi, rbx
4868e3: call 0x48b8c0
4868e8: jmp 0x4868bf
4868ea: nop word ptr [rax + rax]
4868f0: add rsp, 8
4868f4: pop rbx
4868f5: pop rbp
4868f6: pop r12
4868f8: pop r13
4868fa: pop r14
4868fc: pop r15
4868fe: ret 
4868ff: nop 
486900: mov rcx, r14
486903: mov rdx, r13
486906: mov rsi, rbx
486909: mov rdi, rbx
48690c: call 0x48b810
486911: jmp 0x4868bf
486913: nop dword ptr [rax + rax]
486918: call 0x486050
48691d: jmp 0x486894
486922: nop word ptr [rax + rax]
486928: test rdx, rdx
48692b: jle 0x486892
486931: lea rax, [rsi + 0xf]
486935: sub rax, rdi
486938: cmp rax, 0x1e
48693c: jbe 0x48698b
48693e: lea rax, [rdx - 1]
486942: cmp rax, 3
486946: jbe 0x48698b
486948: shr rdx, 1
48694b: xor eax, eax
48694d: shl rdx, 4
486951: nop dword ptr [rax]
486958: movdqu xmm0, xmmword ptr [r13 + rax]
48695f: movups xmmword ptr [rbx + rax], xmm0
486963: add rax, 0x10
486967: cmp rax, rdx
48696a: jne 0x486958
48696c: mov rax, r14
48696f: and rax, 0xfffffffffffffffe
486973: test r14b, 1
486977: je 0x486892
48697d: mov rdx, qword ptr [r13 + rax*8]
486982: mov qword ptr [rbx + rax*8], rdx
486986: jmp 0x486892
48698b: xor eax, eax
48698d: nop dword ptr [rax]
486990: mov rdx, qword ptr [r13 + rax*8]
486995: mov qword ptr [rbx + rax*8], rdx
486999: add rax, 1
48699d: cmp r14, rax
4869a0: jne 0x486990
4869a2: jmp 0x486892
4869a7: nop word ptr [rax + rax]
4869b0: endbr64 
4869b4: push r15
4869b6: mov rax, rdx
4869b9: mov r15, rsi
4869bc: push r14
4869be: push r13
4869c0: mov r13, rcx
4869c3: push r12
4869c5: push rbp
4869c6: mov rbp, rdx
4869c9: push rbx
4869ca: mov rbx, rdi
4869cd: sub rsp, 0x38
4869d1: and eax, 1
4869d4: mov qword ptr [rsp + 0x10], rax
4869d9: je 0x486a50
4869db: lea r12, [rdx - 1]
4869df: cmp r12, 0x1f
4869e3: jle 0x486d08
4869e9: mov rdx, r12
4869ec: call 0x4869b0
4869f1: lea r13, [r12*8]
4869f9: mov rdx, r12
4869fc: mov rsi, r15
4869ff: lea r14, [r15 + r13]
486a03: add r13, rbx
486a06: mov rcx, qword ptr [r14]
486a09: mov rdi, r13
486a0c: call 0x48b8c0
486a11: mov rdx, rbp
486a14: mov rsi, r15
486a17: mov rdi, r13
486a1a: mov r8, rax
486a1d: mov rax, r12
486a20: add rbp, r12
486a23: shl rax, 4
486a27: mov qword ptr [rbx + rax], r8
486a2b: mov rcx, qword ptr [r14]
486a2e: call 0x48b8c0
486a33: mov qword ptr [rbx + rbp*8], rax
486a37: add rsp, 0x38
486a3b: pop rbx
486a3c: pop rbp
486a3d: pop r12
486a3f: pop r13
486a41: pop r14
486a43: pop r15
486a45: ret 
486a46: nop word ptr cs:[rax + rax]
486a50: mov r12, rdx
486a53: sar r12, 1
486a56: lea rax, [r12*8]
486a5e: mov qword ptr [rsp], rax
486a62: lea r9, [rsi + rax]
486a66: lea rax, [rdx*8]
486a6e: mov qword ptr [rsp + 8], rax
486a73: lea r14, [rdi + rax]
486a77: cmp r12, 0x1f
486a7b: jle 0x486ce8
486a81: mov rsi, r9
486a84: mov rdx, r12
486a87: mov rdi, r14
486a8a: mov qword ptr [rsp + 0x18], r9
486a8f: call 0x4869b0
486a94: mov r9, qword ptr [rsp + 0x18]
486a99: mov rdi, r9
486a9c: mov rdx, r12
486a9f: mov rsi, r15
486aa2: mov qword ptr [rsp + 0x18], r9
486aa7: call 0x4852e0
486aac: mov r9, qword ptr [rsp + 0x18]
486ab1: mov rcx, r12
486ab4: test eax, eax
486ab6: js 0x486e10
486abc: mov rdx, r15
486abf: mov rsi, r9
486ac2: mov rdi, rbx
486ac5: call 0x486fc0
486aca: cmp r12, 0x1f
486ace: jg 0x486df0
486ad4: mov rdx, r12
486ad7: mov rsi, rbx
486ada: mov rdi, r13
486add: call 0x486850
486ae2: test r12, r12
486ae5: jle 0x486d18
486aeb: mov rdi, qword ptr [rsp + 8]
486af0: mov rsi, qword ptr [rsp]
486af4: lea rax, [rdi + 0x10]
486af8: cmp rax, rsi
486afb: lea rax, [rsi + 0x10]
486aff: setle dl
486b02: cmp rax, rdi
486b05: setle al
486b08: or dl, al
486b0a: je 0x486e60
486b10: cmp r12, 4
486b14: jle 0x486e60
486b1a: test r12, r12
486b1d: mov ecx, 1
486b22: lea r9, [rbx + rsi]
486b26: cmovg rcx, r12
486b2a: xor eax, eax
486b2c: mov rdx, rcx
486b2f: shr rdx, 1
486b32: shl rdx, 4
486b36: nop word ptr cs:[rax + rax]
486b40: movdqu xmm0, xmmword ptr [r14 + rax]
486b46: movups xmmword ptr [r9 + rax], xmm0
486b4b: add rax, 0x10
486b4f: cmp rax, rdx
486b52: jne 0x486b40
486b54: mov rax, rcx
486b57: and rax, 0xfffffffffffffffe
486b5b: and ecx, 1
486b5e: je 0x486b70
486b60: lea rdx, [rbp + rax]
486b65: add rax, r12
486b68: mov rdx, qword ptr [rbx + rdx*8]
486b6c: mov qword ptr [rbx + rax*8], rdx
486b70: lea rax, [r12 + rbp]
486b74: mov rcx, r12
486b77: mov rsi, r14
486b7a: mov rdi, r14
486b7d: lea r11, [rbx + rax*8]
486b81: mov qword ptr [rsp + 0x20], r9
486b86: mov rdx, r11
486b89: mov qword ptr [rsp + 0x28], r11
486b8e: call 0x48b810
486b93: mov r9, qword ptr [rsp + 0x20]
486b98: mov rcx, rbp
486b9b: mov rdx, r13
486b9e: mov qword ptr [rsp + 0x18], rax
486ba3: mov rdi, r9
486ba6: mov rsi, r9
486ba9: call 0x486fc0
486bae: mov rdi, qword ptr [rsp + 0x18]
486bb3: mov r8, qword ptr [rsp + 0x20]
486bb8: mov r11, qword ptr [rsp + 0x28]
486bbd: sub rdi, rax
486bc0: cmp r12, 0x1f
486bc4: mov qword ptr [rsp + 0x18], rdi
486bc9: jle 0x486d70
486bcf: mov rcx, qword ptr [rsp + 8]
486bd4: mov rdx, r12
486bd7: mov rsi, r15
486bda: mov rdi, r13
486bdd: mov qword ptr [rsp + 0x20], r11
486be2: add rcx, r13
486be5: mov qword ptr [rsp + 0x28], r8
486bea: call 0x4869b0
486bef: mov r8, qword ptr [rsp + 0x28]
486bf4: mov rcx, rbp
486bf7: mov rdx, r13
486bfa: mov rsi, r8
486bfd: mov rdi, r8
486c00: mov qword ptr [rsp + 8], r8
486c05: call 0x48b810
486c0a: add rax, qword ptr [rsp + 0x18]
486c0f: mov r8, qword ptr [rsp + 8]
486c14: mov r11, qword ptr [rsp + 0x20]
486c19: jne 0x486e28
486c1f: lea rax, [rbx + 0xf]
486c23: sub rax, r13
486c26: cmp rax, 0x1e
486c2a: jbe 0x486e38
486c30: cmp r12, 4
486c34: jle 0x486e38
486c3a: test r12, r12
486c3d: mov ecx, 1
486c42: cmovg rcx, r12
486c46: xor eax, eax
486c48: mov rdx, rcx
486c4b: shr rdx, 1
486c4e: shl rdx, 4
486c52: nop word ptr [rax + rax]
486c58: movdqu xmm1, xmmword ptr [r13 + rax]
486c5f: movups xmmword ptr [rbx + rax], xmm1
486c63: add rax, 0x10
486c67: cmp rax, rdx
486c6a: jne 0x486c58
486c6c: mov rax, rcx
486c6f: and rax, 0xfffffffffffffffe
486c73: and ecx, 1
486c76: je 0x486c81
486c78: mov rdx, qword ptr [r13 + rax*8]
486c7d: mov qword ptr [rbx + rax*8], rdx
486c81: mov rdx, qword ptr [rsp]
486c85: mov rcx, r12
486c88: mov rsi, r8
486c8b: mov rdi, r8
486c8e: add rdx, r13
486c91: call 0x48b810
486c96: test rax, rax
486c99: je 0x486a37
486c9f: mov rax, qword ptr [r14]
486ca2: add rax, 1
486ca6: mov qword ptr [r14], rax
486ca9: jae 0x486a37
486caf: sub rbp, 1
486cb3: xor eax, eax
486cb5: jmp 0x486cdb
486cb7: nop word ptr [rax + rax]
486cc0: mov rdi, qword ptr [r14 + rax*8 + 8]
486cc5: lea rdx, [rdi + 1]
486cc9: mov qword ptr [r14 + rax*8 + 8], rdx
486cce: add rax, 1
486cd2: test rdx, rdx
486cd5: jne 0x486a37
486cdb: cmp rbp, rax
486cde: jne 0x486cc0
486ce0: jmp 0x486a37
486ce5: nop dword ptr [rax]
486ce8: mov rsi, r9
486ceb: mov rdx, r12
486cee: mov rdi, r14
486cf1: mov qword ptr [rsp + 0x18], r9
486cf6: call 0x486850
486cfb: mov r9, qword ptr [rsp + 0x18]
486d00: jmp 0x486a99
486d05: nop dword ptr [rax]
486d08: mov rdx, r12
486d0b: call 0x486850
486d10: jmp 0x4869f1
486d15: nop dword ptr [rax]
486d18: lea rax, [r12 + rbp]
486d1c: mov rcx, r12
486d1f: mov rsi, r14
486d22: mov rdi, r14
486d25: lea r11, [rbx + rax*8]
486d29: mov rdx, r11
486d2c: mov qword ptr [rsp + 0x28], r11
486d31: call 0x48b810
486d36: mov rdi, qword ptr [rsp]
486d3a: mov rcx, rbp
486d3d: mov rdx, r13
486d40: mov qword ptr [rsp + 8], rax
486d45: lea r8, [rbx + rdi]
486d49: mov rsi, r8
486d4c: mov rdi, r8
486d4f: mov qword ptr [rsp + 0x20], r8
486d54: call 0x486fc0
486d59: mov rsi, qword ptr [rsp + 8]
486d5e: mov r8, qword ptr [rsp + 0x20]
486d63: mov r11, qword ptr [rsp + 0x28]
486d68: sub rsi, rax
486d6b: mov qword ptr [rsp + 0x18], rsi
486d70: mov rdx, r12
486d73: mov rsi, r15
486d76: mov rdi, r13
486d79: mov qword ptr [rsp + 0x20], r11
486d7e: mov qword ptr [rsp + 8], r8
486d83: call 0x486850
486d88: mov r8, qword ptr [rsp + 8]
486d8d: mov rcx, rbp
486d90: mov rdx, r13
486d93: mov rsi, r8
486d96: mov rdi, r8
486d99: call 0x48b810
486d9e: add rax, qword ptr [rsp + 0x18]
486da3: mov r8, qword ptr [rsp + 8]
486da8: mov r11, qword ptr [rsp + 0x20]
486dad: je 0x486ddc
486daf: add rax, qword ptr [r11]
486db2: mov qword ptr [r11], rax
486db5: jae 0x486ddc
486db7: lea rcx, [r12 - 1]
486dbc: xor eax, eax
486dbe: jmp 0x486dd7
486dc0: mov rsi, qword ptr [r11 + rax*8 + 8]
486dc5: lea rdx, [rsi + 1]
486dc9: mov qword ptr [r11 + rax*8 + 8], rdx
486dce: add rax, 1
486dd2: test rdx, rdx
486dd5: jne 0x486ddc
486dd7: cmp rcx, rax
486dda: jne 0x486dc0
486ddc: test r12, r12
486ddf: jg 0x486c1f
486de5: jmp 0x486c81
486dea: nop word ptr [rax + rax]
486df0: mov rax, qword ptr [rsp + 8]
486df5: mov rdx, r12
486df8: mov rsi, rbx
486dfb: mov rdi, r13
486dfe: lea rcx, [r13 + rax]
486e03: call 0x4869b0
486e08: jmp 0x486aeb
486e0d: nop dword ptr [rax]
486e10: mov rdx, r9
486e13: mov rsi, r15
486e16: mov rdi, rbx
486e19: call 0x486fc0
486e1e: jmp 0x486aca
486e23: nop dword ptr [rax + rax]
486e28: add rax, qword ptr [r11]
486e2b: mov qword ptr [r11], rax
486e2e: jb 0x486db7
486e30: jmp 0x486c1f
486e35: nop dword ptr [rax]
486e38: mov rax, qword ptr [rsp + 0x10]
486e3d: nop dword ptr [rax]
486e40: mov rdx, qword ptr [r13 + rax*8]
486e45: mov qword ptr [rbx + rax*8], rdx
486e49: add rax, 1
486e4d: cmp r12, rax
486e50: jg 0x486e40
486e52: jmp 0x486c81
486e57: nop word ptr [rax + rax]
486e60: mov rax, qword ptr [rsp]
486e64: lea r9, [rbx + rax]
486e68: xor eax, eax
486e6a: nop word ptr [rax + rax]
486e70: mov rdx, qword ptr [r14 + rax*8]
486e74: mov qword ptr [r9 + rax*8], rdx
486e78: add rax, 1
486e7c: cmp r12, rax
486e7f: jg 0x486e70
486e81: jmp 0x486b70
486e86: nop word ptr cs:[rax + rax]
486e90: endbr64 
486e94: push rbp
486e95: mov r9, rcx
486e98: mov rbp, rsp
486e9b: sub rsp, 0x10
486e9f: mov rax, qword ptr fs:[0x28]
486ea8: mov qword ptr [rbp - 8], rax
486eac: xor eax, eax
486eae: cmp rsi, rdx
486eb1: je 0x486f40
486eb7: cmp rcx, 0x1f
486ebb: jle 0x486f20
486ebd: mov rax, rcx
486ec0: mov r10, rsp
486ec3: shl rax, 4
486ec7: add rax, 0x10
486ecb: mov rcx, rax
486ece: and rcx, 0xfffffffffffff000
486ed5: sub r10, rcx
486ed8: mov rcx, r10
486edb: cmp rsp, rcx
486ede: je 0x486ef5
486ee0: sub rsp, 0x1000
486ee7: or qword ptr [rsp + 0xff8], 0
486ef0: cmp rsp, rcx
486ef3: jne 0x486ee0
486ef5: and eax, 0xfff
486efa: sub rsp, rax
486efd: test rax, rax
486f00: je 0x486f08
486f02: or qword ptr [rsp + rax - 8], 0
486f08: lea r8, [rsp + 0xf]
486f0d: mov rcx, r9
486f10: and r8, 0xfffffffffffffff0
486f14: call 0x4862e0
486f19: jmp 0x486f25
486f1b: nop dword ptr [rax + rax]
486f20: call 0x486170
486f25: mov rax, qword ptr [rbp - 8]
486f29: xor rax, qword ptr fs:[0x28]
486f32: jne 0x486fb5
486f38: leave 
486f39: ret 
486f3a: nop word ptr [rax + rax]
486f40: cmp rcx, 0x1f
486f44: jle 0x486fa8
486f46: mov rax, rcx
486f49: mov rcx, rsp
486f4c: shl rax, 4
486f50: add rax, 0x10
486f54: mov rdx, rax
486f57: and rdx, 0xfffffffffffff000
486f5e: sub rcx, rdx
486f61: mov rdx, rcx
486f64: cmp rsp, rdx
486f67: je 0x486f7e
486f69: sub rsp, 0x1000
486f70: or qword ptr [rsp + 0xff8], 0
486f79: cmp rsp, rdx
486f7c: jne 0x486f69
486f7e: and eax, 0xfff
486f83: sub rsp, rax
486f86: test rax, rax
486f89: je 0x486f91
486f8b: or qword ptr [rsp + rax - 8], 0
486f91: lea rcx, [rsp + 0xf]
486f96: mov rdx, r9
486f99: and rcx, 0xfffffffffffffff0
486f9d: call 0x4869b0
486fa2: jmp 0x486f25
486fa4: nop dword ptr [rax]
486fa8: mov rdx, rcx
486fab: call 0x486850
486fb0: jmp 0x486f25
486fb5: call 0x4547a0
486fba: nop word ptr [rax + rax]
486fc0: endbr64 
486fc4: xor r8, r8
486fc7: mov r10, qword ptr [rsi]
486fca: mov r11, qword ptr [rdx]
486fcd: lea rsi, [rsi + rcx*8 - 8]
486fd2: lea rdx, [rdx + rcx*8 - 8]
486fd7: lea rdi, [rdi + rcx*8 - 0x10]
486fdc: mov eax, ecx
486fde: neg rcx
486fe1: and eax, 3
486fe4: je 0x486ff5
486fe6: add rcx, rax
486fe9: cmp eax, 2
486fec: jl 0x487004
486fee: je 0x487009
486ff0: shr r8, 1
486ff3: jmp 0x487044
486ff5: shr r8, 1
486ff8: mov r8, r10
486ffb: mov r9, r11
486ffe: lea rcx, [rcx + 4]
487002: jmp 0x487032
487004: shr r8, 1
487007: jmp 0x487065
487009: shr r8, 1
48700c: mov r8, r10
48700f: mov r9, r11
487012: jmp 0x487056
487014: sbb r10, r11
487017: mov qword ptr [rdi + 8], r10
48701b: mov eax, ecx
48701d: adc eax, eax
48701f: ret 
487020: mov r8, qword ptr [rsi + rcx*8 - 0x18]
487025: mov r9, qword ptr [rdx + rcx*8 - 0x18]
48702a: sbb r10, r11
48702d: mov qword ptr [rdi + rcx*8 - 0x18], r10
487032: mov r10, qword ptr [rsi + rcx*8 - 0x10]
487037: mov r11, qword ptr [rdx + rcx*8 - 0x10]
48703c: sbb r8, r9
48703f: mov qword ptr [rdi + rcx*8 - 0x10], r8
487044: mov r8, qword ptr [rsi + rcx*8 - 8]
487049: mov r9, qword ptr [rdx + rcx*8 - 8]
48704e: sbb r10, r11
487051: mov qword ptr [rdi + rcx*8 - 8], r10
487056: mov r10, qword ptr [rsi + rcx*8]
48705a: mov r11, qword ptr [rdx + rcx*8]
48705e: sbb r8, r9
487061: mov qword ptr [rdi + rcx*8], r8
487065: jrcxz 0x487014
487067: lea rcx, [rcx + 4]
48706b: jmp 0x487020
48706d: nop dword ptr [rax]
487070: endbr64 
487074: push rbx
487075: push rbp
487076: lea rbx, [rdx]
487079: neg rbx
48707c: mov rax, qword ptr [rsi]
48707f: mov r10, qword ptr [rdi]
487082: lea rdi, [rdi + rdx*8 - 0x10]
487087: lea rsi, [rsi + rdx*8]
48708b: mul rcx
48708e: bt ebx, 0
487092: jb 0x4870b8
487094: lea r11, [rax]
487097: mov rax, qword ptr [rsi + rbx*8 + 8]
48709c: lea rbp, [rdx]
48709f: mul rcx
4870a2: add rbx, 2
4870a6: jns 0x487138
4870ac: lea r8, [rax]
4870af: mov rax, qword ptr [rsi + rbx*8]
4870b3: lea r9, [rdx]
4870b6: jmp 0x487100
4870b8: add rbx, 1
4870bc: jns 0x487148
4870c2: lea r8, [rax]
4870c5: mov rax, qword ptr [rsi + rbx*8]
4870c9: lea r9, [rdx]
4870cc: mul rcx
4870cf: lea r11, [rax]
4870d2: mov rax, qword ptr [rsi + rbx*8 + 8]
4870d7: lea rbp, [rdx]
4870da: jmp 0x487121
4870dc: nop dword ptr [rax]
4870e0: mul rcx
4870e3: sub r10, r8
4870e6: lea r8, [rax]
4870e9: mov rax, qword ptr [rsi + rbx*8]
4870ed: adc r11, r9
4870f0: mov qword ptr [rdi + rbx*8 - 8], r10
4870f5: mov r10, qword ptr [rdi + rbx*8]
4870f9: lea r9, [rdx]
4870fc: adc rbp, 0
487100: mul rcx
487103: sub r10, r11
487106: lea r11, [rax]
487109: mov rax, qword ptr [rsi + rbx*8 + 8]
48710e: adc r8, rbp
487111: mov qword ptr [rdi + rbx*8], r10
487115: mov r10, qword ptr [rdi + rbx*8 + 8]
48711a: lea rbp, [rdx]
48711d: adc r9, 0
487121: add rbx, 2
487125: js 0x4870e0
487127: mul rcx
48712a: sub r10, r8
48712d: adc r11, r9
487130: mov qword ptr [rdi - 8], r10
487134: adc rbp, 0
487138: mov r10, qword ptr [rdi]
48713b: sub r10, r11
48713e: adc rax, rbp
487141: mov qword ptr [rdi], r10
487144: adc rdx, 0
487148: mov r10, qword ptr [rdi + 8]
48714c: sub r10, rax
48714f: mov qword ptr [rdi + 8], r10
487153: mov eax, ebx
487155: adc rax, rdx
487158: pop rbp
487159: pop rbx
48715a: ret 
48715b: nop dword ptr [rax + rax]
487160: endbr64 
487164: movq rsi, xmm0
487169: movq rax, xmm0
48716e: shr rsi, 0x3f
487172: mov dword ptr [rcx], esi
487174: movq rcx, xmm0
487179: movabs rsi, 0xfffffffffffff
487183: shr rcx, 0x34
487187: and rsi, rax
48718a: shr rax, 0x30
48718e: and ecx, 0x7ff
487194: sub ecx, 0x3ff
48719a: mov dword ptr [rdx], ecx
48719c: mov qword ptr [rdi], rsi
48719f: test eax, 0x7ff0
4871a4: jne 0x4871c0
4871a6: test rsi, rsi
4871a9: jne 0x4871d0
4871ab: mov dword ptr [rdx], 0
4871b1: mov eax, 1
4871b6: ret 
4871b7: nop word ptr [rax + rax]
4871c0: bts rsi, 0x34
4871c5: mov eax, 1
4871ca: mov qword ptr [rdi], rsi
4871cd: ret 
4871ce: nop 
4871d0: bsr rcx, rsi
4871d4: mov eax, 0xfffffc02
4871d9: xor rcx, 0x3f
4871dd: sub ecx, 0xb
4871e0: sub eax, ecx
4871e2: shl rsi, cl
4871e5: mov qword ptr [rdi], rsi
4871e8: mov dword ptr [rdx], eax
4871ea: mov eax, 1
4871ef: ret 
4871f0: endbr64 
4871f4: mov r8, rdi
4871f7: mov edi, dword ptr [rsp + 0x10]
4871fb: mov rsi, qword ptr [rsp + 8]
487200: mov dword ptr [rsp - 0x10], edi
487204: movzx eax, byte ptr [rsp - 0xf]
487209: mov qword ptr [rsp - 0x18], rsi
48720e: shr al, 7
487211: movzx eax, al
487214: mov dword ptr [rcx], eax
487216: movzx eax, word ptr [rsp - 0x10]
48721b: mov rcx, rdi
48721e: and eax, 0x7fff
487223: sub eax, 0x3fff
487228: mov dword ptr [rdx], eax
48722a: mov rax, rsi
48722d: mov qword ptr [r8], rsi
487230: and cx, 0x7fff
487235: jne 0x487250
487237: test rsi, rsi
48723a: jne 0x487268
48723c: mov dword ptr [rdx], 0
487242: mov eax, 1
487247: ret 
487248: nop dword ptr [rax + rax]
487250: test rsi, rsi
487253: jne 0x487242
487255: cmp cx, 0x7fff
48725a: jne 0x48723c
48725c: mov eax, 1
487261: ret 
487262: nop word ptr [rax + rax]
487268: btr rax, 0x3f
48726d: test rax, rax
487270: je 0x487290
487272: bsr rcx, rax
487276: xor rcx, 0x3f
48727a: shl rax, cl
48727d: mov qword ptr [r8], rax
487280: mov eax, 0xffffc002
487285: sub eax, ecx
487287: mov dword ptr [rdx], eax
487289: mov eax, 1
48728e: ret 
48728f: nop 
487290: movabs rax, 0x8000000000000000
48729a: mov qword ptr [r8], rax
48729d: mov eax, 1
4872a2: mov dword ptr [rdx], 0xffffc002
4872a8: ret 
4872a9: nop dword ptr [rax]
4872b0: endbr64 
4872b4: movaps xmmword ptr [rsp - 0x18], xmm0
4872b9: mov r8, rcx
4872bc: mov rcx, qword ptr [rsp - 0x10]
4872c1: movdqa xmm1, xmmword ptr [rsp - 0x18]
4872c7: mov rsi, qword ptr [rsp - 0x18]
4872cc: mov rax, rcx
4872cf: shr rax, 0x3f
4872d3: movq xmm0, rsi
4872d8: mov dword ptr [r8], eax
4872db: mov rax, rcx
4872de: mov ecx, ecx
4872e0: shr rax, 0x30
4872e4: and eax, 0x7fff
4872e9: sub eax, 0x3fff
4872ee: mov dword ptr [rdx], eax
4872f0: pextrw eax, xmm1, 6
4872f5: shl rax, 0x20
4872f9: or rax, rcx
4872fc: pextrw ecx, xmm1, 7
487301: movq xmm2, rax
487306: punpcklqdq xmm0, xmm2
48730a: movups xmmword ptr [rdi], xmm0
48730d: test cx, 0x7fff
487312: jne 0x487330
487314: test rsi, rsi
487317: jne 0x487340
487319: test rax, rax
48731c: jne 0x487380
48731e: mov dword ptr [rdx], 0
487324: mov eax, 2
487329: ret 
48732a: nop word ptr [rax + rax]
487330: bts rax, 0x30
487335: mov qword ptr [rdi + 8], rax
487339: mov eax, 2
48733e: ret 
48733f: nop 
487340: test rax, rax
487343: jne 0x487380
487345: bsr r8, rsi
487349: xor r8, 0x3f
48734d: mov r9d, r8d
487350: cmp r8d, 0xe
487354: jle 0x4873c0
487356: lea ecx, [r8 - 0xf]
48735a: shl rsi, cl
48735d: mov qword ptr [rsp - 0x18], rsi
487362: movq xmm0, rax
487367: mov eax, 0xffffbfd1
48736c: sub eax, r9d
48736f: movhps xmm0, qword ptr [rsp - 0x18]
487374: movups xmmword ptr [rdi], xmm0
487377: mov dword ptr [rdx], eax
487379: mov eax, 2
48737e: ret 
48737f: nop 
487380: bsr r8, rax
487384: mov ecx, 0x40
487389: mov r9, rsi
48738c: xor r8, 0x3f
487390: sub r8d, 0xf
487394: sub ecx, r8d
487397: shr r9, cl
48739a: mov ecx, r8d
48739d: shl rax, cl
4873a0: shl rsi, cl
4873a3: or rax, r9
4873a6: mov qword ptr [rdi], rsi
4873a9: mov qword ptr [rdi + 8], rax
4873ad: mov eax, 0xffffc002
4873b2: sub eax, r8d
4873b5: mov dword ptr [rdx], eax
4873b7: mov eax, 2
4873bc: ret 
4873bd: nop dword ptr [rax]
4873c0: mov ecx, 0xf
4873c5: mov rax, rsi
4873c8: sub ecx, r8d
4873cb: shr rax, cl
4873ce: lea ecx, [r8 + 0x31]
4873d2: mov qword ptr [rsp - 0x18], rax
4873d7: mov rax, rsi
4873da: shl rax, cl
4873dd: jmp 0x487362
4873df: nop 
4873e0: endbr64 
4873e4: cmp qword ptr [rip + 0x38b3c], 0
4873ec: je 0x487420
4873ee: sub rsp, 8
4873f2: lea rsi, [rip + 0x2b7]
4873f9: lea rdi, [rip + 0x3bbc4]
487400: call 0
487405: test eax, eax
487407: je 0x487417
487409: lea rax, [rip + 0x3bbd0]
487410: mov qword ptr [rip + 0x3bbb1], rax
487417: add rsp, 8
48741b: ret 
48741c: nop dword ptr [rax]
487420: lea rax, [rip + 0x3bbb9]
487427: mov qword ptr [rip + 0x3bb9a], rax
48742e: ret 
48742f: nop 
487430: endbr64 
487434: push rbp
487435: push rbx
487436: sub rsp, 0x18
48743a: mov rax, qword ptr fs:[0x28]
487443: mov qword ptr [rsp + 8], rax
487448: xor eax, eax
48744a: cmp qword ptr [rip + 0x38aae], 0
487452: mov qword ptr [rsp], 0
48745a: je 0x487580
487460: lea rsi, [rip - 0x87]
487467: lea rdi, [rip + 0x3bb52]
48746e: call 0
487473: mov rbx, qword ptr [rip + 0x3bb4e]
48747a: test rbx, rbx
48747d: je 0x4875dd
487483: mov eax, dword ptr [rbx + 4]
487486: mov r8, qword ptr [rbx + 0x18]
48748a: test eax, eax
48748c: je 0x4874e0
48748e: test r8, r8
487491: je 0x4874b9
487493: mov ecx, 0xe
487498: lea rdi, [rip + 0x289f1]
48749f: mov rsi, r8
4874a2: repe cmpsb byte ptr [rsi], byte ptr [rdi]
4874a4: seta al
4874a7: sbb al, 0
4874a9: test al, al
4874ab: jne 0x487688
4874b1: mov qword ptr [rbx + 0x18], 0
4874b9: mov rax, qword ptr [rsp]
4874bd: mov rsi, qword ptr [rsp + 8]
4874c2: xor rsi, qword ptr fs:[0x28]
4874cb: jne 0x4876a5
4874d1: add rsp, 0x18
4874d5: pop rbx
4874d6: pop rbp
4874d7: ret 
4874d8: nop dword ptr [rax + rax]
4874e0: test r8, r8
4874e3: je 0x4874b9
4874e5: mov edi, dword ptr [rbx]
4874e7: mov qword ptr [rsp], r8
4874eb: test edi, edi
4874ed: je 0x487610
4874f3: call 0x487b30
4874f8: mov rsi, qword ptr [rbx + 0x18]
4874fc: mov edx, 5
487501: lea rdi, [rip + 0x21a14]
487508: mov rbp, rax
48750b: call 0x4032f0
487510: mov rdx, qword ptr [rbx + 0x10]
487514: mov rdi, rsp
487517: mov r9, rbp
48751a: mov r8, rax
48751d: lea rcx, [rip + 0x244f1]
487524: lea rax, [rip + 0xdda2]
48752b: cmp byte ptr [rdx], 0
48752e: lea rsi, [rip + 0x28969]
487535: cmovne rcx, rax
487539: xor eax, eax
48753b: call 0x410da0
487540: cmp eax, -1
487543: je 0x48765a
487549: mov r8, qword ptr [rbx + 0x18]
48754d: mov ecx, 0xe
487552: lea rdi, [rip + 0x28937]
487559: mov rsi, r8
48755c: repe cmpsb byte ptr [rsi], byte ptr [rdi]
48755e: seta al
487561: sbb al, 0
487563: test al, al
487565: jne 0x487698
48756b: mov rax, qword ptr [rsp]
48756f: mov qword ptr [rbx + 0x18], rax
487573: mov dword ptr [rbx + 4], 1
48757a: jmp 0x4874bd
48757f: nop 
487580: mov edx, dword ptr [rip + 0x3ba3a]
487586: mov rbx, qword ptr [rip + 0x3ba3b]
48758d: test edx, edx
48758f: jne 0x48747a
487595: cmp qword ptr [rip + 0x3898b], 0
48759d: je 0x48766e
4875a3: lea rsi, [rip + 0x106]
4875aa: lea rdi, [rip + 0x3ba13]
4875b1: call 0
4875b6: test eax, eax
4875b8: jne 0x487668
4875be: mov rbx, qword ptr [rip + 0x3ba03]
4875c5: mov edx, dword ptr [rip + 0x3b9f5]
4875cb: or edx, 2
4875ce: mov dword ptr [rip + 0x3b9ec], edx
4875d4: test rbx, rbx
4875d7: jne 0x487483
4875dd: cmp qword ptr [rip + 0x38993], 0
4875e5: je 0x4875fe
4875e7: mov edi, dword ptr [rip + 0x3b9d7]
4875ed: call 0
4875f2: mov rbx, rax
4875f5: test rax, rax
4875f8: jne 0x487483
4875fe: lea rbx, [rip + 0x3b9db]
487605: jmp 0x487483
48760a: nop word ptr [rax + rax]
487610: mov rsi, r8
487613: mov edx, 5
487618: lea rdi, [rip + 0x218fd]
48761f: call 0x4032f0
487624: mov rdx, qword ptr [rbx + 0x10]
487628: mov rdi, rsp
48762b: lea rcx, [rip + 0x243e3]
487632: mov r8, rax
487635: lea rax, [rip + 0xdc91]
48763c: lea rsi, [rip + 0x2355b]
487643: cmp byte ptr [rdx], 0
487646: cmovne rcx, rax
48764a: xor eax, eax
48764c: call 0x410da0
487651: cmp eax, -1
487654: jne 0x487549
48765a: mov rax, qword ptr [rsp]
48765e: jmp 0x487573
487663: nop dword ptr [rax + rax]
487668: mov edx, dword ptr [rip + 0x3b952]
48766e: lea rbx, [rip + 0x3b96b]
487675: mov qword ptr [rip + 0x3b94c], rbx
48767c: jmp 0x4875cb
487681: nop dword ptr [rax]
487688: mov rdi, r8
48768b: call 0x426a00
487690: jmp 0x4874b1
487695: nop dword ptr [rax]
487698: mov rdi, r8
48769b: call 0x426a00
4876a0: jmp 0x48756b
4876a5: call 0x4547a0
4876aa: nop word ptr [rax + rax]
4876b0: endbr64 
4876b4: push rbp
4876b5: mov r8, qword ptr [rdi + 0x18]
4876b9: mov rbp, rdi
4876bc: test r8, r8
4876bf: je 0x4876db
4876c1: mov ecx, 0xe
4876c6: lea rdi, [rip + 0x287c3]
4876cd: mov rsi, r8
4876d0: repe cmpsb byte ptr [rsi], byte ptr [rdi]
4876d2: seta al
4876d5: sbb al, 0
4876d7: test al, al
4876d9: jne 0x487700
4876db: mov rdi, rbp
4876de: call 0x426a00
4876e3: cmp qword ptr [rip + 0x388e5], 0
4876eb: je 0x487710
4876ed: mov edi, dword ptr [rip + 0x3b8d1]
4876f3: xor esi, esi
4876f5: pop rbp
4876f6: jmp 0
4876fb: nop dword ptr [rax + rax]
487700: mov rdi, r8
487703: call 0x426a00
487708: jmp 0x4876db
48770a: nop word ptr [rax + rax]
487710: pop rbp
487711: ret 
487712: nop word ptr cs:[rax + rax]
48771d: nop dword ptr [rax]
487720: endbr64 
487724: cmp qword ptr [rip + 0x387d4], 0
48772c: push r12
48772e: mov r12, rdi
487731: push rbp
487732: mov rbp, rsi
487735: push rbx
487736: je 0x4877b0
487738: lea rsi, [rip - 0x35f]
48773f: lea rdi, [rip + 0x3b87a]
487746: call 0
48774b: mov rbx, qword ptr [rip + 0x3b876]
487752: test rbx, rbx
487755: je 0x487805
48775b: mov rdi, qword ptr [rbx + 0x18]
48775f: test rdi, rdi
487762: je 0x487772
487764: cmp byte ptr [rbx + 8], 0
487768: jne 0x4877a8
48776a: mov qword ptr [rbx + 0x18], 0
487772: lea rdx, [rbx + 8]
487776: lea rsi, [rbx + 0x18]
48777a: mov r8, rbp
48777d: mov rcx, r12
487780: lea rdi, [rbx + 0x10]
487784: call 0x4851e0
487789: xor edx, edx
48778b: mov dword ptr [rbx], eax
48778d: mov rax, qword ptr [rbx + 0x18]
487791: test rax, rax
487794: sete dl
487797: setne al
48779a: mov dword ptr [rbx + 4], edx
48779d: movzx eax, al
4877a0: pop rbx
4877a1: pop rbp
4877a2: pop r12
4877a4: ret 
4877a5: nop dword ptr [rax]
4877a8: call 0x426a00
4877ad: jmp 0x48776a
4877af: nop 
4877b0: mov edx, dword ptr [rip + 0x3b80a]
4877b6: mov rbx, qword ptr [rip + 0x3b80b]
4877bd: test edx, edx
4877bf: jne 0x487752
4877c1: cmp qword ptr [rip + 0x3875f], 0
4877c9: je 0x487866
4877cf: lea rsi, [rip - 0x126]
4877d6: lea rdi, [rip + 0x3b7e7]
4877dd: call 0
4877e2: test eax, eax
4877e4: jne 0x487860
4877e6: mov rbx, qword ptr [rip + 0x3b7db]
4877ed: mov edx, dword ptr [rip + 0x3b7cd]
4877f3: or edx, 2
4877f6: mov dword ptr [rip + 0x3b7c4], edx
4877fc: test rbx, rbx
4877ff: jne 0x48775b
487805: cmp qword ptr [rip + 0x3876b], 0
48780d: je 0x487826
48780f: mov edi, dword ptr [rip + 0x3b7af]
487815: call 0
48781a: mov rbx, rax
48781d: test rax, rax
487820: jne 0x48775b
487826: mov esi, 0x20
48782b: mov edi, 1
487830: call 0x427d10
487835: mov rbx, rax
487838: test rax, rax
48783b: je 0x487879
48783d: cmp qword ptr [rip + 0x3878b], 0
487845: je 0x48775b
48784b: mov edi, dword ptr [rip + 0x3b773]
487851: mov rsi, rax
487854: call 0
487859: jmp 0x48775b
48785e: nop 
487860: mov edx, dword ptr [rip + 0x3b75a]
487866: lea rbx, [rip + 0x3b773]
48786d: mov qword ptr [rip + 0x3b754], rbx
487874: jmp 0x4877f3
487879: lea rbx, [rip + 0x3b760]
487880: jmp 0x48775b
487885: nop word ptr cs:[rax + rax]
487890: endbr64 
487894: sub rsp, 8
487898: lea rsi, [rip + 0x2860a]
48789f: call 0x484cf0
4878a4: test rax, rax
4878a7: je 0x4878b3
4878a9: lea rdx, [rip + 0x3a1f0]
4878b0: mov qword ptr [rax], rdx
4878b3: add rsp, 8
4878b7: ret 
4878b8: nop dword ptr [rax + rax]
4878c0: endbr64 
4878c4: xor ecx, ecx
4878c6: xor edx, edx
4878c8: jmp 0x48b460
4878cd: nop dword ptr [rax]
4878d0: endbr64 
4878d4: cmp ecx, 1
4878d7: je 0x4878f0
4878d9: cmp ecx, 2
4878dc: mov ecx, 0
4878e1: je 0x4878e5
4878e3: xor edx, edx
4878e5: jmp 0x48b460
4878ea: nop word ptr [rax + rax]
4878f0: mov rcx, rdx
4878f3: xor edx, edx
4878f5: jmp 0x4878e5
4878f7: nop word ptr [rax + rax]
487900: endbr64 
487904: push rbx
487905: mov rbx, rdi
487908: mov rdi, qword ptr [rdi]
48790b: cmp dword ptr [rbx + 8], 0xa
48790f: ja 0x4879b5
487915: mov eax, dword ptr [rbx + 8]
487918: lea rdx, [rip + 0x285b1]
48791f: movsxd rax, dword ptr [rdx + rax*4]
487923: add rax, rdx
487926: notrack jmp rax
487929: nop dword ptr [rax]
487930: mov rax, qword ptr [rbx + 0x10]
487934: mov rdx, qword ptr [rdi + 0x30]
487938: mov qword ptr [rax], rdx
48793b: pop rbx
48793c: ret 
48793d: nop dword ptr [rax]
487940: mov rax, qword ptr [rbx + 0x10]
487944: mov qword ptr [rax], rdi
487947: pop rbx
487948: ret 
487949: nop dword ptr [rax]
487950: mov rsi, qword ptr [rbx + 0x10]
487954: xor edx, edx
487956: pop rbx
487957: jmp 0x47c3f0
48795c: nop dword ptr [rax]
487960: mov rsi, qword ptr [rbx + 0x10]
487964: mov edx, 1
487969: pop rbx
48796a: jmp 0x47c3f0
48796f: nop 
487970: mov rsi, qword ptr [rdi + 0x348]
487977: mov rdi, qword ptr [rbx + 0x10]
48797b: pop rbx
48797c: jmp 0x401020
487981: nop dword ptr [rax]
487988: mov rax, qword ptr [rbx + 0x10]
48798c: mov qword ptr [rax], 0
487993: mov rdx, qword ptr [rdi + 0x458]
48799a: mov qword ptr [rax], rdx
48799d: pop rbx
48799e: ret 
48799f: nop 
4879a0: xor eax, eax
4879a2: cmp qword ptr [rdi + 0x458], 0
4879aa: jne 0x4879d0
4879ac: mov rdx, qword ptr [rbx + 0x10]
4879b0: mov qword ptr [rdx], rax
4879b3: pop rbx
4879b4: ret 
4879b5: lea rcx, [rip + 0x284f9]
4879bc: xor edx, edx
4879be: xor esi, esi
4879c0: xor edi, edi
4879c2: call 0x485060
4879c7: nop word ptr [rax + rax]
4879d0: call 0x4824b0
4879d5: jmp 0x4879ac
4879d7: nop word ptr [rax + rax]
4879e0: endbr64 
4879e4: sub rsp, 0x28
4879e8: mov rax, qword ptr fs:[0x28]
4879f1: mov qword ptr [rsp + 0x18], rax
4879f6: xor eax, eax
4879f8: mov qword ptr [rsp], rdi
4879fc: lea rdi, [rip - 0x103]
487a03: mov dword ptr [rsp + 8], esi
487a07: mov rsi, rsp
487a0a: mov qword ptr [rsp + 0x10], rdx
487a0f: call 0x487720
487a14: test eax, eax
487a16: setne al
487a19: movzx eax, al
487a1c: neg eax
487a1e: mov rcx, qword ptr [rsp + 0x18]
487a23: xor rcx, qword ptr fs:[0x28]
487a2c: jne 0x487a33
487a2e: add rsp, 0x28
487a32: ret 
487a33: call 0x4547a0
487a38: nop dword ptr [rax + rax]
487a40: endbr64 
487a44: push rbx
487a45: cmp qword ptr [rdi], 0
487a49: jne 0x487a94
487a4b: mov rdx, qword ptr [rdi + 0x20]
487a4f: mov esi, dword ptr [rdi + 0x10]
487a52: mov rbx, rdi
487a55: lea rax, [rip + 0x23fb9]
487a5c: mov rdi, qword ptr [rdi + 8]
487a60: mov r9, qword ptr [rip + 0x3be39]
487a67: or esi, 0x80000000
487a6d: mov r8d, dword ptr [rip + 0x3be24]
487a74: test rdi, rdi
487a77: cmove rdi, rax
487a7b: sub rsp, 8
487a7f: push qword ptr [rip + 0x3b253]
487a85: xor ecx, ecx
487a87: call 0x4888a0
487a8c: mov qword ptr [rbx + 0x18], rax
487a90: pop rax
487a91: pop rdx
487a92: pop rbx
487a93: ret 
487a94: lea rcx, [rip + 0x28461]
487a9b: xor edx, edx
487a9d: xor esi, esi
487a9f: mov edi, 0x16
487aa4: call 0x485060
487aa9: nop dword ptr [rax]
487ab0: endbr64 
487ab4: sub rsp, 0x38
487ab8: mov rax, qword ptr fs:[0x28]
487ac1: mov qword ptr [rsp + 0x28], rax
487ac6: xor eax, eax
487ac8: mov qword ptr [rsp], rdi
487acc: lea rdi, [rip - 0x93]
487ad3: mov qword ptr [rsp + 8], rsi
487ad8: mov rsi, rsp
487adb: mov dword ptr [rsp + 0x10], edx
487adf: mov qword ptr [rsp + 0x20], rcx
487ae4: call 0x487720
487ae9: mov r8d, eax
487aec: xor eax, eax
487aee: test r8d, r8d
487af1: jne 0x487b0c
487af3: mov rdi, qword ptr [rsp + 0x18]
487af8: call 0x484dc0
487afd: mov rdi, qword ptr [rsp + 0x18]
487b02: call 0x487890
487b07: mov rax, qword ptr [rsp + 0x18]
487b0c: mov rdx, qword ptr [rsp + 0x28]
487b11: xor rdx, qword ptr fs:[0x28]
487b1a: jne 0x487b21
487b1c: add rsp, 0x38
487b20: ret 
487b21: call 0x4547a0
487b26: nop word ptr cs:[rax + rax]
487b30: endbr64 
487b34: push r12
487b36: xor edx, edx
487b38: xor esi, esi
487b3a: push rbp
487b3b: mov ebp, edi
487b3d: push rbx
487b3e: call 0x429060
487b43: test rax, rax
487b46: je 0x487b50
487b48: pop rbx
487b49: pop rbp
487b4a: pop r12
487b4c: ret 
487b4d: nop dword ptr [rax]
487b50: mov rbx, 0xffffffffffffffc0
487b57: mov rsi, qword ptr [rip + 0x3be1a]
487b5e: mov r12d, dword ptr fs:[rbx]
487b62: test rsi, rsi
487b65: je 0x487b80
487b67: pop rbx
487b68: mov edi, ebp
487b6a: mov edx, 0x400
487b6f: pop rbp
487b70: pop r12
487b72: jmp 0x429060
487b77: nop word ptr [rax + rax]
487b80: mov edi, 0x400
487b85: call 0x426410
487b8a: mov qword ptr [rip + 0x3bde7], rax
487b91: mov rsi, rax
487b94: mov dword ptr fs:[rbx], r12d
487b98: test rax, rax
487b9b: jne 0x487b67
487b9d: pop rbx
487b9e: mov edx, 5
487ba3: lea rsi, [rip + 0x28364]
487baa: pop rbp
487bab: lea rdi, [rip + 0x2136a]
487bb2: pop r12
487bb4: jmp 0x4032f0
487bb9: nop dword ptr [rax]
487bc0: endbr64 
487bc4: test byte ptr [rip + 0x3b15f], 0x10
487bcb: lea rdx, [rip + 0x11e]
487bd2: lea rax, [rip + 0x67]
487bd9: cmovne rax, rdx
487bdd: ret 
487bde: nop 
487be0: endbr64 
487be4: push r12
487be6: push rbx
487be7: sub rsp, 8
487beb: mov r12, qword ptr [rdi]
487bee: test r12, r12
487bf1: je 0x487c10
487bf3: mov rbx, rdi
487bf6: mov rdi, r12
487bf9: call 0x401160
487bfe: add rax, r12
487c01: cmp byte ptr [rax], 0
487c04: je 0x487c20
487c06: mov byte ptr [rax], 0
487c09: add rax, 1
487c0d: mov qword ptr [rbx], rax
487c10: add rsp, 8
487c14: mov rax, r12
487c17: pop rbx
487c18: pop r12
487c1a: ret 
487c1b: nop dword ptr [rax + rax]
487c20: mov qword ptr [rbx], 0
487c27: add rsp, 8
487c2b: mov rax, r12
487c2e: pop rbx
487c2f: pop r12
487c31: ret 
487c32: nop word ptr cs:[rax + rax]
487c3c: nop dword ptr [rax]
487c40: endbr64 
487c44: mov rdx, rdi
487c47: mov r8, rdi
487c4a: sub rsp, 0x100
487c51: mov ecx, 0x20
487c56: mov rdi, rsp
487c59: xor eax, eax
487c5b: cld 
487c5c: rep stosq qword ptr [rdi], rax
487c5f: mov rax, rsi
487c62: nop word ptr cs:[rax + rax]
487c6d: nop dword ptr [rax]
487c70: mov cl, byte ptr [rax]
487c72: test cl, cl
487c74: je 0x487c9e
487c76: mov byte ptr [rsp + rcx], cl
487c79: mov cl, byte ptr [rax + 1]
487c7c: test cl, 0xff
487c7f: je 0x487c9e
487c81: mov byte ptr [rsp + rcx], cl
487c84: mov cl, byte ptr [rax + 2]
487c87: test cl, 0xff
487c8a: je 0x487c9e
487c8c: mov byte ptr [rsp + rcx], cl
487c8f: mov cl, byte ptr [rax + 3]
487c92: add rax, 4
487c96: mov byte ptr [rsp + rcx], cl
487c99: test cl, 0xff
487c9c: jne 0x487c70
487c9e: lea rax, [rdx - 4]
487ca2: nop word ptr cs:[rax + rax]
487cad: nop dword ptr [rax]
487cb0: add rax, 4
487cb4: mov cl, byte ptr [rax]
487cb6: test byte ptr [rsp + rcx], cl
487cb9: je 0x487cdc
487cbb: mov cl, byte ptr [rax + 1]
487cbe: test byte ptr [rsp + rcx], cl
487cc1: je 0x487cd9
487cc3: mov cl, byte ptr [rax + 2]
487cc6: test byte ptr [rsp + rcx], cl
487cc9: je 0x487cd6
487ccb: mov cl, byte ptr [rax + 3]
487cce: test byte ptr [rsp + rcx], cl
487cd1: jne 0x487cb0
487cd3: inc rax
487cd6: inc rax
487cd9: inc rax
487cdc: add rsp, 0x100
487ce3: sub rax, rdx
487ce6: ret 
487ce7: nop word ptr [rax + rax]
487cf0: endbr64 
487cf4: cmp byte ptr [rsi], 0
487cf7: je 0x487dc8
487cfd: mov edx, esi
487cff: and edx, 0xf
487d02: jne 0x487d68
487d04: movdqa xmm0, xmmword ptr [rsi]
487d08: pcmpistri xmm0, xmm0, 0x3a
487d0e: cmp ecx, 0x10
487d11: je 0x487e10
487d17: mov esi, edi
487d19: and esi, 0xf
487d1c: je 0x487dd0
487d22: mov r8, rdi
487d25: movsxd rax, esi
487d28: lea rdx, [rip + 0x107d1]
487d2f: and r8, 0xfffffffffffffff0
487d33: movdqu xmm1, xmmword ptr [rdx + rax]
487d38: mov edx, 0x10
487d3d: movdqa xmm2, xmmword ptr [r8]
487d42: pshufb xmm2, xmm1
487d47: pcmpistri xmm0, xmm2, 0x12
487d4d: sub edx, esi
487d4f: movsxd rax, ecx
487d52: cmp edx, eax
487d54: jg 0x487d64
487d56: pcmpistri xmm2, xmm2, 0x3a
487d5c: cmp edx, ecx
487d5e: jle 0x487e00
487d64: ret 
487d65: nop dword ptr [rax]
487d68: mov r8, rsi
487d6b: movsxd rax, edx
487d6e: lea rcx, [rip + 0x1078b]
487d75: and r8, 0xfffffffffffffff0
487d79: movdqu xmm0, xmmword ptr [rcx + rax]
487d7e: mov eax, 0x10
487d83: movdqa xmm3, xmmword ptr [r8]
487d88: pshufb xmm3, xmm0
487d8d: pcmpistri xmm3, xmm3, 0x3a
487d93: sub eax, edx
487d95: movdqa xmm0, xmm3
487d99: cmp eax, ecx
487d9b: jne 0x487d17
487da1: movdqa xmm1, xmmword ptr [r8 + 0x10]
487da7: pcmpistri xmm1, xmm1, 0x3a
487dad: add eax, ecx
487daf: cmp eax, 0x10
487db2: jg 0x487e1a
487db4: test ecx, ecx
487db6: je 0x487d17
487dbc: movdqu xmm0, xmmword ptr [rsi]
487dc0: jmp 0x487d17
487dc5: nop dword ptr [rax]
487dc8: xor eax, eax
487dca: ret 
487dcb: nop dword ptr [rax + rax]
487dd0: mov rax, rdi
487dd3: pcmpistri xmm0, xmmword ptr [rax], 0x12
487dd9: jb 0x487dec
487ddb: nop dword ptr [rax + rax]
487de0: add rax, 0x10
487de4: pcmpistri xmm0, xmmword ptr [rax], 0x12
487dea: jae 0x487de0
487dec: movsxd rcx, ecx
487def: add rax, rcx
487df2: sub rax, rdi
487df5: ret 
487df6: nop word ptr cs:[rax + rax]
487e00: lea rax, [r8 + 0x10]
487e04: jmp 0x487dd3
487e06: nop word ptr cs:[rax + rax]
487e10: cmp byte ptr [rsi + 0x10], 0
487e14: je 0x487d17
487e1a: jmp 0x487c40
487e1f: nop 
487e20: endbr64 
487e24: cmp rdx, 0x7fffffff
487e2b: mov eax, 0x7fffffff
487e30: cmova rdx, rax
487e34: mov eax, 0xd9
487e39: syscall 
487e3b: cmp rax, -0x1000
487e41: ja 0x487e48
487e43: ret 
487e44: nop dword ptr [rax]
487e48: mov rdx, 0xffffffffffffffc0
487e4f: neg eax
487e51: mov dword ptr fs:[rdx], eax
487e54: mov rax, 0xffffffffffffffff
487e5b: ret 
487e5c: nop dword ptr [rax]
487e60: endbr64 
487e64: mov eax, 0x27
487e69: syscall 
487e6b: ret 
487e6c: nop dword ptr [rax]
487e70: endbr64 
487e74: mov r10, rcx
487e77: mov eax, 0x11
487e7c: syscall 
487e7e: cmp rax, -0x1000
487e84: ja 0x487e90
487e86: ret 
487e87: nop word ptr [rax + rax]
487e90: mov rdx, 0xffffffffffffffc0
487e97: neg eax
487e99: mov dword ptr fs:[rdx], eax
487e9c: mov rax, 0xffffffffffffffff
487ea3: ret 
487ea4: nop word ptr cs:[rax + rax]
487eae: nop 
487eb0: endbr64 
487eb4: mov rdx, qword ptr [rdx + 0xa8]
487ebb: sub rdx, qword ptr [rip + 0x3b206]
487ec2: mov rcx, rdx
487ec5: mov eax, dword ptr [rip + 0x3b1f5]
487ecb: shr rdx, 0x11
487ecf: shr rcx, 1
487ed2: movzx ecx, cx
487ed5: imul rdx, rax
487ed9: imul rcx, rax
487edd: shr rcx, 0x10
487ee1: lea rax, [rdx + rcx]
487ee5: cmp rax, qword ptr [rip + 0x3b1e4]
487eec: jae 0x487efa
487eee: mov rdx, qword ptr [rip + 0x3b1e3]
487ef5: add word ptr [rdx + rax*2], 1
487efa: ret 
487efb: nop dword ptr [rax + rax]
487f00: endbr64 
487f04: push r13
487f06: push r12
487f08: mov r12, rdx
487f0b: push rbp
487f0c: push rbx
487f0d: sub rsp, 0xc8
487f14: mov rdx, qword ptr [rip + 0x3b1bd]
487f1b: mov rax, qword ptr fs:[0x28]
487f24: mov qword ptr [rsp + 0xb8], rax
487f2c: xor eax, eax
487f2e: test rdi, rdi
487f31: je 0x488068
487f37: mov rbp, rdi
487f3a: mov rbx, rsi
487f3d: mov r13d, ecx
487f40: test rdx, rdx
487f43: je 0x487f7b
487f45: xor edx, edx
487f47: lea rsi, [rip + 0x3b152]
487f4e: mov edi, 2
487f53: call 0x48bc90
487f58: test eax, eax
487f5a: js 0x4880a4
487f60: xor edx, edx
487f62: lea rsi, [rip + 0x3b097]
487f69: mov edi, 0x1b
487f6e: call 0x465300
487f73: test eax, eax
487f75: js 0x4880a4
487f7b: pcmpeqd xmm0, xmm0
487f7f: shr rbx, 1
487f82: lea rax, [rip - 0xd9]
487f89: lea rsi, [rsp + 0x20]
487f8e: lea rdx, [rip + 0x3b06b]
487f95: mov edi, 0x1b
487f9a: mov qword ptr [rip + 0x3b137], rbp
487fa1: mov qword ptr [rip + 0x3b128], rbx
487fa8: mov qword ptr [rip + 0x3b119], r12
487faf: mov dword ptr [rip + 0x3b10a], r13d
487fb6: mov qword ptr [rsp + 0x20], rax
487fbb: mov dword ptr [rsp + 0xa8], 0x10000004
487fc6: movups xmmword ptr [rsp + 0x28], xmm0
487fcb: movups xmmword ptr [rsp + 0x38], xmm0
487fd0: movups xmmword ptr [rsp + 0x48], xmm0
487fd5: movups xmmword ptr [rsp + 0x58], xmm0
487fda: movups xmmword ptr [rsp + 0x68], xmm0
487fdf: movups xmmword ptr [rsp + 0x78], xmm0
487fe4: movups xmmword ptr [rsp + 0x88], xmm0
487fec: movups xmmword ptr [rsp + 0x98], xmm0
487ff4: call 0x465300
487ff9: test eax, eax
487ffb: js 0x4880a4
488001: mov qword ptr [rsp + 0x10], 0
48800a: call 0x4880b0
48800f: mov rsi, rsp
488012: mov edi, 2
488017: mov r8d, eax
48801a: mov eax, 0xf4240
48801f: cdq 
488020: idiv r8d
488023: lea rdx, [rip + 0x3b076]
48802a: cdqe 
48802c: mov qword ptr [rsp + 0x18], rax
488031: movdqa xmm1, xmmword ptr [rsp + 0x10]
488037: movaps xmmword ptr [rsp], xmm1
48803b: call 0x48bc90
488040: mov rcx, qword ptr [rsp + 0xb8]
488048: xor rcx, qword ptr fs:[0x28]
488051: jne 0x4880ab
488053: add rsp, 0xc8
48805a: pop rbx
48805b: pop rbp
48805c: pop r12
48805e: pop r13
488060: ret 
488061: nop dword ptr [rax]
488068: test rdx, rdx
48806b: je 0x488040
48806d: xor edx, edx
48806f: lea rsi, [rip + 0x3b02a]
488076: mov edi, 2
48807b: call 0x48bc90
488080: test eax, eax
488082: js 0x4880a4
488084: xor edx, edx
488086: mov edi, 0x1b
48808b: lea rsi, [rip + 0x3af6e]
488092: mov qword ptr [rip + 0x3b03b], 0
48809d: call 0x465300
4880a2: jmp 0x488040
4880a4: mov eax, 0xffffffff
4880a9: jmp 0x488040
4880ab: call 0x4547a0
4880b0: endbr64 
4880b4: mov eax, dword ptr [rip + 0x3b76e]
4880ba: ret 
4880bb: nop dword ptr [rax + rax]
4880c0: endbr64 
4880c4: push rbx
4880c5: mov r10, rdi
4880c8: mov esi, esi
4880ca: lea rdx, [rsi + rsi*2]
4880ce: sub rsp, 0x10
4880d2: mov rax, qword ptr [rdi + 0x68]
4880d6: mov rdi, qword ptr [rax + 8]
4880da: mov rax, qword ptr [r10 + 0xf8]
4880e1: mov rax, qword ptr [rax + 8]
4880e5: lea r8, [rax + rdx*8]
4880e9: mov rax, qword ptr [r10 + 0x70]
4880ed: mov rsi, qword ptr [r8 + 8]
4880f1: mov rbx, qword ptr [r8]
4880f4: mov rax, qword ptr [rax + 8]
4880f8: mov rcx, rsi
4880fb: shr rcx, 0x20
4880ff: lea rdx, [rcx + rcx*2]
488103: lea rdx, [rax + rdx*8]
488107: mov rax, qword ptr [r10]
48810a: mov qword ptr [rsp + 8], rdx
48810f: add rbx, rax
488112: cmp esi, 7
488115: jne 0x48825e
48811b: test byte ptr [rdx + 5], 3
48811f: jne 0x488200
488125: mov r8, qword ptr [r10 + 0x1d0]
48812c: test r8, r8
48812f: je 0x48815d
488131: mov rax, qword ptr [r8 + 8]
488135: movzx eax, word ptr [rax + rcx*2]
488139: and eax, 0x7fff
48813e: lea rcx, [rax + rax*2]
488142: mov rax, qword ptr [r10 + 0x2e8]
488149: lea r8, [rax + rcx*8]
48814d: mov eax, 0
488152: mov r9d, dword ptr [r8 + 8]
488156: test r9d, r9d
488159: cmove r8, rax
48815d: mov ecx, dword ptr fs:[0x18]
488165: mov eax, 1
48816a: test ecx, ecx
48816c: jne 0x488248
488172: mov edx, dword ptr [rdx]
488174: lea r11, [rsp + 8]
488179: mov r9d, 1
48817f: mov rsi, r10
488182: mov rcx, qword ptr [r10 + 0x390]
488189: push 0
48818b: push rax
48818c: add rdi, rdx
48818f: mov rdx, r11
488192: call 0x47d3a0
488197: mov r8, rax
48819a: mov eax, dword ptr fs:[0x18]
4881a2: pop rcx
4881a3: pop rsi
4881a4: test eax, eax
4881a6: jne 0x488210
4881a8: mov rdx, qword ptr [rsp + 8]
4881ad: xor eax, eax
4881af: test rdx, rdx
4881b2: je 0x4881d3
4881b4: cmp word ptr [rdx + 6], -0xf
4881b9: je 0x4881f0
4881bb: test r8, r8
4881be: je 0x4881f0
4881c0: mov rax, qword ptr [r8]
4881c3: add rax, qword ptr [rdx + 8]
4881c7: movzx edx, byte ptr [rdx + 4]
4881cb: and edx, 0xf
4881ce: cmp dl, 0xa
4881d1: je 0x4881f8
4881d3: mov edx, dword ptr [rip + 0x3b5ff]
4881d9: test edx, edx
4881db: jne 0x4881e0
4881dd: mov qword ptr [rbx], rax
4881e0: add rsp, 0x10
4881e4: pop rbx
4881e5: ret 
4881e6: nop word ptr cs:[rax + rax]
4881f0: xor eax, eax
4881f2: jmp 0x4881c3
4881f4: nop dword ptr [rax]
4881f8: call rax
4881fa: jmp 0x4881d3
4881fc: nop dword ptr [rax]
488200: cmp word ptr [rdx + 6], -0xf
488205: mov ecx, 0
48820a: cmove rax, rcx
48820e: jmp 0x4881c3
488210: xor eax, eax
488212: xchg dword ptr fs:[0x1c], eax
48821a: cmp eax, 2
48821d: jne 0x4881a8
48821f: mov rdi, qword ptr fs:[0x10]
488228: xor r10d, r10d
48822b: add rdi, 0x1c
48822f: mov edx, 1
488234: mov esi, 0x81
488239: mov eax, 0xca
48823e: syscall 
488240: jmp 0x4881a8
488245: nop dword ptr [rax]
488248: mov dword ptr fs:[0x1c], 1
488254: mov eax, 5
488259: jmp 0x488172
48825e: lea rcx, [rip + 0x27d03]
488265: mov edx, 0x50
48826a: lea rsi, [rip + 0x27cab]
488271: lea rdi, [rip + 0x27cb8]
488278: call 0x4032a0
48827d: nop dword ptr [rax]
488280: endbr64 
488284: push r13
488286: push r12
488288: push rbp
488289: mov rbp, r8
48828c: push rbx
48828d: sub rsp, 0x18
488291: mov rbx, qword ptr [rdi + 0x338]
488298: test rbx, rbx
48829b: je 0x488410
4882a1: mov esi, esi
4882a3: mov r12, rdx
4882a6: mov rax, rsi
4882a9: shl rax, 5
4882ad: add rbx, rax
4882b0: mov eax, dword ptr [rbx + 0x1c]
4882b3: test eax, eax
4882b5: jne 0x4883e0
4882bb: mov rcx, qword ptr [rdi + 0xf8]
4882c2: mov rax, qword ptr [rdi + 0x68]
4882c6: mov r8, qword ptr [rcx + 8]
4882ca: mov rdx, qword ptr [rax + 8]
4882ce: lea rax, [rsi + rsi*2]
4882d2: lea rax, [r8 + rax*8]
4882d6: mov rsi, qword ptr [rax + 8]
4882da: mov rax, qword ptr [rdi + 0x70]
4882de: mov rcx, rsi
4882e1: mov rax, qword ptr [rax + 8]
4882e5: shr rcx, 0x20
4882e9: lea r8, [rcx + rcx*2]
4882ed: lea rax, [rax + r8*8]
4882f1: mov qword ptr [rsp + 8], rax
4882f6: cmp esi, 7
4882f9: jne 0x4884c1
4882ff: test byte ptr [rax + 5], 3
488303: jne 0x488430
488309: mov r8, qword ptr [rdi + 0x1d0]
488310: test r8, r8
488313: je 0x488341
488315: mov rsi, qword ptr [r8 + 8]
488319: movzx ecx, word ptr [rsi + rcx*2]
48831d: and ecx, 0x7fff
488323: lea rsi, [rcx + rcx*2]
488327: mov rcx, qword ptr [rdi + 0x2e8]
48832e: lea r8, [rcx + rsi*8]
488332: mov ecx, 0
488337: mov esi, dword ptr [r8 + 8]
48833b: test esi, esi
48833d: cmove r8, rcx
488341: mov esi, dword ptr fs:[0x18]
488349: mov ecx, 1
48834e: test esi, esi
488350: jne 0x488468
488356: mov r10d, dword ptr [rax]
488359: mov r13, qword ptr [rdi + 0x390]
488360: lea r11, [rsp + 8]
488365: push 0
488367: push rcx
488368: mov rsi, rdi
48836b: mov r9d, 1
488371: add r10, rdx
488374: mov rcx, r13
488377: mov rdx, r11
48837a: mov rdi, r10
48837d: call 0x47d3a0
488382: mov r8, rax
488385: mov eax, dword ptr fs:[0x18]
48838d: pop rdx
48838e: pop rcx
48838f: test eax, eax
488391: jne 0x488480
488397: mov rdx, qword ptr [rsp + 8]
48839c: xor r13d, r13d
48839f: test rdx, rdx
4883a2: je 0x4883c9
4883a4: cmp word ptr [rdx + 6], -0xf
4883a9: je 0x488408
4883ab: test r8, r8
4883ae: je 0x488408
4883b0: mov rax, qword ptr [r8]
4883b3: add rax, qword ptr [rdx + 8]
4883b7: mov r13, rax
4883ba: movzx eax, byte ptr [rdx + 4]
4883be: and eax, 0xf
4883c1: cmp al, 0xa
4883c3: je 0x488458
4883c9: mov eax, dword ptr [rip + 0x3b409]
4883cf: test eax, eax
4883d1: jne 0x4883e3
4883d3: mov qword ptr [rbx], r13
4883d6: mov dword ptr [rbx + 0x1c], 1
4883dd: jmp 0x4883e3
4883df: nop 
4883e0: mov r13, qword ptr [rbx]
4883e3: mov qword ptr [rbp], 0xffffffffffffffff
4883eb: mov rsi, r13
4883ee: mov rdi, r12
4883f1: call 0x481bf0
4883f6: add rsp, 0x18
4883fa: mov rax, r13
4883fd: pop rbx
4883fe: pop rbp
4883ff: pop r12
488401: pop r13
488403: ret 
488404: nop dword ptr [rax]
488408: xor eax, eax
48840a: jmp 0x4883b3
48840c: nop dword ptr [rax]
488410: mov qword ptr [r8], 0xffffffffffffffff
488417: call 0x4880c0
48841c: add rsp, 0x18
488420: mov r13, rax
488423: pop rbx
488424: pop rbp
488425: mov rax, r13
488428: pop r12
48842a: pop r13
48842c: ret 
48842d: nop dword ptr [rax]
488430: cmp word ptr [rax + 6], -0xf
488435: je 0x4884b9
48843b: mov r13, qword ptr [rdi]
48843e: add r13, qword ptr [rax + 8]
488442: movzx eax, byte ptr [rax + 4]
488446: and eax, 0xf
488449: cmp al, 0xa
48844b: jne 0x4883c9
488451: nop dword ptr [rax]
488458: call r13
48845b: mov r13, rax
48845e: jmp 0x4883c9
488463: nop dword ptr [rax + rax]
488468: mov dword ptr fs:[0x1c], 1
488474: mov ecx, 5
488479: jmp 0x488356
48847e: nop 
488480: xor eax, eax
488482: xchg dword ptr fs:[0x1c], eax
48848a: cmp eax, 2
48848d: jne 0x488397
488493: mov rdi, qword ptr fs:[0x10]
48849c: xor r10d, r10d
48849f: add rdi, 0x1c
4884a3: mov edx, 1
4884a8: mov esi, 0x81
4884ad: mov eax, 0xca
4884b2: syscall 
4884b4: jmp 0x488397
4884b9: xor r13d, r13d
4884bc: jmp 0x48843e
4884c1: lea rcx, [rip + 0x27ab8]
4884c8: mov edx, 0xe5
4884cd: lea rsi, [rip + 0x27a48]
4884d4: lea rdi, [rip + 0x27a55]
4884db: call 0x4032a0
4884e0: endbr64 
4884e4: ret 
4884e5: nop word ptr cs:[rax + rax]
4884ef: nop 
4884f0: push r15
4884f2: push r14
4884f4: lea r14, [rip + 0x38c85]
4884fb: push r13
4884fd: push r12
4884ff: push rbp
488500: push rbx
488501: sub rsp, 8
488505: mov r13, qword ptr [rdi + 0x30]
488509: mov esi, dword ptr [rdi + 0x2c8]
48850f: lea r12, [r13 + r13*8]
488514: shl r12, 4
488518: add r12, r14
48851b: mov rax, qword ptr [r12 + 0x10]
488520: mov edx, dword ptr [rax + 8]
488523: test esi, esi
488525: je 0x4885e8
48852b: mov rbp, rdi
48852e: xor ebx, ebx
488530: mov rcx, qword ptr [rbp + 0x2c0]
488537: mov eax, ebx
488539: mov rcx, qword ptr [rcx + rax*8]
48853d: movzx eax, byte ptr [rcx + 0x31c]
488544: test al, 0x10
488546: jne 0x48857e
488548: or eax, 0x10
48854b: mov byte ptr [rcx + 0x31c], al
488551: cmp dword ptr [r12 + 0x18], edx
488556: jbe 0x4885f1
48855c: mov rax, qword ptr [r12 + 0x10]
488561: lea r15d, [rdx + 1]
488565: mov rax, qword ptr [rax]
488568: mov qword ptr [rax + rdx*8], rcx
48856c: test byte ptr [rip + 0x3b24e], 2
488573: jne 0x4885d0
488575: mov esi, dword ptr [rbp + 0x2c8]
48857b: mov edx, r15d
48857e: add ebx, 1
488581: cmp ebx, esi
488583: jb 0x488530
488585: lea rax, [r13 + r13*8]
48858a: shl rax, 4
48858e: add rax, r14
488591: mov rcx, qword ptr [rax + 0x10]
488595: mov esi, dword ptr [rax + 0x1c]
488598: mov eax, edx
48859a: mov ecx, dword ptr [rcx + 8]
48859d: sub eax, ecx
48859f: cmp esi, eax
4885a1: jb 0x488610
4885a3: lea rax, [r13 + r13*8]
4885a8: add ecx, esi
4885aa: shl rax, 4
4885ae: sub ecx, edx
4885b0: add r14, rax
4885b3: mov dword ptr [r14 + 0x1c], ecx
4885b7: mov rax, qword ptr [r14 + 0x10]
4885bb: mov dword ptr [rax + 8], edx
4885be: add rsp, 8
4885c2: pop rbx
4885c3: pop rbp
4885c4: pop r12
4885c6: pop r13
4885c8: pop r14
4885ca: pop r15
4885cc: ret 
4885cd: nop dword ptr [rax]
4885d0: mov rdx, qword ptr [rcx + 0x30]
4885d4: mov rsi, qword ptr [rcx + 8]
4885d8: lea rdi, [rip + 0x27ad1]
4885df: xor eax, eax
4885e1: call 0x480f60
4885e6: jmp 0x488575
4885e8: mov esi, dword ptr [r12 + 0x1c]
4885ed: mov ecx, edx
4885ef: jmp 0x4885a3
4885f1: lea rcx, [rip + 0x27ca8]
4885f8: mov edx, 0xaf
4885fd: lea rsi, [rip + 0x2798e]
488604: lea rdi, [rip + 0x27a7d]
48860b: call 0x4032a0
488610: lea rcx, [rip + 0x27c89]
488617: mov edx, 0xbd
48861c: lea rsi, [rip + 0x2796f]
488623: lea rdi, [rip + 0x27aa6]
48862a: call 0x4032a0
48862f: nop 
488630: endbr64 
488634: mov rcx, qword ptr [rdi + 0x18]
488638: mov rdx, qword ptr [rdi + 0x10]
48863c: mov esi, dword ptr [rdi + 8]
48863f: mov rdi, qword ptr [rdi]
488642: jmp 0x48d0e0
488647: nop word ptr [rax + rax]
488650: push rax
488651: pop rax
488652: lea rcx, [rip + 0x27943]
488659: xor edx, edx
48865b: sub rsp, 8
48865f: mov rsi, qword ptr [rdi]
488662: mov edi, 0xc
488667: call 0x485060
48866c: nop dword ptr [rax]
488670: push r15
488672: push r14
488674: push r13
488676: push r12
488678: mov r12, rdi
48867b: push rbp
48867c: lea rbp, [rip + 0x38afd]
488683: push rbx
488684: sub rsp, 0x18
488688: mov rbx, qword ptr [rdi + 0x30]
48868c: mov edx, dword ptr [rdi + 0x2c8]
488692: lea rax, [rbx + rbx*8]
488696: shl rax, 4
48869a: mov esi, dword ptr [rbp + rax + 0x1c]
48869e: test edx, edx
4886a0: je 0x4886fb
4886a2: mov rax, qword ptr [rdi + 0x2c0]
4886a9: lea ecx, [rdx - 1]
4886ac: lea rdx, [rax + 8]
4886b0: lea rdi, [rdx + rcx*8]
4886b4: xor ecx, ecx
4886b6: jmp 0x4886c4
4886b8: nop dword ptr [rax + rax]
4886c0: add rdx, 8
4886c4: mov rax, qword ptr [rax]
4886c7: movzx eax, byte ptr [rax + 0x31c]
4886ce: and eax, 0x10
4886d1: cmp al, 1
4886d3: mov rax, rdx
4886d6: adc ecx, 0
4886d9: cmp rdx, rdi
4886dc: jne 0x4886c0
4886de: xor edx, edx
4886e0: lea rax, [rbx + rbx*8]
4886e4: add ecx, esi
4886e6: setb dl
4886e9: shl rax, 4
4886ed: mov esi, ecx
4886ef: mov dword ptr [rbp + rax + 0x1c], ecx
4886f3: test edx, edx
4886f5: jne 0x4887e6
4886fb: lea rax, [rbx + rbx*8]
4886ff: mov ecx, esi
488701: shl rax, 4
488705: add rax, rbp
488708: mov r13, qword ptr [rax + 0x10]
48870c: mov eax, dword ptr [rax + 0x18]
48870f: mov r14d, dword ptr [r13 + 8]
488713: add rcx, r14
488716: test eax, eax
488718: je 0x488750
48871a: cmp rcx, rax
48871d: jbe 0x488739
48871f: add rcx, rcx
488722: mov eax, ecx
488724: mov r15d, ecx
488727: cmp rcx, rax
48872a: jne 0x4887e6
488730: mov r8, qword ptr [r13]
488734: test r15d, r15d
488737: jne 0x48876a
488739: add rsp, 0x18
48873d: pop rbx
48873e: pop rbp
48873f: pop r12
488741: pop r13
488743: pop r14
488745: pop r15
488747: ret 
488748: nop dword ptr [rax + rax]
488750: add rcx, 8
488754: mov eax, ecx
488756: mov r15d, ecx
488759: cmp rcx, rax
48875c: jne 0x4887e6
488762: xor r8d, r8d
488765: test r15d, r15d
488768: je 0x488739
48876a: mov edi, r15d
48876d: mov qword ptr [rsp + 8], r8
488772: shl rdi, 3
488776: call 0x426410
48877b: mov r8, qword ptr [rsp + 8]
488780: test rax, rax
488783: je 0x4887e6
488785: mov rsi, qword ptr [r13]
488789: lea rdx, [r14*8]
488791: mov rdi, rax
488794: mov qword ptr [rsp + 8], r8
488799: call 0x401060
48879e: mov rcx, rax
4887a1: lea rax, [rbx + rbx*8]
4887a5: shl rax, 4
4887a9: mov dword ptr [rbp + rax + 0x18], r15d
4887ae: mov qword ptr [r13], rcx
4887b2: mov eax, dword ptr fs:[0x18]
4887ba: test eax, eax
4887bc: mov r8, qword ptr [rsp + 8]
4887c1: jne 0x4887d9
4887c3: add rsp, 0x18
4887c7: mov rdi, r8
4887ca: pop rbx
4887cb: pop rbp
4887cc: pop r12
4887ce: pop r13
4887d0: pop r14
4887d2: pop r15
4887d4: jmp 0x426a00
4887d9: call qword ptr [rip + 0x3afe9]
4887df: mov r8, qword ptr [rsp + 8]
4887e4: jmp 0x4887c3
4887e6: mov rdi, qword ptr [r12 + 0x38]
4887eb: call 0x488650
4887f0: endbr64 
4887f4: push r12
4887f6: push rbx
4887f7: sub rsp, 8
4887fb: cmp qword ptr [rip + 0x38925], 0
488803: je 0x488850
488805: mov r12, qword ptr [rip + 0x38974]
48880c: mov rbx, rdi
48880f: test r12, r12
488812: je 0x488850
488814: nop dword ptr [rax]
488818: cmp qword ptr [r12 + 0x350], rbx
488820: ja 0x488846
488822: cmp qword ptr [r12 + 0x358], rbx
48882a: jbe 0x488846
48882c: test byte ptr [r12 + 0x31d], 0x40
488835: jne 0x488860
488837: mov rsi, rbx
48883a: mov rdi, r12
48883d: call 0x48b790
488842: test eax, eax
488844: jne 0x488860
488846: mov r12, qword ptr [r12 + 0x18]
48884b: test r12, r12
48884e: jne 0x488818
488850: xor r12d, r12d
488853: add rsp, 8
488857: mov rax, r12
48885a: pop rbx
48885b: pop r12
48885d: ret 
48885e: nop 
488860: cmp qword ptr [r12 + 0x30], 0
488866: jne 0x488873
488868: add rsp, 8
48886c: mov rax, r12
48886f: pop rbx
488870: pop r12
488872: ret 
488873: lea rcx, [rip + 0x27a66]
48887a: mov edx, 0xd3
48887f: lea rsi, [rip + 0x2770c]
488886: lea rdi, [rip + 0x2772a]
48888d: call 0x4032a0
488892: nop word ptr cs:[rax + rax]
48889d: nop dword ptr [rax]
4888a0: endbr64 
4888a4: push r14
4888a6: push r13
4888a8: push r12
4888aa: mov r12, rdi
4888ad: push rbp
4888ae: push rbx
4888af: sub rsp, 0x70
4888b3: mov qword ptr [rsp + 8], r9
4888b8: test sil, 3
4888bc: je 0x488a97
4888c2: cmp qword ptr [rip + 0x3763e], 0
4888ca: mov ebp, esi
4888cc: mov r14, rdx
4888cf: mov rbx, rcx
4888d2: mov r13d, r8d
4888d5: je 0x4888e3
4888d7: lea rdi, [rip + 0x38802]
4888de: call 0
4888e3: cmp rbx, -1
4888e7: je 0x4889c0
4888ed: lea rax, [rbx + 2]
4888f1: test rax, -3
4888f7: jne 0x4889f0
4888fd: movq xmm0, qword ptr [rsp + 8]
488903: mov qword ptr [rsp + 0x30], r12
488908: lea r12, [rsp + 0x10]
48890d: lea rsi, [rip + 0x2fc]
488914: lea rdx, [rsp + 0x30]
488919: mov rdi, r12
48891c: mov dword ptr [rsp + 0x5c], r13d
488921: movhps xmm0, qword ptr [rsp + 0xa0]
488929: mov dword ptr [rsp + 0x38], ebp
48892d: movaps xmmword ptr [rsp + 0x60], xmm0
488932: mov qword ptr [rsp + 0x40], r14
488937: mov qword ptr [rsp + 0x48], 0
488940: mov qword ptr [rsp + 0x50], rbx
488945: call 0x4850c0
48894a: mov r13d, eax
48894d: call 0x4844f0
488952: mov rsi, qword ptr [rsp + 0x50]
488957: test rsi, rsi
48895a: js 0x488973
48895c: mov ecx, dword ptr [rsp + 0x58]
488960: lea rax, [rsi + rsi*8]
488964: lea rdx, [rip + 0x38815]
48896b: shl rax, 4
48896f: mov dword ptr [rdx + rax + 0x1c], ecx
488973: cmp qword ptr [rsp + 0x18], 0
488979: jne 0x488a10
48897f: xor edi, edi
488981: call 0x454800
488986: mov eax, dword ptr [rax + 0x18]
488989: test eax, eax
48898b: jne 0x488aad
488991: cmp qword ptr [rip + 0x375d7], 0
488999: je 0x4889a7
48899b: lea rdi, [rip + 0x3873e]
4889a2: call 0
4889a7: mov rax, qword ptr [rsp + 0x48]
4889ac: add rsp, 0x70
4889b0: pop rbx
4889b1: pop rbp
4889b2: pop r12
4889b4: pop r13
4889b6: pop r14
4889b8: ret 
4889b9: nop dword ptr [rax]
4889c0: cmp qword ptr [rip + 0x375a8], 0
4889c8: je 0x4889d6
4889ca: lea rdi, [rip + 0x3870f]
4889d1: call 0
4889d6: lea rcx, [rip + 0x27723]
4889dd: xor edx, edx
4889df: mov rsi, r12
4889e2: mov edi, 0x16
4889e7: call 0x485060
4889ec: nop dword ptr [rax]
4889f0: lea rcx, [rip + 0x27739]
4889f7: xor edx, edx
4889f9: mov rsi, r12
4889fc: mov edi, 0x16
488a01: call 0x485060
488a06: nop word ptr cs:[rax + rax]
488a10: mov rdi, qword ptr [rsp + 0x48]
488a15: test rdi, rdi
488a18: je 0x488a31
488a1a: and ebp, 0x8000000
488a20: je 0x488a68
488a22: mov esi, 1
488a27: call 0x48a870
488a2c: mov rsi, qword ptr [rsp + 0x50]
488a31: xor edi, edi
488a33: call 0x454800
488a38: mov edx, dword ptr [rax + 0x18]
488a3b: test edx, edx
488a3d: jne 0x488a78
488a3f: cmp qword ptr [rip + 0x37529], 0
488a47: je 0x488a55
488a49: lea rdi, [rip + 0x38690]
488a50: call 0
488a55: xor edx, edx
488a57: mov rsi, r12
488a5a: mov edi, r13d
488a5d: call 0x485010
488a62: nop word ptr [rax + rax]
488a68: mov byte ptr [rip + 0x3acb9], 1
488a6f: jmp 0x488a22
488a71: nop dword ptr [rax]
488a78: lea rcx, [rip + 0x27809]
488a7f: mov edx, 0x371
488a84: lea rsi, [rip + 0x27507]
488a8b: lea rdi, [rip + 0x276c6]
488a92: call 0x4032a0
488a97: mov rsi, rdi
488a9a: lea rcx, [rip + 0x27524]
488aa1: xor edx, edx
488aa3: mov edi, 0x16
488aa8: call 0x485060
488aad: lea rcx, [rip + 0x277d4]
488ab4: mov edx, 0x37a
488ab9: lea rsi, [rip + 0x274d2]
488ac0: lea rdi, [rip + 0x27691]
488ac7: call 0x4032a0
488acc: nop dword ptr [rax]
488ad0: endbr64 
488ad4: push r14
488ad6: mov r14, rdi
488ad9: push r13
488adb: mov r13d, esi
488ade: push r12
488ae0: push rbp
488ae1: push rbx
488ae2: mov rsi, qword ptr [rdi + 8]
488ae6: mov rdx, qword ptr [rdi + 0x30]
488aea: cmp byte ptr [rsi], 0
488aed: jne 0x488b07
488aef: mov rax, qword ptr [rip + 0x36f72]
488af6: mov rsi, qword ptr [rax]
488af9: lea rax, [rip + 0x2182f]
488b00: test rsi, rsi
488b03: cmove rsi, rax
488b07: xor eax, eax
488b09: lea rdi, [rip + 0x274cf]
488b10: call 0x480f60
488b15: mov rax, qword ptr [r14 + 0x390]
488b1c: test rax, rax
488b1f: je 0x488bf2
488b25: movsxd rdx, r13d
488b28: lea r12, [rip + 0x2253f]
488b2f: cmp qword ptr [rax + rdx*8], 0
488b34: lea rbp, [rdx*8]
488b3c: je 0x488bdc
488b42: nop word ptr [rax + rax]
488b48: xor eax, eax
488b4a: mov esi, r13d
488b4d: lea rdi, [rip + 0x2749c]
488b54: call 0x480f60
488b59: mov rax, qword ptr [r14 + 0x390]
488b60: mov rdx, qword ptr [rax + rbp]
488b64: mov eax, dword ptr [rdx + 8]
488b67: test eax, eax
488b69: je 0x488bb4
488b6b: xor ebx, ebx
488b6d: nop dword ptr [rax]
488b70: mov rdx, qword ptr [rdx]
488b73: mov eax, ebx
488b75: mov rax, qword ptr [rdx + rax*8]
488b79: mov rsi, qword ptr [rax + 8]
488b7d: cmp byte ptr [rsi], 0
488b80: jne 0x488b93
488b82: mov rax, qword ptr [rip + 0x36edf]
488b89: mov rsi, qword ptr [rax]
488b8c: test rsi, rsi
488b8f: cmove rsi, r12
488b93: xor eax, eax
488b95: lea rdi, [rip + 0x27309]
488b9c: add ebx, 1
488b9f: call 0x481010
488ba4: mov rax, qword ptr [r14 + 0x390]
488bab: mov rdx, qword ptr [rax + rbp]
488baf: cmp dword ptr [rdx + 8], ebx
488bb2: ja 0x488b70
488bb4: xor eax, eax
488bb6: lea rdi, [rip + 0xc79d]
488bbd: add rbp, 8
488bc1: add r13d, 1
488bc5: call 0x481010
488bca: mov rax, qword ptr [r14 + 0x390]
488bd1: cmp qword ptr [rax + rbp], 0
488bd6: jne 0x488b48
488bdc: pop rbx
488bdd: lea rdi, [rip + 0xc776]
488be4: pop rbp
488be5: xor eax, eax
488be7: pop r12
488be9: pop r13
488beb: pop r14
488bed: jmp 0x480f60
488bf2: lea rdi, [rip + 0x27402]
488bf9: xor eax, eax
488bfb: call 0x480f60
488c00: jmp 0x488bdc
488c02: nop word ptr cs:[rax + rax]
488c0d: nop dword ptr [rax]
488c10: endbr64 
488c14: push rbp
488c15: mov esi, 0x24
488c1a: mov rbp, rsp
488c1d: push r15
488c1f: push r14
488c21: push r13
488c23: push r12
488c25: push rbx
488c26: mov rbx, rdi
488c29: sub rsp, 0x58
488c2d: mov r13, qword ptr [rdi]
488c30: mov eax, dword ptr [rdi + 8]
488c33: mov rdi, r13
488c36: mov dword ptr [rbp - 0x54], eax
488c39: call 0x401190
488c3e: test rax, rax
488c41: je 0x4890d8
488c47: mov r15, qword ptr [rip + 0x38532]
488c4e: cmp qword ptr [rip + 0x384d2], 0
488c56: mov r14, qword ptr [rbx + 0x10]
488c5a: mov r12, r15
488c5d: je 0x488ca4
488c5f: test r15, r15
488c62: je 0x488ca4
488c64: nop dword ptr [rax]
488c68: cmp r14, qword ptr [r15 + 0x350]
488c6f: jb 0x488c9b
488c71: cmp r14, qword ptr [r15 + 0x358]
488c78: jae 0x488c9b
488c7a: test byte ptr [r15 + 0x31d], 0x40
488c82: jne 0x489098
488c88: mov rsi, r14
488c8b: mov rdi, r15
488c8e: call 0x48b790
488c93: test eax, eax
488c95: jne 0x489098
488c9b: mov r15, qword ptr [r15 + 0x18]
488c9f: test r15, r15
488ca2: jne 0x488c68
488ca4: mov r8, qword ptr [rbx + 0x20]
488ca8: cmp r8, -2
488cac: je 0x4890b4
488cb2: nop word ptr [rax + rax]
488cb8: lea rax, [r8 + r8*8]
488cbc: lea rcx, [rip + 0x384bd]
488cc3: mov rsi, r8
488cc6: xor edi, edi
488cc8: shl rax, 4
488ccc: mov eax, dword ptr [rcx + rax + 0x1c]
488cd0: mov dword ptr [rbx + 0x28], eax
488cd3: call 0x454800
488cd8: mov r8d, dword ptr [rbp - 0x54]
488cdc: mov r9, qword ptr [rbx + 0x20]
488ce0: xor ecx, ecx
488ce2: mov edx, 2
488ce7: mov rsi, r13
488cea: mov rdi, r12
488ced: or r8d, 0x10000000
488cf4: call 0x47bad0
488cf9: mov qword ptr [rbx + 0x18], rax
488cfd: mov r14, rax
488d00: test rax, rax
488d03: je 0x489130
488d09: mov eax, dword ptr [rbp - 0x54]
488d0c: test eax, 0x40000000
488d11: jne 0x48905a
488d17: mov ecx, dword ptr [r14 + 0x318]
488d1e: and eax, 0x1000
488d23: mov r12d, eax
488d26: add ecx, 1
488d29: cmp qword ptr [r14 + 0x2c0], 0
488d31: mov dword ptr [r14 + 0x318], ecx
488d38: jne 0x4894c0
488d3e: test eax, eax
488d40: jne 0x489540
488d46: mov r8d, dword ptr [rbp - 0x54]
488d4a: xor edx, edx
488d4c: xor ecx, ecx
488d4e: xor esi, esi
488d50: mov rdi, r14
488d53: xor r12d, r12d
488d56: and r8d, 0x88000008
488d5d: call 0x48bd90
488d62: mov edx, dword ptr [r14 + 0x2c8]
488d69: test edx, edx
488d6b: je 0x488d96
488d6d: mov rcx, qword ptr [r14 + 0x2c0]
488d74: mov eax, r12d
488d77: mov rax, qword ptr [rcx + rax*8]
488d7b: mov rdi, qword ptr [rax + 0x28]
488d7f: cmp qword ptr [rdi + 0x2e8], 0
488d87: je 0x489070
488d8d: add r12d, 1
488d91: cmp r12d, edx
488d94: jb 0x488d74
488d96: mov rsi, qword ptr [rbx + 0x20]
488d9a: xor edi, edi
488d9c: call 0x454800
488da1: mov dword ptr [rax + 0x18], 0
488da8: mov r15, rax
488dab: mov qword ptr [rbp - 0x60], rax
488daf: call 0x4547f0
488db4: nop 
488db5: mov rdi, r14
488db8: call 0x48af30
488dbd: test byte ptr [rip + 0x3a9fd], 2
488dc4: jne 0x489530
488dca: mov eax, dword ptr [rbp - 0x54]
488dcd: mov esi, dword ptr [rip + 0x3aa25]
488dd3: mov r15d, eax
488dd6: and r15d, 0x8000001
488ddd: test esi, esi
488ddf: je 0x4890c8
488de5: mov rax, r14
488de8: xor ecx, ecx
488dea: nop word ptr [rax + rax]
488df0: mov rdx, qword ptr [rax + 0x28]
488df4: mov rax, qword ptr [rax + 0x18]
488df8: movzx edx, byte ptr [rdx + 0x31c]
488dff: and edx, 4
488e02: cmp dl, 1
488e05: adc ecx, 0
488e08: test rax, rax
488e0b: jne 0x488df0
488e0d: lea rax, [rcx*8 + 0xf]
488e15: mov rcx, rsp
488e18: mov qword ptr [rbp - 0x68], rsp
488e1c: shr rax, 4
488e20: shl rax, 4
488e24: mov rdx, rax
488e27: and rdx, 0xfffffffffffff000
488e2e: sub rcx, rdx
488e31: mov rdx, rcx
488e34: cmp rsp, rdx
488e37: je 0x488e4e
488e39: sub rsp, 0x1000
488e40: or qword ptr [rsp + 0xff8], 0
488e49: cmp rsp, rdx
488e4c: jne 0x488e39
488e4e: and eax, 0xfff
488e53: sub rsp, rax
488e56: test rax, rax
488e59: je 0x488e61
488e5b: or qword ptr [rsp + rax - 8], 0
488e61: mov r12, rsp
488e64: mov rax, r14
488e67: xor edx, edx
488e69: nop dword ptr [rax]
488e70: mov rcx, qword ptr [rax + 0x28]
488e74: test byte ptr [rcx + 0x31c], 4
488e7b: jne 0x488e9c
488e7d: mov qword ptr [r12 + rdx*8], rax
488e81: mov rax, qword ptr [rax + 0x18]
488e85: lea esi, [rdx + 1]
488e88: test rax, rax
488e8b: je 0x488ea7
488e8d: mov rcx, qword ptr [rax + 0x28]
488e91: mov edx, esi
488e93: test byte ptr [rcx + 0x31c], 4
488e9a: je 0x488e7d
488e9c: mov rax, qword ptr [rax + 0x18]
488ea0: test rax, rax
488ea3: jne 0x488e70
488ea5: mov esi, edx
488ea7: xor ecx, ecx
488ea9: xor edx, edx
488eab: mov rdi, r12
488eae: mov dword ptr [rbp - 0x58], esi
488eb1: call 0x48a9f0
488eb6: mov esi, dword ptr [rbp - 0x58]
488eb9: lea r13d, [rsi - 1]
488ebd: test esi, esi
488ebf: je 0x489520
488ec5: mov edx, r13d
488ec8: mov rdi, qword ptr [r12 + rdx*8]
488ecc: nop 
488ecd: jmp 0x488ed7
488ecf: nop 
488ed0: mov edx, r13d
488ed3: mov rdi, qword ptr [r12 + rdx*8]
488ed7: mov rsi, qword ptr [rdi + 0x390]
488ede: xor ecx, ecx
488ee0: mov edx, r15d
488ee3: sub r13d, 1
488ee7: call 0x47e690
488eec: cmp r13d, -1
488ef0: jne 0x488ed0
488ef2: mov dword ptr [rbp - 0x58], 1
488ef9: mov edx, dword ptr [r14 + 0x2c8]
488f00: test edx, edx
488f02: je 0x489600
488f08: xor r15d, r15d
488f0b: jmp 0x488f1d
488f0d: nop dword ptr [rax]
488f10: add r15d, 1
488f14: cmp r15d, edx
488f17: jae 0x489160
488f1d: mov rsi, qword ptr [r14 + 0x2c0]
488f24: mov eax, r15d
488f27: mov r13, qword ptr [rsi + rax*8]
488f2b: movzx eax, byte ptr [r13 + 0x31c]
488f33: and eax, 0xb
488f36: cmp al, 0xa
488f38: jne 0x488f10
488f3a: mov rsi, qword ptr [r13 + 0x390]
488f41: mov rax, qword ptr [rsi]
488f44: test rax, rax
488f47: je 0x489498
488f4d: lea r10, [r14 + 0x2c0]
488f54: lea rdi, [rsi + 8]
488f58: nop dword ptr [rax + rax]
488f60: cmp rax, r10
488f63: je 0x488f10
488f65: mov rax, qword ptr [rdi]
488f68: add rdi, 8
488f6c: test rax, rax
488f6f: jne 0x488f60
488f71: nop dword ptr [rax]
488f78: mov rdi, rax
488f7b: add rax, 1
488f7f: cmp qword ptr [rsi + rax*8], 0
488f84: jne 0x488f78
488f86: lea r10, [rdi + 2]
488f8a: mov rdi, qword ptr [r13 + 0x388]
488f91: cmp rdi, r10
488f94: ja 0x488f10
488f9a: lea r12, [r13 + 0x368]
488fa1: cmp rdi, 3
488fa5: ja 0x4895b0
488fab: mov qword ptr [rbp - 0x70], 4
488fb3: mov r11, r12
488fb6: cmp rsi, r12
488fb9: je 0x4895b0
488fbf: mov rdi, r11
488fc2: lea rdx, [r10*8]
488fca: call 0x401060
488fcf: mov rdi, qword ptr [r13 + 0x390]
488fd6: mov qword ptr [r13 + 0x390], rax
488fdd: cmp r12, rdi
488fe0: je 0x488fe7
488fe2: call 0x482790
488fe7: mov rax, qword ptr [rbp - 0x70]
488feb: mov edx, dword ptr [r14 + 0x2c8]
488ff2: mov qword ptr [r13 + 0x388], rax
488ff9: jmp 0x488f10
488ffe: nop 
489000: test r12b, r12b
489003: jne 0x489390
489009: mov eax, dword ptr [rbp - 0x58]
48900c: test eax, eax
48900e: je 0x489011
489010: nop 
489011: test r13d, r13d
489014: jne 0x489350
48901a: mov eax, dword ptr [rbx + 0x2c]
48901d: movdqu xmm0, xmmword ptr [rbx + 0x30]
489022: lea rdx, [rbp - 0x50]
489026: xor edi, edi
489028: lea rsi, [rip - 0x9ff]
48902f: mov qword ptr [rbp - 0x50], r14
489033: mov dword ptr [rbp - 0x48], eax
489036: movaps xmmword ptr [rbp - 0x40], xmm0
48903a: call 0x4850c0
48903f: mov dword ptr [rip + 0x3867f], 1
489049: test byte ptr [rip + 0x3a770], 0x40
489050: jne 0x489550
489056: mov rsp, qword ptr [rbp - 0x68]
48905a: lea rsp, [rbp - 0x28]
48905e: pop rbx
48905f: pop r12
489061: pop r13
489063: pop r14
489065: pop r15
489067: pop rbp
489068: ret 
489069: nop dword ptr [rax]
489070: xor edx, edx
489072: xor esi, esi
489074: add r12d, 1
489078: call 0x48d220
48907d: mov edx, dword ptr [r14 + 0x2c8]
489084: cmp r12d, edx
489087: jb 0x488d6d
48908d: jmp 0x488d96
489092: nop word ptr [rax + rax]
489098: cmp qword ptr [r15 + 0x30], 0
48909d: jne 0x4896c4
4890a3: mov r8, qword ptr [rbx + 0x20]
4890a7: mov r12, r15
4890aa: cmp r8, -2
4890ae: jne 0x488cb8
4890b4: mov r8, qword ptr [r12 + 0x30]
4890b9: mov qword ptr [rbx + 0x20], r8
4890bd: jmp 0x488cb8
4890c2: nop word ptr [rax + rax]
4890c8: and eax, 0x8000000
4890cd: mov r15d, eax
4890d0: jmp 0x488de5
4890d5: nop dword ptr [rax]
4890d8: mov r8, qword ptr [rbx + 0x20]
4890dc: cmp r8, -2
4890e0: mov qword ptr [rbp - 0x60], r8
4890e4: je 0x489470
4890ea: mov esi, 0x2f
4890ef: mov rdi, r13
4890f2: mov r12, rax
4890f5: call 0x401190
4890fa: mov r8, qword ptr [rbp - 0x60]
4890fe: test rax, rax
489101: jne 0x488cb8
489107: mov r15, qword ptr [rip + 0x38072]
48910e: cmp qword ptr [rip + 0x38012], 0
489116: mov r14, qword ptr [rbx + 0x10]
48911a: mov r12, r15
48911d: jne 0x488c5f
489123: jmp 0x488cb8
489128: nop dword ptr [rax + rax]
489130: test byte ptr [rbp - 0x54], 4
489134: jne 0x48905a
48913a: lea rcx, [rip + 0x27137]
489141: mov edx, 0x208
489146: lea rsi, [rip + 0x26e45]
48914d: lea rdi, [rip + 0x26eb2]
489154: call 0x4032a0
489159: nop dword ptr [rax]
489160: xor r12d, r12d
489163: test edx, edx
489165: je 0x4891c0
489167: xor r15d, r15d
48916a: jmp 0x489179
48916c: nop dword ptr [rax]
489170: add r15d, 1
489174: cmp r15d, edx
489177: jae 0x4891c0
489179: mov rsi, qword ptr [r14 + 0x2c0]
489180: mov ecx, r15d
489183: mov rdi, qword ptr [rsi + rcx*8]
489187: test byte ptr [rdi + 0x31c], 8
48918e: jne 0x489170
489190: cmp qword ptr [rdi + 0x438], 0
489198: je 0x489170
48919a: xor esi, esi
48919c: add r15d, 1
4891a0: mov r12d, 1
4891a6: call 0x482530
4891ab: mov edx, dword ptr [r14 + 0x2c8]
4891b2: cmp r15d, edx
4891b5: jb 0x489179
4891b7: nop word ptr [rax + rax]
4891c0: mov r13d, dword ptr [rbp - 0x54]
4891c4: and r13d, 0x100
4891cb: jne 0x489340
4891d1: mov rax, qword ptr [r14 + 0x30]
4891d5: lea rcx, [rip + 0x37fa4]
4891dc: lea rdi, [rip + 0x27025]
4891e3: lea rax, [rax + rax*8]
4891e7: shl rax, 4
4891eb: mov r15, qword ptr [rcx + rax]
4891ef: test r15, r15
4891f2: je 0x489225
4891f4: nop dword ptr [rax]
4891f8: cmp byte ptr [r15 + 0x320], 0
489200: je 0x48921c
489202: test byte ptr [rip + 0x3a5b7], 0x40
489209: jne 0x489320
48920f: mov edx, 1
489214: mov word ptr [r15 + 0x31f], dx
48921c: mov r15, qword ptr [r15 + 0x18]
489220: test r15, r15
489223: jne 0x4891f8
489225: mov ecx, dword ptr [r14 + 0x2c8]
48922c: xor r15d, r15d
48922f: test ecx, ecx
489231: jne 0x489261
489233: jmp 0x489608
489238: nop dword ptr [rax + rax]
489240: test byte ptr [rip + 0x3a57a], 2
489247: jne 0x489310
48924d: mov edx, dword ptr [r14 + 0x2c8]
489254: add r15d, 1
489258: cmp r15d, edx
48925b: jae 0x489000
489261: mov rcx, qword ptr [r14 + 0x2c0]
489268: mov edx, r15d
48926b: xor esi, esi
48926d: mov rdi, qword ptr [rcx + rdx*8]
489271: movzx edx, byte ptr [rdi + 0x31c]
489278: and edx, 0xb
48927b: cmp dl, 0xa
48927e: jne 0x489240
489280: mov r8, qword ptr [rdi + 0x390]
489287: mov rdx, qword ptr [r8]
48928a: test rdx, rdx
48928d: je 0x4894a8
489293: lea rsi, [r14 + 0x2c0]
48929a: lea rcx, [r8 + 8]
48929e: nop 
4892a0: cmp rdx, rsi
4892a3: je 0x48924d
4892a5: mov rdx, qword ptr [rcx]
4892a8: add rcx, 8
4892ac: test rdx, rdx
4892af: jne 0x4892a0
4892b1: xor esi, esi
4892b3: nop dword ptr [rax + rax]
4892b8: mov rdx, rsi
4892bb: add rsi, 1
4892bf: cmp qword ptr [r8 + rsi*8], 0
4892c4: lea rcx, [rsi*8]
4892cc: jne 0x4892b8
4892ce: add rdx, 2
4892d2: cmp qword ptr [rdi + 0x388], rdx
4892d9: jbe 0x489683
4892df: mov qword ptr [r8 + rdx*8], 0
4892e7: mov rdx, qword ptr [rdi + 0x390]
4892ee: lea r8, [r14 + 0x2c0]
4892f5: mov qword ptr [rdx + rcx], r8
4892f9: test byte ptr [rip + 0x3a4c1], 2
489300: je 0x48924d
489306: nop word ptr cs:[rax + rax]
489310: call 0x488ad0
489315: jmp 0x48924d
48931a: nop word ptr [rax + rax]
489320: mov rdx, qword ptr [r15 + 0x30]
489324: mov rsi, qword ptr [r15 + 8]
489328: xor eax, eax
48932a: call 0x480f60
48932f: lea rdi, [rip + 0x26ed2]
489336: jmp 0x48920f
48933b: nop dword ptr [rax + rax]
489340: mov rdi, r14
489343: call 0x488670
489348: jmp 0x4891d1
48934d: nop dword ptr [rax]
489350: mov rdi, r14
489353: call 0x488670
489358: mov eax, dword ptr [rbx + 0x2c]
48935b: movdqu xmm1, xmmword ptr [rbx + 0x30]
489360: xor edi, edi
489362: lea rdx, [rbp - 0x50]
489366: lea rsi, [rip - 0xd3d]
48936d: mov qword ptr [rbp - 0x50], r14
489371: mov dword ptr [rbp - 0x48], eax
489374: movaps xmmword ptr [rbp - 0x40], xmm1
489378: call 0x4850c0
48937d: mov rdi, r14
489380: call 0x4884f0
489385: jmp 0x48903f
48938a: nop word ptr [rax + rax]
489390: test edx, edx
489392: je 0x489611
489398: mov r12d, edx
48939b: xor ecx, ecx
48939d: jmp 0x4893a7
48939f: nop 
4893a0: add ecx, 1
4893a3: cmp ecx, edx
4893a5: jae 0x489400
4893a7: mov rsi, qword ptr [r14 + 0x2c0]
4893ae: mov eax, ecx
4893b0: mov r15, qword ptr [rsi + rax*8]
4893b4: test byte ptr [r15 + 0x31c], 8
4893bc: jne 0x4893a0
4893be: cmp qword ptr [r15 + 0x438], 0
4893c6: je 0x4893a0
4893c8: mov esi, 1
4893cd: mov rdi, r15
4893d0: mov dword ptr [rbp - 0x54], ecx
4893d3: call 0x482530
4893d8: test byte ptr [r15 + 0x31d], 4
4893e0: mov ecx, dword ptr [rbp - 0x54]
4893e3: mov edx, dword ptr [r14 + 0x2c8]
4893ea: je 0x4893a0
4893ec: cmp edx, r12d
4893ef: cmove r12d, ecx
4893f3: add ecx, 1
4893f6: cmp ecx, edx
4893f8: jb 0x4893a7
4893fa: nop word ptr [rax + rax]
489400: add qword ptr [rip + 0x3a328], 1
489408: jne 0x489414
48940a: jmp 0x48961f
48940f: nop 
489410: add r12d, 1
489414: cmp r12d, edx
489417: jae 0x489009
48941d: mov rcx, qword ptr [r14 + 0x2c0]
489424: mov eax, r12d
489427: mov r15, qword ptr [rcx + rax*8]
48942b: movzx eax, word ptr [r15 + 0x31c]
489433: and ax, 0x408
489437: cmp ax, 0x400
48943b: jne 0x489410
48943d: cmp qword ptr [r15 + 0x438], 0
489445: je 0x489410
489447: and byte ptr [r15 + 0x31d], 0xfb
48944f: mov rdi, r15
489452: call qword ptr [rip + 0x37ce8]
489458: test byte ptr [r15 + 0x31d], 4
489460: jne 0x48970c
489466: mov edx, dword ptr [r14 + 0x2c8]
48946d: jmp 0x489410
48946f: nop 
489470: mov r15, qword ptr [rip + 0x37d09]
489477: cmp qword ptr [rip + 0x37ca9], 0
48947f: mov r14, qword ptr [rbx + 0x10]
489483: mov r12, r15
489486: jne 0x488c5f
48948c: jmp 0x4890b4
489491: nop dword ptr [rax]
489498: mov r10d, 1
48949e: jmp 0x488f8a
4894a3: nop dword ptr [rax + rax]
4894a8: mov edx, 1
4894ad: xor ecx, ecx
4894af: xor esi, esi
4894b1: jmp 0x4892d2
4894b6: nop word ptr cs:[rax + rax]
4894c0: test byte ptr [rip + 0x3a2f9], 0x40
4894c7: jne 0x489652
4894cd: test dword ptr [rbp - 0x54], 0x100
4894d4: je 0x489572
4894da: test byte ptr [r14 + 0x31c], 0x10
4894e2: je 0x48963c
4894e8: test r12d, r12d
4894eb: je 0x48957b
4894f1: test byte ptr [rip + 0x3a2c8], 0x40
4894f8: jne 0x4896e3
4894fe: mov byte ptr [r14 + 0x31f], 1
489506: test byte ptr [r14 + 0x31c], 0x10
48950e: jne 0x48957b
489510: mov rdi, r14
489513: call 0x4884f0
489518: jmp 0x48957b
48951a: nop word ptr [rax + rax]
489520: mov dword ptr [rbp - 0x58], 0
489527: jmp 0x488ef9
48952c: nop dword ptr [rax]
489530: xor esi, esi
489532: mov rdi, r14
489535: call 0x488ad0
48953a: jmp 0x488dca
48953f: nop 
489540: mov byte ptr [r14 + 0x320], 1
489548: jmp 0x488d46
48954d: nop dword ptr [rax]
489550: mov ecx, dword ptr [r14 + 0x318]
489557: mov rdx, qword ptr [r14 + 0x30]
48955b: lea rdi, [rip + 0x26c36]
489562: xor eax, eax
489564: mov rsi, qword ptr [r14 + 8]
489568: call 0x480f60
48956d: jmp 0x489056
489572: test r12d, r12d
489575: jne 0x48966d
48957b: mov rsi, qword ptr [rbx + 0x20]
48957f: xor edi, edi
489581: call 0x454800
489586: mov edi, dword ptr [rax + 0x18]
489589: test edi, edi
48958b: je 0x48905a
489591: lea rcx, [rip + 0x26ce0]
489598: mov edx, 0x230
48959d: lea rsi, [rip + 0x269ee]
4895a4: lea rdi, [rip + 0x26c1d]
4895ab: call 0x4032a0
4895b0: lea rax, [rdi + rdi]
4895b4: shl rdi, 4
4895b8: mov qword ptr [rbp - 0x80], r10
4895bc: mov qword ptr [rbp - 0x78], rsi
4895c0: mov qword ptr [rbp - 0x70], rax
4895c4: call 0x426410
4895c9: mov rsi, qword ptr [rbp - 0x78]
4895cd: mov r10, qword ptr [rbp - 0x80]
4895d1: test rax, rax
4895d4: mov r11, rax
4895d7: jne 0x488fbf
4895dd: lea rcx, [rip + 0x26a35]
4895e4: xor edx, edx
4895e6: mov edi, 0xc
4895eb: lea rsi, [rip + 0x220af]
4895f2: call 0x485060
4895f7: nop word ptr [rax + rax]
489600: xor r12d, r12d
489603: jmp 0x4891c0
489608: test r12b, r12b
48960b: je 0x489009
489611: add qword ptr [rip + 0x3a117], 1
489619: jne 0x489009
48961f: mov edi, 2
489624: lea rsi, [rip + 0x26c05]
48962b: xor eax, eax
48962d: call 0x4810c0
489632: mov edi, 0x7f
489637: call 0x4505c0
48963c: mov rdi, r14
48963f: call 0x488670
489644: test r12d, r12d
489647: je 0x489506
48964d: jmp 0x4894f1
489652: mov rdx, qword ptr [r14 + 0x30]
489656: mov rsi, qword ptr [r14 + 8]
48965a: lea rdi, [rip + 0x26b37]
489661: xor eax, eax
489663: call 0x480f60
489668: jmp 0x4894cd
48966d: test byte ptr [rip + 0x3a14c], 0x40
489674: jne 0x4896a2
489676: mov byte ptr [r14 + 0x31f], 1
48967e: jmp 0x48957b
489683: lea rcx, [rip + 0x26bde]
48968a: mov edx, 0x146
48968f: lea rsi, [rip + 0x268fc]
489696: lea rdi, [rip + 0x26995]
48969d: call 0x4032a0
4896a2: cmp byte ptr [r14 + 0x31f], 0
4896aa: jne 0x489676
4896ac: mov rdx, qword ptr [r14 + 0x30]
4896b0: mov rsi, qword ptr [r14 + 8]
4896b4: lea rdi, [rip + 0x269ae]
4896bb: xor eax, eax
4896bd: call 0x480f60
4896c2: jmp 0x489676
4896c4: lea rcx, [rip + 0x26c15]
4896cb: mov edx, 0xd3
4896d0: lea rsi, [rip + 0x268bb]
4896d7: lea rdi, [rip + 0x268d9]
4896de: call 0x4032a0
4896e3: cmp byte ptr [r14 + 0x31f], 0
4896eb: jne 0x4894fe
4896f1: mov rdx, qword ptr [r14 + 0x30]
4896f5: mov rsi, qword ptr [r14 + 8]
4896f9: lea rdi, [rip + 0x26969]
489700: xor eax, eax
489702: call 0x480f60
489707: jmp 0x4894fe
48970c: lea rcx, [rip + 0x26bad]
489713: mov edx, 0x1a6
489718: lea rsi, [rip + 0x26873]
48971f: lea rdi, [rip + 0x26928]
489726: call 0x4032a0
48972b: nop dword ptr [rax + rax]
489730: endbr64 
489734: mov rax, qword ptr [rdi + 0x110]
48973b: push r12
48973d: mov r12, rdi
489740: push rbp
489741: push rbx
489742: test rax, rax
489745: je 0x48977e
489747: mov rbp, qword ptr [rax + 8]
48974b: mov rax, qword ptr [rdi + 0x120]
489752: add rbp, qword ptr [rdi]
489755: mov rax, qword ptr [rax + 8]
489759: shr rax, 3
48975d: lea edx, [rax - 1]
489760: test eax, eax
489762: je 0x48977e
489764: lea rbx, [rbp + rdx*8]
489769: nop dword ptr [rax]
489770: call qword ptr [rbx]
489772: mov rax, rbx
489775: sub rbx, 8
489779: cmp rbp, rax
48977c: jne 0x489770
48977e: mov rdx, qword ptr [r12 + 0xa8]
489786: test rdx, rdx
489789: je 0x4897a0
48978b: mov rax, qword ptr [r12]
48978f: pop rbx
489790: add rax, qword ptr [rdx + 8]
489794: pop rbp
489795: pop r12
489797: jmp rax
489799: nop dword ptr [rax]
4897a0: pop rbx
4897a1: pop rbp
4897a2: pop r12
4897a4: ret 
4897a5: nop word ptr cs:[rax + rax]
4897b0: push rbp
4897b1: mov rax, rdi
4897b4: mov rbp, rsi
4897b7: push rbx
4897b8: sub rax, rdx
4897bb: mov rbx, rdx
4897be: sub rsp, 8
4897c2: mov rdx, qword ptr [rsi]
4897c5: cmp rax, rdx
4897c8: jb 0x4897f0
4897ca: mov rsi, qword ptr [rsi + 8]
4897ce: test rsi, rsi
4897d1: je 0x489840
4897d3: add rdx, rbx
4897d6: movzx ecx, cl
4897d9: call 0x4897b0
4897de: test al, al
4897e0: jne 0x48982d
4897e2: mov rdi, qword ptr [rbp]
4897e6: add rdi, rbx
4897e9: jmp 0x489844
4897eb: nop dword ptr [rax + rax]
4897f0: shl rax, 4
4897f4: add rax, rsi
4897f7: mov rdx, qword ptr [rax + 0x18]
4897fb: test rdx, rdx
4897fe: je 0x489824
489800: cmp qword ptr [rdx + 0x458], rdi
489807: jne 0x489899
48980d: mov rsi, qword ptr [rip + 0x39f1c]
489814: mov qword ptr [rax + 0x18], 0
48981c: lea rdx, [rsi + 1]
489820: mov qword ptr [rax + 0x10], rdx
489824: cmp qword ptr [rip + 0x39ae5], rdi
48982b: je 0x489844
48982d: add rsp, 8
489831: mov eax, 1
489836: pop rbx
489837: pop rbp
489838: ret 
489839: nop dword ptr [rax]
489840: test cl, cl
489842: jne 0x4898b8
489844: mov rax, qword ptr [rip + 0x39eed]
48984b: test rbx, rbx
48984e: lea rdx, [rbx - 1]
489852: lea rcx, [rax + 1]
489856: mov eax, 0
48985b: cmovne rcx, rax
48985f: sub rdi, rbx
489862: jmp 0x48987f
489864: nop dword ptr [rax]
489868: lea rsi, [rdx + rdi]
48986c: sub rdi, 1
489870: mov rax, rdi
489873: shl rax, 4
489877: cmp qword ptr [rbp + rax + 0x18], 0
48987d: jne 0x489890
48987f: cmp rcx, rdi
489882: jb 0x489868
489884: add rsp, 8
489888: xor eax, eax
48988a: pop rbx
48988b: pop rbp
48988c: ret 
48988d: nop dword ptr [rax]
489890: mov qword ptr [rip + 0x39a79], rsi
489897: jmp 0x48982d
489899: lea rcx, [rip + 0x26ca0]
4898a0: mov edx, 0x50
4898a5: lea rsi, [rip + 0x26a4c]
4898ac: lea rdi, [rip + 0x26a62]
4898b3: call 0x4032a0
4898b8: lea rcx, [rip + 0x26c81]
4898bf: mov edx, 0x3b
4898c4: lea rsi, [rip + 0x26a2d]
4898cb: lea rdi, [rip + 0x26a31]
4898d2: call 0x4032a0
4898d7: nop word ptr [rax + rax]
4898e0: push rbp
4898e1: lea rdx, [rip + 0x37898]
4898e8: mov rbp, rsp
4898eb: push r15
4898ed: push r14
4898ef: push r13
4898f1: push r12
4898f3: push rbx
4898f4: sub rsp, 0x88
4898fb: mov r15, qword ptr [rdi + 0x30]
4898ff: mov byte ptr [rbp - 0x83], sil
489906: lea rax, [r15 + r15*8]
48990a: shl rax, 4
48990e: lea rcx, [rdx + rax + 0x20]
489913: add rax, rdx
489916: mov qword ptr [rbp - 0xa8], rcx
48991d: mov qword ptr [rbp - 0x68], rax
489921: mov rax, qword ptr [rbp - 0x68]
489925: mov rbx, rsp
489928: mov dword ptr [rip + 0x397ae], 1
489932: mov qword ptr [rbp - 0x90], rsp
489939: mov r12d, dword ptr [rax + 8]
48993d: lea rdx, [r12 + 0xf]
489942: mov r11, r12
489945: mov rax, rdx
489948: shr rax, 4
48994c: shl rax, 4
489950: mov rcx, rax
489953: and rcx, 0xfffffffffffff000
48995a: sub rbx, rcx
48995d: mov rcx, rbx
489960: cmp rsp, rcx
489963: je 0x48997a
489965: sub rsp, 0x1000
48996c: or qword ptr [rsp + 0xff8], 0
489975: cmp rsp, rcx
489978: jne 0x489965
48997a: and eax, 0xfff
48997f: sub rsp, rax
489982: test rax, rax
489985: jne 0x489a10
48998b: mov rax, rdx
48998e: mov rcx, rsp
489991: mov r13, rsp
489994: shr rax, 4
489998: shl rax, 4
48999c: mov rdx, rax
48999f: and rdx, 0xfffffffffffff000
4899a6: sub rcx, rdx
4899a9: mov rdx, rcx
4899ac: cmp rsp, rdx
4899af: je 0x4899c6
4899b1: sub rsp, 0x1000
4899b8: or qword ptr [rsp + 0xff8], 0
4899c1: cmp rsp, rdx
4899c4: jne 0x4899b1
4899c6: and eax, 0xfff
4899cb: sub rsp, rax
4899ce: test rax, rax
4899d1: jne 0x489a1b
4899d3: lea rax, [r12*8 + 0xf]
4899db: mov rcx, rsp
4899de: mov rbx, rsp
4899e1: shr rax, 4
4899e5: shl rax, 4
4899e9: mov rdx, rax
4899ec: and rdx, 0xfffffffffffff000
4899f3: sub rcx, rdx
4899f6: mov rdx, rcx
4899f9: cmp rsp, rdx
4899fc: je 0x489a23
4899fe: sub rsp, 0x1000
489a05: or qword ptr [rsp + 0xff8], 0
489a0e: jmp 0x4899f9
489a10: or qword ptr [rsp + rax - 8], 0
489a16: jmp 0x48998b
489a1b: or qword ptr [rsp + rax - 8], 0
489a21: jmp 0x4899d3
489a23: and eax, 0xfff
489a28: sub rsp, rax
489a2b: test rax, rax
489a2e: jne 0x48a6e0
489a34: mov rax, qword ptr [rbp - 0x68]
489a38: mov r10, rsp
489a3b: mov rax, qword ptr [rax]
489a3e: test rax, rax
489a41: je 0x48a550
489a47: mov rcx, r10
489a4a: xor edx, edx
489a4c: nop dword ptr [rax]
489a50: mov dword ptr [rax + 0x3ec], edx
489a56: add rcx, 8
489a5a: add edx, 1
489a5d: mov qword ptr [rcx - 8], rax
489a61: mov rax, qword ptr [rax + 0x18]
489a65: test rax, rax
489a68: jne 0x489a50
489a6a: cmp r11d, edx
489a6d: jne 0x48a761
489a73: xor esi, esi
489a75: mov rdx, r12
489a78: mov rdi, r13
489a7b: mov qword ptr [rbp - 0x40], r10
489a7f: mov dword ptr [rbp - 0x38], r11d
489a83: call 0x401110
489a88: xor esi, esi
489a8a: mov rdx, r12
489a8d: mov rdi, rbx
489a90: call 0x401110
489a95: mov r11d, dword ptr [rbp - 0x38]
489a99: mov r10, qword ptr [rbp - 0x40]
489a9d: test r11d, r11d
489aa0: je 0x48a5f8
489aa6: movabs r12, 0x200000000
489ab0: xor esi, esi
489ab2: jmp 0x489ad4
489ab4: nop dword ptr [rax]
489ab8: mov r8, qword ptr [rcx + 0x3d0]
489abf: test r8, r8
489ac2: jne 0x489b98
489ac8: add esi, 1
489acb: cmp r11d, esi
489ace: jbe 0x489c55
489ad4: movsxd rax, esi
489ad7: cmp byte ptr [rbx + rax], 0
489adb: jne 0x489ac8
489add: movabs rdx, 0x3ffffffff
489ae7: mov rcx, qword ptr [r10 + rax*8]
489aeb: and rdx, qword ptr [rcx + 0x318]
489af2: cmp rdx, r12
489af5: je 0x489c20
489afb: mov byte ptr [r13 + rax], 1
489b01: mov byte ptr [rbx + rax], 1
489b05: mov rax, qword ptr [rcx + 0x3c8]
489b0c: mov dword ptr [rcx + 0x3ec], 0xffffffff
489b16: test rax, rax
489b19: je 0x489ab8
489b1b: lea rdx, [rax + 8]
489b1f: mov rax, qword ptr [rax + 8]
489b23: test rax, rax
489b26: jne 0x489b65
489b28: jmp 0x489ab8
489b2a: nop word ptr [rax + rax]
489b30: cmp r11d, eax
489b33: jbe 0x489b75
489b35: cmp byte ptr [r13 + rax], 0
489b3b: jne 0x489b54
489b3d: mov byte ptr [r13 + rax], 1
489b43: mov rax, qword ptr [rdx]
489b46: mov eax, dword ptr [rax + 0x3ec]
489b4c: lea edi, [rax - 1]
489b4f: cmp eax, esi
489b51: cmovle esi, edi
489b54: mov rax, qword ptr [rdx + 8]
489b58: add rdx, 8
489b5c: test rax, rax
489b5f: je 0x489ab8
489b65: movsxd rax, dword ptr [rax + 0x3ec]
489b6c: cmp eax, -1
489b6f: je 0x489b54
489b71: test eax, eax
489b73: jns 0x489b30
489b75: lea rcx, [rip + 0x269d4]
489b7c: mov edx, 0xdf
489b81: lea rsi, [rip + 0x26770]
489b88: lea rdi, [rip + 0x26841]
489b8f: call 0x4032a0
489b94: nop dword ptr [rax]
489b98: mov r9d, dword ptr [r8]
489b9b: test r9d, r9d
489b9e: je 0x489ac8
489ba4: xor edx, edx
489ba6: jmp 0x489be6
489ba8: nop dword ptr [rax + rax]
489bb0: cmp r11d, eax
489bb3: jbe 0x489bfd
489bb5: cmp byte ptr [r13 + rax], 0
489bbb: jne 0x489bda
489bbd: mov byte ptr [r13 + rax], 1
489bc3: mov eax, dword ptr [rdi + 0x3ec]
489bc9: cmp eax, esi
489bcb: jg 0x489bd0
489bcd: lea esi, [rax - 1]
489bd0: mov r8, qword ptr [rcx + 0x3d0]
489bd7: mov r9d, dword ptr [r8]
489bda: add edx, 1
489bdd: cmp edx, r9d
489be0: jae 0x489ac8
489be6: mov eax, edx
489be8: mov rdi, qword ptr [r8 + rax*8 + 8]
489bed: movsxd rax, dword ptr [rdi + 0x3ec]
489bf4: cmp eax, -1
489bf7: je 0x489bda
489bf9: test eax, eax
489bfb: jns 0x489bb0
489bfd: lea rcx, [rip + 0x2694c]
489c04: mov edx, 0xf8
489c09: lea rsi, [rip + 0x266e8]
489c10: lea rdi, [rip + 0x267e9]
489c17: call 0x4032a0
489c1c: nop dword ptr [rax]
489c20: cmp byte ptr [rcx + 0x31f], 0
489c27: jne 0x489afb
489c2d: mov rdx, qword ptr [rcx + 0x460]
489c34: test rdx, rdx
489c37: jne 0x489afb
489c3d: cmp byte ptr [r13 + rax], 0
489c43: jne 0x489afb
489c49: add esi, 1
489c4c: cmp r11d, esi
489c4f: ja 0x489ad4
489c55: test r15, r15
489c58: mov esi, r11d
489c5b: sete al
489c5e: sete dl
489c61: movzx edx, dl
489c64: movzx eax, al
489c67: add rdx, r13
489c6a: sub esi, eax
489c6c: test r15, r15
489c6f: jne 0x48a118
489c75: lea rdi, [r10 + 8]
489c79: mov ecx, 1
489c7e: mov dword ptr [rbp - 0x40], r11d
489c82: mov qword ptr [rbp - 0x38], r10
489c86: call 0x48a9f0
489c8b: mov byte ptr [rbp - 0x82], 1
489c92: mov r10, qword ptr [rbp - 0x38]
489c96: mov r11d, dword ptr [rbp - 0x40]
489c9a: xor r8d, r8d
489c9d: mov byte ptr [rbp - 0x48], 0
489ca1: mov r9d, 0xffffffff
489ca7: mov rbx, r8
489caa: mov byte ptr [rbp - 0x81], 0
489cb1: mov r8, r13
489cb4: mov dword ptr [rbp - 0x50], 0
489cbb: mov dword ptr [rbp - 0x38], r11d
489cbf: mov qword ptr [rbp - 0x40], r10
489cc3: jmp 0x489d5c
489cc8: nop dword ptr [rax + rax]
489cd0: cmp dl, 2
489cd3: jne 0x48a704
489cd9: cmp byte ptr [r12 + 0x31f], 0
489ce2: jne 0x48a704
489ce8: test al, 8
489cea: je 0x489d32
489cec: test byte ptr [rip + 0x39acd], 2
489cf3: jne 0x489fb5
489cf9: cmp qword ptr [r12 + 0x110], 0
489d02: je 0x489f70
489d08: mov rdx, r12
489d0b: lea rsi, [rip - 0x5e2]
489d12: xor edi, edi
489d14: mov dword ptr [rbp - 0x58], r9d
489d18: mov qword ptr [rbp - 0x48], r8
489d1c: call 0x4850c0
489d21: mov r9d, dword ptr [rbp - 0x58]
489d25: mov r8, qword ptr [rbp - 0x48]
489d29: movzx eax, byte ptr [r12 + 0x31c]
489d32: or byte ptr [r12 + 0x31d], 0x20
489d3b: and eax, 0x10
489d3e: cmp al, 1
489d40: mov byte ptr [rbp - 0x48], 1
489d44: sbb dword ptr [rbp - 0x50], -1
489d48: cmp r9d, r14d
489d4b: cmova r9d, r14d
489d4f: add rbx, 1
489d53: cmp dword ptr [rbp - 0x38], ebx
489d56: jbe 0x489f42
489d5c: mov rax, qword ptr [rbp - 0x40]
489d60: mov r14d, ebx
489d63: mov r12, qword ptr [rax + rbx*8]
489d67: cmp r15, qword ptr [r12 + 0x30]
489d6c: jne 0x48a723
489d72: movzx eax, byte ptr [r12 + 0x31c]
489d7b: mov edx, eax
489d7d: and edx, 3
489d80: cmp byte ptr [r8 + rbx], 0
489d85: je 0x489cd0
489d8b: cmp dl, 2
489d8e: jne 0x489d4f
489d90: cmp qword ptr [r12 + 0x2c0], 0
489d99: je 0x489fe0
489d9f: mov rax, qword ptr [r12 + 0x390]
489da7: mov qword ptr [rbp - 0x60], 0
489daf: mov esi, 1
489db4: mov rdx, qword ptr [rax]
489db7: mov qword ptr [rbp - 0x58], rax
489dbb: test rdx, rdx
489dbe: je 0x489f0c
489dc4: mov rax, qword ptr [rbp - 0x58]
489dc8: lea r13, [r12 + 0x2d0]
489dd0: xor r10d, r10d
489dd3: lea rcx, [rax + 8]
489dd7: mov rax, rdx
489dda: mov rdi, rcx
489ddd: jmp 0x489e08
489ddf: nop 
489de0: cmp r15, qword ptr [rax - 0x290]
489de7: jne 0x48a7a5
489ded: cmp dword ptr [rax + 0x12c], -1
489df4: je 0x489e0d
489df6: mov rax, qword ptr [rdi]
489df9: add rdi, 8
489dfd: mov r10d, 1
489e03: test rax, rax
489e06: je 0x489e1d
489e08: cmp rax, r13
489e0b: jne 0x489de0
489e0d: mov rax, qword ptr [rdi]
489e10: add rdi, 8
489e14: add rsi, 1
489e18: test rax, rax
489e1b: jne 0x489e08
489e1d: test r10b, r10b
489e20: je 0x489f8d
489e26: lea rax, [r12 + 0x368]
489e2e: mov qword ptr [rbp - 0x70], rax
489e32: cmp rax, qword ptr [rbp - 0x58]
489e36: je 0x48a020
489e3c: mov qword ptr [rbp - 0x78], 4
489e44: mov r11, rax
489e47: cmp rsi, 3
489e4b: ja 0x48a020
489e51: mov qword ptr [rbp - 0x80], r15
489e55: xor esi, esi
489e57: mov r15, qword ptr [rbp - 0x60]
489e5b: jmp 0x489e80
489e5d: nop dword ptr [rax]
489e60: test r15, r15
489e63: je 0x489e74
489e65: mov qword ptr [rax], r15
489e68: add rsi, 1
489e6c: lea rax, [r11 + rdi + 8]
489e71: xor r15d, r15d
489e74: mov rdx, qword ptr [rcx]
489e77: add rcx, 8
489e7b: test rdx, rdx
489e7e: je 0x489eb3
489e80: lea rdi, [rsi*8]
489e88: lea rax, [r11 + rdi]
489e8c: cmp rdx, r13
489e8f: je 0x489e9a
489e91: cmp dword ptr [rdx + 0x12c], -1
489e98: jne 0x489e60
489e9a: add rcx, 8
489e9e: mov qword ptr [rax], rdx
489ea1: add rsi, 1
489ea5: lea rax, [r11 + rdi + 8]
489eaa: mov rdx, qword ptr [rcx - 8]
489eae: test rdx, rdx
489eb1: jne 0x489e80
489eb3: mov r15, qword ptr [rbp - 0x80]
489eb7: mov rdi, qword ptr [rbp - 0x58]
489ebb: mov qword ptr [rax], 0
489ec2: mov qword ptr [r12 + 0x390], r11
489eca: cmp qword ptr [rbp - 0x70], rdi
489ece: je 0x48a0a0
489ed4: mov dword ptr [rbp - 0x60], r9d
489ed8: mov qword ptr [rbp - 0x58], r8
489edc: call 0x482790
489ee1: mov ecx, 0
489ee6: mov r8, qword ptr [rbp - 0x58]
489eea: mov r9d, dword ptr [rbp - 0x60]
489eee: test eax, eax
489ef0: movzx eax, byte ptr [rbp - 0x81]
489ef7: cmovne eax, ecx
489efa: mov byte ptr [rbp - 0x81], al
489f00: mov rax, qword ptr [rbp - 0x78]
489f04: mov qword ptr [r12 + 0x388], rax
489f0c: mov rax, qword ptr [r12 + 0x2e0]
489f14: test rax, rax
489f17: je 0x489f2e
489f19: cmp dword ptr [rax + 0x3ec], -1
489f20: je 0x489f2e
489f22: mov qword ptr [r12 + 0x2e0], 0
489f2e: cmp r9d, r14d
489f31: cmova r9d, r14d
489f35: add rbx, 1
489f39: cmp dword ptr [rbp - 0x38], ebx
489f3c: ja 0x489d5c
489f42: cmp byte ptr [rbp - 0x48], 0
489f46: mov r10, qword ptr [rbp - 0x40]
489f4a: mov r13, r8
489f4d: jne 0x48a141
489f53: cmp dword ptr [rip + 0x39186], 2
489f5a: jne 0x48a6eb
489f60: mov rsp, qword ptr [rbp - 0x90]
489f67: jmp 0x489921
489f6c: nop dword ptr [rax]
489f70: cmp qword ptr [r12 + 0xa8], 0
489f79: jne 0x489d08
489f7f: movzx eax, byte ptr [r12 + 0x31c]
489f88: jmp 0x489d32
489f8d: cmp qword ptr [rbp - 0x60], 0
489f92: je 0x489f0c
489f98: mov qword ptr [r12 + 0x2c0], 0
489fa4: mov dword ptr [r12 + 0x2c8], 0
489fb0: jmp 0x489f0c
489fb5: mov rsi, qword ptr [r12 + 8]
489fba: mov rdx, r15
489fbd: xor eax, eax
489fbf: mov dword ptr [rbp - 0x58], r9d
489fc3: lea rdi, [rip + 0x26389]
489fca: mov qword ptr [rbp - 0x48], r8
489fce: call 0x480f60
489fd3: mov r9d, dword ptr [rbp - 0x58]
489fd7: mov r8, qword ptr [rbp - 0x48]
489fdb: jmp 0x489cf9
489fe0: mov rax, qword ptr [r12 + 0x3c8]
489fe8: mov qword ptr [rbp - 0x60], rax
489fec: test rax, rax
489fef: jne 0x48a0ac
489ff5: mov rax, qword ptr [r12 + 0x390]
489ffd: mov esi, 1
48a002: mov rdx, qword ptr [rax]
48a005: mov qword ptr [rbp - 0x58], rax
48a009: test rdx, rdx
48a00c: jne 0x489dc4
48a012: jmp 0x489f0c
48a017: nop word ptr [rax + rax]
48a020: mov rax, qword ptr [r12 + 0x388]
48a028: mov dword ptr [rbp - 0x88], r9d
48a02f: mov qword ptr [rbp - 0xa0], r8
48a036: lea rdi, [rax*8]
48a03e: mov qword ptr [rbp - 0x98], rcx
48a045: mov byte ptr [rbp - 0x84], r10b
48a04c: mov qword ptr [rbp - 0x80], rdx
48a050: mov qword ptr [rbp - 0x78], rax
48a054: call 0x426410
48a059: mov rdx, qword ptr [rbp - 0x80]
48a05d: movzx r10d, byte ptr [rbp - 0x84]
48a065: test rax, rax
48a068: mov rcx, qword ptr [rbp - 0x98]
48a06f: mov r11, rax
48a072: mov r8, qword ptr [rbp - 0xa0]
48a079: mov r9d, dword ptr [rbp - 0x88]
48a080: jne 0x489e51
48a086: lea rcx, [rip + 0x25f8c]
48a08d: xor edx, edx
48a08f: mov edi, 0xc
48a094: lea rsi, [rip + 0x262e5]
48a09b: call 0x485060
48a0a0: mov byte ptr [rbp - 0x81], r10b
48a0a7: jmp 0x489f00
48a0ac: cmp qword ptr [rax + 8], 0
48a0b1: mov rsi, rax
48a0b4: je 0x48a5b5
48a0ba: mov eax, 1
48a0bf: nop 
48a0c0: lea edx, [rax + 1]
48a0c3: mov ecx, eax
48a0c5: cmp qword ptr [rsi + rdx*8], 0
48a0ca: mov rax, rdx
48a0cd: jne 0x48a0c0
48a0cf: lea edx, [rcx + 2]
48a0d2: shl rdx, 3
48a0d6: mov dword ptr [r12 + 0x2c8], eax
48a0de: lea rax, [r12 + 0x2c0]
48a0e6: add rdx, qword ptr [rbp - 0x60]
48a0ea: mov qword ptr [rbp - 0x60], rax
48a0ee: mov rax, qword ptr [r12 + 0x390]
48a0f6: mov qword ptr [r12 + 0x2c0], rdx
48a0fe: mov rdx, qword ptr [rax]
48a101: mov qword ptr [rbp - 0x58], rax
48a105: test rdx, rdx
48a108: je 0x489f98
48a10e: mov esi, 2
48a113: jmp 0x489dc4
48a118: mov rdi, r10
48a11b: mov ecx, 1
48a120: mov dword ptr [rbp - 0x40], r11d
48a124: mov qword ptr [rbp - 0x38], r10
48a128: call 0x48a9f0
48a12d: mov byte ptr [rbp - 0x82], 0
48a134: mov r10, qword ptr [rbp - 0x38]
48a138: mov r11d, dword ptr [rbp - 0x40]
48a13c: jmp 0x489c9a
48a141: mov rsi, r15
48a144: xor edi, edi
48a146: mov qword ptr [rbp - 0x60], r10
48a14a: mov dword ptr [rbp - 0x40], r9d
48a14e: call 0x454800
48a153: mov dword ptr [rax + 0x18], 2
48a15a: mov rbx, rax
48a15d: mov qword ptr [rbp - 0x58], rax
48a161: call 0x4547f0
48a166: nop 
48a167: mov ecx, dword ptr [rbp - 0x50]
48a16a: mov r11d, dword ptr [rbp - 0x38]
48a16e: mov r9d, dword ptr [rbp - 0x40]
48a172: mov r10, qword ptr [rbp - 0x60]
48a176: test ecx, ecx
48a178: jne 0x48a580
48a17e: mov eax, dword ptr fs:[0x18]
48a186: test eax, eax
48a188: jne 0x48a62a
48a18e: cmp qword ptr [rip + 0x35d72], 0
48a196: je 0x48a1bc
48a198: lea rdi, [rip + 0x36f01]
48a19f: mov qword ptr [rbp - 0x50], r10
48a1a3: mov dword ptr [rbp - 0x40], r9d
48a1a7: mov dword ptr [rbp - 0x38], r11d
48a1ab: call 0
48a1b0: mov r10, qword ptr [rbp - 0x50]
48a1b4: mov r9d, dword ptr [rbp - 0x40]
48a1b8: mov r11d, dword ptr [rbp - 0x38]
48a1bc: cmp r11d, r9d
48a1bf: jbe 0x48a742
48a1c5: mov eax, r9d
48a1c8: lea edx, [r11 - 1]
48a1cc: mov byte ptr [rbp - 0x38], 0
48a1d0: lea rbx, [r13 + rax]
48a1d5: lea r12, [r10 + rax*8]
48a1d9: sub edx, r9d
48a1dc: mov qword ptr [rbp - 0x60], r15
48a1e0: lea rax, [r13 + rax + 1]
48a1e5: mov qword ptr [rbp - 0x40], 0
48a1ed: mov qword ptr [rbp - 0x50], 0
48a1f5: lea r13, [rdx + rax]
48a1f9: jmp 0x48a211
48a1fb: nop dword ptr [rax + rax]
48a200: add rbx, 1
48a204: add r12, 8
48a208: cmp r13, rbx
48a20b: je 0x48a3a1
48a211: cmp byte ptr [rbx], 0
48a214: jne 0x48a200
48a216: mov r14, qword ptr [r12]
48a21a: movzx eax, byte ptr [r14 + 0x31c]
48a222: mov edx, eax
48a224: and edx, 3
48a227: cmp dl, 2
48a22a: jne 0x48a81d
48a230: cmp qword ptr [r14 + 0x438], 0
48a238: jne 0x48a49a
48a23e: cmp byte ptr [rbp - 0x83], 0
48a245: je 0x48a284
48a247: cmp qword ptr [rip + 0x35cb9], 0
48a24f: je 0x48a25d
48a251: mov rdi, qword ptr [rbp - 0xa8]
48a258: call 0
48a25d: mov rax, qword ptr [rbp - 0x68]
48a261: mov rax, qword ptr [rax + 0x48]
48a265: test rax, rax
48a268: jne 0x48a436
48a26e: cmp qword ptr [rip + 0x35cfa], 0
48a276: je 0x48a284
48a278: mov rdi, qword ptr [rbp - 0xa8]
48a27f: call 0
48a284: mov rdi, r14
48a287: call 0x48af10
48a28c: cmp byte ptr [rbp - 0x82], 0
48a293: je 0x48a7fe
48a299: mov rdx, qword ptr [r14 + 0x20]
48a29d: test rdx, rdx
48a2a0: je 0x48a7df
48a2a6: mov rax, qword ptr [r14 + 0x18]
48a2aa: sub dword ptr [rip + 0x36ed7], 1
48a2b1: mov qword ptr [rdx + 0x18], rax
48a2b5: test rax, rax
48a2b8: je 0x48a2be
48a2ba: mov qword ptr [rax + 0x20], rdx
48a2be: mov rdi, qword ptr [r14 + 0x2e8]
48a2c5: call 0x426a00
48a2ca: mov rdi, qword ptr [r14 + 0x348]
48a2d1: cmp rdi, -1
48a2d5: je 0x48a2dc
48a2d7: call 0x426a00
48a2dc: mov rdi, qword ptr [r14 + 0x3d0]
48a2e3: call 0x426a00
48a2e8: test byte ptr [rip + 0x394d1], 0x40
48a2ef: jne 0x48a47f
48a2f5: mov rdi, qword ptr [r14 + 8]
48a2f9: call 0x426a00
48a2fe: mov r15, qword ptr [r14 + 0x38]
48a302: jmp 0x48a30d
48a304: nop dword ptr [rax]
48a308: test r15, r15
48a30b: je 0x48a325
48a30d: mov rdi, r15
48a310: mov r15, qword ptr [r15 + 8]
48a314: mov eax, dword ptr [rdi + 0x10]
48a317: test eax, eax
48a319: jne 0x48a308
48a31b: call 0x426a00
48a320: test r15, r15
48a323: jne 0x48a30d
48a325: mov rdi, qword ptr [r14 + 0x3c8]
48a32c: call 0x426a00
48a331: mov rdi, qword ptr [r14 + 0x390]
48a338: lea rax, [r14 + 0x368]
48a33f: cmp rdi, rax
48a342: je 0x48a349
48a344: call 0x426a00
48a349: cmp byte ptr [r14 + 0x31c], 0
48a351: js 0x48a425
48a357: mov rdi, qword ptr [r14 + 0x328]
48a35e: cmp rdi, -1
48a362: je 0x48a369
48a364: call 0x426a00
48a369: mov rdi, qword ptr [r14 + 0x3b8]
48a370: cmp rdi, -1
48a374: je 0x48a37b
48a376: call 0x426a00
48a37b: cmp r14, qword ptr [rip + 0x394d6]
48a382: je 0x48a415
48a388: mov rdi, r14
48a38b: add rbx, 1
48a38f: add r12, 8
48a393: call 0x426a00
48a398: cmp r13, rbx
48a39b: jne 0x48a211
48a3a1: cmp qword ptr [rip + 0x35bc7], 0
48a3a9: mov r15, qword ptr [rbp - 0x60]
48a3ad: je 0x48a3bb
48a3af: lea rdi, [rip + 0x36cea]
48a3b6: call 0
48a3bb: cmp byte ptr [rbp - 0x38], 0
48a3bf: je 0x48a3f1
48a3c1: mov rax, qword ptr [rip + 0x39368]
48a3c8: add rax, 1
48a3cc: mov qword ptr [rip + 0x3935d], rax
48a3d3: je 0x48a7c4
48a3d9: mov rax, qword ptr [rbp - 0x40]
48a3dd: cmp qword ptr [rip + 0x38f1c], rax
48a3e4: jne 0x48a3f1
48a3e6: mov rax, qword ptr [rbp - 0x50]
48a3ea: mov qword ptr [rip + 0x38f0f], rax
48a3f1: mov rax, qword ptr [rbp - 0x68]
48a3f5: cmp qword ptr [rax], 0
48a3f9: je 0x48a6c0
48a3ff: mov rbx, qword ptr [rbp - 0x58]
48a403: mov dword ptr [rbx + 0x18], 0
48a40a: call 0x4547f0
48a40f: nop 
48a410: jmp 0x489f53
48a415: mov qword ptr [rip + 0x39438], 0
48a420: jmp 0x48a388
48a425: mov rdi, qword ptr [r14 + 0x2a8]
48a42c: call 0x426a00
48a431: jmp 0x48a357
48a436: mov rcx, qword ptr [rbp - 0x68]
48a43a: mov rdx, qword ptr [rcx + 0x50]
48a43e: test rdx, rdx
48a441: je 0x48a26e
48a447: shl rdx, 5
48a44b: add rdx, rax
48a44e: jmp 0x48a45d
48a450: add rax, 0x20
48a454: cmp rax, rdx
48a457: je 0x48a26e
48a45d: cmp qword ptr [rax + 8], 0
48a462: je 0x48a450
48a464: cmp r14, qword ptr [rax + 0x18]
48a468: jne 0x48a450
48a46a: mov qword ptr [rax + 8], 0
48a472: mov dword ptr [rax], 0
48a478: sub qword ptr [rcx + 0x58], 1
48a47d: jmp 0x48a450
48a47f: mov rdx, qword ptr [r14 + 0x30]
48a483: mov rsi, qword ptr [r14 + 8]
48a487: lea rdi, [rip + 0x25fda]
48a48e: xor eax, eax
48a490: call 0x480f60
48a495: jmp 0x48a2f5
48a49a: mov rsi, qword ptr [rip + 0x3927f]
48a4a1: test rsi, rsi
48a4a4: je 0x48a4ce
48a4a6: shr al, 3
48a4a9: mov rdi, qword ptr [r14 + 0x458]
48a4b0: xor edx, edx
48a4b2: mov ecx, eax
48a4b4: and ecx, 1
48a4b7: call 0x4897b0
48a4bc: test al, al
48a4be: jne 0x48a4ce
48a4c0: mov rax, qword ptr [rip + 0x39271]
48a4c7: mov qword ptr [rip + 0x38e42], rax
48a4ce: mov rax, qword ptr [r14 + 0x450]
48a4d5: movzx ecx, byte ptr [rbp - 0x48]
48a4d9: lea rdx, [rax + 1]
48a4dd: mov byte ptr [rbp - 0x38], cl
48a4e0: cmp rdx, 1
48a4e4: jbe 0x48a23e
48a4ea: mov rcx, qword ptr [rbp - 0x50]
48a4ee: test rcx, rcx
48a4f1: je 0x48a557
48a4f3: cmp rax, rcx
48a4f6: je 0x48a557
48a4f8: mov rsi, qword ptr [rbp - 0x40]
48a4fc: mov rdx, rax
48a4ff: sub rdx, qword ptr [r14 + 0x438]
48a506: cmp rdx, rsi
48a509: je 0x48a85f
48a50f: mov rcx, qword ptr [rip + 0x38dea]
48a516: cmp rcx, rsi
48a519: je 0x48a840
48a51f: cmp rax, rcx
48a522: je 0x48a780
48a528: movzx ecx, byte ptr [rbp - 0x48]
48a52c: mov byte ptr [rbp - 0x38], cl
48a52f: cmp rax, qword ptr [rbp - 0x40]
48a533: jbe 0x48a23e
48a539: mov qword ptr [rbp - 0x40], rax
48a53d: mov qword ptr [rbp - 0x50], rdx
48a541: jmp 0x48a23e
48a546: nop word ptr cs:[rax + rax]
48a550: xor edx, edx
48a552: jmp 0x489a6a
48a557: mov rcx, rax
48a55a: sub rcx, qword ptr [r14 + 0x438]
48a561: cmp qword ptr [rbp - 0x40], 0
48a566: mov qword ptr [rbp - 0x50], rcx
48a56a: movzx ecx, byte ptr [rbp - 0x48]
48a56e: mov byte ptr [rbp - 0x38], cl
48a571: jne 0x48a23e
48a577: mov qword ptr [rbp - 0x40], rax
48a57b: jmp 0x48a23e
48a580: mov rax, qword ptr [rbp - 0x68]
48a584: mov r8, qword ptr [rax + 0x10]
48a588: mov esi, dword ptr [r8 + 8]
48a58c: mov eax, esi
48a58e: jmp 0x48a5a8
48a590: mov rbx, qword ptr [r8]
48a593: lea ecx, [rax - 1]
48a596: mov rdx, rcx
48a599: mov rcx, qword ptr [rbx + rcx*8]
48a59d: test byte ptr [rcx + 0x31d], 0x20
48a5a4: je 0x48a5c4
48a5a6: mov eax, edx
48a5a8: test eax, eax
48a5aa: jne 0x48a590
48a5ac: mov dword ptr [r8 + 8], eax
48a5b0: jmp 0x48a17e
48a5b5: mov edx, 0x10
48a5ba: mov eax, 1
48a5bf: jmp 0x48a0d6
48a5c4: mov ecx, dword ptr [rbp - 0x50]
48a5c7: lea edx, [rax + rcx]
48a5ca: cmp esi, edx
48a5cc: je 0x48a5ac
48a5ce: xor edx, edx
48a5d0: xor edi, edi
48a5d2: mov rcx, qword ptr [rbx + rdx*8]
48a5d6: test byte ptr [rcx + 0x31d], 0x20
48a5dd: jne 0x48a5ec
48a5df: cmp edi, edx
48a5e1: je 0x48a5e9
48a5e3: mov esi, edi
48a5e5: mov qword ptr [rbx + rsi*8], rcx
48a5e9: add edi, 1
48a5ec: add rdx, 1
48a5f0: cmp eax, edx
48a5f2: ja 0x48a5d2
48a5f4: mov eax, edi
48a5f6: jmp 0x48a5ac
48a5f8: test r15, r15
48a5fb: sete sil
48a5ff: sete dl
48a602: movzx edx, dl
48a605: movzx esi, sil
48a609: add rdx, r13
48a60c: neg esi
48a60e: test r15, r15
48a611: jne 0x48a793
48a617: lea rdi, [r10 + 8]
48a61b: mov ecx, 1
48a620: call 0x48a9f0
48a625: jmp 0x489f53
48a62a: mov edx, dword ptr [rbp - 0x50]
48a62d: test edx, edx
48a62f: jne 0x48a654
48a631: cmp byte ptr [rbp - 0x81], 0
48a638: jne 0x48a654
48a63a: mov rax, qword ptr [rip + 0x391d7]
48a641: test rax, rax
48a644: je 0x48a18e
48a64a: cmp qword ptr [rax], 0
48a64e: je 0x48a18e
48a654: mov qword ptr [rbp - 0x50], r10
48a658: mov dword ptr [rbp - 0x40], r9d
48a65c: mov dword ptr [rbp - 0x38], r11d
48a660: call qword ptr [rip + 0x39162]
48a666: mov rbx, qword ptr [rip + 0x391ab]
48a66d: mov r11d, dword ptr [rbp - 0x38]
48a671: mov r9d, dword ptr [rbp - 0x40]
48a675: mov r10, qword ptr [rbp - 0x50]
48a679: test rbx, rbx
48a67c: je 0x48a18e
48a682: mov rax, qword ptr [rbx]
48a685: test rax, rax
48a688: je 0x48a18e
48a68e: mov r12d, r11d
48a691: mov r14d, r9d
48a694: sub rax, 1
48a698: mov qword ptr [rbp - 0x38], r10
48a69c: mov qword ptr [rbx], rax
48a69f: mov rdi, qword ptr [rbx + rax*8 + 8]
48a6a4: call 0x426a00
48a6a9: mov rax, qword ptr [rbx]
48a6ac: mov r10, qword ptr [rbp - 0x38]
48a6b0: test rax, rax
48a6b3: jne 0x48a694
48a6b5: mov r11d, r12d
48a6b8: mov r9d, r14d
48a6bb: jmp 0x48a18e
48a6c0: mov rax, qword ptr [rip + 0x36a61]
48a6c7: sub rax, 1
48a6cb: cmp rax, r15
48a6ce: jne 0x48a3ff
48a6d4: mov qword ptr [rip + 0x36a4d], r15
48a6db: jmp 0x48a3ff
48a6e0: or qword ptr [rsp + rax - 8], 0
48a6e6: jmp 0x489a34
48a6eb: mov dword ptr [rip + 0x389eb], 0
48a6f5: lea rsp, [rbp - 0x28]
48a6f9: pop rbx
48a6fa: pop r12
48a6fc: pop r13
48a6fe: pop r14
48a700: pop r15
48a702: pop rbp
48a703: ret 
48a704: lea rcx, [rip + 0x25e45]
48a70b: mov edx, 0x11a
48a710: lea rsi, [rip + 0x25be1]
48a717: lea rdi, [rip + 0x25d12]
48a71e: call 0x4032a0
48a723: lea rcx, [rip + 0x25e26]
48a72a: mov edx, 0x116
48a72f: lea rsi, [rip + 0x25bc2]
48a736: lea rdi, [rip + 0x25c03]
48a73d: call 0x4032a0
48a742: cmp qword ptr [rip + 0x35826], 0
48a74a: je 0x48a3f1
48a750: lea rdi, [rip + 0x36949]
48a757: call 0
48a75c: jmp 0x48a3f1
48a761: lea rcx, [rip + 0x25de8]
48a768: mov edx, 0xb5
48a76d: lea rsi, [rip + 0x25b84]
48a774: lea rdi, [rip + 0x25bb6]
48a77b: call 0x4032a0
48a780: movzx eax, byte ptr [rbp - 0x48]
48a784: mov qword ptr [rip + 0x38b75], rdx
48a78b: mov byte ptr [rbp - 0x38], al
48a78e: jmp 0x48a23e
48a793: mov ecx, 1
48a798: mov rdi, r10
48a79b: call 0x48a9f0
48a7a0: jmp 0x489f53
48a7a5: lea rcx, [rip + 0x25da4]
48a7ac: mov edx, 0x174
48a7b1: lea rsi, [rip + 0x25b40]
48a7b8: lea rdi, [rip + 0x25bae]
48a7bf: call 0x4032a0
48a7c4: mov edi, 2
48a7c9: lea rsi, [rip + 0x25cc0]
48a7d0: call 0x4810c0
48a7d5: mov edi, 0x7f
48a7da: call 0x4505c0
48a7df: lea rcx, [rip + 0x25d6a]
48a7e6: mov edx, 0x2bc
48a7eb: lea rsi, [rip + 0x25b06]
48a7f2: lea rdi, [rip + 0x25ba9]
48a7f9: call 0x4032a0
48a7fe: lea rcx, [rip + 0x25d4b]
48a805: mov edx, 0x2bb
48a80a: lea rsi, [rip + 0x25ae7]
48a811: lea rdi, [rip + 0x1fbd1]
48a818: call 0x4032a0
48a81d: lea rcx, [rip + 0x25d2c]
48a824: mov edx, 0x22f
48a829: lea rsi, [rip + 0x25ac8]
48a830: lea rdi, [rip + 0x25b51]
48a837: call 0x4032a0
48a83c: nop dword ptr [rax]
48a840: mov rcx, qword ptr [rbp - 0x50]
48a844: mov qword ptr [rbp - 0x40], rax
48a848: movzx eax, byte ptr [rbp - 0x48]
48a84c: mov qword ptr [rbp - 0x50], rdx
48a850: mov qword ptr [rip + 0x38aa9], rcx
48a857: mov byte ptr [rbp - 0x38], al
48a85a: jmp 0x48a23e
48a85f: mov qword ptr [rbp - 0x40], rax
48a863: movzx eax, byte ptr [rbp - 0x48]
48a867: mov byte ptr [rbp - 0x38], al
48a86a: jmp 0x48a23e
48a86f: nop 
48a870: endbr64 
48a874: movabs rcx, 0x200000000
48a87e: mov eax, dword ptr [rdi + 0x318]
48a884: lea edx, [rax - 1]
48a887: movabs rax, 0x3ffffffff
48a891: mov dword ptr [rdi + 0x318], edx
48a897: and rax, qword ptr [rdi + 0x318]
48a89e: cmp rax, rcx
48a8a1: jne 0x48a8ca
48a8a3: mov eax, dword ptr [rip + 0x38837]
48a8a9: test eax, eax
48a8ab: jne 0x48a8c0
48a8ad: movzx esi, sil
48a8b1: jmp 0x4898e0
48a8b6: nop word ptr cs:[rax + rax]
48a8c0: mov dword ptr [rip + 0x38816], 2
48a8ca: test byte ptr [rip + 0x38eef], 0x40
48a8d1: jne 0x48a8d8
48a8d3: ret 
48a8d4: nop dword ptr [rax]
48a8d8: mov rsi, qword ptr [rdi + 8]
48a8dc: xor eax, eax
48a8de: lea rdi, [rip + 0x25c2b]
48a8e5: jmp 0x480f60
48a8ea: nop word ptr [rax + rax]
48a8f0: endbr64 
48a8f4: cmp qword ptr [rip + 0x3560c], 0
48a8fc: push rbp
48a8fd: mov rbp, rdi
48a900: je 0x48a90e
48a902: lea rdi, [rip + 0x367d7]
48a909: call 0
48a90e: cmp byte ptr [rbp + 0x31f], 0
48a915: jne 0x48a962
48a917: mov edx, dword ptr [rbp + 0x318]
48a91d: test edx, edx
48a91f: je 0x48a9b8
48a925: movabs rax, 0x3ffffffff
48a92f: sub edx, 1
48a932: movabs rcx, 0x200000000
48a93c: mov dword ptr [rbp + 0x318], edx
48a942: and rax, qword ptr [rbp + 0x318]
48a949: cmp rax, rcx
48a94c: jne 0x48a98a
48a94e: mov eax, dword ptr [rip + 0x3878c]
48a954: test eax, eax
48a956: jne 0x48a980
48a958: xor esi, esi
48a95a: mov rdi, rbp
48a95d: call 0x4898e0
48a962: cmp qword ptr [rip + 0x35606], 0
48a96a: je 0x48a9b0
48a96c: lea rdi, [rip + 0x3676d]
48a973: pop rbp
48a974: jmp 0
48a979: nop dword ptr [rax]
48a980: mov dword ptr [rip + 0x38756], 2
48a98a: test byte ptr [rip + 0x38e2f], 0x40
48a991: je 0x48a962
48a993: mov rsi, qword ptr [rbp + 8]
48a997: lea rdi, [rip + 0x25b72]
48a99e: xor eax, eax
48a9a0: call 0x480f60
48a9a5: jmp 0x48a962
48a9a7: nop word ptr [rax + rax]
48a9b0: pop rbp
48a9b1: ret 
48a9b2: nop word ptr [rax + rax]
48a9b8: cmp qword ptr [rip + 0x355b0], 0
48a9c0: je 0x48a9ce
48a9c2: lea rdi, [rip + 0x36717]
48a9c9: call 0
48a9ce: mov rsi, qword ptr [rbp + 8]
48a9d2: lea rcx, [rip + 0x259de]
48a9d9: xor edx, edx
48a9db: xor edi, edi
48a9dd: call 0x485060
48a9e2: nop word ptr cs:[rax + rax]
48a9ec: nop dword ptr [rax]
48a9f0: endbr64 
48a9f4: push rbp
48a9f5: mov rbp, rsp
48a9f8: push r15
48a9fa: push r14
48a9fc: push r13
48a9fe: push r12
48aa00: push rbx
48aa01: sub rsp, 0x78
48aa05: mov qword ptr [rbp - 0x48], rdi
48aa09: mov dword ptr [rbp - 0x40], esi
48aa0c: mov qword ptr [rbp - 0x90], rdx
48aa13: mov byte ptr [rbp - 0x39], cl
48aa16: cmp esi, 1
48aa19: jbe 0x48ab48
48aa1f: mov edx, esi
48aa21: mov rdi, rsp
48aa24: mov rcx, rsp
48aa27: add rdx, rdx
48aa2a: lea rax, [rdx + 0xf]
48aa2e: shr rax, 4
48aa32: shl rax, 4
48aa36: mov rsi, rax
48aa39: and rsi, 0xfffffffffffff000
48aa40: sub rdi, rsi
48aa43: mov rsi, rdi
48aa46: cmp rsp, rsi
48aa49: je 0x48aa60
48aa4b: sub rsp, 0x1000
48aa52: or qword ptr [rsp + 0xff8], 0
48aa5b: cmp rsp, rsi
48aa5e: jne 0x48aa4b
48aa60: and eax, 0xfff
48aa65: sub rsp, rax
48aa68: test rax, rax
48aa6b: je 0x48aa73
48aa6d: or qword ptr [rsp + rax - 8], 0
48aa73: mov rdi, rsp
48aa76: xor esi, esi
48aa78: mov qword ptr [rbp - 0x98], rcx
48aa7f: xor r15d, r15d
48aa82: mov qword ptr [rbp - 0x38], rdi
48aa86: mov r14d, 1
48aa8c: call 0x401110
48aa91: mov eax, dword ptr [rbp - 0x40]
48aa94: mov rcx, qword ptr [rbp - 0x48]
48aa98: mov r10, r15
48aa9b: mov r15d, r14d
48aa9e: sub eax, 1
48aaa1: mov dword ptr [rbp - 0x74], eax
48aaa4: mov qword ptr [rbp - 0x80], rax
48aaa8: lea rax, [rcx + rax*8]
48aaac: xor ecx, ecx
48aaae: mov qword ptr [rbp - 0x88], rax
48aab5: mov r14d, ecx
48aab8: nop dword ptr [rax + rax]
48aac0: mov rax, qword ptr [rbp - 0x38]
48aac4: lea r9, [rax + r10*2]
48aac8: movzx eax, word ptr [r9]
48aacc: add eax, 1
48aacf: cmp byte ptr [rbp - 0x39], 0
48aad3: mov word ptr [rbp - 0x3c], ax
48aad7: mov word ptr [r9], ax
48aadb: mov rax, qword ptr [rbp - 0x48]
48aadf: lea rdi, [rax + r10*8]
48aae3: mov rbx, qword ptr [rdi]
48aae6: jne 0x48ace0
48aaec: cmp r14d, dword ptr [rbp - 0x74]
48aaf0: jae 0x48ab2b
48aaf2: mov r12, qword ptr [rbp - 0x80]
48aaf6: mov r13, qword ptr [rbp - 0x88]
48aafd: movzx r8d, byte ptr [rbp - 0x39]
48ab02: mov rsi, qword ptr [r13]
48ab06: mov ecx, r12d
48ab09: mov rax, qword ptr [rsi + 0x3c8]
48ab10: test rax, rax
48ab13: jne 0x48ab60
48ab15: test r8b, r8b
48ab18: jne 0x48ac70
48ab1e: sub r12, 1
48ab22: sub r13, 8
48ab26: cmp r14d, r12d
48ab29: jb 0x48ab02
48ab2b: cmp dword ptr [rbp - 0x40], r15d
48ab2f: je 0x48ab41
48ab31: mov rcx, qword ptr [rbp - 0x38]
48ab35: mov eax, r15d
48ab38: lea rdi, [rcx + rax*2]
48ab3c: jmp 0x48ac1c
48ab41: mov rsp, qword ptr [rbp - 0x98]
48ab48: lea rsp, [rbp - 0x28]
48ab4c: pop rbx
48ab4d: pop r12
48ab4f: pop r13
48ab51: pop r14
48ab53: pop r15
48ab55: pop rbp
48ab56: ret 
48ab57: nop word ptr [rax + rax]
48ab60: mov rdx, qword ptr [rax]
48ab63: test rdx, rdx
48ab66: je 0x48ab15
48ab68: add rax, 8
48ab6c: cmp rdx, rbx
48ab6f: jne 0x48ab60
48ab71: mov r11d, ecx
48ab74: mov rax, qword ptr [rbp - 0x48]
48ab78: mov r8d, r15d
48ab7b: mov qword ptr [rbp - 0x70], r10
48ab7f: sub r11d, r14d
48ab82: mov qword ptr [rbp - 0x68], r9
48ab86: lea rdx, [r11*8]
48ab8e: lea rsi, [rax + r8*8]
48ab92: mov dword ptr [rbp - 0x60], ecx
48ab95: mov qword ptr [rbp - 0x58], r11
48ab99: mov qword ptr [rbp - 0x50], r8
48ab9d: call 0x401040
48aba2: mov r8, qword ptr [rbp - 0x50]
48aba6: mov ecx, dword ptr [rbp - 0x60]
48aba9: mov qword ptr [r13], rbx
48abad: mov r13, qword ptr [rbp - 0x90]
48abb4: mov r11, qword ptr [rbp - 0x58]
48abb8: mov r9, qword ptr [rbp - 0x68]
48abbc: mov r10, qword ptr [rbp - 0x70]
48abc0: test r13, r13
48abc3: je 0x48ac05
48abc5: lea rdi, [r13 + r10]
48abca: lea rsi, [r13 + r8]
48abcf: mov rdx, r11
48abd2: mov dword ptr [rbp - 0x68], ecx
48abd5: movzx ebx, byte ptr [rdi]
48abd8: mov qword ptr [rbp - 0x70], r9
48abdc: mov qword ptr [rbp - 0x60], r10
48abe0: mov qword ptr [rbp - 0x58], r8
48abe4: mov qword ptr [rbp - 0x50], r11
48abe8: call 0x401040
48abed: mov byte ptr [r13 + r12], bl
48abf2: mov r9, qword ptr [rbp - 0x70]
48abf6: mov ecx, dword ptr [rbp - 0x68]
48abf9: mov r10, qword ptr [rbp - 0x60]
48abfd: mov r8, qword ptr [rbp - 0x58]
48ac01: mov r11, qword ptr [rbp - 0x50]
48ac05: mov rax, qword ptr [rbp - 0x38]
48ac09: movzx edx, word ptr [rax + r8*2]
48ac0e: lea rdi, [rax + r8*2]
48ac12: mov eax, dword ptr [rbp - 0x40]
48ac15: sub eax, r14d
48ac18: cmp edx, eax
48ac1a: jbe 0x48ac40
48ac1c: mov edx, dword ptr [rbp - 0x40]
48ac1f: xor esi, esi
48ac21: mov r14d, r15d
48ac24: sub edx, r15d
48ac27: add rdx, rdx
48ac2a: call 0x401110
48ac2f: mov r10d, r15d
48ac32: add r15d, 1
48ac36: jmp 0x48aac0
48ac3b: nop dword ptr [rax + rax]
48ac40: mov rsi, rdi
48ac43: lea rdx, [r11 + r11]
48ac47: mov rdi, r9
48ac4a: mov qword ptr [rbp - 0x58], r10
48ac4e: mov dword ptr [rbp - 0x50], ecx
48ac51: call 0x401040
48ac56: mov ecx, dword ptr [rbp - 0x50]
48ac59: mov rax, qword ptr [rbp - 0x38]
48ac5d: movzx esi, word ptr [rbp - 0x3c]
48ac61: mov r10, qword ptr [rbp - 0x58]
48ac65: mov word ptr [rax + rcx*2], si
48ac69: jmp 0x48aac0
48ac6e: nop 
48ac70: mov rax, qword ptr [rsi + 0x3d0]
48ac77: test rax, rax
48ac7a: je 0x48ab1e
48ac80: lea rdx, [rax + 8]
48ac84: mov eax, dword ptr [rax]
48ac86: sub eax, 1
48ac89: nop dword ptr [rax]
48ac90: cmp eax, -1
48ac93: je 0x48ab1e
48ac99: mov r11d, eax
48ac9c: sub eax, 1
48ac9f: cmp qword ptr [rdx + r11*8], rbx
48aca3: jne 0x48ac90
48aca5: mov rax, qword ptr [rbx + 0x3c8]
48acac: test rax, rax
48acaf: jne 0x48accd
48acb1: jmp 0x48ab71
48acb6: nop word ptr cs:[rax + rax]
48acc0: add rax, 8
48acc4: cmp rsi, rdx
48acc7: je 0x48ab1e
48accd: mov rdx, qword ptr [rax]
48acd0: test rdx, rdx
48acd3: jne 0x48acc0
48acd5: jmp 0x48ab71
48acda: nop word ptr [rax + rax]
48ace0: cmp qword ptr [rbx + 0x28], rbx
48ace4: jne 0x48ab2b
48acea: cmp dword ptr [rbx + 0x3ec], -1
48acf1: jne 0x48aaec
48acf7: jmp 0x48ab2b
48acfc: nop dword ptr [rax]
48ad00: endbr64 
48ad04: push r13
48ad06: push r12
48ad08: push rbp
48ad09: push rbx
48ad0a: sub rsp, 0x18
48ad0e: mov rax, qword ptr [rsi + 0x298]
48ad15: mov r12, qword ptr [rsi]
48ad18: mov r13, qword ptr [rdi + 8]
48ad1c: add r12, qword ptr [rax + 8]
48ad20: mov rax, qword ptr [rdi]
48ad23: cmp r12, rax
48ad26: je 0x48ad38
48ad28: add rsp, 0x18
48ad2c: pop rbx
48ad2d: pop rbp
48ad2e: pop r12
48ad30: pop r13
48ad32: ret 
48ad33: nop dword ptr [rax + rax]
48ad38: cmp qword ptr [rip + 0x351c8], 0
48ad40: mov rbx, rdi
48ad43: mov rbp, rsi
48ad46: je 0x48ad54
48ad48: lea rdi, [rip + 0x36391]
48ad4f: call 0
48ad54: mov rax, qword ptr [rbx]
48ad57: cmp r12, rax
48ad5a: je 0x48ad80
48ad5c: cmp qword ptr [rip + 0x3520c], 0
48ad64: je 0x48ad28
48ad66: lea rdi, [rip + 0x36373]
48ad6d: call 0
48ad72: add rsp, 0x18
48ad76: pop rbx
48ad77: pop rbp
48ad78: pop r12
48ad7a: pop r13
48ad7c: ret 
48ad7d: nop dword ptr [rax]
48ad80: lea rax, [rip - 0x67a7]
48ad87: mov qword ptr [rbx], rax
48ad8a: mov rax, qword ptr [rbp + 0x68]
48ad8e: mov edx, dword ptr [r13 + 0xc]
48ad92: mov rdi, qword ptr [rax + 8]
48ad96: mov rax, qword ptr [rbp + 0x70]
48ad9a: lea rcx, [rdx + rdx*2]
48ad9e: mov rax, qword ptr [rax + 8]
48ada2: lea rax, [rax + rcx*8]
48ada6: mov qword ptr [rsp + 8], rax
48adab: movzx ecx, byte ptr [rax + 4]
48adaf: shr cl, 4
48adb2: je 0x48ae48
48adb8: test byte ptr [rax + 5], 3
48adbc: jne 0x48ae48
48adc2: mov r8, qword ptr [rbp + 0x1d0]
48adc9: test r8, r8
48adcc: je 0x48adfa
48adce: mov rcx, qword ptr [r8 + 8]
48add2: movzx edx, word ptr [rcx + rdx*2]
48add6: and edx, 0x7fff
48addc: lea rcx, [rdx + rdx*2]
48ade0: mov rdx, qword ptr [rbp + 0x2e8]
48ade7: lea r8, [rdx + rcx*8]
48adeb: mov edx, 0
48adf0: mov esi, dword ptr [r8 + 8]
48adf4: test esi, esi
48adf6: cmove r8, rdx
48adfa: lea rdx, [rsp + 8]
48adff: mov eax, dword ptr [rax]
48ae01: mov rsi, rbp
48ae04: mov r9d, 1
48ae0a: mov rcx, qword ptr [rbp + 0x390]
48ae11: push 0
48ae13: push 1
48ae15: add rdi, rax
48ae18: call 0x47d3a0
48ae1d: mov rbp, rax
48ae20: mov rax, qword ptr [rsp + 0x18]
48ae25: pop rdx
48ae26: pop rcx
48ae27: test rax, rax
48ae2a: jne 0x48ae48
48ae2c: mov rax, qword ptr [r13 + 0x10]
48ae30: mov qword ptr [rbx + 8], rax
48ae34: lea rax, [rip - 0x68fb]
48ae3b: mov qword ptr [rbx], rax
48ae3e: jmp 0x48ad5c
48ae43: nop dword ptr [rax + rax]
48ae48: mov rdx, qword ptr [rbp + 0x450]
48ae4f: lea rcx, [rdx + 1]
48ae53: cmp rcx, 1
48ae57: jbe 0x48ae80
48ae59: mov rax, qword ptr [rax + 8]
48ae5d: sub rax, rdx
48ae60: add rax, qword ptr [r13 + 0x10]
48ae64: mov qword ptr [rbx + 8], rax
48ae68: lea rax, [rip - 0x693f]
48ae6f: mov qword ptr [rbx], rax
48ae72: jmp 0x48ad5c
48ae77: nop word ptr [rax + rax]
48ae80: mov rdi, rbp
48ae83: call 0x47e450
48ae88: mov rax, qword ptr [rsp + 8]
48ae8d: mov rdx, qword ptr [rbp + 0x450]
48ae94: jmp 0x48ae59
48ae96: nop word ptr cs:[rax + rax]
48aea0: endbr64 
48aea4: mov rax, qword ptr [rdi]
48aea7: cmp rax, rsi
48aeaa: je 0x48aeb0
48aeac: ret 
48aead: nop dword ptr [rax]
48aeb0: cmp qword ptr [rip + 0x35050], 0
48aeb8: je 0x48aef0
48aeba: sub rsp, 8
48aebe: lea rdi, [rip + 0x3621b]
48aec5: call 0
48aeca: cmp qword ptr [rip + 0x3509e], 0
48aed2: je 0x48aee8
48aed4: lea rdi, [rip + 0x36205]
48aedb: add rsp, 8
48aedf: jmp 0
48aee4: nop dword ptr [rax]
48aee8: add rsp, 8
48aeec: ret 
48aeed: nop dword ptr [rax]
48aef0: cmp qword ptr [rip + 0x35078], 0
48aef8: je 0x48aeac
48aefa: lea rdi, [rip + 0x361df]
48af01: jmp 0
48af06: nop word ptr cs:[rax + rax]
48af10: endbr64 
48af14: mov r8, qword ptr [rdi + 0x350]
48af1b: mov rsi, qword ptr [rdi + 0x358]
48af22: mov rdi, r8
48af25: sub rsi, r8
48af28: jmp 0x451c70
48af2d: nop dword ptr [rax]
48af30: endbr64 
48af34: push r15
48af36: push r14
48af38: push r13
48af3a: push r12
48af3c: push rbp
48af3d: push rbx
48af3e: sub rsp, 0x38
48af42: mov ebx, dword ptr [rip + 0x388ac]
48af48: mov ecx, ebx
48af4a: shr ebx, 3
48af4d: and ecx, 7
48af50: and ebx, 7
48af53: cmp ecx, 2
48af56: sete dl
48af59: cmp ebx, 2
48af5c: sete al
48af5f: and dl, al
48af61: jne 0x48afcc
48af63: mov eax, dword ptr [rip + 0x38887]
48af69: test al, 3
48af6b: je 0x48afcc
48af6d: mov esi, eax
48af6f: mov r14, rdi
48af72: and esi, 1
48af75: mov byte ptr [rsp + 0x2d], sil
48af7a: mov esi, eax
48af7c: shr esi, 1
48af7e: mov edi, esi
48af80: and edi, 1
48af83: cmp ecx, 1
48af86: mov byte ptr [rsp + 0x2c], dil
48af8b: setne dil
48af8f: and edi, eax
48af91: cmp ebx, 1
48af94: setne r12b
48af98: mov r8d, edi
48af9b: mov r15d, edi
48af9e: and r12d, esi
48afa1: or r8b, r12b
48afa4: jne 0x48afe0
48afa6: movzx eax, byte ptr [rsp + 0x2c]
48afab: xor ebp, ebp
48afad: cmp byte ptr [rsp + 0x2d], r15b
48afb2: jne 0x48afb8
48afb4: test al, al
48afb6: je 0x48afcc
48afb8: cmp ebx, 3
48afbb: je 0x48b0b0
48afc1: cmp byte ptr [rsp + 0x2c], r8b
48afc6: jne 0x48b443
48afcc: add rsp, 0x38
48afd0: pop rbx
48afd1: pop rbp
48afd2: pop r12
48afd4: pop r13
48afd6: pop r14
48afd8: pop r15
48afda: ret 
48afdb: nop dword ptr [rax + rax]
48afe0: mov r8d, dword ptr [r14 + 0x2c8]
48afe7: lea eax, [r8 - 1]
48afeb: test r8d, r8d
48afee: je 0x48b408
48aff4: cmp ecx, 2
48aff7: mov rsi, qword ptr [r14 + 0x3c8]
48affe: setne dil
48b002: and edi, r15d
48b005: cmp ebx, 2
48b008: je 0x48b160
48b00e: test dil, dil
48b011: je 0x48b0f0
48b017: mov ecx, eax
48b019: lea rcx, [rsi + rcx*8]
48b01d: nop dword ptr [rax]
48b020: mov rbp, qword ptr [rcx]
48b023: test byte ptr [rbp + 0x31c], 8
48b02a: jne 0x48b054
48b02c: movzx r8d, byte ptr [rbp + 0x321]
48b034: mov esi, r8d
48b037: and esi, 7
48b03a: and r8d, 2
48b03e: jne 0x48b04d
48b040: test dl, dl
48b042: jne 0x48b04a
48b044: mov dword ptr [rsp + 0xc], eax
48b048: mov edx, edi
48b04a: mov r13d, eax
48b04d: shr sil, 2
48b051: and r12d, esi
48b054: sub eax, 1
48b057: sub rcx, 8
48b05b: cmp eax, -1
48b05e: jne 0x48b020
48b060: test dl, dl
48b062: je 0x48b1b3
48b068: mov rdi, qword ptr [rip + 0x38811]
48b06f: test rdi, rdi
48b072: jne 0x48b390
48b078: lea rsi, [rip + 0x38801]
48b07f: mov edi, 0x3005
48b084: mov eax, 0x9e
48b089: syscall 
48b08b: test eax, eax
48b08d: je 0x48b1c0
48b093: mov rsi, qword ptr [rbp + 8]
48b097: lea rcx, [rip + 0x254e1]
48b09e: mov edi, 0x16
48b0a3: lea rdx, [rip + 0x205f7]
48b0aa: call 0x485060
48b0af: nop 
48b0b0: cmp r8b, 1
48b0b4: mov edi, 0x3002
48b0b9: mov eax, 0x9e
48b0be: sbb edx, edx
48b0c0: and edx, 0xfffffffe
48b0c3: sub edx, 1
48b0c6: cmp r8b, 1
48b0ca: sbb esi, esi
48b0cc: and esi, 2
48b0cf: syscall 
48b0d1: test eax, eax
48b0d3: je 0x48b138
48b0d5: mov edi, eax
48b0d7: mov rsi, qword ptr [rbp + 8]
48b0db: lea rcx, [rip + 0x254d6]
48b0e2: lea rdx, [rip + 0x205b8]
48b0e9: neg edi
48b0eb: call 0x485060
48b0f0: lea rdx, [rsi + rax*8]
48b0f4: mov r8d, r12d
48b0f7: jmp 0x48b103
48b0f9: nop dword ptr [rax]
48b100: mov rdx, rax
48b103: mov rbp, qword ptr [rdx]
48b106: test byte ptr [rbp + 0x31c], 8
48b10d: jne 0x48b11f
48b10f: movzx eax, byte ptr [rbp + 0x321]
48b116: and eax, 7
48b119: shr al, 2
48b11c: and r8d, eax
48b11f: lea rax, [rdx - 8]
48b123: cmp rsi, rdx
48b126: jne 0x48b100
48b128: movzx eax, byte ptr [rsp + 0x2c]
48b12d: xor eax, r8d
48b130: jmp 0x48afad
48b135: nop dword ptr [rax]
48b138: movzx eax, r15b
48b13c: and dword ptr [rip + 0x386ae], edx
48b142: mov edx, eax
48b144: or edx, 2
48b147: test r8b, r8b
48b14a: cmovne eax, edx
48b14d: mov dword ptr fs:[0x48], eax
48b155: jmp 0x48afcc
48b15a: nop word ptr [rax + rax]
48b160: test dil, dil
48b163: jne 0x48b3c8
48b169: cmp r8d, 1
48b16d: je 0x48b43c
48b173: mov edx, eax
48b175: mov ecx, r8d
48b178: lea rdx, [rsi + rdx*8 - 8]
48b17d: shr ecx, 1
48b17f: shl rcx, 4
48b183: mov rdi, rdx
48b186: sub rdi, rcx
48b189: mov rcx, rdi
48b18c: nop dword ptr [rax]
48b190: movdqu xmm0, xmmword ptr [rdx]
48b194: sub rdx, 0x10
48b198: cmp rdx, rcx
48b19b: jne 0x48b190
48b19d: mov edx, r8d
48b1a0: movq rbp, xmm0
48b1a5: and edx, 0xfffffffe
48b1a8: sub eax, edx
48b1aa: cmp r8d, edx
48b1ad: je 0x48b1b3
48b1af: mov rbp, qword ptr [rsi + rax*8]
48b1b3: mov r8d, r12d
48b1b6: jmp 0x48b128
48b1bb: nop dword ptr [rax + rax]
48b1c0: mov rax, qword ptr [rip + 0x386b9]
48b1c7: mov qword ptr [rsp + 0x18], rax
48b1cc: mov rax, qword ptr [rip + 0x386b5]
48b1d3: mov qword ptr [rsp + 0x10], rax
48b1d8: cmp dword ptr [rsp + 0xc], r13d
48b1dd: jb 0x48b35f
48b1e3: mov r9, qword ptr [rip + 0x35f2e]
48b1ea: mov rax, qword ptr [r14 + 0x3c8]
48b1f1: mov dword ptr [rsp + 0x28], ebx
48b1f5: mov byte ptr [rsp + 0x2e], r15b
48b1fa: lea rdi, [r9 - 1]
48b1fe: mov byte ptr [rsp + 0x2f], r12b
48b203: mov r12, rax
48b206: mov qword ptr [rsp + 0x20], rdi
48b20b: nop dword ptr [rax + rax]
48b210: mov eax, r13d
48b213: mov rbp, qword ptr [r12 + rax*8]
48b217: test byte ptr [rbp + 0x31c], 8
48b21e: jne 0x48b340
48b224: test byte ptr [rbp + 0x321], 2
48b22b: jne 0x48b340
48b231: movzx r10d, word ptr [rbp + 0x2b8]
48b239: mov rdi, qword ptr [rbp + 0x2a8]
48b240: test r10, r10
48b243: je 0x48b340
48b249: movabs rbx, 0x1ffffffff
48b253: xor r8d, r8d
48b256: movabs r11, 0x100000001
48b260: jmp 0x48b279
48b262: nop word ptr [rax + rax]
48b268: add r8, 1
48b26c: add rdi, 0x38
48b270: cmp r10, r8
48b273: je 0x48b340
48b279: mov rax, qword ptr [rdi]
48b27c: and rax, rbx
48b27f: cmp rax, r11
48b282: jne 0x48b268
48b284: mov rax, qword ptr [rbp]
48b288: xor edx, edx
48b28a: add rax, qword ptr [rdi + 0x10]
48b28e: div r9
48b291: xor edx, edx
48b293: mov rcx, rax
48b296: mov rax, qword ptr [rsp + 0x20]
48b29b: add rax, qword ptr [rdi + 0x28]
48b29f: div r9
48b2a2: lea r14, [rcx + rax]
48b2a6: mov rdx, r14
48b2a9: shr rdx, 3
48b2ad: cmp rdx, qword ptr [rsp + 0x10]
48b2b2: ja 0x48b420
48b2b8: mov rdx, rcx
48b2bb: mov rsi, qword ptr [rsp + 0x18]
48b2c0: mov r15d, ecx
48b2c3: shr rdx, 6
48b2c7: and r15d, 0x3f
48b2cb: lea rsi, [rsi + rdx*8]
48b2cf: mov rdx, 0xffffffffffffffff
48b2d6: shl rdx, cl
48b2d9: mov ecx, 0x40
48b2de: sub ecx, r15d
48b2e1: cmp rcx, rax
48b2e4: ja 0x48b30c
48b2e6: nop word ptr cs:[rax + rax]
48b2f0: sub rax, rcx
48b2f3: or qword ptr [rsi], rdx
48b2f6: mov ecx, 0x40
48b2fb: add rsi, 8
48b2ff: mov rdx, 0xffffffffffffffff
48b306: cmp rax, 0x3f
48b30a: ja 0x48b2f0
48b30c: test rax, rax
48b30f: je 0x48b268
48b315: mov ecx, r14d
48b318: mov rax, 0xffffffffffffffff
48b31f: add r8, 1
48b323: add rdi, 0x38
48b327: neg ecx
48b329: shr rax, cl
48b32c: and rdx, rax
48b32f: or qword ptr [rsi], rdx
48b332: cmp r10, r8
48b335: jne 0x48b279
48b33b: nop dword ptr [rax + rax]
48b340: add r13d, 1
48b344: cmp r13d, dword ptr [rsp + 0xc]
48b349: jbe 0x48b210
48b34f: mov ebx, dword ptr [rsp + 0x28]
48b353: movzx r15d, byte ptr [rsp + 0x2e]
48b359: movzx r12d, byte ptr [rsp + 0x2f]
48b35f: mov rsi, qword ptr [rsp + 0x10]
48b364: mov rdi, qword ptr [rsp + 0x18]
48b369: mov edx, 1
48b36e: call 0x451ca0
48b373: test eax, eax
48b375: js 0x48b3a9
48b377: movzx eax, byte ptr [rsp + 0x2c]
48b37c: mov r8d, r12d
48b37f: xor eax, r12d
48b382: jmp 0x48afad
48b387: nop word ptr [rax + rax]
48b390: mov rsi, qword ptr [rip + 0x384f1]
48b397: mov edx, 3
48b39c: call 0x451ca0
48b3a1: test eax, eax
48b3a3: jns 0x48b1c0
48b3a9: mov rsi, qword ptr [rbp + 8]
48b3ad: lea rcx, [rip + 0x251ad]
48b3b4: mov edi, 0x16
48b3b9: lea rdx, [rip + 0x202e1]
48b3c0: call 0x485060
48b3c5: nop dword ptr [rax]
48b3c8: mov ecx, eax
48b3ca: lea rcx, [rsi + rcx*8]
48b3ce: nop 
48b3d0: mov rbp, qword ptr [rcx]
48b3d3: test byte ptr [rbp + 0x31c], 8
48b3da: jne 0x48b3f2
48b3dc: test byte ptr [rbp + 0x321], 2
48b3e3: jne 0x48b3f2
48b3e5: test dl, dl
48b3e7: jne 0x48b3ef
48b3e9: mov dword ptr [rsp + 0xc], eax
48b3ed: mov edx, edi
48b3ef: mov r13d, eax
48b3f2: sub eax, 1
48b3f5: sub rcx, 8
48b3f9: cmp eax, -1
48b3fc: jne 0x48b3d0
48b3fe: jmp 0x48b060
48b403: nop dword ptr [rax + rax]
48b408: movzx eax, byte ptr [rsp + 0x2c]
48b40d: mov r8d, r12d
48b410: xor ebp, ebp
48b412: xor eax, r12d
48b415: jmp 0x48afad
48b41a: nop word ptr [rax + rax]
48b420: mov rsi, qword ptr [rbp + 8]
48b424: lea rcx, [rip + 0x251a5]
48b42b: mov edi, 0x16
48b430: lea rdx, [rip + 0x2026a]
48b437: call 0x485060
48b43c: xor eax, eax
48b43e: jmp 0x48b1af
48b443: mov rsi, qword ptr [rbp + 8]
48b447: lea rcx, [rip + 0x2514f]
48b44e: mov edi, 0x16
48b453: lea rdx, [rip + 0x20247]
48b45a: call 0x485060
48b45f: nop 
48b460: endbr64 
48b464: push r15
48b466: push r14
48b468: push r13
48b46a: mov r13, rdi
48b46d: push r12
48b46f: mov r12, rdx
48b472: push rbp
48b473: mov rbp, rcx
48b476: push rbx
48b477: mov rbx, rsi
48b47a: sub rsp, 0x18
48b47e: cmp qword ptr [rip + 0x34a82], 0
48b486: je 0x48b494
48b488: lea rdi, [rip + 0x35c51]
48b48f: call 0
48b494: mov rdi, r13
48b497: xor r14d, r14d
48b49a: call 0x4887f0
48b49f: test rax, rax
48b4a2: je 0x48b60b
48b4a8: mov rdx, qword ptr [rax + 8]
48b4ac: movq xmm0, rdx
48b4b1: movhps xmm0, qword ptr [rax + 0x350]
48b4b8: movups xmmword ptr [rbx], xmm0
48b4bb: cmp byte ptr [rdx], 0
48b4be: je 0x48b764
48b4c4: mov rdx, qword ptr [rax + 0x70]
48b4c8: mov r11, qword ptr [rax + 0x2a0]
48b4cf: mov rdi, qword ptr [rdx + 8]
48b4d3: mov rdx, qword ptr [rax + 0x68]
48b4d7: mov rsi, qword ptr [rdx + 8]
48b4db: mov rdx, qword ptr [rax + 0x90]
48b4e2: mov qword ptr [rsp], rsi
48b4e6: mov esi, dword ptr [rdx + 8]
48b4e9: mov dword ptr [rsp + 0xc], esi
48b4ed: test r11, r11
48b4f0: je 0x48b638
48b4f6: mov ecx, dword ptr [rax + 0x2f4]
48b4fc: test ecx, ecx
48b4fe: je 0x48b5bf
48b504: mov rdx, qword ptr [rax + 0x308]
48b50b: sub ecx, 1
48b50e: xor r11d, r11d
48b511: lea r8, [rdx + 4]
48b515: lea r15, [r8 + rcx*4]
48b519: jmp 0x48b530
48b51b: nop dword ptr [rax + rax]
48b520: mov rdx, r8
48b523: cmp r8, r15
48b526: je 0x48b5c8
48b52c: add r8, 4
48b530: mov edx, dword ptr [rdx]
48b532: test edx, edx
48b534: je 0x48b520
48b536: mov r9, qword ptr [rax + 0x310]
48b53d: lea rdx, [r9 + rdx*4]
48b541: jmp 0x48b59a
48b543: nop dword ptr [rax + rax]
48b548: cmp qword ptr [rcx + 8], 0
48b54d: je 0x48b590
48b54f: movzx r10d, byte ptr [rcx + 4]
48b554: and r10d, 0xf
48b558: cmp r10b, 6
48b55c: je 0x48b590
48b55e: mov r14, qword ptr [rcx + 8]
48b562: mov r10, qword ptr [rax]
48b565: add r10, r14
48b568: cmp r13, r10
48b56b: jb 0x48b590
48b56d: test si, si
48b570: je 0x48b6e0
48b576: mov rsi, qword ptr [rcx + 0x10]
48b57a: test rsi, rsi
48b57d: jne 0x48b6e9
48b583: cmp r13, r10
48b586: je 0x48b6f5
48b58c: nop dword ptr [rax]
48b590: add rdx, 4
48b594: test byte ptr [rdx - 4], 1
48b598: jne 0x48b520
48b59a: mov rcx, rdx
48b59d: sub rcx, r9
48b5a0: sar rcx, 2
48b5a4: mov ecx, ecx
48b5a6: lea rcx, [rcx + rcx*2]
48b5aa: lea rcx, [rdi + rcx*8]
48b5ae: movzx esi, word ptr [rcx + 6]
48b5b2: test si, si
48b5b5: je 0x48b548
48b5b7: cmp si, -0xf
48b5bb: je 0x48b590
48b5bd: jmp 0x48b54f
48b5bf: xor r11d, r11d
48b5c2: nop word ptr [rax + rax]
48b5c8: test r12, r12
48b5cb: je 0x48b5d1
48b5cd: mov qword ptr [r12], rax
48b5d1: test rbp, rbp
48b5d4: je 0x48b5da
48b5d6: mov qword ptr [rbp], r11
48b5da: test r11, r11
48b5dd: je 0x48b718
48b5e3: mov edx, dword ptr [r11]
48b5e6: add rdx, qword ptr [rsp]
48b5ea: cmp word ptr [r11 + 6], -0xf
48b5f0: mov qword ptr [rbx + 0x10], rdx
48b5f4: je 0x48b783
48b5fa: mov rax, qword ptr [rax]
48b5fd: add rax, qword ptr [r11 + 8]
48b601: mov r14d, 1
48b607: mov qword ptr [rbx + 0x18], rax
48b60b: cmp qword ptr [rip + 0x3495d], 0
48b613: je 0x48b621
48b615: lea rdi, [rip + 0x35ac4]
48b61c: call 0
48b621: add rsp, 0x18
48b625: mov eax, r14d
48b628: pop rbx
48b629: pop rbp
48b62a: pop r12
48b62c: pop r13
48b62e: pop r14
48b630: pop r15
48b632: ret 
48b633: nop dword ptr [rax + rax]
48b638: mov rdx, qword ptr [rax + 0x60]
48b63c: mov rsi, qword ptr [rsp]
48b640: test rdx, rdx
48b643: je 0x48b654
48b645: mov rdx, qword ptr [rdx + 8]
48b649: mov edx, dword ptr [rdx + 4]
48b64c: lea rdx, [rdx + rdx*2]
48b650: lea rsi, [rdi + rdx*8]
48b654: cmp rdi, rsi
48b657: jb 0x48b6cd
48b659: jmp 0x48b5c8
48b65e: nop 
48b660: movzx edx, byte ptr [rdi + 5]
48b664: and edx, 3
48b667: sub edx, 1
48b66a: cmp edx, 1
48b66d: jbe 0x48b6c0
48b66f: and ecx, 0xf
48b672: cmp cl, 6
48b675: je 0x48b6c0
48b677: movzx edx, word ptr [rdi + 6]
48b67b: test dx, dx
48b67e: jne 0x48b730
48b684: mov rdx, qword ptr [rdi + 8]
48b688: test rdx, rdx
48b68b: je 0x48b6c0
48b68d: mov rcx, qword ptr [rax]
48b690: add rcx, rdx
48b693: cmp r13, rcx
48b696: jb 0x48b6c0
48b698: je 0x48b6a6
48b69a: mov r8, qword ptr [rdi + 0x10]
48b69e: add rcx, r8
48b6a1: cmp r13, rcx
48b6a4: jae 0x48b6c0
48b6a6: test r11, r11
48b6a9: je 0x48b6b1
48b6ab: cmp qword ptr [r11 + 8], rdx
48b6af: jae 0x48b6c0
48b6b1: mov edx, dword ptr [rsp + 0xc]
48b6b5: cmp edx, dword ptr [rdi]
48b6b7: cmova r11, rdi
48b6bb: nop dword ptr [rax + rax]
48b6c0: add rdi, 0x18
48b6c4: cmp rdi, rsi
48b6c7: jae 0x48b5c8
48b6cd: movzx ecx, byte ptr [rdi + 4]
48b6d1: mov edx, ecx
48b6d3: shr dl, 4
48b6d6: sub edx, 1
48b6d9: cmp dl, 1
48b6dc: ja 0x48b6c0
48b6de: jmp 0x48b660
48b6e0: cmp r13, r10
48b6e3: je 0x48b6f5
48b6e5: mov rsi, qword ptr [rcx + 0x10]
48b6e9: add r10, rsi
48b6ec: cmp r13, r10
48b6ef: jae 0x48b590
48b6f5: test r11, r11
48b6f8: je 0x48b704
48b6fa: cmp r14, qword ptr [r11 + 8]
48b6fe: jbe 0x48b590
48b704: mov esi, dword ptr [rsp + 0xc]
48b708: cmp esi, dword ptr [rcx]
48b70a: cmova r11, rcx
48b70e: jmp 0x48b590
48b713: nop dword ptr [rax + rax]
48b718: pxor xmm0, xmm0
48b71c: mov r14d, 1
48b722: movups xmmword ptr [rbx + 0x10], xmm0
48b726: jmp 0x48b60b
48b72b: nop dword ptr [rax + rax]
48b730: cmp dx, -0xf
48b734: je 0x48b6c0
48b736: mov rdx, qword ptr [rdi + 8]
48b73a: mov rcx, qword ptr [rax]
48b73d: add rcx, rdx
48b740: cmp r13, rcx
48b743: jb 0x48b6c0
48b749: mov r8, qword ptr [rdi + 0x10]
48b74d: test r8, r8
48b750: jne 0x48b69e
48b756: cmp r13, rcx
48b759: jne 0x48b6c0
48b75f: jmp 0x48b6a6
48b764: test byte ptr [rax + 0x31c], 3
48b76b: jne 0x48b4c4
48b771: mov rdx, qword ptr [rip + 0x342f0]
48b778: mov rdx, qword ptr [rdx]
48b77b: mov qword ptr [rbx], rdx
48b77e: jmp 0x48b4c4
48b783: xor eax, eax
48b785: jmp 0x48b5fd
48b78a: nop word ptr [rax + rax]
48b790: endbr64 
48b794: movzx ecx, word ptr [rdi + 0x2b8]
48b79b: sub rsi, qword ptr [rdi]
48b79e: test cx, cx
48b7a1: je 0x48b808
48b7a3: movzx eax, cx
48b7a6: mov rdi, qword ptr [rdi + 0x2a8]
48b7ad: lea rdx, [rax*8]
48b7b5: sub rdx, rax
48b7b8: shl rdx, 3
48b7bc: lea rax, [rdi + rdx - 0x38]
48b7c1: lea rdx, [rdi + rdx - 0x70]
48b7c6: lea edi, [rcx - 1]
48b7c9: lea rcx, [rdi*8]
48b7d1: sub rcx, rdi
48b7d4: shl rcx, 3
48b7d8: sub rdx, rcx
48b7db: jmp 0x48b7e9
48b7dd: nop dword ptr [rax]
48b7e0: sub rax, 0x38
48b7e4: cmp rax, rdx
48b7e7: je 0x48b808
48b7e9: cmp dword ptr [rax], 1
48b7ec: jne 0x48b7e0
48b7ee: mov rcx, rsi
48b7f1: sub rcx, qword ptr [rax + 0x10]
48b7f5: cmp rcx, qword ptr [rax + 0x28]
48b7f9: jae 0x48b7e0
48b7fb: mov eax, 1
48b800: ret 
48b801: nop dword ptr [rax]
48b808: xor eax, eax
48b80a: ret 
48b80b: nop dword ptr [rax + rax]
48b810: endbr64 
48b814: xor r8, r8
48b817: mov r10, qword ptr [rsi]
48b81a: mov r11, qword ptr [rdx]
48b81d: lea rsi, [rsi + rcx*8 - 8]
48b822: lea rdx, [rdx + rcx*8 - 8]
48b827: lea rdi, [rdi + rcx*8 - 0x10]
48b82c: mov eax, ecx
48b82e: neg rcx
48b831: and eax, 3
48b834: je 0x48b845
48b836: add rcx, rax
48b839: cmp eax, 2
48b83c: jl 0x48b854
48b83e: je 0x48b859
48b840: shr r8, 1
48b843: jmp 0x48b894
48b845: shr r8, 1
48b848: mov r8, r10
48b84b: mov r9, r11
48b84e: lea rcx, [rcx + 4]
48b852: jmp 0x48b882
48b854: shr r8, 1
48b857: jmp 0x48b8b5
48b859: shr r8, 1
48b85c: mov r8, r10
48b85f: mov r9, r11
48b862: jmp 0x48b8a6
48b864: adc r10, r11
48b867: mov qword ptr [rdi + 8], r10
48b86b: mov eax, ecx
48b86d: adc eax, eax
48b86f: ret 
48b870: mov r8, qword ptr [rsi + rcx*8 - 0x18]
48b875: mov r9, qword ptr [rdx + rcx*8 - 0x18]
48b87a: adc r10, r11
48b87d: mov qword ptr [rdi + rcx*8 - 0x18], r10
48b882: mov r10, qword ptr [rsi + rcx*8 - 0x10]
48b887: mov r11, qword ptr [rdx + rcx*8 - 0x10]
48b88c: adc r8, r9
48b88f: mov qword ptr [rdi + rcx*8 - 0x10], r8
48b894: mov r8, qword ptr [rsi + rcx*8 - 8]
48b899: mov r9, qword ptr [rdx + rcx*8 - 8]
48b89e: adc r10, r11
48b8a1: mov qword ptr [rdi + rcx*8 - 8], r10
48b8a6: mov r10, qword ptr [rsi + rcx*8]
48b8aa: mov r11, qword ptr [rdx + rcx*8]
48b8ae: adc r8, r9
48b8b1: mov qword ptr [rdi + rcx*8], r8
48b8b5: jrcxz 0x48b864
48b8b7: lea rcx, [rcx + 4]
48b8bb: jmp 0x48b870
48b8bd: nop dword ptr [rax]
48b8c0: endbr64 
48b8c4: push rbx
48b8c5: push rbp
48b8c6: lea rbx, [rdx]
48b8c9: neg rbx
48b8cc: mov rax, qword ptr [rsi]
48b8cf: mov r10, qword ptr [rdi]
48b8d2: lea rdi, [rdi + rdx*8 - 0x10]
48b8d7: lea rsi, [rsi + rdx*8]
48b8db: mul rcx
48b8de: bt ebx, 0
48b8e2: jb 0x48b908
48b8e4: lea r11, [rax]
48b8e7: mov rax, qword ptr [rsi + rbx*8 + 8]
48b8ec: lea rbp, [rdx]
48b8ef: mul rcx
48b8f2: add rbx, 2
48b8f6: jns 0x48b988
48b8fc: lea r8, [rax]
48b8ff: mov rax, qword ptr [rsi + rbx*8]
48b903: lea r9, [rdx]
48b906: jmp 0x48b950
48b908: add rbx, 1
48b90c: jns 0x48b998
48b912: lea r8, [rax]
48b915: mov rax, qword ptr [rsi + rbx*8]
48b919: lea r9, [rdx]
48b91c: mul rcx
48b91f: lea r11, [rax]
48b922: mov rax, qword ptr [rsi + rbx*8 + 8]
48b927: lea rbp, [rdx]
48b92a: jmp 0x48b971
48b92c: nop dword ptr [rax]
48b930: mul rcx
48b933: add r10, r8
48b936: lea r8, [rax]
48b939: mov rax, qword ptr [rsi + rbx*8]
48b93d: adc r11, r9
48b940: mov qword ptr [rdi + rbx*8 - 8], r10
48b945: mov r10, qword ptr [rdi + rbx*8]
48b949: lea r9, [rdx]
48b94c: adc rbp, 0
48b950: mul rcx
48b953: add r10, r11
48b956: lea r11, [rax]
48b959: mov rax, qword ptr [rsi + rbx*8 + 8]
48b95e: adc r8, rbp
48b961: mov qword ptr [rdi + rbx*8], r10
48b965: mov r10, qword ptr [rdi + rbx*8 + 8]
48b96a: lea rbp, [rdx]
48b96d: adc r9, 0
48b971: add rbx, 2
48b975: js 0x48b930
48b977: mul rcx
48b97a: add r10, r8
48b97d: adc r11, r9
48b980: mov qword ptr [rdi - 8], r10
48b984: adc rbp, 0
48b988: mov r10, qword ptr [rdi]
48b98b: add r10, r11
48b98e: adc rax, rbp
48b991: mov qword ptr [rdi], r10
48b994: adc rdx, 0
48b998: mov r10, qword ptr [rdi + 8]
48b99c: add r10, rax
48b99f: mov qword ptr [rdi + 8], r10
48b9a3: mov eax, ebx
48b9a5: adc rax, rdx
48b9a8: pop rbp
48b9a9: pop rbx
48b9aa: ret 
48b9ab: nop dword ptr [rax + rax]
48b9b0: endbr64 
48b9b4: push rbx
48b9b5: mov esi, dword ptr [rdi + 8]
48b9b8: test esi, 0xbfffeef0
48b9be: jne 0x48ba05
48b9c0: mov rdx, qword ptr [rdi + 0x18]
48b9c4: mov rbx, rdi
48b9c7: mov rdi, qword ptr [rdi]
48b9ca: or esi, 0x80000000
48b9d0: lea rax, [rip + 0x2003e]
48b9d7: mov r9, qword ptr [rip + 0x37ec2]
48b9de: mov r8d, dword ptr [rip + 0x37eb3]
48b9e5: test rdi, rdi
48b9e8: cmove rdi, rax
48b9ec: sub rsp, 8
48b9f0: push qword ptr [rip + 0x372e2]
48b9f6: xor ecx, ecx
48b9f8: call 0x4888a0
48b9fd: mov qword ptr [rbx + 0x10], rax
48ba01: pop rax
48ba02: pop rdx
48ba03: pop rbx
48ba04: ret 
48ba05: mov edx, 5
48ba0a: lea rsi, [rip + 0x24be1]
48ba11: lea rdi, [rip + 0x1d504]
48ba18: call 0x4032f0
48ba1d: xor edx, edx
48ba1f: xor esi, esi
48ba21: xor edi, edi
48ba23: mov rcx, rax
48ba26: call 0x485060
48ba2b: nop dword ptr [rax + rax]
48ba30: endbr64 
48ba34: sub rsp, 0x38
48ba38: mov rax, qword ptr fs:[0x28]
48ba41: mov qword ptr [rsp + 0x28], rax
48ba46: xor eax, eax
48ba48: mov qword ptr [rsp], rdi
48ba4c: lea rdi, [rip - 0xa3]
48ba53: mov dword ptr [rsp + 8], esi
48ba57: mov rsi, rsp
48ba5a: mov qword ptr [rsp + 0x18], rdx
48ba5f: call 0x487720
48ba64: mov r8d, eax
48ba67: xor eax, eax
48ba69: test r8d, r8d
48ba6c: jne 0x48ba87
48ba6e: mov rdi, qword ptr [rsp + 0x10]
48ba73: call 0x484dc0
48ba78: mov rdi, qword ptr [rsp + 0x10]
48ba7d: call 0x487890
48ba82: mov rax, qword ptr [rsp + 0x10]
48ba87: mov rcx, qword ptr [rsp + 0x28]
48ba8c: xor rcx, qword ptr fs:[0x28]
48ba95: jne 0x48ba9c
48ba97: add rsp, 0x38
48ba9b: ret 
48ba9c: call 0x4547a0
48baa1: nop word ptr cs:[rax + rax]
48baab: nop dword ptr [rax + rax]
48bab0: endbr64 
48bab4: jmp 0x48a8f0
48bab9: nop dword ptr [rax]
48bac0: endbr64 
48bac4: sub rsp, 8
48bac8: mov rsi, rdi
48bacb: lea rdi, [rip - 0x22]
48bad2: call 0x487720
48bad7: test eax, eax
48bad9: setne al
48badc: add rsp, 8
48bae0: movzx eax, al
48bae3: neg eax
48bae5: ret 
48bae6: nop word ptr cs:[rax + rax]
48baf0: endbr64 
48baf4: push rbx
48baf5: mov rbx, rdi
48baf8: mov rdx, qword ptr [rdi + 0x10]
48bafc: mov rsi, qword ptr [rdi + 8]
48bb00: mov rdi, qword ptr [rdi]
48bb03: call 0x48dce0
48bb08: mov qword ptr [rbx + 0x18], rax
48bb0c: pop rbx
48bb0d: ret 
48bb0e: nop 
48bb10: endbr64 
48bb14: push r12
48bb16: movq xmm0, rdi
48bb1b: movq xmm1, rsi
48bb20: punpcklqdq xmm0, xmm1
48bb24: sub rsp, 0x30
48bb28: mov rax, qword ptr fs:[0x28]
48bb31: mov qword ptr [rsp + 0x28], rax
48bb36: xor eax, eax
48bb38: cmp qword ptr [rip + 0x343c8], 0
48bb40: mov qword ptr [rsp + 0x10], rdx
48bb45: movaps xmmword ptr [rsp], xmm0
48bb49: je 0x48bb57
48bb4b: lea rdi, [rip + 0x3558e]
48bb52: call 0
48bb57: mov rsi, rsp
48bb5a: lea rdi, [rip - 0x71]
48bb61: call 0x487720
48bb66: test eax, eax
48bb68: mov eax, 0
48bb6d: cmove rax, qword ptr [rsp + 0x18]
48bb73: cmp qword ptr [rip + 0x343f5], 0
48bb7b: mov r12, rax
48bb7e: je 0x48bb8c
48bb80: lea rdi, [rip + 0x35559]
48bb87: call 0
48bb8c: mov rax, qword ptr [rsp + 0x28]
48bb91: xor rax, qword ptr fs:[0x28]
48bb9a: jne 0x48bba6
48bb9c: add rsp, 0x30
48bba0: mov rax, r12
48bba3: pop r12
48bba5: ret 
48bba6: call 0x4547a0
48bbab: nop dword ptr [rax + rax]
48bbb0: endbr64 
48bbb4: push rbx
48bbb5: mov rbx, rdi
48bbb8: mov rcx, qword ptr [rdi + 0x18]
48bbbc: mov rdx, qword ptr [rdi + 0x10]
48bbc0: mov rsi, qword ptr [rdi + 8]
48bbc4: mov rdi, qword ptr [rdi]
48bbc7: call 0x48d9b0
48bbcc: mov qword ptr [rbx + 0x20], rax
48bbd0: pop rbx
48bbd1: ret 
48bbd2: nop word ptr cs:[rax + rax]
48bbdd: nop dword ptr [rax]
48bbe0: endbr64 
48bbe4: push r12
48bbe6: movq xmm0, rdi
48bbeb: movq xmm1, rsi
48bbf0: movq xmm2, rcx
48bbf5: punpcklqdq xmm0, xmm1
48bbf9: sub rsp, 0x30
48bbfd: mov rax, qword ptr fs:[0x28]
48bc06: mov qword ptr [rsp + 0x28], rax
48bc0b: xor eax, eax
48bc0d: movaps xmmword ptr [rsp], xmm0
48bc11: movq xmm0, rdx
48bc16: cmp qword ptr [rip + 0x342ea], 0
48bc1e: punpcklqdq xmm0, xmm2
48bc22: movaps xmmword ptr [rsp + 0x10], xmm0
48bc27: je 0x48bc35
48bc29: lea rdi, [rip + 0x354b0]
48bc30: call 0
48bc35: mov rsi, rsp
48bc38: lea rdi, [rip - 0x8f]
48bc3f: call 0x487720
48bc44: test eax, eax
48bc46: mov eax, 0
48bc4b: cmove rax, qword ptr [rsp + 0x20]
48bc51: cmp qword ptr [rip + 0x34317], 0
48bc59: mov r12, rax
48bc5c: je 0x48bc6a
48bc5e: lea rdi, [rip + 0x3547b]
48bc65: call 0
48bc6a: mov rax, qword ptr [rsp + 0x28]
48bc6f: xor rax, qword ptr fs:[0x28]
48bc78: jne 0x48bc84
48bc7a: add rsp, 0x30
48bc7e: mov rax, r12
48bc81: pop r12
48bc83: ret 
48bc84: call 0x4547a0
48bc89: nop dword ptr [rax]
48bc90: endbr64 
48bc94: mov eax, 0x26
48bc99: syscall 
48bc9b: cmp rax, -0xfff
48bca1: jae 0x48bca4
48bca3: ret 
48bca4: mov rcx, 0xffffffffffffffc0
48bcab: neg eax
48bcad: mov dword ptr fs:[rcx], eax
48bcb0: or rax, 0xffffffffffffffff
48bcb4: ret 
48bcb5: nop word ptr cs:[rax + rax]
48bcbf: nop 
48bcc0: mov qword ptr [rdi], rsi
48bcc3: movzx edx, byte ptr [rsi + 0x31c]
48bcca: mov eax, 1
48bccf: and edx, 0xffffff9f
48bcd2: or edx, 0x20
48bcd5: mov byte ptr [rsi + 0x31c], dl
48bcdb: mov rdx, qword ptr [rsi + 0x3c8]
48bce2: test rdx, rdx
48bce5: je 0x48bd48
48bce7: push r12
48bce9: lea r12, [rdi + 8]
48bced: push rbp
48bcee: mov rbp, rdi
48bcf1: push rbx
48bcf2: mov rsi, qword ptr [rdx + 8]
48bcf6: lea rbx, [rdx + 8]
48bcfa: test rsi, rsi
48bcfd: je 0x48bd1f
48bcff: test byte ptr [rsi + 0x31c], 0x60
48bd06: je 0x48bd28
48bd08: mov rsi, qword ptr [rbx + 8]
48bd0c: add rbx, 8
48bd10: test rsi, rsi
48bd13: jne 0x48bcff
48bd15: sub r12, rbp
48bd18: mov rax, r12
48bd1b: sar rax, 3
48bd1f: pop rbx
48bd20: pop rbp
48bd21: pop r12
48bd23: ret 
48bd24: nop dword ptr [rax]
48bd28: mov rdi, r12
48bd2b: add rbx, 8
48bd2f: call 0x48bcc0
48bd34: mov rsi, qword ptr [rbx]
48bd37: lea r12, [r12 + rax*8]
48bd3b: test rsi, rsi
48bd3e: jne 0x48bcff
48bd40: jmp 0x48bd15
48bd42: nop word ptr [rax + rax]
48bd48: ret 
48bd49: nop dword ptr [rax]
48bd50: endbr64 
48bd54: push rbx
48bd55: mov rbx, rdi
48bd58: mov rdi, qword ptr [rdi]
48bd5b: mov ecx, dword ptr [rbx + 8]
48bd5e: mov rsi, qword ptr [rbx + 0x18]
48bd62: movzx eax, byte ptr [rdi + 0x31c]
48bd69: mov r8d, dword ptr [rbx + 0xc]
48bd6d: mov r9, qword ptr [rdi + 0x30]
48bd71: mov edx, eax
48bd73: and edx, 3
48bd76: test al, 3
48bd78: mov eax, 1
48bd7d: cmove edx, eax
48bd80: call 0x47bad0
48bd85: mov qword ptr [rbx + 0x20], rax
48bd89: pop rbx
48bd8a: ret 
48bd8b: nop dword ptr [rax + rax]
48bd90: endbr64 
48bd94: push rbp
48bd95: lea eax, [rdx + 2]
48bd98: lea rax, [rax + rax*2]
48bd9c: lea rax, [rax*8 + 0x17]
48bda4: mov rbp, rsp
48bda7: push r15
48bda9: shr rax, 4
48bdad: push r14
48bdaf: shl rax, 4
48bdb3: push r13
48bdb5: push r12
48bdb7: push rbx
48bdb8: sub rsp, 0x4d8
48bdbf: mov dword ptr [rbp - 0x4d4], ecx
48bdc5: mov rcx, rax
48bdc8: and rcx, 0xfffffffffffff000
48bdcf: mov rbx, rsp
48bdd2: mov qword ptr [rbp - 0x4a8], rdi
48bdd9: sub rbx, rcx
48bddc: mov dword ptr [rbp - 0x4d8], r8d
48bde3: mov rcx, rbx
48bde6: cmp rsp, rcx
48bde9: je 0x48be00
48bdeb: sub rsp, 0x1000
48bdf2: or qword ptr [rsp + 0xff8], 0
48bdfb: cmp rsp, rcx
48bdfe: jne 0x48bdeb
48be00: and eax, 0xfff
48be05: sub rsp, rax
48be08: test rax, rax
48be0b: jne 0x48c938
48be11: mov rbx, qword ptr [rbp - 0x4a8]
48be18: lea r10, [rsp + 0xf]
48be1d: and r10, 0xfffffffffffffff0
48be21: movzx eax, byte ptr [rbx + 0x31c]
48be28: lea rcx, [r10 + 0x18]
48be2c: mov qword ptr [r10 + 8], rbx
48be30: mov r15, r10
48be33: mov dword ptr [r10], 0
48be3a: mov byte ptr [rbp - 0x498], al
48be40: and eax, 0xffffff9f
48be43: or eax, 0x20
48be46: mov qword ptr [r10 + 0x10], rcx
48be4a: mov byte ptr [rbx + 0x31c], al
48be50: test edx, edx
48be52: je 0x48c982
48be58: lea eax, [rdx + 1]
48be5b: mov edi, 1
48be60: mov dword ptr [rbp - 0x4d0], eax
48be66: nop word ptr cs:[rax + rax]
48be70: lea eax, [rdi + 1]
48be73: mov r8, qword ptr [rsi]
48be76: mov r9d, edi
48be79: mov dword ptr [rcx], 0
48be7f: mov rdi, rax
48be82: lea rax, [rax + rax*2]
48be86: add rsi, 8
48be8a: add rcx, 0x18
48be8e: lea rax, [r10 + rax*8]
48be92: movq xmm0, r8
48be97: movq xmm1, rax
48be9c: punpcklqdq xmm0, xmm1
48bea0: movups xmmword ptr [rcx - 0x10], xmm0
48bea4: movzx eax, byte ptr [r8 + 0x31c]
48beac: and eax, 0xffffff9f
48beaf: or eax, 0x20
48beb2: mov byte ptr [r8 + 0x31c], al
48beb9: cmp edx, r9d
48bebc: jne 0x48be70
48bebe: lea eax, [rdx - 1]
48bec1: mov r13, qword ptr [r10 + 8]
48bec5: lea rax, [rax + rax*2 + 3]
48beca: lea rax, [r10 + rax*8]
48bece: mov qword ptr [rbp - 0x4b0], rax
48bed5: mov qword ptr [rax + 0x10], 0
48bedd: lea rax, [rbp - 0x430]
48bee4: mov qword ptr [rbp - 0x4e8], rax
48beeb: mov qword ptr [rbp - 0x440], rax
48bef2: mov rax, 0xffffffffffffffc0
48bef9: mov qword ptr [rbp - 0x438], 0x400
48bf04: mov eax, dword ptr fs:[rax]
48bf07: mov dword ptr [rbp - 0x4f4], eax
48bf0d: mov rax, 0xffffffffffffffc0
48bf14: mov dword ptr fs:[rax], 0
48bf1b: mov rax, r10
48bf1e: mov qword ptr [rbp - 0x4c8], r10
48bf25: mov qword ptr [rbp - 0x4f0], r15
48bf2c: mov dword ptr [rax], 1
48bf32: mov rax, qword ptr [r13 + 0x2c0]
48bf39: mov qword ptr [rbp - 0x4a0], rax
48bf40: test rax, rax
48bf43: je 0x48c750
48bf49: mov qword ptr [rbp - 0x4a0], 0
48bf54: cmp qword ptr [r13 + 0x48], 0
48bf59: jne 0x48c048
48bf5f: cmp qword ptr [r13 + 0x1e8], 0
48bf67: jne 0x48c048
48bf6d: xor r15d, r15d
48bf70: cmp qword ptr [r13 + 0x1d8], 0
48bf78: jne 0x48c048
48bf7e: mov rcx, qword ptr [rbp - 0x4a0]
48bf85: test rcx, rcx
48bf88: je 0x48bff3
48bf8a: mov eax, r15d
48bf8d: lea edi, [r15 + r15 + 3]
48bf92: lea ebx, [r15 + 1]
48bf96: mov qword ptr [rcx + rax*8], 0
48bf9e: shl rdi, 3
48bfa2: call 0x426410
48bfa7: mov r12, rax
48bfaa: test rax, rax
48bfad: je 0x48cf4b
48bfb3: mov qword ptr [rax], r13
48bfb6: mov rsi, qword ptr [rbp - 0x4a0]
48bfbd: lea r14, [rbx*8]
48bfc5: lea rdi, [rax + 8]
48bfc9: mov rdx, r14
48bfcc: call 0x401060
48bfd1: lea eax, [r15 + 2]
48bfd5: mov rdx, r14
48bfd8: mov rsi, r12
48bfdb: lea rdi, [r12 + rax*8]
48bfdf: call 0x401060
48bfe4: or byte ptr [r13 + 0x31e], 1
48bfec: mov qword ptr [r13 + 0x3c8], r12
48bff3: mov rax, qword ptr [rbp - 0x4c8]
48bffa: mov r8d, dword ptr [rax]
48bffd: test r8d, r8d
48c000: jne 0x48c022
48c002: mov rax, qword ptr [rbp - 0x4c8]
48c009: mov r13, qword ptr [rax + 8]
48c00d: jmp 0x48bf2c
48c012: nop word ptr [rax + rax]
48c018: mov edi, dword ptr [rax]
48c01a: test edi, edi
48c01c: je 0x48cc5f
48c022: mov rax, qword ptr [rax + 0x10]
48c026: test rax, rax
48c029: jne 0x48c018
48c02b: mov dword ptr [rbp - 0x4c0], 0
48c035: mov r15, qword ptr [rbp - 0x4f0]
48c03c: jmp 0x48c41b
48c041: nop dword ptr [rax]
48c048: mov rax, qword ptr [r13 + 0x68]
48c04c: mov r12, qword ptr [r13 + 0x10]
48c050: mov qword ptr [rbp - 0x470], r13
48c057: mov rax, qword ptr [rax + 8]
48c05b: mov qword ptr [rbp - 0x498], rax
48c062: mov qword ptr [rbp - 0x460], rax
48c069: mov eax, dword ptr [rbp - 0x4d4]
48c06f: mov dword ptr [rbp - 0x468], eax
48c075: mov eax, dword ptr [rbp - 0x4d8]
48c07b: mov dword ptr [rbp - 0x464], eax
48c081: mov rax, qword ptr [r12]
48c085: test rax, rax
48c088: je 0x48ce3b
48c08e: mov rbx, qword ptr [rbp - 0x4c8]
48c095: xor r15d, r15d
48c098: mov qword ptr [rbp - 0x4e0], rbx
48c09f: cmp rax, 1
48c0a3: jne 0x48c282
48c0a9: nop dword ptr [rax]
48c0b0: mov r14, qword ptr [rbp - 0x498]
48c0b7: add r14, qword ptr [r12 + 8]
48c0bc: mov rdi, r14
48c0bf: call 0x47aec0
48c0c4: mov rbx, rax
48c0c7: test rax, rax
48c0ca: je 0x48c3b8
48c0d0: mov r10d, dword ptr [rip + 0x339c9]
48c0d7: test r10d, r10d
48c0da: jne 0x48ce43
48c0e0: mov rdi, r14
48c0e3: call 0x401180
48c0e8: mov rdi, qword ptr [r13 + 0x348]
48c0ef: mov rcx, rax
48c0f2: test rdi, rdi
48c0f5: je 0x48c3c0
48c0fb: cmp rdi, -1
48c0ff: je 0x48c3f8
48c105: mov qword ptr [rbp - 0x4c0], rcx
48c10c: call 0x401180
48c111: mov rcx, qword ptr [rbp - 0x4c0]
48c118: cmp qword ptr [rip + 0x37698], 0x14
48c120: mov edx, 0x14
48c125: mov rsi, rsp
48c128: cmovae rdx, qword ptr [rip + 0x37688]
48c130: cmp rdx, rax
48c133: cmovb rdx, rax
48c137: lea rax, [rdx - 4]
48c13b: imul rbx, rax
48c13f: lea rax, [rcx + rbx + 0x17]
48c144: mov rdx, rax
48c147: and rax, 0xfffffffffffff000
48c14d: sub rsi, rax
48c150: and rdx, 0xfffffffffffffff0
48c154: mov rax, rsi
48c157: cmp rsp, rax
48c15a: je 0x48c171
48c15c: sub rsp, 0x1000
48c163: or qword ptr [rsp + 0xff8], 0
48c16c: cmp rsp, rax
48c16f: jne 0x48c15c
48c171: and edx, 0xfff
48c177: sub rsp, rdx
48c17a: test rdx, rdx
48c17d: je 0x48c185
48c17f: or qword ptr [rsp + rdx - 8], 0
48c185: lea rdx, [rsp + 0xf]
48c18a: mov rsi, r14
48c18d: mov rdi, r13
48c190: and rdx, 0xfffffffffffffff0
48c194: call 0x47af70
48c199: cmp byte ptr [rax], 0
48c19c: je 0x48c390
48c1a2: lea rdx, [rbp - 0x470]
48c1a9: lea rdi, [rbp - 0x490]
48c1b0: mov qword ptr [rbp - 0x458], rax
48c1b7: lea rsi, [rip - 0x46e]
48c1be: call 0x4850c0
48c1c3: cmp qword ptr [rbp - 0x488], 0
48c1cb: jne 0x48c400
48c1d1: mov rax, qword ptr [rbp - 0x450]
48c1d8: test byte ptr [rax + 0x31c], 0x60
48c1df: jne 0x48c24f
48c1e1: mov rdx, rsp
48c1e4: cmp rsp, rdx
48c1e7: je 0x48c1fe
48c1e9: sub rsp, 0x1000
48c1f0: or qword ptr [rsp + 0xff8], 0
48c1f9: cmp rsp, rdx
48c1fc: jne 0x48c1e9
48c1fe: sub rsp, 0x20
48c202: or qword ptr [rsp + 0x18], 0
48c208: mov rcx, qword ptr [rbp - 0x4b0]
48c20f: add dword ptr [rbp - 0x4d0], 1
48c216: lea rdx, [rsp + 0xf]
48c21b: and rdx, 0xfffffffffffffff0
48c21f: mov qword ptr [rdx + 8], rax
48c223: mov dword ptr [rdx], 0
48c229: mov qword ptr [rdx + 0x10], 0
48c231: mov qword ptr [rcx + 0x10], rdx
48c235: movzx ecx, byte ptr [rax + 0x31c]
48c23c: mov qword ptr [rbp - 0x4b0], rdx
48c243: and ecx, 0xffffff9f
48c246: or ecx, 0x20
48c249: mov byte ptr [rax + 0x31c], cl
48c24f: mov rsi, qword ptr [rbp - 0x4a0]
48c256: test rsi, rsi
48c259: je 0x48c266
48c25b: mov edx, r15d
48c25e: add r15d, 1
48c262: mov qword ptr [rsi + rdx*8], rax
48c266: mov rax, qword ptr [r12 + 0x10]
48c26b: add r12, 0x10
48c26f: test rax, rax
48c272: je 0x48bf7e
48c278: cmp rax, 1
48c27c: je 0x48c0b0
48c282: and rax, 0xfffffffffffffffd
48c286: cmp rax, 0x7ffffffd
48c28c: jne 0x48c266
48c28e: mov r14, qword ptr [rbp - 0x498]
48c295: add r14, qword ptr [r12 + 8]
48c29a: mov rdi, r14
48c29d: call 0x47aec0
48c2a2: mov rbx, rax
48c2a5: test rax, rax
48c2a8: je 0x48c7ae
48c2ae: mov r9d, dword ptr [rip + 0x337eb]
48c2b5: test r9d, r9d
48c2b8: jne 0x48cf38
48c2be: mov rdi, r14
48c2c1: call 0x401180
48c2c6: mov rdi, qword ptr [r13 + 0x348]
48c2cd: mov rdx, rax
48c2d0: test rdi, rdi
48c2d3: je 0x48c943
48c2d9: cmp rdi, -1
48c2dd: je 0x48c97b
48c2e3: mov qword ptr [rbp - 0x4c0], rdx
48c2ea: call 0x401180
48c2ef: mov rdx, qword ptr [rbp - 0x4c0]
48c2f6: mov rcx, rax
48c2f9: cmp qword ptr [rip + 0x374b7], 0x14
48c301: mov eax, 0x14
48c306: cmovae rax, qword ptr [rip + 0x374aa]
48c30e: cmp rax, rcx
48c311: cmovb rax, rcx
48c315: sub rax, 4
48c319: imul rax, rbx
48c31d: mov rbx, rsp
48c320: lea rax, [rdx + rax + 0x17]
48c325: mov rdx, rax
48c328: and rax, 0xfffffffffffff000
48c32e: sub rbx, rax
48c331: and rdx, 0xfffffffffffffff0
48c335: mov rax, rbx
48c338: cmp rsp, rax
48c33b: je 0x48c352
48c33d: sub rsp, 0x1000
48c344: or qword ptr [rsp + 0xff8], 0
48c34d: cmp rsp, rax
48c350: jne 0x48c33d
48c352: and edx, 0xfff
48c358: sub rsp, rdx
48c35b: test rdx, rdx
48c35e: jne 0x48cc6b
48c364: lea rdx, [rsp + 0xf]
48c369: mov rsi, r14
48c36c: mov rdi, r13
48c36f: and rdx, 0xfffffffffffffff0
48c373: call 0x47af70
48c378: cmp byte ptr [rax], 0
48c37b: jne 0x48c7ab
48c381: cmp qword ptr [r12], 0x7ffffffd
48c389: je 0x48ced4
48c38f: nop 
48c390: test byte ptr [rip + 0x37429], 1
48c397: je 0x48c266
48c39d: mov rsi, r14
48c3a0: lea rdi, [rip + 0x242c9]
48c3a7: xor eax, eax
48c3a9: call 0x480f60
48c3ae: jmp 0x48c266
48c3b3: nop dword ptr [rax + rax]
48c3b8: mov rax, r14
48c3bb: jmp 0x48c1a2
48c3c0: mov rax, qword ptr [r13 + 8]
48c3c4: cmp byte ptr [rax], 0
48c3c7: jne 0x48ce74
48c3cd: mov qword ptr [rbp - 0x4c0], rcx
48c3d4: call 0x482630
48c3d9: mov rcx, qword ptr [rbp - 0x4c0]
48c3e0: mov qword ptr [r13 + 0x348], rax
48c3e7: mov rdi, rax
48c3ea: lea rax, [rax - 1]
48c3ee: cmp rax, -3
48c3f2: jbe 0x48c105
48c3f8: xor eax, eax
48c3fa: jmp 0x48c118
48c3ff: nop 
48c400: mov dword ptr [rbp - 0x4c0], eax
48c406: mov r15, qword ptr [rbp - 0x4f0]
48c40d: test eax, eax
48c40f: jne 0x48c41b
48c411: mov dword ptr [rbp - 0x4c0], 0xffffffff
48c41b: mov rdi, qword ptr [rbp - 0x440]
48c422: cmp rdi, qword ptr [rbp - 0x4e8]
48c429: je 0x48c430
48c42b: call 0x426a00
48c430: mov rax, 0xffffffffffffffc0
48c437: mov esi, dword ptr fs:[rax]
48c43a: test esi, esi
48c43c: jne 0x48c452
48c43e: mov eax, dword ptr [rbp - 0x4f4]
48c444: test eax, eax
48c446: je 0x48c452
48c448: mov rcx, 0xffffffffffffffc0
48c44f: mov dword ptr fs:[rcx], eax
48c452: mov rbx, qword ptr [rbp - 0x4a8]
48c459: mov rax, qword ptr [rbx + 0x3c8]
48c460: mov qword ptr [rbp - 0x4a0], rax
48c467: test rax, rax
48c46a: je 0x48c48f
48c46c: movzx eax, byte ptr [rbx + 0x31c]
48c473: mov byte ptr [rbp - 0x498], al
48c479: and eax, 3
48c47c: cmp al, 2
48c47e: je 0x48c900
48c484: mov qword ptr [rbp - 0x4a0], 0
48c48f: mov eax, dword ptr [rbp - 0x4d0]
48c495: lea edi, [rax + rax + 1]
48c499: shl rdi, 3
48c49d: call 0x426410
48c4a2: mov r13, rax
48c4a5: test rax, rax
48c4a8: je 0x48cf7e
48c4ae: mov ebx, dword ptr [rbp - 0x4d0]
48c4b4: mov ecx, dword ptr [rbp - 0x4d4]
48c4ba: lea eax, [rbx + 1]
48c4bd: lea r8, [r13 + rax*8]
48c4c2: mov rax, qword ptr [rbp - 0x4a8]
48c4c9: mov qword ptr [rax + 0x2c0], r8
48c4d0: mov dword ptr [rax + 0x2c8], ebx
48c4d6: test ecx, ecx
48c4d8: jne 0x48cb55
48c4de: xor ebx, ebx
48c4e0: mov rdx, qword ptr [r15 + 8]
48c4e4: mov eax, ebx
48c4e6: add ebx, 1
48c4e9: mov qword ptr [r8 + rax*8], rdx
48c4ed: mov rax, qword ptr [r15 + 8]
48c4f1: and byte ptr [rax + 0x31c], 0x9f
48c4f8: mov r15, qword ptr [r15 + 0x10]
48c4fc: test r15, r15
48c4ff: jne 0x48c4e0
48c501: test byte ptr [rip + 0x372b9], 8
48c508: jne 0x48c99e
48c50e: mov rax, qword ptr [rbp - 0x4a8]
48c515: cmp qword ptr [r8], rax
48c518: jne 0x48cf9c
48c51e: mov r9, qword ptr [rax + 0x3d0]
48c525: xor r14d, r14d
48c528: test r9, r9
48c52b: je 0x48c6bb
48c531: mov ecx, dword ptr [r9]
48c534: lea rsi, [r9 + 8]
48c538: cmp ebx, 1
48c53b: jbe 0x48cc10
48c541: lea eax, [rbx - 2]
48c544: lea rdx, [r8 + 8]
48c548: lea r10, [r8 + rax*8 + 0x10]
48c54d: nop dword ptr [rax]
48c550: mov rdi, qword ptr [rdx]
48c553: add rdx, 8
48c557: movzx eax, byte ptr [rdi + 0x31c]
48c55e: and eax, 0xffffff9f
48c561: or eax, 0x20
48c564: mov byte ptr [rdi + 0x31c], al
48c56a: cmp r10, rdx
48c56d: jne 0x48c550
48c56f: xor r14d, r14d
48c572: test ecx, ecx
48c574: je 0x48c6a0
48c57a: xor r14d, r14d
48c57d: xor r12d, r12d
48c580: lea rax, [r9 + 0x10]
48c584: mov dword ptr [rbp - 0x4d4], ebx
48c58a: mov qword ptr [rbp - 0x4b0], rax
48c591: mov rbx, r14
48c594: mov r15, r9
48c597: mov r14d, r12d
48c59a: mov qword ptr [rbp - 0x4c8], r13
48c5a1: mov r12, rsi
48c5a4: mov qword ptr [rbp - 0x4d0], r8
48c5ab: jmp 0x48c5bc
48c5ad: nop dword ptr [rax]
48c5b0: mov r14d, r13d
48c5b3: cmp ecx, r14d
48c5b6: jbe 0x48c684
48c5bc: mov eax, r14d
48c5bf: lea r13d, [r14 + 1]
48c5c3: lea rdx, [rax*8]
48c5cb: mov rax, qword ptr [r12 + rax*8]
48c5cf: test byte ptr [rax + 0x31c], 0x60
48c5d6: je 0x48c5b0
48c5d8: mov rax, qword ptr [rbp - 0x4a8]
48c5df: mov qword ptr [rbp - 0x498], rdx
48c5e6: mov eax, dword ptr [rax + 0x3d8]
48c5ec: lea rdi, [rax*8 + 8]
48c5f4: call 0x426410
48c5f9: mov rdx, qword ptr [rbp - 0x498]
48c600: test rax, rax
48c603: mov rbx, rax
48c606: je 0x48cf06
48c60c: lea rdi, [rax + 8]
48c610: mov rsi, r12
48c613: call 0x401060
48c618: mov r11d, dword ptr [r15]
48c61b: cmp r11d, r13d
48c61e: jbe 0x48c930
48c624: lea edx, [r11 - 2]
48c628: mov ecx, r13d
48c62b: sub edx, r14d
48c62e: lea rax, [r15 + rcx*8 + 8]
48c633: add rdx, rcx
48c636: mov rcx, qword ptr [rbp - 0x4b0]
48c63d: lea rdi, [rcx + rdx*8]
48c641: mov ecx, r14d
48c644: nop dword ptr [rax]
48c648: mov rdx, qword ptr [rax]
48c64b: test byte ptr [rdx + 0x31c], 0x60
48c652: jne 0x48c65e
48c654: mov esi, ecx
48c656: add ecx, 1
48c659: mov qword ptr [rbx + rsi*8 + 8], rdx
48c65e: add rax, 8
48c662: cmp rax, rdi
48c665: jne 0x48c648
48c667: lea r8d, [r11 + r13 - 1]
48c66c: sub r8d, r14d
48c66f: mov r13d, r8d
48c672: mov dword ptr [rbx], ecx
48c674: mov ecx, dword ptr [r15]
48c677: lea r14d, [r13 + 1]
48c67b: cmp ecx, r14d
48c67e: ja 0x48c5bc
48c684: mov r14, rbx
48c687: mov ebx, dword ptr [rbp - 0x4d4]
48c68d: mov r13, qword ptr [rbp - 0x4c8]
48c694: mov r8, qword ptr [rbp - 0x4d0]
48c69b: cmp ebx, 1
48c69e: jbe 0x48c6bb
48c6a0: mov eax, 1
48c6a5: nop dword ptr [rax]
48c6a8: mov rdx, qword ptr [r8 + rax*8]
48c6ac: add rax, 1
48c6b0: and byte ptr [rdx + 0x31c], 0x9f
48c6b7: cmp ebx, eax
48c6b9: ja 0x48c6a8
48c6bb: mov r12d, ebx
48c6be: mov rsi, r8
48c6c1: mov rdi, r13
48c6c4: lea rdx, [r12*8]
48c6cc: call 0x401060
48c6d1: lea esi, [rbx - 1]
48c6d4: lea rdi, [r13 + 8]
48c6d8: xor ecx, ecx
48c6da: xor edx, edx
48c6dc: call 0x48a9f0
48c6e1: mov qword ptr [r13 + r12*8], 0
48c6ea: mov rax, qword ptr [rbp - 0x4a8]
48c6f1: or byte ptr [rax + 0x31e], 1
48c6f8: mov qword ptr [rax + 0x3c8], r13
48c6ff: test r14, r14
48c702: je 0x48c717
48c704: mov rdi, qword ptr [rax + 0x3d0]
48c70b: mov qword ptr [rax + 0x3d0], r14
48c712: call 0x482790
48c717: mov rax, qword ptr [rbp - 0x4a0]
48c71e: test rax, rax
48c721: je 0x48c72b
48c723: mov rdi, rax
48c726: call 0x482790
48c72b: mov eax, dword ptr [rbp - 0x4c0]
48c731: test eax, eax
48c733: jne 0x48cf11
48c739: lea rsp, [rbp - 0x28]
48c73d: pop rbx
48c73e: pop r12
48c740: pop r13
48c742: pop r14
48c744: pop r15
48c746: pop rbp
48c747: ret 
48c748: nop dword ptr [rax + rax]
48c750: cmp qword ptr [r13 + 0x3c8], 0
48c758: jne 0x48bf54
48c75e: cmp qword ptr [rbp - 0x4a8], r13
48c765: je 0x48bf54
48c76b: movzx eax, word ptr [r13 + 0x2ba]
48c773: test ax, ax
48c776: je 0x48bf54
48c77c: movzx esi, ax
48c77f: lea rdi, [rbp - 0x440]
48c786: mov edx, 8
48c78b: call 0x428e40
48c790: test al, al
48c792: je 0x48ce56
48c798: mov rax, qword ptr [rbp - 0x440]
48c79f: mov qword ptr [rbp - 0x4a0], rax
48c7a6: jmp 0x48bf54
48c7ab: mov r14, rax
48c7ae: mov qword ptr [rbp - 0x458], r14
48c7b5: test byte ptr [rip + 0x37004], 1
48c7bc: jne 0x48cddb
48c7c2: lea r14, [rbp - 0x490]
48c7c9: lea rdx, [rbp - 0x470]
48c7d0: lea rsi, [rip - 0xa87]
48c7d7: mov rdi, r14
48c7da: call 0x4850c0
48c7df: cmp qword ptr [rbp - 0x488], 0
48c7e7: mov rdx, rsp
48c7ea: jne 0x48ce12
48c7f0: cmp rsp, rdx
48c7f3: je 0x48c80a
48c7f5: sub rsp, 0x1000
48c7fc: or qword ptr [rsp + 0xff8], 0
48c805: cmp rsp, rdx
48c808: jne 0x48c7f5
48c80a: sub rsp, 0x20
48c80e: or qword ptr [rsp + 0x18], 0
48c814: mov rbx, qword ptr [rbp - 0x4e0]
48c81b: movdqu xmm2, xmmword ptr [rbx]
48c81f: lea rcx, [rsp + 0xf]
48c824: movaps xmmword ptr [rbp - 0x4c0], xmm2
48c82b: and rcx, 0xfffffffffffffff0
48c82f: movaps xmmword ptr [rcx], xmm2
48c832: mov rax, qword ptr [rbx + 0x10]
48c836: mov qword ptr [rcx + 0x10], rax
48c83a: mov rax, qword ptr [rbp - 0x450]
48c841: mov dword ptr [rbx], 0
48c847: mov qword ptr [rbx + 8], rax
48c84b: mov rbx, qword ptr [rbp - 0x4a0]
48c852: test rbx, rbx
48c855: je 0x48c869
48c857: mov edx, r15d
48c85a: add r15d, 1
48c85e: mov qword ptr [rbx + rdx*8], rax
48c862: mov rax, qword ptr [rbp - 0x450]
48c869: test byte ptr [rax + 0x31c], 0x60
48c870: jne 0x48cbd3
48c876: mov rbx, qword ptr [rbp - 0x4e0]
48c87d: mov rsi, qword ptr [rax + 0x20]
48c881: add dword ptr [rbp - 0x4d0], 1
48c888: mov qword ptr [rbx + 0x10], rcx
48c88c: movzx edx, byte ptr [rax + 0x31c]
48c893: and edx, 0xffffff9f
48c896: or edx, 0x20
48c899: mov byte ptr [rax + 0x31c], dl
48c89f: mov rdx, qword ptr [rax + 0x18]
48c8a3: test rsi, rsi
48c8a6: je 0x48c8b0
48c8a8: mov qword ptr [rsi + 0x18], rdx
48c8ac: mov rdx, qword ptr [rax + 0x18]
48c8b0: test rdx, rdx
48c8b3: je 0x48c8b9
48c8b5: mov qword ptr [rdx + 0x20], rsi
48c8b9: mov rdx, qword ptr [rcx + 8]
48c8bd: mov rsi, qword ptr [rdx + 0x20]
48c8c1: mov qword ptr [rax + 0x20], rsi
48c8c5: mov qword ptr [rdx + 0x20], rax
48c8c9: mov rsi, qword ptr [rax + 0x20]
48c8cd: test rsi, rsi
48c8d0: je 0x48c8d6
48c8d2: mov qword ptr [rsi + 0x18], rax
48c8d6: mov qword ptr [rax + 0x18], rdx
48c8da: mov rbx, qword ptr [rbp - 0x4e0]
48c8e1: cmp qword ptr [rbp - 0x4b0], rbx
48c8e8: je 0x48cbc0
48c8ee: mov qword ptr [rbp - 0x4e0], rcx
48c8f5: jmp 0x48c266
48c8fa: nop word ptr [rax + rax]
48c900: cmp qword ptr [rbx + 0x2c0], 0
48c908: je 0x48c48f
48c90e: lea rcx, [rip + 0x23ecb]
48c915: mov edx, 0x1d8
48c91a: lea rsi, [rip + 0x23ce8]
48c921: lea rdi, [rip + 0x23e10]
48c928: call 0x4032a0
48c92d: nop dword ptr [rax]
48c930: mov ecx, r14d
48c933: jmp 0x48c672
48c938: or qword ptr [rsp + rax - 8], 0
48c93e: jmp 0x48be11
48c943: mov rax, qword ptr [r13 + 8]
48c947: cmp byte ptr [rax], 0
48c94a: jne 0x48ceb5
48c950: mov qword ptr [rbp - 0x4c0], rdx
48c957: call 0x482630
48c95c: mov rdx, qword ptr [rbp - 0x4c0]
48c963: mov qword ptr [r13 + 0x348], rax
48c96a: mov rdi, rax
48c96d: lea rax, [rax - 1]
48c971: cmp rax, -3
48c975: jbe 0x48c2e3
48c97b: xor ecx, ecx
48c97d: jmp 0x48c2f9
48c982: mov qword ptr [rbp - 0x4b0], r10
48c989: mov r13, rbx
48c98c: mov rax, r10
48c98f: mov dword ptr [rbp - 0x4d0], 1
48c999: jmp 0x48bed5
48c99e: mov rax, qword ptr [rbp - 0x4a8]
48c9a5: cmp qword ptr [rip + 0x347d4], rax
48c9ac: jne 0x48c50e
48c9b2: test ebx, ebx
48c9b4: je 0x48c50e
48c9ba: lea eax, [rbx - 1]
48c9bd: xor r15d, r15d
48c9c0: mov dword ptr [rbp - 0x4d0], ebx
48c9c6: mov r14, r13
48c9c9: lea r12, [rax*8 + 8]
48c9d1: lea rax, [r13 + 8]
48c9d5: mov rbx, qword ptr [rbp - 0x4a8]
48c9dc: mov r13, r15
48c9df: mov qword ptr [rbp - 0x4c8], rax
48c9e6: jmp 0x48c9fd
48c9e8: nop dword ptr [rax + rax]
48c9f0: add r13, 8
48c9f4: cmp r12, r13
48c9f7: je 0x48ce2d
48c9fd: mov r15, qword ptr [r8 + r13]
48ca01: cmp rbx, r15
48ca04: je 0x48c9f0
48ca06: mov rax, qword ptr [r15 + 0x398]
48ca0d: test rax, rax
48ca10: je 0x48ca19
48ca12: mov edx, dword ptr [rax + 8]
48ca15: test edx, edx
48ca17: jne 0x48c9f0
48ca19: cmp qword ptr [r15 + 0x1e8], 0
48ca21: jne 0x48ce9e
48ca27: cmp qword ptr [r15 + 0x1d8], 0
48ca2f: jne 0x48ce9e
48ca35: mov qword ptr [r14], r15
48ca38: movzx eax, byte ptr [r15 + 0x31c]
48ca40: and eax, 0xffffff9f
48ca43: or eax, 0x20
48ca46: mov byte ptr [r15 + 0x31c], al
48ca4d: mov rax, qword ptr [r15 + 0x3c8]
48ca54: test rax, rax
48ca57: je 0x48cda0
48ca5d: mov rdx, qword ptr [rax + 8]
48ca61: lea r8, [rax + 8]
48ca65: mov rax, qword ptr [rbp - 0x4c8]
48ca6c: test rdx, rdx
48ca6f: je 0x48cda0
48ca75: test byte ptr [rdx + 0x31c], 0x60
48ca7c: je 0x48cc80
48ca82: mov rdx, qword ptr [r8 + 8]
48ca86: add r8, 8
48ca8a: test rdx, rdx
48ca8d: jne 0x48ca75
48ca8f: sub rax, r14
48ca92: sar rax, 3
48ca96: mov rsi, rax
48ca99: mov r8d, eax
48ca9c: cmp eax, dword ptr [rbp - 0x4d0]
48caa2: ja 0x48cee7
48caa8: test eax, eax
48caaa: je 0x48caf4
48caac: mov rax, qword ptr [r14]
48caaf: and byte ptr [rax + 0x31c], 0x9f
48cab6: cmp esi, 1
48cab9: jbe 0x48ce93
48cabf: lea edx, [r8 - 2]
48cac3: mov rax, qword ptr [rbp - 0x4c8]
48caca: lea rdi, [r14 + rdx*8 + 0x10]
48cacf: nop 
48cad0: mov rdx, qword ptr [rax]
48cad3: and byte ptr [rdx + 0x31c], 0x9f
48cada: mov rdx, qword ptr [rax]
48cadd: cmp qword ptr [rdx + 0xc0], 0
48cae5: jne 0x48cd90
48caeb: add rax, 8
48caef: cmp rdi, rax
48caf2: jne 0x48cad0
48caf4: mov esi, esi
48caf6: mov dword ptr [rbp - 0x4b0], r8d
48cafd: lea rdx, [rsi*8 + 0x10]
48cb05: mov rdi, rdx
48cb08: mov qword ptr [rbp - 0x498], rdx
48cb0f: call 0x426410
48cb14: mov rdx, qword ptr [rbp - 0x498]
48cb1b: mov r8d, dword ptr [rbp - 0x4b0]
48cb22: test rax, rax
48cb25: mov qword ptr [r15 + 0x398], rax
48cb2c: je 0x48cf7e
48cb32: lea rdi, [rax + 0x10]
48cb36: mov dword ptr [rax + 8], r8d
48cb3a: sub rdx, 0x10
48cb3e: mov rsi, r14
48cb41: mov qword ptr [rax], rdi
48cb44: call 0x401060
48cb49: mov r8, qword ptr [rbx + 0x2c0]
48cb50: jmp 0x48c9f0
48cb55: mov rdx, qword ptr [r15 + 8]
48cb59: xor eax, eax
48cb5b: test byte ptr [rdx + 0x31d], 2
48cb62: je 0x48cb9d
48cb64: nop dword ptr [rax]
48cb68: mov rcx, qword ptr [rbp - 0x4a8]
48cb6f: mov ebx, eax
48cb71: sub dword ptr [rcx + 0x2c8], 1
48cb78: and byte ptr [rdx + 0x31c], 0x9f
48cb7f: mov r15, qword ptr [r15 + 0x10]
48cb83: test r15, r15
48cb86: je 0x48c501
48cb8c: mov eax, ebx
48cb8e: nop 
48cb90: mov rdx, qword ptr [r15 + 8]
48cb94: test byte ptr [rdx + 0x31d], 2
48cb9b: jne 0x48cb68
48cb9d: mov qword ptr [r8 + rax*8], rdx
48cba1: lea ebx, [rax + 1]
48cba4: mov rax, qword ptr [r15 + 8]
48cba8: and byte ptr [rax + 0x31c], 0x9f
48cbaf: mov r15, qword ptr [r15 + 0x10]
48cbb3: test r15, r15
48cbb6: je 0x48c501
48cbbc: mov eax, ebx
48cbbe: jmp 0x48cb90
48cbc0: mov qword ptr [rbp - 0x4e0], rcx
48cbc7: mov qword ptr [rbp - 0x4b0], rcx
48cbce: jmp 0x48c266
48cbd3: mov rdx, rcx
48cbd6: jmp 0x48cbe6
48cbd8: nop dword ptr [rax + rax]
48cbe0: cmp qword ptr [rdx + 8], rax
48cbe4: je 0x48cc1d
48cbe6: mov rsi, rdx
48cbe9: mov rdx, qword ptr [rdx + 0x10]
48cbed: test rdx, rdx
48cbf0: jne 0x48cbe0
48cbf2: mov rbx, qword ptr [rbp - 0x4e0]
48cbf9: movdqa xmm4, xmmword ptr [rcx]
48cbfd: movups xmmword ptr [rbx], xmm4
48cc00: mov rax, qword ptr [rcx + 0x10]
48cc04: mov qword ptr [rbx + 0x10], rax
48cc08: jmp 0x48c266
48cc0d: nop dword ptr [rax]
48cc10: test ecx, ecx
48cc12: jne 0x48c57a
48cc18: jmp 0x48c6bb
48cc1d: mov rbx, qword ptr [rbp - 0x4e0]
48cc24: mov qword ptr [rbx + 0x10], rcx
48cc28: mov rbx, qword ptr [rbp - 0x4b0]
48cc2f: mov rdx, qword ptr [rsi + 0x10]
48cc33: cmp rdx, rbx
48cc36: mov rdx, qword ptr [rdx + 0x10]
48cc3a: cmove rbx, rsi
48cc3e: mov qword ptr [rsi + 0x10], rdx
48cc42: mov rsi, qword ptr [rax + 0x20]
48cc46: mov qword ptr [rbp - 0x4b0], rbx
48cc4d: mov rdx, qword ptr [rax + 0x18]
48cc51: test rsi, rsi
48cc54: jne 0x48c8a8
48cc5a: jmp 0x48c8b0
48cc5f: mov qword ptr [rbp - 0x4c8], rax
48cc66: jmp 0x48c002
48cc6b: or qword ptr [rsp + rdx - 8], 0
48cc71: jmp 0x48c364
48cc76: nop word ptr cs:[rax + rax]
48cc80: mov qword ptr [rax], rdx
48cc83: movzx ecx, byte ptr [rdx + 0x31c]
48cc8a: add rax, 8
48cc8e: and ecx, 0xffffff9f
48cc91: or ecx, 0x20
48cc94: mov byte ptr [rdx + 0x31c], cl
48cc9a: mov rdx, qword ptr [rdx + 0x3c8]
48cca1: test rdx, rdx
48cca4: je 0x48ca82
48ccaa: lea rcx, [rdx + 8]
48ccae: mov rdx, qword ptr [rdx + 8]
48ccb2: test rdx, rdx
48ccb5: je 0x48ca82
48ccbb: test byte ptr [rdx + 0x31c], 0x60
48ccc2: je 0x48cce2
48ccc4: nop dword ptr [rax]
48ccc8: mov rdx, qword ptr [rcx + 8]
48cccc: add rcx, 8
48ccd0: test rdx, rdx
48ccd3: je 0x48ca82
48ccd9: test byte ptr [rdx + 0x31c], 0x60
48cce0: jne 0x48ccc8
48cce2: mov qword ptr [rax], rdx
48cce5: movzx esi, byte ptr [rdx + 0x31c]
48ccec: add rax, 8
48ccf0: and esi, 0xffffff9f
48ccf3: or esi, 0x20
48ccf6: mov byte ptr [rdx + 0x31c], sil
48ccfd: mov rdx, qword ptr [rdx + 0x3c8]
48cd04: test rdx, rdx
48cd07: je 0x48ccc8
48cd09: lea r9, [rdx + 8]
48cd0d: mov rdx, qword ptr [rdx + 8]
48cd11: test rdx, rdx
48cd14: je 0x48ccc8
48cd16: test byte ptr [rdx + 0x31c], 0x60
48cd1d: je 0x48cd36
48cd1f: nop 
48cd20: mov rdx, qword ptr [r9 + 8]
48cd24: add r9, 8
48cd28: test rdx, rdx
48cd2b: je 0x48ccc8
48cd2d: test byte ptr [rdx + 0x31c], 0x60
48cd34: jne 0x48cd20
48cd36: mov qword ptr [rax], rdx
48cd39: lea r11, [rax + 8]
48cd3d: movzx eax, byte ptr [rdx + 0x31c]
48cd44: and eax, 0xffffff9f
48cd47: or eax, 0x20
48cd4a: mov byte ptr [rdx + 0x31c], al
48cd50: mov rdx, qword ptr [rdx + 0x3c8]
48cd57: mov rax, r11
48cd5a: test rdx, rdx
48cd5d: je 0x48cd20
48cd5f: mov rsi, qword ptr [rdx + 8]
48cd63: lea r10, [rdx + 8]
48cd67: test rsi, rsi
48cd6a: je 0x48cd20
48cd6c: test byte ptr [rsi + 0x31c], 0x60
48cd73: je 0x48cdc0
48cd75: mov rsi, qword ptr [r10 + 8]
48cd79: add r10, 8
48cd7d: test rsi, rsi
48cd80: jne 0x48cd6c
48cd82: mov rax, r11
48cd85: jmp 0x48cd20
48cd87: nop word ptr [rax + rax]
48cd90: or byte ptr [r15 + 0x31d], 0x80
48cd98: jmp 0x48caeb
48cd9d: nop dword ptr [rax]
48cda0: mov rax, qword ptr [r14]
48cda3: mov esi, 1
48cda8: mov r8d, 1
48cdae: and byte ptr [rax + 0x31c], 0x9f
48cdb5: jmp 0x48caf4
48cdba: nop word ptr [rax + rax]
48cdc0: mov rdi, r11
48cdc3: call 0x48bcc0
48cdc8: mov rsi, qword ptr [r10 + 8]
48cdcc: add r10, 8
48cdd0: lea r11, [r11 + rax*8]
48cdd4: test rsi, rsi
48cdd7: jne 0x48cd6c
48cdd9: jmp 0x48cd82
48cddb: mov rdx, qword ptr [r13 + 8]
48cddf: cmp byte ptr [rdx], 0
48cde2: jne 0x48cdfc
48cde4: mov rax, qword ptr [rip + 0x32c7d]
48cdeb: mov rdx, qword ptr [rax]
48cdee: lea rax, [rip + 0x1d53a]
48cdf5: test rdx, rdx
48cdf8: cmove rdx, rax
48cdfc: mov rsi, r14
48cdff: lea rdi, [rip + 0x238e2]
48ce06: xor eax, eax
48ce08: call 0x480f60
48ce0d: jmp 0x48c7c2
48ce12: cmp qword ptr [r12], 0x7ffffffd
48ce1a: jne 0x48c400
48ce20: mov rdi, r14
48ce23: call 0x483b10
48ce28: jmp 0x48c266
48ce2d: mov ebx, dword ptr [rbp - 0x4d0]
48ce33: mov r13, r14
48ce36: jmp 0x48c50e
48ce3b: xor r15d, r15d
48ce3e: jmp 0x48bf7e
48ce43: lea rcx, [rip + 0x237fe]
48ce4a: xor edx, edx
48ce4c: mov rsi, r14
48ce4f: xor edi, edi
48ce51: call 0x485060
48ce56: mov rax, qword ptr [rbp - 0x4a8]
48ce5d: lea rcx, [rip + 0x237bc]
48ce64: xor edx, edx
48ce66: mov edi, 0xc
48ce6b: mov rsi, qword ptr [rax + 8]
48ce6f: call 0x485060
48ce74: lea rcx, [rip + 0x23965]
48ce7b: mov edx, 0xf4
48ce80: lea rsi, [rip + 0x23782]
48ce87: lea rdi, [rip + 0x1da3a]
48ce8e: call 0x4032a0
48ce93: mov r8d, 1
48ce99: jmp 0x48caf4
48ce9e: mov rsi, qword ptr [r15 + 8]
48cea2: lea rcx, [rip + 0x238df]
48cea9: xor edx, edx
48ceab: mov edi, 0x16
48ceb0: call 0x485060
48ceb5: lea rcx, [rip + 0x23924]
48cebc: mov edx, 0x11f
48cec1: lea rsi, [rip + 0x23741]
48cec8: lea rdi, [rip + 0x1d9f9]
48cecf: call 0x4032a0
48ced4: lea rcx, [rip + 0x237e5]
48cedb: xor edx, edx
48cedd: mov rsi, r14
48cee0: xor edi, edi
48cee2: call 0x485060
48cee7: lea rcx, [rip + 0x238f2]
48ceee: mov edx, 0x210
48cef3: lea rsi, [rip + 0x2370f]
48cefa: lea rdi, [rip + 0x23712]
48cf01: call 0x4032a0
48cf06: mov ecx, dword ptr [r15]
48cf09: mov r14d, r13d
48cf0c: jmp 0x48c5b3
48cf11: cmp dword ptr [rbp - 0x4c0], -1
48cf18: jne 0x48cf24
48cf1a: mov dword ptr [rbp - 0x4c0], 0
48cf24: mov edi, dword ptr [rbp - 0x4c0]
48cf2a: lea rsi, [rbp - 0x490]
48cf31: xor edx, edx
48cf33: call 0x485010
48cf38: lea rcx, [rip + 0x23709]
48cf3f: xor edx, edx
48cf41: mov rsi, r14
48cf44: xor edi, edi
48cf46: call 0x485060
48cf4b: mov rdi, qword ptr [rbp - 0x440]
48cf52: cmp rdi, qword ptr [rbp - 0x4e8]
48cf59: je 0x48cf60
48cf5b: call 0x426a00
48cf60: mov rax, qword ptr [rbp - 0x4a8]
48cf67: lea rcx, [rip + 0x237aa]
48cf6e: xor edx, edx
48cf70: mov edi, 0xc
48cf75: mov rsi, qword ptr [rax + 8]
48cf79: call 0x485060
48cf7e: mov rax, qword ptr [rbp - 0x4a8]
48cf85: lea rcx, [rip + 0x237d4]
48cf8c: xor edx, edx
48cf8e: mov edi, 0xc
48cf93: mov rsi, qword ptr [rax + 8]
48cf97: call 0x485060
48cf9c: lea rcx, [rip + 0x2383d]
48cfa3: mov edx, 0x229
48cfa8: lea rsi, [rip + 0x2365a]
48cfaf: lea rdi, [rip + 0x23802]
48cfb6: call 0x4032a0
48cfbb: nop dword ptr [rax + rax]
48cfc0: push r14
48cfc2: push r13
48cfc4: mov r13, rcx
48cfc7: push r12
48cfc9: mov r12, rdx
48cfcc: push rbp
48cfcd: mov ebp, esi
48cfcf: push rbx
48cfd0: movzx eax, byte ptr [rdi + 0x31c]
48cfd7: mov rbx, rdi
48cfda: mov rsi, qword ptr [rdi + 8]
48cfde: or eax, 8
48cfe1: mov byte ptr [rdi + 0x31c], al
48cfe7: movzx edx, byte ptr [rsi]
48cfea: test dl, dl
48cfec: je 0x48d0b0
48cff2: mov rax, qword ptr [rbx + 0xa0]
48cff9: test rax, rax
48cffc: je 0x48d070
48cffe: test byte ptr [rip + 0x367bb], 2
48d005: jne 0x48d088
48d00b: mov rax, qword ptr [rax + 8]
48d00f: mov rdx, r13
48d012: add rax, qword ptr [rbx]
48d015: mov rsi, r12
48d018: mov edi, ebp
48d01a: call rax
48d01c: mov rax, qword ptr [rbx + 0x108]
48d023: test rax, rax
48d026: je 0x48d063
48d028: mov rdx, qword ptr [rbx + 0x118]
48d02f: mov rbx, qword ptr [rbx]
48d032: add rbx, qword ptr [rax + 8]
48d036: mov rdx, qword ptr [rdx + 8]
48d03a: shr rdx, 3
48d03e: test edx, edx
48d040: je 0x48d063
48d042: lea eax, [rdx - 1]
48d045: lea r14, [rbx + rax*8 + 8]
48d04a: nop word ptr [rax + rax]
48d050: mov rdx, r13
48d053: mov rsi, r12
48d056: mov edi, ebp
48d058: call qword ptr [rbx]
48d05a: add rbx, 8
48d05e: cmp r14, rbx
48d061: jne 0x48d050
48d063: pop rbx
48d064: pop rbp
48d065: pop r12
48d067: pop r13
48d069: pop r14
48d06b: ret 
48d06c: nop dword ptr [rax]
48d070: mov rax, qword ptr [rbx + 0x108]
48d077: test rax, rax
48d07a: je 0x48d063
48d07c: test byte ptr [rip + 0x3673d], 2
48d083: je 0x48d028
48d085: nop dword ptr [rax]
48d088: test dl, dl
48d08a: je 0x48d0ba
48d08c: xor eax, eax
48d08e: lea rdi, [rip + 0x2375f]
48d095: call 0x480f60
48d09a: mov rax, qword ptr [rbx + 0xa0]
48d0a1: test rax, rax
48d0a4: je 0x48d01c
48d0aa: jmp 0x48d00b
48d0af: nop 
48d0b0: test al, 3
48d0b2: jne 0x48cff2
48d0b8: jmp 0x48d063
48d0ba: mov rax, qword ptr [rip + 0x329a7]
48d0c1: mov rsi, qword ptr [rax]
48d0c4: lea rax, [rip + 0x1d264]
48d0cb: test rsi, rsi
48d0ce: cmove rsi, rax
48d0d2: jmp 0x48d08c
48d0d4: nop word ptr cs:[rax + rax]
48d0df: nop 
48d0e0: endbr64 
48d0e4: push r15
48d0e6: push r14
48d0e8: mov r14, rdi
48d0eb: push r13
48d0ed: mov r13, rcx
48d0f0: push r12
48d0f2: mov r12, rdx
48d0f5: push rbp
48d0f6: mov ebp, esi
48d0f8: push rbx
48d0f9: sub rsp, 8
48d0fd: mov rbx, qword ptr [rdi + 0x140]
48d104: mov r15, qword ptr [rdi + 0x148]
48d10b: mov rdi, qword ptr [rip + 0x36746]
48d112: test rdi, rdi
48d115: jne 0x48d1c8
48d11b: test rbx, rbx
48d11e: je 0x48d125
48d120: test r15, r15
48d123: jne 0x48d17a
48d125: mov eax, dword ptr [r14 + 0x2c8]
48d12c: lea ebx, [rax - 1]
48d12f: test eax, eax
48d131: je 0x48d16b
48d133: shl rbx, 3
48d137: nop word ptr [rax + rax]
48d140: mov rax, qword ptr [r14 + 0x3c8]
48d147: mov rdi, qword ptr [rax + rbx]
48d14b: test byte ptr [rdi + 0x31c], 8
48d152: jne 0x48d161
48d154: mov rcx, r13
48d157: mov rdx, r12
48d15a: mov esi, ebp
48d15c: call 0x48cfc0
48d161: sub rbx, 8
48d165: cmp rbx, -8
48d169: jne 0x48d140
48d16b: add rsp, 8
48d16f: pop rbx
48d170: pop rbp
48d171: pop r12
48d173: pop r13
48d175: pop r14
48d177: pop r15
48d179: ret 
48d17a: mov r15, qword ptr [r15 + 8]
48d17e: shr r15, 3
48d182: test r15d, r15d
48d185: je 0x48d125
48d187: test byte ptr [rip + 0x36632], 2
48d18e: jne 0x48d1e6
48d190: mov rax, qword ptr [r14]
48d193: add rax, qword ptr [rbx + 8]
48d197: lea edx, [r15 - 1]
48d19b: lea rbx, [rax + 8]
48d19f: lea r15, [rbx + rdx*8]
48d1a3: jmp 0x48d1ac
48d1a5: nop dword ptr [rax]
48d1a8: add rbx, 8
48d1ac: mov rdx, r13
48d1af: mov rsi, r12
48d1b2: mov edi, ebp
48d1b4: call qword ptr [rax]
48d1b6: mov rax, rbx
48d1b9: cmp r15, rbx
48d1bc: jne 0x48d1a8
48d1be: jmp 0x48d125
48d1c3: nop dword ptr [rax + rax]
48d1c8: test byte ptr [rdi + 0x31c], 8
48d1cf: jne 0x48d1d6
48d1d1: call 0x48cfc0
48d1d6: mov qword ptr [rip + 0x36677], 0
48d1e1: jmp 0x48d11b
48d1e6: mov rsi, qword ptr [r14 + 8]
48d1ea: cmp byte ptr [rsi], 0
48d1ed: jne 0x48d207
48d1ef: mov rax, qword ptr [rip + 0x32872]
48d1f6: mov rsi, qword ptr [rax]
48d1f9: lea rax, [rip + 0x1d12f]
48d200: test rsi, rsi
48d203: cmove rsi, rax
48d207: lea rdi, [rip + 0x235fa]
48d20e: xor eax, eax
48d210: call 0x480f60
48d215: jmp 0x48d190
48d21a: nop word ptr [rax + rax]
48d220: endbr64 
48d224: push r15
48d226: push r14
48d228: push r13
48d22a: push r12
48d22c: push rbp
48d22d: push rbx
48d22e: sub rsp, 0x98
48d235: mov rax, qword ptr [rdi + 0x68]
48d239: mov dword ptr [rsp + 0x44], esi
48d23d: mov dword ptr [rsp + 0x40], edx
48d241: test rax, rax
48d244: je 0x48d47a
48d24a: mov r13, qword ptr [rax + 8]
48d24e: mov rbp, rdi
48d251: mov rax, qword ptr [rdi + 0x160]
48d258: mov rdi, qword ptr [rdi + 0x170]
48d25f: mov qword ptr [rsp + 0x48], rax
48d264: mov qword ptr [rsp + 0x38], rdi
48d269: test rax, rax
48d26c: je 0x48d46b
48d272: mov rax, qword ptr [rax + 8]
48d276: add rax, qword ptr [rbp]
48d27a: xor r15d, r15d
48d27d: cmp word ptr [rax], 1
48d281: mov qword ptr [rsp + 0x20], rax
48d286: jne 0x48d7be
48d28c: mov qword ptr [rsp], r13
48d290: mov r12d, dword ptr [rax + 4]
48d294: mov rax, qword ptr [rbp + 0x30]
48d298: lea rdi, [rip + 0x33ee1]
48d29f: add r12, qword ptr [rsp]
48d2a3: lea rax, [rax + rax*8]
48d2a7: shl rax, 4
48d2ab: mov rbx, qword ptr [rdi + rax]
48d2af: test rbx, rbx
48d2b2: jne 0x48d2cd
48d2b4: jmp 0x48d48e
48d2b9: nop dword ptr [rax]
48d2c0: mov rbx, qword ptr [rbx + 0x18]
48d2c4: test rbx, rbx
48d2c7: je 0x48d48e
48d2cd: mov rsi, rbx
48d2d0: mov rdi, r12
48d2d3: call 0x481160
48d2d8: test eax, eax
48d2da: je 0x48d2c0
48d2dc: mov ecx, dword ptr [rsp + 0x40]
48d2e0: test ecx, ecx
48d2e2: jne 0x48d7ac
48d2e8: mov rax, qword ptr [rsp + 0x20]
48d2ed: mov qword ptr [rsp + 0x10], rbx
48d2f2: mov qword ptr [rsp + 8], rbp
48d2f7: mov r12d, dword ptr [rax + 8]
48d2fb: add r12, rax
48d2fe: movzx eax, word ptr [r12 + 4]
48d304: mov r13d, dword ptr [r12 + 8]
48d309: add r13, qword ptr [rsp]
48d30d: mov ebx, dword ptr [r12]
48d311: mov word ptr [rsp + 0x1e], ax
48d316: mov rax, qword ptr [rsp + 0x10]
48d31b: mov r14, qword ptr [rax + 0x28]
48d31f: mov rax, qword ptr [rsp + 8]
48d324: mov rbp, qword ptr [rax + 8]
48d328: cmp byte ptr [rbp], 0
48d32c: jne 0x48d346
48d32e: mov rax, qword ptr [rip + 0x32733]
48d335: mov rbp, qword ptr [rax]
48d338: lea rax, [rip + 0x1cff0]
48d33f: test rbp, rbp
48d342: cmove rbp, rax
48d346: mov rax, qword ptr [r14 + 0x68]
48d34a: mov r11, qword ptr [rax + 8]
48d34e: test byte ptr [rip + 0x3646b], 0x10
48d355: jne 0x48d550
48d35b: mov rax, qword ptr [r14 + 0x170]
48d362: test rax, rax
48d365: je 0x48d502
48d36b: mov rdx, qword ptr [rax + 8]
48d36f: test rdx, rdx
48d372: je 0x48d8af
48d378: add rdx, qword ptr [r14]
48d37b: cmp word ptr [rdx], 1
48d37f: jne 0x48d3c0
48d381: mov qword ptr [rsp + 0x28], r14
48d386: mov r14, r12
48d389: mov r12, r11
48d38c: mov qword ptr [rsp + 0x30], rbp
48d391: mov rbp, r13
48d394: mov r13d, ebx
48d397: mov rbx, rdx
48d39a: cmp r13d, dword ptr [rbx + 8]
48d39e: je 0x48d428
48d3a4: mov eax, dword ptr [rbx + 0x10]
48d3a7: test eax, eax
48d3a9: je 0x48d6dc
48d3af: add rbx, rax
48d3b2: cmp word ptr [rbx], 1
48d3b6: je 0x48d39a
48d3b8: mov r14, qword ptr [rsp + 0x28]
48d3bd: mov rdx, rbx
48d3c0: mov byte ptr [rsp + 0x63], 0
48d3c5: movzx edi, word ptr [rdx]
48d3c8: xor ecx, ecx
48d3ca: lea rsi, [rsp + 0x63]
48d3cf: mov edx, 0xa
48d3d4: call 0x467040
48d3d9: mov rsi, qword ptr [r14 + 8]
48d3dd: mov rcx, rax
48d3e0: cmp byte ptr [rsi], 0
48d3e3: jne 0x48d3fd
48d3e5: mov rax, qword ptr [rip + 0x3267c]
48d3ec: mov rsi, qword ptr [rax]
48d3ef: lea rax, [rip + 0x1cf39]
48d3f6: test rsi, rsi
48d3f9: cmove rsi, rax
48d3fd: lea rbp, [rsp + 0x70]
48d402: lea rdx, [rip + 0x23507]
48d409: xor eax, eax
48d40b: mov rdi, rbp
48d40e: call 0x4836d0
48d413: lea rdx, [rip + 0x23431]
48d41a: mov rsi, rbp
48d41d: xor edi, edi
48d41f: call 0x485010
48d424: nop dword ptr [rax]
48d428: mov eax, dword ptr [rbx + 0xc]
48d42b: mov rdi, rbp
48d42e: mov esi, dword ptr [rbx + rax]
48d431: add rsi, r12
48d434: call 0x401130
48d439: test eax, eax
48d43b: jne 0x48d3a4
48d441: mov r12, r14
48d444: movzx eax, word ptr [r12 + 6]
48d44a: and eax, 0x7fff
48d44f: cmp r15d, eax
48d452: cmovb r15d, eax
48d456: mov eax, dword ptr [r12 + 0xc]
48d45b: test eax, eax
48d45d: je 0x48d6b7
48d463: add r12, rax
48d466: jmp 0x48d2fe
48d46b: xor r15d, r15d
48d46e: cmp qword ptr [rsp + 0x38], 0
48d474: jne 0x48d599
48d47a: add rsp, 0x98
48d481: xor eax, eax
48d483: pop rbx
48d484: pop rbp
48d485: pop r12
48d487: pop r13
48d489: pop r14
48d48b: pop r15
48d48d: ret 
48d48e: mov esi, dword ptr [rbp + 0x2c8]
48d494: test esi, esi
48d496: je 0x48d4e3
48d498: xor r13d, r13d
48d49b: jmp 0x48d4ad
48d49d: nop dword ptr [rax]
48d4a0: add r13d, 1
48d4a4: cmp r13d, dword ptr [rbp + 0x2c8]
48d4ab: jae 0x48d4e3
48d4ad: mov rdx, qword ptr [rbp + 0x2c0]
48d4b4: mov eax, r13d
48d4b7: mov rdi, r12
48d4ba: lea rbx, [rax*8]
48d4c2: mov rsi, qword ptr [rdx + rax*8]
48d4c6: call 0x481160
48d4cb: test eax, eax
48d4cd: je 0x48d4a0
48d4cf: mov rax, qword ptr [rbp + 0x2c0]
48d4d6: mov rbx, qword ptr [rax + rbx]
48d4da: test rbx, rbx
48d4dd: jne 0x48d2dc
48d4e3: lea rcx, [rip + 0x234e6]
48d4ea: mov edx, 0xcd
48d4ef: lea rsi, [rip + 0x23329]
48d4f6: lea rdi, [rip + 0x2332f]
48d4fd: call 0x4032a0
48d502: mov edx, dword ptr [rsp + 0x44]
48d506: test edx, edx
48d508: je 0x48d444
48d50e: mov rsi, qword ptr [r14 + 8]
48d512: mov r8, rbp
48d515: cmp byte ptr [rsi], 0
48d518: jne 0x48d52d
48d51a: mov rax, qword ptr [rip + 0x32547]
48d521: mov rsi, qword ptr [rax]
48d524: test rsi, rsi
48d527: je 0x48d8ce
48d52d: lea rbp, [rsp + 0x70]
48d532: mov rcx, r8
48d535: lea rdx, [rip + 0x2339c]
48d53c: xor eax, eax
48d53e: mov rdi, rbp
48d541: call 0x4836d0
48d546: jmp 0x48d413
48d54b: nop dword ptr [rax + rax]
48d550: mov rdx, qword ptr [r14 + 8]
48d554: mov rcx, qword ptr [r14 + 0x30]
48d558: cmp byte ptr [rdx], 0
48d55b: je 0x48d69a
48d561: mov rax, qword ptr [rsp + 8]
48d566: mov r8, rbp
48d569: mov rsi, r13
48d56c: mov qword ptr [rsp + 0x28], r11
48d571: lea rdi, [rip + 0x23318]
48d578: mov r9, qword ptr [rax + 0x30]
48d57c: xor eax, eax
48d57e: call 0x480f60
48d583: mov r11, qword ptr [rsp + 0x28]
48d588: jmp 0x48d35b
48d58d: cmp qword ptr [rsp + 0x38], 0
48d593: mov r13, qword ptr [rsp]
48d597: je 0x48d5cc
48d599: mov rax, qword ptr [rsp + 0x38]
48d59e: mov rdx, qword ptr [rax + 8]
48d5a2: add rdx, qword ptr [rbp]
48d5a6: jmp 0x48d5b5
48d5a8: nop dword ptr [rax + rax]
48d5b0: mov eax, eax
48d5b2: add rdx, rax
48d5b5: movzx eax, word ptr [rdx + 4]
48d5b9: and eax, 0x7fff
48d5be: cmp r15d, eax
48d5c1: cmovb r15d, eax
48d5c5: mov eax, dword ptr [rdx + 0x10]
48d5c8: test eax, eax
48d5ca: jne 0x48d5b0
48d5cc: test r15d, r15d
48d5cf: je 0x48d47a
48d5d5: lea edi, [r15 + 1]
48d5d9: mov esi, 0x18
48d5de: mov rbx, rdi
48d5e1: call 0x427d10
48d5e6: mov qword ptr [rbp + 0x2e8], rax
48d5ed: mov rsi, rax
48d5f0: test rax, rax
48d5f3: je 0x48d864
48d5f9: mov rax, qword ptr [rbp + 0x1d0]
48d600: mov dword ptr [rbp + 0x2f0], ebx
48d606: mov rax, qword ptr [rax + 8]
48d60a: mov qword ptr [rbp + 0x340], rax
48d611: mov rax, qword ptr [rsp + 0x48]
48d616: test rax, rax
48d619: je 0x48d748
48d61f: mov rdi, qword ptr [rax + 8]
48d623: add rdi, qword ptr [rbp]
48d627: mov edx, dword ptr [rdi + 8]
48d62a: add rdx, rdi
48d62d: jmp 0x48d669
48d62f: nop 
48d630: movzx ecx, cx
48d633: and ax, 0x8000
48d637: mov r8d, dword ptr [rdx]
48d63a: lea rcx, [rcx + rcx*2]
48d63e: movzx eax, ax
48d641: lea rcx, [rsi + rcx*8]
48d645: mov dword ptr [rcx + 0xc], eax
48d648: mov eax, dword ptr [rdx + 8]
48d64b: mov dword ptr [rcx + 8], r8d
48d64f: add rax, r13
48d652: mov qword ptr [rcx], rax
48d655: mov eax, dword ptr [rdi + 4]
48d658: add rax, r13
48d65b: mov qword ptr [rcx + 0x10], rax
48d65f: mov eax, dword ptr [rdx + 0xc]
48d662: test eax, eax
48d664: je 0x48d68a
48d666: add rdx, rax
48d669: movzx eax, word ptr [rdx + 6]
48d66d: mov r8d, eax
48d670: mov ecx, eax
48d672: and r8d, 0x7fff
48d679: and cx, 0x7fff
48d67e: cmp ebx, r8d
48d681: ja 0x48d630
48d683: mov eax, dword ptr [rdx + 0xc]
48d686: test eax, eax
48d688: jne 0x48d666
48d68a: mov eax, dword ptr [rdi + 0xc]
48d68d: test eax, eax
48d68f: je 0x48d748
48d695: add rdi, rax
48d698: jmp 0x48d627
48d69a: mov rax, qword ptr [rip + 0x323c7]
48d6a1: mov rdx, qword ptr [rax]
48d6a4: lea rax, [rip + 0x1cc84]
48d6ab: test rdx, rdx
48d6ae: cmove rdx, rax
48d6b2: jmp 0x48d561
48d6b7: mov rbp, qword ptr [rsp + 8]
48d6bc: mov rdi, qword ptr [rsp + 0x20]
48d6c1: mov eax, dword ptr [rdi + 0xc]
48d6c4: test eax, eax
48d6c6: je 0x48d58d
48d6cc: add rdi, rax
48d6cf: mov qword ptr [rsp + 0x20], rdi
48d6d4: mov rax, rdi
48d6d7: jmp 0x48d290
48d6dc: mov r13, rbp
48d6df: mov r12, r14
48d6e2: mov rbp, qword ptr [rsp + 0x30]
48d6e7: mov r14, qword ptr [rsp + 0x28]
48d6ec: test byte ptr [rsp + 0x1e], 2
48d6f1: je 0x48d81f
48d6f7: mov eax, dword ptr [rsp + 0x44]
48d6fb: test eax, eax
48d6fd: je 0x48d444
48d703: mov rsi, qword ptr [r14 + 8]
48d707: mov r11, r13
48d70a: mov r8, rbp
48d70d: cmp byte ptr [rsi], 0
48d710: jne 0x48d725
48d712: mov rax, qword ptr [rip + 0x3234f]
48d719: mov rsi, qword ptr [rax]
48d71c: test rsi, rsi
48d71f: je 0x48d8a3
48d725: lea rbp, [rsp + 0x70]
48d72a: mov rcx, r11
48d72d: lea rdx, [rip + 0x23204]
48d734: xor eax, eax
48d736: mov rdi, rbp
48d739: call 0x4836d0
48d73e: jmp 0x48d413
48d743: nop dword ptr [rax + rax]
48d748: mov rax, qword ptr [rsp + 0x38]
48d74d: test rax, rax
48d750: je 0x48d47a
48d756: mov rax, qword ptr [rax + 8]
48d75a: add rax, qword ptr [rbp]
48d75e: jmp 0x48d79a
48d760: mov ecx, dword ptr [rax + 0xc]
48d763: movzx edx, word ptr [rax + 4]
48d767: mov edi, dword ptr [rax + 8]
48d76a: mov ecx, dword ptr [rax + rcx]
48d76d: and edx, 0x7fff
48d773: lea rdx, [rdx + rdx*2]
48d777: lea rdx, [rsi + rdx*8]
48d77b: add rcx, r13
48d77e: mov dword ptr [rdx + 8], edi
48d781: mov qword ptr [rdx], rcx
48d784: mov qword ptr [rdx + 0x10], 0
48d78c: mov edx, dword ptr [rax + 0x10]
48d78f: test edx, edx
48d791: je 0x48d47a
48d797: add rax, rdx
48d79a: test byte ptr [rax + 2], 1
48d79e: je 0x48d760
48d7a0: mov edx, dword ptr [rax + 0x10]
48d7a3: test edx, edx
48d7a5: jne 0x48d797
48d7a7: jmp 0x48d47a
48d7ac: test byte ptr [rbx + 0x31d], 2
48d7b3: je 0x48d2e8
48d7b9: jmp 0x48d6bc
48d7be: mov byte ptr [rsp + 0x63], 0
48d7c3: movzx edi, word ptr [rax]
48d7c6: xor ecx, ecx
48d7c8: lea rsi, [rsp + 0x63]
48d7cd: mov edx, 0xa
48d7d2: call 0x467040
48d7d7: mov rsi, qword ptr [rbp + 8]
48d7db: mov rcx, rax
48d7de: cmp byte ptr [rsi], 0
48d7e1: je 0x48d805
48d7e3: lea rbp, [rsp + 0x70]
48d7e8: lea rdx, [rip + 0x23071]
48d7ef: xor eax, eax
48d7f1: mov rdi, rbp
48d7f4: call 0x4836d0
48d7f9: xor edi, edi
48d7fb: xor edx, edx
48d7fd: mov rsi, rbp
48d800: call 0x485010
48d805: mov rax, qword ptr [rip + 0x3225c]
48d80c: mov rsi, qword ptr [rax]
48d80f: lea rax, [rip + 0x1cb19]
48d816: test rsi, rsi
48d819: cmove rsi, rax
48d81d: jmp 0x48d7e3
48d81f: mov rsi, qword ptr [r14 + 8]
48d823: mov r11, r13
48d826: mov r8, rbp
48d829: cmp byte ptr [rsi], 0
48d82c: jne 0x48d846
48d82e: mov rax, qword ptr [rip + 0x32233]
48d835: mov rsi, qword ptr [rax]
48d838: lea rax, [rip + 0x1caf0]
48d83f: test rsi, rsi
48d842: cmove rsi, rax
48d846: lea rbp, [rsp + 0x70]
48d84b: mov rcx, r11
48d84e: xor eax, eax
48d850: lea rdx, [rip + 0x23111]
48d857: mov rdi, rbp
48d85a: call 0x4836d0
48d85f: jmp 0x48d413
48d864: mov rsi, qword ptr [rbp + 8]
48d868: cmp byte ptr [rsi], 0
48d86b: jne 0x48d885
48d86d: mov rax, qword ptr [rip + 0x321f4]
48d874: mov rsi, qword ptr [rax]
48d877: lea rax, [rip + 0x1cab1]
48d87e: test rsi, rsi
48d881: cmove rsi, rax
48d885: lea rbp, [rsp + 0x70]
48d88a: lea rdx, [rip + 0x230ff]
48d891: mov rdi, rbp
48d894: call 0x483600
48d899: mov edi, 0xc
48d89e: jmp 0x48d7fb
48d8a3: lea rsi, [rip + 0x1ca85]
48d8aa: jmp 0x48d725
48d8af: lea rcx, [rip + 0x23102]
48d8b6: mov edx, 0x58
48d8bb: lea rsi, [rip + 0x22f5d]
48d8c2: lea rdi, [rip + 0x22f72]
48d8c9: call 0x4032a0
48d8ce: lea rsi, [rip + 0x1ca5a]
48d8d5: jmp 0x48d52d
48d8da: nop word ptr [rax + rax]
48d8e0: endbr64 
48d8e4: push r13
48d8e6: push r12
48d8e8: push rbp
48d8e9: push rbx
48d8ea: sub rsp, 8
48d8ee: test rdi, rdi
48d8f1: je 0x48d950
48d8f3: mov rbx, rdi
48d8f6: mov ebp, esi
48d8f8: mov r13d, edx
48d8fb: xor r12d, r12d
48d8fe: nop 
48d900: test byte ptr [rbx + 0x31d], 2
48d907: je 0x48d920
48d909: mov rbx, qword ptr [rbx + 0x18]
48d90d: test rbx, rbx
48d910: jne 0x48d900
48d912: add rsp, 8
48d916: mov eax, r12d
48d919: pop rbx
48d91a: pop rbp
48d91b: pop r12
48d91d: pop r13
48d91f: ret 
48d920: mov rdi, rbx
48d923: mov edx, r13d
48d926: mov esi, ebp
48d928: call 0x48d220
48d92d: mov rbx, qword ptr [rbx + 0x18]
48d931: test eax, eax
48d933: setne al
48d936: movzx eax, al
48d939: or r12d, eax
48d93c: test rbx, rbx
48d93f: jne 0x48d900
48d941: add rsp, 8
48d945: mov eax, r12d
48d948: pop rbx
48d949: pop rbp
48d94a: pop r12
48d94c: pop r13
48d94e: ret 
48d94f: nop 
48d950: add rsp, 8
48d954: xor r12d, r12d
48d957: pop rbx
48d958: mov eax, r12d
48d95b: pop rbp
48d95c: pop r12
48d95e: pop r13
48d960: ret 
48d961: nop word ptr cs:[rax + rax]
48d96b: nop dword ptr [rax + rax]
48d970: endbr64 
48d974: push rbx
48d975: mov rbx, rdi
48d978: mov rsi, qword ptr [rdi]
48d97b: xor r9d, r9d
48d97e: mov eax, dword ptr [rbx + 0x18]
48d981: mov rdx, qword ptr [rdi + 0x28]
48d985: mov rcx, qword ptr [rsi + 0x390]
48d98c: mov rdi, qword ptr [rdi + 8]
48d990: push 0
48d992: push rax
48d993: mov r8, qword ptr [rbx + 0x10]
48d997: call 0x47d3a0
48d99c: mov qword ptr [rbx], rax
48d99f: pop rax
48d9a0: pop rdx
48d9a1: pop rbx
48d9a2: ret 
48d9a3: nop word ptr cs:[rax + rax]
48d9ae: nop 
48d9b0: endbr64 
48d9b4: push r12
48d9b6: mov r12, rcx
48d9b9: mov r10, rdi
48d9bc: push rbp
48d9bd: mov rbp, rsi
48d9c0: sub rsp, 0x98
48d9c7: movzx ecx, byte ptr [rdx]
48d9ca: mov rax, qword ptr fs:[0x28]
48d9d3: mov qword ptr [rsp + 0x88], rax
48d9db: xor eax, eax
48d9dd: mov qword ptr [rsp + 0x10], rdx
48d9e2: mov dword ptr [rsp + 0x1c], 1
48d9ea: test rcx, rcx
48d9ed: je 0x48da18
48d9ef: movzx esi, byte ptr [rdx + 1]
48d9f3: test sil, sil
48d9f6: je 0x48dac0
48d9fc: shl rcx, 4
48da00: movzx eax, sil
48da04: add rax, rcx
48da07: movzx ecx, byte ptr [rdx + 2]
48da0b: test cl, cl
48da0d: jne 0x48db40
48da13: nop dword ptr [rax + rax]
48da18: mov dword ptr [rsp + 0x18], eax
48da1c: mov qword ptr [rsp + 0x20], 0
48da25: mov qword ptr [rsp + 8], 0
48da2e: test r10, r10
48da31: je 0x48dbf8
48da37: cmp r10, -1
48da3b: je 0x48dad8
48da41: lea rdx, [rsp + 8]
48da46: push 0
48da48: xor r9d, r9d
48da4b: mov rsi, r10
48da4e: push 0
48da50: lea rcx, [r10 + 0x398]
48da57: mov rdi, rbp
48da5a: lea r8, [rsp + 0x20]
48da5f: call 0x47d3a0
48da64: mov rcx, rax
48da67: pop rax
48da68: pop rdx
48da69: mov rdx, qword ptr [rsp + 8]
48da6e: xor eax, eax
48da70: test rdx, rdx
48da73: je 0x48da98
48da75: cmp word ptr [rdx + 6], -0xf
48da7a: je 0x48dad0
48da7c: test rcx, rcx
48da7f: je 0x48dad0
48da81: mov rax, qword ptr [rcx]
48da84: add rax, qword ptr [rdx + 8]
48da88: movzx edx, byte ptr [rdx + 4]
48da8c: and edx, 0xf
48da8f: cmp dl, 0xa
48da92: je 0x48dbb0
48da98: mov rdi, qword ptr [rsp + 0x88]
48daa0: xor rdi, qword ptr fs:[0x28]
48daa9: jne 0x48dcd5
48daaf: add rsp, 0x98
48dab6: pop rbp
48dab7: pop r12
48dab9: ret 
48daba: nop word ptr [rax + rax]
48dac0: movzx eax, cl
48dac3: jmp 0x48da18
48dac8: nop dword ptr [rax + rax]
48dad0: xor eax, eax
48dad2: jmp 0x48da84
48dad4: nop dword ptr [rax]
48dad8: mov rdi, r12
48dadb: call 0x4887f0
48dae0: mov rsi, rax
48dae3: test rax, rax
48dae6: je 0x48dbc0
48daec: cmp rax, qword ptr [rip + 0x3368d]
48daf3: je 0x48dbcc
48daf9: mov rdx, rsi
48dafc: nop dword ptr [rax]
48db00: mov rcx, rdx
48db03: mov rdx, qword ptr [rdx + 0x2e0]
48db0a: test rdx, rdx
48db0d: jne 0x48db00
48db0f: lea rdx, [rsp + 8]
48db14: push rsi
48db15: add rcx, 0x398
48db1c: push 0
48db1e: lea r8, [rsp + 0x20]
48db23: mov rdi, rbp
48db26: xor r9d, r9d
48db29: call 0x47d3a0
48db2e: pop rsi
48db2f: pop rdi
48db30: mov rcx, rax
48db33: jmp 0x48da69
48db38: nop dword ptr [rax + rax]
48db40: shl rax, 4
48db44: add rax, rcx
48db47: movzx ecx, byte ptr [rdx + 3]
48db4b: test cl, cl
48db4d: je 0x48da18
48db53: shl rax, 4
48db57: add rax, rcx
48db5a: movzx ecx, byte ptr [rdx + 4]
48db5e: test cl, cl
48db60: je 0x48da18
48db66: shl rax, 4
48db6a: add rax, rcx
48db6d: lea rcx, [rdx + 5]
48db71: movzx edx, byte ptr [rdx + 5]
48db75: test dl, dl
48db77: je 0x48da18
48db7d: nop dword ptr [rax]
48db80: movzx edx, dl
48db83: shl rax, 4
48db87: add rcx, 1
48db8b: add rax, rdx
48db8e: mov rdx, rax
48db91: shr rdx, 0x18
48db95: and edx, 0xf0
48db9b: xor rax, rdx
48db9e: movzx edx, byte ptr [rcx]
48dba1: test dl, dl
48dba3: jne 0x48db80
48dba5: and eax, 0xfffffff
48dbaa: jmp 0x48da18
48dbaf: nop 
48dbb0: call rax
48dbb2: jmp 0x48da98
48dbb7: nop word ptr [rax + rax]
48dbc0: mov rsi, qword ptr [rip + 0x335b9]
48dbc7: test rsi, rsi
48dbca: je 0x48dbe2
48dbcc: cmp r12, qword ptr [rsi + 0x350]
48dbd3: jb 0x48dbe2
48dbd5: cmp r12, qword ptr [rsi + 0x358]
48dbdc: jb 0x48daf9
48dbe2: lea rcx, [rip + 0x22dff]
48dbe9: xor edx, edx
48dbeb: xor esi, esi
48dbed: xor edi, edi
48dbef: call 0x485060
48dbf4: nop dword ptr [rax]
48dbf8: mov rdi, r12
48dbfb: call 0x4887f0
48dc00: mov rsi, rax
48dc03: test rax, rax
48dc06: cmove rsi, qword ptr [rip + 0x33572]
48dc0e: mov eax, dword ptr fs:[0x18]
48dc16: test eax, eax
48dc18: jne 0x48dc30
48dc1a: mov rcx, qword ptr [rsi + 0x390]
48dc21: lea rdx, [rsp + 8]
48dc26: push 0
48dc28: push 1
48dc2a: jmp 0x48db1e
48dc2f: nop 
48dc30: lea rax, [rsp + 0x10]
48dc35: movq xmm0, rsi
48dc3a: movq xmm1, rbp
48dc3f: mov dword ptr [rsp + 0x68], 5
48dc47: mov qword ptr [rsp + 0x60], rax
48dc4c: punpcklqdq xmm0, xmm1
48dc50: lea rax, [rsp + 8]
48dc55: mov qword ptr [rsp + 0x78], rax
48dc5a: movaps xmmword ptr [rsp + 0x50], xmm0
48dc5f: mov dword ptr fs:[0x1c], 1
48dc6b: lea rbp, [rsp + 0x30]
48dc70: lea rdx, [rsp + 0x50]
48dc75: lea rsi, [rip - 0x30c]
48dc7c: mov rdi, rbp
48dc7f: call 0x4850c0
48dc84: mov r8d, eax
48dc87: xor eax, eax
48dc89: xchg dword ptr fs:[0x1c], eax
48dc91: cmp eax, 2
48dc94: jne 0x48dcb7
48dc96: mov rdi, qword ptr fs:[0x10]
48dc9f: xor r10d, r10d
48dca2: add rdi, 0x1c
48dca6: mov edx, 1
48dcab: mov esi, 0x81
48dcb0: mov eax, 0xca
48dcb5: syscall 
48dcb7: cmp qword ptr [rsp + 0x38], 0
48dcbd: mov rcx, qword ptr [rsp + 0x50]
48dcc2: je 0x48da69
48dcc8: xor edx, edx
48dcca: mov rsi, rbp
48dccd: mov edi, r8d
48dcd0: call 0x485010
48dcd5: call 0x4547a0
48dcda: nop word ptr [rax + rax]
48dce0: endbr64 
48dce4: push r12
48dce6: mov r12, rsi
48dce9: push rbp
48dcea: mov rbp, rdx
48dced: sub rsp, 0x78
48dcf1: mov rax, qword ptr fs:[0x28]
48dcfa: mov qword ptr [rsp + 0x68], rax
48dcff: xor eax, eax
48dd01: mov qword ptr [rsp + 8], 0
48dd0a: test rdi, rdi
48dd0d: je 0x48de30
48dd13: cmp rdi, -1
48dd17: je 0x48dd98
48dd19: lea rdx, [rsp + 8]
48dd1e: push 0
48dd20: mov rsi, rdi
48dd23: xor r9d, r9d
48dd26: push 2
48dd28: lea rcx, [rdi + 0x398]
48dd2f: xor r8d, r8d
48dd32: mov rdi, r12
48dd35: call 0x47d3a0
48dd3a: mov rcx, rax
48dd3d: pop rax
48dd3e: pop rdx
48dd3f: mov rdx, qword ptr [rsp + 8]
48dd44: xor eax, eax
48dd46: test rdx, rdx
48dd49: je 0x48dd6e
48dd4b: cmp word ptr [rdx + 6], -0xf
48dd50: je 0x48dd90
48dd52: test rcx, rcx
48dd55: je 0x48dd90
48dd57: mov rax, qword ptr [rcx]
48dd5a: add rax, qword ptr [rdx + 8]
48dd5e: movzx edx, byte ptr [rdx + 4]
48dd62: and edx, 0xf
48dd65: cmp dl, 0xa
48dd68: je 0x48ddf0
48dd6e: mov rcx, qword ptr [rsp + 0x68]
48dd73: xor rcx, qword ptr fs:[0x28]
48dd7c: jne 0x48df14
48dd82: add rsp, 0x78
48dd86: pop rbp
48dd87: pop r12
48dd89: ret 
48dd8a: nop word ptr [rax + rax]
48dd90: xor eax, eax
48dd92: jmp 0x48dd5a
48dd94: nop dword ptr [rax]
48dd98: mov rdi, rdx
48dd9b: call 0x4887f0
48dda0: mov rsi, rax
48dda3: test rax, rax
48dda6: je 0x48de00
48dda8: cmp rax, qword ptr [rip + 0x333d1]
48ddaf: je 0x48de0c
48ddb1: mov rdx, rsi
48ddb4: nop dword ptr [rax]
48ddb8: mov rcx, rdx
48ddbb: mov rdx, qword ptr [rdx + 0x2e0]
48ddc2: test rdx, rdx
48ddc5: jne 0x48ddb8
48ddc7: lea rdx, [rsp + 8]
48ddcc: push rsi
48ddcd: add rcx, 0x398
48ddd4: push 0
48ddd6: mov rdi, r12
48ddd9: xor r9d, r9d
48dddc: xor r8d, r8d
48dddf: call 0x47d3a0
48dde4: pop rsi
48dde5: pop rdi
48dde6: mov rcx, rax
48dde9: jmp 0x48dd3f
48ddee: nop 
48ddf0: call rax
48ddf2: jmp 0x48dd6e
48ddf7: nop word ptr [rax + rax]
48de00: mov rsi, qword ptr [rip + 0x33379]
48de07: test rsi, rsi
48de0a: je 0x48de1e
48de0c: cmp rbp, qword ptr [rsi + 0x350]
48de13: jb 0x48de1e
48de15: cmp rbp, qword ptr [rsi + 0x358]
48de1c: jb 0x48ddb1
48de1e: lea rcx, [rip + 0x22bc3]
48de25: xor edx, edx
48de27: xor esi, esi
48de29: xor edi, edi
48de2b: call 0x485060
48de30: mov rdi, rdx
48de33: call 0x4887f0
48de38: mov rsi, rax
48de3b: test rax, rax
48de3e: cmove rsi, qword ptr [rip + 0x3333a]
48de46: mov eax, dword ptr fs:[0x18]
48de4e: test eax, eax
48de50: jne 0x48de70
48de52: mov rcx, qword ptr [rsi + 0x390]
48de59: lea rdx, [rsp + 8]
48de5e: push 0
48de60: push 3
48de62: jmp 0x48ddd6
48de67: nop word ptr [rax + rax]
48de70: movq xmm0, rsi
48de75: movq xmm1, r12
48de7a: lea rax, [rsp + 8]
48de7f: mov qword ptr [rsp + 0x40], 0
48de88: punpcklqdq xmm0, xmm1
48de8c: mov dword ptr [rsp + 0x48], 7
48de94: mov qword ptr [rsp + 0x58], rax
48de99: movaps xmmword ptr [rsp + 0x30], xmm0
48de9e: mov dword ptr fs:[0x1c], 1
48deaa: lea rbp, [rsp + 0x10]
48deaf: lea rdx, [rsp + 0x30]
48deb4: lea rsi, [rip - 0x54b]
48debb: mov rdi, rbp
48debe: call 0x4850c0
48dec3: mov r8d, eax
48dec6: xor eax, eax
48dec8: xchg dword ptr fs:[0x1c], eax
48ded0: cmp eax, 2
48ded3: jne 0x48def6
48ded5: mov rdi, qword ptr fs:[0x10]
48dede: xor r10d, r10d
48dee1: add rdi, 0x1c
48dee5: mov edx, 1
48deea: mov esi, 0x81
48deef: mov eax, 0xca
48def4: syscall 
48def6: cmp qword ptr [rsp + 0x18], 0
48defc: mov rcx, qword ptr [rsp + 0x30]
48df01: je 0x48dd3f
48df07: xor edx, edx
48df09: mov rsi, rbp
48df0c: mov edi, r8d
48df0f: call 0x485010
48df14: call 0x4547a0
48df19: nop dword ptr [rax]
48df20: endbr64 
48df24: sub rsp, 0x38
48df28: movaps xmmword ptr [rsp], xmm0
48df2c: movaps xmmword ptr [rsp + 0x10], xmm1
48df31: stmxcsr dword ptr [rsp + 0x2c]
48df36: mov rax, qword ptr [rsp + 8]
48df3b: mov rdx, qword ptr [rsp + 0x18]
48df40: movabs rsi, 0xffffffffffff
48df4a: mov rcx, qword ptr [rsp]
48df4e: mov rdi, qword ptr [rsp + 0x10]
48df53: mov r9, rax
48df56: shr rax, 0x30
48df5a: and r9, rsi
48df5d: and rsi, rdx
48df60: shr rdx, 0x30
48df64: and edx, 0x7fff
48df6a: and eax, 0x7fff
48df6f: jne 0x48dfa8
48df71: mov r10, r9
48df74: or r10, rcx
48df77: je 0x48e020
48df7d: mov r8d, 2
48df83: cmp rdx, 0x7fff
48df8a: je 0x48e060
48df90: mov edi, r8d
48df93: mov qword ptr [rsp], rax
48df97: call 0x48e3c0
48df9c: mov rax, qword ptr [rsp]
48dfa0: add rsp, 0x38
48dfa4: ret 
48dfa5: nop dword ptr [rax]
48dfa8: test rdx, rdx
48dfab: jne 0x48dff0
48dfad: mov r11, rsi
48dfb0: xor r8d, r8d
48dfb3: or r11, rdi
48dfb6: setne r8b
48dfba: add r8d, r8d
48dfbd: cmp rax, 0x7fff
48dfc3: jne 0x48e038
48dfc5: or rcx, r9
48dfc8: je 0x48e038
48dfca: mov eax, 1
48dfcf: shl rax, 0x2f
48dfd3: test r9, rax
48dfd6: jne 0x48e0a0
48dfdc: nop dword ptr [rax]
48dfe0: or r8d, 1
48dfe4: mov eax, 1
48dfe9: jmp 0x48df90
48dfeb: nop dword ptr [rax + rax]
48dff0: cmp rax, 0x7fff
48dff6: jne 0x48e090
48dffc: mov rax, r9
48dfff: or rax, rcx
48e002: jne 0x48e0b8
48e008: cmp rdx, 0x7fff
48e00f: je 0x48e100
48e015: xor eax, eax
48e017: jmp 0x48dfa0
48e019: nop dword ptr [rax]
48e020: test rdx, rdx
48e023: jne 0x48e050
48e025: or rsi, rdi
48e028: jne 0x48e0e0
48e02e: xor r8d, r8d
48e031: nop dword ptr [rax]
48e038: xor eax, eax
48e03a: test r8d, r8d
48e03d: jne 0x48df90
48e043: add rsp, 0x38
48e047: ret 
48e048: nop dword ptr [rax + rax]
48e050: cmp rdx, 0x7fff
48e057: jne 0x48dfa0
48e05d: xor r8d, r8d
48e060: mov r11, rsi
48e063: or r11, rdi
48e066: je 0x48e038
48e068: cmp rax, 0x7fff
48e06e: je 0x48e10f
48e074: movabs rax, 0x800000000000
48e07e: test rsi, rax
48e081: je 0x48dfe0
48e087: mov eax, 1
48e08c: jmp 0x48e03a
48e08e: nop 
48e090: cmp rdx, 0x7fff
48e097: je 0x48e05d
48e099: xor eax, eax
48e09b: jmp 0x48dfa0
48e0a0: mov eax, 1
48e0a5: cmp rdx, 0x7fff
48e0ac: jne 0x48e03a
48e0ae: or rdi, rsi
48e0b1: je 0x48e087
48e0b3: jmp 0x48e074
48e0b5: nop dword ptr [rax]
48e0b8: movabs rax, 0x800000000000
48e0c2: test r9, rax
48e0c5: je 0x48e0f0
48e0c7: cmp rdx, 0x7fff
48e0ce: je 0x48e120
48e0d0: mov eax, 1
48e0d5: jmp 0x48dfa0
48e0da: nop word ptr [rax + rax]
48e0e0: mov r8d, 2
48e0e6: jmp 0x48df90
48e0eb: nop dword ptr [rax + rax]
48e0f0: xor r8d, r8d
48e0f3: jmp 0x48dfe0
48e0f8: nop dword ptr [rax + rax]
48e100: mov rax, rsi
48e103: xor r8d, r8d
48e106: or rax, rdi
48e109: je 0x48e038
48e10f: or rcx, r9
48e112: je 0x48e0ae
48e114: jmp 0x48dfca
48e119: nop dword ptr [rax]
48e120: or rdi, rsi
48e123: je 0x48e0d0
48e125: xor r8d, r8d
48e128: jmp 0x48e074
48e12d: nop dword ptr [rax]
48e130: endbr64 
48e134: push r14
48e136: push rbp
48e137: push rbx
48e138: sub rsp, 0x30
48e13c: movaps xmmword ptr [rsp], xmm0
48e140: movaps xmmword ptr [rsp + 0x10], xmm1
48e145: stmxcsr dword ptr [rsp + 0x2c]
48e14a: mov rax, qword ptr [rsp + 8]
48e14f: mov rdx, qword ptr [rsp]
48e153: movabs rcx, 0xffffffffffff
48e15d: mov rsi, qword ptr [rsp + 0x10]
48e162: mov r11, rax
48e165: mov r8, rax
48e168: shr rax, 0x3f
48e16c: mov r9, rax
48e16f: mov rax, qword ptr [rsp + 0x18]
48e174: shr r8, 0x30
48e178: and r11, rcx
48e17b: mov rdi, rax
48e17e: and rcx, rax
48e181: shr rax, 0x3f
48e185: shr rdi, 0x30
48e189: and edi, 0x7fff
48e18f: and r8d, 0x7fff
48e196: jne 0x48e1f8
48e198: mov rbx, r11
48e19b: or rbx, rdx
48e19e: je 0x48e298
48e1a4: mov r10d, 2
48e1aa: cmp rdi, 0x7fff
48e1b1: je 0x48e2d0
48e1b7: mov rbp, r11
48e1ba: xor ebx, ebx
48e1bc: or rbp, rdx
48e1bf: sete bl
48e1c2: test rdi, rdi
48e1c5: jne 0x48e2e4
48e1cb: mov r14, rcx
48e1ce: or r14, rsi
48e1d1: jne 0x48e2e4
48e1d7: xor eax, eax
48e1d9: test rbp, rbp
48e1dc: jne 0x48e245
48e1de: nop 
48e1e0: test r10d, r10d
48e1e3: jne 0x48e279
48e1e9: add rsp, 0x30
48e1ed: pop rbx
48e1ee: pop rbp
48e1ef: pop r14
48e1f1: ret 
48e1f2: nop word ptr [rax + rax]
48e1f8: test rdi, rdi
48e1fb: jne 0x48e258
48e1fd: mov rbx, rcx
48e200: xor r10d, r10d
48e203: or rbx, rsi
48e206: setne r10b
48e20a: add r10d, r10d
48e20d: cmp r8, 0x7fff
48e214: jne 0x48e308
48e21a: mov rbx, r11
48e21d: or rbx, rdx
48e220: jne 0x48e270
48e222: cmp rdi, 0x7fff
48e229: je 0x48e338
48e22f: test rdi, rdi
48e232: jne 0x48e23c
48e234: mov rbx, rcx
48e237: or rbx, rsi
48e23a: je 0x48e245
48e23c: cmp r9, rax
48e23f: je 0x48e360
48e245: cmp r9, 1
48e249: sbb rax, rax
48e24c: and eax, 2
48e24f: sub rax, 1
48e253: jmp 0x48e1e0
48e255: nop dword ptr [rax]
48e258: cmp r8, 0x7fff
48e25f: jne 0x48e320
48e265: mov rbx, r11
48e268: xor r10d, r10d
48e26b: or rbx, rdx
48e26e: je 0x48e222
48e270: or r10d, 1
48e274: mov eax, 2
48e279: mov edi, r10d
48e27c: mov qword ptr [rsp], rax
48e280: call 0x48e3c0
48e285: mov rax, qword ptr [rsp]
48e289: add rsp, 0x30
48e28d: pop rbx
48e28e: pop rbp
48e28f: pop r14
48e291: ret 
48e292: nop word ptr [rax + rax]
48e298: xor r10d, r10d
48e29b: test rdi, rdi
48e29e: jne 0x48e1aa
48e2a4: mov rbx, rcx
48e2a7: xor r10d, r10d
48e2aa: mov rbp, r11
48e2ad: or rbx, rsi
48e2b0: setne r10b
48e2b4: xor ebx, ebx
48e2b6: add r10d, r10d
48e2b9: or rbp, rdx
48e2bc: sete bl
48e2bf: test rdi, rdi
48e2c2: je 0x48e1cb
48e2c8: jmp 0x48e2e4
48e2ca: nop word ptr [rax + rax]
48e2d0: mov rbx, rcx
48e2d3: or rbx, rsi
48e2d6: jne 0x48e270
48e2d8: mov rbx, r11
48e2db: or rbx, rdx
48e2de: sete bl
48e2e1: movzx ebx, bl
48e2e4: test ebx, ebx
48e2e6: je 0x48e23c
48e2ec: test rax, rax
48e2ef: jne 0x48e1e0
48e2f5: mov rax, 0xffffffffffffffff
48e2fc: jmp 0x48e1e0
48e301: nop dword ptr [rax]
48e308: test r8, r8
48e30b: jne 0x48e234
48e311: jmp 0x48e1b7
48e316: nop word ptr cs:[rax + rax]
48e320: cmp rdi, 0x7fff
48e327: je 0x48e350
48e329: xor r10d, r10d
48e32c: jmp 0x48e23c
48e331: nop dword ptr [rax]
48e338: mov rbx, rcx
48e33b: or rbx, rsi
48e33e: je 0x48e23c
48e344: jmp 0x48e270
48e349: nop dword ptr [rax]
48e350: mov rbx, rcx
48e353: or rbx, rsi
48e356: je 0x48e329
48e358: xor r10d, r10d
48e35b: jmp 0x48e270
48e360: cmp r8, rdi
48e363: jle 0x48e378
48e365: test rax, rax
48e368: jne 0x48e2f5
48e36a: mov eax, 1
48e36f: jmp 0x48e1e0
48e374: nop dword ptr [rax]
48e378: jl 0x48e2ec
48e37e: cmp r11, rcx
48e381: ja 0x48e245
48e387: sete al
48e38a: cmp rdx, rsi
48e38d: jbe 0x48e397
48e38f: test al, al
48e391: jne 0x48e245
48e397: cmp r11, rcx
48e39a: jb 0x48e3a5
48e39c: cmp rdx, rsi
48e39f: jae 0x48e3b8
48e3a1: test al, al
48e3a3: je 0x48e3b8
48e3a5: test r9, r9
48e3a8: mov rax, 0xffffffffffffffff
48e3af: cmovne rax, r9
48e3b3: jmp 0x48e1e0
48e3b8: xor eax, eax
48e3ba: jmp 0x48e1e0
48e3bf: nop 
48e3c0: endbr64 
48e3c4: test dil, 1
48e3c8: je 0x48e3d2
48e3ca: pxor xmm0, xmm0
48e3ce: divss xmm0, xmm0
48e3d2: test dil, 2
48e3d6: je 0x48e3e7
48e3d8: fnstenv [rsp - 0x28]
48e3dc: or word ptr [rsp - 0x24], 2
48e3e2: fldenv [rsp - 0x28]
48e3e6: wait 
48e3e7: test dil, 4
48e3eb: je 0x48e3fd
48e3ed: movss xmm0, dword ptr [rip + 0x22623]
48e3f5: divss xmm0, dword ptr [rip + 0x1c763]
48e3fd: test dil, 8
48e401: je 0x48e412
48e403: fnstenv [rsp - 0x28]
48e407: or word ptr [rsp - 0x24], 8
48e40d: fldenv [rsp - 0x28]
48e411: wait 
48e412: test dil, 0x10
48e416: je 0x48e427
48e418: fnstenv [rsp - 0x28]
48e41c: or word ptr [rsp - 0x24], 0x10
48e422: fldenv [rsp - 0x28]
48e426: wait 
48e427: and edi, 0x20
48e42a: je 0x48e43c
48e42c: movss xmm0, dword ptr [rip + 0x225e4]
48e434: divss xmm0, dword ptr [rip + 0x225e0]
48e43c: ret 
48e43d: nop dword ptr [rax]
48e440: mov r9, rcx
48e443: cmp dil, 0x50
48e447: je 0x48e4a0
48e449: mov eax, edi
48e44b: sub rsp, 8
48e44f: and eax, 0xf
48e452: cmp al, 0xc
48e454: ja 0x40170b
48e45a: lea rcx, [rip + 0x225bf]
48e461: movzx eax, al
48e464: movsxd rax, dword ptr [rcx + rax*4]
48e468: add rax, rcx
48e46b: notrack jmp rax
48e46e: nop 
48e470: mov r8, qword ptr [rdx]
48e473: lea rax, [rdx + 8]
48e477: test r8, r8
48e47a: je 0x48e490
48e47c: mov ecx, edi
48e47e: and ecx, 0x70
48e481: cmp cl, 0x10
48e484: cmove rsi, rdx
48e488: add r8, rsi
48e48b: test dil, dil
48e48e: js 0x48e4b8
48e490: mov qword ptr [r9], r8
48e493: add rsp, 8
48e497: ret 
48e498: nop dword ptr [rax + rax]
48e4a0: lea rax, [rdx + 7]
48e4a4: and rax, 0xfffffffffffffff8
48e4a8: mov r8, qword ptr [rax]
48e4ab: lea rax, [rax + 8]
48e4af: mov qword ptr [rcx], r8
48e4b2: ret 
48e4b3: nop dword ptr [rax + rax]
48e4b8: mov r8, qword ptr [r8]
48e4bb: mov qword ptr [r9], r8
48e4be: add rsp, 8
48e4c2: ret 
48e4c3: nop dword ptr [rax + rax]
48e4c8: movzx r8d, word ptr [rdx]
48e4cc: lea rax, [rdx + 2]
48e4d0: jmp 0x48e477
48e4d2: nop word ptr [rax + rax]
48e4d8: mov r8d, dword ptr [rdx]
48e4db: lea rax, [rdx + 4]
48e4df: jmp 0x48e477
48e4e1: nop dword ptr [rax]
48e4e8: movsxd r8, dword ptr [rdx]
48e4eb: lea rax, [rdx + 4]
48e4ef: jmp 0x48e477
48e4f1: nop dword ptr [rax]
48e4f8: movsx r8, word ptr [rdx]
48e4fc: lea rax, [rdx + 2]
48e500: jmp 0x48e477
48e505: nop dword ptr [rax]
48e508: mov rax, rdx
48e50b: xor r8d, r8d
48e50e: xor ecx, ecx
48e510: movzx r11d, byte ptr [rax]
48e514: add rax, 1
48e518: mov r10, r11
48e51b: and r10d, 0x7f
48e51f: shl r10, cl
48e522: add ecx, 7
48e525: or r8, r10
48e528: test r11b, r11b
48e52b: js 0x48e510
48e52d: jmp 0x48e477
48e532: nop word ptr [rax + rax]
48e538: mov rax, rdx
48e53b: xor r8d, r8d
48e53e: xor ecx, ecx
48e540: movzx r11d, byte ptr [rax]
48e544: add rax, 1
48e548: mov r10, r11
48e54b: and r10d, 0x7f
48e54f: shl r10, cl
48e552: add ecx, 7
48e555: or r8, r10
48e558: test r11b, r11b
48e55b: js 0x48e540
48e55d: cmp ecx, 0x3f
48e560: ja 0x48e477
48e566: and r11d, 0x40
48e56a: je 0x48e477
48e570: mov r10, 0xffffffffffffffff
48e577: shl r10, cl
48e57a: or r8, r10
48e57d: jmp 0x48e47c
48e582: nop word ptr cs:[rax + rax]
48e58d: nop dword ptr [rax]
48e590: cmp dil, 0xff
48e594: je 0x48e600
48e596: mov eax, edi
48e598: sub rsp, 8
48e59c: and eax, 0x70
48e59f: cmp al, 0x30
48e5a1: je 0x48e608
48e5a3: ja 0x48e5b8
48e5a5: cmp al, 0x20
48e5a7: jne 0x48e5d0
48e5a9: mov rax, qword ptr [rsi + 0xa8]
48e5b0: add rsp, 8
48e5b4: ret 
48e5b5: nop dword ptr [rax]
48e5b8: cmp al, 0x40
48e5ba: jne 0x48e5f0
48e5bc: mov rax, qword ptr [rsi + 0xb8]
48e5c3: add rsp, 8
48e5c7: ret 
48e5c8: nop dword ptr [rax + rax]
48e5d0: ja 0x401710
48e5d6: and edi, 0x60
48e5d9: jne 0x401710
48e5df: xor eax, eax
48e5e1: add rsp, 8
48e5e5: ret 
48e5e6: nop word ptr cs:[rax + rax]
48e5f0: cmp al, 0x50
48e5f2: je 0x48e5df
48e5f4: jmp 0x401710
48e5f9: nop dword ptr [rax]
48e600: xor eax, eax
48e602: ret 
48e603: nop dword ptr [rax + rax]
48e608: mov rax, qword ptr [rsi + 0xb0]
48e60f: add rsp, 8
48e613: ret 
48e614: nop word ptr cs:[rax + rax]
48e61f: nop 
48e620: mov qword ptr [rcx + 0x120], 0
48e62b: cmp rdi, rsi
48e62e: jae 0x48ee30
48e634: push rbp
48e635: xor r8d, r8d
48e638: mov rbp, rsp
48e63b: push r15
48e63d: mov r15, rsi
48e640: push r14
48e642: lea r14, [rip + 0x2240b]
48e649: push r13
48e64b: mov r13, rdx
48e64e: push r12
48e650: push rbx
48e651: mov rbx, rcx
48e654: sub rsp, 0x28
48e658: nop dword ptr [rax + rax]
48e660: mov rdx, qword ptr [r13 + 0xc0]
48e667: mov rcx, qword ptr [rbx + 0x148]
48e66e: shr rdx, 0x3f
48e672: add rdx, qword ptr [r13 + 0x98]
48e679: cmp rcx, rdx
48e67c: jae 0x48e759
48e682: movzx eax, byte ptr [rdi]
48e685: lea r12, [rdi + 1]
48e689: mov edx, eax
48e68b: and edx, 0xffffffc0
48e68e: cmp dl, 0x40
48e691: je 0x48ec68
48e697: cmp dl, 0x80
48e69a: je 0x48ecb0
48e6a0: cmp dl, 0xc0
48e6a3: je 0x48ec88
48e6a9: cmp al, 0x2f
48e6ab: ja 0x401715
48e6b1: movsxd rax, dword ptr [r14 + rax*4]
48e6b5: add rax, r14
48e6b8: notrack jmp rax
48e6bb: xor eax, eax
48e6bd: xor ecx, ecx
48e6bf: movzx esi, byte ptr [r12]
48e6c4: add r12, 1
48e6c8: mov rdx, rsi
48e6cb: and edx, 0x7f
48e6ce: shl rdx, cl
48e6d1: add ecx, 7
48e6d4: or rax, rdx
48e6d7: test sil, sil
48e6da: js 0x48e6bf
48e6dc: xor edi, edi
48e6de: xor ecx, ecx
48e6e0: movzx esi, byte ptr [r12]
48e6e5: add r12, 1
48e6e9: mov rdx, rsi
48e6ec: and edx, 0x7f
48e6ef: shl rdx, cl
48e6f2: add ecx, 7
48e6f5: or rdi, rdx
48e6f8: test sil, sil
48e6fb: js 0x48e6e0
48e6fd: imul rdi, qword ptr [rbx + 0x158]
48e705: cmp rax, 0x11
48e709: ja 0x48e71f
48e70b: shl rax, 4
48e70f: neg rdi
48e712: add rax, rbx
48e715: mov dword ptr [rax + 8], 1
48e71c: mov qword ptr [rax], rdi
48e71f: cmp r15, r12
48e722: jbe 0x48e759
48e724: mov rdi, r12
48e727: jmp 0x48e660
48e72c: xor eax, eax
48e72e: xor ecx, ecx
48e730: movzx esi, byte ptr [r12]
48e735: add r12, 1
48e739: mov rdx, rsi
48e73c: and edx, 0x7f
48e73f: shl rdx, cl
48e742: add ecx, 7
48e745: or rax, rdx
48e748: test sil, sil
48e74b: js 0x48e730
48e74d: mov qword ptr [r13 + 0xd0], rax
48e754: cmp r15, r12
48e757: ja 0x48e724
48e759: lea rsp, [rbp - 0x28]
48e75d: pop rbx
48e75e: pop r12
48e760: pop r13
48e762: pop r14
48e764: pop r15
48e766: pop rbp
48e767: ret 
48e768: xor eax, eax
48e76a: xor ecx, ecx
48e76c: movzx esi, byte ptr [r12]
48e771: add r12, 1
48e775: mov rdx, rsi
48e778: and edx, 0x7f
48e77b: shl rdx, cl
48e77e: add ecx, 7
48e781: or rax, rdx
48e784: test sil, sil
48e787: js 0x48e76c
48e789: cmp rax, 0x11
48e78d: ja 0x48e7a0
48e78f: shl rax, 4
48e793: add rax, rbx
48e796: mov dword ptr [rax + 8], 5
48e79d: mov qword ptr [rax], r12
48e7a0: xor esi, esi
48e7a2: xor ecx, ecx
48e7a4: nop dword ptr [rax]
48e7a8: movzx edx, byte ptr [r12]
48e7ad: add r12, 1
48e7b1: mov rax, rdx
48e7b4: and eax, 0x7f
48e7b7: shl rax, cl
48e7ba: add ecx, 7
48e7bd: or rsi, rax
48e7c0: test dl, dl
48e7c2: js 0x48e7a8
48e7c4: add r12, rsi
48e7c7: jmp 0x48e71f
48e7cc: xor eax, eax
48e7ce: xor ecx, ecx
48e7d0: movzx esi, byte ptr [r12]
48e7d5: add r12, 1
48e7d9: mov rdx, rsi
48e7dc: and edx, 0x7f
48e7df: shl rdx, cl
48e7e2: add ecx, 7
48e7e5: or rax, rdx
48e7e8: test sil, sil
48e7eb: js 0x48e7d0
48e7ed: xor edi, edi
48e7ef: xor ecx, ecx
48e7f1: nop dword ptr [rax]
48e7f8: movzx esi, byte ptr [r12]
48e7fd: add r12, 1
48e801: mov rdx, rsi
48e804: and edx, 0x7f
48e807: shl rdx, cl
48e80a: add ecx, 7
48e80d: or rdi, rdx
48e810: test sil, sil
48e813: js 0x48e7f8
48e815: cmp ecx, 0x3f
48e818: ja 0x48e828
48e81a: and esi, 0x40
48e81d: jne 0x48ee43
48e823: nop dword ptr [rax + rax]
48e828: imul rdi, qword ptr [rbx + 0x158]
48e830: cmp rax, 0x11
48e834: ja 0x48e71f
48e83a: shl rax, 4
48e83e: add rax, rbx
48e841: mov dword ptr [rax + 8], 4
48e848: mov qword ptr [rax], rdi
48e84b: jmp 0x48e71f
48e850: xor eax, eax
48e852: xor ecx, ecx
48e854: movzx esi, byte ptr [r12]
48e859: add r12, 1
48e85d: mov rdx, rsi
48e860: and edx, 0x7f
48e863: shl rdx, cl
48e866: add ecx, 7
48e869: or rax, rdx
48e86c: test sil, sil
48e86f: js 0x48e854
48e871: xor edi, edi
48e873: xor ecx, ecx
48e875: nop dword ptr [rax]
48e878: movzx esi, byte ptr [r12]
48e87d: add r12, 1
48e881: mov rdx, rsi
48e884: and edx, 0x7f
48e887: shl rdx, cl
48e88a: add ecx, 7
48e88d: or rdi, rdx
48e890: test sil, sil
48e893: js 0x48e878
48e895: jmp 0x48e828
48e897: xor eax, eax
48e899: xor ecx, ecx
48e89b: movzx esi, byte ptr [r12]
48e8a0: add r12, 1
48e8a4: mov rdx, rsi
48e8a7: and edx, 0x7f
48e8aa: shl rdx, cl
48e8ad: add ecx, 7
48e8b0: or rax, rdx
48e8b3: test sil, sil
48e8b6: js 0x48e89b
48e8b8: cmp ecx, 0x3f
48e8bb: ja 0x48e8cf
48e8bd: and esi, 0x40
48e8c0: je 0x48e8cf
48e8c2: mov rdx, 0xffffffffffffffff
48e8c9: shl rdx, cl
48e8cc: or rax, rdx
48e8cf: imul rax, qword ptr [rbx + 0x158]
48e8d7: mov qword ptr [rbx + 0x128], rax
48e8de: jmp 0x48e71f
48e8e3: xor eax, eax
48e8e5: xor ecx, ecx
48e8e7: movzx esi, byte ptr [r12]
48e8ec: add r12, 1
48e8f0: mov rdx, rsi
48e8f3: and edx, 0x7f
48e8f6: shl rdx, cl
48e8f9: add ecx, 7
48e8fc: or rax, rdx
48e8ff: test sil, sil
48e902: js 0x48e8e7
48e904: mov qword ptr [rbx + 0x130], rax
48e90b: xor esi, esi
48e90d: xor ecx, ecx
48e90f: nop 
48e910: movzx edx, byte ptr [r12]
48e915: add r12, 1
48e919: mov rax, rdx
48e91c: and eax, 0x7f
48e91f: shl rax, cl
48e922: add ecx, 7
48e925: or rsi, rax
48e928: test dl, dl
48e92a: js 0x48e910
48e92c: cmp ecx, 0x3f
48e92f: ja 0x48e943
48e931: and edx, 0x40
48e934: je 0x48e943
48e936: mov rax, 0xffffffffffffffff
48e93d: shl rax, cl
48e940: or rsi, rax
48e943: imul rsi, qword ptr [rbx + 0x158]
48e94b: mov dword ptr [rbx + 0x140], 1
48e955: mov qword ptr [rbx + 0x128], rsi
48e95c: jmp 0x48e71f
48e961: xor eax, eax
48e963: xor ecx, ecx
48e965: movzx esi, byte ptr [r12]
48e96a: add r12, 1
48e96e: mov rdx, rsi
48e971: and edx, 0x7f
48e974: shl rdx, cl
48e977: add ecx, 7
48e97a: or rax, rdx
48e97d: test sil, sil
48e980: js 0x48e965
48e982: xor edi, edi
48e984: xor ecx, ecx
48e986: nop word ptr cs:[rax + rax]
48e990: movzx esi, byte ptr [r12]
48e995: add r12, 1
48e999: mov rdx, rsi
48e99c: and edx, 0x7f
48e99f: shl rdx, cl
48e9a2: add ecx, 7
48e9a5: or rdi, rdx
48e9a8: test sil, sil
48e9ab: js 0x48e990
48e9ad: cmp ecx, 0x3f
48e9b0: ja 0x48e9c0
48e9b2: and esi, 0x40
48e9b5: jne 0x48ee31
48e9bb: nop dword ptr [rax + rax]
48e9c0: imul rdi, qword ptr [rbx + 0x158]
48e9c8: cmp rax, 0x11
48e9cc: ja 0x48e71f
48e9d2: shl rax, 4
48e9d6: add rax, rbx
48e9d9: mov dword ptr [rax + 8], 1
48e9e0: mov qword ptr [rax], rdi
48e9e3: jmp 0x48e71f
48e9e8: xor eax, eax
48e9ea: xor ecx, ecx
48e9ec: movzx esi, byte ptr [r12]
48e9f1: add r12, 1
48e9f5: mov rdx, rsi
48e9f8: and edx, 0x7f
48e9fb: shl rdx, cl
48e9fe: add ecx, 7
48ea01: or rax, rdx
48ea04: test sil, sil
48ea07: js 0x48e9ec
48ea09: cmp rax, 0x11
48ea0d: ja 0x48ea20
48ea0f: shl rax, 4
48ea13: add rax, rbx
48ea16: mov dword ptr [rax + 8], 3
48ea1d: mov qword ptr [rax], r12
48ea20: xor esi, esi
48ea22: xor ecx, ecx
48ea24: nop dword ptr [rax]
48ea28: movzx edx, byte ptr [r12]
48ea2d: add r12, 1
48ea31: mov rax, rdx
48ea34: and eax, 0x7f
48ea37: shl rax, cl
48ea3a: add ecx, 7
48ea3d: or rsi, rax
48ea40: test dl, dl
48ea42: js 0x48ea28
48ea44: add r12, rsi
48ea47: jmp 0x48e71f
48ea4c: xor eax, eax
48ea4e: xor ecx, ecx
48ea50: movzx esi, byte ptr [r12]
48ea55: add r12, 1
48ea59: mov rdx, rsi
48ea5c: and edx, 0x7f
48ea5f: shl rdx, cl
48ea62: add ecx, 7
48ea65: or rax, rdx
48ea68: test sil, sil
48ea6b: js 0x48ea50
48ea6d: mov qword ptr [rbx + 0x128], rax
48ea74: jmp 0x48e71f
48ea79: xor eax, eax
48ea7b: xor ecx, ecx
48ea7d: movzx esi, byte ptr [r12]
48ea82: add r12, 1
48ea86: mov rdx, rsi
48ea89: and edx, 0x7f
48ea8c: shl rdx, cl
48ea8f: add ecx, 7
48ea92: or rax, rdx
48ea95: test sil, sil
48ea98: js 0x48ea7d
48ea9a: mov qword ptr [rbx + 0x130], rax
48eaa1: mov dword ptr [rbx + 0x140], 1
48eaab: jmp 0x48e71f
48eab0: xor eax, eax
48eab2: xor ecx, ecx
48eab4: movzx esi, byte ptr [r12]
48eab9: add r12, 1
48eabd: mov rdx, rsi
48eac0: and edx, 0x7f
48eac3: shl rdx, cl
48eac6: add ecx, 7
48eac9: or rax, rdx
48eacc: test sil, sil
48eacf: js 0x48eab4
48ead1: mov qword ptr [rbx + 0x130], rax
48ead8: xor esi, esi
48eada: xor ecx, ecx
48eadc: nop dword ptr [rax]
48eae0: movzx edx, byte ptr [r12]
48eae5: add r12, 1
48eae9: mov rax, rdx
48eaec: and eax, 0x7f
48eaef: shl rax, cl
48eaf2: add ecx, 7
48eaf5: or rsi, rax
48eaf8: test dl, dl
48eafa: js 0x48eae0
48eafc: mov qword ptr [rbx + 0x128], rsi
48eb03: mov dword ptr [rbx + 0x140], 1
48eb0d: jmp 0x48e71f
48eb12: xor eax, eax
48eb14: xor ecx, ecx
48eb16: movzx esi, byte ptr [r12]
48eb1b: add r12, 1
48eb1f: mov rdx, rsi
48eb22: and edx, 0x7f
48eb25: shl rdx, cl
48eb28: add ecx, 7
48eb2b: or rax, rdx
48eb2e: test sil, sil
48eb31: js 0x48eb16
48eb33: xor esi, esi
48eb35: xor ecx, ecx
48eb37: nop word ptr [rax + rax]
48eb40: movzx edi, byte ptr [r12]
48eb45: add r12, 1
48eb49: mov rdx, rdi
48eb4c: and edx, 0x7f
48eb4f: shl rdx, cl
48eb52: add ecx, 7
48eb55: or rsi, rdx
48eb58: test dil, dil
48eb5b: js 0x48eb40
48eb5d: cmp rax, 0x11
48eb61: ja 0x48e71f
48eb67: shl rax, 4
48eb6b: add rax, rbx
48eb6e: mov dword ptr [rax + 8], 2
48eb75: mov qword ptr [rax], rsi
48eb78: jmp 0x48e71f
48eb7d: xor eax, eax
48eb7f: xor ecx, ecx
48eb81: movzx esi, byte ptr [r12]
48eb86: add r12, 1
48eb8a: mov rdx, rsi
48eb8d: and edx, 0x7f
48eb90: shl rdx, cl
48eb93: add ecx, 7
48eb96: or rax, rdx
48eb99: test sil, sil
48eb9c: js 0x48eb81
48eb9e: cmp rax, 0x11
48eba2: jbe 0x48ec99
48eba8: jmp 0x48e71f
48ebad: xor eax, eax
48ebaf: xor ecx, ecx
48ebb1: movzx esi, byte ptr [r12]
48ebb6: add r12, 1
48ebba: mov rdx, rsi
48ebbd: and edx, 0x7f
48ebc0: shl rdx, cl
48ebc3: add ecx, 7
48ebc6: or rax, rdx
48ebc9: test sil, sil
48ebcc: js 0x48ebb1
48ebce: cmp rax, 0x11
48ebd2: ja 0x48e71f
48ebd8: shl rax, 4
48ebdc: mov dword ptr [rbx + rax + 8], 6
48ebe4: jmp 0x48e71f
48ebe9: xor eax, eax
48ebeb: xor ecx, ecx
48ebed: movzx esi, byte ptr [r12]
48ebf2: add r12, 1
48ebf6: mov rdx, rsi
48ebf9: and edx, 0x7f
48ebfc: shl rdx, cl
48ebff: add ecx, 7
48ec02: or rax, rdx
48ec05: test sil, sil
48ec08: js 0x48ebed
48ec0a: cmp rax, 0x11
48ec0e: jbe 0x48ec99
48ec14: jmp 0x48e71f
48ec19: xor eax, eax
48ec1b: xor ecx, ecx
48ec1d: movzx esi, byte ptr [r12]
48ec22: add r12, 1
48ec26: mov rdx, rsi
48ec29: and edx, 0x7f
48ec2c: shl rdx, cl
48ec2f: add ecx, 7
48ec32: or rax, rdx
48ec35: test sil, sil
48ec38: js 0x48ec1d
48ec3a: xor edi, edi
48ec3c: xor ecx, ecx
48ec3e: nop 
48ec40: movzx esi, byte ptr [r12]
48ec45: add r12, 1
48ec49: mov rdx, rsi
48ec4c: and edx, 0x7f
48ec4f: shl rdx, cl
48ec52: add ecx, 7
48ec55: or rdi, rdx
48ec58: test sil, sil
48ec5b: js 0x48ec40
48ec5d: jmp 0x48e9c0
48ec62: nop word ptr [rax + rax]
48ec68: and eax, 0x3f
48ec6b: imul rax, qword ptr [rbx + 0x160]
48ec73: add rax, rcx
48ec76: mov qword ptr [rbx + 0x148], rax
48ec7d: jmp 0x48e71f
48ec82: nop word ptr [rax + rax]
48ec88: mov edx, eax
48ec8a: and eax, 0x3f
48ec8d: and edx, 0x3f
48ec90: cmp dl, 0x11
48ec93: ja 0x48e71f
48ec99: shl rax, 4
48ec9d: mov dword ptr [rbx + rax + 8], 0
48eca5: jmp 0x48e71f
48ecaa: nop word ptr [rax + rax]
48ecb0: mov edi, eax
48ecb2: xor r9d, r9d
48ecb5: and eax, 0x3f
48ecb8: xor ecx, ecx
48ecba: and edi, 0x3f
48ecbd: nop dword ptr [rax]
48ecc0: movzx esi, byte ptr [r12]
48ecc5: add r12, 1
48ecc9: mov rdx, rsi
48eccc: and edx, 0x7f
48eccf: shl rdx, cl
48ecd2: add ecx, 7
48ecd5: or r9, rdx
48ecd8: test sil, sil
48ecdb: js 0x48ecc0
48ecdd: imul r9, qword ptr [rbx + 0x158]
48ece5: cmp dil, 0x11
48ece9: ja 0x48e71f
48ecef: shl rax, 4
48ecf3: add rax, rbx
48ecf6: mov dword ptr [rax + 8], 1
48ecfd: mov qword ptr [rax], r9
48ed00: jmp 0x48e71f
48ed05: mov qword ptr [rbx + 0x138], r12
48ed0c: xor esi, esi
48ed0e: xor ecx, ecx
48ed10: mov dword ptr [rbx + 0x140], 2
48ed1a: nop word ptr [rax + rax]
48ed20: movzx edx, byte ptr [r12]
48ed25: add r12, 1
48ed29: mov rax, rdx
48ed2c: and eax, 0x7f
48ed2f: shl rax, cl
48ed32: add ecx, 7
48ed35: or rsi, rax
48ed38: test dl, dl
48ed3a: js 0x48ed20
48ed3c: add r12, rsi
48ed3f: jmp 0x48e71f
48ed44: movzx edi, byte ptr [rbx + 0x170]
48ed4b: mov rsi, r13
48ed4e: mov qword ptr [rbp - 0x50], r8
48ed52: mov dword ptr [rbp - 0x44], edi
48ed55: call 0x48e590
48ed5a: mov edi, dword ptr [rbp - 0x44]
48ed5d: mov rdx, r12
48ed60: lea rcx, [rbp - 0x38]
48ed64: mov rsi, rax
48ed67: call 0x48e440
48ed6c: mov r8, qword ptr [rbp - 0x50]
48ed70: mov r12, rax
48ed73: mov rax, qword ptr [rbp - 0x38]
48ed77: mov qword ptr [rbx + 0x148], rax
48ed7e: jmp 0x48e71f
48ed83: movzx eax, word ptr [rdi + 1]
48ed87: imul rax, qword ptr [rbx + 0x160]
48ed8f: lea r12, [rdi + 3]
48ed93: add rax, rcx
48ed96: mov qword ptr [rbx + 0x148], rax
48ed9d: jmp 0x48e71f
48eda2: mov eax, dword ptr [rdi + 1]
48eda5: imul rax, qword ptr [rbx + 0x160]
48edad: lea r12, [rdi + 5]
48edb1: add rax, rcx
48edb4: mov qword ptr [rbx + 0x148], rax
48edbb: jmp 0x48e71f
48edc0: test r8, r8
48edc3: je 0x48ee55
48edc9: mov rax, r8
48edcc: mov r8, qword ptr [r8 + 0x120]
48edd3: mov ecx, 0x29
48edd8: mov rdi, rax
48eddb: mov rsi, rbx
48edde: rep movsq qword ptr [rdi], qword ptr [rsi]
48ede1: mov qword ptr [rbx + 0x120], rax
48ede8: jmp 0x48e71f
48eded: mov rax, qword ptr [rbx + 0x120]
48edf4: mov ecx, 0x29
48edf9: mov rdi, rbx
48edfc: mov rsi, rax
48edff: rep movsq qword ptr [rdi], qword ptr [rsi]
48ee02: mov qword ptr [rax + 0x120], r8
48ee09: mov r8, rax
48ee0c: jmp 0x48e71f
48ee11: movzx eax, byte ptr [rdi + 1]
48ee15: imul rax, qword ptr [rbx + 0x160]
48ee1d: lea r12, [rdi + 2]
48ee21: add rax, rcx
48ee24: mov qword ptr [rbx + 0x148], rax
48ee2b: jmp 0x48e71f
48ee30: ret 
48ee31: mov rdx, 0xffffffffffffffff
48ee38: shl rdx, cl
48ee3b: or rdi, rdx
48ee3e: jmp 0x48e9c0
48ee43: mov rdx, 0xffffffffffffffff
48ee4a: shl rdx, cl
48ee4d: or rdi, rdx
48ee50: jmp 0x48e828
48ee55: mov rax, rsp
48ee58: cmp rsp, rax
48ee5b: je 0x48ee72
48ee5d: sub rsp, 0x1000
48ee64: or qword ptr [rsp + 0xff8], 0
48ee6d: cmp rsp, rax
48ee70: jne 0x48ee5d
48ee72: sub rsp, 0x150
48ee79: or qword ptr [rsp + 0x148], 0
48ee82: lea rax, [rsp + 0xf]
48ee87: and rax, 0xfffffffffffffff0
48ee8b: jmp 0x48edd3
48ee90: endbr64 
48ee94: mov byte ptr [rip + 0x34265], 8
48ee9b: mov byte ptr [rip + 0x3425f], 8
48eea2: mov byte ptr [rip + 0x34259], 8
48eea9: mov byte ptr [rip + 0x34253], 8
48eeb0: mov byte ptr [rip + 0x3424d], 8
48eeb7: mov byte ptr [rip + 0x34247], 8
48eebe: mov byte ptr [rip + 0x34241], 8
48eec5: mov byte ptr [rip + 0x3423b], 8
48eecc: mov byte ptr [rip + 0x34235], 8
48eed3: mov byte ptr [rip + 0x3422f], 8
48eeda: mov byte ptr [rip + 0x34229], 8
48eee1: mov byte ptr [rip + 0x34223], 8
48eee8: mov byte ptr [rip + 0x3421d], 8
48eeef: mov byte ptr [rip + 0x34217], 8
48eef6: mov byte ptr [rip + 0x34211], 8
48eefd: mov byte ptr [rip + 0x3420b], 8
48ef04: mov byte ptr [rip + 0x34205], 8
48ef0b: ret 
48ef0c: nop dword ptr [rax]
48ef10: push r15
48ef12: mov ecx, 0x30
48ef17: xor eax, eax
48ef19: push r14
48ef1b: push r13
48ef1d: mov r13, rdi
48ef20: mov rdi, rsi
48ef23: push r12
48ef25: push rbp
48ef26: push rbx
48ef27: sub rsp, 0x38
48ef2b: rep stosq qword ptr [rdi], rax
48ef2e: mov qword ptr [r13 + 0xd0], 0
48ef39: mov qword ptr [r13 + 0xa0], 0
48ef44: mov rdx, qword ptr [r13 + 0x98]
48ef4b: test rdx, rdx
48ef4e: je 0x48f278
48ef54: mov rax, qword ptr [r13 + 0xc0]
48ef5b: mov rbp, rsi
48ef5e: lea rsi, [r13 + 0xa8]
48ef65: shr rax, 0x3f
48ef69: lea rdi, [rdx + rax - 1]
48ef6e: call 0x492ad0
48ef73: mov r14, rax
48ef76: test rax, rax
48ef79: je 0x48f378
48ef7f: mov rax, qword ptr [r13 + 0xb8]
48ef86: lea r8, [r14 + 4]
48ef8a: mov qword ptr [rbp + 0x148], rax
48ef91: movsxd rax, dword ptr [r14 + 4]
48ef95: sub r8, rax
48ef98: lea r12, [r8 + 9]
48ef9c: mov r15, r8
48ef9f: mov rdi, r12
48efa2: call 0x401180
48efa7: cmp byte ptr [r15 + 9], 0x65
48efac: lea rbx, [r12 + rax + 1]
48efb1: je 0x48f1b0
48efb7: movzx esi, byte ptr [r15 + 8]
48efbc: movzx edx, byte ptr [rbx]
48efbf: cmp sil, 3
48efc3: ja 0x48f570
48efc9: xor edi, edi
48efcb: xor ecx, ecx
48efcd: jmp 0x48efd3
48efcf: nop 
48efd0: movzx edx, byte ptr [rbx]
48efd3: mov rax, rdx
48efd6: add rbx, 1
48efda: and eax, 0x7f
48efdd: shl rax, cl
48efe0: add ecx, 7
48efe3: or rdi, rax
48efe6: test dl, dl
48efe8: js 0x48efd0
48efea: mov qword ptr [rbp + 0x160], rdi
48eff1: xor ecx, ecx
48eff3: xor edi, edi
48eff5: nop dword ptr [rax]
48eff8: mov r9, rbx
48effb: movzx edx, byte ptr [rbx]
48effe: add rbx, 1
48f002: mov rax, rdx
48f005: and eax, 0x7f
48f008: shl rax, cl
48f00b: add ecx, 7
48f00e: or rdi, rax
48f011: test dl, dl
48f013: js 0x48eff8
48f015: cmp ecx, 0x3f
48f018: ja 0x48f02c
48f01a: and edx, 0x40
48f01d: je 0x48f02c
48f01f: mov rax, 0xffffffffffffffff
48f026: shl rax, cl
48f029: or rdi, rax
48f02c: mov qword ptr [rbp + 0x158], rdi
48f033: xor ecx, ecx
48f035: xor edi, edi
48f037: cmp sil, 1
48f03b: je 0x48f1d8
48f041: nop dword ptr [rax]
48f048: movzx edx, byte ptr [rbx]
48f04b: add rbx, 1
48f04f: mov rax, rdx
48f052: and eax, 0x7f
48f055: shl rax, cl
48f058: add ecx, 7
48f05b: or rdi, rax
48f05e: test dl, dl
48f060: js 0x48f048
48f062: mov qword ptr [rbp + 0x168], rdi
48f069: mov byte ptr [rbp + 0x171], 0xff
48f070: movzx eax, byte ptr [r12]
48f075: xor r9d, r9d
48f078: cmp al, 0x7a
48f07a: je 0x48f2f8
48f080: test al, al
48f082: je 0x48f590
48f088: lea rsi, [rsp + 0x28]
48f08d: add r12, 1
48f091: mov qword ptr [rsp + 0x18], rsi
48f096: jmp 0x48f0cc
48f098: nop dword ptr [rax + rax]
48f0a0: cmp al, 0x52
48f0a2: je 0x48f1f0
48f0a8: cmp al, 0x50
48f0aa: je 0x48f208
48f0b0: cmp al, 0x53
48f0b2: jne 0x48f293
48f0b8: mov byte ptr [rbp + 0x173], 1
48f0bf: movzx eax, byte ptr [r12]
48f0c4: add r12, 1
48f0c8: test al, al
48f0ca: je 0x48f0eb
48f0cc: cmp al, 0x4c
48f0ce: jne 0x48f0a0
48f0d0: movzx eax, byte ptr [rbx]
48f0d3: add r12, 1
48f0d7: add rbx, 1
48f0db: mov byte ptr [rbp + 0x171], al
48f0e1: movzx eax, byte ptr [r12 - 1]
48f0e7: test al, al
48f0e9: jne 0x48f0cc
48f0eb: test r9, r9
48f0ee: je 0x48f290
48f0f4: mov eax, dword ptr [r15]
48f0f7: mov rcx, rbp
48f0fa: mov rdx, r13
48f0fd: mov rdi, r9
48f100: lea rsi, [r15 + rax + 4]
48f105: call 0x48e620
48f10a: movzx eax, byte ptr [rbp + 0x170]
48f111: cmp al, 0xff
48f113: je 0x48f560
48f119: and eax, 7
48f11c: cmp al, 2
48f11e: je 0x48f550
48f124: jbe 0x48f268
48f12a: mov r12d, 0x10
48f130: cmp al, 3
48f132: jne 0x48f250
48f138: add r12, r14
48f13b: cmp byte ptr [rbp + 0x172], 0
48f142: movzx edi, byte ptr [rbp + 0x171]
48f149: je 0x48f2b0
48f14f: xor esi, esi
48f151: xor ecx, ecx
48f153: nop dword ptr [rax + rax]
48f158: movzx edx, byte ptr [r12]
48f15d: add r12, 1
48f161: mov rax, rdx
48f164: and eax, 0x7f
48f167: shl rax, cl
48f16a: add ecx, 7
48f16d: or rsi, rax
48f170: test dl, dl
48f172: js 0x48f158
48f174: lea r15, [r12 + rsi]
48f178: cmp dil, 0xff
48f17c: jne 0x48f340
48f182: mov eax, dword ptr [r14]
48f185: mov rcx, rbp
48f188: mov rdx, r13
48f18b: mov rdi, r15
48f18e: lea rsi, [r14 + rax + 4]
48f193: call 0x48e620
48f198: xor eax, eax
48f19a: add rsp, 0x38
48f19e: pop rbx
48f19f: pop rbp
48f1a0: pop r12
48f1a2: pop r13
48f1a4: pop r14
48f1a6: pop r15
48f1a8: ret 
48f1a9: nop dword ptr [rax]
48f1b0: cmp byte ptr [r15 + 0xa], 0x68
48f1b5: jne 0x48efb7
48f1bb: mov rax, qword ptr [rbx]
48f1be: lea r12, [r15 + 0xb]
48f1c2: add rbx, 8
48f1c6: mov qword ptr [rbp + 0x178], rax
48f1cd: jmp 0x48efb7
48f1d2: nop word ptr [rax + rax]
48f1d8: movzx eax, byte ptr [rbx]
48f1db: lea rbx, [r9 + 2]
48f1df: mov qword ptr [rbp + 0x168], rax
48f1e6: jmp 0x48f069
48f1eb: nop dword ptr [rax + rax]
48f1f0: movzx eax, byte ptr [rbx]
48f1f3: add rbx, 1
48f1f7: mov byte ptr [rbp + 0x170], al
48f1fd: jmp 0x48f0bf
48f202: nop word ptr [rax + rax]
48f208: movzx edi, byte ptr [rbx]
48f20b: mov rsi, r13
48f20e: mov qword ptr [rsp + 0x10], r9
48f213: mov dword ptr [rsp + 0xc], edi
48f217: call 0x48e590
48f21c: mov rcx, qword ptr [rsp + 0x18]
48f221: mov edi, dword ptr [rsp + 0xc]
48f225: lea rdx, [rbx + 1]
48f229: mov rsi, rax
48f22c: call 0x48e440
48f231: mov r9, qword ptr [rsp + 0x10]
48f236: mov rbx, rax
48f239: mov rax, qword ptr [rsp + 0x28]
48f23e: mov qword ptr [rbp + 0x150], rax
48f245: jmp 0x48f0bf
48f24a: nop word ptr [rax + rax]
48f250: cmp al, 4
48f252: jne 0x40171a
48f258: mov r12d, 0x18
48f25e: jmp 0x48f138
48f263: nop dword ptr [rax + rax]
48f268: test al, al
48f26a: je 0x48f258
48f26c: jmp 0x40171a
48f271: nop dword ptr [rax]
48f278: add rsp, 0x38
48f27c: mov eax, 5
48f281: pop rbx
48f282: pop rbp
48f283: pop r12
48f285: pop r13
48f287: pop r14
48f289: pop r15
48f28b: ret 
48f28c: nop dword ptr [rax]
48f290: mov r9, rbx
48f293: test r9, r9
48f296: jne 0x48f0f4
48f29c: add rsp, 0x38
48f2a0: mov eax, 3
48f2a5: pop rbx
48f2a6: pop rbp
48f2a7: pop r12
48f2a9: pop r13
48f2ab: pop r14
48f2ad: pop r15
48f2af: ret 
48f2b0: mov r15, r12
48f2b3: cmp dil, 0xff
48f2b7: je 0x48f182
48f2bd: movzx r12d, dil
48f2c1: mov rsi, r13
48f2c4: mov edi, r12d
48f2c7: call 0x48e590
48f2cc: mov rdx, r15
48f2cf: lea rcx, [rsp + 0x28]
48f2d4: mov edi, r12d
48f2d7: mov rsi, rax
48f2da: call 0x48e440
48f2df: mov r15, rax
48f2e2: mov rax, qword ptr [rsp + 0x28]
48f2e7: mov qword ptr [r13 + 0xa0], rax
48f2ee: jmp 0x48f182
48f2f3: nop dword ptr [rax + rax]
48f2f8: xor ecx, ecx
48f2fa: nop word ptr [rax + rax]
48f300: movzx edx, byte ptr [rbx]
48f303: add rbx, 1
48f307: mov rax, rdx
48f30a: and eax, 0x7f
48f30d: shl rax, cl
48f310: add ecx, 7
48f313: or r9, rax
48f316: test dl, dl
48f318: js 0x48f300
48f31a: mov byte ptr [rbp + 0x172], 1
48f321: movzx eax, byte ptr [r12 + 1]
48f327: add r9, rbx
48f32a: lea rdx, [r12 + 1]
48f32f: test al, al
48f331: je 0x48f0f4
48f337: mov r12, rdx
48f33a: jmp 0x48f088
48f33f: nop 
48f340: movzx ebx, dil
48f344: mov rsi, r13
48f347: mov edi, ebx
48f349: call 0x48e590
48f34e: lea rcx, [rsp + 0x28]
48f353: mov rdx, r12
48f356: mov edi, ebx
48f358: mov rsi, rax
48f35b: call 0x48e440
48f360: mov rax, qword ptr [rsp + 0x28]
48f365: mov qword ptr [r13 + 0xa0], rax
48f36c: jmp 0x48f182
48f371: nop dword ptr [rax]
48f378: mov rax, qword ptr [r13 + 0x98]
48f37f: cmp byte ptr [rax], 0x48
48f382: jne 0x48f278
48f388: movabs rdx, 0x50f0000000fc0c7
48f392: cmp qword ptr [rax + 1], rdx
48f396: jne 0x48f278
48f39c: mov rax, qword ptr [r13 + 0x90]
48f3a3: mov rdx, qword ptr [rax + 0xa0]
48f3aa: lea rsi, [rax + 0x90]
48f3b1: mov dword ptr [rbp + 0x140], 1
48f3bb: mov qword ptr [rbp + 0x130], 7
48f3c6: mov rcx, rdx
48f3c9: sub rsi, rdx
48f3cc: mov dword ptr [rbp + 8], 1
48f3d3: sub rcx, rax
48f3d6: mov qword ptr [rbp], rsi
48f3da: lea rsi, [rax + 0x88]
48f3e1: mov qword ptr [rbp + 0x128], rcx
48f3e8: lea rcx, [rax + 0x28]
48f3ec: sub rsi, rdx
48f3ef: sub rcx, rdx
48f3f2: mov qword ptr [rbp + 0x10], rsi
48f3f6: lea rsi, [rax + 0x98]
48f3fd: mov qword ptr [rbp + 0x80], rcx
48f404: lea rcx, [rax + 0x30]
48f408: sub rsi, rdx
48f40b: sub rcx, rdx
48f40e: mov qword ptr [rbp + 0x20], rsi
48f412: lea rsi, [rax + 0x80]
48f419: mov qword ptr [rbp + 0x90], rcx
48f420: lea rcx, [rax + 0x38]
48f424: sub rsi, rdx
48f427: sub rcx, rdx
48f42a: mov qword ptr [rbp + 0x30], rsi
48f42e: lea rsi, [rax + 0x70]
48f432: mov qword ptr [rbp + 0xa0], rcx
48f439: lea rcx, [rax + 0x40]
48f43d: sub rsi, rdx
48f440: sub rcx, rdx
48f443: mov qword ptr [rbp + 0x40], rsi
48f447: lea rsi, [rax + 0x68]
48f44b: mov qword ptr [rbp + 0xb0], rcx
48f452: lea rcx, [rax + 0x48]
48f456: sub rsi, rdx
48f459: sub rcx, rdx
48f45c: mov qword ptr [rbp + 0x50], rsi
48f460: lea rsi, [rax + 0x78]
48f464: mov qword ptr [rbp + 0xc0], rcx
48f46b: lea rcx, [rax + 0x50]
48f46f: sub rsi, rdx
48f472: sub rcx, rdx
48f475: mov dword ptr [rbp + 0x18], 1
48f47c: mov qword ptr [rbp + 0xd0], rcx
48f483: lea rcx, [rax + 0x58]
48f487: sub rcx, rdx
48f48a: mov dword ptr [rbp + 0x28], 1
48f491: mov dword ptr [rbp + 0x38], 1
48f498: mov dword ptr [rbp + 0x48], 1
48f49f: mov dword ptr [rbp + 0x58], 1
48f4a6: mov dword ptr [rbp + 0x68], 1
48f4ad: mov qword ptr [rbp + 0x60], rsi
48f4b1: mov dword ptr [rbp + 0x88], 1
48f4bb: mov dword ptr [rbp + 0x98], 1
48f4c5: mov dword ptr [rbp + 0xa8], 1
48f4cf: mov dword ptr [rbp + 0xb8], 1
48f4d9: mov dword ptr [rbp + 0xc8], 1
48f4e3: mov dword ptr [rbp + 0xd8], 1
48f4ed: mov dword ptr [rbp + 0xe8], 1
48f4f7: mov qword ptr [rbp + 0xe0], rcx
48f4fe: lea rcx, [rax + 0x60]
48f502: add rax, 0xa8
48f508: sub rax, rdx
48f50b: sub rcx, rdx
48f50e: mov dword ptr [rbp + 0xf8], 1
48f518: mov qword ptr [rbp + 0x100], rax
48f51f: xor eax, eax
48f521: mov qword ptr [rbp + 0xf0], rcx
48f528: mov dword ptr [rbp + 0x108], 1
48f532: mov qword ptr [rbp + 0x168], 0x10
48f53d: mov byte ptr [rbp + 0x173], 1
48f544: jmp 0x48f19a
48f549: nop dword ptr [rax]
48f550: mov r12d, 0xc
48f556: jmp 0x48f138
48f55b: nop dword ptr [rax + rax]
48f560: mov r12d, 8
48f566: jmp 0x48f138
48f56b: nop dword ptr [rax + rax]
48f570: cmp dl, 8
48f573: jne 0x48f29c
48f579: cmp byte ptr [rbx + 1], 0
48f57d: jne 0x48f29c
48f583: movzx edx, byte ptr [rbx + 2]
48f587: add rbx, 2
48f58b: jmp 0x48efc9
48f590: mov r9, rbx
48f593: jmp 0x48f0f4
48f598: nop dword ptr [rax + rax]
48f5a0: sub rsp, 0x18
48f5a4: mov r9, rdi
48f5a7: mov r8, rsi
48f5aa: test byte ptr [rsi + 0xc7], 0x40
48f5b1: je 0x48f5bc
48f5b3: cmp byte ptr [rsi + 0xdf], 0
48f5ba: jne 0x48f5c7
48f5bc: cmp qword ptr [r8 + 0x38], 0
48f5c1: je 0x48f6ba
48f5c7: xor eax, eax
48f5c9: lea r10, [rip + 0x33b30]
48f5d0: jmp 0x48f5f9
48f5d2: nop word ptr [rax + rax]
48f5d8: test rdx, rdx
48f5db: je 0x48f5eb
48f5dd: cmp byte ptr [r10 + rax], 8
48f5e2: jne 0x40171f
48f5e8: mov qword ptr [rdx], rsi
48f5eb: add rax, 1
48f5ef: cmp rax, 0x11
48f5f3: je 0x48f698
48f5f9: cmp byte ptr [r9 + rax + 0xd8], 0
48f602: mov rdx, qword ptr [r9 + rax*8]
48f606: mov rsi, qword ptr [r8 + rax*8]
48f60a: jne 0x40171f
48f610: cmp byte ptr [r8 + rax + 0xd8], 0
48f619: jne 0x48f5d8
48f61b: test rsi, rsi
48f61e: setne dil
48f622: test rdx, rdx
48f625: setne cl
48f628: test dil, cl
48f62b: je 0x48f5eb
48f62d: cmp rdx, rsi
48f630: je 0x48f5eb
48f632: movzx ecx, byte ptr [r10 + rax]
48f637: cmp ecx, 8
48f63a: jae 0x48f660
48f63c: test cl, 4
48f63f: jne 0x48f6f3
48f645: test ecx, ecx
48f647: je 0x48f5eb
48f649: movzx edi, byte ptr [rsi]
48f64c: mov byte ptr [rdx], dil
48f64f: test cl, 2
48f652: je 0x48f5eb
48f654: movzx esi, word ptr [rsi + rcx - 2]
48f659: mov word ptr [rdx + rcx - 2], si
48f65e: jmp 0x48f5eb
48f660: mov rdi, qword ptr [rsi]
48f663: add rax, 1
48f667: mov qword ptr [rdx], rdi
48f66a: mov rdi, qword ptr [rsi + rcx - 8]
48f66f: mov qword ptr [rdx + rcx - 8], rdi
48f674: lea rdi, [rdx + 8]
48f678: and rdi, 0xfffffffffffffff8
48f67c: sub rdx, rdi
48f67f: add ecx, edx
48f681: sub rsi, rdx
48f684: shr ecx, 3
48f687: rep movsq qword ptr [rdi], qword ptr [rsi]
48f68a: cmp rax, 0x11
48f68e: jne 0x48f5f9
48f694: nop dword ptr [rax]
48f698: xor eax, eax
48f69a: test byte ptr [r9 + 0xc7], 0x40
48f6a2: je 0x48f6ae
48f6a4: cmp byte ptr [r9 + 0xdf], 0
48f6ac: jne 0x48f6b5
48f6ae: cmp qword ptr [r9 + 0x38], 0
48f6b3: je 0x48f704
48f6b5: add rsp, 0x18
48f6b9: ret 
48f6ba: cmp byte ptr [rip + 0x33a46], 8
48f6c1: mov rax, qword ptr [r8 + 0x90]
48f6c8: jne 0x40171f
48f6ce: mov qword ptr [rsp + 8], rax
48f6d3: test byte ptr [r8 + 0xc7], 0x40
48f6db: je 0x48f6e5
48f6dd: mov byte ptr [r8 + 0xdf], 0
48f6e5: lea rax, [rsp + 8]
48f6ea: mov qword ptr [r8 + 0x38], rax
48f6ee: jmp 0x48f5c7
48f6f3: mov edi, dword ptr [rsi]
48f6f5: mov dword ptr [rdx], edi
48f6f7: mov esi, dword ptr [rsi + rcx - 4]
48f6fb: mov dword ptr [rdx + rcx - 4], esi
48f6ff: jmp 0x48f5eb
48f704: mov rax, qword ptr [r8 + 0x38]
48f708: test byte ptr [r8 + 0xc7], 0x40
48f710: je 0x48f71c
48f712: cmp byte ptr [r8 + 0xdf], 0
48f71a: jne 0x48f72c
48f71c: cmp byte ptr [rip + 0x339e4], 8
48f723: jne 0x40171f
48f729: mov rax, qword ptr [rax]
48f72c: sub rax, qword ptr [r9 + 0x90]
48f733: add rax, qword ptr [r8 + 0xd0]
48f73a: jmp 0x48f6b5
48f73f: nop 
48f740: push r15
48f742: push r14
48f744: push r13
48f746: push r12
48f748: push rbp
48f749: push rbx
48f74a: sub rsp, 0x228
48f751: mov qword ptr [rsp + 0x20], rcx
48f756: cmp rdi, rsi
48f759: jae 0x48fba0
48f75f: mov rbx, rdi
48f762: mov r14, rsi
48f765: mov r15, rdx
48f768: mov ebp, 1
48f76d: lea r13, [rip + 0x213a0]
48f774: lea r9, [rip + 0x21755]
48f77b: movabs r8, 0x4000000000000000
48f785: lea r12, [rip + 0x21798]
48f78c: nop dword ptr [rax]
48f790: movzx edx, byte ptr [rbx]
48f793: lea r11, [rbx + 1]
48f797: lea eax, [rdx - 3]
48f79a: mov esi, edx
48f79c: cmp al, 0xee
48f79e: ja 0x401729
48f7a4: movzx eax, al
48f7a7: movsxd rax, dword ptr [r13 + rax*4]
48f7ac: add rax, r13
48f7af: notrack jmp rax
48f7b2: nop word ptr [rax + rax]
48f7b8: xor eax, eax
48f7ba: xor ecx, ecx
48f7bc: movzx edi, byte ptr [r11]
48f7c0: add r11, 1
48f7c4: mov rsi, rdi
48f7c7: and esi, 0x7f
48f7ca: shl rsi, cl
48f7cd: add ecx, 7
48f7d0: or rax, rsi
48f7d3: test dil, dil
48f7d6: js 0x48f7bc
48f7d8: cmp ecx, 0x3f
48f7db: ja 0x48f7ef
48f7dd: and edi, 0x40
48f7e0: je 0x48f7ef
48f7e2: mov rsi, 0xffffffffffffffff
48f7e9: shl rsi, cl
48f7ec: or rax, rsi
48f7ef: sub edx, 0x70
48f7f2: cmp edx, 0x11
48f7f5: jg 0x401724
48f7fb: movsxd rdx, edx
48f7fe: mov r10, qword ptr [r15 + rdx*8]
48f802: test qword ptr [r15 + 0xc0], r8
48f809: je 0x48f816
48f80b: cmp byte ptr [r15 + rdx + 0xd8], 0
48f814: jne 0x48f82a
48f816: lea rcx, [rip + 0x338e3]
48f81d: cmp byte ptr [rcx + rdx], 8
48f821: jne 0x401724
48f827: mov r10, qword ptr [r10]
48f82a: add r10, rax
48f82d: mov edi, ebp
48f82f: mov rbx, r11
48f832: jmp 0x48f848
48f834: nop dword ptr [rax]
48f838: mov r10, qword ptr [rbx + 1]
48f83c: mov edi, ebp
48f83e: add rbx, 9
48f842: nop word ptr [rax + rax]
48f848: cmp edi, 0x3f
48f84b: jg 0x401724
48f851: lea ebp, [rdi + 1]
48f854: movsxd rdi, edi
48f857: mov qword ptr [rsp + rdi*8 + 0x20], r10
48f85c: cmp r14, rbx
48f85f: ja 0x48f790
48f865: test ebp, ebp
48f867: je 0x401724
48f86d: sub ebp, 1
48f870: movsxd rbp, ebp
48f873: mov rax, qword ptr [rsp + rbp*8 + 0x20]
48f878: add rsp, 0x228
48f87f: pop rbx
48f880: pop rbp
48f881: pop r12
48f883: pop r13
48f885: pop r14
48f887: pop r15
48f889: ret 
48f88a: nop word ptr [rax + rax]
48f890: sub edx, 0x50
48f893: cmp edx, 0x11
48f896: jg 0x401724
48f89c: movsxd rdx, edx
48f89f: mov r10, qword ptr [r15 + rdx*8]
48f8a3: test qword ptr [r15 + 0xc0], r8
48f8aa: je 0x48f8bb
48f8ac: cmp byte ptr [r15 + rdx + 0xd8], 0
48f8b5: jne 0x48f82d
48f8bb: lea rax, [rip + 0x3383e]
48f8c2: cmp byte ptr [rax + rdx], 8
48f8c6: jne 0x401724
48f8cc: mov r10, qword ptr [r10]
48f8cf: mov edi, ebp
48f8d1: mov rbx, r11
48f8d4: jmp 0x48f848
48f8d9: nop dword ptr [rax]
48f8e0: lea r10d, [rdx - 0x30]
48f8e4: mov edi, ebp
48f8e6: mov rbx, r11
48f8e9: jmp 0x48f848
48f8ee: nop 
48f8f0: cmp ebp, 1
48f8f3: jle 0x401724
48f8f9: lea edi, [rbp - 2]
48f8fc: sub ebp, 1
48f8ff: sub esi, 0x1a
48f902: movsxd rax, edi
48f905: movsxd rbp, ebp
48f908: mov r10, qword ptr [rsp + rax*8 + 0x20]
48f90d: mov rcx, qword ptr [rsp + rbp*8 + 0x20]
48f912: cmp sil, 0x14
48f916: ja 0x401729
48f91c: movzx esi, sil
48f920: movsxd rax, dword ptr [r9 + rsi*4]
48f924: add rax, r9
48f927: notrack jmp rax
48f92a: nop word ptr [rax + rax]
48f930: test ebp, ebp
48f932: je 0x401724
48f938: lea edi, [rbp - 1]
48f93b: movsxd rax, edi
48f93e: mov r10, qword ptr [rsp + rax*8 + 0x20]
48f943: cmp dl, 0x23
48f946: ja 0x48fb53
48f94c: sub esi, 6
48f94f: cmp sil, 0x1d
48f953: ja 0x401729
48f959: movzx esi, sil
48f95d: movsxd rax, dword ptr [r12 + rsi*4]
48f961: add rax, r12
48f964: notrack jmp rax
48f967: xor eax, eax
48f969: xor ecx, ecx
48f96b: movzx esi, byte ptr [r11]
48f96f: add r11, 1
48f973: mov rdx, rsi
48f976: and edx, 0x7f
48f979: shl rdx, cl
48f97c: add ecx, 7
48f97f: or rax, rdx
48f982: test sil, sil
48f985: js 0x48f96b
48f987: add r10, rax
48f98a: mov rbx, r11
48f98d: jmp 0x48f848
48f992: movsx rax, word ptr [rbx + 1]
48f997: lea rbx, [rbx + rax + 3]
48f99c: jmp 0x48f85c
48f9a1: test ebp, ebp
48f9a3: je 0x401724
48f9a9: sub ebp, 1
48f9ac: lea rdx, [rbx + 3]
48f9b0: movsxd rax, ebp
48f9b3: cmp qword ptr [rsp + rax*8 + 0x20], 0
48f9b9: je 0x48fb90
48f9bf: movsx rbx, word ptr [rbx + 1]
48f9c4: add rbx, rdx
48f9c7: jmp 0x48f85c
48f9cc: cmp ebp, 1
48f9cf: jle 0x401724
48f9d5: lea edx, [rbp - 1]
48f9d8: lea eax, [rbp - 2]
48f9db: mov rbx, r11
48f9de: movsxd rdx, edx
48f9e1: cdqe 
48f9e3: mov rcx, qword ptr [rsp + rdx*8 + 0x20]
48f9e8: mov rsi, qword ptr [rsp + rax*8 + 0x20]
48f9ed: mov qword ptr [rsp + rdx*8 + 0x20], rsi
48f9f2: mov qword ptr [rsp + rax*8 + 0x20], rcx
48f9f7: jmp 0x48f85c
48f9fc: lea eax, [rbp - 1]
48f9ff: movzx edx, byte ptr [rbx + 1]
48fa03: lea rcx, [rbx + 2]
48fa07: cdqe 
48fa09: cmp rdx, rax
48fa0c: jge 0x401724
48fa12: sub rax, rdx
48fa15: mov edi, ebp
48fa17: mov rbx, rcx
48fa1a: mov r10, qword ptr [rsp + rax*8 + 0x20]
48fa1f: jmp 0x48f848
48fa24: cmp ebp, 1
48fa27: jle 0x401724
48fa2d: lea eax, [rbp - 2]
48fa30: mov edi, ebp
48fa32: mov rbx, r11
48fa35: cdqe 
48fa37: mov r10, qword ptr [rsp + rax*8 + 0x20]
48fa3c: jmp 0x48f848
48fa41: test ebp, ebp
48fa43: je 0x401724
48fa49: sub ebp, 1
48fa4c: mov rbx, r11
48fa4f: jmp 0x48f85c
48fa54: test ebp, ebp
48fa56: je 0x401724
48fa5c: lea eax, [rbp - 1]
48fa5f: mov edi, ebp
48fa61: mov rbx, r11
48fa64: cdqe 
48fa66: mov r10, qword ptr [rsp + rax*8 + 0x20]
48fa6b: jmp 0x48f848
48fa70: movzx edi, byte ptr [rbx + 1]
48fa74: mov rsi, r15
48fa77: mov dword ptr [rsp + 0xc], edi
48fa7b: call 0x48e590
48fa80: mov edi, dword ptr [rsp + 0xc]
48fa84: lea rdx, [rbx + 2]
48fa88: lea rcx, [rsp + 0x18]
48fa8d: mov rsi, rax
48fa90: call 0x48e440
48fa95: mov r10, qword ptr [rsp + 0x18]
48fa9a: mov edi, ebp
48fa9c: lea r9, [rip + 0x2142d]
48faa3: movabs r8, 0x4000000000000000
48faad: mov rbx, rax
48fab0: jmp 0x48f848
48fab5: cmp ebp, 2
48fab8: jle 0x401724
48fabe: lea ecx, [rbp - 1]
48fac1: lea edx, [rbp - 2]
48fac4: mov rbx, r11
48fac7: lea eax, [rbp - 3]
48faca: movsxd rcx, ecx
48facd: movsxd rdx, edx
48fad0: cdqe 
48fad2: mov rsi, qword ptr [rsp + rcx*8 + 0x20]
48fad7: mov r10, qword ptr [rsp + rdx*8 + 0x20]
48fadc: mov rdi, qword ptr [rsp + rax*8 + 0x20]
48fae1: mov qword ptr [rsp + rcx*8 + 0x20], r10
48fae6: mov qword ptr [rsp + rdx*8 + 0x20], rdi
48faeb: mov qword ptr [rsp + rax*8 + 0x20], rsi
48faf0: jmp 0x48f85c
48faf5: movsxd r10, dword ptr [rbx + 1]
48faf9: mov edi, ebp
48fafb: add rbx, 5
48faff: jmp 0x48f848
48fb04: mov r10d, dword ptr [rbx + 1]
48fb08: mov edi, ebp
48fb0a: add rbx, 5
48fb0e: jmp 0x48f848
48fb13: movsx r10, word ptr [rbx + 1]
48fb18: mov edi, ebp
48fb1a: add rbx, 3
48fb1e: jmp 0x48f848
48fb23: movzx r10d, word ptr [rbx + 1]
48fb28: mov edi, ebp
48fb2a: add rbx, 3
48fb2e: jmp 0x48f848
48fb33: movsx r10, byte ptr [rbx + 1]
48fb38: mov edi, ebp
48fb3a: add rbx, 2
48fb3e: jmp 0x48f848
48fb43: movzx r10d, byte ptr [rbx + 1]
48fb48: mov edi, ebp
48fb4a: add rbx, 2
48fb4e: jmp 0x48f848
48fb53: cmp dl, 0x94
48fb56: jne 0x48fe87
48fb5c: movzx eax, byte ptr [rbx + 1]
48fb60: lea rdx, [rbx + 2]
48fb64: cmp al, 4
48fb66: je 0x48fe5d
48fb6c: ja 0x48fe78
48fb72: cmp al, 1
48fb74: jne 0x48fe68
48fb7a: movzx r10d, byte ptr [r10]
48fb7e: mov rbx, rdx
48fb81: jmp 0x48f848
48fb86: nop word ptr cs:[rax + rax]
48fb90: mov rbx, rdx
48fb93: jmp 0x48f85c
48fb98: nop dword ptr [rax + rax]
48fba0: mov rax, rcx
48fba3: jmp 0x48f878
48fba8: not r10
48fbab: mov rbx, r11
48fbae: jmp 0x48f848
48fbb3: mov r10, qword ptr [r10]
48fbb6: mov rbx, r11
48fbb9: jmp 0x48f848
48fbbe: mov rax, r10
48fbc1: mov rbx, r11
48fbc4: sar rax, 0x3f
48fbc8: xor r10, rax
48fbcb: sub r10, rax
48fbce: jmp 0x48f848
48fbd3: neg r10
48fbd6: mov rbx, r11
48fbd9: jmp 0x48f848
48fbde: mov rbx, r11
48fbe1: jmp 0x48f85c
48fbe6: mov rbx, r11
48fbe9: xor esi, esi
48fbeb: xor ecx, ecx
48fbed: nop dword ptr [rax]
48fbf0: movzx edx, byte ptr [rbx]
48fbf3: add rbx, 1
48fbf7: mov rax, rdx
48fbfa: and eax, 0x7f
48fbfd: shl rax, cl
48fc00: add ecx, 7
48fc03: or rsi, rax
48fc06: test dl, dl
48fc08: js 0x48fbf0
48fc0a: xor eax, eax
48fc0c: xor ecx, ecx
48fc0e: nop 
48fc10: movzx edi, byte ptr [rbx]
48fc13: add rbx, 1
48fc17: mov rdx, rdi
48fc1a: and edx, 0x7f
48fc1d: shl rdx, cl
48fc20: add ecx, 7
48fc23: or rax, rdx
48fc26: test dil, dil
48fc29: js 0x48fc10
48fc2b: cmp ecx, 0x3f
48fc2e: ja 0x48fc42
48fc30: and edi, 0x40
48fc33: je 0x48fc42
48fc35: mov rdx, 0xffffffffffffffff
48fc3c: shl rdx, cl
48fc3f: or rax, rdx
48fc42: movsxd rdx, esi
48fc45: cmp esi, 0x11
48fc48: jg 0x401724
48fc4e: movsxd rsi, esi
48fc51: mov r10, qword ptr [r15 + rsi*8]
48fc55: test qword ptr [r15 + 0xc0], r8
48fc5c: je 0x48fc69
48fc5e: cmp byte ptr [r15 + rsi + 0xd8], 0
48fc67: jne 0x48fc7d
48fc69: lea rcx, [rip + 0x33490]
48fc70: cmp byte ptr [rcx + rdx], 8
48fc74: jne 0x401724
48fc7a: mov r10, qword ptr [r10]
48fc7d: add r10, rax
48fc80: mov edi, ebp
48fc82: jmp 0x48f848
48fc87: mov rbx, r11
48fc8a: xor esi, esi
48fc8c: xor ecx, ecx
48fc8e: nop 
48fc90: movzx edx, byte ptr [rbx]
48fc93: add rbx, 1
48fc97: mov rax, rdx
48fc9a: and eax, 0x7f
48fc9d: shl rax, cl
48fca0: add ecx, 7
48fca3: or rsi, rax
48fca6: test dl, dl
48fca8: js 0x48fc90
48fcaa: movsxd rdx, esi
48fcad: cmp esi, 0x11
48fcb0: jg 0x401724
48fcb6: movsxd rsi, esi
48fcb9: mov r10, qword ptr [r15 + rsi*8]
48fcbd: test qword ptr [r15 + 0xc0], r8
48fcc4: je 0x48fcd1
48fcc6: cmp byte ptr [r15 + rsi + 0xd8], 0
48fccf: jne 0x48fce5
48fcd1: lea rax, [rip + 0x33428]
48fcd8: cmp byte ptr [rax + rdx], 8
48fcdc: jne 0x401724
48fce2: mov r10, qword ptr [r10]
48fce5: mov edi, ebp
48fce7: jmp 0x48f848
48fcec: mov rbx, r11
48fcef: xor r10d, r10d
48fcf2: xor ecx, ecx
48fcf4: nop dword ptr [rax]
48fcf8: movzx edx, byte ptr [rbx]
48fcfb: add rbx, 1
48fcff: mov rax, rdx
48fd02: and eax, 0x7f
48fd05: shl rax, cl
48fd08: add ecx, 7
48fd0b: or r10, rax
48fd0e: test dl, dl
48fd10: js 0x48fcf8
48fd12: mov edi, ebp
48fd14: cmp ecx, 0x3f
48fd17: ja 0x48f848
48fd1d: and edx, 0x40
48fd20: je 0x48f848
48fd26: mov rax, 0xffffffffffffffff
48fd2d: shl rax, cl
48fd30: or r10, rax
48fd33: jmp 0x48f848
48fd38: mov rbx, r11
48fd3b: xor r10d, r10d
48fd3e: xor ecx, ecx
48fd40: movzx edx, byte ptr [rbx]
48fd43: add rbx, 1
48fd47: mov rax, rdx
48fd4a: and eax, 0x7f
48fd4d: shl rax, cl
48fd50: add ecx, 7
48fd53: or r10, rax
48fd56: test dl, dl
48fd58: js 0x48fd40
48fd5a: mov edi, ebp
48fd5c: jmp 0x48f848
48fd61: add r10, rcx
48fd64: mov rbx, r11
48fd67: jmp 0x48f848
48fd6c: shl r10, cl
48fd6f: mov rbx, r11
48fd72: jmp 0x48f848
48fd77: shr r10, cl
48fd7a: mov rbx, r11
48fd7d: jmp 0x48f848
48fd82: sar r10, cl
48fd85: mov rbx, r11
48fd88: jmp 0x48f848
48fd8d: xor r10, rcx
48fd90: mov rbx, r11
48fd93: jmp 0x48f848
48fd98: cmp r10, rcx
48fd9b: mov rbx, r11
48fd9e: sete r10b
48fda2: movzx r10d, r10b
48fda6: jmp 0x48f848
48fdab: cmp r10, rcx
48fdae: mov rbx, r11
48fdb1: setge r10b
48fdb5: movzx r10d, r10b
48fdb9: jmp 0x48f848
48fdbe: cmp r10, rcx
48fdc1: mov rbx, r11
48fdc4: setg r10b
48fdc8: movzx r10d, r10b
48fdcc: jmp 0x48f848
48fdd1: sub r10, rcx
48fdd4: mov rbx, r11
48fdd7: jmp 0x48f848
48fddc: mov rax, r10
48fddf: xor edx, edx
48fde1: mov rbx, r11
48fde4: div rcx
48fde7: mov r10, rdx
48fdea: jmp 0x48f848
48fdef: imul r10, rcx
48fdf3: mov rbx, r11
48fdf6: jmp 0x48f848
48fdfb: mov rax, r10
48fdfe: mov rbx, r11
48fe01: cqo 
48fe03: idiv rcx
48fe06: mov r10, rax
48fe09: jmp 0x48f848
48fe0e: cmp r10, rcx
48fe11: mov rbx, r11
48fe14: setne r10b
48fe18: movzx r10d, r10b
48fe1c: jmp 0x48f848
48fe21: or r10, rcx
48fe24: mov rbx, r11
48fe27: jmp 0x48f848
48fe2c: cmp r10, rcx
48fe2f: mov rbx, r11
48fe32: setle r10b
48fe36: movzx r10d, r10b
48fe3a: jmp 0x48f848
48fe3f: cmp r10, rcx
48fe42: mov rbx, r11
48fe45: setl r10b
48fe49: movzx r10d, r10b
48fe4d: jmp 0x48f848
48fe52: and r10, rcx
48fe55: mov rbx, r11
48fe58: jmp 0x48f848
48fe5d: mov r10d, dword ptr [r10]
48fe60: mov rbx, rdx
48fe63: jmp 0x48f848
48fe68: cmp al, 2
48fe6a: jne 0x48fe8c
48fe6c: movzx r10d, word ptr [r10]
48fe70: mov rbx, rdx
48fe73: jmp 0x48f848
48fe78: cmp al, 8
48fe7a: jne 0x48fe91
48fe7c: mov r10, qword ptr [r10]
48fe7f: mov rbx, rdx
48fe82: jmp 0x48f848
48fe87: jmp 0x401729
48fe8c: jmp 0x401729
48fe91: jmp 0x401729
48fe96: nop word ptr cs:[rax + rax]
48fea0: push r15
48fea2: push r14
48fea4: push r13
48fea6: mov r13, rdi
48fea9: push r12
48feab: push rbp
48feac: push rbx
48fead: sub rsp, 0x118
48feb4: movdqa xmm0, xmmword ptr [rdi]
48feb8: movdqa xmm1, xmmword ptr [rdi + 0x10]
48febd: movdqa xmm2, xmmword ptr [rdi + 0x20]
48fec2: movdqa xmm3, xmmword ptr [rdi + 0x30]
48fec7: mov qword ptr [rsp + 8], rsi
48fecc: movdqa xmm4, xmmword ptr [rdi + 0x40]
48fed1: movdqa xmm5, xmmword ptr [rdi + 0x50]
48fed6: movaps xmmword ptr [rsp + 0x20], xmm0
48fedb: movdqa xmm6, xmmword ptr [rdi + 0x60]
48fee0: movdqa xmm7, xmmword ptr [rdi + 0x70]
48fee5: movaps xmmword ptr [rsp + 0x30], xmm1
48feea: movdqa xmm0, xmmword ptr [rdi + 0x80]
48fef2: movdqa xmm1, xmmword ptr [rdi + 0x90]
48fefa: movaps xmmword ptr [rsp + 0x40], xmm2
48feff: movaps xmmword ptr [rsp + 0x50], xmm3
48ff04: movdqa xmm2, xmmword ptr [rdi + 0xa0]
48ff0c: movdqa xmm3, xmmword ptr [rdi + 0xb0]
48ff14: movaps xmmword ptr [rsp + 0x60], xmm4
48ff19: movaps xmmword ptr [rsp + 0x70], xmm5
48ff1e: movaps xmmword ptr [rsp + 0x80], xmm6
48ff26: movaps xmmword ptr [rsp + 0x90], xmm7
48ff2e: movaps xmmword ptr [rsp + 0xa0], xmm0
48ff36: movaps xmmword ptr [rsp + 0xb0], xmm1
48ff3e: movaps xmmword ptr [rsp + 0xc0], xmm2
48ff46: movaps xmmword ptr [rsp + 0xd0], xmm3
48ff4e: mov rax, qword ptr [rdi + 0xc0]
48ff55: movdqa xmm4, xmmword ptr [rdi + 0xc0]
48ff5d: movdqa xmm5, xmmword ptr [rdi + 0xd0]
48ff65: movdqa xmm6, xmmword ptr [rdi + 0xe0]
48ff6d: bt rax, 0x3e
48ff72: movaps xmmword ptr [rsp + 0xe0], xmm4
48ff7a: movaps xmmword ptr [rsp + 0xf0], xmm5
48ff82: movaps xmmword ptr [rsp + 0x100], xmm6
48ff8a: jae 0x48ff96
48ff8c: cmp byte ptr [rsp + 0xff], 0
48ff94: jne 0x48ffa2
48ff96: cmp qword ptr [rsp + 0x58], 0
48ff9c: je 0x490289
48ffa2: test byte ptr [r13 + 0xc7], 0x40
48ffaa: je 0x48ffb4
48ffac: mov byte ptr [r13 + 0xdf], 0
48ffb4: mov rax, qword ptr [rsp + 8]
48ffb9: mov qword ptr [r13 + 0x38], 0
48ffc1: mov eax, dword ptr [rax + 0x140]
48ffc7: cmp eax, 1
48ffca: jne 0x490028
48ffcc: mov rax, qword ptr [rsp + 8]
48ffd1: mov rdx, qword ptr [rax + 0x130]
48ffd8: cmp edx, 0x11
48ffdb: jg 0x40172e
48ffe1: movsxd rdx, edx
48ffe4: mov r10, qword ptr [rsp + rdx*8 + 0x20]
48ffe9: test byte ptr [rsp + 0xe7], 0x40
48fff1: je 0x48fffd
48fff3: cmp byte ptr [rsp + rdx + 0xf8], 0
48fffb: jne 0x490011
48fffd: lea rax, [rip + 0x330fc]
490004: cmp byte ptr [rax + rdx], 8
490008: jne 0x40172e
49000e: mov r10, qword ptr [r10]
490011: mov rax, qword ptr [rsp + 8]
490016: add r10, qword ptr [rax + 0x128]
49001d: mov rbp, r10
490020: jmp 0x490074
490022: nop word ptr [rax + rax]
490028: cmp eax, 2
49002b: jne 0x4902c3
490031: mov rax, qword ptr [rsp + 8]
490036: xor esi, esi
490038: xor ecx, ecx
49003a: mov rdi, qword ptr [rax + 0x138]
490041: nop dword ptr [rax]
490048: movzx edx, byte ptr [rdi]
49004b: add rdi, 1
49004f: mov rax, rdx
490052: and eax, 0x7f
490055: shl rax, cl
490058: add ecx, 7
49005b: or rsi, rax
49005e: test dl, dl
490060: js 0x490048
490062: lea rdx, [rsp + 0x20]
490067: add rsi, rdi
49006a: xor ecx, ecx
49006c: call 0x48f740
490071: mov rbp, rax
490074: mov qword ptr [r13 + 0x90], rbp
49007b: mov rbx, qword ptr [rsp + 8]
490080: xor r15d, r15d
490083: lea r12, [rip + 0x20f12]
49008a: lea r14, [rsp + 0x20]
49008f: nop 
490090: cmp dword ptr [rbx + 8], 5
490094: ja 0x490126
49009a: mov eax, dword ptr [rbx + 8]
49009d: movsxd rax, dword ptr [r12 + rax*4]
4900a1: add rax, r12
4900a4: notrack jmp rax
4900a7: nop word ptr [rax + rax]
4900b0: mov rdi, qword ptr [rbx]
4900b3: xor esi, esi
4900b5: xor ecx, ecx
4900b7: nop word ptr [rax + rax]
4900c0: movzx edx, byte ptr [rdi]
4900c3: add rdi, 1
4900c7: mov rax, rdx
4900ca: and eax, 0x7f
4900cd: shl rax, cl
4900d0: add ecx, 7
4900d3: or rsi, rax
4900d6: test dl, dl
4900d8: js 0x4900c0
4900da: add rsi, rdi
4900dd: mov rcx, rbp
4900e0: mov rdx, r14
4900e3: call 0x48f740
4900e8: lea rsi, [rip + 0x33011]
4900ef: cmp byte ptr [rsi + r15], 8
4900f4: jbe 0x490118
4900f6: jmp 0x40172e
4900fb: nop dword ptr [rax + rax]
490100: mov rax, qword ptr [rbx]
490103: lea rsi, [rip + 0x32ff6]
49010a: add rax, rbp
49010d: cmp byte ptr [rsi + r15], 8
490112: ja 0x40172e
490118: mov byte ptr [r13 + r15 + 0xd8], 1
490121: mov qword ptr [r13 + r15*8], rax
490126: add r15, 1
49012a: add rbx, 0x10
49012e: cmp r15, 0x12
490132: jne 0x490090
490138: mov rdx, qword ptr [r13 + 0xc0]
49013f: mov rbx, qword ptr [rsp + 8]
490144: mov rax, rdx
490147: btr rax, 0x3f
49014c: cmp byte ptr [rbx + 0x173], 0
490153: je 0x49015d
490155: mov rax, rdx
490158: bts rax, 0x3f
49015d: mov qword ptr [r13 + 0xc0], rax
490164: add rsp, 0x118
49016b: pop rbx
49016c: pop rbp
49016d: pop r12
49016f: pop r13
490171: pop r14
490173: pop r15
490175: ret 
490176: nop word ptr cs:[rax + rax]
490180: mov rdi, qword ptr [rbx]
490183: xor esi, esi
490185: xor ecx, ecx
490187: nop word ptr [rax + rax]
490190: movzx edx, byte ptr [rdi]
490193: add rdi, 1
490197: mov rax, rdx
49019a: and eax, 0x7f
49019d: shl rax, cl
4901a0: add ecx, 7
4901a3: or rsi, rax
4901a6: test dl, dl
4901a8: js 0x490190
4901aa: add rsi, rdi
4901ad: mov rcx, rbp
4901b0: mov rdx, r14
4901b3: call 0x48f740
4901b8: movabs rsi, 0x4000000000000000
4901c2: test qword ptr [r13 + 0xc0], rsi
4901c9: je 0x490121
4901cf: jmp 0x4901f5
4901d1: nop dword ptr [rax]
4901d8: movabs rsi, 0x4000000000000000
4901e2: mov rax, qword ptr [rbx]
4901e5: add rax, rbp
4901e8: test qword ptr [r13 + 0xc0], rsi
4901ef: je 0x490121
4901f5: mov byte ptr [r13 + r15 + 0xd8], 0
4901fe: jmp 0x490121
490203: nop dword ptr [rax + rax]
490208: mov rdx, qword ptr [rbx]
49020b: movsxd rax, edx
49020e: cmp byte ptr [rsp + rax + 0xf8], 0
490216: jne 0x490240
490218: movabs rsi, 0x4000000000000000
490222: mov rax, qword ptr [rsp + rax*8 + 0x20]
490227: test qword ptr [r13 + 0xc0], rsi
49022e: je 0x490121
490234: jmp 0x4901f5
490236: nop word ptr cs:[rax + rax]
490240: cmp edx, 0x11
490243: jg 0x40172e
490249: movabs rsi, 0x4000000000000000
490253: mov rdx, qword ptr [rsp + rax*8 + 0x20]
490258: test qword ptr [rsp + 0xe0], rsi
490260: je 0x490270
490262: mov rax, rdx
490265: jmp 0x4900e8
49026a: nop word ptr [rax + rax]
490270: lea rsi, [rip + 0x32e89]
490277: cmp byte ptr [rsi + rax], 8
49027b: jne 0x40172e
490281: mov rax, qword ptr [rdx]
490284: jmp 0x4900e8
490289: cmp byte ptr [rip + 0x32e77], 8
490290: mov rax, qword ptr [r13 + 0x90]
490297: jne 0x40172e
49029d: mov qword ptr [rsp + 0x18], rax
4902a2: test byte ptr [rsp + 0xe7], 0x40
4902aa: je 0x4902b4
4902ac: mov byte ptr [rsp + 0xff], 0
4902b4: lea rax, [rsp + 0x18]
4902b9: mov qword ptr [rsp + 0x58], rax
4902be: jmp 0x48ffa2
4902c3: jmp 0x401733
4902c8: nop dword ptr [rax + rax]
4902d0: push r13
4902d2: xor eax, eax
4902d4: mov ecx, 0x1e
4902d9: push r12
4902db: mov r12, rsi
4902de: push rbp
4902df: mov rbp, rdi
4902e2: push rbx
4902e3: mov rbx, rdx
4902e6: sub rsp, 0x198
4902ed: rep stosq qword ptr [rdi], rax
4902f0: lea r13, [rsp + 0x10]
4902f5: mov rdi, rbp
4902f8: mov rsi, r13
4902fb: mov rax, qword ptr [rsp + 0x1b8]
490303: mov qword ptr [rbp + 0x98], rax
49030a: movabs rax, 0x4000000000000000
490314: mov qword ptr [rbp + 0xc0], rax
49031b: call 0x48ef10
490320: test eax, eax
490322: jne 0x401738
490328: cmp qword ptr [rip + 0x2fbf8], 0
490330: je 0x4903c0
490336: lea rsi, [rip - 0x14ad]
49033d: lea rdi, [rip + 0x32dac]
490344: call 0
490349: test eax, eax
49034b: jne 0x4903c0
49034d: cmp byte ptr [rip + 0x32db3], 8
490354: jne 0x401738
49035a: mov qword ptr [rsp + 8], r12
49035f: test byte ptr [rbp + 0xc7], 0x40
490366: je 0x49036f
490368: mov byte ptr [rbp + 0xdf], 0
49036f: lea rax, [rsp + 8]
490374: mov rsi, r13
490377: mov rdi, rbp
49037a: mov dword ptr [rsp + 0x150], 1
490385: mov qword ptr [rbp + 0x38], rax
490389: mov qword ptr [rsp + 0x140], 7
490395: mov qword ptr [rsp + 0x138], 0
4903a1: call 0x48fea0
4903a6: mov qword ptr [rbp + 0x98], rbx
4903ad: add rsp, 0x198
4903b4: pop rbx
4903b5: pop rbp
4903b6: pop r12
4903b8: pop r13
4903ba: ret 
4903bb: nop dword ptr [rax + rax]
4903c0: cmp byte ptr [rip + 0x32d39], 0
4903c7: jne 0x49034d
4903c9: mov byte ptr [rip + 0x32d30], 8
4903d0: mov byte ptr [rip + 0x32d2a], 8
4903d7: mov byte ptr [rip + 0x32d24], 8
4903de: mov byte ptr [rip + 0x32d1e], 8
4903e5: mov byte ptr [rip + 0x32d18], 8
4903ec: mov byte ptr [rip + 0x32d12], 8
4903f3: mov byte ptr [rip + 0x32d0c], 8
4903fa: mov byte ptr [rip + 0x32d06], 8
490401: mov byte ptr [rip + 0x32d00], 8
490408: mov byte ptr [rip + 0x32cfa], 8
49040f: mov byte ptr [rip + 0x32cf4], 8
490416: mov byte ptr [rip + 0x32cee], 8
49041d: mov byte ptr [rip + 0x32ce8], 8
490424: mov byte ptr [rip + 0x32ce2], 8
49042b: mov byte ptr [rip + 0x32cdc], 8
490432: mov byte ptr [rip + 0x32cd6], 8
490439: mov byte ptr [rip + 0x32cd0], 8
490440: jmp 0x49034d
490445: nop word ptr cs:[rax + rax]
490450: push rbp
490451: mov rbp, rsi
490454: push rbx
490455: mov rbx, rdi
490458: sub rsp, 8
49045c: call 0x48fea0
490461: mov rax, qword ptr [rbp + 0x168]
490468: mov rdx, rax
49046b: shl rdx, 4
49046f: cmp dword ptr [rbp + rdx + 8], 6
490474: jne 0x490490
490476: mov qword ptr [rbx + 0x98], 0
490481: add rsp, 8
490485: pop rbx
490486: pop rbp
490487: ret 
490488: nop dword ptr [rax + rax]
490490: cmp eax, 0x11
490493: jg 0x40173d
490499: cdqe 
49049b: mov rdx, qword ptr [rbx + rax*8]
49049f: test byte ptr [rbx + 0xc7], 0x40
4904a6: je 0x4904b2
4904a8: cmp byte ptr [rbx + rax + 0xd8], 0
4904b0: jne 0x4904c6
4904b2: lea rcx, [rip + 0x32c47]
4904b9: cmp byte ptr [rcx + rax], 8
4904bd: jne 0x40173d
4904c3: mov rdx, qword ptr [rdx]
4904c6: mov qword ptr [rbx + 0x98], rdx
4904cd: add rsp, 8
4904d1: pop rbx
4904d2: pop rbp
4904d3: ret 
4904d4: nop word ptr cs:[rax + rax]
4904df: nop 
4904e0: push r15
4904e2: mov r15, rdx
4904e5: push r14
4904e7: mov r14d, 1
4904ed: push r13
4904ef: push r12
4904f1: mov r12, rdi
4904f4: push rbp
4904f5: push rbx
4904f6: mov rbx, rsi
4904f9: sub rsp, 0x188
490500: mov r13, rsp
490503: jmp 0x490548
490505: nop dword ptr [rax]
490508: mov rax, qword ptr [rsp + 0x150]
490510: test rax, rax
490513: je 0x490535
490515: mov esi, ebp
490517: mov rdx, qword ptr [r12]
49051b: mov r8, rbx
49051e: mov rcx, r12
490521: or esi, 2
490524: mov edi, 1
490529: call rax
49052b: cmp eax, 7
49052e: je 0x490598
490530: cmp eax, 8
490533: jne 0x49057e
490535: test ebp, ebp
490537: jne 0x49059d
490539: mov rsi, r13
49053c: mov rdi, rbx
49053f: add r14, 1
490543: call 0x490450
490548: mov rsi, r13
49054b: mov rdi, rbx
49054e: xor ebp, ebp
490550: call 0x48ef10
490555: mov rcx, qword ptr [rbx + 0x90]
49055c: mov r8d, eax
49055f: mov rax, qword ptr [rbx + 0xc0]
490566: shr rax, 0x3f
49056a: sub rcx, rax
49056d: cmp qword ptr [r12 + 0x18], rcx
490572: sete bpl
490576: shl ebp, 2
490579: test r8d, r8d
49057c: je 0x490508
49057e: mov eax, 2
490583: add rsp, 0x188
49058a: pop rbx
49058b: pop rbp
49058c: pop r12
49058e: pop r13
490590: pop r14
490592: pop r15
490594: ret 
490595: nop dword ptr [rax]
490598: mov qword ptr [r15], r14
49059b: jmp 0x490583
49059d: jmp 0x401742
4905a2: nop word ptr cs:[rax + rax]
4905ad: nop dword ptr [rax]
4905b0: push r15
4905b2: push r14
4905b4: push r13
4905b6: mov r13, rsi
4905b9: push r12
4905bb: mov r12, rdi
4905be: push rbp
4905bf: mov ebp, 1
4905c4: push rbx
4905c5: sub rsp, 0x198
4905cc: mov rax, qword ptr [rdi + 0x10]
4905d0: mov r14, qword ptr [rdi + 0x18]
4905d4: mov qword ptr [rsp + 8], rdx
4905d9: lea rbx, [rsp + 0x10]
4905de: mov qword ptr [rsp], rax
4905e2: jmp 0x490644
4905e4: nop dword ptr [rax]
4905e8: mov rax, qword ptr [rsp]
4905ec: mov r9, r14
4905ef: mov r8, r13
4905f2: mov rcx, r12
4905f5: mov esi, 0xa
4905fa: mov edi, 1
4905ff: call rax
490601: test eax, eax
490603: jne 0x490682
490605: mov rax, qword ptr [rsp + 0x160]
49060d: test rax, rax
490610: je 0x490635
490612: mov rdx, qword ptr [r12]
490616: mov r8, r13
490619: mov rcx, r12
49061c: mov esi, 0xa
490621: mov edi, 1
490626: call rax
490628: mov r15d, eax
49062b: cmp eax, 7
49062e: je 0x4906a0
490630: cmp eax, 8
490633: jne 0x490682
490635: mov rsi, rbx
490638: mov rdi, r13
49063b: add rbp, 1
49063f: call 0x490450
490644: mov rsi, rbx
490647: mov rdi, r13
49064a: call 0x48ef10
49064f: mov r15d, eax
490652: test eax, eax
490654: je 0x49065b
490656: cmp eax, 5
490659: jne 0x490682
49065b: mov rdx, qword ptr [r12]
49065f: cmp r15d, 5
490663: jne 0x4905e8
490665: mov rax, qword ptr [rsp]
490669: mov r9, r14
49066c: mov r8, r13
49066f: mov rcx, r12
490672: mov esi, 0x1a
490677: mov edi, 1
49067c: call rax
49067e: test eax, eax
490680: je 0x4906a0
490682: mov r15d, 2
490688: add rsp, 0x198
49068f: mov eax, r15d
490692: pop rbx
490693: pop rbp
490694: pop r12
490696: pop r13
490698: pop r14
49069a: pop r15
49069c: ret 
49069d: nop dword ptr [rax]
4906a0: mov rax, qword ptr [rsp + 8]
4906a5: mov qword ptr [rax], rbp
4906a8: jmp 0x490688
4906aa: nop word ptr [rax + rax]
4906b0: endbr64 
4906b4: sub rsp, 8
4906b8: cmp esi, 0x11
4906bb: jg 0x401747
4906c1: movsxd rsi, esi
4906c4: mov rax, qword ptr [rdi + rsi*8]
4906c8: test byte ptr [rdi + 0xc7], 0x40
4906cf: je 0x4906db
4906d1: cmp byte ptr [rdi + rsi + 0xd8], 0
4906d9: jne 0x4906ef
4906db: lea rdx, [rip + 0x32a1e]
4906e2: cmp byte ptr [rdx + rsi], 8
4906e6: jne 0x401747
4906ec: mov rax, qword ptr [rax]
4906ef: add rsp, 8
4906f3: ret 
4906f4: nop word ptr cs:[rax + rax]
4906ff: nop 
490700: endbr64 
490704: mov rax, qword ptr [rdi + 0x90]
49070b: ret 
49070c: nop dword ptr [rax]
490710: endbr64 
490714: sub rsp, 8
490718: cmp esi, 0x11
49071b: jg 0x40174c
490721: movsxd rsi, esi
490724: lea rax, [rip + 0x329d5]
49072b: movzx eax, byte ptr [rax + rsi]
49072f: test byte ptr [rdi + 0xc7], 0x40
490736: je 0x490742
490738: cmp byte ptr [rdi + rsi + 0xd8], 0
490740: jne 0x490760
490742: mov rcx, qword ptr [rdi + rsi*8]
490746: cmp al, 8
490748: jne 0x40174c
49074e: mov qword ptr [rcx], rdx
490751: add rsp, 8
490755: ret 
490756: nop word ptr cs:[rax + rax]
490760: mov qword ptr [rdi + rsi*8], rdx
490764: add rsp, 8
490768: ret 
490769: nop dword ptr [rax]
490770: endbr64 
490774: mov rax, qword ptr [rdi + 0x98]
49077b: ret 
49077c: nop dword ptr [rax]
490780: endbr64 
490784: mov rax, qword ptr [rdi + 0xc0]
49078b: sar rax, 0x3f
49078f: and eax, 1
490792: mov dword ptr [rsi], eax
490794: mov rax, qword ptr [rdi + 0x98]
49079b: ret 
49079c: nop dword ptr [rax]
4907a0: endbr64 
4907a4: mov qword ptr [rdi + 0x98], rsi
4907ab: ret 
4907ac: nop dword ptr [rax]
4907b0: endbr64 
4907b4: mov rax, qword ptr [rdi + 0xa0]
4907bb: ret 
4907bc: nop dword ptr [rax]
4907c0: endbr64 
4907c4: mov rax, qword ptr [rdi + 0xb8]
4907cb: ret 
4907cc: nop dword ptr [rax]
4907d0: endbr64 
4907d4: sub rsp, 0x28
4907d8: sub rdi, 1
4907dc: mov rsi, rsp
4907df: call 0x492ad0
4907e4: test rax, rax
4907e7: cmovne rax, qword ptr [rsp + 0x10]
4907ed: add rsp, 0x28
4907f1: ret 
4907f2: nop word ptr cs:[rax + rax]
4907fd: nop dword ptr [rax]
490800: endbr64 
490804: mov rax, qword ptr [rdi + 0xb0]
49080b: ret 
49080c: nop dword ptr [rax]
490810: endbr64 
490814: mov rax, qword ptr [rdi + 0xa8]
49081b: ret 
49081c: nop dword ptr [rax]
490820: endbr64 
490824: push rbp
490825: xor eax, eax
490827: mov r9, rdi
49082a: mov ecx, 0x1e
49082f: push rbx
490830: add r9, 1
490834: mov rbp, rsi
490837: sub rsp, 0x278
49083e: mov r8, rsp
490841: lea rbx, [rsp + 0xf0]
490849: mov rdi, r8
49084c: mov rsi, rbx
49084f: rep stosq qword ptr [rdi], rax
490852: mov rdi, r8
490855: mov qword ptr [rsp + 0x98], r9
49085d: movabs rax, 0x4000000000000000
490867: mov qword ptr [rsp + 0xc0], rax
49086f: call 0x48ef10
490874: test eax, eax
490876: jne 0x490930
49087c: cmp dword ptr [rsp + 0x230], 2
490884: je 0x490930
49088a: mov rcx, rbx
49088d: xor eax, eax
49088f: jmp 0x4908af
490891: nop dword ptr [rax]
490898: mov qword ptr [rbp + rax*8 + 0x20], 0
4908a1: add rax, 1
4908a5: add rcx, 0x10
4908a9: cmp rax, 0x12
4908ad: je 0x4908d9
4908af: mov edx, dword ptr [rcx + 8]
4908b2: mov byte ptr [rbp + rax + 0xb4], dl
4908b9: cmp dl, 1
4908bc: je 0x4908c3
4908be: cmp dl, 2
4908c1: jne 0x490898
4908c3: mov rdx, qword ptr [rcx]
4908c6: add rcx, 0x10
4908ca: mov qword ptr [rbp + rax*8 + 0x20], rdx
4908cf: add rax, 1
4908d3: cmp rax, 0x12
4908d7: jne 0x4908af
4908d9: mov rax, qword ptr [rsp + 0x218]
4908e1: mov qword ptr [rbp + 0x10], rax
4908e5: mov rax, qword ptr [rsp + 0x220]
4908ed: mov word ptr [rbp + 0xb0], ax
4908f4: mov rax, qword ptr [rsp + 0x258]
4908fc: mov word ptr [rbp + 0xb2], ax
490903: mov rax, qword ptr [rsp + 0xd0]
49090b: mov qword ptr [rbp + 0x18], rax
49090f: mov rax, qword ptr [rsp + 0x268]
490917: mov qword ptr [rbp + 8], rax
49091b: add rsp, 0x278
490922: mov rax, rbp
490925: pop rbx
490926: pop rbp
490927: ret 
490928: nop dword ptr [rax + rax]
490930: add rsp, 0x278
490937: xor eax, eax
490939: pop rbx
49093a: pop rbp
49093b: ret 
49093c: nop dword ptr [rax]
490940: endbr64 
490944: ret 
490945: nop word ptr cs:[rax + rax]
490950: endbr64 
490954: push rbp
490955: mov rbp, rsp
490958: push r15
49095a: push r14
49095c: lea r15, [rbp - 0x3a0]
490963: mov r14, rdi
490966: lea rsi, [rbp + 0x10]
49096a: push r13
49096c: mov rdi, r15
49096f: lea r13, [rbp - 0x1c0]
490976: push r12
490978: lea r12, [rbp - 0x2b0]
49097f: push rbx
490980: push rdx
490981: push rax
490982: sub rsp, 0x368
490989: mov rdx, qword ptr [rbp + 8]
49098d: call 0x4902d0
490992: movdqa xmm0, xmmword ptr [rbp - 0x3a0]
49099a: movdqa xmm1, xmmword ptr [rbp - 0x390]
4909a2: movdqa xmm2, xmmword ptr [rbp - 0x380]
4909aa: movdqa xmm3, xmmword ptr [rbp - 0x370]
4909b2: movdqa xmm4, xmmword ptr [rbp - 0x360]
4909ba: movdqa xmm5, xmmword ptr [rbp - 0x350]
4909c2: movaps xmmword ptr [rbp - 0x2b0], xmm0
4909c9: movdqa xmm6, xmmword ptr [rbp - 0x340]
4909d1: movdqa xmm7, xmmword ptr [rbp - 0x330]
4909d9: movaps xmmword ptr [rbp - 0x2a0], xmm1
4909e0: movdqa xmm0, xmmword ptr [rbp - 0x320]
4909e8: movdqa xmm1, xmmword ptr [rbp - 0x310]
4909f0: movaps xmmword ptr [rbp - 0x290], xmm2
4909f7: movaps xmmword ptr [rbp - 0x280], xmm3
4909fe: movdqa xmm2, xmmword ptr [rbp - 0x300]
490a06: movdqa xmm3, xmmword ptr [rbp - 0x2f0]
490a0e: movaps xmmword ptr [rbp - 0x270], xmm4
490a15: movdqa xmm4, xmmword ptr [rbp - 0x2e0]
490a1d: movaps xmmword ptr [rbp - 0x260], xmm5
490a24: movdqa xmm5, xmmword ptr [rbp - 0x2d0]
490a2c: movaps xmmword ptr [rbp - 0x250], xmm6
490a33: movdqa xmm6, xmmword ptr [rbp - 0x2c0]
490a3b: movaps xmmword ptr [rbp - 0x240], xmm7
490a42: movaps xmmword ptr [rbp - 0x230], xmm0
490a49: movaps xmmword ptr [rbp - 0x220], xmm1
490a50: movaps xmmword ptr [rbp - 0x210], xmm2
490a57: movaps xmmword ptr [rbp - 0x200], xmm3
490a5e: movaps xmmword ptr [rbp - 0x1f0], xmm4
490a65: movaps xmmword ptr [rbp - 0x1e0], xmm5
490a6c: movaps xmmword ptr [rbp - 0x1d0], xmm6
490a73: jmp 0x490aaf
490a75: nop dword ptr [rax]
490a78: test eax, eax
490a7a: jne 0x490ad8
490a7c: mov rax, qword ptr [rbp - 0x70]
490a80: test rax, rax
490a83: je 0x490aa4
490a85: mov rdx, qword ptr [r14]
490a88: mov r8, r12
490a8b: mov rcx, r14
490a8e: mov esi, 1
490a93: mov edi, 1
490a98: call rax
490a9a: cmp eax, 6
490a9d: je 0x490ae0
490a9f: cmp eax, 8
490aa2: jne 0x490ad8
490aa4: mov rsi, r13
490aa7: mov rdi, r12
490aaa: call 0x490450
490aaf: mov rsi, r13
490ab2: mov rdi, r12
490ab5: call 0x48ef10
490aba: cmp eax, 5
490abd: jne 0x490a78
490abf: mov rbx, qword ptr [rbp - 0x28]
490ac3: mov r12, qword ptr [rbp - 0x20]
490ac7: mov r13, qword ptr [rbp - 0x18]
490acb: mov r14, qword ptr [rbp - 0x10]
490acf: mov r15, qword ptr [rbp - 8]
490ad3: leave 
490ad4: ret 
490ad5: nop dword ptr [rax]
490ad8: mov eax, 3
490add: jmp 0x490abf
490adf: nop 
490ae0: movdqa xmm7, xmmword ptr [rbp - 0x3a0]
490ae8: mov rax, qword ptr [rbp - 0x1f0]
490aef: mov qword ptr [r14 + 0x10], 0
490af7: mov rdx, r13
490afa: movdqa xmm0, xmmword ptr [rbp - 0x350]
490b02: mov rbx, qword ptr [rbp - 0x220]
490b09: mov rsi, r12
490b0c: mov rdi, r14
490b0f: movaps xmmword ptr [rbp - 0x2b0], xmm7
490b16: movdqa xmm7, xmmword ptr [rbp - 0x390]
490b1e: movdqa xmm1, xmmword ptr [rbp - 0x340]
490b26: shr rax, 0x3f
490b2a: movdqa xmm2, xmmword ptr [rbp - 0x330]
490b32: movdqa xmm3, xmmword ptr [rbp - 0x320]
490b3a: movaps xmmword ptr [rbp - 0x260], xmm0
490b41: sub rbx, rax
490b44: movaps xmmword ptr [rbp - 0x2a0], xmm7
490b4b: movdqa xmm7, xmmword ptr [rbp - 0x380]
490b53: movdqa xmm4, xmmword ptr [rbp - 0x310]
490b5b: movdqa xmm5, xmmword ptr [rbp - 0x300]
490b63: movdqa xmm6, xmmword ptr [rbp - 0x2f0]
490b6b: mov qword ptr [r14 + 0x18], rbx
490b6f: movaps xmmword ptr [rbp - 0x290], xmm7
490b76: movdqa xmm7, xmmword ptr [rbp - 0x370]
490b7e: movdqa xmm0, xmmword ptr [rbp - 0x2d0]
490b86: movaps xmmword ptr [rbp - 0x250], xmm1
490b8d: movaps xmmword ptr [rbp - 0x280], xmm7
490b94: movdqa xmm7, xmmword ptr [rbp - 0x360]
490b9c: movaps xmmword ptr [rbp - 0x240], xmm2
490ba3: movaps xmmword ptr [rbp - 0x270], xmm7
490baa: movdqa xmm7, xmmword ptr [rbp - 0x2e0]
490bb2: movaps xmmword ptr [rbp - 0x230], xmm3
490bb9: movaps xmmword ptr [rbp - 0x220], xmm4
490bc0: movaps xmmword ptr [rbp - 0x210], xmm5
490bc7: movaps xmmword ptr [rbp - 0x200], xmm6
490bce: movaps xmmword ptr [rbp - 0x1f0], xmm7
490bd5: movaps xmmword ptr [rbp - 0x1e0], xmm0
490bdc: movdqa xmm1, xmmword ptr [rbp - 0x2c0]
490be4: movaps xmmword ptr [rbp - 0x1d0], xmm1
490beb: call 0x4904e0
490bf0: cmp eax, 7
490bf3: jne 0x490abf
490bf9: mov rsi, r12
490bfc: mov rdi, r15
490bff: call 0x48f5a0
490c04: mov rsi, qword ptr [rbp - 0x218]
490c0b: mov rdi, qword ptr [rbp - 0x220]
490c12: call 0x490940
490c17: mov rcx, rax
490c1a: mov qword ptr [rbp + rax + 8], rsi
490c1f: mov rax, qword ptr [rbp - 0x38]
490c23: lea rcx, [rbp + rcx + 8]
490c28: mov rdx, qword ptr [rbp - 0x30]
490c2c: mov rbx, qword ptr [rbp - 0x28]
490c30: mov r12, qword ptr [rbp - 0x20]
490c34: mov r13, qword ptr [rbp - 0x18]
490c38: mov r14, qword ptr [rbp - 0x10]
490c3c: mov r15, qword ptr [rbp - 8]
490c40: mov rbp, qword ptr [rbp]
490c44: mov rsp, rcx
490c47: pop rcx
490c48: jmp rcx
490c4a: nop word ptr [rax + rax]
490c50: endbr64 
490c54: push rbp
490c55: mov rbp, rsp
490c58: push r15
490c5a: push r14
490c5c: lea r14, [rbp - 0x220]
490c63: push r13
490c65: mov r13, rsi
490c68: lea rsi, [rbp + 0x10]
490c6c: push r12
490c6e: mov r12, rdi
490c71: mov rdi, r14
490c74: push rbx
490c75: mov rbx, rdx
490c78: push rdx
490c79: push rax
490c7a: sub rsp, 0x1f8
490c81: mov rdx, qword ptr [rbp + 8]
490c85: call 0x4902d0
490c8a: movdqa xmm0, xmmword ptr [rbp - 0x220]
490c92: mov rdi, r12
490c95: movdqa xmm1, xmmword ptr [rbp - 0x210]
490c9d: movdqa xmm2, xmmword ptr [rbp - 0x200]
490ca5: movdqa xmm3, xmmword ptr [rbp - 0x1f0]
490cad: mov qword ptr [r12 + 0x10], r13
490cb2: lea r13, [rbp - 0x130]
490cb9: movdqa xmm4, xmmword ptr [rbp - 0x1e0]
490cc1: movdqa xmm5, xmmword ptr [rbp - 0x1d0]
490cc9: mov rsi, r13
490ccc: mov qword ptr [r12 + 0x18], rbx
490cd1: movdqa xmm6, xmmword ptr [rbp - 0x1c0]
490cd9: movdqa xmm7, xmmword ptr [rbp - 0x1b0]
490ce1: movaps xmmword ptr [rbp - 0x130], xmm0
490ce8: lea rdx, [rbp - 0x228]
490cef: movdqa xmm0, xmmword ptr [rbp - 0x1a0]
490cf7: movaps xmmword ptr [rbp - 0x120], xmm1
490cfe: movdqa xmm1, xmmword ptr [rbp - 0x190]
490d06: movaps xmmword ptr [rbp - 0x110], xmm2
490d0d: movdqa xmm2, xmmword ptr [rbp - 0x180]
490d15: movaps xmmword ptr [rbp - 0x100], xmm3
490d1c: movdqa xmm3, xmmword ptr [rbp - 0x170]
490d24: movaps xmmword ptr [rbp - 0xf0], xmm4
490d2b: movdqa xmm4, xmmword ptr [rbp - 0x160]
490d33: movaps xmmword ptr [rbp - 0xe0], xmm5
490d3a: movdqa xmm5, xmmword ptr [rbp - 0x150]
490d42: movaps xmmword ptr [rbp - 0xd0], xmm6
490d49: movdqa xmm6, xmmword ptr [rbp - 0x140]
490d51: movaps xmmword ptr [rbp - 0xc0], xmm7
490d58: movaps xmmword ptr [rbp - 0xb0], xmm0
490d5f: movaps xmmword ptr [rbp - 0xa0], xmm1
490d66: movaps xmmword ptr [rbp - 0x90], xmm2
490d6d: movaps xmmword ptr [rbp - 0x80], xmm3
490d71: movaps xmmword ptr [rbp - 0x70], xmm4
490d75: movaps xmmword ptr [rbp - 0x60], xmm5
490d79: movaps xmmword ptr [rbp - 0x50], xmm6
490d7d: call 0x4905b0
490d82: cmp eax, 7
490d85: je 0x490d9d
490d87: mov rbx, qword ptr [rbp - 0x28]
490d8b: mov r12, qword ptr [rbp - 0x20]
490d8f: mov r13, qword ptr [rbp - 0x18]
490d93: mov r14, qword ptr [rbp - 0x10]
490d97: mov r15, qword ptr [rbp - 8]
490d9b: leave 
490d9c: ret 
490d9d: mov rsi, r13
490da0: mov rdi, r14
490da3: call 0x48f5a0
490da8: mov rsi, qword ptr [rbp - 0x98]
490daf: mov rdi, qword ptr [rbp - 0xa0]
490db6: call 0x490940
490dbb: mov rcx, rax
490dbe: mov qword ptr [rbp + rax + 8], rsi
490dc3: mov rax, qword ptr [rbp - 0x38]
490dc7: lea rcx, [rbp + rcx + 8]
490dcc: mov rdx, qword ptr [rbp - 0x30]
490dd0: mov rbx, qword ptr [rbp - 0x28]
490dd4: mov r12, qword ptr [rbp - 0x20]
490dd8: mov r13, qword ptr [rbp - 0x18]
490ddc: mov r14, qword ptr [rbp - 0x10]
490de0: mov r15, qword ptr [rbp - 8]
490de4: mov rbp, qword ptr [rbp]
490de8: mov rsp, rcx
490deb: pop rcx
490dec: jmp rcx
490dee: nop 
490df0: endbr64 
490df4: push rbp
490df5: mov rbp, rsp
490df8: push r15
490dfa: push r14
490dfc: lea rsi, [rbp + 0x10]
490e00: lea r14, [rbp - 0x130]
490e07: push r13
490e09: lea r13, [rbp - 0x220]
490e10: push r12
490e12: mov r12, rdi
490e15: mov rdi, r13
490e18: push rbx
490e19: push rdx
490e1a: push rax
490e1b: sub rsp, 0x1f8
490e22: mov rdx, qword ptr [rbp + 8]
490e26: call 0x4902d0
490e2b: movdqa xmm0, xmmword ptr [rbp - 0x220]
490e33: mov rsi, r14
490e36: movdqa xmm1, xmmword ptr [rbp - 0x210]
490e3e: movdqa xmm2, xmmword ptr [rbp - 0x200]
490e46: movdqa xmm3, xmmword ptr [rbp - 0x1f0]
490e4e: lea rdx, [rbp - 0x228]
490e55: mov rdi, r12
490e58: movdqa xmm4, xmmword ptr [rbp - 0x1e0]
490e60: movdqa xmm5, xmmword ptr [rbp - 0x1d0]
490e68: movaps xmmword ptr [rbp - 0x130], xmm0
490e6f: movdqa xmm6, xmmword ptr [rbp - 0x1c0]
490e77: movdqa xmm7, xmmword ptr [rbp - 0x1b0]
490e7f: movaps xmmword ptr [rbp - 0x120], xmm1
490e86: movdqa xmm0, xmmword ptr [rbp - 0x1a0]
490e8e: movdqa xmm1, xmmword ptr [rbp - 0x190]
490e96: movaps xmmword ptr [rbp - 0x110], xmm2
490e9d: movaps xmmword ptr [rbp - 0x100], xmm3
490ea4: movdqa xmm2, xmmword ptr [rbp - 0x180]
490eac: movdqa xmm3, xmmword ptr [rbp - 0x170]
490eb4: movaps xmmword ptr [rbp - 0xf0], xmm4
490ebb: movdqa xmm4, xmmword ptr [rbp - 0x160]
490ec3: cmp qword ptr [r12 + 0x10], 0
490ec9: movaps xmmword ptr [rbp - 0xe0], xmm5
490ed0: movdqa xmm5, xmmword ptr [rbp - 0x150]
490ed8: movaps xmmword ptr [rbp - 0xd0], xmm6
490edf: movdqa xmm6, xmmword ptr [rbp - 0x140]
490ee7: movaps xmmword ptr [rbp - 0xc0], xmm7
490eee: movaps xmmword ptr [rbp - 0xb0], xmm0
490ef5: movaps xmmword ptr [rbp - 0xa0], xmm1
490efc: movaps xmmword ptr [rbp - 0x90], xmm2
490f03: movaps xmmword ptr [rbp - 0x80], xmm3
490f07: movaps xmmword ptr [rbp - 0x70], xmm4
490f0b: movaps xmmword ptr [rbp - 0x60], xmm5
490f0f: movaps xmmword ptr [rbp - 0x50], xmm6
490f13: jne 0x490f77
490f15: call 0x4904e0
490f1a: cmp eax, 7
490f1d: jne 0x401751
490f23: mov rsi, r14
490f26: mov rdi, r13
490f29: call 0x48f5a0
490f2e: mov rdx, qword ptr [rbp - 0x98]
490f35: mov rdi, qword ptr [rbp - 0xa0]
490f3c: mov rsi, rdx
490f3f: call 0x490940
490f44: mov rcx, rax
490f47: mov qword ptr [rbp + rax + 8], rdx
490f4c: mov rax, qword ptr [rbp - 0x38]
490f50: lea rcx, [rbp + rcx + 8]
490f55: mov rdx, qword ptr [rbp - 0x30]
490f59: mov rbx, qword ptr [rbp - 0x28]
490f5d: mov r12, qword ptr [rbp - 0x20]
490f61: mov r13, qword ptr [rbp - 0x18]
490f65: mov r14, qword ptr [rbp - 0x10]
490f69: mov r15, qword ptr [rbp - 8]
490f6d: mov rbp, qword ptr [rbp]
490f71: mov rsp, rcx
490f74: pop rcx
490f75: jmp rcx
490f77: call 0x4905b0
490f7c: jmp 0x490f1a
490f7e: nop 
490f80: endbr64 
490f84: push rbp
490f85: mov rbp, rsp
490f88: push r15
490f8a: push r14
490f8c: push r13
490f8e: push r12
490f90: mov r12, rdi
490f93: push rbx
490f94: push rdx
490f95: push rax
490f96: sub rsp, 0x1f8
490f9d: cmp qword ptr [rdi + 0x10], 0
490fa2: jne 0x490fbf
490fa4: call 0x490950
490fa9: mov rbx, qword ptr [rbp - 0x28]
490fad: mov r12, qword ptr [rbp - 0x20]
490fb1: mov r13, qword ptr [rbp - 0x18]
490fb5: mov r14, qword ptr [rbp - 0x10]
490fb9: mov r15, qword ptr [rbp - 8]
490fbd: leave 
490fbe: ret 
490fbf: mov rdx, qword ptr [rbp + 8]
490fc3: lea r13, [rbp - 0x220]
490fca: lea rsi, [rbp + 0x10]
490fce: mov rdi, r13
490fd1: lea r14, [rbp - 0x130]
490fd8: call 0x4902d0
490fdd: lea rdi, [rbp - 0x130]
490fe4: mov rsi, r13
490fe7: mov ecx, 0x3c
490fec: rep movsd dword ptr [rdi], dword ptr [rsi]
490fee: lea rdx, [rbp - 0x228]
490ff5: mov rsi, r14
490ff8: mov rdi, r12
490ffb: call 0x4905b0
491000: cmp eax, 7
491003: jne 0x401756
491009: mov rsi, r14
49100c: mov rdi, r13
49100f: call 0x48f5a0
491014: mov rsi, qword ptr [rbp - 0x98]
49101b: mov rdi, qword ptr [rbp - 0xa0]
491022: call 0x490940
491027: mov rcx, rax
49102a: mov qword ptr [rbp + rax + 8], rsi
49102f: mov rax, qword ptr [rbp - 0x38]
491033: lea rcx, [rbp + rcx + 8]
491038: mov rdx, qword ptr [rbp - 0x30]
49103c: mov rbx, qword ptr [rbp - 0x28]
491040: mov r12, qword ptr [rbp - 0x20]
491044: mov r13, qword ptr [rbp - 0x18]
491048: mov r14, qword ptr [rbp - 0x10]
49104c: mov r15, qword ptr [rbp - 8]
491050: mov rbp, qword ptr [rbp]
491054: mov rsp, rcx
491057: pop rcx
491058: jmp rcx
49105a: nop word ptr [rax + rax]
491060: endbr64 
491064: mov rax, qword ptr [rdi + 8]
491068: mov rsi, rdi
49106b: test rax, rax
49106e: je 0x491080
491070: mov edi, 1
491075: jmp rax
491077: nop word ptr [rax + rax]
491080: ret 
491081: nop word ptr cs:[rax + rax]
49108c: nop dword ptr [rax]
491090: endbr64 
491094: push rbp
491095: mov rbp, rsp
491098: push r15
49109a: mov r15, rdi
49109d: push r14
49109f: mov r14, rsi
4910a2: lea rsi, [rbp + 0x10]
4910a6: push r13
4910a8: lea r13, [rbp - 0x1b0]
4910af: push r12
4910b1: push rbx
4910b2: lea rbx, [rbp - 0x2a0]
4910b9: mov rdi, rbx
4910bc: sub rsp, 0x278
4910c3: mov rdx, qword ptr [rbp + 8]
4910c7: call 0x4902d0
4910cc: jmp 0x4910ee
4910ce: nop 
4910d0: mov rsi, r14
4910d3: mov rdi, rbx
4910d6: call r15
4910d9: test eax, eax
4910db: jne 0x491105
4910dd: cmp r12d, 5
4910e1: je 0x49110b
4910e3: mov rsi, r13
4910e6: mov rdi, rbx
4910e9: call 0x490450
4910ee: mov rsi, r13
4910f1: mov rdi, rbx
4910f4: call 0x48ef10
4910f9: mov r12d, eax
4910fc: test eax, eax
4910fe: je 0x4910d0
491100: cmp eax, 5
491103: je 0x4910d0
491105: mov r12d, 3
49110b: add rsp, 0x278
491112: mov eax, r12d
491115: pop rbx
491116: pop r12
491118: pop r13
49111a: pop r14
49111c: pop r15
49111e: pop rbp
49111f: ret 
491120: endbr64 
491124: mov rcx, qword ptr [rdx + 8]
491128: mov eax, 1
49112d: cmp qword ptr [rsi + 8], rcx
491131: ja 0x491135
491133: sbb eax, eax
491135: ret 
491136: nop word ptr cs:[rax + rax]
491140: push r15
491142: mov r15, rdi
491145: push r14
491147: push r13
491149: mov r13d, r8d
49114c: push r12
49114e: mov r12, rdx
491151: push rbp
491152: push rbx
491153: lea ebx, [rcx + rcx + 1]
491157: sub rsp, 0x28
49115b: mov qword ptr [rsp + 8], rsi
491160: cmp ebx, r8d
491163: jl 0x4911d2
491165: jmp 0x491200
49116a: nop word ptr [rax + rax]
491170: lea r10, [r12 + rax + 8]
491175: mov dword ptr [rsp + 0x1c], ecx
491179: mov rsi, r9
49117c: mov rdi, r15
49117f: mov rdx, qword ptr [r10]
491182: mov rax, qword ptr [rsp + 8]
491187: mov qword ptr [rsp + 0x10], r10
49118c: call rax
49118e: mov r10, qword ptr [rsp + 0x10]
491193: mov ecx, dword ptr [rsp + 0x1c]
491197: test eax, eax
491199: js 0x4911f0
49119b: mov r9, qword ptr [r14]
49119e: mov ebp, ebx
4911a0: movsxd rcx, ecx
4911a3: mov rax, qword ptr [rsp + 8]
4911a8: mov rdx, r9
4911ab: mov rdi, r15
4911ae: lea rbx, [r12 + rcx*8]
4911b2: mov rsi, qword ptr [rbx]
4911b5: call rax
4911b7: test eax, eax
4911b9: jns 0x491200
4911bb: mov rdx, qword ptr [r14]
4911be: mov rax, qword ptr [rbx]
4911c1: mov qword ptr [rbx], rdx
4911c4: lea ebx, [rbp + rbp + 1]
4911c8: mov qword ptr [r14], rax
4911cb: cmp r13d, ebx
4911ce: jle 0x491200
4911d0: mov ecx, ebp
4911d2: movsxd rax, ebx
4911d5: lea ebp, [rbx + 1]
4911d8: shl rax, 3
4911dc: lea r14, [r12 + rax]
4911e0: mov r9, qword ptr [r14]
4911e3: cmp ebp, r13d
4911e6: jl 0x491170
4911e8: mov ebp, ebx
4911ea: jmp 0x4911a0
4911ec: nop dword ptr [rax]
4911f0: mov r9, qword ptr [r10]
4911f3: mov r14, r10
4911f6: jmp 0x4911a0
4911f8: nop dword ptr [rax + rax]
491200: add rsp, 0x28
491204: pop rbx
491205: pop rbp
491206: pop r12
491208: pop r13
49120a: pop r14
49120c: pop r15
49120e: ret 
49120f: nop 
491210: push r15
491212: push r14
491214: lea r14, [rdx + 0x10]
491218: push r13
49121a: mov r13, rsi
49121d: push r12
49121f: mov r12, rdi
491222: push rbp
491223: mov rbp, rdx
491226: push rbx
491227: sub rsp, 0x18
49122b: mov rax, qword ptr [rdx + 8]
49122f: mov rbx, rax
491232: mov qword ptr [rsp + 8], rax
491237: mov r15d, eax
49123a: shr rbx, 1
49123d: sub ebx, 1
491240: js 0x491263
491242: nop word ptr [rax + rax]
491248: mov ecx, ebx
49124a: mov r8d, r15d
49124d: mov rdx, r14
491250: mov rsi, r13
491253: mov rdi, r12
491256: sub ebx, 1
491259: call 0x491140
49125e: cmp ebx, -1
491261: jne 0x491248
491263: mov r15d, dword ptr [rsp + 8]
491268: sub r15d, 1
49126c: movsxd rbx, r15d
49126f: test r15d, r15d
491272: jle 0x4912a5
491274: nop dword ptr [rax]
491278: mov rdx, qword ptr [rbp + rbx*8 + 0x10]
49127d: mov rax, qword ptr [rbp + 0x10]
491281: mov r8d, ebx
491284: xor ecx, ecx
491286: mov rsi, r13
491289: mov rdi, r12
49128c: mov qword ptr [rbp + 0x10], rdx
491290: mov rdx, r14
491293: mov qword ptr [rbp + rbx*8 + 0x10], rax
491298: sub rbx, 1
49129c: call 0x491140
4912a1: test ebx, ebx
4912a3: jg 0x491278
4912a5: add rsp, 0x18
4912a9: pop rbx
4912aa: pop rbp
4912ab: pop r12
4912ad: pop r13
4912af: pop r14
4912b1: pop r15
4912b3: ret 
4912b4: nop word ptr cs:[rax + rax]
4912bf: nop 
4912c0: cmp dil, 0xff
4912c4: je 0x491320
4912c6: and edi, 7
4912c9: sub rsp, 8
4912cd: cmp dil, 2
4912d1: je 0x491310
4912d3: jbe 0x4912e8
4912d5: mov eax, 4
4912da: cmp dil, 3
4912de: jne 0x491300
4912e0: add rsp, 8
4912e4: ret 
4912e5: nop dword ptr [rax]
4912e8: test dil, dil
4912eb: jne 0x491323
4912ed: mov eax, 8
4912f2: add rsp, 8
4912f6: ret 
4912f7: nop word ptr [rax + rax]
491300: cmp dil, 4
491304: je 0x4912ed
491306: jmp 0x40175b
49130b: nop dword ptr [rax + rax]
491310: mov eax, 2
491315: jmp 0x4912e0
491317: nop word ptr [rax + rax]
491320: xor eax, eax
491322: ret 
491323: jmp 0x40175b
491328: nop dword ptr [rax + rax]
491330: cmp dil, 0xff
491334: je 0x491380
491336: mov eax, edi
491338: sub rsp, 8
49133c: and eax, 0x70
49133f: cmp al, 0x20
491341: je 0x491378
491343: jbe 0x491368
491345: cmp al, 0x30
491347: jne 0x491358
491349: mov rax, qword ptr [rsi + 0x10]
49134d: add rsp, 8
491351: ret 
491352: nop word ptr [rax + rax]
491358: cmp al, 0x50
49135a: jne 0x491383
49135c: xor eax, eax
49135e: add rsp, 8
491362: ret 
491363: nop dword ptr [rax + rax]
491368: and edi, 0x60
49136b: jne 0x401760
491371: jmp 0x49135c
491373: nop dword ptr [rax + rax]
491378: mov rax, qword ptr [rsi + 8]
49137c: jmp 0x49134d
49137e: nop 
491380: xor eax, eax
491382: ret 
491383: jmp 0x401760
491388: nop dword ptr [rax + rax]
491390: cmp dil, 0xff
491394: je 0x4913e0
491396: mov eax, edi
491398: sub rsp, 8
49139c: and eax, 0x70
49139f: cmp al, 0x20
4913a1: je 0x4913d8
4913a3: jbe 0x4913c8
4913a5: cmp al, 0x30
4913a7: jne 0x4913b8
4913a9: mov rax, qword ptr [rsi + 0x10]
4913ad: add rsp, 8
4913b1: ret 
4913b2: nop word ptr [rax + rax]
4913b8: cmp al, 0x50
4913ba: jne 0x4913e3
4913bc: xor eax, eax
4913be: add rsp, 8
4913c2: ret 
4913c3: nop dword ptr [rax + rax]
4913c8: and edi, 0x60
4913cb: jne 0x401765
4913d1: jmp 0x4913bc
4913d3: nop dword ptr [rax + rax]
4913d8: mov rax, qword ptr [rsi + 8]
4913dc: jmp 0x4913ad
4913de: nop 
4913e0: xor eax, eax
4913e2: ret 
4913e3: jmp 0x401765
4913e8: nop dword ptr [rax + rax]
4913f0: mov r9, rcx
4913f3: cmp dil, 0x50
4913f7: je 0x491450
4913f9: mov eax, edi
4913fb: sub rsp, 8
4913ff: and eax, 0xf
491402: cmp al, 0xc
491404: ja 0x40176a
49140a: lea rcx, [rip + 0x1fba7]
491411: movzx eax, al
491414: movsxd rax, dword ptr [rcx + rax*4]
491418: add rax, rcx
49141b: notrack jmp rax
49141e: nop 
491420: mov r8, qword ptr [rdx]
491423: lea rax, [rdx + 8]
491427: test r8, r8
49142a: je 0x491440
49142c: mov ecx, edi
49142e: and ecx, 0x70
491431: cmp cl, 0x10
491434: cmove rsi, rdx
491438: add r8, rsi
49143b: test dil, dil
49143e: js 0x491468
491440: mov qword ptr [r9], r8
491443: add rsp, 8
491447: ret 
491448: nop dword ptr [rax + rax]
491450: lea rax, [rdx + 7]
491454: and rax, 0xfffffffffffffff8
491458: mov r8, qword ptr [rax]
49145b: lea rax, [rax + 8]
49145f: mov qword ptr [rcx], r8
491462: ret 
491463: nop dword ptr [rax + rax]
491468: mov r8, qword ptr [r8]
49146b: mov qword ptr [r9], r8
49146e: add rsp, 8
491472: ret 
491473: nop dword ptr [rax + rax]
491478: movzx r8d, word ptr [rdx]
49147c: lea rax, [rdx + 2]
491480: jmp 0x491427
491482: nop word ptr [rax + rax]
491488: mov r8d, dword ptr [rdx]
49148b: lea rax, [rdx + 4]
49148f: jmp 0x491427
491491: nop dword ptr [rax]
491498: movsxd r8, dword ptr [rdx]
49149b: lea rax, [rdx + 4]
49149f: jmp 0x491427
4914a1: nop dword ptr [rax]
4914a8: movsx r8, word ptr [rdx]
4914ac: lea rax, [rdx + 2]
4914b0: jmp 0x491427
4914b5: nop dword ptr [rax]
4914b8: mov rax, rdx
4914bb: xor r8d, r8d
4914be: xor ecx, ecx
4914c0: movzx r11d, byte ptr [rax]
4914c4: add rax, 1
4914c8: mov r10, r11
4914cb: and r10d, 0x7f
4914cf: shl r10, cl
4914d2: add ecx, 7
4914d5: or r8, r10
4914d8: test r11b, r11b
4914db: js 0x4914c0
4914dd: jmp 0x491427
4914e2: nop word ptr [rax + rax]
4914e8: mov rax, rdx
4914eb: xor r8d, r8d
4914ee: xor ecx, ecx
4914f0: movzx r11d, byte ptr [rax]
4914f4: add rax, 1
4914f8: mov r10, r11
4914fb: and r10d, 0x7f
4914ff: shl r10, cl
491502: add ecx, 7
491505: or r8, r10
491508: test r11b, r11b
49150b: js 0x4914f0
49150d: cmp ecx, 0x3f
491510: ja 0x491427
491516: and r11d, 0x40
49151a: je 0x491427
491520: mov r10, 0xffffffffffffffff
491527: shl r10, cl
49152a: or r8, r10
49152d: jmp 0x49142c
491532: nop word ptr cs:[rax + rax]
49153d: nop dword ptr [rax]
491540: endbr64 
491544: push r14
491546: push r13
491548: mov r13, rsi
49154b: mov rsi, rdi
49154e: push r12
491550: mov r12, rdi
491553: push rbp
491554: push rbx
491555: mov rbx, rdx
491558: sub rsp, 0x10
49155c: movzx ebp, word ptr [rdi + 0x20]
491560: shr bp, 3
491564: movzx ebp, bpl
491568: mov edi, ebp
49156a: call 0x491330
49156f: mov rcx, rsp
491572: lea rdx, [r13 + 8]
491576: mov edi, ebp
491578: mov rsi, rax
49157b: mov r14, rax
49157e: call 0x4913f0
491583: movzx edi, word ptr [r12 + 0x20]
491589: lea rdx, [rbx + 8]
49158d: mov rsi, r14
491590: lea rcx, [rsp + 8]
491595: shr di, 3
491599: movzx edi, dil
49159d: call 0x4913f0
4915a2: mov rbx, qword ptr [rsp + 8]
4915a7: mov eax, 1
4915ac: cmp qword ptr [rsp], rbx
4915b0: ja 0x4915b4
4915b2: sbb eax, eax
4915b4: add rsp, 0x10
4915b8: pop rbx
4915b9: pop rbp
4915ba: pop r12
4915bc: pop r13
4915be: pop r14
4915c0: ret 
4915c1: nop word ptr cs:[rax + rax]
4915cc: nop dword ptr [rax]
4915d0: push rbp
4915d1: mov rbp, rdi
4915d4: push rbx
4915d5: lea rbx, [rdi + 9]
4915d9: mov rdi, rbx
4915dc: sub rsp, 0x18
4915e0: call 0x401180
4915e5: movzx ecx, byte ptr [rbp + 8]
4915e9: lea rax, [rbx + rax + 1]
4915ee: cmp cl, 3
4915f1: ja 0x4916d0
4915f7: cmp byte ptr [rbp + 9], 0x7a
4915fb: je 0x491610
4915fd: xor r8d, r8d
491600: add rsp, 0x18
491604: mov eax, r8d
491607: pop rbx
491608: pop rbp
491609: ret 
49160a: nop word ptr [rax + rax]
491610: add rax, 1
491614: cmp byte ptr [rax - 1], 0
491618: js 0x491610
49161a: nop word ptr [rax + rax]
491620: mov rdx, rax
491623: add rax, 1
491627: cmp byte ptr [rax - 1], 0
49162b: js 0x491620
49162d: cmp cl, 1
491630: je 0x4916c0
491636: nop word ptr cs:[rax + rax]
491640: add rax, 1
491644: cmp byte ptr [rax - 1], 0
491648: js 0x491640
49164a: lea rbx, [rbp + 0xa]
49164e: nop 
491650: add rax, 1
491654: cmp byte ptr [rax - 1], 0
491658: js 0x491650
49165a: movzx edx, byte ptr [rbp + 0xa]
49165e: lea rbp, [rsp + 8]
491663: cmp dl, 0x52
491666: jne 0x491686
491668: jmp 0x4916ab
49166a: nop word ptr [rax + rax]
491670: cmp dl, 0x4c
491673: jne 0x4915fd
491675: movzx edx, byte ptr [rbx + 1]
491679: add rbx, 1
49167d: add rax, 1
491681: cmp dl, 0x52
491684: je 0x4916ab
491686: cmp dl, 0x50
491689: jne 0x491670
49168b: movzx edi, byte ptr [rax]
49168e: lea rdx, [rax + 1]
491692: mov rcx, rbp
491695: xor esi, esi
491697: add rbx, 1
49169b: and edi, 0x7f
49169e: call 0x4913f0
4916a3: movzx edx, byte ptr [rbx]
4916a6: cmp dl, 0x52
4916a9: jne 0x491686
4916ab: movzx r8d, byte ptr [rax]
4916af: add rsp, 0x18
4916b3: pop rbx
4916b4: pop rbp
4916b5: mov eax, r8d
4916b8: ret 
4916b9: nop dword ptr [rax]
4916c0: lea rax, [rdx + 2]
4916c4: jmp 0x49164a
4916c9: nop dword ptr [rax]
4916d0: cmp byte ptr [rax], 8
4916d3: mov r8d, 0xff
4916d9: jne 0x491600
4916df: cmp byte ptr [rax + 1], 0
4916e3: jne 0x491600
4916e9: add rax, 2
4916ed: jmp 0x4915f7
4916f2: nop word ptr cs:[rax + rax]
4916fd: nop dword ptr [rax]
491700: push r15
491702: push r14
491704: mov r14, rdi
491707: push r13
491709: push r12
49170b: mov r12, rdx
49170e: push rbp
49170f: push rbx
491710: mov rbx, rsi
491713: mov rsi, rdi
491716: sub rsp, 0x28
49171a: movzx ebp, word ptr [rdi + 0x20]
49171e: lea r13, [rsp + 0x10]
491723: shr bp, 3
491727: movzx ebp, bpl
49172b: mov edi, ebp
49172d: call 0x491330
491732: mov edx, dword ptr [rbx]
491734: xor r8d, r8d
491737: mov r15, rax
49173a: test edx, edx
49173c: jne 0x49177f
49173e: jmp 0x491860
491743: nop dword ptr [rax + rax]
491748: mov rax, qword ptr [rbx + 8]
49174c: mov rdx, qword ptr [rbx + 0x10]
491750: mov qword ptr [rsp + 0x10], rax
491755: mov qword ptr [rsp + 0x18], rdx
49175a: test rax, rax
49175d: je 0x49176e
49175f: mov rsi, r12
491762: sub rsi, rax
491765: cmp rsi, rdx
491768: jb 0x491846
49176e: mov eax, dword ptr [rbx]
491770: lea rbx, [rbx + rax + 4]
491775: mov eax, dword ptr [rbx]
491777: test eax, eax
491779: je 0x491860
49177f: movsxd rax, dword ptr [rbx + 4]
491783: test eax, eax
491785: je 0x49176e
491787: test byte ptr [r14 + 0x20], 4
49178c: je 0x4917bd
49178e: lea rdx, [rbx + 4]
491792: sub rdx, rax
491795: cmp rdx, r8
491798: je 0x4917bd
49179a: mov rdi, rdx
49179d: mov qword ptr [rsp], rdx
4917a1: call 0x4915d0
4917a6: mov rsi, r14
4917a9: movzx edi, al
4917ac: mov ebp, eax
4917ae: call 0x491330
4917b3: mov rdx, qword ptr [rsp]
4917b7: mov r15, rax
4917ba: mov r8, rdx
4917bd: test ebp, ebp
4917bf: je 0x491748
4917c1: movzx r9d, bpl
4917c5: lea rdx, [rbx + 8]
4917c9: mov rcx, r13
4917cc: mov rsi, r15
4917cf: mov edi, r9d
4917d2: mov qword ptr [rsp + 8], r8
4917d7: mov dword ptr [rsp], r9d
4917db: call 0x4913f0
4917e0: mov edi, ebp
4917e2: xor esi, esi
4917e4: lea rcx, [rsp + 0x18]
4917e9: mov rdx, rax
4917ec: and edi, 0xf
4917ef: call 0x4913f0
4917f4: mov r9d, dword ptr [rsp]
4917f8: mov edi, r9d
4917fb: call 0x4912c0
491800: mov r8, qword ptr [rsp + 8]
491805: mov rdx, 0xffffffffffffffff
49180c: cmp eax, 7
49180f: ja 0x491824
491811: lea ecx, [rax*8]
491818: mov edx, 1
49181d: shl rdx, cl
491820: sub rdx, 1
491824: mov rax, qword ptr [rsp + 0x10]
491829: test rax, rdx
49182c: je 0x49176e
491832: mov rsi, r12
491835: mov rdx, qword ptr [rsp + 0x18]
49183a: sub rsi, rax
49183d: cmp rsi, rdx
491840: jae 0x49176e
491846: add rsp, 0x28
49184a: mov rax, rbx
49184d: pop rbx
49184e: pop rbp
49184f: pop r12
491851: pop r13
491853: pop r14
491855: pop r15
491857: ret 
491858: nop dword ptr [rax + rax]
491860: add rsp, 0x28
491864: xor eax, eax
491866: pop rbx
491867: pop rbp
491868: pop r12
49186a: pop r13
49186c: pop r14
49186e: pop r15
491870: ret 
491871: nop word ptr cs:[rax + rax]
49187c: nop dword ptr [rax]
491880: endbr64 
491884: push r15
491886: push r14
491888: push r13
49188a: push r12
49188c: push rbp
49188d: push rbx
49188e: mov rbx, rdx
491891: sub rsp, 0x58
491895: mov edx, dword ptr [rdx + 0x28]
491898: mov rax, qword ptr [rdi + 0x10]
49189c: mov r9, qword ptr [rdi]
49189f: test edx, edx
4918a1: je 0x4918ad
4918a3: cmp rsi, 0x2f
4918a7: ja 0x4919e8
4918ad: cmp rsi, 0x19
4918b1: jbe 0x4919d0
4918b7: mov qword ptr [rsp + 8], 0
4918c0: xor r12d, r12d
4918c3: movzx edx, word ptr [rdi + 0x18]
4918c7: test dx, dx
4918ca: je 0x491a80
4918d0: lea rcx, [rdx*8]
4918d8: xor r13d, r13d
4918db: xor r14d, r14d
4918de: xor edi, edi
4918e0: sub rcx, rdx
4918e3: xor r11d, r11d
4918e6: xor ebp, ebp
4918e8: mov r15d, 1
4918ee: lea rcx, [rax + rcx*8]
4918f2: jmp 0x491914
4918f4: nop dword ptr [rax]
4918f8: cmp edx, 0x6474e550
4918fe: je 0x491a70
491904: cmp edx, 2
491907: cmove rdi, rax
49190b: add rax, 0x38
49190f: cmp rcx, rax
491912: je 0x491950
491914: mov edx, dword ptr [rax]
491916: cmp edx, 1
491919: jne 0x4918f8
49191b: mov r8, qword ptr [rax + 0x10]
49191f: mov rdx, qword ptr [rbx]
491922: add r8, r9
491925: cmp rdx, r8
491928: jb 0x49190b
49192a: mov r10, qword ptr [rax + 0x28]
49192e: add r10, r8
491931: cmp rdx, r10
491934: cmovb r13, r10
491938: cmovb r14, r8
49193c: cmovb r11, r15
491940: add rax, 0x38
491944: cmp rcx, rax
491947: jne 0x491914
491949: nop dword ptr [rax]
491950: test r11, r11
491953: je 0x491a80
491959: cmp rsi, 0x2f
49195d: jbe 0x4919a0
49195f: mov rax, qword ptr [rip + 0x317ca]
491966: test r12, r12
491969: je 0x49198d
49196b: mov rsi, qword ptr [rsp + 8]
491970: test rsi, rsi
491973: je 0x49198d
491975: mov rdx, qword ptr [r12 + 0x28]
49197a: mov qword ptr [rip + 0x317af], r12
491981: mov qword ptr [rsi + 0x28], rdx
491985: mov qword ptr [r12 + 0x28], rax
49198a: mov rax, r12
49198d: mov qword ptr [rax + 0x10], r9
491991: mov qword ptr [rax + 0x18], rbp
491995: mov qword ptr [rax + 0x20], rdi
491999: mov qword ptr [rax], r14
49199c: mov qword ptr [rax + 8], r13
4919a0: test rbp, rbp
4919a3: je 0x491a80
4919a9: add r9, qword ptr [rbp + 0x10]
4919ad: cmp byte ptr [r9], 1
4919b1: mov rbp, r9
4919b4: je 0x491b10
4919ba: add rsp, 0x58
4919be: mov eax, 1
4919c3: pop rbx
4919c4: pop rbp
4919c5: pop r12
4919c7: pop r13
4919c9: pop r14
4919cb: pop r15
4919cd: ret 
4919ce: nop 
4919d0: add rsp, 0x58
4919d4: mov eax, 0xffffffff
4919d9: pop rbx
4919da: pop rbp
4919db: pop r12
4919dd: pop r13
4919df: pop r14
4919e1: pop r15
4919e3: ret 
4919e4: nop dword ptr [rax]
4919e8: mov rdx, qword ptr [rdi + 0x20]
4919ec: cmp rdx, qword ptr [rip + 0x30115]
4919f3: mov rcx, qword ptr [rdi + 0x28]
4919f7: je 0x491a98
4919fd: mov qword ptr [rip + 0x30104], rdx
491a04: lea rdx, [rip + 0x31765]
491a0b: mov qword ptr [rip + 0x31716], rcx
491a12: lea rcx, [rdx + 0x180]
491a19: nop dword ptr [rax]
491a20: mov qword ptr [rdx - 0x30], 0
491a28: mov qword ptr [rdx - 0x28], 0
491a30: mov qword ptr [rdx - 8], rdx
491a34: add rdx, 0x30
491a38: cmp rcx, rdx
491a3b: jne 0x491a20
491a3d: lea rcx, [rip + 0x316fc]
491a44: xor r12d, r12d
491a47: mov qword ptr [rip + 0x31866], 0
491a52: mov qword ptr [rip + 0x316d7], rcx
491a59: mov dword ptr [rbx + 0x28], 0
491a60: mov qword ptr [rsp + 8], 0
491a69: jmp 0x4918c3
491a6e: nop 
491a70: mov rbp, rax
491a73: jmp 0x49190b
491a78: nop dword ptr [rax + rax]
491a80: add rsp, 0x58
491a84: xor eax, eax
491a86: pop rbx
491a87: pop rbp
491a88: pop r12
491a8a: pop r13
491a8c: pop r14
491a8e: pop r15
491a90: ret 
491a91: nop dword ptr [rax]
491a98: cmp qword ptr [rip + 0x31689], rcx
491a9f: jne 0x4919fd
491aa5: mov r10, qword ptr [rip + 0x31684]
491aac: test r10, r10
491aaf: je 0x4918b7
491ab5: mov r12, r10
491ab8: mov r8, qword ptr [rbx]
491abb: xor r11d, r11d
491abe: mov rdx, qword ptr [r12]
491ac2: mov rcx, qword ptr [r12 + 8]
491ac7: cmp r8, rdx
491aca: jb 0x491ad9
491acc: nop dword ptr [rax]
491ad0: cmp r8, rcx
491ad3: jb 0x491cde
491ad9: or rdx, rcx
491adc: je 0x491bd8
491ae2: mov rdx, qword ptr [r12 + 0x28]
491ae7: test rdx, rdx
491aea: je 0x491bd8
491af0: mov r11, r12
491af3: mov r12, rdx
491af6: mov rdx, qword ptr [r12]
491afa: mov rcx, qword ptr [r12 + 8]
491aff: cmp r8, rdx
491b02: jb 0x491ad9
491b04: jmp 0x491ad0
491b06: nop word ptr cs:[rax + rax]
491b10: movzx r12d, byte ptr [r9 + 1]
491b15: mov rsi, rbx
491b18: mov edi, r12d
491b1b: call 0x491390
491b20: mov edi, r12d
491b23: lea rcx, [rsp + 0x10]
491b28: lea rdx, [rbp + 4]
491b2c: mov rsi, rax
491b2f: call 0x4913f0
491b34: mov r12, rax
491b37: movzx eax, byte ptr [rbp + 2]
491b3b: cmp al, 0xff
491b3d: je 0x491b49
491b3f: cmp byte ptr [rbp + 3], 0x3b
491b43: je 0x491be2
491b49: mov rdx, qword ptr [rbx]
491b4c: mov rax, qword ptr [rbx + 8]
491b50: mov rsi, qword ptr [rsp + 0x10]
491b55: lea rdi, [rsp + 0x20]
491b5a: mov qword ptr [rsp + 0x20], 0
491b63: mov qword ptr [rsp + 0x40], 4
491b6c: mov qword ptr [rsp + 0x28], rax
491b71: mov rax, qword ptr [rbx + 0x10]
491b75: mov qword ptr [rsp + 0x38], rsi
491b7a: mov qword ptr [rsp + 0x30], rax
491b7f: call 0x491700
491b84: mov qword ptr [rbx + 0x20], rax
491b88: test rax, rax
491b8b: je 0x4919ba
491b91: lea rdi, [rax + 4]
491b95: movsxd rax, dword ptr [rax + 4]
491b99: sub rdi, rax
491b9c: call 0x4915d0
491ba1: mov rsi, rbx
491ba4: movzx ebp, al
491ba7: mov edi, ebp
491ba9: call 0x491390
491bae: lea rcx, [rsp + 0x18]
491bb3: mov edi, ebp
491bb5: mov rsi, rax
491bb8: mov rax, qword ptr [rbx + 0x20]
491bbc: lea rdx, [rax + 8]
491bc0: call 0x4913f0
491bc5: mov rax, qword ptr [rsp + 0x18]
491bca: mov qword ptr [rbx + 0x18], rax
491bce: jmp 0x4919ba
491bd3: nop dword ptr [rax + rax]
491bd8: mov qword ptr [rsp + 8], r11
491bdd: jmp 0x4918c3
491be2: movzx r13d, al
491be6: mov rsi, rbx
491be9: mov edi, r13d
491bec: call 0x491390
491bf1: lea rcx, [rsp + 0x18]
491bf6: mov rdx, r12
491bf9: mov edi, r13d
491bfc: mov rsi, rax
491bff: call 0x4913f0
491c04: mov rsi, qword ptr [rsp + 0x18]
491c09: mov rcx, rax
491c0c: test rsi, rsi
491c0f: je 0x4919ba
491c15: mov r8, rax
491c18: mov rdx, qword ptr [rbx]
491c1b: and r8d, 3
491c1f: jne 0x491b4c
491c25: movsxd rax, dword ptr [rax]
491c28: add rax, rbp
491c2b: cmp rax, rdx
491c2e: ja 0x4919ba
491c34: sub rsi, 1
491c38: lea r12, [rcx + rsi*8]
491c3c: movsxd rax, dword ptr [r12]
491c40: add rax, rbp
491c43: cmp rax, rdx
491c46: jbe 0x491c79
491c48: cmp r8, rsi
491c4b: jae 0x491d0b
491c51: lea rax, [r8 + rsi]
491c55: shr rax, 1
491c58: lea r12, [rcx + rax*8]
491c5c: movsxd rdi, dword ptr [r12]
491c60: add rdi, rbp
491c63: cmp rdi, rdx
491c66: ja 0x491cd6
491c68: lea r8, [rax + 1]
491c6c: movsxd rax, dword ptr [rcx + rax*8 + 8]
491c71: add rax, rbp
491c74: cmp rax, rdx
491c77: jbe 0x491c48
491c79: movsxd r14, dword ptr [r12 + 4]
491c7e: add r14, rbp
491c81: movsxd rax, dword ptr [r14 + 4]
491c85: lea rdi, [r14 + 4]
491c89: sub rdi, rax
491c8c: call 0x4915d0
491c91: movzx edi, al
491c94: mov r13d, eax
491c97: call 0x4912c0
491c9c: mov edi, r13d
491c9f: lea rcx, [rsp + 0x20]
491ca4: xor esi, esi
491ca6: mov eax, eax
491ca8: and edi, 0xf
491cab: lea rdx, [r14 + rax + 8]
491cb0: call 0x4913f0
491cb5: movsxd r9, dword ptr [r12]
491cb9: mov rax, qword ptr [rsp + 0x20]
491cbe: add r9, rbp
491cc1: add rax, r9
491cc4: cmp qword ptr [rbx], rax
491cc7: jae 0x491ccd
491cc9: mov qword ptr [rbx + 0x20], r14
491ccd: mov qword ptr [rbx + 0x18], r9
491cd1: jmp 0x4919ba
491cd6: mov rsi, rax
491cd9: jmp 0x491c48
491cde: mov r9, qword ptr [r12 + 0x10]
491ce3: mov rbp, qword ptr [r12 + 0x18]
491ce8: cmp r12, r10
491ceb: je 0x4919a0
491cf1: mov rax, qword ptr [r12 + 0x28]
491cf6: mov qword ptr [rip + 0x31433], r12
491cfd: mov qword ptr [r11 + 0x28], rax
491d01: mov qword ptr [r12 + 0x28], r10
491d06: jmp 0x4919a0
491d0b: jmp 0x40176f
491d10: endbr64 
491d14: push r13
491d16: push r12
491d18: mov r12, rdi
491d1b: lea rdi, [rsi + 4]
491d1f: push rbp
491d20: mov rbp, rsi
491d23: push rbx
491d24: mov rbx, rdx
491d27: sub rsp, 0x18
491d2b: movsxd rax, dword ptr [rsi + 4]
491d2f: sub rdi, rax
491d32: call 0x4915d0
491d37: mov rsi, r12
491d3a: movzx r13d, al
491d3e: mov edi, r13d
491d41: call 0x491330
491d46: lea rdx, [rbp + 8]
491d4a: mov rcx, rsp
491d4d: mov edi, r13d
491d50: mov rsi, rax
491d53: call 0x4913f0
491d58: movsxd rax, dword ptr [rbx + 4]
491d5c: lea rdi, [rbx + 4]
491d60: sub rdi, rax
491d63: call 0x4915d0
491d68: mov rsi, r12
491d6b: movzx ebp, al
491d6e: mov edi, ebp
491d70: call 0x491330
491d75: lea rdx, [rbx + 8]
491d79: lea rcx, [rsp + 8]
491d7e: mov edi, ebp
491d80: mov rsi, rax
491d83: call 0x4913f0
491d88: mov rbx, qword ptr [rsp + 8]
491d8d: mov eax, 1
491d92: cmp qword ptr [rsp], rbx
491d96: ja 0x491d9a
491d98: sbb eax, eax
491d9a: add rsp, 0x18
491d9e: pop rbx
491d9f: pop rbp
491da0: pop r12
491da2: pop r13
491da4: ret 
491da5: nop word ptr cs:[rax + rax]
491db0: push r15
491db2: push r14
491db4: push r13
491db6: push r12
491db8: push rbp
491db9: push rbx
491dba: sub rsp, 0x28
491dbe: mov edx, dword ptr [rsi]
491dc0: test edx, edx
491dc2: je 0x491ed2
491dc8: lea rax, [rsp + 0x18]
491dcd: mov r13, rdi
491dd0: mov rbx, rsi
491dd3: xor r14d, r14d
491dd6: mov qword ptr [rsp + 8], 0
491ddf: xor r12d, r12d
491de2: xor ecx, ecx
491de4: mov qword ptr [rsp], rax
491de8: jmp 0x491e68
491dea: nop word ptr [rax + rax]
491df0: shr ax, 3
491df4: movzx eax, al
491df7: cmp eax, r12d
491dfa: je 0x491e01
491dfc: or byte ptr [r13 + 0x20], 4
491e01: mov rcx, qword ptr [rsp]
491e05: lea rdx, [rbx + 8]
491e09: mov rsi, r14
491e0c: mov edi, r15d
491e0f: call 0x4913f0
491e14: mov edi, r15d
491e17: call 0x4912c0
491e1c: mov rdx, 0xffffffffffffffff
491e23: cmp eax, 7
491e26: ja 0x491e3b
491e28: lea ecx, [rax*8]
491e2f: mov edx, 1
491e34: shl rdx, cl
491e37: sub rdx, 1
491e3b: mov rax, qword ptr [rsp + 0x18]
491e40: mov rcx, rbp
491e43: test rax, rdx
491e46: je 0x491e5b
491e48: add qword ptr [rsp + 8], 1
491e4e: cmp qword ptr [r13], rax
491e52: jbe 0x491e58
491e54: mov qword ptr [r13], rax
491e58: mov rcx, rbp
491e5b: mov eax, dword ptr [rbx]
491e5d: lea rbx, [rbx + rax + 4]
491e62: mov eax, dword ptr [rbx]
491e64: test eax, eax
491e66: je 0x491edb
491e68: movsxd rax, dword ptr [rbx + 4]
491e6c: test eax, eax
491e6e: je 0x491e5b
491e70: lea rbp, [rbx + 4]
491e74: movzx r15d, r12b
491e78: sub rbp, rax
491e7b: cmp rbp, rcx
491e7e: je 0x491e01
491e80: mov rdi, rbp
491e83: call 0x4915d0
491e88: mov r12d, eax
491e8b: cmp eax, 0xff
491e90: je 0x491ef0
491e92: movzx r15d, al
491e96: mov rsi, r13
491e99: mov edi, r15d
491e9c: call 0x491330
491ea1: mov r14, rax
491ea4: movzx eax, word ptr [r13 + 0x20]
491ea9: mov edx, eax
491eab: and dx, 0x7f8
491eb0: cmp dx, 0x7f8
491eb5: jne 0x491df0
491ebb: movzx edx, r12b
491ebf: and ax, 0xf807
491ec3: shl edx, 3
491ec6: or eax, edx
491ec8: mov word ptr [r13 + 0x20], ax
491ecd: jmp 0x491e01
491ed2: mov qword ptr [rsp + 8], 0
491edb: mov rax, qword ptr [rsp + 8]
491ee0: add rsp, 0x28
491ee4: pop rbx
491ee5: pop rbp
491ee6: pop r12
491ee8: pop r13
491eea: pop r14
491eec: pop r15
491eee: ret 
491eef: nop 
491ef0: mov qword ptr [rsp + 8], 0xffffffffffffffff
491ef9: jmp 0x491edb
491efb: nop dword ptr [rax + rax]
491f00: push r15
491f02: push r14
491f04: mov r14, rdi
491f07: push r13
491f09: push r12
491f0b: mov r12, rsi
491f0e: mov rsi, rdi
491f11: push rbp
491f12: push rbx
491f13: mov rbx, rdx
491f16: sub rsp, 0x28
491f1a: movzx ebp, word ptr [rdi + 0x20]
491f1e: shr bp, 3
491f22: movzx ebp, bpl
491f26: mov edi, ebp
491f28: call 0x491330
491f2d: mov edx, dword ptr [rbx]
491f2f: test edx, edx
491f31: je 0x49201c
491f37: mov rsi, rax
491f3a: xor r15d, r15d
491f3d: lea r13, [rsp + 0x18]
491f42: jmp 0x491f7a
491f44: nop dword ptr [rax]
491f48: cmp qword ptr [rbx + 8], 0
491f4d: je 0x491f69
491f4f: mov rax, qword ptr [r12]
491f53: test rax, rax
491f56: je 0x491f69
491f58: mov rdx, qword ptr [rax + 8]
491f5c: lea rcx, [rdx + 1]
491f60: mov qword ptr [rax + 8], rcx
491f64: mov qword ptr [rax + rdx*8 + 0x10], rbx
491f69: mov eax, dword ptr [rbx]
491f6b: lea rbx, [rbx + rax + 4]
491f70: mov eax, dword ptr [rbx]
491f72: test eax, eax
491f74: je 0x49201c
491f7a: movsxd rax, dword ptr [rbx + 4]
491f7e: test eax, eax
491f80: je 0x491f69
491f82: test byte ptr [r14 + 0x20], 4
491f87: je 0x491fb8
491f89: lea rdx, [rbx + 4]
491f8d: sub rdx, rax
491f90: cmp rdx, r15
491f93: je 0x491fb8
491f95: mov rdi, rdx
491f98: mov qword ptr [rsp], rdx
491f9c: call 0x4915d0
491fa1: mov rsi, r14
491fa4: movzx edi, al
491fa7: mov ebp, eax
491fa9: call 0x491330
491fae: mov rdx, qword ptr [rsp]
491fb2: mov rsi, rax
491fb5: mov r15, rdx
491fb8: test ebp, ebp
491fba: je 0x491f48
491fbc: movzx edi, bpl
491fc0: lea rdx, [rbx + 8]
491fc4: mov rcx, r13
491fc7: mov qword ptr [rsp + 8], rsi
491fcc: mov dword ptr [rsp], edi
491fcf: call 0x4913f0
491fd4: mov edi, dword ptr [rsp]
491fd7: call 0x4912c0
491fdc: mov rsi, qword ptr [rsp + 8]
491fe1: mov rdx, 0xffffffffffffffff
491fe8: cmp eax, 7
491feb: ja 0x492000
491fed: lea ecx, [rax*8]
491ff4: mov edx, 1
491ff9: shl rdx, cl
491ffc: sub rdx, 1
492000: test qword ptr [rsp + 0x18], rdx
492005: jne 0x491f4f
49200b: mov eax, dword ptr [rbx]
49200d: lea rbx, [rbx + rax + 4]
492012: mov eax, dword ptr [rbx]
492014: test eax, eax
492016: jne 0x491f7a
49201c: add rsp, 0x28
492020: pop rbx
492021: pop rbp
492022: pop r12
492024: pop r13
492026: pop r14
492028: pop r15
49202a: ret 
49202b: nop dword ptr [rax + rax]
492030: push r15
492032: push r14
492034: push r13
492036: mov r13, rdi
492039: push r12
49203b: push rbp
49203c: push rbx
49203d: sub rsp, 0x58
492041: movzx edx, byte ptr [rdi + 0x20]
492045: mov qword ptr [rsp], rsi
492049: test dl, 1
49204c: je 0x4920d0
492052: and edx, 4
492055: mov r9, qword ptr [r13 + 0x18]
492059: jne 0x492148
49205f: movzx ebx, word ptr [r13 + 0x20]
492064: test bx, 0x7f8
492069: jne 0x4922d0
49206f: mov rcx, qword ptr [r9 + 8]
492073: mov rdi, qword ptr [rsp]
492077: xor esi, esi
492079: nop dword ptr [rax]
492080: cmp rcx, rsi
492083: jbe 0x4920b0
492085: lea rax, [rcx + rsi]
492089: shr rax, 1
49208c: mov r12, qword ptr [r9 + rax*8 + 0x10]
492091: mov rdx, qword ptr [r12 + 8]
492096: cmp rdi, rdx
492099: jb 0x4920c8
49209b: add rdx, qword ptr [r12 + 0x10]
4920a0: cmp rdi, rdx
4920a3: jb 0x4920b3
4920a5: lea rsi, [rax + 1]
4920a9: cmp rcx, rsi
4920ac: ja 0x492085
4920ae: nop 
4920b0: xor r12d, r12d
4920b3: add rsp, 0x58
4920b7: mov rax, r12
4920ba: pop rbx
4920bb: pop rbp
4920bc: pop r12
4920be: pop r13
4920c0: pop r14
4920c2: pop r15
4920c4: ret 
4920c5: nop dword ptr [rax]
4920c8: mov rcx, rax
4920cb: jmp 0x492080
4920cd: nop dword ptr [rax]
4920d0: mov r12d, dword ptr [rdi + 0x20]
4920d4: shr r12d, 0xb
4920d8: mov ebx, r12d
4920db: mov qword ptr [rsp + 0x10], rbx
4920e0: test rbx, rbx
4920e3: jne 0x4923a0
4920e9: and edx, 2
4920ec: mov rbp, qword ptr [rdi + 0x18]
4920f0: je 0x492220
4920f6: mov rsi, qword ptr [rbp]
4920fa: test rsi, rsi
4920fd: jne 0x49211c
4920ff: jmp 0x49225a
492104: nop dword ptr [rax]
492108: mov rsi, qword ptr [rbp + 8]
49210c: add rbp, 8
492110: add rbx, rax
492113: test rsi, rsi
492116: je 0x4926d0
49211c: mov rdi, r13
49211f: call 0x491db0
492124: cmp rax, -1
492128: jne 0x492108
49212a: lea rax, [rip + 0x1eebf]
492131: mov qword ptr [r13 + 0x20], 0x7f8
492139: mov qword ptr [r13 + 0x18], rax
49213d: jmp 0x49225a
492142: nop word ptr [rax + rax]
492148: mov r15, qword ptr [r9 + 8]
49214c: test r15, r15
49214f: je 0x4920b0
492155: xor r10d, r10d
492158: lea rbp, [rsp + 0x40]
49215d: lea rax, [rsp + 0x38]
492162: mov r14, r15
492165: mov qword ptr [rsp + 0x10], rax
49216a: mov r12, r10
49216d: mov r15, rbp
492170: mov qword ptr [rsp + 0x20], r9
492175: jmp 0x49219b
492177: nop word ptr [rax + rax]
492180: add rax, qword ptr [rsp + 0x40]
492185: cmp rax, rcx
492188: ja 0x49273b
49218e: lea r12, [r8 + 1]
492192: cmp r12, r14
492195: jae 0x4920b0
49219b: mov rax, qword ptr [rsp + 0x20]
4921a0: lea r8, [r12 + r14]
4921a4: shr r8, 1
4921a7: mov rbp, qword ptr [rax + r8*8 + 0x10]
4921ac: mov qword ptr [rsp + 0x18], r8
4921b1: movsxd rax, dword ptr [rbp + 4]
4921b5: lea rdi, [rbp + 4]
4921b9: sub rdi, rax
4921bc: call 0x4915d0
4921c1: mov rsi, r13
4921c4: movzx edi, al
4921c7: mov ebx, eax
4921c9: mov dword ptr [rsp + 8], edi
4921cd: and ebx, 0xf
4921d0: call 0x491330
4921d5: mov rcx, qword ptr [rsp + 0x10]
4921da: mov edi, dword ptr [rsp + 8]
4921de: lea rdx, [rbp + 8]
4921e2: mov rsi, rax
4921e5: call 0x4913f0
4921ea: mov rcx, r15
4921ed: xor esi, esi
4921ef: mov edi, ebx
4921f1: mov rdx, rax
4921f4: call 0x4913f0
4921f9: mov rax, qword ptr [rsp + 0x38]
4921fe: mov rcx, qword ptr [rsp]
492202: mov r8, qword ptr [rsp + 0x18]
492207: cmp rax, rcx
49220a: jbe 0x492180
492210: mov r14, r8
492213: jmp 0x492192
492218: nop dword ptr [rax + rax]
492220: mov rsi, rbp
492223: call 0x491db0
492228: mov qword ptr [rsp + 0x10], rax
49222d: cmp rax, -1
492231: je 0x49212a
492237: test qword ptr [rsp + 0x10], -0x200000
492240: je 0x492720
492246: and dword ptr [r13 + 0x20], 0x7ff
49224e: cmp qword ptr [rsp + 0x10], 0
492254: jne 0x4923a0
49225a: mov rax, qword ptr [rsp]
49225e: cmp qword ptr [r13], rax
492262: ja 0x4920b0
492268: movzx edx, byte ptr [r13 + 0x20]
49226d: mov rbp, qword ptr [r13 + 0x18]
492271: test dl, 1
492274: jne 0x492052
49227a: and edx, 2
49227d: je 0x4926b8
492283: mov rsi, qword ptr [rbp]
492287: test rsi, rsi
49228a: je 0x4920b0
492290: mov rbx, qword ptr [rsp]
492294: jmp 0x4922b1
492296: nop word ptr cs:[rax + rax]
4922a0: mov rsi, qword ptr [rbp + 8]
4922a4: add rbp, 8
4922a8: test rsi, rsi
4922ab: je 0x4920b0
4922b1: mov rdx, rbx
4922b4: mov rdi, r13
4922b7: call 0x491700
4922bc: test rax, rax
4922bf: je 0x4922a0
4922c1: mov r12, rax
4922c4: jmp 0x4920b3
4922c9: nop dword ptr [rax]
4922d0: shr bx, 3
4922d4: mov rsi, r13
4922d7: mov qword ptr [rsp + 8], r9
4922dc: movzx r15d, bl
4922e0: mov edi, r15d
4922e3: call 0x491330
4922e8: mov r9, qword ptr [rsp + 8]
4922ed: mov qword ptr [rsp + 0x18], rax
4922f2: mov r14, qword ptr [r9 + 8]
4922f6: test r14, r14
4922f9: je 0x4920b0
4922ff: lea rbp, [rsp + 0x40]
492304: lea rax, [rsp + 0x38]
492309: and ebx, 0xf
49230c: xor r13d, r13d
49230f: mov qword ptr [rsp + 0x10], rax
492314: mov rax, rbp
492317: mov r12, r13
49231a: mov ebp, ebx
49231c: mov qword ptr [rsp + 0x20], r9
492321: mov rbx, r14
492324: mov r14, rax
492327: jmp 0x49234b
492329: nop dword ptr [rax]
492330: add rax, qword ptr [rsp + 0x40]
492335: cmp rax, rcx
492338: ja 0x492710
49233e: lea r12, [r8 + 1]
492342: cmp r12, rbx
492345: jae 0x4920b0
49234b: mov rax, qword ptr [rsp + 0x20]
492350: lea r8, [rbx + r12]
492354: mov rcx, qword ptr [rsp + 0x10]
492359: mov edi, r15d
49235c: shr r8, 1
49235f: mov rsi, qword ptr [rsp + 0x18]
492364: mov r13, qword ptr [rax + r8*8 + 0x10]
492369: mov qword ptr [rsp + 8], r8
49236e: lea rdx, [r13 + 8]
492372: call 0x4913f0
492377: mov rcx, r14
49237a: xor esi, esi
49237c: mov edi, ebp
49237e: mov rdx, rax
492381: call 0x4913f0
492386: mov rax, qword ptr [rsp + 0x38]
49238b: mov rcx, qword ptr [rsp]
49238f: mov r8, qword ptr [rsp + 8]
492394: cmp rax, rcx
492397: jbe 0x492330
492399: mov rbx, r8
49239c: jmp 0x492342
49239e: nop 
4923a0: mov rax, qword ptr [rsp + 0x10]
4923a5: lea rbp, [rax*8 + 0x10]
4923ad: mov rdi, rbp
4923b0: call 0x426410
4923b5: mov qword ptr [rsp + 0x40], rax
4923ba: test rax, rax
4923bd: je 0x49225a
4923c3: mov qword ptr [rax + 8], 0
4923cb: mov rdi, rbp
4923ce: call 0x426410
4923d3: mov qword ptr [rsp + 0x48], rax
4923d8: test rax, rax
4923db: je 0x4923e5
4923dd: mov qword ptr [rax + 8], 0
4923e5: mov r12, qword ptr [r13 + 0x18]
4923e9: test byte ptr [r13 + 0x20], 2
4923ee: je 0x4926e0
4923f4: mov rdx, qword ptr [r12]
4923f8: test rdx, rdx
4923fb: je 0x401774
492401: lea rbp, [rsp + 0x40]
492406: nop word ptr cs:[rax + rax]
492410: mov rsi, rbp
492413: mov rdi, r13
492416: add r12, 8
49241a: call 0x491f00
49241f: mov rdx, qword ptr [r12]
492423: test rdx, rdx
492426: jne 0x492410
492428: mov r15, qword ptr [rsp + 0x40]
49242d: mov qword ptr [rsp + 0x20], r15
492432: test r15, r15
492435: je 0x492446
492437: mov rax, qword ptr [rsp + 0x10]
49243c: cmp qword ptr [r15 + 8], rax
492440: jne 0x401774
492446: lea rbp, [rip - 0x73d]
49244d: test byte ptr [r13 + 0x20], 4
492452: jne 0x49246d
492454: test word ptr [r13 + 0x20], 0x7f8
49245b: lea rbp, [rip - 0x1342]
492462: lea rax, [rip - 0xf29]
492469: cmovne rbp, rax
49246d: mov rbx, qword ptr [rsp + 0x48]
492472: test rbx, rbx
492475: je 0x492700
49247b: mov rax, qword ptr [r15 + 8]
49247f: mov qword ptr [rsp + 0x28], rax
492484: test rax, rax
492487: je 0x492765
49248d: lea rax, [rax*8 + 8]
492495: mov r14d, 0x10
49249b: lea r12, [rip + 0x30c7e]
4924a2: mov qword ptr [rsp + 0x18], rax
4924a7: lea rax, [r15 + 0x10]
4924ab: mov qword ptr [rsp + 8], rax
4924b0: mov rax, r15
4924b3: mov r15, r14
4924b6: mov r14, rax
4924b9: nop dword ptr [rax]
4924c0: mov qword ptr [rbx + r15], r12
4924c4: lea r12, [r14 + r15]
4924c8: cmp qword ptr [rsp + 0x18], r15
4924cd: je 0x492550
4924d3: lea rax, [rip + 0x30c46]
4924da: cmp r12, rax
4924dd: je 0x492541
4924df: mov rax, r14
4924e2: mov r14, r13
4924e5: mov r13, rax
4924e8: jmp 0x492511
4924ea: nop word ptr [rax + rax]
4924f0: sub r12, qword ptr [rsp + 8]
4924f5: lea rax, [rbx + r12]
4924f9: mov r12, qword ptr [rax + 0x10]
4924fd: mov qword ptr [rax + 0x10], 0
492505: lea rax, [rip + 0x30c14]
49250c: cmp r12, rax
49250f: je 0x492538
492511: mov rsi, qword ptr [r13 + r15 + 8]
492516: mov rdx, qword ptr [r12]
49251a: mov rdi, r14
49251d: call rbp
49251f: test eax, eax
492521: js 0x4924f0
492523: mov rax, r13
492526: mov r13, r14
492529: mov r14, rax
49252c: add r15, 8
492530: jmp 0x4924c0
492532: nop word ptr [rax + rax]
492538: mov rax, r13
49253b: mov r13, r14
49253e: mov r14, rax
492541: lea r12, [rip + 0x30bd8]
492548: jmp 0x49252c
49254a: nop word ptr [rax + rax]
492550: mov rdi, qword ptr [rsp + 0x28]
492555: mov r15, r14
492558: xor esi, esi
49255a: xor edx, edx
49255c: xor eax, eax
49255e: jmp 0x492572
492560: mov qword ptr [r15 + rdx*8 + 0x10], rcx
492565: add rdx, 1
492569: add rax, 1
49256d: cmp rdi, rax
492570: je 0x492590
492572: cmp qword ptr [rbx + rax*8 + 0x10], 0
492578: mov rcx, qword ptr [r15 + rax*8 + 0x10]
49257d: jne 0x492560
49257f: mov qword ptr [rbx + rsi*8 + 0x10], rcx
492584: add rsi, 1
492588: jmp 0x492569
49258a: nop word ptr [rax + rax]
492590: mov r9, qword ptr [rsp + 0x48]
492595: mov r15, qword ptr [rsp + 0x40]
49259a: mov rax, qword ptr [rsp + 0x20]
49259f: mov qword ptr [rax + 8], rdx
4925a3: mov qword ptr [rbx + 8], rsi
4925a7: mov rax, qword ptr [r9 + 8]
4925ab: add rax, qword ptr [r15 + 8]
4925af: cmp rax, qword ptr [rsp + 0x10]
4925b4: jne 0x401774
4925ba: mov rdx, r9
4925bd: mov rsi, rbp
4925c0: mov rdi, r13
4925c3: call 0x491210
4925c8: mov rax, qword ptr [rsp + 0x48]
4925cd: mov qword ptr [rsp + 0x18], rax
4925d2: mov rax, qword ptr [rax + 8]
4925d6: test rax, rax
4925d9: je 0x492690
4925df: mov r12, qword ptr [rsp + 0x40]
4925e4: mov qword ptr [rsp + 8], rbp
4925e9: mov rbx, qword ptr [r12 + 8]
4925ee: nop 
4925f0: lea rcx, [rax - 1]
4925f4: mov qword ptr [rsp + 0x10], rcx
4925f9: mov rcx, qword ptr [rsp + 0x18]
4925fe: lea rdx, [rcx + rax*8]
492602: mov r15, qword ptr [rdx + 8]
492606: test rbx, rbx
492609: je 0x492743
49260f: lea rbp, [rbx + rax - 1]
492614: mov r14, rbx
492617: jmp 0x492633
492619: nop dword ptr [rax]
492620: mov rax, qword ptr [r12 + r14*8 + 0x10]
492625: mov qword ptr [r12 + rbp*8 + 0x10], rax
49262a: sub rbp, 1
49262e: test r14, r14
492631: je 0x492668
492633: mov rbx, r14
492636: lea r14, [r14 - 1]
49263a: mov rax, qword ptr [rsp + 8]
49263f: mov rdx, r15
492642: mov rsi, qword ptr [r12 + r14*8 + 0x10]
492647: mov rdi, r13
49264a: call rax
49264c: test eax, eax
49264e: jg 0x492620
492650: cmp qword ptr [rsp + 0x10], 0
492656: mov qword ptr [r12 + rbp*8 + 0x10], r15
49265b: je 0x492678
49265d: mov rax, qword ptr [rsp + 0x10]
492662: jmp 0x4925f0
492664: nop dword ptr [rax]
492668: mov rbp, qword ptr [rsp + 0x10]
49266d: xor ebx, ebx
49266f: jmp 0x492650
492671: nop dword ptr [rax]
492678: mov rax, qword ptr [rsp + 0x18]
49267d: mov rax, qword ptr [rax + 8]
492681: add qword ptr [r12 + 8], rax
492686: mov rax, qword ptr [rsp + 0x48]
49268b: mov qword ptr [rsp + 0x18], rax
492690: mov rdi, qword ptr [rsp + 0x18]
492695: call 0x426a00
49269a: mov rax, qword ptr [rsp + 0x40]
49269f: mov rdx, qword ptr [r13 + 0x18]
4926a3: mov qword ptr [rax], rdx
4926a6: or byte ptr [r13 + 0x20], 1
4926ab: mov qword ptr [r13 + 0x18], rax
4926af: jmp 0x49225a
4926b4: nop dword ptr [rax]
4926b8: mov rdx, qword ptr [rsp]
4926bc: mov rsi, rbp
4926bf: mov rdi, r13
4926c2: call 0x491700
4926c7: mov r12, rax
4926ca: jmp 0x4920b3
4926cf: nop 
4926d0: mov qword ptr [rsp + 0x10], rbx
4926d5: jmp 0x492237
4926da: nop word ptr [rax + rax]
4926e0: lea rbp, [rsp + 0x40]
4926e5: mov rdx, r12
4926e8: mov rdi, r13
4926eb: mov rsi, rbp
4926ee: call 0x491f00
4926f3: jmp 0x492428
4926f8: nop dword ptr [rax + rax]
492700: mov rdx, r15
492703: mov rsi, rbp
492706: mov rdi, r13
492709: call 0x491210
49270e: jmp 0x49269a
492710: mov r12, r13
492713: jmp 0x4920b3
492718: nop dword ptr [rax + rax]
492720: mov edx, dword ptr [rsp + 0x10]
492724: mov eax, dword ptr [r13 + 0x20]
492728: shl edx, 0xb
49272b: and eax, 0x7ff
492730: or eax, edx
492732: mov dword ptr [r13 + 0x20], eax
492736: jmp 0x49224e
49273b: mov r12, rbp
49273e: jmp 0x4920b3
492743: cmp qword ptr [rsp + 0x10], 0
492749: mov qword ptr [r12 + rax*8 + 8], r15
49274e: je 0x492678
492754: lea rbp, [rax - 2]
492758: mov r15, qword ptr [rdx]
49275b: mov qword ptr [rsp + 0x10], rbp
492760: jmp 0x492650
492765: mov r9, rbx
492768: xor esi, esi
49276a: xor edx, edx
49276c: jmp 0x49259a
492771: nop word ptr cs:[rax + rax]
49277c: nop dword ptr [rax]
492780: push rbp
492781: push rbx
492782: mov rbx, rsi
492785: sub rsp, 8
492789: mov rbp, 0
492790: mov qword ptr [rsi], 0xffffffffffffffff
492797: mov qword ptr [rsi + 8], rdx
49279b: mov qword ptr [rsi + 0x10], rcx
49279f: mov qword ptr [rsi + 0x18], rdi
4927a3: mov qword ptr [rsi + 0x20], 0x7f8
4927ab: test rbp, rbp
4927ae: je 0x4927bc
4927b0: lea rdi, [rip + 0x30b09]
4927b7: call 0
4927bc: mov rax, qword ptr [rip + 0x30b35]
4927c3: mov qword ptr [rip + 0x30b2e], rbx
4927ca: mov qword ptr [rbx + 0x28], rax
4927ce: mov eax, dword ptr [rip + 0x30b14]
4927d4: test eax, eax
4927d6: je 0x492800
4927d8: test rbp, rbp
4927db: je 0x4927f0
4927dd: add rsp, 8
4927e1: lea rdi, [rip + 0x30ad8]
4927e8: pop rbx
4927e9: pop rbp
4927ea: jmp 0
4927ef: nop 
4927f0: add rsp, 8
4927f4: pop rbx
4927f5: pop rbp
4927f6: ret 
4927f7: nop word ptr [rax + rax]
492800: mov dword ptr [rip + 0x30ade], 1
49280a: jmp 0x4927d8
49280c: nop dword ptr [rax]
492810: endbr64 
492814: test rdi, rdi
492817: je 0x492828
492819: mov eax, dword ptr [rdi]
49281b: test eax, eax
49281d: je 0x492828
49281f: jmp 0x492780
492824: nop dword ptr [rax]
492828: ret 
492829: nop dword ptr [rax]
492830: endbr64 
492834: test rdi, rdi
492837: je 0x492850
492839: mov eax, dword ptr [rdi]
49283b: test eax, eax
49283d: je 0x492850
49283f: xor ecx, ecx
492841: xor edx, edx
492843: jmp 0x492780
492848: nop dword ptr [rax + rax]
492850: ret 
492851: nop word ptr cs:[rax + rax]
49285c: nop dword ptr [rax]
492860: endbr64 
492864: mov eax, dword ptr [rdi]
492866: test eax, eax
492868: jne 0x492870
49286a: ret 
49286b: nop dword ptr [rax + rax]
492870: push rbp
492871: mov rbp, rdi
492874: mov edi, 0x30
492879: call 0x426410
49287e: mov rdi, rbp
492881: xor ecx, ecx
492883: xor edx, edx
492885: mov rsi, rax
492888: pop rbp
492889: jmp 0x492780
49288e: nop 
492890: endbr64 
492894: push rbp
492895: push rbx
492896: mov rbx, rsi
492899: sub rsp, 8
49289d: mov rbp, 0
4928a4: mov qword ptr [rsi], 0xffffffffffffffff
4928ab: mov qword ptr [rsi + 8], rdx
4928af: mov qword ptr [rsi + 0x10], rcx
4928b3: mov qword ptr [rsi + 0x18], rdi
4928b7: mov qword ptr [rsi + 0x20], 0x7fa
4928bf: test rbp, rbp
4928c2: je 0x4928d0
4928c4: lea rdi, [rip + 0x309f5]
4928cb: call 0
4928d0: mov rax, qword ptr [rip + 0x30a21]
4928d7: mov qword ptr [rip + 0x30a1a], rbx
4928de: mov qword ptr [rbx + 0x28], rax
4928e2: mov eax, dword ptr [rip + 0x30a00]
4928e8: test eax, eax
4928ea: je 0x492910
4928ec: test rbp, rbp
4928ef: je 0x492908
4928f1: add rsp, 8
4928f5: lea rdi, [rip + 0x309c4]
4928fc: pop rbx
4928fd: pop rbp
4928fe: jmp 0
492903: nop dword ptr [rax + rax]
492908: add rsp, 8
49290c: pop rbx
49290d: pop rbp
49290e: ret 
49290f: nop 
492910: mov dword ptr [rip + 0x309ce], 1
49291a: jmp 0x4928ec
49291c: nop dword ptr [rax]
492920: endbr64 
492924: xor ecx, ecx
492926: xor edx, edx
492928: jmp 0x492890
49292d: nop dword ptr [rax]
492930: endbr64 
492934: push rbp
492935: mov rbp, rdi
492938: mov edi, 0x30
49293d: call 0x426410
492942: mov rdi, rbp
492945: xor ecx, ecx
492947: xor edx, edx
492949: mov rsi, rax
49294c: pop rbp
49294d: jmp 0x492890
492952: nop word ptr cs:[rax + rax]
49295d: nop dword ptr [rax]
492960: endbr64 
492964: push r12
492966: push rbp
492967: push rbx
492968: test rdi, rdi
49296b: je 0x492a40
492971: mov eax, dword ptr [rdi]
492973: mov rbx, rdi
492976: test eax, eax
492978: je 0x492a40
49297e: mov rbp, 0
492985: test rbp, rbp
492988: je 0x492996
49298a: lea rdi, [rip + 0x3092f]
492991: call 0
492996: mov rax, qword ptr [rip + 0x3095b]
49299d: test rax, rax
4929a0: je 0x4929f0
4929a2: lea rcx, [rip + 0x3094f]
4929a9: jmp 0x4929ba
4929ab: nop dword ptr [rax + rax]
4929b0: lea rcx, [r12 + 0x28]
4929b5: test rax, rax
4929b8: je 0x4929f0
4929ba: mov rdx, qword ptr [rax + 0x18]
4929be: mov r12, rax
4929c1: mov rax, qword ptr [rax + 0x28]
4929c5: cmp rbx, rdx
4929c8: jne 0x4929b0
4929ca: mov qword ptr [rcx], rax
4929cd: test rbp, rbp
4929d0: je 0x4929de
4929d2: lea rdi, [rip + 0x308e7]
4929d9: call 0
4929de: mov rax, r12
4929e1: pop rbx
4929e2: pop rbp
4929e3: pop r12
4929e5: ret 
4929e6: nop word ptr cs:[rax + rax]
4929f0: mov r12, qword ptr [rip + 0x308f9]
4929f7: test r12, r12
4929fa: je 0x492a50
4929fc: lea rax, [rip + 0x308ed]
492a03: jmp 0x492a1c
492a05: nop dword ptr [rax]
492a08: cmp rbx, qword ptr [rdi]
492a0b: je 0x492a70
492a0d: lea rax, [r12 + 0x28]
492a12: mov r12, qword ptr [r12 + 0x28]
492a17: test r12, r12
492a1a: je 0x492a50
492a1c: mov rdi, qword ptr [r12 + 0x18]
492a21: test byte ptr [r12 + 0x20], 1
492a27: jne 0x492a08
492a29: cmp rbx, rdi
492a2c: jne 0x492a0d
492a2e: mov rdx, qword ptr [r12 + 0x28]
492a33: mov qword ptr [rax], rdx
492a36: jmp 0x4929cd
492a38: nop dword ptr [rax + rax]
492a40: xor r12d, r12d
492a43: pop rbx
492a44: pop rbp
492a45: mov rax, r12
492a48: pop r12
492a4a: ret 
492a4b: nop dword ptr [rax + rax]
492a50: test rbp, rbp
492a53: je 0x492a61
492a55: lea rdi, [rip + 0x30864]
492a5c: call 0
492a61: call 0x4011b4
492a66: nop word ptr cs:[rax + rax]
492a70: mov rdx, qword ptr [r12 + 0x28]
492a75: mov qword ptr [rax], rdx
492a78: call 0x426a00
492a7d: jmp 0x4929cd
492a82: nop word ptr cs:[rax + rax]
492a8d: nop dword ptr [rax]
492a90: endbr64 
492a94: jmp 0x492960
492a99: nop dword ptr [rax]
492aa0: endbr64 
492aa4: mov eax, dword ptr [rdi]
492aa6: test eax, eax
492aa8: jne 0x492ab0
492aaa: ret 
492aab: nop dword ptr [rax + rax]
492ab0: sub rsp, 8
492ab4: call 0x492960
492ab9: add rsp, 8
492abd: mov rdi, rax
492ac0: jmp 0x426a00
492ac5: nop word ptr cs:[rax + rax]
492ad0: endbr64 
492ad4: push r15
492ad6: push r14
492ad8: push r13
492ada: push r12
492adc: mov r12, rsi
492adf: push rbp
492ae0: push rbx
492ae1: mov rbx, rdi
492ae4: sub rsp, 0x38
492ae8: mov eax, dword ptr [rip + 0x307fa]
492aee: test eax, eax
492af0: jne 0x492b80
492af6: mov rsi, rsp
492af9: lea rdi, [rip - 0x1280]
492b00: mov qword ptr [rsp], rbx
492b04: mov qword ptr [rsp + 8], 0
492b0d: mov qword ptr [rsp + 0x10], 0
492b16: mov qword ptr [rsp + 0x18], 0
492b1f: mov qword ptr [rsp + 0x20], 0
492b28: mov dword ptr [rsp + 0x28], 1
492b30: call 0x493160
492b35: test eax, eax
492b37: js 0x492ca8
492b3d: mov r15, qword ptr [rsp + 0x20]
492b42: test r15, r15
492b45: je 0x492b64
492b47: mov rax, qword ptr [rsp + 8]
492b4c: mov qword ptr [r12], rax
492b50: mov rax, qword ptr [rsp + 0x10]
492b55: mov qword ptr [r12 + 8], rax
492b5a: mov rax, qword ptr [rsp + 0x18]
492b5f: mov qword ptr [r12 + 0x10], rax
492b64: add rsp, 0x38
492b68: mov rax, r15
492b6b: pop rbx
492b6c: pop rbp
492b6d: pop r12
492b6f: pop r13
492b71: pop r14
492b73: pop r15
492b75: ret 
492b76: nop word ptr cs:[rax + rax]
492b80: mov r14, 0
492b87: test r14, r14
492b8a: je 0x492b98
492b8c: lea rdi, [rip + 0x3072d]
492b93: call 0
492b98: mov rbp, qword ptr [rip + 0x30751]
492b9f: test rbp, rbp
492ba2: jne 0x492bb9
492ba4: jmp 0x492c30
492ba9: nop dword ptr [rax]
492bb0: mov rbp, qword ptr [rbp + 0x28]
492bb4: test rbp, rbp
492bb7: je 0x492c30
492bb9: cmp rbx, qword ptr [rbp]
492bbd: jb 0x492bb0
492bbf: mov rsi, rbx
492bc2: mov rdi, rbp
492bc5: call 0x492030
492bca: mov r15, rax
492bcd: test rax, rax
492bd0: je 0x492c30
492bd2: test r14, r14
492bd5: jne 0x492cb0
492bdb: mov rax, qword ptr [rbp + 8]
492bdf: mov qword ptr [r12], rax
492be3: mov rax, qword ptr [rbp + 0x10]
492be7: mov qword ptr [r12 + 8], rax
492bec: test byte ptr [rbp + 0x20], 4
492bf0: jne 0x492cc8
492bf6: movzx r13d, word ptr [rbp + 0x20]
492bfb: shr r13w, 3
492c00: movzx r13d, r13b
492c04: mov rsi, rbp
492c07: mov edi, r13d
492c0a: call 0x491330
492c0f: mov rcx, rsp
492c12: lea rdx, [r15 + 8]
492c16: mov edi, r13d
492c19: mov rsi, rax
492c1c: call 0x4913f0
492c21: mov rax, qword ptr [rsp]
492c25: mov qword ptr [r12 + 0x10], rax
492c2a: jmp 0x492b64
492c2f: nop 
492c30: lea r13, [rip + 0x306b9]
492c37: nop word ptr [rax + rax]
492c40: mov rbp, qword ptr [rip + 0x306b1]
492c47: test rbp, rbp
492c4a: je 0x492ce8
492c50: mov rax, qword ptr [rbp + 0x28]
492c54: mov rsi, rbx
492c57: mov rdi, rbp
492c5a: mov qword ptr [rip + 0x30697], rax
492c61: call 0x492030
492c66: mov rdx, qword ptr [rip + 0x30683]
492c6d: mov r15, rax
492c70: mov rax, r13
492c73: test rdx, rdx
492c76: je 0x492c92
492c78: mov rcx, qword ptr [rbp]
492c7c: jmp 0x492c8d
492c7e: nop 
492c80: lea rax, [rdx + 0x28]
492c84: mov rdx, qword ptr [rdx + 0x28]
492c88: test rdx, rdx
492c8b: je 0x492c92
492c8d: cmp qword ptr [rdx], rcx
492c90: jae 0x492c80
492c92: mov qword ptr [rbp + 0x28], rdx
492c96: mov qword ptr [rax], rbp
492c99: test r15, r15
492c9c: je 0x492c40
492c9e: jmp 0x492bd2
492ca3: nop dword ptr [rax + rax]
492ca8: xor r15d, r15d
492cab: jmp 0x492b64
492cb0: lea rdi, [rip + 0x30609]
492cb7: call 0
492cbc: jmp 0x492bdb
492cc1: nop dword ptr [rax]
492cc8: movsxd rax, dword ptr [r15 + 4]
492ccc: lea rdi, [r15 + 4]
492cd0: sub rdi, rax
492cd3: call 0x4915d0
492cd8: movzx r13d, al
492cdc: jmp 0x492c04
492ce1: nop dword ptr [rax]
492ce8: test r14, r14
492ceb: je 0x492af6
492cf1: lea rdi, [rip + 0x305c8]
492cf8: call 0
492cfd: jmp 0x492af6
492d02: nop word ptr cs:[rax + rax]
492d0c: nop dword ptr [rax]
492d10: cmp dil, 0xff
492d14: je 0x492d88
492d16: mov eax, edi
492d18: sub rsp, 8
492d1c: and eax, 0x70
492d1f: cmp al, 0x30
492d21: je 0x492d78
492d23: ja 0x492d38
492d25: cmp al, 0x20
492d27: jne 0x492d50
492d29: mov rdi, rsi
492d2c: add rsp, 8
492d30: jmp 0x490810
492d35: nop dword ptr [rax]
492d38: cmp al, 0x40
492d3a: jne 0x492d68
492d3c: mov rdi, rsi
492d3f: add rsp, 8
492d43: jmp 0x4907c0
492d48: nop dword ptr [rax + rax]
492d50: ja 0x401779
492d56: and edi, 0x60
492d59: jne 0x401779
492d5f: jmp 0x492d6c
492d61: nop dword ptr [rax]
492d68: cmp al, 0x50
492d6a: jne 0x492d8b
492d6c: xor eax, eax
492d6e: add rsp, 8
492d72: ret 
492d73: nop dword ptr [rax + rax]
492d78: mov rdi, rsi
492d7b: add rsp, 8
492d7f: jmp 0x490800
492d84: nop dword ptr [rax]
492d88: xor eax, eax
492d8a: ret 
492d8b: jmp 0x401779
492d90: mov r9, rcx
492d93: cmp dil, 0x50
492d97: je 0x492df0
492d99: mov eax, edi
492d9b: sub rsp, 8
492d9f: and eax, 0xf
492da2: cmp al, 0xc
492da4: ja 0x40177e
492daa: lea rcx, [rip + 0x1e247]
492db1: movzx eax, al
492db4: movsxd rax, dword ptr [rcx + rax*4]
492db8: add rax, rcx
492dbb: notrack jmp rax
492dbe: nop 
492dc0: mov r8, qword ptr [rdx]
492dc3: lea rax, [rdx + 8]
492dc7: test r8, r8
492dca: je 0x492de0
492dcc: mov ecx, edi
492dce: and ecx, 0x70
492dd1: cmp cl, 0x10
492dd4: cmove rsi, rdx
492dd8: add r8, rsi
492ddb: test dil, dil
492dde: js 0x492e08
492de0: mov qword ptr [r9], r8
492de3: add rsp, 8
492de7: ret 
492de8: nop dword ptr [rax + rax]
492df0: lea rax, [rdx + 7]
492df4: and rax, 0xfffffffffffffff8
492df8: mov r8, qword ptr [rax]
492dfb: lea rax, [rax + 8]
492dff: mov qword ptr [rcx], r8
492e02: ret 
492e03: nop dword ptr [rax + rax]
492e08: mov r8, qword ptr [r8]
492e0b: mov qword ptr [r9], r8
492e0e: add rsp, 8
492e12: ret 
492e13: nop dword ptr [rax + rax]
492e18: movzx r8d, word ptr [rdx]
492e1c: lea rax, [rdx + 2]
492e20: jmp 0x492dc7
492e22: nop word ptr [rax + rax]
492e28: mov r8d, dword ptr [rdx]
492e2b: lea rax, [rdx + 4]
492e2f: jmp 0x492dc7
492e31: nop dword ptr [rax]
492e38: movsxd r8, dword ptr [rdx]
492e3b: lea rax, [rdx + 4]
492e3f: jmp 0x492dc7
492e41: nop dword ptr [rax]
492e48: movsx r8, word ptr [rdx]
492e4c: lea rax, [rdx + 2]
492e50: jmp 0x492dc7
492e55: nop dword ptr [rax]
492e58: mov rax, rdx
492e5b: xor r8d, r8d
492e5e: xor ecx, ecx
492e60: movzx r11d, byte ptr [rax]
492e64: add rax, 1
492e68: mov r10, r11
492e6b: and r10d, 0x7f
492e6f: shl r10, cl
492e72: add ecx, 7
492e75: or r8, r10
492e78: test r11b, r11b
492e7b: js 0x492e60
492e7d: jmp 0x492dc7
492e82: nop word ptr [rax + rax]
492e88: mov rax, rdx
492e8b: xor r8d, r8d
492e8e: xor ecx, ecx
492e90: movzx r11d, byte ptr [rax]
492e94: add rax, 1
492e98: mov r10, r11
492e9b: and r10d, 0x7f
492e9f: shl r10, cl
492ea2: add ecx, 7
492ea5: or r8, r10
492ea8: test r11b, r11b
492eab: js 0x492e90
492ead: cmp ecx, 0x3f
492eb0: ja 0x492dc7
492eb6: and r11d, 0x40
492eba: je 0x492dc7
492ec0: mov r10, 0xffffffffffffffff
492ec7: shl r10, cl
492eca: or r8, r10
492ecd: jmp 0x492dcc
492ed2: nop word ptr cs:[rax + rax]
492edd: nop dword ptr [rax]
492ee0: endbr64 
492ee4: push r15
492ee6: mov eax, 3
492eeb: push r14
492eed: push r13
492eef: push r12
492ef1: push rbp
492ef2: push rbx
492ef3: sub rsp, 0x68
492ef7: mov qword ptr [rsp + 8], rcx
492efc: mov qword ptr [rsp], r8
492f00: mov dword ptr [rsp + 0x14], 0
492f08: cmp edi, 1
492f0b: jne 0x492f1d
492f0d: and esi, 2
492f10: jne 0x492f30
492f12: nop word ptr [rax + rax]
492f18: mov eax, 8
492f1d: add rsp, 0x68
492f21: pop rbx
492f22: pop rbp
492f23: pop r12
492f25: pop r13
492f27: pop r14
492f29: pop r15
492f2b: ret 
492f2c: nop dword ptr [rax]
492f30: mov r15, qword ptr [rsp]
492f34: mov rdi, r15
492f37: call 0x4907b0
492f3c: mov rbx, rax
492f3f: test rax, rax
492f42: je 0x492f18
492f44: xor eax, eax
492f46: test r15, r15
492f49: je 0x492f53
492f4b: mov rdi, r15
492f4e: call 0x4907c0
492f53: mov qword ptr [rsp + 0x30], rax
492f58: movzx edx, byte ptr [rbx]
492f5b: lea r13, [rbx + 1]
492f5f: cmp dl, 0xff
492f62: je 0x4930f0
492f68: movzx r14d, dl
492f6c: mov rsi, qword ptr [rsp]
492f70: mov edi, r14d
492f73: call 0x492d10
492f78: mov rdx, r13
492f7b: lea rcx, [rsp + 0x38]
492f80: mov edi, r14d
492f83: mov rsi, rax
492f86: call 0x492d90
492f8b: mov r13, rax
492f8e: movzx eax, byte ptr [r13]
492f93: lea rsi, [r13 + 1]
492f97: mov byte ptr [rsp + 0x58], al
492f9b: cmp al, 0xff
492f9d: je 0x4930fa
492fa3: xor edi, edi
492fa5: xor ecx, ecx
492fa7: nop word ptr [rax + rax]
492fb0: movzx edx, byte ptr [rsi]
492fb3: add rsi, 1
492fb7: mov rax, rdx
492fba: and eax, 0x7f
492fbd: shl rax, cl
492fc0: add ecx, 7
492fc3: or rdi, rax
492fc6: test dl, dl
492fc8: js 0x492fb0
492fca: add rdi, rsi
492fcd: mov qword ptr [rsp + 0x48], rdi
492fd2: movzx eax, byte ptr [rsi]
492fd5: lea r12, [rsi + 1]
492fd9: xor edi, edi
492fdb: xor ecx, ecx
492fdd: mov byte ptr [rsp + 0x59], al
492fe1: nop dword ptr [rax]
492fe8: movzx esi, byte ptr [r12]
492fed: add r12, 1
492ff1: mov rax, rsi
492ff4: and eax, 0x7f
492ff7: shl rax, cl
492ffa: add ecx, 7
492ffd: or rdi, rax
493000: test sil, sil
493003: js 0x492fe8
493005: add rdi, r12
493008: lea rsi, [rsp + 0x14]
49300d: mov qword ptr [rsp + 0x50], rdi
493012: mov rdi, qword ptr [rsp]
493016: call 0x490780
49301b: cmp dword ptr [rsp + 0x14], 1
493020: sbb rax, 0
493024: mov rbx, rax
493027: cmp qword ptr [rsp + 0x50], r12
49302c: jbe 0x492f18
493032: lea r15, [rsp + 0x18]
493037: lea r14, [rsp + 0x20]
49303c: lea r13, [rsp + 0x28]
493041: nop dword ptr [rax]
493048: movzx ebp, byte ptr [rsp + 0x59]
49304d: xor esi, esi
49304f: mov edi, ebp
493051: call 0x492d10
493056: mov rdx, r12
493059: mov rcx, r15
49305c: mov edi, ebp
49305e: mov rsi, rax
493061: call 0x492d90
493066: movzx ebp, byte ptr [rsp + 0x59]
49306b: xor esi, esi
49306d: mov r12, rax
493070: mov edi, ebp
493072: call 0x492d10
493077: mov rdx, r12
49307a: mov rcx, r14
49307d: mov edi, ebp
49307f: mov rsi, rax
493082: call 0x492d90
493087: movzx r12d, byte ptr [rsp + 0x59]
49308d: xor esi, esi
49308f: mov rbp, rax
493092: mov edi, r12d
493095: call 0x492d10
49309a: mov edi, r12d
49309d: mov rcx, r13
4930a0: mov rdx, rbp
4930a3: mov rsi, rax
4930a6: call 0x492d90
4930ab: mov r12, rax
4930ae: nop 
4930b0: add r12, 1
4930b4: cmp byte ptr [r12 - 1], 0
4930ba: js 0x4930b0
4930bc: mov rax, qword ptr [rsp + 0x18]
4930c1: add rax, qword ptr [rsp + 0x30]
4930c6: cmp rax, rbx
4930c9: ja 0x492f18
4930cf: add rax, qword ptr [rsp + 0x20]
4930d4: cmp rax, rbx
4930d7: ja 0x493108
4930d9: cmp qword ptr [rsp + 0x50], r12
4930de: ja 0x493048
4930e4: jmp 0x492f18
4930e9: nop dword ptr [rax]
4930f0: mov qword ptr [rsp + 0x38], rax
4930f5: jmp 0x492f8e
4930fa: mov qword ptr [rsp + 0x48], 0
493103: jmp 0x492fd2
493108: mov rax, qword ptr [rsp + 0x28]
49310d: test rax, rax
493110: je 0x492f18
493116: add rax, qword ptr [rsp + 0x38]
49311b: mov r13, rax
49311e: je 0x492f18
493124: mov rbx, qword ptr [rsp]
493128: mov rdx, qword ptr [rsp + 8]
49312d: xor esi, esi
49312f: mov rdi, rbx
493132: call 0x490710
493137: xor edx, edx
493139: mov esi, 1
49313e: mov rdi, rbx
493141: call 0x490710
493146: mov rsi, r13
493149: mov rdi, rbx
49314c: call 0x4907a0
493151: mov eax, 7
493156: jmp 0x492f1d
49315b: nop dword ptr [rax + rax]
493160: endbr64 
493164: push r15
493166: push r14
493168: push r13
49316a: push r12
49316c: push rbp
49316d: mov rbp, rsi
493170: push rbx
493171: mov rbx, rdi
493174: sub rsp, 0x58
493178: mov rax, qword ptr fs:[0x28]
493181: mov qword ptr [rsp + 0x48], rax
493186: xor eax, eax
493188: cmp qword ptr [rip + 0x2cd78], 0
493190: je 0x49319e
493192: lea rdi, [rip + 0x2df07]
493199: call 0
49319e: mov r15, qword ptr [rip + 0x2dfdb]
4931a5: mov r12d, dword ptr [rip + 0x2dfdc]
4931ac: test r15, r15
4931af: je 0x493250
4931b5: mov r13, rsp
4931b8: jmp 0x4931dd
4931ba: nop word ptr [rax + rax]
4931c0: mov rdx, rbp
4931c3: mov esi, 0x40
4931c8: mov rdi, r13
4931cb: call rbx
4931cd: mov r14d, eax
4931d0: test eax, eax
4931d2: jne 0x493253
4931d4: mov r15, qword ptr [r15 + 0x18]
4931d8: test r15, r15
4931db: je 0x493250
4931dd: mov rdi, qword ptr [r15 + 0x28]
4931e1: mov rax, qword ptr [rdi]
4931e4: mov qword ptr [rsp], rax
4931e8: mov rax, qword ptr [rdi + 8]
4931ec: mov qword ptr [rsp + 0x38], 0
4931f5: mov qword ptr [rsp + 8], rax
4931fa: mov rax, qword ptr [rdi + 0x2a8]
493201: mov qword ptr [rsp + 0x10], rax
493206: movzx eax, word ptr [rdi + 0x2b8]
49320d: mov word ptr [rsp + 0x18], ax
493212: mov rax, qword ptr [rip + 0x2df07]
493219: mov qword ptr [rsp + 0x20], rax
49321e: sub rax, r12
493221: mov qword ptr [rsp + 0x28], rax
493226: mov rax, qword ptr [rdi + 0x458]
49322d: mov qword ptr [rsp + 0x30], rax
493232: test rax, rax
493235: je 0x4931c0
493237: call 0x4824b0
49323c: mov qword ptr [rsp + 0x38], rax
493241: jmp 0x4931c0
493246: nop word ptr cs:[rax + rax]
493250: xor r14d, r14d
493253: cmp qword ptr [rip + 0x2cd15], 0
49325b: je 0x493269
49325d: lea rdi, [rip + 0x2de3c]
493264: call 0
493269: mov rax, qword ptr [rsp + 0x48]
49326e: xor rax, qword ptr fs:[0x28]
493277: jne 0x49328b
493279: add rsp, 0x58
49327d: mov eax, r14d
493280: pop rbx
493281: pop rbp
493282: pop r12
493284: pop r13
493286: pop r14
493288: pop r15
49328a: ret 
49328b: call 0x4547a0
493290: endbr64 
493294: push rbp
493295: push rbx
493296: sub rsp, 8
49329a: mov rbp, qword ptr [rip + 0x3049f]
4932a1: test rbp, rbp
4932a4: je 0x4932e6
4932a6: lea rbx, [rip + 0x20d3]
4932ad: nop dword ptr [rax]
4932b0: mov rax, qword ptr [rbp]
4932b4: mov rdi, qword ptr [rbp + 8]
4932b8: mov qword ptr [rip + 0x30481], rax
4932bf: cmp rdi, rbx
4932c2: je 0x4932c9
4932c4: call 0x426a00
4932c9: mov rdi, qword ptr [rbp + 0x10]
4932cd: call 0x426a00
4932d2: mov rdi, rbp
4932d5: call 0x426a00
4932da: mov rbp, qword ptr [rip + 0x3045f]
4932e1: test rbp, rbp
4932e4: jne 0x4932b0
4932e6: mov rdi, qword ptr [rip + 0x2ce0b]
4932ed: lea rax, [rip + 0x20a4]
4932f4: cmp rdi, rax
4932f7: je 0x4932fe
4932f9: call 0x426a00
4932fe: mov rsi, 0x426a00
493305: mov rdi, qword ptr [rip + 0x2f3dc]
49330c: call 0x452ac0
493311: mov rbp, qword ptr [rip + 0x2f3c8]
493318: mov qword ptr [rip + 0x2f3c5], 0
493323: test rbp, rbp
493326: je 0x493348
493328: nop dword ptr [rax + rax]
493330: mov rdi, rbp
493333: mov rbp, qword ptr [rbp]
493337: mov qword ptr [rip + 0x2f3a2], rbp
49333e: call 0x426a00
493343: test rbp, rbp
493346: jne 0x493330
493348: add rsp, 8
49334c: pop rbx
49334d: pop rbp
49334e: ret 
49334f: nop 
493350: endbr64 
493354: push rbp
493355: push rbx
493356: sub rsp, 8
49335a: mov rbp, qword ptr [rip + 0x2f417]
493361: test rbp, rbp
493364: jne 0x493373
493366: jmp 0x49339b
493368: nop dword ptr [rax + rax]
493370: mov rbp, rbx
493373: mov rdi, qword ptr [rbp + 0x10]
493377: test rdi, rdi
49337a: je 0x493381
49337c: call 0x4933b0
493381: mov rdi, qword ptr [rbp]
493385: mov rbx, qword ptr [rbp + 0x18]
493389: call 0x426a00
49338e: mov rdi, rbp
493391: call 0x426a00
493396: test rbx, rbx
493399: jne 0x493370
49339b: add rsp, 8
49339f: pop rbx
4933a0: pop rbp
4933a1: ret 
4933a2: nop word ptr cs:[rax + rax]
4933ac: nop dword ptr [rax]
4933b0: endbr64 
4933b4: push r12
4933b6: mov r12, rdi
4933b9: lea rax, [rip + 0x29d40]
4933c0: push rbp
4933c1: push rbx
4933c2: mov rdi, qword ptr [rdi + 0xb8]
4933c9: cmp rdi, rax
4933cc: je 0x4933d3
4933ce: call 0x4073f0
4933d3: cmp qword ptr [r12 + 0x78], 0
4933d9: je 0x493422
4933db: xor ebx, ebx
4933dd: nop dword ptr [rax]
4933e0: mov rdx, qword ptr [r12 + 0x70]
4933e5: lea rax, [rbx + rbx*2]
4933e9: lea rbp, [rdx + rax*8]
4933ed: mov rdi, qword ptr [rbp]
4933f1: call 0x426a00
4933f6: mov rdi, qword ptr [rbp + 0x10]
4933fa: lea rax, [rdi - 1]
4933fe: cmp rax, -3
493402: jbe 0x493488
493408: mov rdi, qword ptr [rbp + 8]
49340c: cmp rdi, -1
493410: je 0x493470
493412: call 0x457660
493417: add rbx, 1
49341b: cmp qword ptr [r12 + 0x78], rbx
493420: ja 0x4933e0
493422: mov rdi, qword ptr [r12 + 0x70]
493427: call 0x426a00
49342c: cmp qword ptr [rip + 0x2cb84], 0
493434: je 0x493443
493436: lea rdi, [r12 + 0x80]
49343e: call 0
493443: mov rdi, qword ptr [r12 + 0x20]
493448: call 0x426a00
49344d: mov eax, dword ptr [r12 + 8]
493452: test eax, eax
493454: je 0x493498
493456: mov rdi, qword ptr [r12]
49345a: mov rsi, qword ptr [r12 + 0x10]
49345f: call 0x451c70
493464: pop rbx
493465: mov rdi, r12
493468: pop rbp
493469: pop r12
49346b: jmp 0x426a00
493470: add rbx, 1
493474: cmp qword ptr [r12 + 0x78], rbx
493479: ja 0x4933e0
49347f: jmp 0x493422
493481: nop dword ptr [rax]
493488: call 0x426a00
49348d: jmp 0x493408
493492: nop word ptr [rax + rax]
493498: mov rdi, qword ptr [r12]
49349c: call 0x426a00
4934a1: pop rbx
4934a2: mov rdi, r12
4934a5: pop rbp
4934a6: pop r12
4934a8: jmp 0x426a00
4934ad: nop dword ptr [rax]
4934b0: endbr64 
4934b4: push rbx
4934b5: mov rbx, qword ptr [rip + 0x2f754]
4934bc: mov byte ptr [rip + 0x2f755], 1
4934c3: test rbx, rbx
4934c6: je 0x4934ef
4934c8: nop dword ptr [rax + rax]
4934d0: mov rdi, qword ptr [rbx + 0xb0]
4934d7: call 0x426a00
4934dc: mov rbx, qword ptr [rbx + 0xa8]
4934e3: mov qword ptr [rip + 0x2f726], rbx
4934ea: test rbx, rbx
4934ed: jne 0x4934d0
4934ef: pop rbx
4934f0: ret 
4934f1: nop word ptr cs:[rax + rax]
4934fb: nop dword ptr [rax + rax]
493500: endbr64 
493504: push r13
493506: mov r13, rdi
493509: push r12
49350b: push rbp
49350c: push rbx
49350d: sub rsp, 8
493511: mov rcx, qword ptr [rdi + 0x18]
493515: mov rdx, qword ptr [rdi + 0x10]
493519: test rcx, rcx
49351c: je 0x493576
49351e: xor ebx, ebx
493520: lea rax, [rbx + rbx*2]
493524: lea rbp, [rbx + rax*4]
493528: shl rbp, 3
49352c: lea rax, [rdx + rbp]
493530: mov esi, dword ptr [rax + 0x10]
493533: test esi, esi
493535: jle 0x49356d
493537: cmp qword ptr [rax], 0
49353b: je 0x49356d
49353d: mov r12, qword ptr [rax + 0x40]
493541: ror r12, 0x11
493545: xor r12, qword ptr fs:[0x30]
49354e: test r12, r12
493551: je 0x49356d
493553: mov rdi, r12
493556: call 0x456100
49355b: mov rdi, qword ptr [r13 + 0x10]
49355f: add rdi, rbp
493562: call r12
493565: mov rcx, qword ptr [r13 + 0x18]
493569: mov rdx, qword ptr [r13 + 0x10]
49356d: add rbx, 1
493571: cmp rbx, rcx
493574: jb 0x493520
493576: test rdx, rdx
493579: je 0x4935aa
49357b: mov rdi, qword ptr [rdx + 0x18]
49357f: call 0x426a00
493584: mov rax, qword ptr [r13 + 0x18]
493588: lea rdx, [rax + rax*2]
49358c: lea rax, [rax + rdx*4]
493590: mov rdx, qword ptr [r13 + 0x10]
493594: lea rax, [rdx + rax*8]
493598: mov rdi, qword ptr [rax - 0x48]
49359c: call 0x426a00
4935a1: mov rdi, qword ptr [r13 + 0x10]
4935a5: call 0x426a00
4935aa: add rsp, 8
4935ae: mov rdi, r13
4935b1: pop rbx
4935b2: pop rbp
4935b3: pop r12
4935b5: pop r13
4935b7: jmp 0x426a00
4935bc: nop dword ptr [rax]
4935c0: push rbx
4935c1: mov rbx, rdi
4935c4: mov rdi, qword ptr [rdi + 0x20]
4935c8: test rdi, rdi
4935cb: je 0x4935d2
4935cd: call 0x4935c0
4935d2: mov rdi, qword ptr [rbx + 0x30]
4935d6: test rdi, rdi
4935d9: je 0x4935ed
4935db: call 0x4935c0
4935e0: jmp 0x4935ed
4935e2: nop word ptr [rax + rax]
4935e8: test rbx, rbx
4935eb: je 0x493607
4935ed: mov rdi, rbx
4935f0: mov rbx, qword ptr [rbx + 0x28]
4935f4: mov rax, qword ptr [rdi + 0x18]
4935f8: cmp byte ptr [rax], 0x2f
4935fb: jne 0x4935e8
4935fd: call 0x426a00
493602: test rbx, rbx
493605: jne 0x4935ed
493607: pop rbx
493608: ret 
493609: nop dword ptr [rax]
493610: endbr64 
493614: push r15
493616: push r14
493618: push r13
49361a: push r12
49361c: push rbp
49361d: push rbx
49361e: sub rsp, 8
493622: call 0x494740
493627: call 0x493350
49362c: mov rdi, qword ptr [rip + 0x30285]
493633: test rdi, rdi
493636: je 0x493644
493638: mov rsi, 0x426a00
49363f: call 0x452ac0
493644: mov rbx, qword ptr [rip + 0x3025d]
49364b: test rbx, rbx
49364e: je 0x493775
493654: mov rbp, qword ptr [rbx + 0x20]
493658: test rbp, rbp
49365b: je 0x4936d0
49365d: mov r12, qword ptr [rbp + 0x20]
493661: test r12, r12
493664: je 0x4937a0
49366a: mov r13, qword ptr [r12 + 0x20]
49366f: test r13, r13
493672: je 0x493dd0
493678: mov r14, qword ptr [r13 + 0x20]
49367c: test r14, r14
49367f: je 0x493950
493685: mov r15, qword ptr [r14 + 0x20]
493689: test r15, r15
49368c: je 0x494250
493692: mov rdi, qword ptr [r15 + 0x20]
493696: test rdi, rdi
493699: je 0x4936a0
49369b: call 0x4935c0
4936a0: mov rdi, qword ptr [r15 + 0x30]
4936a4: test rdi, rdi
4936a7: je 0x4936b9
4936a9: call 0x4935c0
4936ae: jmp 0x4936b9
4936b0: test r15, r15
4936b3: je 0x494250
4936b9: mov rdi, r15
4936bc: mov r15, qword ptr [r15 + 0x28]
4936c0: mov rax, qword ptr [rdi + 0x18]
4936c4: cmp byte ptr [rax], 0x2f
4936c7: jne 0x4936b0
4936c9: call 0x426a00
4936ce: jmp 0x4936b0
4936d0: mov rbp, qword ptr [rbx + 0x30]
4936d4: test rbp, rbp
4936d7: je 0x493760
4936dd: mov r12, qword ptr [rbp + 0x20]
4936e1: test r12, r12
4936e4: je 0x493830
4936ea: mov r13, qword ptr [r12 + 0x20]
4936ef: test r13, r13
4936f2: je 0x493cd0
4936f8: mov r14, qword ptr [r13 + 0x20]
4936fc: test r14, r14
4936ff: je 0x4938d0
493705: mov r15, qword ptr [r14 + 0x20]
493709: test r15, r15
49370c: je 0x494090
493712: mov rdi, qword ptr [r15 + 0x20]
493716: test rdi, rdi
493719: je 0x493720
49371b: call 0x4935c0
493720: mov rdi, qword ptr [r15 + 0x30]
493724: test rdi, rdi
493727: je 0x493739
493729: call 0x4935c0
49372e: jmp 0x493739
493730: test r15, r15
493733: je 0x494090
493739: mov rdi, r15
49373c: mov r15, qword ptr [r15 + 0x28]
493740: mov rax, qword ptr [rdi + 0x18]
493744: cmp byte ptr [rax], 0x2f
493747: jne 0x493730
493749: call 0x426a00
49374e: jmp 0x493730
493750: call 0x426a00
493755: test rbx, rbx
493758: je 0x493775
49375a: nop word ptr [rax + rax]
493760: mov rdi, rbx
493763: mov rbx, qword ptr [rbx + 0x28]
493767: mov rax, qword ptr [rdi + 0x18]
49376b: cmp byte ptr [rax], 0x2f
49376e: je 0x493750
493770: test rbx, rbx
493773: jne 0x493760
493775: mov rdi, qword ptr [rip + 0x2f654]
49377c: test rdi, rdi
49377f: je 0x4938c0
493785: add rsp, 8
493789: lea rsi, [rip - 0x290]
493790: pop rbx
493791: pop rbp
493792: pop r12
493794: pop r13
493796: pop r14
493798: pop r15
49379a: jmp 0x452ac0
49379f: nop 
4937a0: mov r12, qword ptr [rbp + 0x30]
4937a4: test r12, r12
4937a7: je 0x49381e
4937a9: mov r13, qword ptr [r12 + 0x20]
4937ae: test r13, r13
4937b1: je 0x493bd0
4937b7: mov r14, qword ptr [r13 + 0x20]
4937bb: test r14, r14
4937be: je 0x493a50
4937c4: mov r15, qword ptr [r14 + 0x20]
4937c8: test r15, r15
4937cb: je 0x493ed0
4937d1: mov rdi, qword ptr [r15 + 0x20]
4937d5: test rdi, rdi
4937d8: je 0x4937df
4937da: call 0x4935c0
4937df: mov rdi, qword ptr [r15 + 0x30]
4937e3: test rdi, rdi
4937e6: je 0x4937f9
4937e8: call 0x4935c0
4937ed: jmp 0x4937f9
4937ef: nop 
4937f0: test r15, r15
4937f3: je 0x493ed0
4937f9: mov rdi, r15
4937fc: mov r15, qword ptr [r15 + 0x28]
493800: mov rax, qword ptr [rdi + 0x18]
493804: cmp byte ptr [rax], 0x2f
493807: jne 0x4937f0
493809: call 0x426a00
49380e: jmp 0x4937f0
493810: call 0x426a00
493815: test rbp, rbp
493818: je 0x4936d0
49381e: mov rdi, rbp
493821: mov rbp, qword ptr [rbp + 0x28]
493825: mov rax, qword ptr [rdi + 0x18]
493829: cmp byte ptr [rax], 0x2f
49382c: jne 0x493815
49382e: jmp 0x493810
493830: mov r12, qword ptr [rbp + 0x30]
493834: test r12, r12
493837: je 0x4938ae
493839: mov r13, qword ptr [r12 + 0x20]
49383e: test r13, r13
493841: je 0x493ad0
493847: mov r14, qword ptr [r13 + 0x20]
49384b: test r14, r14
49384e: je 0x4939d0
493854: mov r15, qword ptr [r14 + 0x20]
493858: test r15, r15
49385b: je 0x4944f0
493861: mov rdi, qword ptr [r15 + 0x20]
493865: test rdi, rdi
493868: je 0x49386f
49386a: call 0x4935c0
49386f: mov rdi, qword ptr [r15 + 0x30]
493873: test rdi, rdi
493876: je 0x493889
493878: call 0x4935c0
49387d: jmp 0x493889
49387f: nop 
493880: test r15, r15
493883: je 0x4944f0
493889: mov rdi, r15
49388c: mov r15, qword ptr [r15 + 0x28]
493890: mov rax, qword ptr [rdi + 0x18]
493894: cmp byte ptr [rax], 0x2f
493897: jne 0x493880
493899: call 0x426a00
49389e: jmp 0x493880
4938a0: call 0x426a00
4938a5: test rbp, rbp
4938a8: je 0x493760
4938ae: mov rdi, rbp
4938b1: mov rbp, qword ptr [rbp + 0x28]
4938b5: mov rax, qword ptr [rdi + 0x18]
4938b9: cmp byte ptr [rax], 0x2f
4938bc: jne 0x4938a5
4938be: jmp 0x4938a0
4938c0: add rsp, 8
4938c4: pop rbx
4938c5: pop rbp
4938c6: pop r12
4938c8: pop r13
4938ca: pop r14
4938cc: pop r15
4938ce: ret 
4938cf: nop 
4938d0: mov r14, qword ptr [r13 + 0x30]
4938d4: test r14, r14
4938d7: je 0x49393e
4938d9: mov r15, qword ptr [r14 + 0x20]
4938dd: test r15, r15
4938e0: je 0x494410
4938e6: mov rdi, qword ptr [r15 + 0x20]
4938ea: test rdi, rdi
4938ed: je 0x4938f4
4938ef: call 0x4935c0
4938f4: mov rdi, qword ptr [r15 + 0x30]
4938f8: test rdi, rdi
4938fb: je 0x493911
4938fd: call 0x4935c0
493902: jmp 0x493911
493904: nop dword ptr [rax]
493908: test r15, r15
49390b: je 0x494410
493911: mov rdi, r15
493914: mov r15, qword ptr [r15 + 0x28]
493918: mov rax, qword ptr [rdi + 0x18]
49391c: cmp byte ptr [rax], 0x2f
49391f: jne 0x493908
493921: call 0x426a00
493926: jmp 0x493908
493928: nop dword ptr [rax + rax]
493930: call 0x426a00
493935: test r13, r13
493938: je 0x493cd0
49393e: mov rdi, r13
493941: mov r13, qword ptr [r13 + 0x28]
493945: mov rax, qword ptr [rdi + 0x18]
493949: cmp byte ptr [rax], 0x2f
49394c: jne 0x493935
49394e: jmp 0x493930
493950: mov r14, qword ptr [r13 + 0x30]
493954: test r14, r14
493957: je 0x4939be
493959: mov r15, qword ptr [r14 + 0x20]
49395d: test r15, r15
493960: je 0x493fb0
493966: mov rdi, qword ptr [r15 + 0x20]
49396a: test rdi, rdi
49396d: je 0x493974
49396f: call 0x4935c0
493974: mov rdi, qword ptr [r15 + 0x30]
493978: test rdi, rdi
49397b: je 0x493991
49397d: call 0x4935c0
493982: jmp 0x493991
493984: nop dword ptr [rax]
493988: test r15, r15
49398b: je 0x493fb0
493991: mov rdi, r15
493994: mov r15, qword ptr [r15 + 0x28]
493998: mov rax, qword ptr [rdi + 0x18]
49399c: cmp byte ptr [rax], 0x2f
49399f: jne 0x493988
4939a1: call 0x426a00
4939a6: jmp 0x493988
4939a8: nop dword ptr [rax + rax]
4939b0: call 0x426a00
4939b5: test r13, r13
4939b8: je 0x493dd0
4939be: mov rdi, r13
4939c1: mov r13, qword ptr [r13 + 0x28]
4939c5: mov rax, qword ptr [rdi + 0x18]
4939c9: cmp byte ptr [rax], 0x2f
4939cc: jne 0x4939b5
4939ce: jmp 0x4939b0
4939d0: mov r14, qword ptr [r13 + 0x30]
4939d4: test r14, r14
4939d7: je 0x493a3e
4939d9: mov r15, qword ptr [r14 + 0x20]
4939dd: test r15, r15
4939e0: je 0x494330
4939e6: mov rdi, qword ptr [r15 + 0x20]
4939ea: test rdi, rdi
4939ed: je 0x4939f4
4939ef: call 0x4935c0
4939f4: mov rdi, qword ptr [r15 + 0x30]
4939f8: test rdi, rdi
4939fb: je 0x493a11
4939fd: call 0x4935c0
493a02: jmp 0x493a11
493a04: nop dword ptr [rax]
493a08: test r15, r15
493a0b: je 0x494330
493a11: mov rdi, r15
493a14: mov r15, qword ptr [r15 + 0x28]
493a18: mov rax, qword ptr [rdi + 0x18]
493a1c: cmp byte ptr [rax], 0x2f
493a1f: jne 0x493a08
493a21: call 0x426a00
493a26: jmp 0x493a08
493a28: nop dword ptr [rax + rax]
493a30: call 0x426a00
493a35: test r13, r13
493a38: je 0x493ad0
493a3e: mov rdi, r13
493a41: mov r13, qword ptr [r13 + 0x28]
493a45: mov rax, qword ptr [rdi + 0x18]
493a49: cmp byte ptr [rax], 0x2f
493a4c: jne 0x493a35
493a4e: jmp 0x493a30
493a50: mov r14, qword ptr [r13 + 0x30]
493a54: test r14, r14
493a57: je 0x493abe
493a59: mov r15, qword ptr [r14 + 0x20]
493a5d: test r15, r15
493a60: je 0x494170
493a66: mov rdi, qword ptr [r15 + 0x20]
493a6a: test rdi, rdi
493a6d: je 0x493a74
493a6f: call 0x4935c0
493a74: mov rdi, qword ptr [r15 + 0x30]
493a78: test rdi, rdi
493a7b: je 0x493a91
493a7d: call 0x4935c0
493a82: jmp 0x493a91
493a84: nop dword ptr [rax]
493a88: test r15, r15
493a8b: je 0x494170
493a91: mov rdi, r15
493a94: mov r15, qword ptr [r15 + 0x28]
493a98: mov rax, qword ptr [rdi + 0x18]
493a9c: cmp byte ptr [rax], 0x2f
493a9f: jne 0x493a88
493aa1: call 0x426a00
493aa6: jmp 0x493a88
493aa8: nop dword ptr [rax + rax]
493ab0: call 0x426a00
493ab5: test r13, r13
493ab8: je 0x493bd0
493abe: mov rdi, r13
493ac1: mov r13, qword ptr [r13 + 0x28]
493ac5: mov rax, qword ptr [rdi + 0x18]
493ac9: cmp byte ptr [rax], 0x2f
493acc: jne 0x493ab5
493ace: jmp 0x493ab0
493ad0: mov r13, qword ptr [r12 + 0x30]
493ad5: test r13, r13
493ad8: je 0x493b3e
493ada: mov r14, qword ptr [r13 + 0x20]
493ade: test r14, r14
493ae1: je 0x493b58
493ae3: mov r15, qword ptr [r14 + 0x20]
493ae7: test r15, r15
493aea: je 0x494480
493af0: mov rdi, qword ptr [r15 + 0x20]
493af4: test rdi, rdi
493af7: je 0x493afe
493af9: call 0x4935c0
493afe: mov rdi, qword ptr [r15 + 0x30]
493b02: test rdi, rdi
493b05: je 0x493b19
493b07: call 0x4935c0
493b0c: jmp 0x493b19
493b0e: nop 
493b10: test r15, r15
493b13: je 0x494480
493b19: mov rdi, r15
493b1c: mov r15, qword ptr [r15 + 0x28]
493b20: mov rax, qword ptr [rdi + 0x18]
493b24: cmp byte ptr [rax], 0x2f
493b27: jne 0x493b10
493b29: call 0x426a00
493b2e: jmp 0x493b10
493b30: call 0x426a00
493b35: test r12, r12
493b38: je 0x4938ae
493b3e: mov rdi, r12
493b41: mov r12, qword ptr [r12 + 0x28]
493b46: mov rax, qword ptr [rdi + 0x18]
493b4a: cmp byte ptr [rax], 0x2f
493b4d: jne 0x493b35
493b4f: jmp 0x493b30
493b51: nop dword ptr [rax]
493b58: mov r14, qword ptr [r13 + 0x30]
493b5c: test r14, r14
493b5f: je 0x493bba
493b61: mov r15, qword ptr [r14 + 0x20]
493b65: test r15, r15
493b68: je 0x493f40
493b6e: mov rdi, qword ptr [r15 + 0x20]
493b72: test rdi, rdi
493b75: je 0x493b7c
493b77: call 0x4935c0
493b7c: mov rdi, qword ptr [r15 + 0x30]
493b80: test rdi, rdi
493b83: je 0x493b99
493b85: call 0x4935c0
493b8a: jmp 0x493b99
493b8c: nop dword ptr [rax]
493b90: test r15, r15
493b93: je 0x493f40
493b99: mov rdi, r15
493b9c: mov r15, qword ptr [r15 + 0x28]
493ba0: mov rax, qword ptr [rdi + 0x18]
493ba4: cmp byte ptr [rax], 0x2f
493ba7: jne 0x493b90
493ba9: call 0x426a00
493bae: jmp 0x493b90
493bb0: call 0x426a00
493bb5: test r13, r13
493bb8: je 0x493b3e
493bba: mov rdi, r13
493bbd: mov r13, qword ptr [r13 + 0x28]
493bc1: mov rax, qword ptr [rdi + 0x18]
493bc5: cmp byte ptr [rax], 0x2f
493bc8: jne 0x493bb5
493bca: jmp 0x493bb0
493bcc: nop dword ptr [rax]
493bd0: mov r13, qword ptr [r12 + 0x30]
493bd5: test r13, r13
493bd8: je 0x493c3e
493bda: mov r14, qword ptr [r13 + 0x20]
493bde: test r14, r14
493be1: je 0x493c58
493be3: mov r15, qword ptr [r14 + 0x20]
493be7: test r15, r15
493bea: je 0x4942c0
493bf0: mov rdi, qword ptr [r15 + 0x20]
493bf4: test rdi, rdi
493bf7: je 0x493bfe
493bf9: call 0x4935c0
493bfe: mov rdi, qword ptr [r15 + 0x30]
493c02: test rdi, rdi
493c05: je 0x493c19
493c07: call 0x4935c0
493c0c: jmp 0x493c19
493c0e: nop 
493c10: test r15, r15
493c13: je 0x4942c0
493c19: mov rdi, r15
493c1c: mov r15, qword ptr [r15 + 0x28]
493c20: mov rax, qword ptr [rdi + 0x18]
493c24: cmp byte ptr [rax], 0x2f
493c27: jne 0x493c10
493c29: call 0x426a00
493c2e: jmp 0x493c10
493c30: call 0x426a00
493c35: test r12, r12
493c38: je 0x49381e
493c3e: mov rdi, r12
493c41: mov r12, qword ptr [r12 + 0x28]
493c46: mov rax, qword ptr [rdi + 0x18]
493c4a: cmp byte ptr [rax], 0x2f
493c4d: jne 0x493c35
493c4f: jmp 0x493c30
493c51: nop dword ptr [rax]
493c58: mov r14, qword ptr [r13 + 0x30]
493c5c: test r14, r14
493c5f: je 0x493cba
493c61: mov r15, qword ptr [r14 + 0x20]
493c65: test r15, r15
493c68: je 0x494100
493c6e: mov rdi, qword ptr [r15 + 0x20]
493c72: test rdi, rdi
493c75: je 0x493c7c
493c77: call 0x4935c0
493c7c: mov rdi, qword ptr [r15 + 0x30]
493c80: test rdi, rdi
493c83: je 0x493c99
493c85: call 0x4935c0
493c8a: jmp 0x493c99
493c8c: nop dword ptr [rax]
493c90: test r15, r15
493c93: je 0x494100
493c99: mov rdi, r15
493c9c: mov r15, qword ptr [r15 + 0x28]
493ca0: mov rax, qword ptr [rdi + 0x18]
493ca4: cmp byte ptr [rax], 0x2f
493ca7: jne 0x493c90
493ca9: call 0x426a00
493cae: jmp 0x493c90
493cb0: call 0x426a00
493cb5: test r13, r13
493cb8: je 0x493c3e
493cba: mov rdi, r13
493cbd: mov r13, qword ptr [r13 + 0x28]
493cc1: mov rax, qword ptr [rdi + 0x18]
493cc5: cmp byte ptr [rax], 0x2f
493cc8: jne 0x493cb5
493cca: jmp 0x493cb0
493ccc: nop dword ptr [rax]
493cd0: mov r13, qword ptr [r12 + 0x30]
493cd5: test r13, r13
493cd8: je 0x493d3e
493cda: mov r14, qword ptr [r13 + 0x20]
493cde: test r14, r14
493ce1: je 0x493d58
493ce3: mov r15, qword ptr [r14 + 0x20]
493ce7: test r15, r15
493cea: je 0x4943a0
493cf0: mov rdi, qword ptr [r15 + 0x20]
493cf4: test rdi, rdi
493cf7: je 0x493cfe
493cf9: call 0x4935c0
493cfe: mov rdi, qword ptr [r15 + 0x30]
493d02: test rdi, rdi
493d05: je 0x493d19
493d07: call 0x4935c0
493d0c: jmp 0x493d19
493d0e: nop 
493d10: test r15, r15
493d13: je 0x4943a0
493d19: mov rdi, r15
493d1c: mov r15, qword ptr [r15 + 0x28]
493d20: mov rax, qword ptr [rdi + 0x18]
493d24: cmp byte ptr [rax], 0x2f
493d27: jne 0x493d10
493d29: call 0x426a00
493d2e: jmp 0x493d10
493d30: call 0x426a00
493d35: test r12, r12
493d38: je 0x493830
493d3e: mov rdi, r12
493d41: mov r12, qword ptr [r12 + 0x28]
493d46: mov rax, qword ptr [rdi + 0x18]
493d4a: cmp byte ptr [rax], 0x2f
493d4d: jne 0x493d35
493d4f: jmp 0x493d30
493d51: nop dword ptr [rax]
493d58: mov r14, qword ptr [r13 + 0x30]
493d5c: test r14, r14
493d5f: je 0x493dba
493d61: mov r15, qword ptr [r14 + 0x20]
493d65: test r15, r15
493d68: je 0x494020
493d6e: mov rdi, qword ptr [r15 + 0x20]
493d72: test rdi, rdi
493d75: je 0x493d7c
493d77: call 0x4935c0
493d7c: mov rdi, qword ptr [r15 + 0x30]
493d80: test rdi, rdi
493d83: je 0x493d99
493d85: call 0x4935c0
493d8a: jmp 0x493d99
493d8c: nop dword ptr [rax]
493d90: test r15, r15
493d93: je 0x494020
493d99: mov rdi, r15
493d9c: mov r15, qword ptr [r15 + 0x28]
493da0: mov rax, qword ptr [rdi + 0x18]
493da4: cmp byte ptr [rax], 0x2f
493da7: jne 0x493d90
493da9: call 0x426a00
493dae: jmp 0x493d90
493db0: call 0x426a00
493db5: test r13, r13
493db8: je 0x493d3e
493dba: mov rdi, r13
493dbd: mov r13, qword ptr [r13 + 0x28]
493dc1: mov rax, qword ptr [rdi + 0x18]
493dc5: cmp byte ptr [rax], 0x2f
493dc8: jne 0x493db5
493dca: jmp 0x493db0
493dcc: nop dword ptr [rax]
493dd0: mov r13, qword ptr [r12 + 0x30]
493dd5: test r13, r13
493dd8: je 0x493e3e
493dda: mov r14, qword ptr [r13 + 0x20]
493dde: test r14, r14
493de1: je 0x493e58
493de3: mov r15, qword ptr [r14 + 0x20]
493de7: test r15, r15
493dea: je 0x4941e0
493df0: mov rdi, qword ptr [r15 + 0x20]
493df4: test rdi, rdi
493df7: je 0x493dfe
493df9: call 0x4935c0
493dfe: mov rdi, qword ptr [r15 + 0x30]
493e02: test rdi, rdi
493e05: je 0x493e19
493e07: call 0x4935c0
493e0c: jmp 0x493e19
493e0e: nop 
493e10: test r15, r15
493e13: je 0x4941e0
493e19: mov rdi, r15
493e1c: mov r15, qword ptr [r15 + 0x28]
493e20: mov rax, qword ptr [rdi + 0x18]
493e24: cmp byte ptr [rax], 0x2f
493e27: jne 0x493e10
493e29: call 0x426a00
493e2e: jmp 0x493e10
493e30: call 0x426a00
493e35: test r12, r12
493e38: je 0x4937a0
493e3e: mov rdi, r12
493e41: mov r12, qword ptr [r12 + 0x28]
493e46: mov rax, qword ptr [rdi + 0x18]
493e4a: cmp byte ptr [rax], 0x2f
493e4d: jne 0x493e35
493e4f: jmp 0x493e30
493e51: nop dword ptr [rax]
493e58: mov r14, qword ptr [r13 + 0x30]
493e5c: test r14, r14
493e5f: je 0x493eba
493e61: mov r15, qword ptr [r14 + 0x20]
493e65: test r15, r15
493e68: je 0x494560
493e6e: mov rdi, qword ptr [r15 + 0x20]
493e72: test rdi, rdi
493e75: je 0x493e7c
493e77: call 0x4935c0
493e7c: mov rdi, qword ptr [r15 + 0x30]
493e80: test rdi, rdi
493e83: je 0x493e99
493e85: call 0x4935c0
493e8a: jmp 0x493e99
493e8c: nop dword ptr [rax]
493e90: test r15, r15
493e93: je 0x494560
493e99: mov rdi, r15
493e9c: mov r15, qword ptr [r15 + 0x28]
493ea0: mov rax, qword ptr [rdi + 0x18]
493ea4: cmp byte ptr [rax], 0x2f
493ea7: jne 0x493e90
493ea9: call 0x426a00
493eae: jmp 0x493e90
493eb0: call 0x426a00
493eb5: test r13, r13
493eb8: je 0x493e3e
493eba: mov rdi, r13
493ebd: mov r13, qword ptr [r13 + 0x28]
493ec1: mov rax, qword ptr [rdi + 0x18]
493ec5: cmp byte ptr [rax], 0x2f
493ec8: jne 0x493eb5
493eca: jmp 0x493eb0
493ecc: nop dword ptr [rax]
493ed0: mov r15, qword ptr [r14 + 0x30]
493ed4: test r15, r15
493ed7: je 0x493f2e
493ed9: mov rdi, qword ptr [r15 + 0x20]
493edd: test rdi, rdi
493ee0: je 0x493ee7
493ee2: call 0x4935c0
493ee7: mov rdi, qword ptr [r15 + 0x30]
493eeb: test rdi, rdi
493eee: je 0x493f05
493ef0: call 0x4935c0
493ef5: jmp 0x493f05
493ef7: nop word ptr [rax + rax]
493f00: test r15, r15
493f03: je 0x493f2e
493f05: mov rdi, r15
493f08: mov r15, qword ptr [r15 + 0x28]
493f0c: mov rax, qword ptr [rdi + 0x18]
493f10: cmp byte ptr [rax], 0x2f
493f13: jne 0x493f00
493f15: call 0x426a00
493f1a: jmp 0x493f00
493f1c: nop dword ptr [rax]
493f20: call 0x426a00
493f25: test r14, r14
493f28: je 0x493a50
493f2e: mov rdi, r14
493f31: mov r14, qword ptr [r14 + 0x28]
493f35: mov rax, qword ptr [rdi + 0x18]
493f39: cmp byte ptr [rax], 0x2f
493f3c: jne 0x493f25
493f3e: jmp 0x493f20
493f40: mov r15, qword ptr [r14 + 0x30]
493f44: test r15, r15
493f47: je 0x493f9e
493f49: mov rdi, qword ptr [r15 + 0x20]
493f4d: test rdi, rdi
493f50: je 0x493f57
493f52: call 0x4935c0
493f57: mov rdi, qword ptr [r15 + 0x30]
493f5b: test rdi, rdi
493f5e: je 0x493f75
493f60: call 0x4935c0
493f65: jmp 0x493f75
493f67: nop word ptr [rax + rax]
493f70: test r15, r15
493f73: je 0x493f9e
493f75: mov rdi, r15
493f78: mov r15, qword ptr [r15 + 0x28]
493f7c: mov rax, qword ptr [rdi + 0x18]
493f80: cmp byte ptr [rax], 0x2f
493f83: jne 0x493f70
493f85: call 0x426a00
493f8a: jmp 0x493f70
493f8c: nop dword ptr [rax]
493f90: call 0x426a00
493f95: test r14, r14
493f98: je 0x493bba
493f9e: mov rdi, r14
493fa1: mov r14, qword ptr [r14 + 0x28]
493fa5: mov rax, qword ptr [rdi + 0x18]
493fa9: cmp byte ptr [rax], 0x2f
493fac: jne 0x493f95
493fae: jmp 0x493f90
493fb0: mov r15, qword ptr [r14 + 0x30]
493fb4: test r15, r15
493fb7: je 0x49400e
493fb9: mov rdi, qword ptr [r15 + 0x20]
493fbd: test rdi, rdi
493fc0: je 0x493fc7
493fc2: call 0x4935c0
493fc7: mov rdi, qword ptr [r15 + 0x30]
493fcb: test rdi, rdi
493fce: je 0x493fe5
493fd0: call 0x4935c0
493fd5: jmp 0x493fe5
493fd7: nop word ptr [rax + rax]
493fe0: test r15, r15
493fe3: je 0x49400e
493fe5: mov rdi, r15
493fe8: mov r15, qword ptr [r15 + 0x28]
493fec: mov rax, qword ptr [rdi + 0x18]
493ff0: cmp byte ptr [rax], 0x2f
493ff3: jne 0x493fe0
493ff5: call 0x426a00
493ffa: jmp 0x493fe0
493ffc: nop dword ptr [rax]
494000: call 0x426a00
494005: test r14, r14
494008: je 0x4939be
49400e: mov rdi, r14
494011: mov r14, qword ptr [r14 + 0x28]
494015: mov rax, qword ptr [rdi + 0x18]
494019: cmp byte ptr [rax], 0x2f
49401c: jne 0x494005
49401e: jmp 0x494000
494020: mov r15, qword ptr [r14 + 0x30]
494024: test r15, r15
494027: je 0x49407e
494029: mov rdi, qword ptr [r15 + 0x20]
49402d: test rdi, rdi
494030: je 0x494037
494032: call 0x4935c0
494037: mov rdi, qword ptr [r15 + 0x30]
49403b: test rdi, rdi
49403e: je 0x494055
494040: call 0x4935c0
494045: jmp 0x494055
494047: nop word ptr [rax + rax]
494050: test r15, r15
494053: je 0x49407e
494055: mov rdi, r15
494058: mov r15, qword ptr [r15 + 0x28]
49405c: mov rax, qword ptr [rdi + 0x18]
494060: cmp byte ptr [rax], 0x2f
494063: jne 0x494050
494065: call 0x426a00
49406a: jmp 0x494050
49406c: nop dword ptr [rax]
494070: call 0x426a00
494075: test r14, r14
494078: je 0x493dba
49407e: mov rdi, r14
494081: mov r14, qword ptr [r14 + 0x28]
494085: mov rax, qword ptr [rdi + 0x18]
494089: cmp byte ptr [rax], 0x2f
49408c: jne 0x494075
49408e: jmp 0x494070
494090: mov r15, qword ptr [r14 + 0x30]
494094: test r15, r15
494097: je 0x4940ee
494099: mov rdi, qword ptr [r15 + 0x20]
49409d: test rdi, rdi
4940a0: je 0x4940a7
4940a2: call 0x4935c0
4940a7: mov rdi, qword ptr [r15 + 0x30]
4940ab: test rdi, rdi
4940ae: je 0x4940c5
4940b0: call 0x4935c0
4940b5: jmp 0x4940c5
4940b7: nop word ptr [rax + rax]
4940c0: test r15, r15
4940c3: je 0x4940ee
4940c5: mov rdi, r15
4940c8: mov r15, qword ptr [r15 + 0x28]
4940cc: mov rax, qword ptr [rdi + 0x18]
4940d0: cmp byte ptr [rax], 0x2f
4940d3: jne 0x4940c0
4940d5: call 0x426a00
4940da: jmp 0x4940c0
4940dc: nop dword ptr [rax]
4940e0: call 0x426a00
4940e5: test r14, r14
4940e8: je 0x4938d0
4940ee: mov rdi, r14
4940f1: mov r14, qword ptr [r14 + 0x28]
4940f5: mov rax, qword ptr [rdi + 0x18]
4940f9: cmp byte ptr [rax], 0x2f
4940fc: jne 0x4940e5
4940fe: jmp 0x4940e0
494100: mov r15, qword ptr [r14 + 0x30]
494104: test r15, r15
494107: je 0x49415e
494109: mov rdi, qword ptr [r15 + 0x20]
49410d: test rdi, rdi
494110: je 0x494117
494112: call 0x4935c0
494117: mov rdi, qword ptr [r15 + 0x30]
49411b: test rdi, rdi
49411e: je 0x494135
494120: call 0x4935c0
494125: jmp 0x494135
494127: nop word ptr [rax + rax]
494130: test r15, r15
494133: je 0x49415e
494135: mov rdi, r15
494138: mov r15, qword ptr [r15 + 0x28]
49413c: mov rax, qword ptr [rdi + 0x18]
494140: cmp byte ptr [rax], 0x2f
494143: jne 0x494130
494145: call 0x426a00
49414a: jmp 0x494130
49414c: nop dword ptr [rax]
494150: call 0x426a00
494155: test r14, r14
494158: je 0x493cba
49415e: mov rdi, r14
494161: mov r14, qword ptr [r14 + 0x28]
494165: mov rax, qword ptr [rdi + 0x18]
494169: cmp byte ptr [rax], 0x2f
49416c: jne 0x494155
49416e: jmp 0x494150
494170: mov r15, qword ptr [r14 + 0x30]
494174: test r15, r15
494177: je 0x4941ce
494179: mov rdi, qword ptr [r15 + 0x20]
49417d: test rdi, rdi
494180: je 0x494187
494182: call 0x4935c0
494187: mov rdi, qword ptr [r15 + 0x30]
49418b: test rdi, rdi
49418e: je 0x4941a5
494190: call 0x4935c0
494195: jmp 0x4941a5
494197: nop word ptr [rax + rax]
4941a0: test r15, r15
4941a3: je 0x4941ce
4941a5: mov rdi, r15
4941a8: mov r15, qword ptr [r15 + 0x28]
4941ac: mov rax, qword ptr [rdi + 0x18]
4941b0: cmp byte ptr [rax], 0x2f
4941b3: jne 0x4941a0
4941b5: call 0x426a00
4941ba: jmp 0x4941a0
4941bc: nop dword ptr [rax]
4941c0: call 0x426a00
4941c5: test r14, r14
4941c8: je 0x493abe
4941ce: mov rdi, r14
4941d1: mov r14, qword ptr [r14 + 0x28]
4941d5: mov rax, qword ptr [rdi + 0x18]
4941d9: cmp byte ptr [rax], 0x2f
4941dc: jne 0x4941c5
4941de: jmp 0x4941c0
4941e0: mov r15, qword ptr [r14 + 0x30]
4941e4: test r15, r15
4941e7: je 0x49423e
4941e9: mov rdi, qword ptr [r15 + 0x20]
4941ed: test rdi, rdi
4941f0: je 0x4941f7
4941f2: call 0x4935c0
4941f7: mov rdi, qword ptr [r15 + 0x30]
4941fb: test rdi, rdi
4941fe: je 0x494215
494200: call 0x4935c0
494205: jmp 0x494215
494207: nop word ptr [rax + rax]
494210: test r15, r15
494213: je 0x49423e
494215: mov rdi, r15
494218: mov r15, qword ptr [r15 + 0x28]
49421c: mov rax, qword ptr [rdi + 0x18]
494220: cmp byte ptr [rax], 0x2f
494223: jne 0x494210
494225: call 0x426a00
49422a: jmp 0x494210
49422c: nop dword ptr [rax]
494230: call 0x426a00
494235: test r14, r14
494238: je 0x493e58
49423e: mov rdi, r14
494241: mov r14, qword ptr [r14 + 0x28]
494245: mov rax, qword ptr [rdi + 0x18]
494249: cmp byte ptr [rax], 0x2f
49424c: jne 0x494235
49424e: jmp 0x494230
494250: mov r15, qword ptr [r14 + 0x30]
494254: test r15, r15
494257: je 0x4942ae
494259: mov rdi, qword ptr [r15 + 0x20]
49425d: test rdi, rdi
494260: je 0x494267
494262: call 0x4935c0
494267: mov rdi, qword ptr [r15 + 0x30]
49426b: test rdi, rdi
49426e: je 0x494285
494270: call 0x4935c0
494275: jmp 0x494285
494277: nop word ptr [rax + rax]
494280: test r15, r15
494283: je 0x4942ae
494285: mov rdi, r15
494288: mov r15, qword ptr [r15 + 0x28]
49428c: mov rax, qword ptr [rdi + 0x18]
494290: cmp byte ptr [rax], 0x2f
494293: jne 0x494280
494295: call 0x426a00
49429a: jmp 0x494280
49429c: nop dword ptr [rax]
4942a0: call 0x426a00
4942a5: test r14, r14
4942a8: je 0x493950
4942ae: mov rdi, r14
4942b1: mov r14, qword ptr [r14 + 0x28]
4942b5: mov rax, qword ptr [rdi + 0x18]
4942b9: cmp byte ptr [rax], 0x2f
4942bc: jne 0x4942a5
4942be: jmp 0x4942a0
4942c0: mov r15, qword ptr [r14 + 0x30]
4942c4: test r15, r15
4942c7: je 0x49431e
4942c9: mov rdi, qword ptr [r15 + 0x20]
4942cd: test rdi, rdi
4942d0: je 0x4942d7
4942d2: call 0x4935c0
4942d7: mov rdi, qword ptr [r15 + 0x30]
4942db: test rdi, rdi
4942de: je 0x4942f5
4942e0: call 0x4935c0
4942e5: jmp 0x4942f5
4942e7: nop word ptr [rax + rax]
4942f0: test r15, r15
4942f3: je 0x49431e
4942f5: mov rdi, r15
4942f8: mov r15, qword ptr [r15 + 0x28]
4942fc: mov rax, qword ptr [rdi + 0x18]
494300: cmp byte ptr [rax], 0x2f
494303: jne 0x4942f0
494305: call 0x426a00
49430a: jmp 0x4942f0
49430c: nop dword ptr [rax]
494310: call 0x426a00
494315: test r14, r14
494318: je 0x493c58
49431e: mov rdi, r14
494321: mov r14, qword ptr [r14 + 0x28]
494325: mov rax, qword ptr [rdi + 0x18]
494329: cmp byte ptr [rax], 0x2f
49432c: jne 0x494315
49432e: jmp 0x494310
494330: mov r15, qword ptr [r14 + 0x30]
494334: test r15, r15
494337: je 0x49438e
494339: mov rdi, qword ptr [r15 + 0x20]
49433d: test rdi, rdi
494340: je 0x494347
494342: call 0x4935c0
494347: mov rdi, qword ptr [r15 + 0x30]
49434b: test rdi, rdi
49434e: je 0x494365
494350: call 0x4935c0
494355: jmp 0x494365
494357: nop word ptr [rax + rax]
494360: test r15, r15
494363: je 0x49438e
494365: mov rdi, r15
494368: mov r15, qword ptr [r15 + 0x28]
49436c: mov rax, qword ptr [rdi + 0x18]
494370: cmp byte ptr [rax], 0x2f
494373: jne 0x494360
494375: call 0x426a00
49437a: jmp 0x494360
49437c: nop dword ptr [rax]
494380: call 0x426a00
494385: test r14, r14
494388: je 0x493a3e
49438e: mov rdi, r14
494391: mov r14, qword ptr [r14 + 0x28]
494395: mov rax, qword ptr [rdi + 0x18]
494399: cmp byte ptr [rax], 0x2f
49439c: jne 0x494385
49439e: jmp 0x494380
4943a0: mov r15, qword ptr [r14 + 0x30]
4943a4: test r15, r15
4943a7: je 0x4943fe
4943a9: mov rdi, qword ptr [r15 + 0x20]
4943ad: test rdi, rdi
4943b0: je 0x4943b7
4943b2: call 0x4935c0
4943b7: mov rdi, qword ptr [r15 + 0x30]
4943bb: test rdi, rdi
4943be: je 0x4943d5
4943c0: call 0x4935c0
4943c5: jmp 0x4943d5
4943c7: nop word ptr [rax + rax]
4943d0: test r15, r15
4943d3: je 0x4943fe
4943d5: mov rdi, r15
4943d8: mov r15, qword ptr [r15 + 0x28]
4943dc: mov rax, qword ptr [rdi + 0x18]
4943e0: cmp byte ptr [rax], 0x2f
4943e3: jne 0x4943d0
4943e5: call 0x426a00
4943ea: jmp 0x4943d0
4943ec: nop dword ptr [rax]
4943f0: call 0x426a00
4943f5: test r14, r14
4943f8: je 0x493d58
4943fe: mov rdi, r14
494401: mov r14, qword ptr [r14 + 0x28]
494405: mov rax, qword ptr [rdi + 0x18]
494409: cmp byte ptr [rax], 0x2f
49440c: jne 0x4943f5
49440e: jmp 0x4943f0
494410: mov r15, qword ptr [r14 + 0x30]
494414: test r15, r15
494417: je 0x49446e
494419: mov rdi, qword ptr [r15 + 0x20]
49441d: test rdi, rdi
494420: je 0x494427
494422: call 0x4935c0
494427: mov rdi, qword ptr [r15 + 0x30]
49442b: test rdi, rdi
49442e: je 0x494445
494430: call 0x4935c0
494435: jmp 0x494445
494437: nop word ptr [rax + rax]
494440: test r15, r15
494443: je 0x49446e
494445: mov rdi, r15
494448: mov r15, qword ptr [r15 + 0x28]
49444c: mov rax, qword ptr [rdi + 0x18]
494450: cmp byte ptr [rax], 0x2f
494453: jne 0x494440
494455: call 0x426a00
49445a: jmp 0x494440
49445c: nop dword ptr [rax]
494460: call 0x426a00
494465: test r14, r14
494468: je 0x49393e
49446e: mov rdi, r14
494471: mov r14, qword ptr [r14 + 0x28]
494475: mov rax, qword ptr [rdi + 0x18]
494479: cmp byte ptr [rax], 0x2f
49447c: jne 0x494465
49447e: jmp 0x494460
494480: mov r15, qword ptr [r14 + 0x30]
494484: test r15, r15
494487: je 0x4944de
494489: mov rdi, qword ptr [r15 + 0x20]
49448d: test rdi, rdi
494490: je 0x494497
494492: call 0x4935c0
494497: mov rdi, qword ptr [r15 + 0x30]
49449b: test rdi, rdi
49449e: je 0x4944b5
4944a0: call 0x4935c0
4944a5: jmp 0x4944b5
4944a7: nop word ptr [rax + rax]
4944b0: test r15, r15
4944b3: je 0x4944de
4944b5: mov rdi, r15
4944b8: mov r15, qword ptr [r15 + 0x28]
4944bc: mov rax, qword ptr [rdi + 0x18]
4944c0: cmp byte ptr [rax], 0x2f
4944c3: jne 0x4944b0
4944c5: call 0x426a00
4944ca: jmp 0x4944b0
4944cc: nop dword ptr [rax]
4944d0: call 0x426a00
4944d5: test r14, r14
4944d8: je 0x493b58
4944de: mov rdi, r14
4944e1: mov r14, qword ptr [r14 + 0x28]
4944e5: mov rax, qword ptr [rdi + 0x18]
4944e9: cmp byte ptr [rax], 0x2f
4944ec: jne 0x4944d5
4944ee: jmp 0x4944d0
4944f0: mov r15, qword ptr [r14 + 0x30]
4944f4: test r15, r15
4944f7: je 0x49454e
4944f9: mov rdi, qword ptr [r15 + 0x20]
4944fd: test rdi, rdi
494500: je 0x494507
494502: call 0x4935c0
494507: mov rdi, qword ptr [r15 + 0x30]
49450b: test rdi, rdi
49450e: je 0x494525
494510: call 0x4935c0
494515: jmp 0x494525
494517: nop word ptr [rax + rax]
494520: test r15, r15
494523: je 0x49454e
494525: mov rdi, r15
494528: mov r15, qword ptr [r15 + 0x28]
49452c: mov rax, qword ptr [rdi + 0x18]
494530: cmp byte ptr [rax], 0x2f
494533: jne 0x494520
494535: call 0x426a00
49453a: jmp 0x494520
49453c: nop dword ptr [rax]
494540: call 0x426a00
494545: test r14, r14
494548: je 0x4939d0
49454e: mov rdi, r14
494551: mov r14, qword ptr [r14 + 0x28]
494555: mov rax, qword ptr [rdi + 0x18]
494559: cmp byte ptr [rax], 0x2f
49455c: jne 0x494545
49455e: jmp 0x494540
494560: mov r15, qword ptr [r14 + 0x30]
494564: test r15, r15
494567: je 0x4945be
494569: mov rdi, qword ptr [r15 + 0x20]
49456d: test rdi, rdi
494570: je 0x494577
494572: call 0x4935c0
494577: mov rdi, qword ptr [r15 + 0x30]
49457b: test rdi, rdi
49457e: je 0x494595
494580: call 0x4935c0
494585: jmp 0x494595
494587: nop word ptr [rax + rax]
494590: test r15, r15
494593: je 0x4945be
494595: mov rdi, r15
494598: mov r15, qword ptr [r15 + 0x28]
49459c: mov rax, qword ptr [rdi + 0x18]
4945a0: cmp byte ptr [rax], 0x2f
4945a3: jne 0x494590
4945a5: call 0x426a00
4945aa: jmp 0x494590
4945ac: nop dword ptr [rax]
4945b0: call 0x426a00
4945b5: test r14, r14
4945b8: je 0x493eba
4945be: mov rdi, r14
4945c1: mov r14, qword ptr [r14 + 0x28]
4945c5: mov rax, qword ptr [rdi + 0x18]
4945c9: cmp byte ptr [rax], 0x2f
4945cc: jne 0x4945b5
4945ce: jmp 0x4945b0
4945d0: endbr64 
4945d4: mov rdi, qword ptr [rip + 0x2f2f5]
4945db: test rdi, rdi
4945de: je 0x4945f8
4945e0: lea rax, [rip + 0x5bb9]
4945e7: cmp rdi, rax
4945ea: je 0x4945f8
4945ec: jmp 0x426a00
4945f1: nop dword ptr [rax]
4945f8: ret 
4945f9: nop dword ptr [rax]
494600: endbr64 
494604: mov eax, dword ptr [rip + 0x2e7d6]
49460a: mov rdi, qword ptr [rip + 0x2e7df]
494611: test eax, eax
494613: jne 0x494638
494615: test rdi, rdi
494618: je 0x494630
49461a: mov rsi, qword ptr [rip + 0x2e7c7]
494621: jmp 0x451c70
494626: nop word ptr cs:[rax + rax]
494630: ret 
494631: nop dword ptr [rax]
494638: jmp 0x426a00
49463d: nop dword ptr [rax]
494640: endbr64 
494644: push rbp
494645: mov rbp, rdi
494648: mov rdi, qword ptr [rdi + 0x10]
49464c: test rdi, rdi
49464f: je 0x494656
494651: call 0x4847c0
494656: mov rdi, rbp
494659: pop rbp
49465a: jmp 0x426a00
49465f: nop 
494660: endbr64 
494664: sub rsp, 8
494668: mov rdi, qword ptr [rip + 0x2e789]
49466f: lea rsi, [rip - 0x36]
494676: call 0x452ac0
49467b: mov qword ptr [rip + 0x2e772], 0
494686: add rsp, 8
49468a: ret 
49468b: nop dword ptr [rax + rax]
494690: push r14
494692: lea rax, [rip + 0x2f247]
494699: push r13
49469b: push r12
49469d: mov r12, rdx
4946a0: push rbp
4946a1: push rbx
4946a2: movsxd rbx, edi
4946a5: mov rbp, qword ptr [rax + rbx*8]
4946a9: cmp rdx, rsi
4946ac: je 0x4946f9
4946ae: lea rax, [rip + 0x2b60b]
4946b5: lea r13, [rip + 0x2d2c4]
4946bc: cmp qword ptr [rax + rbx*8], 0
4946c1: je 0x4946da
4946c3: lea rax, [rip + 0x2b576]
4946ca: mov qword ptr [r13 + rbx*8], rdx
4946cf: mov rax, qword ptr [rax + rbx*8]
4946d3: test rax, rax
4946d6: je 0x4946da
4946d8: call rax
4946da: add rbx, 0x10
4946de: lea r14, [rip + 0x5323]
4946e5: mov rdi, qword ptr [r13 + rbx*8]
4946ea: cmp rdi, r14
4946ed: je 0x4946f9
4946ef: call 0x426a00
4946f4: mov qword ptr [r13 + rbx*8], r14
4946f9: test rbp, rbp
4946fc: jne 0x494703
4946fe: jmp 0x494730
494700: mov rbp, rbx
494703: mov rdi, qword ptr [rbp + 0x10]
494707: test rdi, rdi
49470a: je 0x494716
49470c: cmp r12, rdi
49470f: je 0x494716
494711: call 0x464770
494716: mov rdi, qword ptr [rbp]
49471a: mov rbx, qword ptr [rbp + 0x18]
49471e: call 0x426a00
494723: mov rdi, rbp
494726: call 0x426a00
49472b: test rbx, rbx
49472e: jne 0x494700
494730: pop rbx
494731: pop rbp
494732: pop r12
494734: pop r13
494736: pop r14
494738: ret 
494739: nop dword ptr [rax]
494740: endbr64 
494744: cmp qword ptr [rip + 0x2b7ac], 0
49474c: push rbx
49474d: je 0x49476e
49474f: mov rax, 0xffffffffffb42ee0
494756: mov rdx, 0x4bf240
49475d: mov edi, 3
494762: mov rax, qword ptr fs:[rax]
494766: mov rsi, qword ptr [rax]
494769: call 0x494690
49476e: cmp qword ptr [rip + 0x2b7e2], 0
494776: je 0x494794
494778: mov rax, 0xffffffffffffffa0
49477f: mov rdx, 0x4bd8c0
494786: xor edi, edi
494788: mov rax, qword ptr fs:[rax]
49478c: mov rsi, qword ptr [rax]
49478f: call 0x494690
494794: cmp qword ptr [rip + 0x2b824], 0
49479c: je 0x4947bd
49479e: mov rax, 0xffffffffffffffb8
4947a5: mov rdx, 0x4be780
4947ac: mov edi, 4
4947b1: mov rax, qword ptr fs:[rax]
4947b5: mov rsi, qword ptr [rax]
4947b8: call 0x494690
4947bd: cmp qword ptr [rip + 0x2b74b], 0
4947c5: je 0x4947e6
4947c7: mov rax, 0xffffffffffffffa8
4947ce: mov rdx, 0x4be940
4947d5: mov edi, 1
4947da: mov rax, qword ptr fs:[rax]
4947de: mov rsi, qword ptr [rax]
4947e1: call 0x494690
4947e6: cmp qword ptr [rip + 0x2b79a], 0
4947ee: je 0x49480f
4947f0: mov rax, 0xffffffffffb42ee0
4947f7: mov rdx, 0x4be9c0
4947fe: mov edi, 2
494803: mov rax, qword ptr fs:[rax]
494807: mov rsi, qword ptr [rax]
49480a: call 0x494690
49480f: cmp qword ptr [rip + 0x2b781], 0
494817: je 0x494838
494819: mov rax, 0xffffffffffb42ee0
494820: mov rdx, 0x4be700
494827: mov edi, 5
49482c: mov rax, qword ptr fs:[rax]
494830: mov rsi, qword ptr [rax]
494833: call 0x494690
494838: cmp qword ptr [rip + 0x2b750], 0
494840: je 0x494861
494842: mov rax, 0xffffffffffb42ee0
494849: mov rdx, 0x4bef00
494850: mov edi, 7
494855: mov rax, qword ptr fs:[rax]
494859: mov rsi, qword ptr [rax]
49485c: call 0x494690
494861: cmp qword ptr [rip + 0x2b6e7], 0
494869: je 0x49488a
49486b: mov rax, 0xffffffffffb42ee0
494872: mov rdx, 0x4bef60
494879: mov edi, 8
49487e: mov rax, qword ptr fs:[rax]
494882: mov rsi, qword ptr [rax]
494885: call 0x494690
49488a: cmp qword ptr [rip + 0x2b736], 0
494892: je 0x4948b3
494894: mov rax, 0xffffffffffb42ee0
49489b: mov rdx, 0x4befe0
4948a2: mov edi, 9
4948a7: mov rax, qword ptr fs:[rax]
4948ab: mov rsi, qword ptr [rax]
4948ae: call 0x494690
4948b3: cmp qword ptr [rip + 0x2b67d], 0
4948bb: je 0x4948dc
4948bd: mov rax, 0xffffffffffb42ee0
4948c4: mov rdx, 0x4bf0a0
4948cb: mov edi, 0xa
4948d0: mov rax, qword ptr fs:[rax]
4948d4: mov rsi, qword ptr [rax]
4948d7: call 0x494690
4948dc: cmp qword ptr [rip + 0x2b6c4], 0
4948e4: je 0x494905
4948e6: mov rax, 0xffffffffffb42ee0
4948ed: mov rdx, 0x4bf120
4948f4: mov edi, 0xb
4948f9: mov rax, qword ptr fs:[rax]
4948fd: mov rsi, qword ptr [rax]
494900: call 0x494690
494905: cmp qword ptr [rip + 0x2b613], 0
49490d: je 0x49492e
49490f: mov rax, 0xffffffffffb42ee0
494916: mov rdx, 0x4bf180
49491d: mov edi, 0xc
494922: mov rax, qword ptr fs:[rax]
494926: mov rsi, qword ptr [rax]
494929: call 0x494690
49492e: mov rdi, qword ptr [rip + 0x2d0fb]
494935: lea rbx, [rip + 0x50cc]
49493c: cmp rdi, rbx
49493f: je 0x49494d
494941: call 0x426a00
494946: mov qword ptr [rip + 0x2d0e3], rbx
49494d: pop rbx
49494e: jmp 0x494960
494953: nop word ptr cs:[rax + rax]
49495d: nop dword ptr [rax]
494960: endbr64 
494964: push r12
494966: mov r12, qword ptr [rip + 0x2e4d3]
49496d: push rbp
49496e: push rbx
49496f: test r12, r12
494972: je 0x4949cb
494974: nop dword ptr [rax]
494978: mov rbp, r12
49497b: xor ebx, ebx
49497d: mov r12, qword ptr [r12]
494981: mov rdi, qword ptr [rbp + 8]
494985: call 0x426a00
49498a: jmp 0x494994
49498c: nop dword ptr [rax]
494990: add rbx, 1
494994: cmp rbx, 6
494998: je 0x494990
49499a: mov rdi, qword ptr [rbp + rbx*8 + 0x10]
49499f: test rdi, rdi
4949a2: je 0x4949b9
4949a4: mov rax, qword ptr [rdi + 0x20]
4949a8: test rax, rax
4949ab: je 0x4949b4
4949ad: call rax
4949af: mov rdi, qword ptr [rbp + rbx*8 + 0x10]
4949b4: call 0x426a00
4949b9: cmp ebx, 0xc
4949bc: jne 0x494990
4949be: mov rdi, rbp
4949c1: call 0x426a00
4949c6: test r12, r12
4949c9: jne 0x494978
4949cb: mov rbx, qword ptr [rip + 0x2e536]
4949d2: mov qword ptr [rip + 0x2e463], 0
4949dd: test rbx, rbx
4949e0: je 0x494a30
4949e2: lea rax, [rip + 0x2e507]
4949e9: cmp rbx, rax
4949ec: jne 0x494a35
4949ee: mov esi, dword ptr [rbx + 0xc]
4949f1: mov rdi, qword ptr [rbx]
4949f4: mov qword ptr [rip + 0x2e509], 0
4949ff: call 0x451c70
494a04: mov rbx, qword ptr [rbx + 0x10]
494a08: test rbx, rbx
494a0b: je 0x494a30
494a0d: nop dword ptr [rax]
494a10: mov rbp, rbx
494a13: mov rbx, qword ptr [rbx + 0x10]
494a17: mov rdi, qword ptr [rbp]
494a1b: mov esi, dword ptr [rbp + 0xc]
494a1e: call 0x451c70
494a23: mov rdi, rbp
494a26: call 0x426a00
494a2b: test rbx, rbx
494a2e: jne 0x494a10
494a30: pop rbx
494a31: pop rbp
494a32: pop r12
494a34: ret 
494a35: lea rcx, [rip + 0x66a4]
494a3c: mov edx, 0x216
494a41: lea rsi, [rip + 0x6648]
494a48: lea rdi, [rip + 0x664f]
494a4f: call 0x4032a0
494a54: nop word ptr cs:[rax + rax]
494a5e: nop 
494a60: endbr64 
494a64: sub rsp, 8
494a68: mov eax, dword ptr fs:[0x18]
494a70: test eax, eax
494a72: jne 0x494b28
494a78: mov edx, 1
494a7d: cmpxchg dword ptr [rip + 0x2e49c], edx
494a84: mov rdi, qword ptr [rip + 0x2e24d]
494a8b: cmp qword ptr [rip + 0x2e47e], rdi
494a92: jne 0x494a99
494a94: test rdi, rdi
494a97: jne 0x494ae0
494a99: mov qword ptr [rip + 0x2e234], 0
494aa4: mov eax, dword ptr fs:[0x18]
494aac: test eax, eax
494aae: jne 0x494af8
494ab0: sub dword ptr [rip + 0x2e469], 1
494ab7: mov rsi, 0x426a00
494abe: mov rdi, qword ptr [rip + 0x2e453]
494ac5: call 0x452ac0
494aca: mov qword ptr [rip + 0x2e443], 0
494ad5: add rsp, 8
494ad9: ret 
494ada: nop word ptr [rax + rax]
494ae0: call 0x426a00
494ae5: mov qword ptr [rip + 0x2e420], 0
494af0: jmp 0x494a99
494af2: nop word ptr [rax + rax]
494af8: xor eax, eax
494afa: xchg dword ptr [rip + 0x2e420], eax
494b00: cmp eax, 1
494b03: jle 0x494ab7
494b05: xor r10d, r10d
494b08: mov edx, 1
494b0d: mov esi, 0x81
494b12: mov eax, 0xca
494b17: lea rdi, [rip + 0x2e402]
494b1e: syscall 
494b20: jmp 0x494ab7
494b22: nop word ptr [rax + rax]
494b28: xor eax, eax
494b2a: mov edx, 1
494b2f: lock cmpxchg dword ptr [rip + 0x2e3e9], edx
494b37: je 0x494a84
494b3d: lea rdi, [rip + 0x2e3dc]
494b44: call 0x421250
494b49: jmp 0x494a84
494b4e: nop 
494b50: endbr64 
494b54: mov rdi, qword ptr [rip + 0x2edf5]
494b5b: test rdi, rdi
494b5e: je 0x494baf
494b60: push rbp
494b61: xor ebp, ebp
494b63: push rbx
494b64: sub rsp, 8
494b68: nop dword ptr [rax + rax]
494b70: mov rbx, qword ptr [rdi + rbp]
494b74: test rbx, rbx
494b77: je 0x494b97
494b79: nop dword ptr [rax]
494b80: mov rdi, rbx
494b83: mov rbx, qword ptr [rbx]
494b86: call 0x426a00
494b8b: test rbx, rbx
494b8e: jne 0x494b80
494b90: mov rdi, qword ptr [rip + 0x2edb9]
494b97: add rbp, 8
494b9b: cmp rbp, 0x7f8
494ba2: jne 0x494b70
494ba4: add rsp, 8
494ba8: pop rbx
494ba9: pop rbp
494baa: jmp 0x426a00
494baf: ret 
494bb0: push rbx
494bb1: mov rbx, rdi
494bb4: mov eax, 1
494bb9: sub rsp, 0x10
494bbd: mov rdi, qword ptr [rdi]
494bc0: test rdi, rdi
494bc3: je 0x494c02
494bc5: add rdi, 8
494bc9: call 0x494bb0
494bce: test al, al
494bd0: je 0x494c02
494bd2: mov rdi, qword ptr [rbx]
494bd5: mov rsi, qword ptr [rdi]
494bd8: test rsi, rsi
494bdb: je 0x494c10
494bdd: xor edx, edx
494bdf: jmp 0x494bf1
494be1: nop dword ptr [rax]
494be8: add rdx, 1
494bec: cmp rdx, rsi
494bef: je 0x494c10
494bf1: mov rcx, rdx
494bf4: shl rcx, 4
494bf8: cmp qword ptr [rdi + rcx + 0x18], 0
494bfe: je 0x494be8
494c00: xor eax, eax
494c02: add rsp, 0x10
494c06: pop rbx
494c07: ret 
494c08: nop dword ptr [rax + rax]
494c10: mov byte ptr [rsp + 0xf], al
494c14: call 0x426a00
494c19: mov qword ptr [rbx], 0
494c20: movzx eax, byte ptr [rsp + 0xf]
494c25: add rsp, 0x10
494c29: pop rbx
494c2a: ret 
494c2b: nop dword ptr [rax + rax]
494c30: endbr64 
494c34: push r15
494c36: push r14
494c38: push r13
494c3a: push r12
494c3c: push rbp
494c3d: push rbx
494c3e: sub rsp, 8
494c42: mov rbx, qword ptr [rip + 0x2ec17]
494c49: cmp rbx, qword ptr [rip + 0x2ebe8]
494c50: je 0x494c6c
494c52: nop word ptr [rax + rax]
494c58: mov rdi, rbx
494c5b: mov rbx, qword ptr [rbx]
494c5e: call 0x426a00
494c63: cmp qword ptr [rip + 0x2ebce], rbx
494c6a: jne 0x494c58
494c6c: cmp qword ptr [rip + 0x2c4b4], 0
494c74: je 0x494cec
494c76: mov rbp, qword ptr [rip + 0x2c503]
494c7d: test rbp, rbp
494c80: je 0x494cde
494c82: nop word ptr [rax + rax]
494c88: mov rax, qword ptr [rbp + 0x38]
494c8c: mov rbx, qword ptr [rax + 8]
494c90: mov qword ptr [rax + 8], 0
494c98: nop dword ptr [rax + rax]
494ca0: test rbx, rbx
494ca3: je 0x494cbd
494ca5: mov rdi, rbx
494ca8: mov rbx, qword ptr [rbx + 8]
494cac: mov eax, dword ptr [rdi + 0x10]
494caf: test eax, eax
494cb1: jne 0x494ca0
494cb3: call 0x426a00
494cb8: test rbx, rbx
494cbb: jne 0x494ca5
494cbd: test byte ptr [rbp + 0x31e], 1
494cc4: jne 0x494da0
494cca: mov qword ptr [rbp + 0x3c8], 0
494cd5: mov rbp, qword ptr [rbp + 0x18]
494cd9: test rbp, rbp
494cdc: jne 0x494c88
494cde: mov edx, dword ptr [rip + 0x2c4b4]
494ce4: test edx, edx
494ce6: jne 0x494eed
494cec: mov r13, qword ptr [rip + 0x2ea2d]
494cf3: mov rbp, qword ptr [r13 + 8]
494cf7: test rbp, rbp
494cfa: je 0x494d74
494cfc: mov r15, qword ptr [rbp + 8]
494d00: test r15, r15
494d03: je 0x494ddd
494d09: mov r12, qword ptr [r15 + 8]
494d0d: test r12, r12
494d10: je 0x494e21
494d16: mov r14, qword ptr [r12 + 8]
494d1b: test r14, r14
494d1e: je 0x494e77
494d24: mov rax, qword ptr [r14 + 8]
494d28: test rax, rax
494d2b: je 0x494ebb
494d31: lea rdi, [rax + 8]
494d35: call 0x494bb0
494d3a: test al, al
494d3c: je 0x494d74
494d3e: mov rdi, qword ptr [r14 + 8]
494d42: mov rcx, qword ptr [rdi]
494d45: test rcx, rcx
494d48: je 0x494ea9
494d4e: xor eax, eax
494d50: jmp 0x494d65
494d52: nop word ptr [rax + rax]
494d58: add rax, 1
494d5c: cmp rcx, rax
494d5f: je 0x494ea9
494d65: mov rdx, rax
494d68: shl rdx, 4
494d6c: cmp qword ptr [rdi + rdx + 0x18], 0
494d72: je 0x494d58
494d74: mov rdi, qword ptr [rip + 0x2ea9d]
494d7b: mov qword ptr [rip + 0x2ea92], 0
494d86: add rsp, 8
494d8a: pop rbx
494d8b: pop rbp
494d8c: pop r12
494d8e: pop r13
494d90: pop r14
494d92: pop r15
494d94: jmp 0x426a00
494d99: nop dword ptr [rax]
494da0: mov rdi, qword ptr [rbp + 0x3c8]
494da7: call 0x426a00
494dac: mov qword ptr [rbp + 0x3c8], 0
494db7: mov rbp, qword ptr [rbp + 0x18]
494dbb: test rbp, rbp
494dbe: jne 0x494c88
494dc4: jmp 0x494cde
494dc9: mov rdi, r15
494dcc: call 0x426a00
494dd1: mov qword ptr [rbp + 8], 0
494dd9: mov rbp, qword ptr [r13 + 8]
494ddd: mov rcx, qword ptr [rbp]
494de1: test rcx, rcx
494de4: je 0x494e4d
494de6: xor eax, eax
494de8: jmp 0x494df9
494dea: nop word ptr [rax + rax]
494df0: add rax, 1
494df4: cmp rax, rcx
494df7: je 0x494e4d
494df9: mov rdx, rax
494dfc: shl rdx, 4
494e00: cmp qword ptr [rbp + rdx + 0x18], 0
494e06: je 0x494df0
494e08: jmp 0x494d74
494e0d: mov rdi, r12
494e10: call 0x426a00
494e15: mov qword ptr [r15 + 8], 0
494e1d: mov r15, qword ptr [rbp + 8]
494e21: mov rcx, qword ptr [r15]
494e24: test rcx, rcx
494e27: je 0x494dc9
494e29: xor eax, eax
494e2b: jmp 0x494e39
494e2d: nop dword ptr [rax]
494e30: add rax, 1
494e34: cmp rax, rcx
494e37: je 0x494dc9
494e39: mov rdx, rax
494e3c: shl rdx, 4
494e40: cmp qword ptr [r15 + rdx + 0x18], 0
494e46: je 0x494e30
494e48: jmp 0x494d74
494e4d: mov rdi, rbp
494e50: call 0x426a00
494e55: mov qword ptr [r13 + 8], 0
494e5d: jmp 0x494d74
494e62: mov rdi, r14
494e65: call 0x426a00
494e6a: mov qword ptr [r12 + 8], 0
494e73: mov r12, qword ptr [r15 + 8]
494e77: mov rcx, qword ptr [r12]
494e7b: test rcx, rcx
494e7e: je 0x494e0d
494e80: xor eax, eax
494e82: jmp 0x494e95
494e84: nop dword ptr [rax]
494e88: add rax, 1
494e8c: cmp rcx, rax
494e8f: je 0x494e0d
494e95: mov rdx, rax
494e98: shl rdx, 4
494e9c: cmp qword ptr [r12 + rdx + 0x18], 0
494ea2: je 0x494e88
494ea4: jmp 0x494d74
494ea9: call 0x426a00
494eae: mov qword ptr [r14 + 8], 0
494eb6: mov r14, qword ptr [r12 + 8]
494ebb: mov rcx, qword ptr [r14]
494ebe: test rcx, rcx
494ec1: je 0x494e62
494ec3: xor eax, eax
494ec5: jmp 0x494ed9
494ec7: nop word ptr [rax + rax]
494ed0: add rax, 1
494ed4: cmp rcx, rax
494ed7: je 0x494e62
494ed9: mov rdx, rax
494edc: shl rdx, 4
494ee0: cmp qword ptr [r14 + rdx + 0x18], 0
494ee6: je 0x494ed0
494ee8: jmp 0x494d74
494eed: mov rax, qword ptr [rip + 0x2c29c]
494ef4: mov esi, dword ptr [rip + 0x2c25e]
494efa: cmp dword ptr [rax + 8], esi
494efd: jne 0x494cec
494f03: mov rdx, qword ptr [rip + 0x2c246]
494f0a: mov rdi, qword ptr [rax]
494f0d: mov qword ptr [rax], rdx
494f10: mov dword ptr [rip + 0x2c27e], 0
494f1a: call 0x426a00
494f1f: jmp 0x494cec
494f24: endbr64 
494f28: sub rsp, 8
494f2c: add rsp, 8
494f30: ret 